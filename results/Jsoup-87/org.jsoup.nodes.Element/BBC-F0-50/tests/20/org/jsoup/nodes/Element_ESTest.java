/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 30 08:44:27 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PipedWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.UnknownFormatConversionException;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = new Document(":3&[>Hg;\"UdH\bC?|Ph");
      document0.getElementsByAttributeValueMatching(":3&[>Hg;\"UdH\bC?|Ph", "Z!");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("?5", "encoding");
      Node[] nodeArray0 = new Node[8];
      // Undeclared exception!
      try { 
        document0.insertChildren(1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array must not contain any null objects
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlTail(charArrayWriter0, 905, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("N", "N");
      StringBuffer stringBuffer0 = new StringBuffer();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlHead(stringBuffer0, 607, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parse("href", "//`EuC_");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Element element0 = new Element("n&zw");
      Document document0 = Document.createShell(".");
      document0.appendTo(element0);
      document0.wrap("@!KY~+`kvtx<}4q");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$AllElements");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("multiple", "multiple");
      document0.siblingIndex = (-1841836560);
      document0.val("multiple");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("oisHh&J( bmD=-#J", "oisHh&J( bmD=-#J");
      Element element0 = document0.head();
      element0.val("oisHh&J( bmD=-#J");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#root", "#root");
      Element element0 = document0.appendElement("r?fb");
      element0.val("F/[L]/~X<$)7u@Hq7Qo");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Document.createShell("F/[L]/~X<$)7u@Hq7Qo");
      Element element0 = document0.val("F/[L]/~X<$)7u@Hq7Qo");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = Document.createShell("2wz;f2P6[TIr");
      Element element0 = document0.body();
      element0.toggleClass("2wz;f2P6[TIr");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = new Document("org.jsoup.nodes.DataNode");
      document0.toggleClass("~}n,b,i*:};j] @48)q");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Document.createShell("#l1ht{Rt");
      Element element0 = document0.body();
      element0.text("#l1ht{Rt");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Document.createShell("#l1ht{Rt");
      document0.text("#l1ht{Rt");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Document.createShell(":%s(%dn%+d)");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      document0.tagName("P");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = Parser.parse("Qw", "hgroup");
      Element element0 = document0.appendElement("Qw");
      element0.tagName("Qw");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Parser.parse("body", "body");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      Element element0 = document0.appendElement("br");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("M5_v]=$n", "M5_v]=$n");
      Element element0 = document0.body();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Element element0 = new Element("textarea");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;6[TIr", "2wz;6[TIr");
      Element element0 = document0.body();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Xbr", "Xbr");
      document0.appendElement("5");
      document0.selectFirst("5");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Parser.parse(":first-child", ":first-child");
      document0.selectFirst(":first-child");
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parse("v7-]l", "v7-]l");
      document0.select("br");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = new Document("F/[L]/~X<$)7u@Hq7Qo");
      Element element0 = new Element("id");
      element0.appendTo(document0);
      document0.select("id");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parse("Tag name must not be empty.", "Tag name must not be empty.");
      Element element0 = document0.body();
      element0.removeClass("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Element element0 = new Element("#n&zw");
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$AllElements");
      element0.appendTo(document0);
      element0.removeClass("V>OYr-IIwy.vO");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = new Document("[%s*=%s]");
      document0.removeClass("[%s*=%s]");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Document.createShell("2wz;f2P6[TIr");
      Element element0 = document0.body();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d<h=c2QFBW/8]]iFg]", "d<h=c2QFBW/8]]iFg]");
      Element element0 = document0.body();
      element0.prependText("d<h=c2QFBW/8]]iFg]");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parse("Qw", "hgroup");
      document0.prependElement("hgroup");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("GquEc", "`<*W-B%W");
      Element element0 = document0.appendElement("qe");
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parse("~,#'(BX 0= ", "[zR");
      Element element0 = document0.head();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6*2wz;[TIr", "6*2wz;[TIr");
      Element element0 = document0.body();
      element0.prepend("6*2wz;[TIr");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Parser.parse("Qw", "hgroup");
      Element element0 = document0.appendElement("Qw");
      element0.prepend("");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Document.createShell("d2Q'3FBW8]]iFg]");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      Element element0 = new Element("66fN");
      document0.appendTo(element0);
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("N", "N");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Element element0 = new Element("muvtiple");
      Document document0 = Parser.parseBodyFragmentRelaxed("muvtiple", "muvtiple");
      document0.setParentNode(element0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parse("d<h=c2QFBW/8]]iFg]", "d<h=c2QFBW/8]]iFg]");
      Element element0 = document0.body();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;6[TIr", "2wz;6[TIr");
      Element element0 = document0.body();
      element0.ownText();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = new Document("2o");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#root", "#root");
      Document document1 = Parser.parseBodyFragmentRelaxed("r?fb", "-@f<H");
      document0.setParentNode(document1);
      document1.appendElement("r?fb");
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      Element element0 = document0.head();
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      document0.appendTo(document0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;6[TIr", "2wz;6[TIr");
      Element element0 = document0.body();
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parse("textarea", "nsert posi%io out ofbounds.");
      Element element0 = document0.body();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5_v]=$n", "5_v]=$n");
      Pattern pattern0 = Pattern.compile("5_v]=$n");
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      document0.is((Evaluator) evaluator_MatchesOwn0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("gs", "0y_Tz");
      Element element0 = document0.appendElement("gs");
      element0.is("gs");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      document0.appendElement("#root");
      Element element0 = document0.appendText(" ClYY(s");
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) element0;
      nodeArray0[1] = (Node) element0;
      nodeArray0[2] = (Node) element0;
      nodeArray0[3] = (Node) document0;
      document0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Parser.parse("w&n*o8?f&X-]E", "w&n*o8?f&X-]E");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) document0;
      document0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d<h=c2QFBW/8]]iFg]", "d<h=c2QFBW/8]]iFg]");
      Element element0 = document0.body();
      LinkedList<Element> linkedList0 = new LinkedList<Element>();
      element0.insertChildren(0, (Collection<? extends Node>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = new Document("2wz;[TIr");
      LinkedList<CDataNode> linkedList0 = new LinkedList<CDataNode>();
      document0.insertChildren(0, (Collection<? extends Node>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("uI.BCJ-m", parseSettings0);
      Attributes attributes0 = new Attributes();
      attributes0.put("id", "'");
      Element element0 = new Element(tag0, "a2~Gdk)m?VCP'", attributes0);
      element0.id();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Document.createShell("s");
      document0.setSiblingIndex((byte) (-38));
      document0.html("e^b58iN4zrQOoWIHa");
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = new Document("h%X1GWgnb");
      MockFile mockFile0 = new MockFile("^YZ|8g+ [(}c#XK&H+}");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0);
      document0.html(mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Tag tag0 = Tag.valueOf("L@A#*uCPnk=^`i=@kK");
      CDataNode cDataNode0 = new CDataNode("~,#'(BX 0= ");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "~,#'(BX 0= ", attributes0);
      pseudoTextElement0.html();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      document0.dataset();
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("M5_v]=$n", "M5_v]=$n");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("r?fb", "-@f<H");
      Pattern pattern0 = Pattern.compile("#root");
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      document0.getElementsMatchingText("d=c2QFBW/8]]iFg]");
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$AllElements");
      Pattern pattern0 = Pattern.compile("", (-2031));
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = new Document("S");
      document0.getElementsMatchingOwnText("head");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = new Document("#");
      document0.getElementsMatchingOwnText("");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d<h=c2QFBW/8]]iFg]", "d<h=c2QFBW/8]]iFg]");
      document0.prependText("d<h=c2QFBW/8]]iFg]");
      document0.getElementsContainingOwnText("d<h=c2QFBW/8]]iFg]");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("9U9L", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "9U9L", attributes0);
      element0.getElementsByTag("&gt;");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = Parser.parse("V 2|Ce&%kJ@.T", "[zR");
      document0.getElementsByTag("html");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = new Document("#");
      document0.getElementsByIndexLessThan((-516));
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("yyET5z", "yyET5z");
      document0.getElementsByIndexGreaterThan(6);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = new Document("F/[L]/~X<$)7u@Hq7Qo");
      document0.getElementsByIndexEquals(0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("N", "N");
      document0.getElementsByAttributeValueStarting("D'Jv,K}(-;", "x'M7_le:!)");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Parser.parse("5_v]=$n", "5_v]=$n");
      document0.getElementsByAttributeValueNot("B!0M\"Q", "5_v]=$n");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parse("5_v]=$n", ":3&[>Hg;\"UdH\bC?|Ph");
      document0.getElementsByAttributeValueEnding(":3&[>Hg;\"UdH\bC?|Ph", "5_v]=$n");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      document0.getElementsByAttributeValueContaining("sQ6GvIEiA`Qvig7g", "textarea");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = new Document("#s`^1Zm7;|f(@");
      document0.getElementsByAttributeValue("t", "/gmldpJ>z1");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Element element0 = new Element("k&");
      Element element1 = element0.attr("k&", "k&");
      element1.getElementsByAttributeStarting("k&");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("/_'", parseSettings0);
      Attributes attributes0 = new Attributes();
      attributes0.put("|0~V@E\"", "|0~V@E\"");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "muvtiple", attributes0);
      pseudoTextElement0.getElementsByAttribute("|0~V@E\"");
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":nth-child(%d)", ":nth-child(%d)");
      Document document1 = document0.clone();
      document0.prependChild(document1);
      Element element0 = document0.appendElement("org.jsoup.nodes.Element$NodeList");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":nth-child(%d)", ":nth-child(%d)");
      Element element0 = document0.appendElement("org.jsoup.nodes.Element$NodeList");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("multiple", "multiple");
      document0.siblingIndex = (-1841836560);
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = Parser.parse("nsert posi%ion out ofbounds.", "nsert posi%ion out ofbounds.");
      Element element0 = document0.body();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.Element$2");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "org.jsoup.nodes.Element$2", attributes0);
      DataNode dataNode0 = new DataNode("i", "i");
      element0.siblingIndex = (-894);
      element0.doClone(dataNode0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d<h=c2QFBW/8]]iFg]", "d<h=c2QFBW/8]]iFg]");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Document.createShell("2wz;f2P6[TIr");
      Element element0 = document0.body();
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Document.createShell("c<ij)XVj%a");
      document0.clone();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Document.createShell("title");
      Element element0 = document0.body();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      element0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";p]", ";p]");
      Element element0 = document0.addClass("x3$Mi.dO;AD");
      element0.classNames();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$AllElements");
      document0.toggleClass("#n&zw");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Document.createShell("2wz;f2P6[TIr");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = new Document("#root");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("         ", "0yetz");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Document.createShell("br");
      document0.appendElement("br");
      document0.child(1);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parse("#root", "#root");
      document0.child(0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Parser.parse("]r$(V", "Insert position out of bounds.");
      Element element0 = document0.head();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Document.createShell("0yETz");
      document0.setParentNode(document0);
      document0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Document.createShell("d2Q'3FBW8]]iFg]");
      Document document1 = Parser.parseBodyFragment("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      document0.setParentNode(document1);
      document0.before("lI]");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = new Document("F/[L]/~X<$)7u@Hq7Qo");
      Element element0 = new Element("id");
      Element element1 = element0.appendTo(document0);
      element1.before("head");
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("yyExB", "yyExB");
      Element element0 = document0.body();
      element0.before("yyExB");
      element0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("br", "i_wIU4jOgM");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = new Document("muvtiple");
      document0.setSiblingIndex((-390));
      document0.attr("", true);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      Element element0 = document0.body();
      element0.attr("d2Q'3FBW8]]iFg]", false);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      document0.attr("d2Q'3FBW8]]iFg]", false);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Element element0 = new Element("head");
      element0.attr("", "#root");
      element0.attributes();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Element element0 = new Element("#n&zw");
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$AllElements");
      Element element1 = element0.appendTo(document0);
      element1.attr("f:{(&VEX", "colgroup");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      document0.attr("", "d=c2QFBW/8]]iFg]");
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = Parser.parse("0yET5oz", "0yET5oz");
      document0.siblingIndex = (-523);
      document0.appendText("0yET5oz");
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Element element0 = new Element("head");
      element0.appendText("#root");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("p2U%gkIr'NbM~", "o-V)WRs7E{^}FO)ks9k");
      Element element0 = document0.appendElement(".");
      element0.appendText("p2U%gkIr'NbM~");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = new Document("n9<(B|,m|");
      document0.appendElement("tr");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("L(W6=#tgTquc2_ E", "66fN");
      Element element0 = document0.body();
      element0.appendChild(element0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      document0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Document.createShell("s");
      document0.setSiblingIndex((byte) (-38));
      document0.append("85 Ux16.m=8");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Element element0 = new Element("head");
      Document document0 = Document.createShell("=2c=\"a\"");
      element0.appendTo(document0);
      element0.append("Children collection to be inserted must not be null.");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Element element0 = new Element("muvtiple");
      element0.append("");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = new Document("Qe");
      Element element0 = document0.appendElement("multiple");
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("1KpS$]54?yU9ys^O", "1KpS$]54?yU9ys^O");
      Element element0 = document0.body();
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = new Document("#root");
      Document document1 = Parser.parseBodyFragmentRelaxed("#root", "r?fb");
      document1.appendTo(document0);
      document1.after("r?fb");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("w&n*o8?f&X-]E", "w&n*o8?f&X-]E");
      Element element0 = document0.appendElement("qe");
      element0.after("=X|Q2dm..5>IX\"1Qc");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = Parser.parse("w?hb=$]:$W", "w?hb=$]:$W");
      Element element0 = document0.body();
      element0.addClass("html");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Element element0 = new Element("#n&zw");
      element0.addClass("br");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.wrap("hr");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.wrap("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2]t+F5_~))3", "html");
      Comment comment0 = new Comment("html");
      XmlDeclaration xmlDeclaration0 = comment0.asXmlDeclaration();
      Document document1 = (Document)document0.doClone(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document1.wrap("z{!dd?\"TOi/F((");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]%iDg]", "d=c2QFBW/8]%iDg]");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.val("nuUq8jHD~w2^`Al/");
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf(":3&[>Hg;\"UdH\bC?|Ph", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":3&[>Hg;\"UdH\bC?|Ph", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("t:9'HZM5r Q~`B", "");
      document0.empty();
      // Undeclared exception!
      try { 
        document0.text("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$IsNthChild");
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parse("_s", "_s");
      Element element0 = document0.appendElement("_s");
      element0.setSiblingIndex(0);
      // Undeclared exception!
      document0.text();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("allowfullscreen", "muvtiple");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("gs", "0y_Tz");
      DocumentType documentType0 = new DocumentType("/", (String) null, ";(TOuo", (String) null);
      document0.parentNode = (Node) documentType0;
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = Document.createShell("y<4[z");
      Element element0 = document0.appendElement("gs");
      element0.setSiblingIndex((-91502055));
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Qe", "hgroup");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.tagName("G\r$M-x]>E\fe~tRkq:");
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Parser.parse(",NdqX7fw0M[|tOJ3L", ",NdqX7fw0M[|tOJ3L");
      // Undeclared exception!
      try { 
        document0.tagName("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Tag tag0 = Tag.valueOf("}/$g$36s|2f3ty('zj");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "}/$g$36s|2f3ty('zj", attributes0);
      pseudoTextElement0.reparentChild(pseudoTextElement0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = new Document(";~l//? DxI\tLzc");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("b^vBe]2u7x0F", true);
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("*3/4Xl\"'D`*", "w#4Ig%9'3$kK'%iN");
      // Undeclared exception!
      try { 
        document0.selectFirst("w#4Ig%9'3$kK'%iN");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'w#4Ig%9'3$kK'%iN': unexpected token at '%9'3$kK'%iN'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("gs", "0y_Tz");
      // Undeclared exception!
      try { 
        document0.selectFirst("[VrLw%4\"Plo+");
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '4'
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("@IEw4|~", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "@IEw4|~", attributes0);
      // Undeclared exception!
      try { 
        formElement0.selectFirst((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      // Undeclared exception!
      try { 
        document0.select("\"+1ua^qLf1#[DeK5");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '\"+1ua^qLf1#[DeK5': unexpected token at '\"+1ua^qLf1#[DeK5'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Document.createShell(".");
      // Undeclared exception!
      try { 
        document0.select((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf(":3&[>Hg;\"UdH\bC?|Ph", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":3&[>Hg;\"UdH\bC?|Ph", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      DocumentType documentType0 = new DocumentType("d2Q'3FBW8]]iFg]", "l&GHK,f_~ep($0u", "n)s|sUnhFD8qgaY");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.previousElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("gk!DM;9<\"cR+U9'^", parseSettings0);
      Element element0 = new Element(tag0, "gk!DM;9<\"cR+U9'^");
      DocumentType documentType0 = new DocumentType("gk!DM;9<\"cR+U9'^", "gk!DM;9<\"cR+U9'^", "class", " />");
      element0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        element0.previousElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6*2wz;[TIr", "6*2wz;[TIr");
      DataNode dataNode0 = new DataNode("6*2wz;[TIr", "</");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        Element.preserveWhitespace(document0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$Tag");
      List<Node> list0 = Parser.parseFragment("Iz%<:,|F/u$;sV4 Uc", (Element) document0, "Iz%<:,|F/u$;sV4 Uc");
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.prependText("7y _r`e%4Y)npm");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5_v]=$n", "5_v]=$n");
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.prependElement("{a5aR/#1KJ");
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf(":3&[>Hg;\"UdH\bC?|Ph", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":3&[>Hg;\"UdH\bC?|Ph", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.prependElement((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Qe", "hgroup");
      Element element0 = document0.appendElement("Qe");
      document0.setParentNode(element0);
      // Undeclared exception!
      try { 
        element0.prependChild(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = new Document("nsert posi%ion out ofbounds.");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.prepend("d2Q'3FBW8]]iFg]");
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;f2P6[TIr", "2wz;f2P6[TIr");
      // Undeclared exception!
      try { 
        document0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Parser.parse("%'U.5B!2#>et", "oW,b#fD[J,,z);P");
      TextNode textNode0 = TextNode.createFromEncoded("Unexpected count of entities loaded", "UyT<x0zh");
      document0.parentNode = (Node) textNode0;
      // Undeclared exception!
      try { 
        document0.parents();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Document.createShell(":%s(%dn%+d)");
      CDataNode cDataNode0 = new CDataNode(":%s(%dn%+d)");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.parent();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("xmp", "xmp");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("|];");
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockPrintWriter0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      document0.outerHtmlTail(bufferedWriter0, 65535, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("&n*o?f&XJ]E", "&n*o?f&XJ]E");
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(32);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, 807, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail((Appendable) null, 2036, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Xbr", "Xbr");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "Xbr");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(stringBuilder0, (-1796215655), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;6[TIr", "2wz;6[TIr");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlTail(pipedWriter0, 46, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(3204);
      Document document0 = Document.createShell("*91kI{Y");
      StringBuffer stringBuffer0 = new StringBuffer(5);
      // Undeclared exception!
      document0.outerHtmlHead(stringBuffer0, 3204, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document document0 = Document.createShell("br");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, 1374, document_OutputSettings0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parse("&n*oC?f3&xj-e", "&n*oC?f3&xj-e");
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(charBuffer0, 1318, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("w&n*o8?f&X-]E", "w&n*o8?f&X-]E");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead((Appendable) null, 10, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5_v]=$n", "5_v]=$n");
      StringBuffer stringBuffer0 = new StringBuffer();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(stringBuffer0, (-291), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("value", "value");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlHead(pipedWriter0, 1939, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Did not find balanced marker at '", "TagOpen");
      DataNode dataNode0 = new DataNode("TagOpen", "");
      document0.parentNode = (Node) dataNode0;
      // Undeclared exception!
      try { 
        document0.nextElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = new Document("F/[L]/~X<$)7u@Hq7Qo");
      TextNode textNode0 = new TextNode("F/[L]/~X<$)7u@Hq7Qo");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.nextElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5_v]=$n", "5_v]=$n");
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Document.createShell("C");
      TextNode textNode0 = TextNode.createFromEncoded("m>MZ@k)^bN}9k(h");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("yyExG", "yyExG");
      document0.setParentNode(document0);
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("yyExG");
      // Undeclared exception!
      document0.is((Evaluator) evaluator_ContainsText0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = new Document("#");
      // Undeclared exception!
      try { 
        document0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("Qe", "297!{,#7vcq");
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute((String) null);
      // Undeclared exception!
      try { 
        document0.is((Evaluator) evaluator_Attribute0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = new Document("sKI\"");
      CDataNode cDataNode0 = new CDataNode("sKI\"");
      Element element0 = document0.doClone(cDataNode0);
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("sKI\"", "sKI\"");
      // Undeclared exception!
      try { 
        element0.is((Evaluator) evaluator_AttributeWithValueStarting0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.nodes.CDataNode cannot be cast to org.jsoup.nodes.Element
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5_v]=$n", "5_v]=$n");
      // Undeclared exception!
      try { 
        document0.is("Insert position out of bounds.");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Element element0 = new Element("head");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) element0;
      element0.addChildren(nodeArray0);
      // Undeclared exception!
      element0.is("head");
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = new Document("2wz;f2P6[TIr");
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren(0, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Document.createShell("<%W><;s.(3fh");
      document0.setParentNode(document0);
      LinkedHashSet<Document> linkedHashSet0 = new LinkedHashSet<Document>();
      linkedHashSet0.add(document0);
      // Undeclared exception!
      try { 
        document0.insertChildren(1, (Collection<? extends Node>) linkedHashSet0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Document.createShell("0ygETz");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.html("0ygETz");
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$AllElements");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.html((CharArrayWriter) null);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = new Document("^");
      Document document1 = document0.normalise();
      CharBuffer charBuffer0 = CharBuffer.allocate(6);
      // Undeclared exception!
      try { 
        document1.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("w&n*o8?f&X-]E", "w&n*o8?f&X-]E");
      // Undeclared exception!
      try { 
        document0.html((MockPrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Xbr", "Xbr");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.charset((Charset) null);
      document0.outputSettings(document_OutputSettings1);
      // Undeclared exception!
      try { 
        document0.html();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document$OutputSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("1gwT>is,.A)Z", "1gwT>is,.A)Z");
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("org.jsoup.parser.Tokeniser", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("org.jsoup.parser.Tokeniser");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "1gwT>is,.A)Z", attributes0);
      document0.parentNode = (Node) formElement0;
      formElement0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.html();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Document.createShell("br");
      Element element0 = document0.appendElement("br");
      element0.setSiblingIndex((-1991));
      // Undeclared exception!
      try { 
        document0.html();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;f2P6[TIr", "2wz;f2P6[TIr");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf(":3&[>Hg;\"UdH\bC?|Ph", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, ":3&[>Hg;\"UdH\bC?|Ph", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#root", "#root");
      CDataNode cDataNode0 = new CDataNode("BogusComment");
      document0.setParentNode(cDataNode0);
      Pattern pattern0 = Pattern.compile("r?fb");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText(pattern0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = new Document("F/[L]/~X<$)7u@Hq7Qo");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;f2P6[TIr", "2wz;f2P6[TIr");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("2wz;f2P6[TIr");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: 2wz;f2P6[TIr
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("0yETz", "0yETz");
      document0.setSiblingIndex((-1845));
      document0.setParentNode(document0);
      Pattern pattern0 = Pattern.compile("0yETz", 78);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText(pattern0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Document.createShell("2wz;f2P6[TIr");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("2wz;f2P6[TIr");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: 2wz;f2P6[TIr
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("head", "head");
      DataNode dataNode0 = new DataNode("head");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("8i.]27;h1\":2");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("Ds", "Ds");
      Element element0 = document0.appendElement("Ds");
      element0.siblingIndex = (-1682);
      // Undeclared exception!
      try { 
        document0.getElementsContainingOwnText("org.jsoup.select.StructuralEvaluator$Root");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Document document0 = new Document("#");
      // Undeclared exception!
      try { 
        document0.getElementsByTag((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("f6WT*", "f6WT*");
      document0.siblingIndex = (-1073);
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.getElementsByTag("br");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("yyExG", "yyExG");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexGreaterThan((-1061));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = new Document("NP");
      DataNode dataNode0 = new DataNode("2wz;f2P6[TIr");
      document0.setParentNode(dataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsByIndexGreaterThan((-1166));
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("*", "*");
      Element element0 = document0.toggleClass("sQ6GvoIEiA`Qv8igq7g");
      List<Node> list0 = element0.childNodesCopy();
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getElementsByClass("4+ja(d`448xv'j)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("#", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("#");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "</", attributes0);
      // Undeclared exception!
      try { 
        formElement0.getElementsByClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("F#2_{SfzFG+uy", "F#2_{SfzFG+uy");
      Element element0 = document0.body();
      element0.setSiblingIndex((-2));
      // Undeclared exception!
      try { 
        document0.getElementsByClass("F#2_{SfzFG+uy");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("w&n*o8?f&X-]E", "w&n*o8?f&X-]E");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot("!3q(]\"*6COK_-m", "'");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Tag tag0 = Tag.valueOf("L@A#*uCPnk=^`i=@kK");
      CDataNode cDataNode0 = new CDataNode("~,#'(BX 0= ");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "~,#'(BX 0= ", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.getElementsByAttributeValueNot("", "pd");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parse("~,#'(BX 0= ", "[zR");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching(")3", "[zR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: [zR
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Parser.parse(":3&[>Hg;\"UdH\bC?|Ph", "HsfB-yCV)A0bb\r<");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding((String) null, ":3&[>Hg;\"UdH\bC?|Ph");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = new Document("#s`^1Zm7;|f(@");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("#", parseSettings0);
      Element element0 = new Element(tag0, "#");
      // Undeclared exception!
      try { 
        element0.getElementsByAttribute((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;6[TIr", "2wz;6[TIr");
      // Undeclared exception!
      try { 
        document0.getElementById((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("y<ET]5z", "y<ET]5z");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getAllElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;f2P6[TIr", "2wz;f2P6[TIr");
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = Document.createShell("02<T");
      CDataNode cDataNode0 = new CDataNode((String) null);
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = Parser.parse("6*2wz;[TIr", "");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("", true);
      document0.setParentNode(xmlDeclaration0);
      // Undeclared exception!
      try { 
        document0.elementSiblingIndex();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Element element0 = new Element("n&zw");
      Document document0 = Document.createShell(".");
      document0.appendTo(element0);
      document0.toggleClass("n&zw");
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '#root.java.lang.String@0000000074': unexpected token at '@0000000074'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = new Document("F/[L]/~X<$)7u@Hq7Qo");
      TextNode textNode0 = new TextNode("F/[L]/~X<$)7u@Hq7Qo");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.cssSelector();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = new Document("#root");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = Parser.parse("_s", "_s");
      // Undeclared exception!
      try { 
        document0.child((-760));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Document.createShell("_s");
      DocumentType documentType0 = new DocumentType("f>X}c vYBh", " ", "_s", "@^Bz-`Lc");
      documentType0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.before((Node) documentType0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.before("d2Q'3FBW8]]iFg]");
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = new Document("ly<E");
      DataNode dataNode0 = new DataNode("ly<E");
      Element element0 = document0.doClone(dataNode0);
      // Undeclared exception!
      try { 
        element0.before("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("AttributeValue_singleQuoted", "Rz$:mUau:hM9U/2NmM");
      // Undeclared exception!
      try { 
        document0.attr((String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.attr("", "");
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Element element0 = new Element("fn,PXo>$X2V[0");
      // Undeclared exception!
      try { 
        element0.attr((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = new Document("F/[L]/~X<$)7u@Hq7Qo");
      TextNode textNode0 = new TextNode("F/[L]/~X<$)7u@Hq7Qo");
      document0.setParentNode(textNode0);
      // Undeclared exception!
      try { 
        document0.appendTo(document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = new Document("\"yET5z");
      document0.setParentNode(document0);
      // Undeclared exception!
      try { 
        document0.appendTo(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      // Undeclared exception!
      try { 
        document0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Parser.parse("0yET5oz", "0yET5oz");
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = parser0.parseFragmentInput("0yET5oz", document0, "</");
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.appendText("</");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = new Document("F/[L]/~X<$)7u@Hq7Qo");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Parser.parse("on", "on");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.appendElement(":last-of-type");
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_s", "_s");
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      List<Node> list0 = Parser.parseFragment("#root", (Element) document0, "", parseErrorList0);
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.appendElement("_s");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      Document document0 = parser1.parseInput("p41DK)C3QMhfoW)bI", ".HM&74'.pF;3o");
      // Undeclared exception!
      try { 
        document0.appendElement("p41DK)C3QMhfoW)bI");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(",n", ",n");
      // Undeclared exception!
      try { 
        document0.appendElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      Element element0 = document0.appendElement("br");
      element0.siblingIndex = 62;
      // Undeclared exception!
      try { 
        document0.appendChild(element0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 62, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Element element0 = new Element("uIaB@8-m");
      // Undeclared exception!
      try { 
        element0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Document.createShell("d2Q'3FBW8]]iFg]");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.append("MO*3w");
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Element element0 = new Element("head");
      Document document0 = Document.createShell("=2c=\"a\"");
      Element element1 = element0.appendTo(document0);
      List<Node> list0 = element1.childNodes();
      element1.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.append("Children collection to be inserted must not be null.");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Tag tag0 = Tag.valueOf("`j @Os^(");
      Element element0 = new Element(tag0, "`j @Os^(");
      // Undeclared exception!
      try { 
        element0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = new Document("0y");
      document0.setParentNode(document0);
      DocumentType documentType0 = new DocumentType("0y", "0y", "8ag&:]pw;eg;^i@", "0y", "8ag&:]pw;eg;^i@");
      // Undeclared exception!
      try { 
        document0.after((Node) documentType0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Document.createShell("0yETz");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.after("0yETz");
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;[TIr", "2wz;[TIr");
      Element element0 = document0.body();
      Element element1 = element0.doClone(document0);
      // Undeclared exception!
      try { 
        element1.after("html > body");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Document.createShell("AKuXHn}K/5X{M>/");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Tag tag0 = Tag.valueOf("M5_v]=$n");
      Element element0 = null;
      try {
        element0 = new Element(tag0, (String) null, (Attributes) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "EmQvmOR]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = new Document("#");
      document0.html((MockFileWriter) null);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$AllElements");
      document0.hasClass("class");
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Document.createShell("title");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add((String) null);
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Document document0 = Document.createShell("title");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("BogusComment", "k4..dN^#t;_");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#1 Z{|t", "#1 Z{|t");
      document0.prependText("");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#1 Z{|t", "#1 Z{|t");
      document0.prependText("fGy_f*5");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = new Document("2wz;[TIr");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$AllElements");
      document0.appendTo(document0);
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;6[TIr", "2wz;6[TIr");
      Element element0 = document0.body();
      element0.wrap("2wz;6[TIr");
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = new Document("F/[L]/~X<$)7u@Hq7Qo");
      document0.setParentNode(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Element element0 = new Element("#n&zw");
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$AllElements");
      Element element1 = element0.appendTo(document0);
      element1.cssSelector();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Document.createShell("uI.BCJ-m");
      Element element0 = document0.body();
      element0.html("#root");
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("N", "N");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = new Document("nsert posi%ion out ofbounds.");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parse("d<h=c2QFBW/8]]iFg]", "d<h=c2QFBW/8]]iFg]");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = Parser.parse("body", "body");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Parser.parse("textarea", "nsert posi%io out ofbounds.");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = new Document("");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Element element0 = new Element("textarea");
      element0.classNames();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Document.createShell("6");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(true);
      document0.outputSettings(document_OutputSettings1);
      document0.title("6");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("multiple", "multiple");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        document0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Element element0 = new Element("br");
      element0.prependElement("br");
      element0.outerHtml();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("z~.g4>')<xH", "z~.g4>')<xH");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      Document document1 = document0.outputSettings(document_OutputSettings1);
      document1.html();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Tag tag0 = Tag.valueOf("textarea");
      CDataNode cDataNode0 = new CDataNode(">C7");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, ", state=", attributes0);
      element0.val("0y_Tz");
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Document.createShell("d2Q'3FBW8]]iFg]");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = Document.createShell("y8}'q$Oh${bb");
      document0.toggleClass("~%.K w=da:AfAm`1g");
      document0.toggleClass("y8}'q$Oh${bb");
      document0.hasClass("y8}'q$Oh${bb");
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.nodes.DataNode");
      document0.toggleClass("org.jsoup.parser.Token$StartTag");
      Element element0 = document0.toggleClass("");
      element0.hasClass("Data");
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Parser.parse("movtiple", "movtiple");
      document0.toggleClass("movtiple");
      document0.toggleClass(":not(selector) subselect must not be empty");
      document0.hasClass("body");
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Document.createShell("movtiple");
      Element element0 = document0.toggleClass("n2rzlhmt:-2p");
      document0.toggleClass(" />");
      element0.hasClass("n2rzlhmt:-2p");
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(";p]", ";p]");
      Element element0 = document0.addClass("x3$Mi.dO;AD");
      element0.hasClass("org.jsoup.select.Evaluator$IsNthOfType");
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = new Document("0yETz");
      CDataNode cDataNode0 = new CDataNode("6serK");
      document0.prependChild(cDataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("*3/4Xl\"'D`*", "w#4Ig%9'3$kK'%iN");
      DataNode dataNode0 = new DataNode("*3/4Xl\"'D`*", "w#4Ig%9'3$kK'%iN");
      document0.appendChild(dataNode0);
      document0.data();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("yyET5z", "yyET5z");
      Comment comment0 = new Comment("yyET5z", "yyET5z");
      document0.prependChild(comment0);
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("         ", "0yetz");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Document.createShell("0ygETz");
      document0.setParentNode(document0);
      Element.preserveWhitespace(document0);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      DataNode dataNode0 = DataNode.createFromEncoded("", "del");
      Element.preserveWhitespace(dataNode0);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      document0.appendElement("br");
      document0.appendElement("br");
      document0.getElementsContainingOwnText("%6Fo54sOo}=#am1:%");
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      CDataNode cDataNode0 = new CDataNode(";AFOr?{A l!rTjn}s!");
      document0.prependChild(cDataNode0);
      document0.getElementsContainingOwnText("s+");
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#root", "#root");
      document0.title("r?fb");
      document0.getElementsContainingOwnText("m}u=)EcQ&J.x0%%EbQ");
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<!--", "multiple");
      Pattern pattern0 = Pattern.compile("listing");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("n&zw", "sQ6GvIEiA`Qvig7g");
      document0.appendElement("br");
      document0.getElementsMatchingText("/$dH~4'K#T4p");
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parse("_s", "_s");
      document0.appendElement("_s");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("<html>\n <head></head>\n <body></body>\n</html>\n<#root>\n <html>\n  <head></head>\n  <body>\n   d=c2QFBW/8]]iFg]\n  </body>\n </html>\n</#root>", "@?[(");
      document0.getElementsContainingText("<html>\n <head></head>\n <body></body>\n</html>\n<#root>\n <html>\n  <head></head>\n  <body>\n   d=c2QFBW/8]]iFg]\n  </body>\n </html>\n</#root>");
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Document.createShell("d2Q'3FBW8]]iFg]");
      document0.getElementById("d2Q'3FBW8]]iFg]");
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      document0.setParentNode(document0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Document.createShell("2wz;f2P6[TIr");
      Element element0 = document0.body();
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = new Document("#");
      Element element0 = document0.appendTo(document0);
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Document.createShell("2wz;f2P6[TIr");
      Element element0 = document0.body();
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      document0.setParentNode(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Ip", "Ip");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = Document.createShell("#l1ht{Rt");
      Element element0 = document0.body();
      element0.wrap("#l1ht{Rt");
      element0.nextElementSiblings();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("uIaB@8-m", "uIaB@8-m");
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Document.createShell("#l1ht{Rt");
      Element element0 = document0.body();
      Elements elements0 = element0.nextElementSiblings();
      assertEquals("#l1ht{Rt", element0.baseUri());
      assertEquals(1, element0.siblingIndex());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;6[TIr", "2wz;6[TIr");
      document0.siblingElements();
      assertEquals("2wz;6[TIr", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":nth-child(%d)", ":nth-child(%d)");
      Element element0 = document0.head();
      Elements elements0 = element0.siblingElements();
      assertEquals(1, elements0.size());
      assertEquals(":nth-child(%d)", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]%iDg]", "d=c2QFBW/8]%iDg]");
      Element element0 = document0.body();
      element0.after("class");
      String string0 = element0.cssSelector();
      assertEquals("d=c2QFBW/8]%iDg]", element0.baseUri());
      assertEquals("html > body:nth-child(2)", string0);
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]%iDg]", "d=c2QFBW/8]%iDg]");
      Element element0 = document0.body();
      String string0 = element0.cssSelector();
      assertEquals("html > body", string0);
      assertEquals("d=c2QFBW/8]%iDg]", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5_v]=$n", "5_v]=$n");
      document0.addClass("5_v]=$n");
      document0.cssSelector();
      assertEquals("5_v]=$n", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = new Document("F/[L]/~X<$)7u@Hq7Qo");
      Node[] nodeArray0 = new Node[3];
      // Undeclared exception!
      try { 
        document0.insertChildren(144, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Parser.parse("v7-]l", "v7-]l");
      Node[] nodeArray0 = new Node[5];
      // Undeclared exception!
      try { 
        document0.insertChildren((-513), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = new Document("#root");
      Node[] nodeArray0 = new Node[0];
      Element element0 = document0.insertChildren(0, nodeArray0);
      assertEquals("#root", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;f2P6[TIr", "2wz;f2P6[TIr");
      LinkedHashSet<CDataNode> linkedHashSet0 = new LinkedHashSet<CDataNode>();
      // Undeclared exception!
      try { 
        document0.insertChildren(58, (Collection<? extends Node>) linkedHashSet0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("br", "i_wIU4jOgM");
      LinkedHashSet<FormElement> linkedHashSet0 = new LinkedHashSet<FormElement>();
      // Undeclared exception!
      try { 
        document0.insertChildren((-601), (Collection<? extends Node>) linkedHashSet0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("_s", "_s");
      DataNode dataNode0 = DataNode.createFromEncoded("_s", "\r`ep2C*(q$-y?'");
      document0.prependChild(dataNode0);
      document0.dataNodes();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;f2P6[TIr", "2wz;f2P6[TIr");
      Element element0 = document0.body();
      List<TextNode> list0 = element0.textNodes();
      assertEquals("2wz;f2P6[TIr", element0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("2wz;f2P6[TIr", "2wz;f2P6[TIr");
      List<TextNode> list0 = document0.textNodes();
      assertEquals(0, list0.size());
      assertEquals(1, document0.childNodeSize());
      assertEquals("2wz;f2P6[TIr", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Document document0 = Parser.parse("_s", "_s");
      Element element0 = document0.appendElement("_s");
      document0.prependText(" > ");
      Element element1 = element0.previousElementSibling();
      assertEquals(3, document0.childNodeSize());
      assertNotSame(element0, element1);
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Document document0 = new Document("NP");
      Elements elements0 = document0.getElementsByIndexGreaterThan((-1166));
      assertEquals("NP", document0.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Ip", "Ip");
      document0.selectFirst("Ip");
      assertEquals(1, document0.childNodeSize());
      assertEquals("Ip", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("gs", "0y_Tz");
      document0.is("gs");
      assertEquals("0y_Tz", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("y<ET]5z", "y<ET]5z");
      document0.getAllElements();
      assertEquals("y<ET]5z", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("yyExB", "yyExB");
      // Undeclared exception!
      try { 
        document0.before("yyExB");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("yyExG", "yyExG");
      document0.getElementsByAttribute("?^Dx0");
      assertEquals(1, document0.childNodeSize());
      assertEquals("yyExG", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Document document0 = Document.createShell("Ds");
      Elements elements0 = document0.getElementsByAttributeValueNot("Ds", " ");
      assertEquals("Ds", document0.baseUri());
      assertEquals(0, elements0.size());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = Parser.parse("br", "br");
      Element element0 = document0.shallowClone();
      assertEquals(1, document0.childNodeSize());
      assertEquals("br", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("5_v]=$n", "5_v]=$n");
      document0.doSetBaseUri("bTUVQ(v9");
      assertEquals("bTUVQ(v9", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Document document0 = new Document("0y");
      DocumentType documentType0 = new DocumentType("0y", "0y", "8ag&:]pw;eg;^i@", "0y", "8ag&:]pw;eg;^i@");
      // Undeclared exception!
      try { 
        document0.after((Node) documentType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("", "d=c2QFBW/8]]iFg]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      document0.getElementsByAttributeValueMatching("textarea", (Pattern) null);
      assertEquals(1, document0.childNodeSize());
      assertEquals("d=c2QFBW/8]]iFg]", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      Elements elements0 = document0.getElementsContainingText("");
      assertEquals(4, elements0.size());
      assertEquals("d=c2QFBW/8]]iFg]", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Document document0 = Parser.parse("_s", "_s");
      Elements elements0 = document0.getElementsByClass("G@}d+9S;");
      assertEquals(0, elements0.size());
      assertEquals("_s", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Tag tag0 = Tag.valueOf("*3/4Xl\"'D`*");
      FormElement formElement0 = new FormElement(tag0, "*3/4Xl\"'D`*", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.getElementsByAttributeValueEnding("OEp|C", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("yyExG", "yyExG");
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("yyExG");
      boolean boolean0 = document0.is((Evaluator) evaluator_ContainsText0);
      assertEquals("yyExG", document0.baseUri());
      assertTrue(boolean0);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Document document0 = new Document("0yETz");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d=c2QFBW/8]]iFg]", "\"+1ua^qLf1#[DeK5");
      Elements elements0 = document0.getElementsByIndexEquals(484);
      assertEquals(1, document0.childNodeSize());
      assertEquals("\"+1ua^qLf1#[DeK5", document0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Pattern syntax error: ", "A1U");
      document0.getElementsByAttributeStarting("k&");
      assertEquals(1, document0.childNodeSize());
      assertEquals("A1U", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]]iFg]", "d=c2QFBW/8]]iFg]");
      Elements elements0 = document0.getElementsByIndexLessThan(106);
      assertEquals("d=c2QFBW/8]]iFg]", document0.baseUri());
      assertEquals(3, elements0.size());
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Document document0 = Parser.parse("d=c2QFBW/8]%iDg]", "d=c2QFBW/8]%iDg]");
      // Undeclared exception!
      try { 
        document0.after("class");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Document document0 = Parser.parse(">Uh", ">Uh");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("6*2wz;[TIr", "6*2wz;[TIr");
      document0.prepend("6*2wz;[TIr");
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Document document0 = new Document("2o");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("br", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Document document0 = Document.createShell("T!u-JQ\"NbkXltH-::");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("T!u-JQ\"NbkXltH-::", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("M5_v]=$n", "M5_v]=$n");
      String string0 = document0.wholeText();
      assertEquals("M5_v]=$n", document0.baseUri());
      assertEquals("M5_v]=$n", string0);
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Document document0 = Document.createShell("_s");
      DocumentType documentType0 = new DocumentType("f>X}c vYBh", " ", "_s", "@^Bz-`Lc");
      // Undeclared exception!
      try { 
        document0.before((Node) documentType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Element element0 = new Element("textarea");
      String string0 = element0.val();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Document document0 = Document.createShell("T!u-JQ\"NbkXltH-::");
      assertEquals(1, document0.childNodeSize());
      
      document0.html("");
      assertEquals("T!u-JQ\"NbkXltH-::", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Ip", "Ip");
      document0.tagName("Ip");
      Element element0 = document0.selectFirst("Ip");
      assertEquals("Ip", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Document document0 = Document.createShell("br");
      // Undeclared exception!
      try { 
        document0.child(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Document document0 = Document.createShell("#l1ht{Rt");
      document0.previousElementSiblings();
      assertEquals("#l1ht{Rt", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("d2Q'3FBW8]]iFg]", "d2Q'3FBW8]]iFg]");
      Pattern pattern0 = Pattern.compile("d2Q'3FBW8]]iFg]");
      Elements elements0 = document0.getElementsMatchingText(pattern0);
      assertEquals("d2Q'3FBW8]]iFg]", document0.baseUri());
      assertEquals(3, elements0.size());
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Document document0 = Document.createShell("#l1ht{Rt");
      // Undeclared exception!
      try { 
        document0.wrap("#l1ht{Rt");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Document document0 = Parser.parse("body", "body");
      document0.id();
  }
}
