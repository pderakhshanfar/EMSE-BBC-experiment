/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 18 03:11:23 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("wmU91XF");
      Attributes attributes0 = cDataNode0.attributes();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("wmU91XF", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.nodes.Element", attributes0);
      formElement0.toggleClass(" > ");
      formElement0.addClass("tag name m:st not be eipty.");
      formElement0.hasClass("$I");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("}KN\"J`uJi", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "@0[m%FgG9s|21", (Attributes) null);
      formElement0.toggleClass("67#uftwz$c9");
      formElement0.addClass("c3D!W}o v");
      formElement0.hasClass("org.jsoup.nodes.Element$1");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "Txc85ta{+jY");
      document0.getElementsByAttributeValueMatching("id", "cite");
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = new Document("qB");
      document0.getElementsByAttributeValueEnding("J'3qbik8f+TQ#0<p(hu", "#");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Document document1 = new Document(";:{9");
      document1.reparentChild(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      Document document1 = document0.normalise();
      document1.prependElement("body");
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        document0.insertChildren(1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Array must not contain any null objects
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      StringWriter stringWriter0 = new StringWriter(3040);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlTail(stringWriter0, 3040, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("~'0ZloR7", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "~'0ZloR7", attributes0);
      formElement0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Wd", "Wd");
      Element element0 = document0.appendElement("Wd");
      element0.wrap(":nth-of-type(");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xd", "xd");
      Element element0 = document0.body();
      Element element1 = element0.firstElementSibling();
      element1.wrap("xd");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xd", "xd");
      Element element0 = document0.body();
      element0.wrap("xd");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("[z", "[z");
      document0.siblingIndex = (-1343);
      document0.val("");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      Element element0 = document0.body();
      element0.val("id");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = new Document("nth-of-type");
      document0.setSiblingIndex((-1953595343));
      document0.toggleClass("2=nv}sZ.fL");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xd", "xd");
      Element element0 = document0.body();
      element0.toggleClass("ycd?,qp&ecA");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Parser.parse("ins", "ins");
      Element element0 = document0.body();
      element0.text("t");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("value", "value");
      document0.text("value");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Element element0 = new Element(" wmU91XFf");
      element0.text();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("[z", "[z");
      document0.siblingIndex = (-1343);
      document0.tagName("reversed");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("{;3AO#96NG~2pA", "head");
      document0.tagName("head");
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Element element0 = document0.body();
      element0.tagName("#");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Parser.parse("textarea", "textarea");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Tag tag0 = Tag.valueOf("br");
      CDataNode cDataNode0 = new CDataNode("s.T{Q");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, ")&:]ga<,g.c:@m!6_", attributes0);
      formElement0.tag();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Element element0 = document0.body();
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d", "d");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      Element element0 = document0.body();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Tag tag0 = Tag.valueOf("meta");
      CDataNode cDataNode0 = new CDataNode("meta");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "meta", attributes0);
      formElement0.selectFirst("meta");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Document document0 = new Document(" wBGa1XFf");
      document0.tagName(" wBIG1XFf");
      document0.selectFirst(" wBIG1XFf");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(c1',7`7il", "(c1',7`7il");
      Element element0 = document0.appendElement("br");
      element0.selectFirst("br");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Element element0 = document0.body();
      Element element1 = element0.after("id");
      document0.tagName("id");
      element1.prependChild(document0);
      element0.selectFirst("id");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      Element element0 = document0.appendElement("id");
      element0.select("id");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#fFZXUI", "#fFZXUI");
      document0.setSiblingIndex((-471));
      document0.removeClass(";4KK<y");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xd", "xd");
      Element element0 = document0.body();
      element0.removeClass("xd");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.empty();
      document0.removeClass("");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      Element element0 = document0.body();
      Element element1 = element0.after("id");
      element1.before((Node) document0);
      element1.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("lDnHRH*UOa", "!|Ue");
      Element element0 = document0.head();
      element0.prependText("lDnHRH*UOa");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d", "d");
      Element element0 = document0.prependChild(document0);
      element0.prependText("b?gjA&1Mq4AC72");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Document.createShell("://");
      Element element0 = document0.head();
      element0.prepend("org.jsoup.select.Evaluator$IsRoot");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      Element element0 = document0.appendElement("id");
      element0.prepend("org.jsoup.nodes.Element$2");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = new Document("");
      document0.prepend("");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = new Document("systemid");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("a#ci", "a#ci");
      Element element0 = document0.head();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("ascii", "ascii");
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Document.createShell("@goVuI8Np6a]A1un)aq");
      Element element0 = new Element("y]]SfMm");
      document0.appendTo(element0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = new Document(":parent%s");
      document0.reparentChild(document0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Element element0 = document0.head();
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("wmU91XF");
      Attributes attributes0 = cDataNode0.attributes();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("wmU91XF", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.nodes.Element", attributes0);
      formElement0.nodeName();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      Element element0 = document0.body();
      element0.after("id");
      element0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element", "org.jsoup.nodes.Element");
      Element element0 = document0.prependElement("org.jsoup.nodes.Element");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Element element0 = document0.body();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = new Document("");
      Element element0 = document0.prependElement("org.jsoup.select.Evaluator$IsLastOfType");
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(325);
      element0.is((Evaluator) evaluator_IndexLessThan0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Document document0 = Document.createShell(" wmGa1XFf");
      Element element0 = document0.tagName(" wmGa1XFf");
      element0.is("wmga1xff");
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("org.jsoup.nodes.NodeUtils", "");
      Node[] nodeArray0 = new Node[0];
      document0.insertChildren(1, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      Node[] nodeArray0 = new Node[0];
      element0.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = new Document("systemid");
      LinkedList<Comment> linkedList0 = new LinkedList<Comment>();
      document0.insertChildren(0, (Collection<? extends Node>) linkedList0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = new Document("/NbD~WZ");
      document0.setSiblingIndex((-2664));
      document0.html("4qyv]wj@s");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Document document0 = new Document("/NbD~WZ");
      document0.html("<l/\"3`{l!zyv'D");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      File file0 = MockFile.createTempFile("#root", "BQZ6)>ef.UKx");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      Document document0 = Parser.parseBodyFragmentRelaxed("BQZ6)>ef.UKx", "BQZ6)>ef.UKx");
      document0.html(mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Element element0 = new Element("QzmQs[6J:IRu");
      element0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Parser.parse("#root", "#root");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      Pattern pattern0 = Pattern.compile("id", 17);
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Element element0 = new Element("wdm5GEXFf");
      element0.getElementsMatchingText("wmGEXFf");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("id", "#");
      Pattern pattern0 = Pattern.compile("#", 325);
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      document0.getElementsMatchingOwnText("id");
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.getElementsContainingText("");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput(":R[ke@(X>Qj3?%45'v", ":R[ke@(X>Qj3?%45'v");
      document0.getElementsContainingOwnText("");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("br", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("br");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "br", attributes0);
      element0.getElementsByTag("<rh|u");
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("{U2o", "{U2o");
      document0.prependElement("{U2o");
      document0.getElementsByTag("{U2o");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#", "#");
      document0.getElementsByIndexLessThan(8225);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("?:xje", "?:xje");
      document0.getElementsByIndexGreaterThan(512);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("yML.,H9S", "yML.,H9S");
      document0.getElementsByIndexEquals(0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Tag tag0 = Tag.valueOf("java.lang.string@0000000014");
      CDataNode cDataNode0 = new CDataNode("X7*8wdhuM1f/:\"6");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "X7*8wdhuM1f/:\"6", attributes0);
      formElement0.toggleClass("X7*8wdhuM1f/:\"6");
      formElement0.addClass("br");
      formElement0.getElementsByClass("br");
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.getElementsByAttributeValueStarting("br", "head");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Element element0 = new Element("QzmQs[6J:IRu");
      element0.getElementsByAttributeValueNot("QzmQs[6J:IRu", "<QzmQs[6J:IRu></QzmQs[6J:IRu>");
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("~'0ZloR7", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("~'0ZloR7", "~'0ZloR7");
      FormElement formElement0 = new FormElement(tag0, "~'0ZloR7", attributes1);
      formElement0.getElementsByAttributeValueMatching("~'0ZloR7", "~'0ZloR7");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      document0.attr("id", "id");
      document0.getElementsByAttributeStarting("id");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Tag tag0 = Tag.valueOf(" wBGa1XFf");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute(" wBGa1XFf", " wBGa1XFf", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      FormElement formElement0 = new FormElement(tag0, " wBGa1XFf", attributes1);
      formElement0.getElementsByAttribute(" wBGa1XFf");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Document document0 = Document.createShell("cpo`4^dH=I>O(f.if");
      Element element0 = document0.prependChild(document0);
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("qK", "qK");
      Element element0 = document0.head();
      element0.childNodes = null;
      element0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.limitedQuirks;
      Document document1 = document0.quirksMode(document_QuirksMode0);
      document1.siblingIndex = (-2254);
      document0.empty();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("P.T2i&$P5", " 4Sl6_dDLM~V0aG");
      Element element0 = document0.body();
      element0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xd", "xd");
      Element element0 = document0.body();
      element0.doClone(element0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Element element0 = new Element("wdm5GEXFf");
      element0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      Element element0 = document0.prependElement("body");
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      document0.clone();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("ascii", "       ");
      document0.clone();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Element element0 = document0.body();
      Set<String> set0 = document0.classNames();
      element0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("wmGEXFf");
      Attributes attributes0 = cDataNode0.attributes();
      Tag tag0 = Tag.valueOf("wmGEXFf");
      FormElement formElement0 = new FormElement(tag0, "ins", attributes0);
      Element element0 = formElement0.toggleClass("RgoU*}`[h1{q6n{auIx");
      element0.classNames();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.Element");
      CDataNode cDataNode0 = new CDataNode("6c3rzo=D&F|]6:6HT(");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.nodes.Element", attributes0);
      formElement0.toggleClass("6c3rzo=D&F|]6:6HT(");
      formElement0.className();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.empty();
      document0.children();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("ascii", "#");
      Element element0 = document0.prependElement("H");
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = Parser.parse("ins", "ins");
      Element element0 = document0.body();
      Element element1 = element0.empty();
      element1.before((Node) element0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("H/]", "(MPhm");
      Element element0 = document0.prependElement("(MPhm");
      element0.setParentNode(document0);
      element0.before("#root");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xd", "xd");
      Element element0 = document0.body();
      Element element1 = element0.after("xd");
      element1.before("GPy? M>.i'KJ^/6w");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = new Document(" wBGa1XFf");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Parser.parse("#", "#");
      document0.addClass("              ");
      document0.attributes();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      Element element0 = document0.body();
      element0.attr(">9vpdh+rmeh[", true);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = new Document("/NbD~WZ");
      document0.setSiblingIndex((-2664));
      document0.attr("/NbD~WZ", false);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xd", "xd");
      Element element0 = document0.body();
      Element element1 = element0.firstElementSibling();
      element1.attr("xd", true);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = new Document("/NbD~WZ");
      document0.setSiblingIndex((-2664));
      document0.attr("kEJu#$70$NW$w|~", "6");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      Element element0 = document0.body();
      element0.attr("id", "id");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Parser.parse("I)q%5\"!y9Yxkn", "id");
      Element element0 = document0.head();
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      Element element0 = document0.body();
      element0.appendText("id");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("compact", "compact");
      Element element0 = document0.head();
      element0.appendText("C:r-c_\"}|n=1r.");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      StringReader stringReader0 = new StringReader("U=");
      Document document0 = parser0.parseInput((Reader) stringReader0, "body");
      Element element0 = document0.head();
      element0.appendElement("body");
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Document document0 = new Document(" wBGa1XFf");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("l.", true);
      document0.setSiblingIndex((-135));
      document0.appendChild(xmlDeclaration0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Element element0 = new Element("wdm5GEXFf");
      Element element1 = element0.prependElement("head");
      element1.appendChild(element0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("meta", parseSettings0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "textarea", (Attributes) null);
      pseudoTextElement0.append("id");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d", "d");
      Parser parser0 = Parser.xmlParser();
      Document document1 = parser0.parseInput("jS)", "O+(wZBGDX9-5De");
      document0.appendChild(document1);
      document1.append("U*eSY=ZMD1");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Tag tag0 = Tag.valueOf("wmGEXFf");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "wmGEXFf", attributes0);
      pseudoTextElement0.append("");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Element element0 = document0.prependChild(document0);
      document0.after((Node) element0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" wmG9a1XFf", " wmG9a1XFf");
      Element element0 = document0.body();
      Element element1 = element0.firstElementSibling();
      element1.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Document document0 = Document.createShell(":parent%s");
      Element element0 = document0.appendElement("[X");
      element0.after(":parent%s");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Element element0 = document0.head();
      Element element1 = element0.after("id");
      element1.before((Node) element1);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xd", "xd");
      Element element0 = document0.body();
      Element element1 = element0.after("xd");
      element1.addClass("xd");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Document document0 = Parser.parse("T;rDB@%B4", "T;rDB@%B4");
      document0.siblingIndex = (-185);
      document0.addClass("{J.p:");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.wrap("389zpf1`W8%IWtj:");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      // Undeclared exception!
      try { 
        document0.wrap("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Element element0 = new Element(" wmG9a1XFf");
      element0.reparentChild(element0);
      // Undeclared exception!
      element0.val("$[?gDZ2u ;Z-l8`{+_{");
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("~'0ZloR7", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("~'0ZloR7", "~'0ZloR7");
      FormElement formElement0 = new FormElement(tag0, "~'0ZloR7", attributes1);
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      // Undeclared exception!
      try { 
        formElement0.val("Jg/");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parse("#", "#");
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":nth-`hild(%d)", ":nth-`hild(%d)");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.textNodes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("#root", "#root");
      // Undeclared exception!
      try { 
        document0.text("#root");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = new Document(" wBIn1XFf");
      Element element0 = document0.tagName("systemId");
      element0.childNodes = null;
      // Undeclared exception!
      try { 
        element0.text();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("[z", "[z");
      Element element0 = document0.appendElement("[X");
      element0.setSiblingIndex((-2151));
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.tagName("id");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Parser parser1 = parser0.settings((ParseSettings) null);
      Document document0 = parser1.parseInput("d", "d");
      // Undeclared exception!
      try { 
        document0.tagName("d");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.Tag", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("ascii", "#");
      // Undeclared exception!
      try { 
        document0.tagName((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Element element0 = new Element(" wmG9a1XFf");
      element0.reparentChild(element0);
      // Undeclared exception!
      try { 
        element0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      // Undeclared exception!
      try { 
        document0.selectFirst("m?\"bf&j_A.$7C>`!");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'm?\"bf&j_A.$7C>`!': unexpected token at '?\"bf&j_A.$7C>`!'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      // Undeclared exception!
      try { 
        document0.selectFirst("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Document.createShell("[m_V+pULhhT%k2$`6");
      // Undeclared exception!
      try { 
        document0.select("]r2/)D'b?Kt0Ya)[J");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query ']r2/)D'b?Kt0Ya)[J': unexpected token at ']r2/)D'b?Kt0Ya)[J'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.select("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = new Document("id");
      // Undeclared exception!
      try { 
        document0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Document.createShell("(3h}MY1");
      CDataNode cDataNode0 = new CDataNode("#root");
      document0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
      try { 
        document0.previousElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("wmeE+Ff", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "wmeE+Ff", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("k", "k");
      Element element0 = document0.prependChild(document0);
      // Undeclared exception!
      element0.prependElement(":Y,/;j_w[2");
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.prependElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = Parser.parse("ZV9~m/F-", "ZV9~m/F-");
      Element element0 = document0.body();
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = parser0.parseFragmentInput("-i&([%UR`$d|Gz'c|?{", document0, "java.lang.string@0000000101");
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.prependChild(document0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableList", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("textarea", "X3:[6:e");
      Element element0 = document0.appendChild(document0);
      CDataNode cDataNode0 = new CDataNode("textarea");
      List<Node> list0 = cDataNode0.ensureChildNodes();
      element0.childNodes = list0;
      // Undeclared exception!
      try { 
        element0.prependChild(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("ascii", parseSettings0);
      Element element0 = new Element(tag0, "ascii");
      element0.prependChild(element0);
      // Undeclared exception!
      element0.prepend("Split offset must not be greater than current text length");
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xd", "xd");
      // Undeclared exception!
      try { 
        document0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("{;3AO#96NG~2pA", "head");
      StringBuffer stringBuffer0 = new StringBuffer();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(2181);
      // Undeclared exception!
      document0.outerHtmlTail(stringBuffer0, 8240, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("=WbpV", "=WbpV");
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, 8204, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("#fFZXUI", "#fFZXUI");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail((Appendable) null, 93, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Document.createShell(" wmGa1XFf");
      StringBuffer stringBuffer0 = new StringBuffer(4);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(stringBuffer0, (-4325), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Zc[C", "Zc[C");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      try { 
        document0.outerHtmlTail(pipedWriter0, (-2704), document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("XUC6dSiIzQ,B");
      FormElement formElement0 = new FormElement(tag0, "id", attributes0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("g@eg}4PyT-)");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.indentAmount(639);
      // Undeclared exception!
      formElement0.outerHtmlHead(mockFileWriter0, 639, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("wmGEXFf", "wmGEXFf");
      StringBuilder stringBuilder0 = new StringBuilder(32);
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(stringBuilder0, (-2053), (Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Element element0 = new Element("+(gw((n^qW(");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Sm'/:`&c'b4&a/&QM");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        element0.outerHtmlHead(mockPrintWriter0, (-1), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Tag tag0 = Tag.valueOf("(?H1d6AhuGxiQ");
      FormElement formElement0 = new FormElement(tag0, "java.lang.string@0000000128", (Attributes) null);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        formElement0.outerHtmlHead(pipedWriter0, 639, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Tag tag0 = Tag.valueOf("java.lang.string@0000000014");
      CDataNode cDataNode0 = new CDataNode("X7*8wdhuM1f/:\"6");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "X7*8wdhuM1f/:\"6", attributes0);
      formElement0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        formElement0.nextElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      document0.prependChild(document0);
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(9);
      // Undeclared exception!
      document0.is((Evaluator) evaluator_IndexLessThan0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Document.createShell("'");
      // Undeclared exception!
      try { 
        document0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(59XiAyif{8sG%9$", "w!{1NeD5L");
      // Undeclared exception!
      try { 
        document0.is("(59XiAyif{8sG%9$");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query '(59XiAyif{8sG%9$': unexpected token at '(59XiAyif{8sG%9$'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Parser.parse("L7X", "L7X");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.is("L7X");
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      Document document1 = document0.normalise();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) document1;
      nodeArray0[1] = (Node) document1;
      nodeArray0[2] = (Node) document1;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      nodeArray0[6] = (Node) document1;
      nodeArray0[7] = (Node) document1;
      // Undeclared exception!
      try { 
        document0.insertChildren(1, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Parser.parse("#", "b]&o`lbPLFrGe*bN");
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document0;
      nodeArray0[4] = (Node) document0;
      document0.addChildren(nodeArray0);
      // Undeclared exception!
      document0.html("K");
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Tag tag0 = Tag.valueOf("java.lang.string@0000000014");
      CDataNode cDataNode0 = new CDataNode("X7*8wdhuM1f/:\"6");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "X7*8wdhuM1f/:\"6", attributes0);
      formElement0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        formElement0.html("java.lang.string@0000000014");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        document0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parse(" > ", "4[O");
      document0.prependChild(document0);
      MockFile mockFile0 = new MockFile("seamless");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0);
      // Undeclared exception!
      document0.html(mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("N&4SUjGD", "N&4SUjGD");
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":nth-`hild(%d)", ":nth-`hild(%d)");
      // Undeclared exception!
      try { 
        document0.html((StringWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("s", "9 )");
      Element element0 = document0.prependChild(document0);
      // Undeclared exception!
      element0.html();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.charset((Charset) null);
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000128", "a7*fzKq");
      document0.outputSettings(document_OutputSettings0);
      // Undeclared exception!
      try { 
        document0.html();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document$OutputSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("}Qe", "}Qe");
      Element element0 = document0.appendElement("}Qe");
      element0.siblingIndex = (-921);
      // Undeclared exception!
      try { 
        document0.html();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = new Document(" > ");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("ascii", "#");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("html", "");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText("n8{;%a`#|E5sG ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: n8{;%a`#|E5sG 
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = new Document("(T?CvtpYfa?aQE%[VLX");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("(T?CvtpYfa?aQE%[VLX");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: (T?CvtpYfa?aQE%[VLX
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("fr", "fr");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsContainingText("fr");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xd", "xd");
      // Undeclared exception!
      try { 
        document0.getElementsByTag("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Parser.parse("reversed", "br");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexLessThan((-3102));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("h?4XN!:v", "h?4XN!:v");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.getElementsByIndexGreaterThan((-1189));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("fr", "fr");
      List<Node> list0 = document0.childNodesCopy();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.getElementsByClass("fr");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.NodeTraversor", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      // Undeclared exception!
      try { 
        document0.getElementsByClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#root", "_G,G~;^");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("/e,G|W", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("k", "k");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("body", "IdY&tiCMp{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: IdY&tiCMp{
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding((String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("", "vmXjG2@^q&zN");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("", "E$0N D:7OFr");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Wd", "Wd");
      // Undeclared exception!
      try { 
        document0.getElementById((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = new Document("|BQ<}NS/");
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":nth-`hild(%d)", ":nth-`hild(%d)");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.data();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.select.=va-uator$IsNthChild");
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.=va-uator$IsNthChild", (Attributes) null);
      formElement0.prependChild(formElement0);
      // Undeclared exception!
      try { 
        formElement0.cssSelector();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Parser.parse("#", "#");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("~'0ZloR7", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("~'0ZloR7", "~'0ZloR7");
      FormElement formElement0 = new FormElement(tag0, "~'0ZloR7", attributes1);
      String[] stringArray0 = new String[0];
      attributes0.keys = stringArray0;
      // Undeclared exception!
      try { 
        formElement0.classNames();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("qK", "qK");
      Element element0 = document0.head();
      element0.childNodes = null;
      // Undeclared exception!
      try { 
        element0.children();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Document.createShell("id");
      // Undeclared exception!
      try { 
        document0.child(58);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 58, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Tag tag0 = Tag.valueOf("id");
      FormElement formElement0 = new FormElement(tag0, "id", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.child((-1901));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Document document0 = Parser.parse(" > ", "4[O");
      document0.setParentNode(document0);
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Document document1 = (Document)document0.prependChild(document0);
      // Undeclared exception!
      document1.before("id");
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("OMk]@Lc9j.LM6Ni\"#t", "OMk]@Lc9j.LM6Ni\"#t");
      Element element0 = document0.head();
      element0.siblingIndex = 97692013;
      // Undeclared exception!
      try { 
        element0.before("tag name must not be empty.");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 97692013, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("~'0ZloR7", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "~'0ZloR7", attributes0);
      // Undeclared exception!
      try { 
        formElement0.attr((String) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Element element0 = new Element(" wmG9a1XFf");
      element0.reparentChild(element0);
      // Undeclared exception!
      element0.attr(" wmG9a1XFf", "qwmEFB");
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Tag tag0 = Tag.valueOf("hp~<eyczp.");
      FormElement formElement0 = new FormElement(tag0, "hp~<eyczp.", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.attr((String) null, "hp~<eyczp.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("d", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "d", attributes0);
      formElement0.reparentChild(formElement0);
      // Undeclared exception!
      try { 
        formElement0.appendTo(formElement0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = Document.createShell(":6^=<8)/rSry9U");
      // Undeclared exception!
      try { 
        document0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parse("#", "#");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Parser.parse(" > ", "4[O");
      document0.reparentChild(document0);
      // Undeclared exception!
      document0.appendElement("4[O");
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Document.createShell("X7*8wdhuM1f/:\"6");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.appendElement("X7*8wdhuM1f/:\"6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Parser.parse("&q,%9-4wP", "&q,%9-4wP");
      // Undeclared exception!
      try { 
        document0.appendElement((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parse("8BE{K", "vmJnC");
      Element element0 = document0.createElement("8BE{K");
      document0.setParentNode(element0);
      // Undeclared exception!
      try { 
        document0.appendChild(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      // Undeclared exception!
      try { 
        document0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("~'0ZloR7", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "~'0ZloR7", attributes0);
      formElement0.reparentChild(formElement0);
      // Undeclared exception!
      formElement0.append("textarea");
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("0{vwkriv+8;}o");
      FormElement formElement0 = new FormElement(tag0, "e6Cpn(pf1=N/eE", attributes0);
      // Undeclared exception!
      try { 
        formElement0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      document0.reparentChild(document0);
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = Parser.parse(" > ", "4[O");
      document0.prependChild(document0);
      // Undeclared exception!
      document0.after(" > ");
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = new Document("X7*8wdhuM1f/:\"6");
      Document document1 = Parser.parseBodyFragment("caption", "java.lang.string@0000000115");
      document0.reparentChild(document1);
      // Undeclared exception!
      try { 
        document1.after("caption");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Parser.parse("I)q%5\"!y9Yxkn", "rfwz{iP([u'$[f");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "encoding", (Attributes) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "7}N_J3'nJYrXJc");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "id");
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Tag tag0 = Tag.valueOf("hp~<eyczp.");
      FormElement formElement0 = new FormElement(tag0, "hp~<eyczp.", (Attributes) null);
      formElement0.html((CharBuffer) null);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      document0.hasClass("id");
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      Charset charset0 = document0.charset();
      Set<String> set0 = charset0.aliases();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      Locale locale0 = Locale.KOREAN;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      Element element0 = document0.body();
      element0.data();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("value", "value");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Element element0 = new Element("wdm5GEXFf");
      Element element1 = element0.prependElement("head");
      element1.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      Element element0 = document0.body();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Parser.parse(" > ", "4[O");
      document0.reparentChild(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Element element0 = document0.body();
      Element element1 = element0.after("id");
      document0.prependChild(element1);
      element0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      Element element0 = document0.body();
      element0.html("Insert position out of bounds.");
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Document.createShell("@goVuI8Np6a]A1un)aq");
      Pattern pattern0 = Pattern.compile("s+");
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.empty();
      document0.html();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Element element0 = new Element("wdm5GEXFf");
      element0.baseUri();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      Pattern pattern0 = Pattern.compile("q", 58);
      document0.getElementsMatchingText(pattern0);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Element element0 = new Element("87{o");
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("ht8IuZn=e");
      element0.is((Evaluator) evaluator_Tag0);
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = new Document("(T?CvtpYfa?aQE%[VLX");
      Pattern pattern0 = Pattern.compile("org.jsoup.nodes.Element", 1323);
      document0.getElementsByAttributeValueMatching("", pattern0);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("SelfClosingStartTag", "27");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.outline(true);
      Document document1 = document0.outputSettings(document_OutputSettings1);
      document1.title("27");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":aren%s", ":aren%s");
      Charset charset0 = document0.charset();
      document0.charset(charset0);
      document0.html();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Tag tag0 = Tag.valueOf("br");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "s.T{Q", attributes0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("doctype");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      formElement0.outerHtmlHead(mockFileWriter0, 639, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Tag tag0 = Tag.valueOf("br");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "s.T{Q", attributes0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("doctype");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.outline(true);
      formElement0.outerHtmlHead(mockFileWriter0, 639, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(":aren%s", ":aren%s");
      document0.title("[=");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment(" wmG9a1XFf", " wmG9a1XFf");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document_OutputSettings0.prettyPrint(false);
      document0.outputSettings(document_OutputSettings0);
      document0.html();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      document0.val();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Tag tag0 = Tag.valueOf("wmeE+_Ff");
      FormElement formElement0 = new FormElement(tag0, "wmeE+_Ff", (Attributes) null);
      Element element0 = formElement0.toggleClass("wmeE+_Ff");
      formElement0.addClass("wmeE+_Ff");
      element0.hasClass("wmeE+_Ff");
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Tag tag0 = Tag.valueOf(" wmU91XFf");
      CDataNode cDataNode0 = new CDataNode(" wmU91XFf");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "v%!hvGv0#*P_}om02}+", attributes0);
      Element element0 = formElement0.toggleClass("`nwW-Pc>aidmp~");
      element0.addClass("");
      formElement0.hasClass("tz1rgn.ux8nM8s");
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Tag tag0 = Tag.valueOf("java.lang.string@0000000014");
      CDataNode cDataNode0 = new CDataNode("X7*8wdhuM1f/:\"6");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "X7*8wdhuM1f/:\"6", attributes0);
      formElement0.toggleClass("org.jsoup.nodes.Element$NodeList");
      formElement0.addClass(" 1CE;:");
      formElement0.hasClass("java.lang.string@0000000014");
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Tag tag0 = Tag.valueOf("_.~>Ccl");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, ":%s(%dn)", attributes0);
      formElement0.toggleClass("9xj18n(%#");
      formElement0.hasClass("Tag name must not be empty.");
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("QWQ");
      Attributes attributes0 = cDataNode0.attributes();
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("4[O", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "4[O", attributes0);
      formElement0.toggleClass(">");
      formElement0.hasClass("org.jsoup.select.Evaluator$IndexGreaterThan");
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.select.=va-uator$IsNthChild");
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.=va-uator$IsNthChild", (Attributes) null);
      formElement0.toggleClass("wmeE+_Ff");
      formElement0.hasClass("org.jsoup.nodes.Element$1");
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("id", "#");
      Charset charset0 = document0.charset();
      document0.charset(charset0);
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("ascii", "#");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parse("L7X", "L7X");
      document0.reparentChild(document0);
      Element.preserveWhitespace(document0);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      DataNode dataNode0 = new DataNode((String) null);
      Element.preserveWhitespace(dataNode0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(c1',7`7il", "(c1',7`7il");
      document0.appendElement("br");
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d", "d");
      CDataNode cDataNode0 = new CDataNode("d");
      Element element0 = document0.prependChild(cDataNode0);
      element0.ownText();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#", "#");
      DocumentType documentType0 = new DocumentType("P>*ShYg#|kE", "P>*ShYg#|kE", "org.jsoup.select.Evaluator$IndexEquals");
      Element element0 = document0.prependChild(documentType0);
      element0.ownText();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = Parser.parse(">", "4[O");
      Element element0 = document0.appendText("4[O");
      element0.getElementsContainingText("?!Lz_{'qG=I");
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = Parser.parse(" > ", "4[O");
      Element element0 = document0.appendText("4[O");
      element0.getElementsContainingText("?!Lz_{'qG=I");
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Parser.parse("(?H1d6AhuGxQ", "(?H1d6AhuGxQ");
      document0.appendElement("br");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("d", "d");
      Element element0 = document0.prependText("d");
      element0.text();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("value", "value");
      document0.getElementById("DJabolzT;y");
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Parser.parse("T;rDB@%B4", "T;rDB@%B4");
      document0.reparentChild(document0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("id", "id");
      Element element0 = document0.appendElement("id");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      Element element0 = document0.prependElement("wmgexff");
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Document.createShell("X7*8wdhuM1f/:\"6");
      Element element0 = document0.appendElement("X7*8wdhuM1f/:\"6");
      Elements elements0 = element0.previousElementSiblings();
      // Undeclared exception!
      try { 
        document0.insertChildren((-1), (Collection<? extends Node>) elements0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xd", "xd");
      Element element0 = document0.body();
      Element element1 = element0.firstElementSibling();
      assertNotNull(element1);
      
      Elements elements0 = element1.nextElementSiblings();
      assertEquals("xd", element1.baseUri());
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      document0.nextElementSibling();
      assertEquals("id", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      Element element0 = document0.body();
      Element element1 = element0.after("id");
      element1.before((Node) document0);
      document0.nextElementSibling();
      assertTrue(document0.hasParent());
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Parser.parse("(?H1d6AhuGxQ", "(?H1d6AhuGxQ");
      Element element0 = document0.appendElement("br");
      Elements elements0 = element0.siblingElements();
      assertEquals(1, elements0.size());
      assertEquals("(?H1d6AhuGxQ", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Document document0 = Parser.parse("I)q%5\"!y9Yxkn", "id");
      document0.siblingElements();
      assertEquals("id", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("[", "[");
      TextNode textNode0 = TextNode.createFromEncoded("[", "[");
      Element element0 = document0.doClone(textNode0);
      // Undeclared exception!
      try { 
        element0.siblingElements();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xd", "xd");
      Element element0 = document0.body();
      assertEquals(1, element0.siblingIndex());
      
      element0.after("xd");
      String string0 = element0.cssSelector();
      assertEquals("xd", element0.baseUri());
      assertEquals("html > body:nth-child(2)", string0);
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Element element0 = document0.body();
      String string0 = element0.cssSelector();
      assertEquals(1, element0.siblingIndex());
      assertEquals("html > body", string0);
      assertEquals("id", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Element element0 = new Element(" wmU91XFf");
      element0.reparentChild(element0);
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.select.=va-uator$IsNthChild");
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.select.=va-uator$IsNthChild", (Attributes) null);
      formElement0.toggleClass("wmeE+_Ff");
      formElement0.cssSelector();
      assertEquals("org.jsoup.select.=va-uator$IsNthChild", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(59XiAyif{8sG%9$", "w!{1NeD5L");
      Node[] nodeArray0 = new Node[5];
      // Undeclared exception!
      try { 
        document0.insertChildren((-2252), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      Document document0 = parser0.parseInput("", "");
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        document0.insertChildren(1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Element element0 = new Element("87{o");
      LinkedList<CDataNode> linkedList0 = new LinkedList<CDataNode>();
      // Undeclared exception!
      try { 
        element0.insertChildren(3, (Collection<? extends Node>) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(59XiAyif{8sG%9$", "w!{1NeD5L");
      LinkedHashSet<CDataNode> linkedHashSet0 = new LinkedHashSet<CDataNode>();
      // Undeclared exception!
      try { 
        document0.insertChildren((-1625949436), (Collection<? extends Node>) linkedHashSet0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Elements elements0 = document0.getElementsByIndexGreaterThan((-1464));
      document0.insertChildren(0, (Collection<? extends Node>) elements0);
      assertEquals(4, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      List<DataNode> list0 = document0.dataNodes();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Parser.parse(" > ", "4[O");
      Element element0 = document0.appendText("4[O");
      List<TextNode> list0 = element0.textNodes();
      assertEquals("4[O", element0.baseUri());
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Element element0 = document0.body();
      Element element1 = element0.prependChild(document0);
      assertEquals(1, element1.siblingIndex());
      
      Element element2 = document0.firstElementSibling();
      assertNull(element2);
      assertEquals(0, document0.siblingIndex());
      assertEquals("id", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(c1',7`7il", "(c1',7`7il");
      document0.selectFirst("br");
      assertEquals("(c1',7`7il", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Elements elements0 = document0.getAllElements();
      assertEquals(4, elements0.size());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("H/]", "(MPhm");
      // Undeclared exception!
      try { 
        document0.before("#root");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      Elements elements0 = document0.getElementsByAttribute("Children collection to be inserted must not be null.");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Tag tag0 = Tag.valueOf(";ZA?bb/%3N/6(");
      FormElement formElement0 = new FormElement(tag0, "", (Attributes) null);
      // Undeclared exception!
      try { 
        formElement0.getElementsByAttributeValueNot(":%s(%dn)", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Tag tag0 = Tag.valueOf("org.jsoup.nodes.Element");
      CDataNode cDataNode0 = new CDataNode("6c3rzo=D&F|]6:6HT(");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "org.jsoup.nodes.Element", attributes0);
      Element element0 = formElement0.shallowClone();
      assertEquals("org.jsoup.nodes.Element", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      document0.doSetBaseUri("Children collection to be inserted must not be null.");
      assertEquals("Children collection to be inserted must not be null.", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" wmG9a1XFf", " wmG9a1XFf");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Element element0 = new Element("textarea");
      element0.val("*~Xs@.");
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("}KN\"J`uJi", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "@0[m%FgG9s|21", (Attributes) null);
      formElement0.getElementsByAttributeValueContaining("c3D!W}o v", "c3D!W}o v");
      assertEquals("@0[m%FgG9s|21", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Document document0 = Parser.parse("L7X", "L7X");
      document0.is("L7X");
      assertEquals("L7X", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Element element0 = new Element(" wmG9a1XFf");
      Element element1 = element0.val(" wmG9a1XFf");
      assertEquals(0, element1.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Document document0 = new Document("|BQ<}NS/");
      Elements elements0 = document0.getElementsByIndexEquals((-4397));
      assertEquals("|BQ<}NS/", document0.baseUri());
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      document0.getElementsByAttributeStarting("L-2ajvb_Fe$N");
      assertEquals("id", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Document document0 = Parser.parse("reversed", "br");
      Elements elements0 = document0.getElementsByIndexLessThan((-3102));
      assertEquals("br", document0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      // Undeclared exception!
      try { 
        document0.after("id");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("id", "id");
      Elements elements0 = document0.getElementsMatchingOwnText("PE");
      assertEquals("id", document0.baseUri());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Document document0 = new Document("wmGEXFf");
      document0.select("#root");
      assertEquals("wmGEXFf", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Document document0 = new Document("|BQ<}NS/");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueStarting("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Document document0 = Document.createShell("Pattern syntax error: ");
      document0.getElementsByAttributeValue("%+ k,'/zJf#MHb{", "~:l\"d");
      assertEquals(1, document0.childNodeSize());
      assertEquals("Pattern syntax error: ", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Document document0 = Parser.parse("ZV9~m/F-", "ZV9~m/F-");
      String string0 = document0.wholeText();
      assertEquals("ZV9~m/F-", document0.baseUri());
      assertEquals("ZV9~m/F-", string0);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Document document0 = Parser.parse("id", "id");
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Element element0 = new Element("textarea");
      Elements elements0 = element0.getElementsByClass("textarea");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Document document0 = Document.createShell("@goVuI8Np6a]A1un)aq");
      Elements elements0 = document0.getElementsContainingOwnText("%%hy<!!i)");
      assertEquals("@goVuI8Np6a]A1un)aq", document0.baseUri());
      assertTrue(elements0.isEmpty());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("{MAc(*i@h|0", "{MAc(*i@h|0");
      document0.dataset();
      assertEquals("{MAc(*i@h|0", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Document document0 = new Document("wmGEXFf");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" wmGa1XFf", " wmGa1XFf");
      document0.tagName("textarea");
      String string0 = document0.val();
      assertEquals(" wmGa1XFf", document0.baseUri());
      assertEquals("wmGa1XFf", string0);
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.prependText("");
      boolean boolean0 = document0.hasText();
      assertEquals(2, document0.childNodeSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("value", "value");
      assertEquals(1, document0.childNodeSize());
      
      Element element0 = document0.child(0);
      assertEquals("value", element0.baseUri());
      assertEquals(0, element0.siblingIndex());
      assertNotNull(element0);
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Document document0 = Document.createShell("X7*8wdhuM1f/:\"6");
      Elements elements0 = document0.previousElementSiblings();
      Element element0 = document0.insertChildren((-1), (Collection<? extends Node>) elements0);
      assertEquals("X7*8wdhuM1f/:\"6", element0.baseUri());
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Document document0 = Parser.parse("(c1',7`7il", "(c1',7`7il");
      Comment comment0 = new Comment("(c1',7`7il", "[z");
      document0.prependChild(comment0);
      document0.text();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("{MAc(*i@h|0", "{MAc(*i@h|0");
      Elements elements0 = document0.getElementsMatchingText("");
      assertEquals("{MAc(*i@h|0", document0.baseUri());
      assertEquals(4, elements0.size());
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("xd", "xd");
      // Undeclared exception!
      try { 
        document0.wrap("xd");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Document document0 = new Document(" wBGa1XFf");
      document0.nextElementSiblings();
      assertEquals(" wBGa1XFf", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Document document0 = Document.createShell("Pattern syntax error: ");
      document0.id();
      assertEquals("Pattern syntax error: ", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }
}
