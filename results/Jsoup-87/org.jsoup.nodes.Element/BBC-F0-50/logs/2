* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.jsoup.nodes.Element
* Starting Client-0
* Connecting to master process on port 7358
* Analyzing classpath: 
  - subjects/buggy-versions/Jsoup-87/target/classes
* Finished analyzing classpath
* Generating tests for class org.jsoup.nodes.Element
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2768
* Using seed 1808945279
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 1405 / 2768
[MASTER] 02:56:03.469 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 02:56:04.309 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jsoup.nodes.Element.selectFirst(Ljava/lang/String;)Lorg/jsoup/nodes/Element;
[MASTER] 02:56:04.311 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jsoup.nodes.Element.id()Ljava/lang/String;
[MASTER] 02:56:04.311 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jsoup.nodes.Element.id()Ljava/lang/String;
[MASTER] 02:56:04.316 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jsoup.nodes.Element.classNames(Ljava/util/Set;)Lorg/jsoup/nodes/Element;
[MASTER] 02:56:04.317 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jsoup.nodes.Element.classNames(Ljava/util/Set;)Lorg/jsoup/nodes/Element;
[MASTER] 02:56:04.361 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jsoup.nodes.Element.classNames(Ljava/util/Set;)Lorg/jsoup/nodes/Element;: I14 Branch 62 IFEQ L1263 - false in context: org.jsoup.nodes.Element:classNames(Ljava/util/Set;)Lorg/jsoup/nodes/Element;
[MASTER] 02:56:04.376 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jsoup.nodes.Element.id()Ljava/lang/String;: root-Branch in context: org.jsoup.nodes.Element:id()Ljava/lang/String;
[MASTER] 02:56:04.378 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch org.jsoup.nodes.Element.classNames(Ljava/util/Set;)Lorg/jsoup/nodes/Element;: I8 Branch 61 IFLE L1263 - false in context: org.jsoup.nodes.Element:classNames(Ljava/util/Set;)Lorg/jsoup/nodes/Element;
[MASTER] 02:56:04.379 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jsoup.nodes.Element.html()Ljava/lang/String;
[MASTER] 02:56:04.380 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jsoup.nodes.Element.html()Ljava/lang/String;
[MASTER] 02:56:29.536 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 603s and 1197 generations, 422079 statements, best individual has fitness: 468.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 410
* Number of covered goals: 403
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 95%
* Total number of goals: 308
* Number of covered goals: 292
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 154
* Number of covered goals: 154
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 843
* Number of covered goals: 804
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 63%
* Total number of goals: 695
* Number of covered goals: 438
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 102
* Number of covered goals: 101
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 102
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 92%
* Total number of goals: 308
* Number of covered goals: 282
* Generated 379 tests with total length 1316
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 03:07:30.039 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.9642833333333334% of time used, but only 51/379 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 27%
* Compiling and checking tests
[MASTER] 03:07:43.731 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:44.025 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:44.299 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:44.550 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:44.821 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:45.092 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:45.365 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:46.012 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:46.261 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:46.568 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:46.837 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:47.141 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:47.483 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:47.728 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:47.967 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:48.253 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:48.525 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:48.789 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:49.013 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:49.239 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:49.507 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:49.713 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:49.907 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:50.137 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:50.364 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:50.607 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:50.905 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:51.106 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:51.353 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:51.574 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:51.785 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:52.037 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:52.253 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:52.488 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:52.761 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:52.987 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:53.293 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:53.505 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:53.735 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:54.523 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:54.781 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:55.008 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:55.268 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:55.498 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:55.720 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:55.971 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:56.249 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:56.530 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:56.817 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:57.037 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:57.288 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:57.609 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:57.938 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:58.256 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:58.475 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:58.719 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:58.937 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:59.151 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:59.454 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:59.680 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:07:59.897 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:00.106 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:00.324 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:00.578 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:00.857 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:01.084 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:01.484 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:01.712 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:01.990 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:02.197 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:02.430 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:02.691 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:02.919 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:02.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 03:08:02.925 [logback-1] WARN  JUnitAnalyzer - Failing test:
 ParseSettings parseSettings0 = ParseSettings.preserveCase;
assertNotNull(parseSettings0);

Tag tag0 = Tag.valueOf("ZJZt\"AB7;b", parseSettings0);
assertNotNull(tag0);
assertFalse(tag0.isFormSubmittable());
assertFalse(tag0.isSelfClosing());
assertFalse(tag0.canContainBlock());
assertFalse(tag0.isData());
assertEquals("ZJZt\"AB7;b", tag0.getName());
assertFalse(tag0.isBlock());
assertFalse(tag0.isFormListed());
assertFalse(tag0.preserveWhitespace());
assertTrue(tag0.isInline());
assertFalse(tag0.isEmpty());
assertFalse(tag0.isKnownTag());
assertTrue(tag0.formatAsBlock());
assertEquals("ZJZt\"AB7;b", tag0.toString());

PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "&B<S q#R>!$V%", (Attributes) null);
assertNotNull(pseudoTextElement0);
assertFalse(tag0.isFormSubmittable());
assertFalse(tag0.isSelfClosing());
assertFalse(tag0.canContainBlock());
assertFalse(tag0.isData());
assertEquals("ZJZt\"AB7;b", tag0.getName());
assertFalse(tag0.isBlock());
assertFalse(tag0.isFormListed());
assertFalse(tag0.preserveWhitespace());
assertTrue(tag0.isInline());
assertFalse(tag0.isEmpty());
assertFalse(tag0.isKnownTag());
assertTrue(tag0.formatAsBlock());
assertEquals("ZJZt\"AB7;b", tag0.toString());
assertFalse(pseudoTextElement0.isBlock());
assertEquals(0, pseudoTextElement0.siblingIndex());
assertEquals(0, pseudoTextElement0.childNodeSize());
assertEquals("&B<S q#R>!$V%", pseudoTextElement0.baseUri());
assertEquals("ZJZt\"AB7;b", pseudoTextElement0.tagName());
assertFalse(pseudoTextElement0.hasParent());
assertEquals("ZJZt\"AB7;b", pseudoTextElement0.nodeName());

Element element0 = pseudoTextElement0.toggleClass("K22");
assertNotNull(element0);
assertSame(pseudoTextElement0, element0);
assertSame(element0, pseudoTextElement0);
assertFalse(tag0.isFormSubmittable());
assertFalse(tag0.isSelfClosing());
assertFalse(tag0.canContainBlock());
assertFalse(tag0.isData());
assertEquals("ZJZt\"AB7;b", tag0.getName());
assertFalse(tag0.isBlock());
assertFalse(tag0.isFormListed());
assertFalse(tag0.preserveWhitespace());
assertTrue(tag0.isInline());
assertFalse(tag0.isEmpty());
assertFalse(tag0.isKnownTag());
assertTrue(tag0.formatAsBlock());
assertEquals("ZJZt\"AB7;b", tag0.toString());
assertFalse(pseudoTextElement0.isBlock());
assertEquals(0, pseudoTextElement0.siblingIndex());
assertEquals(0, pseudoTextElement0.childNodeSize());
assertEquals("&B<S q#R>!$V%", pseudoTextElement0.baseUri());
assertEquals("ZJZt\"AB7;b", pseudoTextElement0.tagName());
assertFalse(pseudoTextElement0.hasParent());
assertEquals("ZJZt\"AB7;b", pseudoTextElement0.nodeName());
assertFalse(element0.hasParent());
assertEquals("ZJZt\"AB7;b", element0.tagName());
assertEquals("ZJZt\"AB7;b", element0.nodeName());
assertFalse(element0.isBlock());
assertEquals(0, element0.siblingIndex());
assertEquals("&B<S q#R>!$V%", element0.baseUri());
assertEquals(0, element0.childNodeSize());

Tag tag1 = Tag.valueOf("ZJZt\"AB7;b");
assertNotNull(tag1);
assertTrue(tag1.equals((Object)tag0));
assertNotSame(tag1, tag0);
assertFalse(tag1.isKnownTag());
assertFalse(tag1.isData());
assertFalse(tag1.isEmpty());
assertFalse(tag1.isSelfClosing());
assertEquals("ZJZt\"AB7;b", tag1.toString());
assertEquals("ZJZt\"AB7;b", tag1.getName());
assertFalse(tag1.isBlock());
assertTrue(tag1.isInline());
assertFalse(tag1.isFormListed());
assertTrue(tag1.formatAsBlock());
assertFalse(tag1.canContainBlock());
assertFalse(tag1.isFormSubmittable());
assertFalse(tag1.preserveWhitespace());

Element element1 = pseudoTextElement0.addClass("BoMp}");
assertNotNull(element1);
assertTrue(tag0.equals((Object)tag1));
assertNotSame(tag0, tag1);
assertSame(pseudoTextElement0, element1);
assertSame(pseudoTextElement0, element0);
assertSame(element1, pseudoTextElement0);
assertSame(element1, element0);
assertFalse(tag0.isFormSubmittable());
assertFalse(tag0.isSelfClosing());
assertFalse(tag0.canContainBlock());
assertFalse(tag0.isData());
assertEquals("ZJZt\"AB7;b", tag0.getName());
assertFalse(tag0.isBlock());
assertFalse(tag0.isFormListed());
assertFalse(tag0.preserveWhitespace());
assertTrue(tag0.isInline());
assertFalse(tag0.isEmpty());
assertFalse(tag0.isKnownTag());
assertTrue(tag0.formatAsBlock());
assertEquals("ZJZt\"AB7;b", tag0.toString());
assertFalse(pseudoTextElement0.isBlock());
assertEquals(0, pseudoTextElement0.siblingIndex());
assertEquals(0, pseudoTextElement0.childNodeSize());
assertEquals("&B<S q#R>!$V%", pseudoTextElement0.baseUri());
assertEquals("ZJZt\"AB7;b", pseudoTextElement0.tagName());
assertFalse(pseudoTextElement0.hasParent());
assertEquals("ZJZt\"AB7;b", pseudoTextElement0.nodeName());
assertEquals(0, element1.siblingIndex());
assertEquals("ZJZt\"AB7;b", element1.nodeName());
assertFalse(element1.isBlock());
assertEquals("&B<S q#R>!$V%", element1.baseUri());
assertEquals(0, element1.childNodeSize());
assertEquals("ZJZt\"AB7;b", element1.tagName());
assertFalse(element1.hasParent());

boolean boolean0 = pseudoTextElement0.hasClass("java.lang.string@0000000023");
assertTrue(boolean0);
assertTrue(tag0.equals((Object)tag1));
assertNotSame(tag0, tag1);
assertSame(pseudoTextElement0, element1);
assertSame(pseudoTextElement0, element0);
assertFalse(tag0.isFormSubmittable());
assertFalse(tag0.isSelfClosing());
assertFalse(tag0.canContainBlock());
assertFalse(tag0.isData());
assertEquals("ZJZt\"AB7;b", tag0.getName());
assertFalse(tag0.isBlock());
assertFalse(tag0.isFormListed());
assertFalse(tag0.preserveWhitespace());
assertTrue(tag0.isInline());
assertFalse(tag0.isEmpty());
assertFalse(tag0.isKnownTag());
assertTrue(tag0.formatAsBlock());
assertEquals("ZJZt\"AB7;b", tag0.toString());
assertFalse(pseudoTextElement0.isBlock());
assertEquals(0, pseudoTextElement0.siblingIndex());
assertEquals(0, pseudoTextElement0.childNodeSize());
assertEquals("&B<S q#R>!$V%", pseudoTextElement0.baseUri());
assertEquals("ZJZt\"AB7;b", pseudoTextElement0.tagName());
assertFalse(pseudoTextElement0.hasParent());
assertEquals("ZJZt\"AB7;b", pseudoTextElement0.nodeName());


[MASTER] 03:08:03.171 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:03.408 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:03.690 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:03.944 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:04.191 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:04.503 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:04.782 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:05.038 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:05.265 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:05.559 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:29.176 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing tests to file
* Writing JUnit test case 'Element_ESTest' to results/Jsoup-87/org.jsoup.nodes.Element/BBC-F0-50/tests/2
* Done!

* Computation finished
