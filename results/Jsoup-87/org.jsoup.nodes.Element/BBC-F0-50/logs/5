* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: org.jsoup.nodes.Element
* Starting Client-0
* Connecting to master process on port 6129
* Analyzing classpath: 
  - subjects/buggy-versions/Jsoup-87/target/classes
* Finished analyzing classpath
* Generating tests for class org.jsoup.nodes.Element
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2768
* Using seed 1085772202
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 1405 / 2768
[MASTER] 02:56:45.847 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedList<E> : Type points to itself
[MASTER] 02:56:47.183 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jsoup.nodes.Element.nextElementSibling()Lorg/jsoup/nodes/Element;
[MASTER] 02:56:47.184 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jsoup.nodes.Element.nextElementSibling()Lorg/jsoup/nodes/Element;
[MASTER] 02:56:48.534 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] org.jsoup.nodes.Element.html()Ljava/lang/String;
[MASTER] 02:56:48.536 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] org.jsoup.nodes.Element.html()Ljava/lang/String;
[MASTER] 03:01:06.506 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
* Search finished after 603s and 1033 generations, 351899 statements, best individual has fitness: 466.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 410
* Number of covered goals: 397
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 308
* Number of covered goals: 288
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 99%
* Total number of goals: 137
* Number of covered goals: 135
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 95%
* Total number of goals: 843
* Number of covered goals: 801
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 63%
* Total number of goals: 695
* Number of covered goals: 435
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 99%
* Total number of goals: 102
* Number of covered goals: 101
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 99%
* Total number of goals: 102
* Number of covered goals: 101
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 308
* Number of covered goals: 278
* Generated 349 tests with total length 1127
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 03:08:04.312 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.76295% of time used, but only 51/349 tests minimized), falling back to using all assertions
* Resulting test suite's mutation score: 22%
* Compiling and checking tests
[MASTER] 03:08:18.131 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:18.485 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:18.794 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:19.054 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:19.307 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:19.544 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:19.764 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:19.986 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:20.647 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:20.943 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:21.231 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:21.483 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:21.796 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:22.120 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:22.353 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:22.601 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:22.852 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:23.092 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:23.389 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:23.734 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:23.954 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:24.326 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:24.574 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:24.828 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:25.102 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:25.356 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:25.592 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:25.817 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:26.027 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:26.273 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:26.525 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:26.799 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:27.028 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:27.345 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:27.638 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:27.872 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:28.122 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:28.394 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:28.659 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:28.917 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:29.171 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:29.420 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:30.261 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:30.452 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:30.677 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:30.900 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:31.098 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:31.311 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:31.528 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:31.729 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:31.952 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:32.215 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:32.495 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:32.704 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:32.966 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:33.169 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:33.350 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:33.541 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:33.753 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:33.949 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:34.170 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:34.417 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:34.656 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:34.864 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:35.089 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:35.358 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:35.559 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:35.752 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:35.986 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:36.176 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:36.373 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:36.580 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:36.819 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:37.047 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:37.053 [logback-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.AssertionError: null
[MASTER] 03:08:37.055 [logback-1] WARN  JUnitAnalyzer - Failing test:
 Document document0 = new Document("bLs~.Oi]");
assertFalse(document0.updateMetaCharsetElement());
assertEquals(0, document0.siblingIndex());
assertEquals("bLs~.Oi]", document0.baseUri());
assertEquals("#document", document0.nodeName());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.childNodeSize());
assertEquals("bLs~.Oi]", document0.location());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertFalse(document0.isBlock());
assertFalse(document0.hasParent());
assertNotNull(document0);

String string0 = document0.wholeText();
assertEquals("", string0);
assertFalse(document0.updateMetaCharsetElement());
assertEquals(0, document0.siblingIndex());
assertEquals("bLs~.Oi]", document0.baseUri());
assertEquals("#document", document0.nodeName());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.childNodeSize());
assertEquals("bLs~.Oi]", document0.location());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertFalse(document0.isBlock());
assertFalse(document0.hasParent());
assertNotNull(string0);

Node[] nodeArray0 = document0.childNodesAsArray();
assertEquals(0, nodeArray0.length);
assertFalse(document0.updateMetaCharsetElement());
assertEquals(0, document0.siblingIndex());
assertEquals("bLs~.Oi]", document0.baseUri());
assertEquals("#document", document0.nodeName());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.childNodeSize());
assertEquals("bLs~.Oi]", document0.location());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertFalse(document0.isBlock());
assertFalse(document0.hasParent());
assertNotNull(nodeArray0);

Document document1 = (Document)document0.toggleClass("bLs~.Oi]");
assertFalse(document0.updateMetaCharsetElement());
assertEquals(0, document0.siblingIndex());
assertEquals("bLs~.Oi]", document0.baseUri());
assertEquals("#document", document0.nodeName());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.childNodeSize());
assertEquals("bLs~.Oi]", document0.location());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertFalse(document0.isBlock());
assertFalse(document0.hasParent());
assertEquals(0, document1.siblingIndex());
assertEquals("#document", document1.nodeName());
assertEquals("#root", document1.tagName());
assertFalse(document1.isBlock());
assertEquals("bLs~.Oi]", document1.baseUri());
assertEquals("bLs~.Oi]", document1.location());
assertFalse(document1.hasParent());
assertEquals(0, document1.childNodeSize());
assertFalse(document1.updateMetaCharsetElement());
assertEquals(Document.QuirksMode.noQuirks, document1.quirksMode());
assertNotNull(document1);
assertSame(document0, document1);
assertSame(document1, document0);

Elements elements0 = document0.getElementsByAttributeValueNot("bLs~.Oi]", "bLs~.Oi]");
assertFalse(document0.updateMetaCharsetElement());
assertEquals(0, document0.siblingIndex());
assertEquals("bLs~.Oi]", document0.baseUri());
assertEquals("#document", document0.nodeName());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.childNodeSize());
assertEquals("bLs~.Oi]", document0.location());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertFalse(document0.isBlock());
assertFalse(document0.hasParent());
assertFalse(elements0.isEmpty());
assertEquals(1, elements0.size());
assertNotNull(elements0);
assertSame(document0, document1);

Document document2 = document0.clone();
assertFalse(document0.updateMetaCharsetElement());
assertEquals(0, document0.siblingIndex());
assertEquals("bLs~.Oi]", document0.baseUri());
assertEquals("#document", document0.nodeName());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.childNodeSize());
assertEquals("bLs~.Oi]", document0.location());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertFalse(document0.isBlock());
assertFalse(document0.hasParent());
assertEquals(Document.QuirksMode.noQuirks, document2.quirksMode());
assertFalse(document2.hasParent());
assertFalse(document2.updateMetaCharsetElement());
assertFalse(document2.isBlock());
assertEquals("bLs~.Oi]", document2.location());
assertEquals("bLs~.Oi]", document2.baseUri());
assertEquals("#document", document2.nodeName());
assertEquals(0, document2.childNodeSize());
assertEquals(0, document2.siblingIndex());
assertEquals("#root", document2.tagName());
assertNotNull(document2);
assertFalse(document2.equals((Object)document1));
assertFalse(document2.equals((Object)document0));
assertSame(document0, document1);
assertNotSame(document0, document2);
assertNotSame(document2, document1);
assertNotSame(document2, document0);

boolean boolean0 = document0.hasAttr("");
assertFalse(boolean0);
assertFalse(document0.updateMetaCharsetElement());
assertEquals(0, document0.siblingIndex());
assertEquals("bLs~.Oi]", document0.baseUri());
assertEquals("#document", document0.nodeName());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.childNodeSize());
assertEquals("bLs~.Oi]", document0.location());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertFalse(document0.isBlock());
assertFalse(document0.hasParent());
assertFalse(document0.equals((Object)document2));
assertSame(document0, document1);
assertNotSame(document0, document2);

Document document3 = (Document)document0.toggleClass("");
assertFalse(document0.updateMetaCharsetElement());
assertEquals(0, document0.siblingIndex());
assertEquals("bLs~.Oi]", document0.baseUri());
assertEquals("#document", document0.nodeName());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.childNodeSize());
assertEquals("bLs~.Oi]", document0.location());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertFalse(document0.isBlock());
assertFalse(document0.hasParent());
assertEquals("#root", document3.tagName());
assertEquals("bLs~.Oi]", document3.baseUri());
assertEquals(0, document3.childNodeSize());
assertFalse(document3.updateMetaCharsetElement());
assertEquals("bLs~.Oi]", document3.location());
assertEquals("#document", document3.nodeName());
assertFalse(document3.isBlock());
assertEquals(Document.QuirksMode.noQuirks, document3.quirksMode());
assertEquals(0, document3.siblingIndex());
assertFalse(document3.hasParent());
assertNotNull(document3);
assertFalse(document0.equals((Object)document2));
assertFalse(document3.equals((Object)document2));
assertSame(document0, document3);
assertSame(document0, document1);
assertNotSame(document0, document2);
assertSame(document3, document1);
assertNotSame(document3, document2);
assertSame(document3, document0);

boolean boolean1 = document0.hasClass("java.lang.string@0000000027");
assertTrue(boolean1);
assertFalse(document0.updateMetaCharsetElement());
assertEquals(0, document0.siblingIndex());
assertEquals("bLs~.Oi]", document0.baseUri());
assertEquals("#document", document0.nodeName());
assertEquals("#root", document0.tagName());
assertEquals(0, document0.childNodeSize());
assertEquals("bLs~.Oi]", document0.location());
assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
assertFalse(document0.isBlock());
assertFalse(document0.hasParent());
assertFalse(document0.equals((Object)document2));
assertFalse(boolean1 == boolean0);
assertSame(document0, document3);
assertSame(document0, document1);
assertNotSame(document0, document2);


[MASTER] 03:08:37.308 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:37.579 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:37.785 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:38.057 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:38.298 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:38.607 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:08:38.893 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 03:09:03.441 [logback-2] ERROR JUnitAnalyzer - Ran out of time while checking tests
* Writing tests to file
* Writing JUnit test case 'Element_ESTest' to results/Jsoup-87/org.jsoup.nodes.Element/BBC-F0-50/tests/5
* Done!

* Computation finished
