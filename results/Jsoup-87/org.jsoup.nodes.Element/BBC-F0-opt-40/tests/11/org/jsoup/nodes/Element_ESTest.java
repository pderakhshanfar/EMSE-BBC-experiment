/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 15:47:16 GMT 2021
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PipedWriter;
import java.io.Reader;
import java.io.StringReader;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.UnknownFormatConversionException;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.nodes.TextNode;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Element_ESTest extends Element_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("9lZ{", "9lZ{");
      document0.setSiblingIndex((-592));
      document0.html();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("X%OwsJ\"gvR</Hw", "X%OwsJ\"gvR</Hw");
      document0.toggleClass("X%OwsJ\"gvR</Hw");
      document0.hasClass("X%OwsJ\"gvR</Hw");
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" h&^,n@}`Q6", "T 6H,G3[1[P35");
      document0.toggleClass(" h&^,n@}`Q6");
      document0.toggleClass(" h&^,n@}`Q6");
      document0.hasClass(".");
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Document document0 = Parser.parse("Z7Vs>]t", "Z7Vs>]t");
      document0.toggleClass("Z7Vs>]t");
      Element element0 = document0.toggleClass("Z7Vs>]t");
      element0.toggleClass("&x>u/e%>i)t)%e");
      element0.hasClass("f@h?^ZyV)q<iA1[2LA");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("head", "head");
      document0.setParentNode(document0);
      document0.setParentNode(document0);
      document0.nextElementSiblings();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(xj2vU<~1", "G,Sf?.2E(xj2vU<~1");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlTail(charArrayWriter0, 97, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.nodes.Element$NodeList", "org.jsoup.select.Evaluator$AttributeWithValueMatching");
      MockFile mockFile0 = new MockFile("time", "org.jsoup.nodes.Element$NodeList");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      document0.outerHtmlHead(mockPrintWriter0, 162, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      document0.nodelistChanged();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Document document0 = Parser.parse("y9i", "d@C<~'vOeko 8w");
      document0.ensureChildNodes();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("lj7xi^", "\rXF+ZuN9Vh");
      Document document1 = Document.createShell("\rXF+ZuN9Vh");
      Element element0 = document1.appendTo(document0);
      element0.wrap("r!");
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Document document0 = Document.createShell("lj7xi^");
      Element element0 = document0.body();
      element0.wrap("lj7xi^");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Document document0 = new Document("1-`,^#*R-");
      document0.wholeText();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Document document0 = Parser.parse("s+", "\"be");
      Element element0 = document0.body();
      element0.val((String) null);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Element element0 = new Element("4ZiVs>]t");
      element0.val("4ZiVs>]t");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("96)NYb<muD+ii", "96)NYb<muD+ii");
      document0.setSiblingIndex((-968));
      document0.toggleClass("96)NYb<muD+ii");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "k,wk?i!_8[& -");
      Element element0 = document0.head();
      element0.toggleClass("");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(yj2vU<~1", "G,Sf?.2E(yj2vU<~1");
      document0.appendTo(document0);
      document0.toggleClass("G,Sf?.2E(yj2vU<~1");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Document document0 = Document.createShell("#EmU[G*4Cj@87fNBK L");
      Element element0 = document0.body();
      element0.text("##r.U^=JG%B/n?e3");
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      document0.appendTo(document0);
      document0.text("");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(xj2vU<~1", "\"be");
      document0.text("G,Sf?.2E(xj2vU<~1");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Document document0 = Document.createShell("\rXF+ZuN9Vh");
      document0.text();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("lj7xi^", "lj7xi^");
      Element element0 = document0.clone();
      Element element1 = document0.appendTo(element0);
      element1.tagName("lj7xi^");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      document0.tagName("html");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueMatching", "\"be");
      document0.tagName();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("*|", "*|");
      Element element0 = document0.createElement("head");
      element0.tag();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Document document0 = Parser.parse("a=%A~;16S=6Y>'k!", ";=ddf}Uc#M%fa=5rr");
      document0.tag();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      Element element0 = document0.body();
      element0.shallowClone();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Document document0 = Parser.parse("1]/~966'MpK", "numeric reference with no numerals");
      document0.selectFirst("Saxm");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("title", parseSettings0);
      Element element0 = new Element(tag0, "title");
      element0.selectFirst("title");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Tag tag0 = Tag.valueOf("cite");
      CDataNode cDataNode0 = new CDataNode("Insert position out of bounds.");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "aside", attributes0);
      pseudoTextElement0.selectFirst("cite");
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(xj2vU<~1", "\"be");
      document0.select("id");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Tag tag0 = Tag.valueOf("title");
      CDataNode cDataNode0 = new CDataNode("title");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "title", attributes0);
      formElement0.removeClass("*VCs:pr$LmO@");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("lj7xi^", "lj7xi^");
      document0.appendTo(document0);
      document0.removeClass("lj7xi^");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("#", "org.jsoup.select.Evaluator$AttributeWithValueMatching");
      Element element0 = document0.body();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      Element element0 = document0.body();
      element0.prependText("9lZ{");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("X%OwsJ\"gvR</Hw", "X%OwsJ\"gvR</Hw");
      document0.prependElement("T---6");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("multiple", "multiple");
      Document document1 = document0.clone();
      Element element0 = document0.appendTo(document1);
      element0.prependChild(document1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Document document0 = Document.createShell("_GQPA=i3~");
      Element element0 = document0.head();
      element0.prependChild(document0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("V", "V");
      Element element0 = document0.body();
      element0.prepend("V");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Element element0 = new Element("~r8;(%y,%3<#lYup");
      element0.prepend("");
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Document document0 = Parser.parse("y9i", "d@C<~'vOeko 8w");
      document0.parents();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      Element element0 = document0.body();
      element0.parents();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("textarea", parseSettings0);
      CDataNode cDataNode0 = new CDataNode((String) null);
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "y.-E$-\"w NA3", attributes0);
      formElement0.parent();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("a=%A~;16S=6Y>'k!", "a=%A~;16S=6Y>'k!");
      document0.appendChild(document0);
      document0.parent();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      Element element0 = document0.body();
      element0.ownText();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.nodeName();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      Element element0 = document0.appendTo(document0);
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("-?", "-?");
      Element element0 = document0.head();
      element0.isBlock();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Element element0 = new Element("W}R-Rvy");
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Tag tag0 = Tag.valueOf("W}R-Rvy");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, ":nth-last-of-type(", attributes0);
      formElement0.reparentChild(element0);
      element0.is((Evaluator) evaluator_IsFirstChild0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Element element0 = new Element("multiple");
      element0.is("multiple");
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("a=%A~;16S=6Y>'k!", "a=%A~;16S=6Y>'k!");
      Node[] nodeArray0 = new Node[0];
      document0.insertChildren(1, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Document document0 = Parser.parse("Z7Vs>]t", "Z7Vs>]t");
      Parser parser0 = Parser.htmlParser();
      Document document1 = parser0.parseInput("Z7Vs>]t", "Z7Vs>]t");
      Node[] nodeArray0 = new Node[4];
      DocumentType documentType0 = new DocumentType("Z7Vs>]t", "J,($O{&+,k", "DoctypePublicIdentifier_singleQuoted", "t", "m5Eh}1XTR.Ph 3T");
      nodeArray0[0] = (Node) documentType0;
      nodeArray0[1] = (Node) document1;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) document1;
      document1.insertChildren(0, nodeArray0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("YV", (-488));
      Document document0 = Parser.parseBodyFragmentRelaxed("YV", "YV");
      Elements elements0 = document0.getElementsMatchingText(pattern0);
      Element element0 = document0.appendText("#");
      element0.insertChildren(1, (Collection<? extends Node>) elements0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      element0.html("WqQ NK/)E\"(z:~Ll");
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Document document0 = Parser.parse("y9o", "y9o");
      document0.html("");
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      MockFileWriter mockFileWriter0 = new MockFileWriter("#y?/^ov>6ws6'dd~cR");
      document0.html((OutputStreamWriter) mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Document document0 = new Document("head");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("W}I-'vy", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("W}I-'vy");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "W}I-'vy", attributes0);
      formElement0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      document0.hasAttributes();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.select.StructuralEvaluator$Not", "org.jsoup.select.StructuralEvaluator$Not");
      document0.getElementsMatchingText("7bQ!EatL3FmpsV");
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      Pattern pattern0 = Pattern.compile("#y?/^ov>6ws6'dd~cR", 14);
      document0.getElementsMatchingOwnText(pattern0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("V", "V");
      document0.getElementsMatchingOwnText("V");
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Document document0 = Parser.parse("nngd\"AK)Xn[?Q", "]l/*R");
      document0.getElementsContainingText("]l/*R");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(" h&^,n@}`Q6", "T 6H,G3[1[P35");
      document0.getElementsContainingOwnText((String) null);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Document document0 = Parser.parse("nngd\"AK)Xn[?Q", "]l/*R");
      document0.getElementsByTag("nngd\"AK)Xn[?Q");
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Element element0 = new Element("#y?/^ov>6ws6'dd~cR");
      element0.getElementsByTag("#y?/^ov>6ws6'dd~cR");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Document document0 = Parser.parse("y9i", "d@C<~'vOeko 8w");
      document0.getElementsByIndexLessThan((-905));
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueMatching", "org.jsoup.select.Evaluator$AttributeWithValueMatching");
      document0.getElementsByIndexGreaterThan(1114111);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      document0.getElementsByIndexEquals(57);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      document0.toggleClass(":hes");
      document0.toggleClass("9lZ{");
      document0.getElementsByClass("9lZ{");
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      document0.attr("9lZ{", "9lZ{");
      document0.getElementsByAttributeValueStarting("9lZ{", "9lZ{");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("head", "head");
      document0.getElementsByAttributeValueMatching("head", "@8");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@0000000057", "<)@zO7V");
      Element element0 = document0.body();
      Element element1 = document0.head();
      element1.tagName("font");
      element0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Document document0 = Parser.parse("~{", "~{");
      Element element0 = document0.body();
      element0.empty();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      Element element0 = document0.appendTo(document0);
      element0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(yj2vU<~1", "G,Sf?.2E(yj2vU<~1");
      Element element0 = document0.appendTo(document0);
      document0.doClone(element0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      Element element0 = document0.body();
      Element element1 = element0.firstElementSibling();
      element1.doClone(document0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(j2vU<~1", "G,Sf?.2E(j2vU<~1");
      document0.doClone((Node) null);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Element element0 = new Element("~r8;(%y,%3<#lYup");
      element0.clone();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      document0.appendTo(document0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      document0.classNames((Set<String>) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("9lZ{", "9lZ{");
      document0.setSiblingIndex((-592));
      Set<String> set0 = document0.classNames();
      document0.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Document document0 = Document.createShell("V");
      Element element0 = document0.body();
      Element element1 = element0.firstElementSibling();
      Charset charset0 = document0.charset();
      Set<String> set0 = charset0.aliases();
      element1.classNames(set0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("f]b3", ".kZCK");
      document0.toggleClass("f]b3");
      document0.classNames();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      document0.children();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Document document0 = new Document("#y?/^ov>6ws6'dd~cR");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("YV", "YV");
      document0.childNodeSize();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("sv=hg6NQ$Jo]?/", "Tp$F");
      Element element0 = document0.head();
      element0.before((Node) document0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("3C.J(=a^%CX;Ew<1fsG", "z+AZO;");
      Tag tag0 = Tag.valueOf("Pattern syntax error: ");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "xU", attributes0);
      document0.setParentNode(pseudoTextElement0);
      document0.before("RCDATAEndTagOpen");
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Document document0 = Parser.parse("4ZiVs>]t", "4ZiVs>]t");
      Element element0 = document0.head();
      element0.before("Hi6$U!");
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Element element0 = new Element("4Z7Vs>]t");
      Element element1 = element0.val("6}");
      element1.attributes();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      Element element0 = document0.body();
      element0.attr("9lZ{", false);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Document document0 = new Document("cB~.&>X$;7%9D");
      document0.attr("*", true);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("X%OwsJ\"gvR</Hw", "X%OwsJ\"gvR</Hw");
      Element element0 = document0.clone();
      document0.appendTo(element0);
      document0.attr("X%OwsJ\"gvR", "X%OwsJ\"gvR</Hw");
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Document document0 = new Document("");
      document0.attr(" />", " />");
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":hes", ":hes");
      Element element0 = document0.head();
      element0.appendTo(document0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Document document0 = Document.createShell("FO;sJq`");
      Element element0 = document0.body();
      element0.appendText("/|=B4{L{J<|%3G");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Tag tag0 = Tag.valueOf("Wao.lp[S*");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "Wao.lp[S*", attributes0);
      Element element0 = pseudoTextElement0.appendElement("Wao.lp[S*");
      element0.parent();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("X%OwsJ\"gvR</Hw", "X%OwsJ\"gvR</Hw");
      document0.appendElement("h6");
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("HWS{B<H\"a", "W}I-'vy");
      Element element0 = document0.head();
      element0.appendChild(document0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Document document0 = Parser.parse("T'4^70Z5-", "T'4^70Z5-");
      document0.setSiblingIndex((-1432352094));
      document0.append("T'4^70Z5-");
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@0000000046", "Y<wc_1=mi8");
      Document document1 = document0.normalise();
      document1.parentNode = (Node) document0;
      CDataNode cDataNode0 = new CDataNode("p");
      document0.after((Node) cDataNode0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Document document0 = Document.createShell("X%OwsJ\"gvR</Hw");
      Element element0 = document0.body();
      element0.after((Node) document0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      Document document1 = Parser.parseBodyFragmentRelaxed("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      document1.parentNode = (Node) document0;
      document1.after("\"be");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Document document0 = Document.createShell("V");
      Element element0 = document0.body();
      element0.after("V");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Document document0 = Document.createShell("V");
      Element element0 = document0.body();
      element0.addClass("V");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("lj7xi^", "lj7xi^");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.wrap("F<");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("action", "action");
      // Undeclared exception!
      try { 
        document0.wrap((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("YV", "YV");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.val("center");
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Tag tag0 = Tag.valueOf("Insrt ositi<n ut of bounds.");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "JlSy4K_q'X", attributes0);
      String[] stringArray0 = new String[9];
      attributes0.keys = stringArray0;
      // Undeclared exception!
      try { 
        formElement0.val("org.jsoup.parser.XmlTreeBuilder$1");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jsoup.nodes.Attributes", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueMatching", "\"be");
      // Undeclared exception!
      try { 
        document0.toggleClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Document document0 = new Document(" />");
      // Undeclared exception!
      try { 
        document0.text("Fz0e[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "{");
      // Undeclared exception!
      try { 
        document0.text((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      Comment comment0 = new Comment("9lZ{", "9lZ{");
      document0.setParentNode(comment0);
      // Undeclared exception!
      try { 
        document0.text();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueMatching", "org.jsoup.select.Evaluator$AttributeWithValueMatching");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.tagName(")4cx4JR");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.select.StructuralEvaluator$Not", "org.jsoup.select.StructuralEvaluator$Not");
      // Undeclared exception!
      try { 
        document0.tagName((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Tag name must not be empty.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Element element0 = new Element("action");
      Document document0 = Document.createShell("UU_~>!X$yOJDNo`W");
      document0.setParentNode(element0);
      // Undeclared exception!
      try { 
        document0.siblingElements();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      // Undeclared exception!
      try { 
        document0.selectFirst("Z7Vs>]t");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query ']t': unexpected token at ']t'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.selectFirst("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("W}I-'vy", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("W}I-'vy");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "W}I-'vy", attributes0);
      // Undeclared exception!
      try { 
        formElement0.select("W}I-'vy");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'W}I-'vy': unexpected token at '}I-'vy'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Jx#6Hz", "Jx#6Hz");
      // Undeclared exception!
      try { 
        document0.select((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("YlZ{", "YlZ{");
      // Undeclared exception!
      try { 
        document0.removeClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = Document.createShell("X%OwsJ\"gvR</Hw");
      Comment comment0 = new Comment("GtmW", "Fl8d.Z.;p#98HpUF");
      document0.setParentNode(comment0);
      // Undeclared exception!
      try { 
        document0.previousElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(xj2vU<~1", "\"be");
      // Undeclared exception!
      try { 
        document0.prependText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("head", "head");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.prependElement("head");
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      // Undeclared exception!
      try { 
        document0.prependElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Element element0 = new Element("W}R-Rvy");
      Tag tag0 = Tag.valueOf("W}R-Rvy");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, ":nth-last-of-type(", attributes0);
      formElement0.reparentChild(element0);
      // Undeclared exception!
      try { 
        formElement0.prependChild(element0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Document document0 = Document.createShell("name");
      // Undeclared exception!
      try { 
        document0.prependChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Document document0 = Parser.parse("lj7xi^", "lj7xi^");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.prepend("upm");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Document document0 = Document.createShell("name");
      // Undeclared exception!
      try { 
        document0.prepend((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      Comment comment0 = new Comment("");
      document0.setParentNode(comment0);
      // Undeclared exception!
      try { 
        document0.prepend("~{");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("ETSMxx", "6S>Q'>)Pgc,");
      CDataNode cDataNode0 = new CDataNode("6S>Q'>)Pgc,");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.parent();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Charset charset0 = document0.charset();
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(charBuffer0, (byte)68, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Document document0 = Parser.parse("#root", "#root");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail((Appendable) null, 16, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("X%OwsJ\"gvR</Hw", "X%OwsJ\"gvR</Hw");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "X%OwsJ\"gvR</Hw");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlTail(stringBuilder0, (-208), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(dataOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.indentAmount(2893);
      // Undeclared exception!
      document0.outerHtmlHead(mockPrintWriter0, 13, document_OutputSettings1);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("br");
      Document document0 = parser0.parseInput((Reader) stringReader0, "br");
      StringBuffer stringBuffer0 = new StringBuffer(3927);
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(stringBuffer0, 1316, (Document.OutputSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "#y?/^ov>6ws6'dd~cR");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        document0.outerHtmlHead(stringBuffer0, (-1955994103), document_OutputSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width must be > 0
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      DocumentType documentType0 = new DocumentType("", "B,Uce", "B,Uce", "Y)Z{");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.nextElementSiblings();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(Lw.=92b?Z<mWOZkI$", "(Lw.=92b?Z<mWOZkI$");
      // Undeclared exception!
      try { 
        document0.lastElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("YV", "YV");
      document0.setParentNode(document0);
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      // Undeclared exception!
      document0.is((Evaluator) evaluator_IsOnlyChild0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "{");
      // Undeclared exception!
      try { 
        document0.is((Evaluator) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Document document0 = new Document(")");
      // Undeclared exception!
      try { 
        document0.is("RSirHH'~<");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not parse query 'RSirHH'~<': unexpected token at ''~<'
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("9lZ{", "9lZ{");
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) document0;
      document0.addChildren(nodeArray0);
      // Undeclared exception!
      document0.is("value");
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("W}I-'vy");
      Document document0 = Parser.parseBodyFragment("W}I-'vy", "");
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) document0;
      nodeArray0[1] = (Node) cDataNode0;
      nodeArray0[2] = (Node) document0;
      nodeArray0[3] = (Node) cDataNode0;
      nodeArray0[4] = (Node) document0;
      nodeArray0[5] = (Node) document0;
      // Undeclared exception!
      try { 
        document0.insertChildren(1, nodeArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.html("W#b_l:/Pw#");
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Document document0 = Parser.parse("org.jsoup.parser.TokenQueue", "org.jsoup.parser.TokenQueue");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.html("2;aQ#$+:2j");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      // Undeclared exception!
      try { 
        document0.html((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Document document0 = Parser.parse("java.lang.string@0000000046", "Y<wc_1=mi8");
      Document document1 = document0.normalise();
      document1.parentNode = (Node) document0;
      CDataNode cDataNode0 = new CDataNode("p");
      Element element0 = document0.before((Node) document1);
      element0.parentNode = (Node) cDataNode0;
      // Undeclared exception!
      try { 
        document0.html("Y<wc_1=mi8");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("W}I-'vy", "Uy c' xn6Kx^P");
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        document0.html(pipedWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.Node$OuterHtmlVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.html((BufferedWriter) null);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Document document0 = Document.createShell(" {");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " {");
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.StringCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.nodes.Element", "nV|gd]W:Edmi");
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        document0.html(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueMatching", "org.jsoup.select.Evaluator$AttributeWithValueMatching");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.html();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("9Z{", "9Z{");
      DocumentType documentType0 = new DocumentType("9Z{", (String) null, "9Z{", "9Z{");
      document0.parentNode = (Node) documentType0;
      // Undeclared exception!
      try { 
        document0.html();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("3]q", "3]q");
      document0.childNodes = null;
      // Undeclared exception!
      try { 
        document0.hasText();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Document document0 = Document.createShell("V");
      // Undeclared exception!
      try { 
        document0.hasClass((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueMatching", "org.jsoup.select.Evaluator$AttributeWithValueMatching");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Document document0 = Parser.parse("#root", "#root");
      Comment comment0 = new Comment("#root", "9N+PqT/L~96%0g");
      document0.setParentNode(comment0);
      Pattern pattern0 = Pattern.compile("9N+PqT/L~96%0g", (-1617));
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText(pattern0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.select.StructuralEvaluator$Not", "org.jsoup.select.StructuralEvaluator$Not");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingText(":nth-last-of-type(");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: :nth-last-of-type(
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("V[SBbHTAb=[<A", parseSettings0);
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "V[SBbHTAb=[<A", attributes0);
      // Undeclared exception!
      try { 
        pseudoTextElement0.getElementsMatchingOwnText((Pattern) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("a=%A~;16S=6Y>'k!", "a=%A~;16S=6Y>'k!");
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("SE_|4|^;xok)Te\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: SE_|4|^;xok)Te\"
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("a=%A~;16S=6Y>'k!", "a=%A~;16S=6Y>'k!");
      DocumentType documentType0 = new DocumentType("a=%A~;16S=6Y>'k!", "?&Ye'Ka4@)WGcN?~", "?&Ye'Ka4@)WGcN?~", "SE_|4|^;xok)Te\"", "YV");
      document0.setParentNode(documentType0);
      // Undeclared exception!
      try { 
        document0.getElementsMatchingOwnText("#root");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Document document0 = Parser.parse("y9i", "d@C<~'vOeko 8w");
      // Undeclared exception!
      try { 
        document0.getElementsByTag((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("W}I-'vy");
      Document document0 = Document.createShell("org.jsoup.nods.Eleent$1");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.getElementsByIndexGreaterThan(3);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.getElementsByClass("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Element element0 = new Element("#root");
      // Undeclared exception!
      try { 
        element0.getElementsByAttributeValueStarting("", "r@sLeF[el(,l%_oje");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueNot("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(xj2vU<~1", "\"be");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueMatching("G,Sf?.2E(xj2vU<~1", "~)WTj}(b1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pattern syntax error: ~)WTj}(b1
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueEnding("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(xj2vU<~1", "\"");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("G,Sf?.2E(xj2vU<~1", "\"");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValueContaining("", "org.jsoup.nodes.Element");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Document document0 = Parser.parse("y9i", "d@C<~'vOeko 8w");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeValue("quirks", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "");
      // Undeclared exception!
      try { 
        document0.getElementsByAttributeStarting("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Document document0 = Document.createShell("V");
      // Undeclared exception!
      try { 
        document0.getElementsByAttribute("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000055", "~{");
      // Undeclared exception!
      try { 
        document0.getElementById("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9KZ{", "{");
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Document document0 = Document.createShell("{");
      CDataNode cDataNode0 = new CDataNode("basefont");
      document0.setParentNode(cDataNode0);
      // Undeclared exception!
      try { 
        document0.firstElementSibling();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Document document0 = Document.createShell("");
      Element element0 = document0.body();
      Element element1 = element0.firstElementSibling();
      element1.siblingIndex = (-435);
      // Undeclared exception!
      try { 
        element0.cssSelector();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("f]b3", ".kZCK");
      // Undeclared exception!
      try { 
        document0.classNames((Set<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.select.StructuralEvaluator$Not", "org.jsoup.select.StructuralEvaluator$Not");
      // Undeclared exception!
      try { 
        document0.child(63);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 63, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("YV", "YV");
      // Undeclared exception!
      try { 
        document0.child((-630));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("\"S", "head");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.before("head");
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.select.StructuralEvaluator$Not", "org.jsoup.select.StructuralEvaluator$Not");
      // Undeclared exception!
      try { 
        document0.attr((String) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.attr("java.lang.string@0000000057", "org.jsoup.nodes.CDataNode");
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Document document0 = Document.createShell("o}g.jsoupWnodes8Element$NodeList");
      Element element0 = new Element("o}g.jsoupWnodes8Element$NodeList");
      document0.setParentNode(element0);
      // Undeclared exception!
      try { 
        document0.appendTo(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(xj2vU<~1", "G,Sf?.2E(xj2vU<~1");
      // Undeclared exception!
      try { 
        document0.appendTo((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9KZ{", "{");
      // Undeclared exception!
      try { 
        document0.appendText((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("YV", "YV");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.appendElement("ve\"r");
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("I2fkyz(", "I2fkyz(");
      List<Node> list0 = document0.childNodes();
      document0.childNodes = list0;
      // Undeclared exception!
      try { 
        document0.appendElement("I2fkyz(");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Document document0 = new Document("");
      // Undeclared exception!
      try { 
        document0.appendElement("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Tag tag0 = Tag.valueOf("!#xBb?8jNyrIX");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "attributeNameCharsSorted", attributes0);
      // Undeclared exception!
      try { 
        formElement0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("lj7xi^", "lj7xi^");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.append("lj7xi^");
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("GQX%&, #%,Tx#|aj0^S", "GQX%&, #%,Tx#|aj0^S");
      // Undeclared exception!
      try { 
        document0.append((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      document0.appendTo(document0);
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueMatching", "org.jsoup.select.Evaluator$AttributeWithValueMatching");
      document0.setParentNode(document0);
      // Undeclared exception!
      document0.after("/}RRvy");
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Document document0 = Document.createShell("YV");
      // Undeclared exception!
      try { 
        document0.addClass((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      Tag tag0 = Tag.valueOf("V", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = null;
      try {
        element0 = new Element(tag0, (String) null, attributes0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("ascii", parseSettings0);
      Element element0 = null;
      try {
        element0 = new Element(tag0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Element element0 = null;
      try {
        element0 = new Element("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Document document0 = new Document("K6wW1`hY");
      document0.html((MockPrintWriter) null);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Element element0 = new Element("4ZiVs>]t");
      element0.val();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9UZ{", "9UZ{");
      document0.hasClass("9UZ{");
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(xj2vU<~1", "\"be");
      Element element0 = document0.html("G,Sf?.2E(xj2vU<~1");
      element0.data();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("W}I-'vy", "W}I-'vy");
      Element element0 = document0.html("$S4UI/DCmH0~h");
      element0.hasText();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Document document0 = Document.createShell("a=%A~;16S=6Y>'k!");
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "{");
      document0.elementSiblingIndex();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":hes", ":hes");
      document0.appendTo(document0);
      document0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed(":hes", ":hes");
      Element element0 = document0.head();
      element0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Document document0 = Document.createShell("<!");
      document0.prependChild(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      document0.appendTo(document0);
      document0.nextElementSibling();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("YV", "YV");
      document0.setParentNode(document0);
      document0.cssSelector();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      Element element0 = document0.body();
      element0.append("9lZ{");
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Document document0 = Document.createShell("|c~'TDYOa9>*");
      document0.hasAttr("|c~'TDYOa9>*");
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Element element0 = new Element("4Z7Vs>]t");
      element0.attributes();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9l{", "9l{");
      document0.className();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      // Undeclared exception!
      try { 
        document0.attr((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.ParseSettings", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("publicId", "1-`,^#/v*R-");
      document0.isBlock();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Document document0 = Parser.parse("a=%A~;16S=6Y>'k!", ";=ddf}Uc#M%fa=5rr");
      document0.baseUri();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "");
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      document0.is((Evaluator) evaluator_IsOnlyChild0);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Element element0 = new Element("YV");
      element0.append("");
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("\"S", "head");
      document0.select("head");
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.id();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("9Z{", "9Z{");
      document0.title("G,Sf?.2E(j2vU<~1");
      document0.html();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(j2vU<~1", "G,Sf?.2E(j2vU<~1");
      // Undeclared exception!
      try { 
        document0.html((MockFileWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings document_OutputSettings1 = document_OutputSettings0.prettyPrint(false);
      Document document1 = document0.outputSettings(document_OutputSettings1);
      document1.html();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      document0.toggleClass(":has");
      document0.toggleClass("#");
      document0.hasClass("H");
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Document document0 = Parser.parse("html", "k");
      document0.toggleClass(":hes");
      document0.toggleClass("");
      document0.hasClass(".");
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("java.lang.string@0000000055", "~{");
      document0.val("~{");
      Element element0 = document0.toggleClass("java.lang.string@0000000055");
      document0.toggleClass("footer");
      element0.hasClass("java.lang.string@0000000055");
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      document0.toggleClass(":has");
      document0.toggleClass("9lZ{");
      document0.hasClass("java.lang.string@0000000035");
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Document document0 = Parser.parse("#root", "#root");
      document0.toggleClass(":gt(%d)");
      document0.hasClass("Insert position out of bounds.");
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Document document0 = Parser.parse("", "");
      document0.toggleClass("");
      document0.hasClass("Ins;&t position out  bounds");
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Element element0 = new Element("multiple");
      Comment comment0 = new Comment("multiple");
      element0.prependChild(comment0);
      element0.data();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("W}I-'vy", "W}I-'vy");
      document0.data();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("class", "java.lang.string@0000000047");
      XmlDeclaration xmlDeclaration0 = new XmlDeclaration("-kZNu#3xF%^)t", "class", true);
      document0.prependChild(xmlDeclaration0);
      document0.hasText();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("lj7xi^", "lj7xi^");
      document0.setParentNode(document0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("W}I-'vy");
      Element.preserveWhitespace(cDataNode0);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("~r8;(%y,%3<#lYup", "~r8;(%y,%3<#lYup");
      CDataNode cDataNode0 = new CDataNode("@l");
      document0.appendChild(cDataNode0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Document document0 = Parser.parse("9UZ{", "9UZ{");
      DataNode dataNode0 = new DataNode("9UZ{", "9UZ{");
      document0.appendChild(dataNode0);
      document0.ownText();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Document document0 = Parser.parse("y9i", "d@C<~'vOeko 8w");
      document0.getElementsMatchingOwnText("d@C<~'vOeko 8w");
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("X%OwsJ\"gvR</Hw", "X%OwsJ\"gvR</Hw");
      Element element0 = document0.clone();
      element0.appendTo(document0);
      document0.text();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("f]b3", ".kZCK");
      document0.getElementById("org.jsoup.select.StructuralEvaluator$Root");
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Document document0 = new Document("lj7xi^");
      Document document1 = document0.normalise();
      Element element0 = document1.head();
      element0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      Element element0 = new Element("#y?/^ov>6ws6'dd~cR");
      document0.appendTo(element0);
      document0.lastElementSibling();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Document document0 = Document.createShell("~{");
      document0.appendTo(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("head", "head");
      document0.setParentNode(document0);
      document0.firstElementSibling();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("W}I-'vy", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("W}I-'vy");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "W}I-'vy", attributes0);
      formElement0.previousElementSibling();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Document document0 = Document.createShell("~{");
      document0.appendTo(document0);
      document0.previousElementSiblings();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Document document0 = Parser.parse("lj7xi^", "lj7xi^");
      document0.setParentNode(document0);
      Document document1 = Document.createShell("org.jsoup.nodes.Element");
      document0.before((Node) document1);
      document0.nextElementSiblings();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Tag tag0 = Tag.valueOf("!#xBb?8jNyrIX");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "attributeNameCharsSorted", attributes0);
      formElement0.nextElementSibling();
      assertEquals("attributeNameCharsSorted", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Document document0 = Parser.parse("#y?/^ov>6ws6'dd~cR", "#y?/^ov>6ws6'dd~cR");
      document0.appendTo(document0);
      Elements elements0 = document0.siblingElements();
      assertEquals("#y?/^ov>6ws6'dd~cR", document0.baseUri());
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, false);
      Tag tag0 = Tag.valueOf("d5j", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "d5j", attributes0);
      formElement0.siblingElements();
      assertEquals("d5j", formElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Document document0 = Parser.parse("!)1", "!)1");
      Element element0 = document0.body();
      element0.before("!)1");
      String string0 = element0.cssSelector();
      assertEquals("!)1", element0.baseUri());
      assertEquals("html > body:nth-child(4)", string0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("W}I-'vy", "W}I-'vy");
      Element element0 = document0.addClass("W}I-'vy");
      element0.cssSelector();
      assertEquals(1, element0.childNodeSize());
      assertEquals("W}I-'vy", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9KZ{", "{");
      Node[] nodeArray0 = new Node[8];
      // Undeclared exception!
      try { 
        document0.insertChildren(4, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueMatching", "\"be");
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        document0.insertChildren((-461), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Document document0 = Document.createShell("");
      Pattern pattern0 = Pattern.compile("C'WepV3 6DilE>y4Odq", 52);
      Elements elements0 = document0.getElementsMatchingOwnText(pattern0);
      // Undeclared exception!
      try { 
        document0.insertChildren(33, (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("", "M");
      Elements elements0 = document0.getElementsMatchingOwnText("_'1grUnh :mm|~*3s$5");
      // Undeclared exception!
      try { 
        document0.insertChildren((-2106), (Collection<? extends Node>) elements0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Tag tag0 = Tag.valueOf("java.lang.string@0000000047");
      CDataNode cDataNode0 = new CDataNode(":hes");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "#cKtCrV<x5", attributes0);
      List<DataNode> list0 = formElement0.dataNodes();
      Element element0 = formElement0.insertChildren((-1), (Collection<? extends Node>) list0);
      assertEquals("#cKtCrV<x5", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "{");
      Elements elements0 = document0.getElementsByClass("[vpQMHXu%498]2UHv>D");
      Element element0 = document0.insertChildren(0, (Collection<? extends Node>) elements0);
      assertEquals("{", element0.baseUri());
      assertFalse(element0.hasParent());
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("(Lw.=92b?Z<mWOZkI$", "(Lw.=92b?Z<mWOZkI$");
      DataNode dataNode0 = DataNode.createFromEncoded("(Lw.=92b?Z<mWOZkI$", "(Lw.=92b?Z<mWOZkI$");
      document0.appendChild(dataNode0);
      List<DataNode> list0 = document0.dataNodes();
      assertEquals("(Lw.=92b?Z<mWOZkI$", document0.baseUri());
      assertEquals(1, list0.size());
      assertTrue(list0.contains(dataNode0));
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      document0.appendText("#root");
      List<TextNode> list0 = document0.textNodes();
      assertEquals("9lZ{", document0.baseUri());
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("head", "head");
      Document document1 = (Document)document0.appendText("@l");
      document1.setParentNode(document0);
      document0.nextElementSiblings();
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(xj2vU<~1", "\"be");
      Elements elements0 = document0.getElementsByIndexGreaterThan((-1659));
      assertEquals("\"be", document0.baseUri());
      assertEquals(4, elements0.size());
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Document document0 = new Document(">a%!AIFb(hcMH-R%");
      // Undeclared exception!
      try { 
        document0.selectFirst(">a%!AIFb(hcMH-R%");
        fail("Expecting exception: UnknownFormatConversionException");
      
      } catch(UnknownFormatConversionException e) {
         //
         // Conversion = '''
         //
         verifyException("java.util.Formatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Document document0 = new Document("lj7xi^");
      document0.getAllElements();
      assertEquals("lj7xi^", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Document document0 = Parser.parse("4ZiVs>]t", "4ZiVs>]t");
      // Undeclared exception!
      try { 
        document0.before("Hi6$U!");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(xj2vU<~1", "\"be");
      document0.getElementsByAttribute("publicId");
      assertEquals("\"be", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("org.jsoup.select.StructuralEvaluator$Not", "org.jsoup.select.StructuralEvaluator$Not");
      document0.getElementsByAttributeValueNot("7bQ!EatL3FmpsV", "^s+");
      assertEquals("org.jsoup.select.StructuralEvaluator$Not", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      Element element0 = document0.shallowClone();
      assertEquals("9lZ{", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9lZ{", "9lZ{");
      document0.doSetBaseUri("9lZ{");
      assertEquals("9lZ{", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Document document0 = Document.createShell("X%OwsJ\"gvR</Hw");
      // Undeclared exception!
      try { 
        document0.after((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("W}I-'vy", "W}I-'vy");
      document0.title("W}I-'vy");
      Pattern pattern0 = Pattern.compile("w}i-&v");
      document0.getElementsMatchingText(pattern0);
      assertEquals(1, document0.childNodeSize());
      assertEquals("W}I-'vy", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Document document0 = Parser.parse("j{fR", "v4T^;705-");
      document0.getElementsByAttributeValueContaining("v4T^;705-", "j{fR");
      assertEquals("v4T^;705-", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("W}I-'vy", "W}I-'vy");
      Pattern pattern0 = Pattern.compile("w}i-&v");
      document0.getElementsByAttributeValueMatching((String) null, pattern0);
      assertEquals("W}I-'vy", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Document document0 = Parser.parse("!)1", "!)1");
      Elements elements0 = document0.getElementsContainingText("!)1");
      assertEquals(3, elements0.size());
      assertEquals("!)1", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Document document0 = Parser.parse("G,Sf?.2E(xj2vU<~1", "\"be");
      document0.getElementsByAttributeValueEnding("publicId", "ZCWx!p0|I>e_s3>$");
      assertEquals("\"be", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("9lZ{", "9lZ{");
      document0.is("value");
      assertEquals("9lZ{", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Element element0 = new Element("4ZiVs>]t");
      // Undeclared exception!
      try { 
        element0.getElementsByAttributeValueMatching((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("lj7xi^", "lj7xi^");
      // Undeclared exception!
      try { 
        document0.wrap("F<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Element element0 = new Element("4ZiVs>]t");
      Elements elements0 = element0.getElementsByIndexEquals(0);
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("~r8;(%y,%3<#lYup", "~r8;(%y,%3<#lYup");
      document0.getElementsByAttributeStarting("YlZ{");
      assertEquals(1, document0.childNodeSize());
      assertEquals("~r8;(%y,%3<#lYup", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Document document0 = Parser.parse("'[", "c/E\"|qJ y)y7");
      Elements elements0 = document0.getElementsByIndexLessThan(677);
      assertEquals(3, elements0.size());
      assertEquals("c/E\"|qJ y)y7", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueMatching", "org.jsoup.select.Evaluator$AttributeWithValueMatching");
      // Undeclared exception!
      try { 
        document0.after("/}RRvy");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Document document0 = Document.createShell("X%OwsJ\"gvR</Hw");
      Element element0 = document0.body();
      String string0 = element0.cssSelector();
      assertEquals("html > body", string0);
      assertEquals(1, element0.siblingIndex());
      assertEquals("X%OwsJ\"gvR</Hw", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Document document0 = Parser.parse("Z7Vs>]t", "Z7Vs>]t");
      document0.getElementsByAttributeValueStarting(" />", "Z7y<Vs>]t");
      assertEquals("Z7Vs>]t", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("publicId", "1-`,^#/v*R-");
      document0.getElementsByAttributeValue("head", "1-`,^#/v*R-");
      assertEquals("1-`,^#/v*R-", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("YV", "YV");
      String string0 = document0.wholeText();
      assertEquals("YV", document0.baseUri());
      assertEquals("YV", string0);
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("sv=hg6NQ$Jo]?/", "Tp$F");
      // Undeclared exception!
      try { 
        document0.before((Node) document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9l{", "9l{");
      document0.addClass("9l{");
      document0.className();
      assertEquals("9l{", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Document document0 = Document.createShell("");
      Elements elements0 = document0.getElementsContainingOwnText("YV");
      assertEquals(1, document0.childNodeSize());
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Tag tag0 = Tag.valueOf("cite");
      CDataNode cDataNode0 = new CDataNode("Insert position out of bounds.");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "aside", attributes0);
      pseudoTextElement0.dataset();
      assertEquals("aside", pseudoTextElement0.baseUri());
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Document document0 = Parser.parse("~{", "~{");
      Element element0 = document0.empty();
      assertEquals("~{", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Document document0 = Parser.parse("y9i", "d@C<~'vOeko 8w");
      Element element0 = document0.prependText("D6:");
      assertEquals("d@C<~'vOeko 8w", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Document document0 = Document.createShell("|c~'TDYOa9>*");
      Element element0 = document0.child(0);
      assertEquals(0, element0.siblingIndex());
      assertNotNull(element0);
      assertEquals(1, document0.childNodeSize());
      assertEquals("|c~'TDYOa9>*", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Document document0 = Document.createShell("~{");
      document0.previousElementSiblings();
      assertEquals("~{", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Document document0 = Parser.parseBodyFragmentRelaxed("9UZ{", "9UZ{");
      document0.prependElement("body");
      assertEquals(2, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Document document0 = Parser.parse("s2A", "s2A");
      Elements elements0 = document0.getElementsMatchingText("s2A");
      assertEquals(3, elements0.size());
      assertEquals("s2A", document0.baseUri());
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("Unknown combinator: ", "Z7Vs>]t");
      Element element0 = document0.appendText("SN~");
      element0.text();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("\"?DzYu=O", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("\"?DzYu=O");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "\"?DzYu=O", attributes0);
      element0.children();
      assertEquals("\"?DzYu=O", element0.baseUri());
  }
}
