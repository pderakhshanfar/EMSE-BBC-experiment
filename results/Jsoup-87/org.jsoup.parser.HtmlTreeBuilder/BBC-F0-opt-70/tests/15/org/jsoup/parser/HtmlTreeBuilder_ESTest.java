/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 20 16:31:03 GMT 2021
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.Reader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.HtmlTreeBuilder;
import org.jsoup.parser.HtmlTreeBuilderState;
import org.jsoup.parser.ParseErrorList;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.parser.Token;
import org.jsoup.parser.Tokeniser;
import org.jsoup.parser.XmlTreeBuilder;
import org.jsoup.select.Elements;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class HtmlTreeBuilder_ESTest extends HtmlTreeBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment(":;<YGD,>}$", (Element) null, ":;<YGD,>}$", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
      htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
      Element element0 = htmlTreeBuilder0.getActiveFormattingElement(":;<YGD,>}$");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "NA7U.e@3^5g#hZd L", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.removeFromActiveFormattingElements(document0);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("gyJ");
      Parser parser0 = Parser.xmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "gyJ", parser0);
      Document document1 = Parser.parse("gyJ", "gyJ");
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document1);
      boolean boolean0 = htmlTreeBuilder0.processStartTag("gyJ");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("eect");
      Parser parser0 = Parser.xmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "eect", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
      assertEquals(1, element0.childNodeSize());
      assertNotNull(element0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "NA7U.e@3^5g#hZd L", parser0);
      htmlTreeBuilder0.insertMarkerToFormattingElements();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*UaLrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "NA7KU.e@3^5g#hZd L", parser0);
      Token.Comment token_Comment0 = new Token.Comment();
      htmlTreeBuilder0.insert(token_Comment0);
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Document document0 = Parser.parseBodyFragment("w", "");
      htmlTreeBuilder0.parseFragment("T>#L!xHzh", document0, "", parser0);
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InFrameset;
      htmlTreeBuilder0.error(htmlTreeBuilderState0);
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InTable;
      htmlTreeBuilder0.transition(htmlTreeBuilderState0);
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.newPendingTableCharacters();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.framesetOk(true);
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment(":;<%GD,>es$", (Element) null, ":;<%GD,>es$", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
      htmlTreeBuilder0.replaceActiveFormattingElement((Element) null, (Element) null);
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "NA7U.e@3^5g#hZd L", parser0);
      htmlTreeBuilder0.clearStackToTableBodyContext();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "NA7U.e@3^5g#hZd L", parser0);
      String string0 = htmlTreeBuilder0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "NA7U.e@3^5g#hZd L", parser0);
      htmlTreeBuilder0.state();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Document document0 = Parser.parseBodyFragment("bgsound", "8GeI9LSe_eHd");
      htmlTreeBuilder0.parseFragment(":+w)c,AvJ", document0, "^77Lwwth", parser0);
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("bgsound", parseSettings0);
      Element element0 = new Element(tag0, "r~-dc:u1<zr");
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
      assertFalse(element1.hasParent());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      htmlTreeBuilder0.parseFragment(":+w)c,AvJ", (Element) null, "tfoZ)ot", parser0);
      Element element0 = htmlTreeBuilder0.currentElement();
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      Element element1 = htmlTreeBuilder0.removeLastFormattingElement();
      assertNotNull(element1);
      assertEquals(1, element1.siblingIndex());
      assertEquals("tfoZ)ot", element1.baseUri());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "NA7U.e@^5g#hZd L", parser0);
      Token.EOF token_EOF0 = new Token.EOF();
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.Initial;
      boolean boolean0 = htmlTreeBuilder0.process(token_EOF0, htmlTreeBuilderState0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("bgsound");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "bgsound", parser0);
      Token.CData token_CData0 = new Token.CData("bgsound");
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InFrameset;
      boolean boolean0 = htmlTreeBuilder0.process(token_CData0, htmlTreeBuilderState0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("eect");
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parse(stringReader0, "eect", parser0);
      Token.CData token_CData0 = new Token.CData("-?");
      boolean boolean0 = htmlTreeBuilder0.process(token_CData0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("bgsound");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "bgsound", parser0);
      Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
      Token.Doctype token_Doctype0 = tokeniser0.doctypePending;
      boolean boolean0 = htmlTreeBuilder0.process(token_Doctype0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Tag tag0 = Tag.valueOf("colgroup");
      Element element0 = new Element(tag0, "colgroup");
      Elements elements0 = element0.getElementsByAttributeStarting("colgroup");
      htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
      htmlTreeBuilder0.push((Element) null);
      Element element1 = htmlTreeBuilder0.pop();
      assertNull(element1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("esct");
      Parser parser0 = Parser.xmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "esct", parser0);
      htmlTreeBuilder0.push(document0);
      Element element0 = htmlTreeBuilder0.pop();
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "z:Wa_NZT8RW*Ua!LrH_", parser0);
      htmlTreeBuilder0.parse(stringReader0, "0(D(3f|#@B}:j", parser0);
      Element element0 = htmlTreeBuilder0.pop();
      assertEquals(1, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.originalState();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      Tag tag0 = Tag.valueOf("object");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "5hd)YK$Pk'Fy4!KSP&", attributes0);
      htmlTreeBuilder0.parseFragment("colgroup", formElement0, "5hd)YK$Pk'Fy4!KSP&", parser0);
      htmlTreeBuilder0.markInsertionMode();
      htmlTreeBuilder0.originalState();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("r~-dC:U1<zR", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "", attributes0);
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("r~-dC:U1<zR", formElement0, "selXct", parser0);
      assertEquals(1, list0.size());
      
      boolean boolean0 = htmlTreeBuilder0.onStack(formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "NA7U.e@3^5g#hZd L", parser0);
      Element element0 = htmlTreeBuilder0.lastFormattingElement();
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      Document document0 = Parser.parseBodyFragment("", "");
      htmlTreeBuilder0.parseFragment("'nBba[]TInXHl%qf", document0, "1w,CDxAikWr", parser0);
      Element element0 = htmlTreeBuilder0.currentElement();
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      Element element1 = htmlTreeBuilder0.lastFormattingElement();
      assertNotNull(element1);
      assertEquals(0, element1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QsIGb1!o-BQ|!.7%H");
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "QsIGb1!o-BQ|!.7%H", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.insertInFosterParent(document0);
      assertEquals(2, document0.siblingIndex());
      
      Element element0 = htmlTreeBuilder0.lastFormattingElement();
      assertEquals(2, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Document document0 = Parser.parseBodyFragment("bgsound", "bgsound");
      htmlTreeBuilder0.parseFragment(":+w)c,AvJ", document0, "^77Lwwth", parser0);
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("bgsound", parseSettings0);
      Element element0 = new Element(tag0, "r~-dc:u1<zr");
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      Element element1 = htmlTreeBuilder0.lastFormattingElement();
      assertFalse(element1.isBlock());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
      ParseSettings parseSettings0 = xmlTreeBuilder0.defaultSettings();
      Tag tag0 = Tag.valueOf("style", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "style", (Attributes) null);
      boolean boolean0 = htmlTreeBuilder0.isSpecial(formElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parse("", "");
      htmlTreeBuilder0.isSpecial(document0);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Document document0 = new Document("8GeI9L>vSe_eHd");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("8GeI9L>vSe_eHd", document0, "8GeI9L>vSe_eHd", parser0);
      assertEquals(1, list0.size());
      
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements(document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "NA7U.e@3^5g#hZd L", parser0);
      boolean boolean0 = htmlTreeBuilder0.isInActiveFormattingElements(document0);
      assertFalse(boolean0);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("bgsound");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "bgsound", parser0);
      List<Node> list0 = htmlTreeBuilder0.parseFragment("#root", document0, "G`#B?=sJLy+~7", parser0);
      assertEquals(1, list0.size());
      
      boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("w;:DS'c~wv");
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parse(stringReader0, "tj", parser0);
      Attributes attributes0 = new Attributes();
      htmlTreeBuilder0.processStartTag("w;:DS'c~wv");
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("w;:DS'c~wv", attributes0);
      FormElement formElement0 = htmlTreeBuilder0.insertForm(token_StartTag1, false);
      assertEquals(0, formElement0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader(":;<YGD,>}$");
      Parser parser0 = new Parser(htmlTreeBuilder0);
      htmlTreeBuilder0.parse(stringReader0, ":;<YGD,>}$", parser0);
      parser0.parseInput((Reader) stringReader0, "`{6-z}");
      Tokeniser tokeniser0 = htmlTreeBuilder0.tokeniser;
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("tr", (Attributes) null);
      Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag1);
      assertEquals(0, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Document document0 = Parser.parseBodyFragment("bgsound", "8GeI9LSe_eHd");
      htmlTreeBuilder0.parseFragment(":+w)c,AvJ", document0, "^77Lwwth", parser0);
      CharacterReader characterReader0 = htmlTreeBuilder0.reader;
      ParseErrorList parseErrorList0 = parser0.getErrors();
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("#document", (Attributes) null);
      Element element0 = htmlTreeBuilder0.insertEmpty(token_StartTag1);
      assertEquals("^77Lwwth", element0.baseUri());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("gyJ");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "gyJ", parser0);
      htmlTreeBuilder0.processStartTag("gyJ");
      CharacterReader characterReader0 = new CharacterReader(stringReader0);
      ParseErrorList parseErrorList0 = ParseErrorList.tracking(100);
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("Rg$<}/", attributes0);
      Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
      assertEquals(0, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      Attributes attributes0 = new Attributes();
      Parser parser1 = parser0.setTreeBuilder(htmlTreeBuilder0);
      parser1.parseInput("tfoot", "tfoot");
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("tfoot", attributes0);
      Element element0 = htmlTreeBuilder0.insert(token_StartTag1);
      assertEquals(1, element0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("/3Dg@$ifu3#j?@0qAV");
      Parser parser0 = Parser.xmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "/3Dg@$ifu3#j?@0qAV", parser0);
      assertEquals(1, document0.childNodeSize());
      
      htmlTreeBuilder0.processStartTag("/3Dg@$ifu3#j?@0qAV");
      boolean boolean0 = htmlTreeBuilder0.inTableScope("/3Dg@$ifu3#j?@0qAV");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "z:Wa_NZT8RW*Ua!LrH_", parser0);
      assertEquals(1, document0.childNodeSize());
      
      boolean boolean0 = htmlTreeBuilder0.inTableScope("z:Wa_NZT8RW*Ua!LrH_");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("BeforeHtml");
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "BeforeHtml", parser0);
      assertEquals(1, document0.childNodeSize());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "html";
      stringArray0[2] = "html";
      boolean boolean0 = htmlTreeBuilder0.inScope(stringArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("", (Element) null, "textarea", parser0);
      assertEquals(1, list0.size());
      
      htmlTreeBuilder0.popStackToBefore("");
      String[] stringArray0 = new String[1];
      boolean boolean0 = htmlTreeBuilder0.inScope(stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("br", (Element) null, "br", parser0);
      String[] stringArray0 = new String[3];
      boolean boolean0 = htmlTreeBuilder0.inScope("body", stringArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("<e\u0003`>v8w>");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "<e\u0003`>v8w>", parser0);
      assertEquals(1, document0.childNodeSize());
      
      htmlTreeBuilder0.processStartTag("<e\u0003`>v8w>");
      boolean boolean0 = htmlTreeBuilder0.inScope("<e\u0003`>v8w>");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("body", (Element) null, "body", parser0);
      boolean boolean0 = htmlTreeBuilder0.inListItemScope("body");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("b?g+ouid");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "b?g+ouid", parser0);
      boolean boolean0 = htmlTreeBuilder0.inButtonScope("html");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("z:Wa_NZT8RW*Ua!LrH_", (Element) null, "HLvOQO%=ZOiOPK7", parser0);
      boolean boolean0 = htmlTreeBuilder0.inButtonScope("yfR8vR.W/9&VJ]");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "z:Wa_NZT8RW*Ua!LrH_", parser0);
      assertEquals(1, document0.childNodeSize());
      
      htmlTreeBuilder0.clearStackToTableContext();
      String[] stringArray0 = new String[4];
      stringArray0[1] = "hr";
      stringArray0[2] = "z:Wa_NZT8RW*Ua!LrH_";
      htmlTreeBuilder0.popStackToClose(stringArray0);
      ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Document document0 = Parser.parseBodyFragment("", "S'|@1k");
      htmlTreeBuilder0.parseFragment("", document0, "I", parser0);
      ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("form");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "form", parser0);
      htmlTreeBuilder0.setHeadElement(document0);
      Element element0 = htmlTreeBuilder0.getHeadElement();
      assertEquals(1, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "NA7U.e@3^5g#hZd L", parser0);
      Element element0 = htmlTreeBuilder0.getFromStack("colgroup");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Element element0 = new Element("aba+e");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Elements elements0 = element0.getElementsByIndexGreaterThan((-1614999040));
      htmlTreeBuilder0.stack = (ArrayList<Element>) elements0;
      Element element1 = htmlTreeBuilder0.getFromStack("aba+e");
      assertEquals("", element1.baseUri());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("bgsound");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "bgsound", parser0);
      Element element0 = htmlTreeBuilder0.getFromStack("html");
      boolean boolean0 = htmlTreeBuilder0.onStack(element0);
      assertEquals(2, element0.childNodeSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Tag tag0 = Tag.valueOf("y3ch,<3*L1o;(Nc");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, ". +,e5", attributes0);
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("ud:", formElement0, "area", parser0);
      FormElement formElement1 = htmlTreeBuilder0.getFormElement();
      assertFalse(formElement1.isBlock());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Tag tag0 = Tag.valueOf("colgroup");
      CDataNode cDataNode0 = new CDataNode("tbody");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "head", attributes0);
      htmlTreeBuilder0.setFormElement(formElement0);
      FormElement formElement1 = htmlTreeBuilder0.getFormElement();
      assertTrue(formElement1.isBlock());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "NA7U.e@3^5g#hZd L", parser0);
      htmlTreeBuilder0.insertInFosterParent(document0);
      assertEquals(2, document0.siblingIndex());
      
      Document document1 = htmlTreeBuilder0.getDocument();
      assertEquals(2, document1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("listing");
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.initialiseParse(stringReader0, "Ioq?6.WAc87uM#", parser0);
      Document document0 = htmlTreeBuilder0.getDocument();
      assertEquals(0, document0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "NA7U.e@3^5g#hZd L", parser0);
      String string0 = htmlTreeBuilder0.getBaseUri();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Parser parser0 = Parser.htmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("tabae", (Element) null, "", parser0);
      assertEquals(1, list0.size());
      
      String string0 = htmlTreeBuilder0.getBaseUri();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "noframes", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      Element element0 = htmlTreeBuilder0.getActiveFormattingElement("#document");
      assertEquals(1, element0.childNodeSize());
      assertNotNull(element0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "z:Wa_NZT8RW*Ua!LrH_", parser0);
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "dtf)u@{", parser0);
      assertEquals(1, document0.childNodeSize());
      
      boolean boolean0 = htmlTreeBuilder0.framesetOk();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      boolean boolean0 = htmlTreeBuilder0.framesetOk();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ParseSettings parseSettings0 = htmlTreeBuilder0.defaultSettings();
      assertNotNull(parseSettings0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("gyJ");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "gyJ", parser0);
      htmlTreeBuilder0.processStartTag("gyJ");
      htmlTreeBuilder0.push(document0);
      Element element0 = htmlTreeBuilder0.aboveOnStack(document0);
      assertEquals(1, element0.siblingIndex());
      assertFalse(element0.isBlock());
      assertNotNull(element0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("form");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "form", parser0);
      htmlTreeBuilder0.insertInFosterParent(document0);
      // Undeclared exception!
      htmlTreeBuilder0.toString();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      CharacterReader characterReader0 = new CharacterReader("}x{8&7~959");
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, (ParseErrorList) null);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      htmlTreeBuilder0.currentToken = (Token) token_StartTag0;
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.toString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.resetInsertionMode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "z:Wa_NZT8RW*Ua!LrH_", parser0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.replaceOnStack(document0, document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.removeLastFormattingElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.removeFromStack((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Tag tag0 = Tag.valueOf("hKA@$bDLB");
      FormElement formElement0 = new FormElement(tag0, "hKA@$bDLB", (Attributes) null);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.removeFromActiveFormattingElements(formElement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.reconstructFormattingElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.push((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.EndTag token_EndTag0 = new Token.EndTag();
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InSelectInTable;
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.process(token_EndTag0, htmlTreeBuilderState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilderState$16", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.EOF token_EOF0 = new Token.EOF();
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.BeforeHtml;
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.process(token_EOF0, htmlTreeBuilderState0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.EOF token_EOF0 = new Token.EOF();
      Token.TokenType token_TokenType0 = Token.TokenType.Character;
      token_EOF0.type = token_TokenType0;
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.Initial;
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.process(token_EOF0, htmlTreeBuilderState0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.EndTag token_EndTag0 = new Token.EndTag();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.process(token_EndTag0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragmentRelaxed(">'", "`7m|tt+A}/6iBx'");
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("`7m|tt+A}/6iBx'", document0, "CZI>", parser0);
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Token.Tag token_Tag0 = token_StartTag0.name((String) null);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.process(token_Tag0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      String[] stringArray0 = new String[7];
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.popStackToClose(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.popStackToClose("String must not be empty");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.popStackToBefore("frame");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "NA7U.e@3^5g#hZd L", parser0);
      htmlTreeBuilder0.popStackToClose("S>");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.pop();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.xmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "z:Wa_NZT8RW*Ua!LrH_", parser0);
      htmlTreeBuilder0.insertInFosterParent(document0);
      // Undeclared exception!
      htmlTreeBuilder0.parseFragment("?ys[iGyU", document0, "", parser0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragmentRelaxed("blockquote", "blockquote");
      Parser parser0 = Parser.htmlParser();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.parseFragment((String) null, document0, "head", parser0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Attributes attributes0 = new Attributes();
      Tag tag0 = Tag.valueOf("S>");
      FormElement formElement0 = new FormElement(tag0, "'az+`YXRqGXH", attributes0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.parseFragment("NA7U.e@3^5g#hZd L", formElement0, (String) null, parser0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // BaseURI must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("bgsound");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "bgsound", parser0);
      HtmlTreeBuilder htmlTreeBuilder1 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder1.onStack(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.lastFormattingElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertStartTag("{_TJoCIt-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertStartTag((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragment("org.jsoup.select.Evaluator$AttributeWithValueContaining", "org.jsoup.select.Evaluator$AttributeWithValueContaining");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertOnStackAfter(document0, document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Tag tag0 = Tag.valueOf("hKA@$bDLB");
      FormElement formElement0 = new FormElement(tag0, "hKA@$bDLB", (Attributes) null);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertInFosterParent(formElement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("Z2Bz=O4+\"T");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "rp", parser0);
      htmlTreeBuilder0.popStackToBefore("B");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertInFosterParent(document0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("G>ZM3BK%MMk8f*X#K", (Element) null, "_m1b6pO*KLeD3i=hR\"@", parser0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertInFosterParent((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      token_StartTag0.appendTagName('L');
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertForm(token_StartTag0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertForm(token_StartTag0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertEmpty((Token.StartTag) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertEmpty(token_StartTag0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      CharacterReader characterReader0 = new CharacterReader("tr");
      ParseErrorList parseErrorList0 = ParseErrorList.noTracking();
      Tokeniser tokeniser0 = new Tokeniser(characterReader0, parseErrorList0);
      Token.StartTag token_StartTag0 = tokeniser0.startPending;
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("a$rea", attributes0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insert(token_StartTag1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.StartTag token_StartTag0 = new Token.StartTag();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insert(token_StartTag0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be false
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.Comment token_Comment0 = new Token.Comment();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insert(token_Comment0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Token.Character token_Character0 = new Token.Character();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insert(token_Character0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insert((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("<`@aw!'sqm])itx`fZg");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.initialiseParse(stringReader0, "<`@aw!'sqm])itx`fZg", (Parser) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      PipedReader pipedReader0 = new PipedReader();
      Parser parser0 = Parser.xmlParser();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.initialiseParse(pipedReader0, "", parser0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inSelectScope("6T");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      String[] stringArray0 = new String[3];
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inScope(",<A;`z6{Cfkl6fz-`[", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.getFromStack("!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.getActiveFormattingElement("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "NA7U.e@3^5g#hZd L", parser0);
      htmlTreeBuilder0.popStackToClose("S>");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.generateImpliedEndTags("S>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      HtmlTreeBuilderState htmlTreeBuilderState0 = HtmlTreeBuilderState.InRow;
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.error(htmlTreeBuilderState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.clearFormattingElementsToLastMarker();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.aboveOnStack((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Document document0 = Document.createShell("8GeI9LSe_eHd");
      htmlTreeBuilder0.parseFragment(":+w)c,AvJ", document0, "^77Lwwth", parser0);
      Element element0 = htmlTreeBuilder0.currentElement();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.aboveOnStack(element0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("<e\u0003`>v8w>");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "<e\u0003`>v8w>", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.setFosterInserts(true);
      boolean boolean0 = htmlTreeBuilder0.processStartTag("<e\u0003`>v8w>");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("", (Element) null, "textarea", parser0);
      htmlTreeBuilder0.popStackToBefore("");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insert((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Document document0 = new Document("OxNgYFg");
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("tabaue", document0, "th", parser0);
      Element element0 = htmlTreeBuilder0.insertStartTag("th");
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      Element element1 = htmlTreeBuilder0.getActiveFormattingElement("th");
      assertEquals("th", element1.baseUri());
      assertNotNull(element1);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Document document0 = new Document("OxNgYFg");
      Parser parser0 = Parser.xmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parseFragment("tabaue", document0, "th", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      Element element0 = htmlTreeBuilder0.getActiveFormattingElement("th");
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "NA7U.e@3^5g#hZd L", parser0);
      Document document1 = document0.clone();
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.removeFromActiveFormattingElements(document1);
      assertEquals(1, document1.childNodeSize());
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("gyJ");
      Parser parser0 = Parser.xmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "gyJ", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.clearFormattingElementsToLastMarker();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("Q");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "Q", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.reconstructFormattingElements();
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      boolean boolean0 = htmlTreeBuilder0.processStartTag("Q");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Element element0 = new Element("tabae");
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("tabae");
      Parser parser0 = new Parser(htmlTreeBuilder0);
      htmlTreeBuilder0.parse(stringReader0, "tabae", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements((Element) null);
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      boolean boolean0 = htmlTreeBuilder0.processStartTag("tabae");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Document document0 = Parser.parseBodyFragment("8GeI9L>vSe_eHd", "8GeI9L>vSe_eHd");
      htmlTreeBuilder0.parseFragment(":+w)c,AvJ", document0, "tfoZ)ot", parser0);
      Element element0 = htmlTreeBuilder0.currentElement();
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      htmlTreeBuilder0.reconstructFormattingElements();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Document document0 = new Document("8GeI9L>vSe_eHd");
      htmlTreeBuilder0.parseFragment("8GeI9L>vSe_eHd", document0, "8GeI9L>vSe_eHd", parser0);
      Element element0 = htmlTreeBuilder0.currentElement();
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      assertFalse(document0.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("Z68V^h");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "DoctypeName", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      htmlTreeBuilder0.pushActiveFormattingElements(document0);
      assertEquals(1, document0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Tag tag0 = Tag.valueOf("dir");
      Element element0 = new Element(tag0, "section");
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("th", element0, ";L@[6%:<p:G{y]Ws", parser0);
      htmlTreeBuilder0.pushActiveFormattingElements(element0);
      CDataNode cDataNode0 = new CDataNode("a8f\"5'>==b-/");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "section", attributes0);
      htmlTreeBuilder0.pushActiveFormattingElements(formElement0);
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("bgsound");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "bgsound", parser0);
      Element element0 = htmlTreeBuilder0.removeLastFormattingElement();
      assertNull(element0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("bgsound");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "bgsound", parser0);
      htmlTreeBuilder0.generateImpliedEndTags("html");
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Document document0 = Document.createShell("");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("", document0, "", parser0);
      assertEquals(0, list0.size());
      
      htmlTreeBuilder0.insertStartTag("optgroup");
      boolean boolean0 = htmlTreeBuilder0.inSelectScope("U#4Q \"78z-Hx~s5Gu");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Document document0 = Parser.parseBodyFragment("bgsound", "8GeI9LSe_eHd");
      htmlTreeBuilder0.parseFragment(":+w)c,AvJ", document0, "^77Lwwth", parser0);
      boolean boolean0 = htmlTreeBuilder0.inSelectScope("html");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Element element0 = new Element(", state=");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment(", state=", element0, ", state=", parser0);
      htmlTreeBuilder0.pop();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inSelectScope(", state=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Should not be reachable
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("body", (Element) null, "-(", parser0);
      assertEquals(1, list0.size());
      
      String[] stringArray0 = new String[5];
      stringArray0[2] = "body";
      boolean boolean0 = htmlTreeBuilder0.inScope("^", stringArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Document document0 = Document.createShell("");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("", document0, "", parser0);
      assertEquals(0, list0.size());
      
      htmlTreeBuilder0.insertStartTag("optgroup");
      boolean boolean0 = htmlTreeBuilder0.inListItemScope("section");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("gyJ");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "gyJ", parser0);
      assertEquals(1, document0.childNodeSize());
      
      boolean boolean0 = htmlTreeBuilder0.inScope("akN");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment(":;<YGD,>}$", (Element) null, ":;<YGD,>}$", parser0);
      htmlTreeBuilder0.resetInsertionMode();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.xmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "z:Wa_NZT8RW*Ua!LrH_", parser0);
      Element element0 = document0.body();
      Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
      List<Node> list0 = htmlTreeBuilder0.parseFragment("^hJa=W3x", element1, "klYf'j:-Ij#+", parser0);
      assertEquals(2, list0.size());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("frameset", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("frameset");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag0, "frameset", attributes0);
      htmlTreeBuilder0.parseFragment("frameset", formElement0, "frameset", parser0);
      List<String> list0 = htmlTreeBuilder0.getPendingTableCharacters();
      assertFalse(list0.contains("frameset"));
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Tag tag0 = Tag.valueOf("head");
      FormElement formElement0 = new FormElement(tag0, "frameset", (Attributes) null);
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("noscript", formElement0, "head", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Element element0 = new Element("table");
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("|L", element0, "optgroup", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Element element0 = new Element("colgroup");
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("footer", element0, "B", parser0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Tag tag0 = Tag.valueOf("caption");
      Element element0 = new Element(tag0, "caption");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("-0wGhuaNR(", element0, "caption", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      Element element0 = new Element("thead");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("bgsound", element0, "F$=m/O0h5qE$Bip*?fq", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("tbody", parseSettings0);
      Element element0 = new Element(tag0, "dq&KlS2 'mL");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("=Y\"/&##;", element0, ",l\";M*;L[", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
      ParseSettings parseSettings0 = xmlTreeBuilder0.defaultSettings();
      Tag tag0 = Tag.valueOf("tr", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "tfoot", attributes0);
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("button", formElement0, "areA", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Element element0 = new Element("th");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("th", element0, " :&a\u0006-I9_W(q3F/", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Element element0 = new Element("td");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("td", element0, "style", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Tag tag0 = Tag.valueOf("select");
      Element element0 = new Element(tag0, "select");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("prompt", element0, "tfoot", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment(":;<YGD,>}$", (Element) null, ":;<YGD,>}$", parser0);
      htmlTreeBuilder0.popStackToClose("html");
      htmlTreeBuilder0.resetInsertionMode();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Document.createShell("bgsound");
      Parser parser0 = new Parser(htmlTreeBuilder0);
      htmlTreeBuilder0.parseFragment("bgsound", document0, "w  CmUx-1 LC.bKnyfs", parser0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.replaceActiveFormattingElement((Element) null, document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("Q");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "Q", parser0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertOnStackAfter(document0, document0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must be true
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("Q");
      Parser parser0 = Parser.htmlParser();
      Document document0 = htmlTreeBuilder0.parse(stringReader0, "Q", parser0);
      Element element0 = htmlTreeBuilder0.insertStartTag("Q");
      htmlTreeBuilder0.insertOnStackAfter(element0, document0);
      Element element1 = htmlTreeBuilder0.aboveOnStack(element0);
      assertEquals(2, element1.childNodeSize());
      assertEquals(1, element1.siblingIndex());
      assertNotNull(element1);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragmentRelaxed("blockquote", "blockquote");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("head", document0, "head", parser0);
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.aboveOnStack(document0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Document document0 = Document.createShell("");
      htmlTreeBuilder0.parseFragment("", document0, "", parser0);
      htmlTreeBuilder0.insertStartTag("optgroup");
      htmlTreeBuilder0.clearStackToTableRowContext();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Document document0 = Parser.parseBodyFragment("tr", "video");
      htmlTreeBuilder0.parseFragment("&@", document0, "tfoot", parser0);
      htmlTreeBuilder0.insertStartTag("tr");
      htmlTreeBuilder0.clearStackToTableRowContext();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "NA7U.e@^5g#hZd L", parser0);
      htmlTreeBuilder0.popStackToClose("S>");
      htmlTreeBuilder0.clearStackToTableRowContext();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "z:Wa_NZT8RW*Ua!LrH_", parser0);
      htmlTreeBuilder0.popStackToBefore("body");
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      StringReader stringReader0 = new StringReader("z:Wa_NZT8RW*Ua!LrH_");
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parse(stringReader0, "z:Wa_NZT8RW*Ua!LrH_", parser0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "html";
      stringArray0[1] = "z:Wa_NZT8RW*Ua!LrH_";
      stringArray0[3] = "z:Wa_NZT8RW*Ua!LrH_";
      htmlTreeBuilder0.popStackToClose(stringArray0);
      assertEquals(8, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Document.createShell("bgsound");
      Parser parser0 = new Parser(htmlTreeBuilder0);
      htmlTreeBuilder0.parseFragment("bgsound", document0, "w  CmUx-1 LC.bKnyfs", parser0);
      Element element0 = htmlTreeBuilder0.currentElement();
      boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
      assertEquals(0, element0.siblingIndex());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Element element0 = htmlTreeBuilder0.getHeadElement();
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("{p:[u6wOAu", (Element) null, "u0", parser0);
      assertEquals(1, list0.size());
      
      boolean boolean0 = htmlTreeBuilder0.removeFromStack(element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Tag tag0 = Tag.valueOf("form");
      Element element0 = new Element(tag0, "form");
      Parser parser0 = Parser.xmlParser();
      htmlTreeBuilder0.parseFragment("form", element0, "form", parser0);
      htmlTreeBuilder0.insert(element0);
      Element element1 = htmlTreeBuilder0.getFromStack("form");
      assertEquals(1, element1.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Element element0 = new Element("input");
      htmlTreeBuilder0.parseFragment("input", element0, "input", parser0);
      Element element1 = htmlTreeBuilder0.insertStartTag("input");
      htmlTreeBuilder0.replaceOnStack(element1, element0);
      assertFalse(element0.equals((Object)element1));
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StringReader stringReader0 = new StringReader("form");
      Parser parser0 = Parser.htmlParser();
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.parse(stringReader0, "form", parser0);
      Token.StartTag token_StartTag0 = new Token.StartTag();
      Attributes attributes0 = new Attributes();
      Token.StartTag token_StartTag1 = token_StartTag0.nameAttr("form", attributes0);
      htmlTreeBuilder0.insertForm(token_StartTag1, true);
      FormElement formElement0 = htmlTreeBuilder0.getFormElement();
      assertEquals(1, formElement0.siblingIndex());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("listing");
      Document document0 = parser0.parseInput((Reader) stringReader0, "Np7Fq#Fe|7r99MQ 7E/");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("<Np7Fq#Fe|7r99MQ 7E/ #cdata=\"Np7Fq#Fe|7r99MQ 7E/\" />", document0, "5$POpFm=6m]/K|", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      Tag tag0 = Tag.valueOf("object");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "5hd)YK$Pk'Fy4!KSP&", attributes0);
      htmlTreeBuilder0.parseFragment("<object />", formElement0, "S>", parser0);
      Token.CData token_CData0 = new Token.CData("8X");
      htmlTreeBuilder0.insert(token_CData0);
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.xmlParser();
      parser0.setTrackErrors(58);
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("tfoot", parseSettings0);
      Element element0 = new Element(tag0, "");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("", element0, ",CDxAikWr", parser0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Element element0 = htmlTreeBuilder0.getHeadElement();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.maybeSetBaseUri(element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = new Parser(htmlTreeBuilder0);
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("plaintext", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "8GeI9LSe_eHd", (Attributes) null);
      List<Node> list0 = htmlTreeBuilder0.parseFragment("B", formElement0, "-${b)=AD", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Tag tag0 = Tag.valueOf("noscript");
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "UG>ZM3BF%M^k8f*@r#K", attributes0);
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("UG>ZM3BF%M^k8f*@r#K", formElement0, "th", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      Element element0 = new Element("script");
      List<Node> list0 = htmlTreeBuilder0.parseFragment("B", element0, "Ye;do|+`C],yuF", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      XmlTreeBuilder xmlTreeBuilder0 = new XmlTreeBuilder();
      ParseSettings parseSettings0 = xmlTreeBuilder0.defaultSettings();
      Tag tag0 = Tag.valueOf("style", parseSettings0);
      FormElement formElement0 = new FormElement(tag0, "style", (Attributes) null);
      Parser parser0 = Parser.xmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("*QKN@%{if*Qj7o=G", formElement0, "z:Wa_NZT8RW*Ua!LrH_", parser0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Element element0 = new Element("textarea");
      Parser parser0 = Parser.htmlParser();
      List<Node> list0 = htmlTreeBuilder0.parseFragment("", element0, ":+w)c,avj", parser0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Parser parser0 = Parser.htmlParser();
      htmlTreeBuilder0.parseFragment("{p:[u6wOAu", (Element) null, "u0", parser0);
      Element element0 = htmlTreeBuilder0.getHeadElement();
      htmlTreeBuilder0.maybeSetBaseUri(element0);
      assertEquals("u0", element0.baseUri());
      assertEquals(0, element0.siblingIndex());
      assertEquals(0, element0.childNodeSize());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.clearStackToTableContext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inTableScope("iG{`!/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.setFosterInserts(true);
      boolean boolean0 = htmlTreeBuilder0.isFosterInserts();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Document.createShell("bgsound");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.replaceActiveFormattingElement((Element) null, document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      boolean boolean0 = htmlTreeBuilder0.isFragmentParsing();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = Parser.parseBodyFragment("8GeI9L>vSe_eHd", "8GeI9L>vSe_eHd");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.isInActiveFormattingElements(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      String string0 = htmlTreeBuilder0.getBaseUri();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Document document0 = htmlTreeBuilder0.getDocument();
      assertNull(document0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      String[] stringArray0 = new String[6];
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inScope(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.state();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inButtonScope("html");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.clearStackToTableRowContext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      FormElement formElement0 = htmlTreeBuilder0.getFormElement();
      assertNull(formElement0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.insertMarkerToFormattingElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      htmlTreeBuilder0.generateImpliedEndTags();
      assertEquals(100, HtmlTreeBuilder.MaxScopeSearchDepth);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inListItemScope("section");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.clearStackToTableBodyContext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      ArrayList<Element> arrayList0 = htmlTreeBuilder0.getStack();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Element element0 = htmlTreeBuilder0.getHeadElement();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.isSpecial(element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      Element element0 = new Element("input");
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.replaceOnStack(element0, element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      HtmlTreeBuilder htmlTreeBuilder0 = new HtmlTreeBuilder();
      // Undeclared exception!
      try { 
        htmlTreeBuilder0.inScope("akN");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.HtmlTreeBuilder", e);
      }
  }
}
