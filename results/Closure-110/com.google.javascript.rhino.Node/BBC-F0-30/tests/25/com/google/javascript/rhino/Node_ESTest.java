/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 23:03:32 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.StringType;
import com.google.javascript.rhino.jstype.TemplateType;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.ServiceLoader;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.isExprResult();
      Node node1 = new Node(32);
      node1.isTypeOf();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = Node.newNumber((double) 108, (-726), 439);
      Node node1 = new Node(21, node0);
      node1.cloneNode();
      node1.isDebugger();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1110, 1110, 1110);
      Node node1 = new Node(39, node0, node0, node0);
      node1.checkTreeEqualsImpl(node1);
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = new Node(147);
      Node node1 = Node.newString((-243), "CharMatcher.JAVA_LOWER_CASE", 4095, 65536);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.isExprResult();
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(30, nodeArray0);
      Node node1 = new Node(0, 461845907, (-2036));
      node1.isAssignAdd();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Z3lPR#Hn\"vfa");
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node_NodeMismatch0.equals(node1);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.setVarArgs(true);
      node0.setChangeTime(126);
      node0.toString();
      node0.isWith();
      Node node1 = new Node(85, 43, (-1289));
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = Node.newString(38, "kUsgYUlnT", 38, 85);
      node0.setSourceFileForTesting("kUsgYUlnT");
      node0.removeProp(135);
      node0.isQualifiedName();
      node0.toStringTree();
      node0.hasOneChild();
      node0.putProp(116, "kUsgYUlnT");
      node0.isUnscopedQualifiedName();
      node0.getSourceFileName();
      Node node1 = new Node(4275, node0, node0);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isContinue();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(43, node0, node0, node0);
      Node node2 = Node.newString(4095, "[");
      node2.isOptionalArg();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = new Node(43, 43, 43);
      Node node1 = new Node(38, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node0.isDebugger();
      int int0 = Node.SLASH_V;
      node2.isEquivalentTo(node1, true, false, false);
      node0.useSourceInfoFrom(node2);
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(53);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newString("Z3lPR#p|HnTvfa");
      node0.addChildToFront(node0);
      MockFile mockFile0 = new MockFile("    ");
      MockFile mockFile1 = new MockFile(mockFile0, "Sha\"E.9");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile1);
      // Undeclared exception!
      node0.appendStringTree(mockFileWriter0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(39, node0, node0);
      node0.cloneNode();
      Node node2 = new Node(29, node1);
      node2.isArrayLit();
      node1.isBlock();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newNumber(16.0, (-2422), (-2279));
      Node node2 = new Node(155, node1, node1, 36, 1);
      node2.isQuotedString();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node2.clonePropsFrom(node0);
      Node node3 = new Node(48, node2, node0, node0, 31, 100);
      node0.isGetProp();
      node2.getAncestor(1);
      node3.isThrow();
      Node node4 = new Node(56, 4095, 53);
      node4.getAncestor(57);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.getDirectives();
      Node node1 = new Node(12, node0, node0, node0, node0, 12, 49);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getIntProp((-1631));
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(155);
      node0.cloneNode();
      node0.isDebugger();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = new Node(1, node0, node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.getAncestors();
      node0.setLineno(363);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isFalse();
      Node node1 = new Node(4095, node0, 30, 108);
      node0.srcrefTree(node1);
      Node node2 = null;
      try {
        node2 = new Node(12, node0, node0, 101, 15);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.DATE_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isNE();
      node0.getChildBefore((Node) null);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node(43, 43, 43);
      Node node1 = node0.copyInformationFrom(node0);
      node0.isDebugger();
      int int0 = Node.SLASH_V;
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      Node node1 = new Node(100, node0, node0);
      node1.getChangeTime();
      node1.isSyntheticBlock();
      node0.isLabel();
      node0.isBreak();
      node0.detachFromParent();
      Node node2 = new Node(46);
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = Node.newNumber(352.2527848);
      Node node1 = new Node(112, node0, node0, node0);
      node1.srcref(node0);
      node0.isGetElem();
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.URI_ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList.of((JSType) functionType0);
      Node node0 = new Node(0);
      Node node1 = node0.cloneNode();
      node1.setLineno(30);
      node1.isDebugger();
      Node node2 = new Node(809, node0);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(30, 30, 30);
      node0.children();
      node0.getSourceFileName();
      node0.isDo();
      node0.isNE();
      Node node1 = new Node(52, node0, node0);
      node1.putBooleanProp(51, true);
      // Undeclared exception!
      try { 
        node1.getStaticSourceFile();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isGetterDef();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newString((-431), "originalname");
      Node node1 = new Node(152, node0, 57, 1428);
      node1.cloneNode();
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newNumber(352.2527848);
      Node node1 = new Node(115, node0, node0, node0);
      int int0 = Node.SLASH_V;
      node0.isEquivalentTo(node1, false, true, false);
      node1.srcrefTree(node0);
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newString(114, "originalname");
      node0.getProp(1643);
      node0.isDo();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node((-1813));
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node1.isNE();
      node0.isAdd();
      node1.isOnlyModifiesThisCall();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newNumber(352.2527848);
      Node node1 = new Node(115, node0, node0, node0);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.isGetElem();
      node1.isBreak();
      node0.addChildrenToFront(node1);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      Node node1 = Node.newNumber(50.8281, 26, 4095);
      Node node2 = new Node(54, node1, node1, node0, node0, 243, 103);
      node2.isArrayLit();
      node2.isGetterDef();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.newNumber(1068.0, 12, 2253);
      node2.isIf();
      // Undeclared exception!
      try { 
        node2.replaceChild(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isNot();
      Object object0 = new Object();
      node0.isScript();
      node0.isComma();
      node0.cloneTree();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isFalse();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = new Node(2);
      node1.setSourceFileForTesting("?yflaZEt&`>@");
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(35);
      node0.isGetElem();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        node0.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newString("originalname", 102, 102);
      Node node1 = new Node(102, node0);
      node1.srcref(node0);
      node1.putIntProp(3130, (-2885));
      node1.isContinue();
      node1.useSourceInfoFromForTree(node0);
      node1.isHook();
      Node node2 = new Node((-147), node1, (-2885), 2742);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      Node node1 = new Node(57, 149, 37);
      Node node2 = node0.copyInformationFrom(node1);
      node0.isThrow();
      node0.isOr();
      node2.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node(147, 147, 147);
      node0.isGetterDef();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = new Node(154, 154, 154);
      Node node1 = new Node(37, node0, node0, node0, node0, 55, 1);
      node1.isArrayLit();
      node0.isGetterDef();
      Node node2 = Node.newNumber((double) 2, 35, (-1975));
      node2.isIf();
      node1.replaceChild(node0, node2);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(102);
      node0.setSourceFileForTesting("BG1~c-Li<~");
      node0.isQuotedString();
      Node node1 = node0.cloneNode();
      node1.getSourceOffset();
      Node node2 = new Node((-481), node1, node0, node1, node1, 85, 42);
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node(38, 38, 38);
      Node node1 = node0.cloneNode();
      node0.isDebugger();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = new Node(154, 154, 154);
      Node node1 = new Node(37, node0, node0, node0, node0, 55, 1);
      Node node2 = node1.cloneNode();
      node2.isDebugger();
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(148, "WHQ");
      nodeArray0[0] = node0;
      node0.setQuotedString();
      Node node1 = Node.newString(56, "WHQ");
      nodeArray0[1] = node1;
      Node node2 = new Node(148, nodeArray0);
      node0.toString();
      node2.isAdd();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = new Node(108, 132, 108);
      Node node1 = new Node(42, node0);
      Node node2 = node0.srcref(node1);
      node2.getJSDocInfo();
      node0.isEquivalentTo(node2, false, false, false);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = new Node(63, (-1225), 154);
      Node node1 = new Node(152, node0);
      Node node2 = node0.srcref(node1);
      node2.getJSDocInfo();
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isLabel();
      node0.getIndexOfChild((Node) null);
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(38, (-1793), 103);
      Node node1 = Node.newNumber((double) 51);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = null;
      try {
        node3 = new Node(49, (Node) null, node2, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      Node node1 = new Node(33, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
      node1.isGetterDef();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = new Node(36, 277, 35);
      Node node1 = new Node(52, node0);
      node1.srcref(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType objectType0 = jSTypeRegistry1.createAnonymousObjectType(jSDocInfo0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      JSType jSType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs(objectType0, (JSType) objectType0, (List<JSType>) arrayList0);
      jSTypeArray0[0] = jSType0;
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node2.isEquivalentTo(node1, false, false, true);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">+*}#Wg'ZR/|");
      String string0 = "originalname";
      Node node0 = Node.newString("originalname", 105, 105);
      Node node1 = new Node(105, node0);
      node1.setChangeTime((-960));
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = new Node(43, 43, 43);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = null;
      try {
        node1 = new Node(1370, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newString(114, "originalname");
      Node node1 = new Node(86, node0, 4, 4);
      node1.isSyntheticBlock();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString(33, "kUsgYUlnT", 33, (-1607));
      Node node1 = new Node(1, node0, node0, node0);
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      Node node1 = new Node(8, node0, 54, 0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(877, nodeArray0);
      node2.cloneTree();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isDefaultCase();
      node0.isOr();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = new Node(9, node0);
      node0.srcref(node1);
      node0.getJSDocInfo();
      node0.isEquivalentTo(node1, false, true, false);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = new Node(112, 112, (-93));
      Node node1 = node0.cloneNode();
      node1.isGetterDef();
      node1.isCast();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      Node node1 = new Node(Integer.MAX_VALUE, 16, 3254);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = new Node(148, 148, 148);
      node0.setSourceFileForTesting("ab>hv*UFIM:");
      node0.isQuotedString();
      Node node1 = node0.cloneNode();
      node0.getSourceOffset();
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(148, "WHQ");
      nodeArray0[0] = node0;
      node0.setQuotedString();
      Node node1 = Node.newString(56, "WHQ");
      nodeArray0[1] = node1;
      Node node2 = new Node(148, nodeArray0);
      node0.toString();
      Node node3 = node2.copyInformationFrom(node0);
      Node.newString("SETTER_DEF WHQ [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000002]");
      node0.isEquivalentTo(node3, false, false, false);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = new Node(46);
      Node node1 = new Node(38, 55, 12);
      node0.putBooleanProp(57, false);
      node0.isSwitch();
      node1.isOr();
      node1.isAdd();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node2.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = new Node(130, 130, 1741);
      Node node1 = new Node(56, node0, node0, node0);
      node0.useSourceInfoFromForTree(node1);
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = Node.newString("r2#.S", 133, 2);
      node0.isOptionalArg();
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.setLength((-3477));
      node2.addSuppression("r2#.S");
      node1.setOptionalArg(false);
      node2.toStringTree();
      node0.isDebugger();
      Node node3 = new Node(4095, node2, node1, 4, 46);
      node3.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newString("originalname", 105, 105);
      Node node1 = new Node(105, node0);
      Node node2 = node1.srcref(node0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)45;
      byteArray0[2] = (byte)99;
      byteArray0[3] = (byte)57;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node2.getJSDocInfo();
      node1.isEquivalentTo(node2, false, true, false);
      node2.isAdd();
      node1.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(1310, node0, node0, node0, node0, 9, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber((double) 36);
      Node node4 = null;
      try {
        node4 = new Node(1846, node3, node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = new Node(43, 43, 43);
      node0.isOptionalArg();
      Node node1 = new Node(4095, 29, 15);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.setLength(16);
      node1.addSuppression("incrdecr");
      node2.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(53, node0, node0, node0, node0, 31, 49);
      node0.cloneTree();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node(108);
      Node node1 = new Node(38, 31, 39);
      node0.isSwitch();
      node1.isOr();
      node0.useSourceInfoFromForTree(node1);
      try { 
        node0.setString("this");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // IF 31 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("*O|Q~81+*m#H`#,f-B");
      Node node1 = new Node(1558, node0, node0, node0, 15, 1509);
      nodeArray0[0] = node1;
      Node node2 = Node.newString("2o Bel", 31, 15);
      nodeArray0[1] = node2;
      Node node3 = new Node(1083, nodeArray0);
      node3.getChildBefore(node2);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(118, node0, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node0.checkTreeEqualsImpl(node1);
      node0.isDefaultCase();
      node0.detachFromParent();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = new Node(52);
      node0.useSourceInfoFromForTree(node1);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node.extractCharno((-4247));
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newString(105, "oriyginalname", 105, 105);
      Node node1 = new Node(105, node0);
      Node node2 = node1.srcref(node0);
      node2.getJSDocInfo();
      node1.isEquivalentTo(node2, false, true, true);
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      node0.isThrow();
      node0.isNot();
      node0.isAnd();
      node0.isAdd();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = Node.newString(33, "kUsgYUlnT", 33, (-1607));
      node0.getSideEffectFlags();
      node0.setSourceFileForTesting("F=Ma-IWn");
      int int0 = Node.POST_FLAG;
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = new Node(154, 154, 154);
      Node node1 = new Node(37, node0, node0, node0, node0, 55, 1);
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isDelProp();
      node1.isEquivalentToShallow(node1);
      node1.isObjectLit();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(46, node0, node0, node0);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int int0 = Node.IS_CONSTANT_NAME;
      Node node0 = new Node(63);
      Node node1 = new Node(43, node0);
      node1.isNull();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = new Node(43, 43, 43);
      node0.putIntProp(43, 118);
      node0.isTry();
      node0.removeProp(43);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(30, 30, 32768);
      node0.isOr();
      Node.newString(13, "/n~mi");
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = new Node(98);
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = new Node(47, node0, node0, node0, node0);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isVarArgs();
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // HOOK is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      JSTypeNative jSTypeNative0 = JSTypeNative.URI_ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList0);
      jSTypeArray0[0] = (JSType) functionType1;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseFunctionType(functionType1);
      jSTypeArray0[1] = jSType0;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(7, node0, node0, node0, 16, 40);
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.isArrayLit();
      Node node1 = new Node(8, node0, node0, node0, 103, 39);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isGetterDef();
      node0.removeProp(174);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = new Node(148);
      node0.isArrayLit();
      node0.isBreak();
      Node node1 = Node.newNumber((double) 37);
      Node node2 = node0.srcrefTree(node1);
      node0.isIf();
      node2.isCall();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = Node.newString("originalname", 105, 105);
      Node node1 = new Node(49);
      Node node2 = node1.srcref(node0);
      node2.getJSDocInfo();
      Node node3 = new Node(38, node1, node2, node2);
      node3.isEquivalentTo(node1, false, false, true);
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.setSourceFileForTesting("Object#Key");
      node0.isQuotedString();
      Node node1 = node0.cloneNode();
      node0.getSourceOffset();
      node0.getStaticSourceFile();
      int int0 = Node.DIRECT_EVAL;
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(32);
      int int0 = Node.POST_FLAG;
      node0.isCall();
      Node node1 = new Node(4095);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newString("Z3lPR#p|HnTvfa");
      Node node1 = new Node(51, 1, (-116));
      node1.isIn();
      node1.isEquivalentTo(node0);
      node0.isTypeOf();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = new Node(148);
      node0.isArrayLit();
      Node node1 = new Node(96, node0, node0, node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isGetterDef();
      node0.removeProp(148);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = new Node(118, (-554), 108);
      Node node1 = new Node(8, 13, 64);
      node1.isSwitch();
      Node node2 = new Node(557, node1, node0, node0, node0, 55, 55);
      Node node3 = node2.copyInformationFrom(node1);
      node3.isVarArgs();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 8
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(148);
      Node node1 = new Node(2, node0, node0, node0);
      node1.isBreak();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString("originalname", 102, 102);
      Node node1 = new Node(102, node0);
      node1.srcref(node0);
      node1.putIntProp(3130, (-2885));
      node1.isContinue();
      node1.isHook();
      Node node2 = new Node((-147), node1, (-2885), 2742);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = new Node(108, 108, 148);
      Node node1 = new Node(38, 31, 39);
      node0.isSwitch();
      Node node2 = node0.copyInformationFrom(node1);
      node2.isVarArgs();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 31 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\n");
      Node node0 = Node.newString(118, "originalname");
      Node.newString(12, "originalname");
      Node node1 = new Node(86, node0, 4, 4);
      node1.isComma();
      node1.cloneTree();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isDebugger();
      Node node1 = new Node(15);
      node0.srcrefTree(node1);
      node1.isIf();
      node0.isCall();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = new Node(13, node0);
      Node node2 = node1.srcref(node0);
      node0.getJSDocInfo();
      // Undeclared exception!
      try { 
        node2.isEquivalentTo((Node) null, true, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9d");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("9d", 77, (-345));
      node0.isNull();
      Node node1 = new Node(51, node0, node0, 38, 43);
      node1.copyInformationFromForTree(node0);
      node0.isEquivalentTo(node1);
      node1.removeProp(54);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(153);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node1 = Node.newString(47, "com.google.common.collect.ImmutableList$SubList", 734, 52);
      Node node2 = node0.copyInformationFrom(node1);
      node0.isDebugger();
      Node.extractCharno(0);
      node2.isEquivalentTo(node0, false, false, false);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = new Node(43, 43, 43);
      node0.putIntProp(43, 118);
      node0.getBooleanProp(43);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = Node.newString(1891, "S@RB}_hVd3zkV21<SkI");
      Node node1 = Node.newString(49, "originalname");
      node0.isInstanceOf();
      node1.getChangeTime();
      Node node2 = new Node(176, node1, (-1944), 33);
      node1.isComma();
      node2.getLastSibling();
      node2.getType();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newNumber((double) 49);
      Node node2 = node0.copyInformationFrom(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node(126);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = new Node(53, node0, node0, node0, node0);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(113, 113, 113);
      Node node1 = new Node(1, 57, 52);
      node0.isSwitch();
      Node node2 = node0.copyInformationFrom(node1);
      node0.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(124, 115, 124);
      node0.getLength();
      Node node1 = node0.cloneNode();
      node1.isWith();
      node1.mayMutateArguments();
      node0.getChildCount();
      node1.isLabel();
      Node node2 = new Node(556, node1, node1, node1, node0, 663, (-1));
      node0.copyInformationFromForTree(node2);
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(153);
      node0.isDebugger();
      Node.extractCharno(0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      node0.isQualifiedName();
      node0.isOr();
      node0.isLabel();
      node0.isNot();
      node0.isCase();
      Node node1 = new Node(15, node0, node0);
      node0.getCharno();
      node0.detachFromParent();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(148, "WHQ");
      nodeArray0[0] = node0;
      node0.setQuotedString();
      Node node1 = Node.newString(56, "WHQ");
      Node node2 = node1.copyInformationFromForTree(node0);
      nodeArray0[1] = node1;
      Node node3 = new Node(148, nodeArray0);
      node1.getAncestors();
      node0.toString();
      node0.isSetterDef();
      node2.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newNumber(352.2527848);
      Node node1 = new Node(33, node0, node0, node0);
      node1.cloneNode();
      node1.isGetElem();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(43, 43, 43);
      Node node1 = Node.newString(" : ", 1923, 15);
      Node node2 = Node.newString("Q,");
      Node node3 = new Node(51, node2, node0, node0, node1, 1923, 55);
      node3.cloneTree();
      node1.checkTreeTypeAwareEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9d");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(113, 77, 88);
      node0.setWasEmptyNode(true);
      node0.isDefaultCase();
      try { 
        node0.setString("Pj1uhbF)<oy#R?{6");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // WHILE 77 [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.isUnscopedQualifiedName();
      node0.isBlock();
      node0.isGetterDef();
      node0.isThrow();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Object object0 = new Object();
      node0.isScript();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(132, node0);
      node1.useSourceInfoFrom(node0);
      Node node2 = Node.newString(1046, "Bq|2PXds&}TEw", 808, (-2049));
      node2.getChildCount();
      node2.getChildCount();
      node2.children();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      Node node1 = new Node(100, node0, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isSyntheticBlock();
      node0.isLabel();
      node0.isNot();
      node0.isAnd();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags((-1159));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got OR
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = new Node(154, 154, 154);
      Node node1 = new Node(47, 12, 39);
      node0.isSwitch();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node((-974), (-974), (-1819));
      Node node1 = new Node((-974), node0, node0, node0, node0, 37, (-139));
      Node node2 = node1.removeFirstChild();
      node1.isIf();
      node2.setIsSyntheticBlock(true);
      node1.isTrue();
      node0.setChangeTime(39);
      node2.isGetProp();
      node0.copyInformationFrom(node1);
      node1.removeProp(12);
      // Undeclared exception!
      try { 
        node2.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -974
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(159, (-5015), (-1));
      Node node1 = new Node(102, node0, 832, 10);
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newString(118, "originalnam!");
      Node.newString(12, "originalnam!");
      node0.isInstanceOf();
      Node node1 = new Node(86, node0, 4, 4);
      node1.isComma();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isVoid();
      Node node1 = new Node(36, node0, node0);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString("t'VXF", 85, 85);
      Node node1 = new Node(42, node0, node0, node0, node0, 57, (-497));
      Node node2 = new Node(47, node1, node1, 0, 52);
      node2.cloneTree();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node3 = null;
      try {
        node3 = new Node(56, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString("originalname", 105, 105);
      Node node1 = new Node(105, node0);
      node0.isBreak();
      node1.isFunction();
      node0.isIn();
      JSType.toMaybeFunctionType((JSType) null);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      Node node1 = new Node(8, node0, 54, 0);
      node1.cloneTree();
      Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node1.addChildrenAfter(node1, node0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = new Node(154, 154, 154);
      Node node1 = new Node(47, node0);
      node1.isEquivalentTo(node0);
      node1.getDirectives();
      node1.clonePropsFrom(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isDelProp();
      node1.isEquivalentToShallow(node1);
      node0.removeProp(12);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = new Node(138, 138, 138);
      node0.setSourceFileForTesting("ab>hvh*UFIM:");
      node0.isQuotedString();
      Node node1 = node0.cloneNode();
      node0.getSourceOffset();
      node1.getStaticSourceFile();
      node1.getSideEffectFlags();
      node0.isEquivalentTo(node1, false, false, false);
      node0.isQualifiedName();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newString("originalname", 1512, 1512);
      Node node1 = new Node(31, node0);
      node0.isBreak();
      Node node2 = node1.srcrefTree(node0);
      node2.copyInformationFrom(node0);
      node0.isIf();
      node1.isCall();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.isDebugger();
      Node node1 = new Node(21, node0, node0, node0, node0, 46, 1);
      node1.cloneTree();
      node1.isReturn();
      node1.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newString(99, "originalname", 99, 99);
      Node node1 = new Node(31, (-4359), 51);
      node1.isSwitch();
      Node node2 = node1.copyInformationFrom(node0);
      node2.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = new Node(2205, 38, 2205);
      Node node1 = new Node((-621), 980, (-2345));
      Node node2 = new Node(37, node0, node1, 108, 112);
      node2.isCall();
      node1.isFunction();
      node2.isIn();
      node1.isEquivalentTo(node0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = new Node(56);
      Node node1 = new Node(38, node0);
      node1.isString();
      node0.isParamList();
      node1.isEquivalentToShallow(node1);
      node1.isInstanceOf();
      int int0 = Node.COLUMN_MASK;
      node1.isAssignAdd();
      Node node2 = Node.newString("y", (-2739), 543);
      node1.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".@MS:>_UdPP\"s@'");
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(148, "WHQ");
      nodeArray0[0] = node0;
      node0.setQuotedString();
      Node node1 = new Node(52, node0, node0, node0, node0, 0, 148);
      Node node2 = node1.copyInformationFromForTree(node0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)126;
      byteArray0[4] = (byte)57;
      byteArray0[5] = (byte) (-11);
      byteArray0[6] = (byte) (-27);
      byteArray0[7] = (byte)110;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node2.setSourceFileForTesting("D!<n;W#&5]^'w");
      nodeArray0[1] = node1;
      Node node3 = null;
      try {
        node3 = new Node(148, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.setDouble((-2178.183397));
      Node node1 = new Node(39, node0, node0, node0);
      node1.checkTreeEqualsImpl(node1);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      Node node1 = new Node(100, node0, node0);
      node1.isSyntheticBlock();
      node0.isLabel();
      node1.srcrefTree(node0);
      node0.isNot();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node(43, 43, 43);
      node0.mayMutateGlobalStateOrThrow();
      node0.putIntProp(43, 118);
      node0.isThis();
      node0.isTrue();
      node0.getExistingIntProp(43);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = Node.newString("t'VXF", 85, 85);
      Node node1 = new Node(85, node0, node0, node0, node0, 38, 55);
      Node node2 = node1.cloneTree();
      node2.isAnd();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = new Node(98);
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString(35, "G_R,Ng", 30, 4);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node3 = new Node(54, nodeArray0, 86, 102);
      node3.isWith();
      node2.isComma();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(42);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add(" is not a number node");
      linkedHashSet0.add("com.google.javascript.rhino.Node$IntPropListItem");
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newString("String has leading or trailing whitespace", 3998, 3998);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(0, 38, 48);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.getSourceFileName();
      node1.useSourceInfoFrom(node0);
      node1.isIn();
      node0.isEquivalentTo(node1);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = new Node(1454);
      Node node1 = new Node(86, node0, node0, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      node1.srcref(node0);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node node1 = new Node(57, 52, 15);
      node0.srcrefTree(node1);
      node1.isCall();
      node0.isFunction();
      node0.isNew();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = new Node(124, 115, 124);
      node0.getLength();
      node0.putIntProp(975, 512);
      node0.isWhile();
      node0.getQualifiedName();
      node0.isDo();
      node0.isEmpty();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = new Node(35, 148, 113);
      node0.isVarArgs();
      node0.getLength();
      node0.getSourceOffset();
      node0.isDelProp();
      node0.isGetProp();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node node1 = new Node(30, node0, node0);
      node1.isSyntheticBlock();
      node0.getLength();
      node0.isSwitch();
      node1.copyInformationFrom(node0);
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = new Node(47, 47, 47);
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = new Node(148, 148, 148);
      node0.isEquivalentTo(node0);
      node0.removeProp(31);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Iterator<JSType> iterator0 = (Iterator<JSType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.addChildToFront(node1);
      Node node2 = node0.srcref(node1);
      node2.getInputId();
      node1.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newString("originalname", 105, 105);
      Node node1 = new Node(37, node0, node0, node0, node0, 36, 52);
      Node node2 = node1.srcref(node0);
      node2.getJSDocInfo();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "originalname");
      node2.isFunction();
      node2.isNew();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = new Node(124, 115, 124);
      node0.getLength();
      node0.putIntProp(975, 512);
      node0.setInputId((InputId) null);
      Node node1 = new Node(33, node0, node0, 8, 514);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.isCatch();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(113);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node1 = new Node(113, 53, (-1607));
      node0.getSourceOffset();
      node0.isDelProp();
      node1.isGetProp();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname", 118, 118);
      Node node1 = new Node(118, node0);
      node1.getSourceOffset();
      node1.getStaticSourceFile();
      node0.addChildrenToBack(node1);
      node1.isEquivalentTo(node0, false, false, false);
      node1.isQualifiedName();
      node0.isDo();
      try { 
        node1.setString("MN'B!'[|vf");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // VAR is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newString(33, "kUsgYUlnT", 33, (-1607));
      node0.getSideEffectFlags();
      Node node1 = new Node(1987, node0);
      // Undeclared exception!
      try { 
        node0.isQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.isAssign();
      Node node1 = Node.newString(39, "incrdecr");
      node0.clonePropsFrom(node1);
      node0.isLabel();
      node0.isGetterDef();
      node0.isFor();
      node0.isThrow();
      Object object0 = new Object();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(125);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 125
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = new Node(154, 154, 154);
      Node node1 = new Node(47, node0);
      node1.isEquivalentTo(node0);
      node1.getDirectives();
      Node node2 = node0.cloneNode();
      node2.getSourceOffset();
      node0.getStaticSourceFile();
      Node node3 = new Node(37, node2, node1, node2, 42, 1);
      node1.isEquivalentTo(node3, true, false, false);
      node0.hasMoreThanOneChild();
      node3.isDo();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = new Node(86);
      node0.setSourceFileForTesting("ab>hvh*UFIM:");
      node0.removeProp(466);
      node0.isQuotedString();
      Node node1 = node0.cloneNode();
      node1.getSourceOffset();
      node0.getStaticSourceFile();
      node0.isEquivalentTo(node1, true, false, false);
      node1.isQualifiedName();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isDebugger();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isEquivalentToShallow(node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = new Node(36, 124, 57);
      node2.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = new Node(124, 85, 124);
      Node node1 = new Node(31);
      node0.srcref(node1);
      node0.getLength();
      node0.putIntProp(975, 529);
      node0.wasEmptyNode();
      node0.getQualifiedName();
      node0.isDo();
      node0.isWith();
      node0.isBlock();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Q$9=fTd8");
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "/]6!0WAm%U^PCD";
      Node node0 = Node.newString((-1771), "/]6!0WAm%U^PCD", 28, (-1771));
      Node node1 = new Node((-1771), node0, node0, node0);
      node0.setWasEmptyNode(true);
      Node node2 = new Node((-1771), node1, node1, 30, 1);
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      // Undeclared exception!
      try { 
        node3.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1771
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = new Node(98);
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node((-2203), node0, node0, node0);
      node1.removeChildren();
      node1.checkTreeEqualsImpl(node0);
      node0.isDefaultCase();
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = new Node(148);
      Node node1 = Node.newString(0, "=&/", 2215, 43);
      node0.useSourceInfoFromForTree(node1);
      Node node2 = Node.newString((-858), "is_namespace");
      node2.isCatch();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = Node.newString("STRING_OBJECT_TYPE");
      node0.clonePropsFrom(node1);
      try { 
        node0.setDouble((-3484.334));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = Node.newString(118, "riginalnae");
      Node node1 = new Node(118, node0, node0, node0);
      node1.copyInformationFromForTree(node0);
      node0.addChildToBack(node1);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname", (-3461), 126);
      Node node1 = new Node(110, node0);
      node0.isUnscopedQualifiedName();
      node1.getJSType();
      node0.isBreak();
      node1.cloneTree();
      node1.setIsSyntheticBlock(false);
      node0.isNew();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = new Node(150);
      node0.setSourceFileForTesting("ab>hvh*UFIM:");
      node0.removeProp(150);
      node0.isQuotedString();
      Node node1 = node0.cloneNode();
      node0.getSourceOffset();
      node1.getStaticSourceFile();
      node0.isEquivalentTo(node1, false, false, false);
      node0.isQualifiedName();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.isExprResult();
      node0.isEquivalentTo(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node1.isLabel();
      Node node2 = new Node(49, node1, node1);
      node1.isNE();
      node1.isRegExp();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(98);
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isHook();
      Node node1 = new Node(163, node0, node0, node0, node0);
      node0.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node(150);
      node0.setIsSyntheticBlock(true);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node_NodeMismatch0.equals("uUJp`^za f_<m");
      Node node1 = Node.newString(54, "Ex.D`@&0 o\"", 8388608, 4);
      node1.getQualifiedName();
      node0.addChildToFront(node1);
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isLocalResultCall();
      Node node1 = new Node(38, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = Node.newString(131072, "dSe7-?jPTE>");
      node1.isEquivalentToShallow(node2);
      node2.isNoSideEffectsCall();
      node2.getBooleanProp(544);
      node3.isSwitch();
      node2.getJSType();
      node2.clonePropsFrom(node3);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.setSourceEncodedPositionForTree(1147);
      Node node1 = Node.newString("]'Tdx'G;+}@(j<?Rg", 52, 1024);
      Node node2 = new Node(111, node0, node0, node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      node0.isArrayLit();
      Object object0 = new Object();
      node2.getSourceFileName();
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = new Node(82, 82, 82);
      Node node1 = new Node(82, node0, node0, node0);
      node0.addChildToBack(node1);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", (-15), (-15));
      Node node1 = new Node(49, node0, node0, node0);
      node1.srcrefTree(node0);
      node1.isOnlyModifiesArgumentsCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isQualifiedName();
      node0.getQualifiedName();
      int int0 = Node.IS_NAMESPACE;
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(118, "riginalnae");
      Node node1 = new Node(118, node0, node0, node0);
      node0.addChildToBack(node1);
      node0.detachFromParent();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = new Node(148);
      Node node1 = new Node(154, node0, node0, node0, node0, (-2076), 48);
      Node node2 = node0.cloneTree();
      node2.isAnd();
      node2.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newNumber((-525.6), 36, 36);
      node0.wasEmptyNode();
      Node node1 = new Node(38, node0);
      node0.isEquivalentToShallow(node1);
      node0.getIndexOfChild(node1);
      Node node2 = Node.newString(": ");
      node1.isNE();
      node1.mayMutateGlobalStateOrThrow();
      node0.isEquivalentTo(node2, true, false, true);
      Node node3 = Node.newNumber((-3.3656749136997073));
      node3.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node1.setString(": ");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = Node.newString("originalname", 43, 2);
      node1.removeProp(3537);
      node0.isQuotedString();
      Node node2 = node0.cloneNode();
      node2.checkTreeEquals(node0);
      node0.checkTreeEqualsImpl(node1);
      node2.isEquivalentTo(node0, false, true, true);
      node2.getQualifiedName();
      node0.getCharno();
      node0.isBlock();
      node2.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newString(10, "kUsgYUlnT", 10, 77);
      node0.getSourceOffset();
      Node node1 = new Node(115);
      node1.getSourceFileName();
      node0.isEquivalentTo(node1);
      node0.isCatch();
      node1.isFor();
      node0.getSourceFileName();
      node0.isCall();
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 0);
      Node node1 = new Node(49, node0, node0, node0);
      Node node2 = Node.newString((-648), "q7pXZy", 148, 85);
      Node node3 = node1.useSourceInfoFromForTree(node2);
      node3.isCatch();
      Node node4 = new Node(1741, 30, 61);
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.isLabel();
      Object object0 = new Object();
      node0.isNE();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isAnd();
      Node node1 = node0.getLastSibling();
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = new Node(101, 303, 303);
      Node node1 = new Node(2704, node0, node0, node0, 4095, 30);
      node1.cloneTree();
      node1.isCall();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = new Node(1, 57, 52);
      node0.addChildrenToFront(node1);
      node0.isSwitch();
      Node node2 = node0.getLastChild();
      node2.getIntProp(29);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node node1 = new Node(47);
      node1.cloneTree();
      node1.isEmpty();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = Node.newString("originalname", 105, 105);
      Node node1 = new Node(105, node0);
      Node node2 = Node.newString(30, "originalname", 155, 46);
      node2.isEquivalentToTyped(node1);
      node1.getJSType();
      node1.isBreak();
      node1.isSetterDef();
      node1.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = node0.cloneTree();
      node0.isVoid();
      node0.isLabel();
      Node node2 = new Node(36, node0, node0);
      node0.isSyntheticBlock();
      node0.isHook();
      node2.isDo();
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = new Node(304, 304, 115);
      Node node1 = new Node(115, node0, node0, node0, node0, 55, 224);
      node1.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.removeChildren();
      Node.newString(1, ":#JDLM", 998, 33);
      node1.isLabel();
      Node node2 = new Node(30, node1, node0);
      node2.isNE();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(56, node0, node0, 48, 46);
      Node node2 = Node.newString(12, "originalname");
      node0.isInstanceOf();
      node2.getQualifiedName();
      Node node3 = new Node(38, node1, 421991, 421991);
      node1.isSetterDef();
      node3.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isVoid();
      node0.isLabel();
      Node node1 = new Node(36, node0, node0);
      node0.isSyntheticBlock();
      node0.isNoSideEffectsCall();
      node0.isHook();
      node1.isDo();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = new Node(64, 3149, 64);
      node0.isObjectLit();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node node1 = Node.newString(51, "Object#Element", 40, 103);
      Node node2 = new Node(100, node0, node0);
      node2.isSyntheticBlock();
      node2.isHook();
      node1.isCall();
      node2.getChildAtIndex((-483));
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newString(1741, "originalname");
      Node node1 = Node.newString(49, "com.google.javascript.rhino.jstype.ArrowType");
      Node node2 = new Node(2165, node0, node1, node1);
      node1.addChildToBack(node2);
      node2.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(0, 48, 55);
      node1.addChildrenAfter(node0, (Node) null);
      node0.isThis();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = new Node(124, 115, 124);
      Node node1 = Node.newNumber(1.0, 57, 48);
      node1.addChildToBack(node0);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.getSideEffectFlags();
      Node node1 = Node.newNumber((double) 16, 42, 77);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node1.isSetterDef();
      node0.srcrefTree(node1);
      Node.newNumber((double) 0, 52, 54);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-3.3656749136997073));
      Node node1 = new Node(5, node0, node0, node0, 36, 36);
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node0.setSourceEncodedPosition(40);
      node0.siblings();
      Node node3 = node1.copyInformationFromForTree(node0);
      node3.cloneNode();
      node2.siblings();
      node1.isQualifiedName();
      node0.isOnlyModifiesThisCall();
      node0.getIntProp(51);
      Node node4 = Node.newNumber((double) 8);
      node2.addChildToBack(node4);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newNumber((-525.6), 36, 36);
      node0.wasEmptyNode();
      node0.getSourceOffset();
      Node node1 = new Node(38, node0);
      node0.isEquivalentToShallow(node1);
      node0.getIndexOfChild(node1);
      Node.newString(": ");
      node1.isNE();
      node0.isDo();
      // Undeclared exception!
      try { 
        node1.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newString("originalname", 105, 105);
      Node node1 = new Node(105, node0);
      Node node2 = node1.srcref(node0);
      node2.getJSDocInfo();
      node2.isBreak();
      node2.isSetterDef();
      Node node3 = node0.srcrefTree(node2);
      node2.isIf();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node3.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = new Node(154);
      Node node1 = new Node(47, node0);
      node1.isEquivalentTo(node0);
      node1.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.useSourceInfoIfMissingFromForTree(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = Node.newString("originalname", 1083, 1083);
      Node node1 = new Node(57, node0, node0, node0, 4095, 0);
      Node node2 = node0.srcref(node1);
      node1.srcref(node2);
      Node.newString("originalname", 53, 28);
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING originalname 4095 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newString(", 5PN1y#Cm");
      node0.setVarArgs(true);
      node0.isVarArgs();
      node0.isInc();
      node0.getAncestors();
      node0.toString();
      Node node1 = new Node(16);
      node0.isEmpty();
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = new Node(113);
      node0.toStringTree();
      Node node1 = new Node(49, node0, node0, 1, 32);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.isArrayLit();
      Object object0 = new Object();
      node1.isNE();
      node0.getStaticSourceFile();
      node1.isEquivalentToShallow(node2);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getSourceOffset();
      node0.isVoid();
      node0.isLabel();
      Node node1 = new Node(36, node0, node0);
      node0.isSyntheticBlock();
      node0.isHook();
      node1.isEquivalentToShallow(node0);
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("");
      Node node1 = new Node(102, node0, node0, node0, node0, 1608, 1966);
      nodeArray0[0] = node1;
      node1.srcrefTree(node0);
      Node node2 = new Node((-428), nodeArray0, 47, 8232);
      node1.getSourceOffset();
      node1.isEquivalentTo(node0, true, true, true);
      node0.isQualifiedName();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(147, 147, 113);
      node0.isDebugger();
      Node node1 = Node.newString(38, "Node tree inequality:\nTree1:\n", 40, 15);
      node0.isEquivalentToTyped(node1);
      node1.getJSType();
      node0.isBreak();
      node0.isSetterDef();
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node(51, node0, node0, node0);
      node0.useSourceInfoFromForTree(node1);
      node1.getProp(57);
      node0.isCatch();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = Node.newNumber((-2305.899191507576), 155, 893);
      node0.isEquivalentTo(node1);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      node1.isDelProp();
      Node node2 = new Node(39);
      node2.isEquivalentToShallow(node0);
      node2.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      jSTypeRegistry0.getObjectIndexKey();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setSourceFileForTesting("Object#Element");
      node1.useSourceInfoFrom(node0);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = new Node(4);
      node0.setSourceFileForTesting("ab>hvNh*UrFIM:");
      node0.removeProp(4);
      node0.isQuotedString();
      Node node1 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      node0.isEquivalentTo(node1, false, false, false);
      node1.getQualifiedName();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 0);
      Node node1 = new Node(49, node0, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.toString();
      Node node2 = new Node(3090);
      node1.isEmpty();
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isVoid();
      node0.removeProp(125);
      node0.toStringTree();
      node0.isQuotedString();
      Node node1 = node0.cloneNode();
      node0.checkTreeEquals(node1);
      Node node2 = new Node((-2760), node0, node1, 23, (-1644));
      node2.getQualifiedName();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(98);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node1 = Node.newString(42, "FUNCTION", 36, 98);
      node0.removeProp((-2488));
      node1.toStringTree();
      node0.isQuotedString();
      Node node2 = node0.cloneNode();
      node2.checkTreeEquals(node0);
      node0.isEquivalentTo(node1, false, true, true);
      node1.getQualifiedName();
      node2.getCharno();
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isWhile();
      Node node1 = new Node(8, node0, 54, 0);
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$IntPropListItem");
      node0.setInputId(inputId0);
      Node node2 = Node.newNumber((double) 2);
      node1.addChildrenAfter(node2, node0);
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname", 118, 118);
      node0.putIntProp(118, 118);
      node0.isWhile();
      node0.getQualifiedName();
      node0.isThis();
      node0.isDo();
      node0.isGetterDef();
      node0.getIntProp(118);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = new Node(150);
      node0.setSourceFileForTesting("ab>hvNh*UrFIM:");
      node0.removeProp(150);
      node0.isQuotedString();
      node0.isFromExterns();
      Node node1 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      node1.isEquivalentTo(node0, false, true, false);
      node0.getQualifiedName();
      node1.getCharno();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = new Node(118, 118, 55);
      Node node1 = new Node(9, 29, 57);
      node0.isContinue();
      node1.getSourceFileName();
      Node node2 = node0.cloneTree();
      node2.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = Node.newString(117, "originalname");
      Node node1 = new Node(117, node0);
      Node node2 = new Node(36);
      node1.clonePropsFrom(node2);
      node0.isParamList();
      node1.isParamList();
      node0.isInstanceOf();
      node1.removeChildren();
      node1.isNoSideEffectsCall();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString("originalname", 110, 110);
      Node node1 = new Node(110, node0);
      Node node2 = node1.srcref(node0);
      node1.addSuppression("com.goole.javascrit.rhino.Node");
      int int0 = Node.QUOTED_PROP;
      node2.isLabel();
      node2.isTry();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      Node node2 = Node.newString(12, "originalname");
      node0.isInstanceOf();
      node2.getQualifiedName();
      node1.addChildAfter(node2, node0);
      node1.isSetterDef();
      Node.extractCharno(32);
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node node1 = new Node(100, node0, node0);
      node1.isSyntheticBlock();
      node0.isLabel();
      node1.isTry();
      node1.isAnd();
      Node.mergeLineCharNo(340, 441);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      Node node1 = new Node(39, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      Node node1 = Node.newString("i1T:R>?>");
      node0.useSourceInfoFrom(node1);
      node0.getSourceOffset();
      node0.isEquivalentTo(node0, true, true, false);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString("originalname", 105, 105);
      Node node1 = new Node(105, node0);
      Node node2 = node1.srcref(node0);
      node2.getJSDocInfo();
      node1.isEquivalentTo(node2, false, true, true);
      node2.isTry();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = new Node(103);
      node0.removeProp(1705);
      node0.toStringTree();
      node0.isQuotedString();
      Node node1 = node0.cloneNode();
      Node node2 = Node.newNumber((double) 16, 57, 42);
      node2.checkTreeEquals(node1);
      node0.isEquivalentTo(node1, false, false, false);
      node2.getQualifiedName();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      int int0 = Node.STATIC_SOURCE_FILE;
      node0.isEquivalentTo(node0, true, true, false);
      node0.isDo();
      node0.isWith();
      Node node1 = new Node(32, node0, node0, node0);
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = Node.newString(1, "WHQ", 117, 1);
      node0.isWhile();
      node0.getQualifiedName();
      node0.getJsDocBuilderForNode();
      node0.isThis();
      node0.isDo();
      Node node1 = new Node(57, 50, 46);
      node1.cloneNode();
      node1.isWith();
      node1.isExprResult();
      Node node2 = node1.getLastSibling();
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = new Node(154);
      Node node1 = new Node(47, node0);
      node1.isEquivalentTo(node0);
      node1.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isDelProp();
      node1.isEquivalentToShallow(node1);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(38, nodeArray0);
      node0.copyInformationFrom(node1);
      node0.isEquivalentTo(node0, false, false, false);
      node0.isSwitch();
      node0.isSyntheticBlock();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST 0 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newString(46, "WHQ", (-1484), 12);
      Node node1 = new Node(3348, node0);
      Node node2 = new Node(24, node1, node1, node1, node1);
      Node node3 = new Node(124, node2, node2);
      node3.setJSDocInfo(jSDocInfo0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node node4 = node0.useSourceInfoIfMissingFromForTree(node3);
      node4.setJSDocInfo(jSDocInfo0);
      node0.setQuotedString();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" is not a string node");
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        node0.appendStringTree(pipedWriter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = new Node(154);
      node0.isExprResult();
      Node node1 = new Node(47, node0);
      node1.isEquivalentTo(node0);
      node1.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isDelProp();
      node1.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newString(1741, "originalname");
      Node node1 = new Node(1741, node0);
      Node node2 = Node.newString(12, "originalname");
      Node node3 = Node.newNumber((double) 56, (-2650), 55);
      Node node4 = new Node((-974), node3, node2);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isCast();
      node4.isFromExterns();
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(32, 32, 32);
      int int0 = Node.COLUMN_MASK;
      Node node1 = node0.cloneNode();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.getDirectives();
      node0.isThrow();
      node1.isDelProp();
      node1.isGetProp();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.getSideEffectFlags();
      Node node1 = Node.newNumber((double) 16, 42, 77);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node3 = new Node(31, node0, node0, node2, node1, 54, 38);
      node3.isDelProp();
      node0.isDefaultCase();
      node0.isEquivalentToShallow(node3);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = Node.newString("originalname", 105, 87855565);
      Node node1 = new Node(105, node0);
      node1.copyInformationFromForTree(node0);
      node1.useSourceInfoFromForTree(node0);
      Object object0 = new Object();
      node0.wasEmptyNode();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = Node.newString(38, "(^^pAfIAM5\"|:", 38, 77);
      node0.setSourceFileForTesting("F=MaWn");
      node0.getAncestor(103);
      node0.removeProp(103);
      node0.toStringTree();
      node0.isQuotedString();
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 0);
      HashSet<String> hashSet0 = new HashSet<String>();
      Node node1 = new Node(49, node0, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.cloneTree();
      node2.toString();
      node1.isArrayLit();
      node1.isSetterDef();
      node1.isIf();
      node1.useSourceInfoIfMissingFromForTree(node2);
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)41;
      byteArray0[1] = (byte)23;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(41, (-464), (-4178));
      Node node1 = new Node((-571), node0, node0, node0, 15, (-413));
      Node node2 = new Node(41, node1, node1, 40, (-2262));
      Node node3 = node2.getLastChild();
      node3.setOptionalArg(false);
      Node node4 = new Node(0);
      // Undeclared exception!
      try { 
        node4.appendStringTree((Appendable) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      node0.removeProp(2904773);
      node0.toStringTree();
      node0.isQuotedString();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((-3096), nodeArray0);
      Node node3 = node2.cloneNode();
      node0.getString();
      node3.checkTreeEquals(node2);
      node3.isEquivalentTo(node2, false, true, false);
      Node node4 = null;
      try {
        node4 = new Node(2, node0, 101, 46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = new Node(103);
      Node.newString("9^t:IC`up}>$C,t0vLK", 2, 2526);
      Node node1 = new Node(1, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = node0.srcref(node1);
      node1.addSuppression("9^t:IC`up}>$C,t0vLK");
      int int0 = Node.INFERRED_FUNCTION;
      node2.getQualifiedName();
      node2.isEmpty();
      try { 
        node3.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEC is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = Node.newString(33, "kUsgYUlnT", 33, (-1607));
      node0.setSourceFileForTesting("F=MaWn");
      node0.removeProp(57);
      node0.toStringTree();
      node0.isQuotedString();
      Node node1 = node0.cloneNode();
      node1.getString();
      node1.checkTreeEquals(node0);
      node0.isEquivalentTo(node1, false, false, false);
      // Undeclared exception!
      try { 
        node1.getQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 0);
      Node node1 = new Node(49, node0, node0, node0);
      node1.getIndexOfChild(node0);
      node1.isQualifiedName();
      node1.cloneNode();
      Node node2 = Node.newString(27591, ": ");
      node0.isInstanceOf();
      node2.isEquivalentTo(node1, false, false, true);
      node0.isLabel();
      node2.isExprResult();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = new Node(1, 57, 52);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Object object0 = new Object();
      node0.isCatch();
      node0.getIndexOfChild(node2);
      node1.getIntProp(2);
      node1.isWith();
      node0.isScript();
      node1.getJSType();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(4095, node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.getLength();
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.setLineno(23);
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = new Node(1, 57, 52);
      Node node2 = new Node(155, node1, node1, 36, 1);
      node2.isQuotedString();
      node1.isOr();
      Node node3 = node0.useSourceInfoIfMissingFrom(node2);
      node3.getLength();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType jSType0 = null;
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Not declared as a constructor");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = new Node(32);
      int int0 = Node.LAST_PROP;
      node0.isOr();
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString((-1076), "8:N8O=:0$tO@a(j)fY", (-1076), (-2145));
      Node node1 = new Node(47, node0, node0, node0, 46, 53);
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = Node.newString(118, "originlna;");
      Node node1 = Node.newString(511, "*p\"GDb|',PMYrq3}\"UY");
      Node node2 = new Node(1318, node1);
      Node node3 = Node.newString(42, "*p\"GDb|',PMYrq3}\"UY");
      node1.isInstanceOf();
      node3.getQualifiedName();
      node0.isNE();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = new Node(37);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.putProp(37, jSDocInfo0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getParent();
      Node.extractCharno(94);
      Node.extractLineno(39);
      Node.newNumber((double) 1, 54, 57);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isVoid();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(32);
      // Undeclared exception!
      try { 
        node0.addChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      String string0 = "com.google.common.collect.RegularImmutableMap";
      Node node0 = Node.newString((-877), "STRING_VALUE_OR_OBJECT_TYPE", (-1921), (-1921));
      Node node1 = new Node(4, node0);
      node1.copyInformationFromForTree(node0);
      node1.addSuppression("com.google.common.collect.RegularImmutableMap");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      Node node2 = null;
      try {
        node2 = new Node(29, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isExprResult();
      node0.getSourceOffset();
      Node node1 = new Node(40, node0);
      Node node2 = Node.newNumber(1.0, 54, 46);
      node1.isEquivalentToShallow(node2);
      node0.getIndexOfChild(node1);
      node2.isQualifiedName();
      Node node3 = node1.cloneNode();
      Node node4 = Node.newString((-1762), "com.google.javascript.rhino.jstype.ArrowType");
      node2.isInstanceOf();
      node4.isEquivalentTo(node3, false, false, false);
      node0.isLabel();
      node2.isExprResult();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newString("t'VXF", 85, 85);
      Node node1 = new Node(31, node0, 54, 32);
      Node node2 = node1.cloneTree();
      node0.hasChild(node2);
      Node.newString("MYvAbeu0", 1925, 57);
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(40, 9, 2506);
      Node node2 = node0.srcrefTree(node1);
      node0.isAnd();
      Node.extractLineno(31);
      node0.isBreak();
      Node.extractLineno(36);
      Node node3 = node0.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node4 = node3.srcref(node1);
      node2.setType(3701);
      jSDocInfo0.setHidden(false);
      node4.putProp(1082, "");
      node1.setJSDocInfo(jSDocInfo0);
      node2.clonePropsFrom(node3);
      node3.getDirectives();
      Node.extractLineno(83);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newString("originalname", 105, 87855565);
      Node node1 = new Node(105, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.srcref(node0);
      node2.addSuppression("com.google.javascript.rhino.Node");
      node2.getChildCount();
      node2.getQualifiedName();
      node0.isEmpty();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> 105 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = new Node(1, 57, 52);
      Node node2 = new Node(155, node1, node1, 36, 1);
      node2.isQuotedString();
      Node.newString(2121, "CharMatcher.JAVA_UPPER_CASE", 4277, 42);
      Node node3 = new Node(29, node2, node0, node0, 31, 111);
      node2.cloneTree();
      node1.isFalse();
      node0.isSwitch();
      node2.isReturn();
      node0.getStaticSourceFile();
      node3.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newString(3501, " : ", 3501, (-750));
      Node node1 = new Node((-406), node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<TemplateType> arrayList0 = new ArrayList<TemplateType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) arrayList0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node2.copyInformationFromForTree(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.addSuppression("'");
      node0.getChildCount();
      node2.getQualifiedName();
      node0.isEmpty();
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node node1 = Node.newString(118, "com.google.common.collect.RegularImmutableMap", 56, 8202);
      Node node2 = new Node(38, node0);
      Node node3 = node2.copyInformationFromForTree(node0);
      node3.addSuppression("com.google.common.collect.RegularImmutableMap");
      node1.getChildCount();
      node1.getQualifiedName();
      Node node4 = new Node(53);
      node4.isEmpty();
      Node node5 = Node.newNumber((double) 36);
      node5.getDouble();
      node1.isWith();
      node5.removeChildren();
      node3.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = Node.newString((-750), "originalname", 8, 118);
      node1.isVarArgs();
      Node node2 = new Node(35, node0);
      node0.isNE();
      node0.isStringKey();
      node2.getStaticSourceFile();
      node2.isCase();
      node2.isDelProp();
      node2.getQualifiedName();
      node1.isThis();
      Node node3 = new Node(26);
      node3.isNot();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newString(105, "originalname", (-848), 105);
      Node node1 = Node.newString((-489), "g0mRM-q*((ZA:H\"q<)");
      Node node2 = new Node(42, node0, 8, (-1524));
      Node node3 = node2.useSourceInfoFromForTree(node1);
      Object object0 = new Object();
      node0.wasEmptyNode();
      node3.isScript();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.getDirectives();
      node0.isThrow();
      node1.isDelProp();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isGetProp();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp((-1257));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -1257
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newString(38, "kUsgYUlnT", 38, 77);
      node0.getSourceOffset();
      Node node1 = new Node(92, node0);
      node0.isEquivalentToShallow(node1);
      node1.getIndexOfChild(node0);
      node0.isQualifiedName();
      Node node2 = node1.cloneNode();
      Node node3 = Node.newString(52, ": ");
      node0.isInstanceOf();
      Node node4 = new Node((-15), node2);
      node4.isEquivalentTo(node3, false, false, false);
      node2.isLabel();
      node3.isExprResult();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = Node.newString("originalname", 43, 2);
      node0.isOptionalArg();
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.setLength(2);
      node2.wasEmptyNode();
      node0.isOnlyModifiesThisCall();
      node2.getLength();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      node0.getSourceOffset();
      node0.isQualifiedName();
      node0.isHook();
      Node node1 = Node.newString(46, "ASSIGN_DIV");
      node0.isInstanceOf();
      Node node2 = new Node(114, node1);
      node2.cloneTree();
      node2.isEquivalentToTyped(node0);
      node0.isLabel();
      Node.newString(4095, "ASSIGN_DIV", 1, 8);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.getJsDocBuilderForNode();
      node0.cloneNode();
      node0.isDebugger();
      node0.isGetterDef();
      node0.isSetterDef();
      node0.isFor();
      node0.isUnscopedQualifiedName();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      HashSet<String> hashSet0 = new HashSet<String>();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node0 = Node.newString("q7pXZy");
      node0.addSuppression((String) null);
      node0.getChildAtIndex((-2404));
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newString("t'VXF", 85, 85);
      Node node1 = new Node(40, node0, node0, node0, node0, 47, 47);
      Node node2 = node1.cloneTree();
      node0.hasChild(node1);
      node2.isAnd();
      node0.getProp(21);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isSwitch();
      node1.addChildToFront(node2);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)71;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte) (-98);
      Node node0 = new Node(183);
      node0.getChangeTime();
      node0.children();
      node0.isString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isOptionalArg();
      node0.isFromExterns();
      Node node1 = new Node(42, node0);
      node1.setJSDocInfo((JSDocInfo) null);
      node1.isNE();
      node0.isStringKey();
      node0.getStaticSourceFile();
      node0.isComma();
      node1.isQualifiedName();
      Node.extractCharno((-2735));
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(30, node0, node0);
      node1.getSideEffectFlags();
      Node.newNumber((double) 16, 42, 77);
      node1.isAssignAdd();
      Node node2 = new Node(32, 22, (-3108));
      node0.isObjectLit();
      node1.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString("", 183, (-848));
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(105, 105, 105);
      node0.isContinue();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newNumber((double) 4);
      node0.isThis();
      node1.isNot();
      node1.getAncestor(51);
      node0.toStringTree();
      // Undeclared exception!
      try { 
        node0.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      HashSet<String> hashSet0 = new HashSet<String>();
      Node node1 = new Node(30, node0, node0, node0, 51, 43);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node1.toString();
      node1.isArrayLit();
      node0.isInstanceOf();
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = Node.newString("originalname", 4095, 57);
      node0.isEmpty();
      node1.clonePropsFrom(node0);
      Node node2 = new Node(30);
      node2.useSourceInfoIfMissingFrom(node0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Object#Element");
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = new Node(55, 3149, 55);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.getDirectives();
      node1.addSuppression((String) null);
      node1.addSuppression("dSe7-?jPTE>");
      node0.setOptionalArg(true);
      node1.toStringTree();
      node0.isEmpty();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node2 = null;
      try {
        node2 = new Node(31, node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      node0.isQualifiedName();
      node0.getIndexOfChild(node0);
      node0.isOr();
      Node node1 = new Node(51);
      node1.isLabel();
      node1.isNot();
      node0.isCase();
      node0.srcrefTree(node1);
      node0.getCharno();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 0);
      HashSet<String> hashSet0 = new HashSet<String>();
      Node node1 = new Node(49, node0, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.useSourceInfoIfMissingFrom(node0);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node2.toString();
      node1.isArrayLit();
      node1.isInstanceOf();
      node0.isLabel();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isLocalResultCall();
      Node node1 = new Node(38, node0);
      node1.getDirectives();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = Node.newString((-3114), "dSe7-?jPTE>");
      node1.isEquivalentToShallow(node2);
      node2.isNoSideEffectsCall();
      Node node4 = new Node(42, node2, node1, node1, 46, 0);
      node4.getBooleanProp(544);
      node3.isSwitch();
      node2.getJSType();
      node4.clonePropsFrom(node3);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte) (-103);
      byteArray0[2] = (byte)56;
      byteArray0[3] = (byte) (-92);
      byteArray0[4] = (byte) (-69);
      byteArray0[5] = (byte) (-26);
      node0.useSourceInfoFrom(node1);
      byteArray0[6] = (byte)111;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = Node.newString(12, "originalname");
      node1.copyInformationFrom(node2);
      node1.isEmpty();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // VAR originalname is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = new Node(153);
      node0.getJsDocBuilderForNode();
      node0.cloneNode();
      node0.isDebugger();
      node0.isGetterDef();
      node0.isSetterDef();
      node0.isIf();
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      int int0 = 118;
      Node node0 = Node.newString(118, "originalname");
      node0.putIntProp(118, 118);
      node0.isWhile();
      // Undeclared exception!
      try { 
        node0.getProp(118);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.isExprResult();
      node0.isEquivalentTo(node0);
      node0.getDouble();
      node0.wasEmptyNode();
      node0.removeProp(42);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newNumber(16.0, (-2422), (-2279));
      Node node2 = new Node(155, node1, node1, 36, 1);
      node2.isQuotedString();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = new Node(48, node2, node0, node0, 31, 100);
      node0.isGetProp();
      node2.getAncestor(1);
      node3.isThrow();
      Node node4 = new Node(56, 4095, 53);
      node4.getAncestor(57);
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-4340));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = new Node((-15));
      Node node1 = new Node((-15), node0, node0);
      node1.getIntProp(56);
      node1.setChangeTime(43);
      node1.isStringKey();
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newNumber(352.2527848);
      node0.isStringKey();
      Node node1 = new Node(33, node0, node0, node0);
      node1.isGetElem();
      node0.isBreak();
      node1.getJSDocInfo();
      Node.newNumber((double) 47);
      node1.isUnscopedQualifiedName();
      node1.isThrow();
      node1.getJSType();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      Node node1 = new Node(38, node0);
      node1.getDirectives();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isParamList();
      node1.isCase();
      // Undeclared exception!
      try { 
        node2.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 40 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      Node node2 = Node.newString((-731), "originalname", 8, 118);
      Node node3 = node1.srcref(node2);
      node3.checkTreeEquals(node0);
      node1.setOptionalArg(false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      node0.isThrow();
      node1.isBreak();
      Node.mergeLineCharNo(933, (-3456));
      // Undeclared exception!
      try { 
        node3.replaceChild(node1, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.GREATEST_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.setIsSyntheticBlock(true);
      functionType0.getOwnPropertyNames();
      node0.isEmpty();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [synthetic: com.google.javascript.rhino.Node$IntPropListItem@0000000340] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = new Node(40);
      Node node1 = new Node(38, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isParamList();
      Node node3 = Node.newString((-3114), "dSe7-?jPTE>");
      node3.isParamList();
      node1.isEquivalentToShallow(node2);
      node2.isNoSideEffectsCall();
      Node node4 = new Node(42, node2, node1, node1, 63, 0);
      node4.getBooleanProp(544);
      node3.isSwitch();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = new Node(1, 57, 52);
      Node node2 = new Node(155, node1, node1, 36, 1);
      node2.isQuotedString();
      node2.isEquivalentTo(node0, false, false, true);
      node0.getProp((-255));
      node2.isCatch();
      node1.isFromExterns();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node4 = new Node(4, node3);
      node0.srcrefTree(node1);
      // Undeclared exception!
      try { 
        Node.newString(724, (String) null, 53, 16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node node1 = new Node((-2884), node0, node0, node0, 0, (-3274));
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.removeFirstChild();
      node2.getAncestor(0);
      node2.isThrow();
      node2.isDelProp();
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = new Node(103, 103, 103);
      node0.isParamList();
      node0.isInstanceOf();
      Node node1 = new Node(40, node0, node0, node0, 49, (-1221));
      node1.useSourceInfoFromForTree(node0);
      Node node2 = null;
      try {
        node2 = new Node(101, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newString(38, "kUsgYUlnT", 38, 77);
      node0.setSourceFileForTesting("F=MaWn");
      node0.removeProp(103);
      node0.toStringTree();
      node0.isQuotedString();
      node0.isOnlyModifiesArgumentsCall();
      node0.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getQualifiedName();
      node0.isEmpty();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME kUsgYUlnT 38 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node node1 = new Node((-2884), node0, node0, node0, 0, (-3277));
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = Node.newString("[,|YNbUCC! 7)");
      node2.isCase();
      node2.addChildToFront(node3);
      node2.useSourceInfoFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = Node.newString(38, "kUsgYUlnT", 38, 77);
      node0.setSourceFileForTesting("F=MaWn");
      Node node1 = new Node(1945, 77, 4095);
      Node node2 = new Node(46, node0, node1, node0, node1);
      node2.removeChild(node1);
      Node node3 = new Node(1, node2, 31, 8);
      Node node4 = Node.newString("com.google.common.collect.Iterators$13", 16, 31);
      node1.hasChild(node4);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      Node node1 = Node.newNumber((-1858.9683436914263));
      node0.isString();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isRegExp();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node2 = Node.newNumber(435.372459896019);
      node2.getQualifiedName();
      node2.isThis();
      node1.isNot();
      Node node3 = new Node(56, node0, node2, node0);
      node3.isBreak();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = Node.newNumber((-525.6), 36, 36);
      Node node1 = new Node(111, node0, node0, node0);
      node1.isVoid();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      node1.isStringKey();
      node1.isCase();
      node0.getChildCount();
      node0.getQualifiedName();
      node0.isEmpty();
      node0.getDouble();
      node1.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(83);
      node0.isEquivalentTo(node0, false, false, false);
      node0.setOptionalArg(true);
      node0.addSuppression("-0fj1$Hk.)3:");
      node0.setOptionalArg(true);
      node0.toStringTree();
      Node node1 = Node.newString("RFSb$_:&?CLkUvn ");
      node0.isCase();
      node1.addChildToFront(node0);
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newNumber((-525.6), 36, 36);
      node0.wasEmptyNode();
      node0.getSourceOffset();
      Node node1 = new Node(38, node0);
      node0.isEquivalentToShallow(node1);
      node0.getIndexOfChild(node1);
      Node node2 = Node.newString(": ");
      Node node3 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", (-4199), 31);
      Node node4 = new Node(53, node1, node2);
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        node3.appendStringTree(pipedWriter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      String string0 = "originalname";
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node((-167), node0, node0, node0, node0, 0, 49);
      // Undeclared exception!
      try { 
        node1.addChildBefore((Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = new Node((-1522));
      node0.isAssignAdd();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node1 = Node.newNumber((double) 1, 1610612736, 100);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.putBooleanProp(6669, false);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isFromExterns();
      node0.getAncestors();
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node node1 = new Node((-2884), node0, node0, node0, 0, (-3277));
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = node2.getAncestor(0);
      node3.isEquivalentToTyped(node1);
      node2.isThrow();
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      node0.getSideEffectFlags();
      Node node1 = Node.newString(56, "II_i5)ui]g'cc", 38, (-732));
      node1.getJsDocBuilderForNode();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isDo();
      node0.isCase();
      node0.isDelProp();
      Node node2 = new Node(46, 8243, 48);
      node0.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newString(38, "kUsgYUlnT", 38, 77);
      node0.setSourceFileForTesting("F=MaWn");
      int int0 = 103;
      node0.removeProp(103);
      node0.toStringTree();
      node0.isQuotedString();
      node0.isOnlyModifiesArgumentsCall();
      node0.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("NAME kUsgYUlnT 38 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node2 = new Node(51);
      node2.srcrefTree(node1);
      node0.isQualifiedName();
      Node node3 = node2.cloneNode();
      node2.isHook();
      node3.isDo();
      node0.isCase();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TYPEOF 32 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isDec();
      node0.isRegExp();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newNumber((double) 51);
      node1.getQualifiedName();
      node1.isThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(13, nodeArray0, 13, 13);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Set<String> set0 = new LinkedHashSet<String>();
      node0.isThrow();
      node1.isDelProp();
      node1.isGetProp();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp((-1257));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -1257
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString("t'X", 85, 85);
      Node node1 = new Node(42, node0, 12, 8);
      Node node2 = node1.cloneTree();
      node0.hasChild(node2);
      node2.isAnd();
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = Node.newString((-750), "originalname", 8, 118);
      Node node2 = new Node(35, node0);
      node0.isNE();
      node0.isStringKey();
      node1.isCase();
      node2.children();
      node0.getChildCount();
      node2.getQualifiedName();
      node0.isEmpty();
      node0.getLastSibling();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // VAR originalname is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newString(2234, "ObjectpElement", (-1976), 112);
      Node node1 = new Node(31, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node1.isCast();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      node0.isIf();
      node2.getNext();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = new Node((-1623));
      Node node1 = new Node(49, node0, node0, node0);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      node0.isEquivalentTo(node1, true, true, false);
      node0.getProp(1632);
      node1.isCatch();
      node1.isFromExterns();
      Node node2 = new Node(1109, node0);
      node0.isNE();
      Node node3 = new Node(42, node1, node2, 759, 2438);
      node1.copyInformationFrom(node3);
      node2.isStringKey();
      node1.getStaticSourceFile();
      node2.isComma();
      node1.hasOneChild();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node2 = new Node(51);
      node0.isQualifiedName();
      node2.cloneNode();
      node2.isHook();
      node0.addChildToFront(node2);
      node2.detachChildren();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isGetterDef();
      node0.isWhile();
      Node node1 = new Node(38, node0);
      node1.isNE();
      node1.isStringKey();
      node1.isCase();
      node1.getChildCount();
      Node node2 = null;
      try {
        node2 = new Node(575, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = Node.newString(4, " : ");
      node0.mayMutateArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node2.setQuotedString();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("jwV");
      node1.appendStringTree(mockPrintWriter0);
      node1.getChangeTime();
      node0.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node.newString(3329, "(N|)]W44M", 301, 51);
      node1.cloneNode();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.isDo();
      node2.isCase();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(91, 91, 47);
      node0.isOr();
      Node node1 = new Node(52, node0, node0, 47, 55);
      Node node2 = Node.newString(4095, "@}32HZ?N");
      Node node3 = new Node(54);
      node0.addChildToBack(node2);
      node1.isSetterDef();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node4 = node0.useSourceInfoIfMissingFrom(node3);
      node4.hasOneChild();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = Node.newString(1083, "com.google.common.collect.ImmutableMapKeySet", 2651, 2651);
      Node node1 = new Node(15, 153, 40);
      node0.isOr();
      Node node2 = new Node(57, node0, node0, 120, 2);
      node1.copyInformationFrom(node0);
      node2.isLocalResultCall();
      node1.isEmpty();
      node2.getAncestors();
      node1.isReturn();
      node2.isIf();
      node1.getNext();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((-525.6), 36, 36);
      node0.wasEmptyNode();
      Node node1 = new Node(38, node0);
      Node node2 = node1.srcref(node0);
      node0.checkTreeEquals(node2);
      node1.isNE();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[5];
      JSType jSType0 = jSTypeRegistry0.getType("Node tree inequality:\nTree1:\nNUMBER -525.6 36\n\n\nTree2:\nNAME 36\n    NUMBER -525.6 36\n\n\nSubtree1: NUMBER -525.6 36\n\n\nSubtree2: NAME 36\n    NUMBER -525.6 36\n");
      jSTypeArray0[0] = null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createNullableType(jSType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.UnionTypeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node node1 = Node.newString(4095, "originalname");
      Node node2 = new Node(38, node1);
      node2.isOnlyModifiesThisCall();
      node1.isOptionalArg();
      node2.isInstanceOf();
      node2.isFunction();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      node1.isBreak();
      node0.isScript();
      node3.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 3926, 14);
      node0.getString();
      node0.isSwitch();
      node0.toString();
      Node.extractLineno((-1550));
      node0.getDirectives();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(43, node0);
      node1.isString();
      node0.wasEmptyNode();
      Node node2 = Node.newString(12, "", 4095, 105);
      Node node3 = Node.newString("", 0, 4);
      Node node4 = new Node(43, node3, node3);
      node2.isHook();
      node3.isNoSideEffectsCall();
      node4.isFalse();
      node1.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newString("qn7pXZy", 153, 182);
      node0.toString();
      HashSet<String> hashSet0 = new HashSet<String>();
      Node node1 = new Node(49, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags5.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node2 = new Node(46);
      node2.isQualifiedName();
      node1.clonePropsFrom(node0);
      Node node3 = Node.newString(9, "com.google.javascript.rhino.Node$FileLevelJsDocBuilder");
      // Undeclared exception!
      try { 
        node1.addChildAfter(node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(118, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.isParamList();
      node2.isParamList();
      node1.isEquivalentToShallow(node1);
      node1.isNoSideEffectsCall();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
      try { 
        node3.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = new Node(36, 36, 36);
      Node node1 = new Node(52, node0, node0, node0);
      node1.addSuppression("");
      node0.setOptionalArg(true);
      Node node2 = new Node(31, node1);
      Node node3 = node2.useSourceInfoFromForTree(node0);
      node0.getAncestor(1);
      node3.isThrow();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.GREATEST_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.setIsSyntheticBlock(true);
      Set<String> set0 = functionType0.getOwnPropertyNames();
      node1.setDirectives(set0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isName();
      node1.isAssignAdd();
      Node.newString("Named type with empty name component", 1, 38);
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      node0.isEquivalentTo(node1, true, true, false);
      node0.getProp(1632);
      node1.isCatch();
      node1.isFromExterns();
      Node node2 = new Node(1109, node0);
      node2.srcrefTree(node0);
      node0.isDebugger();
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-Afd-j5gJo8Sg");
      Node node0 = Node.newString(86, "OFrc}dMV]'", 86, 86);
      node0.isAssign();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      StringType stringType0 = mock(StringType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null).when(stringType0).toString();
      StringType stringType1 = mock(StringType.class, new ViolatedAssumptionAnswer());
      ImmutableList<StringType> immutableList0 = ImmutableList.of(stringType0, stringType0, stringType0, stringType0, stringType1);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Iterable<? extends JSType>) immutableList0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newString((-3072), "Object#Element", 40, 103);
      Node node2 = new Node(100, node0, node0);
      node1.isTrue();
      Node node3 = new Node(111, node2);
      node0.isNE();
      node3.isStringKey();
      node3.getStaticSourceFile();
      node3.isComma();
      node1.isCase();
      node3.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isString();
      node0.wasEmptyNode();
      Node node1 = Node.newString(29, "", 16, 120);
      Node node2 = Node.newString("originalname", 1, 57);
      Node node3 = new Node(40, node1, node1);
      Node node4 = new Node(36, node0, node2);
      node4.clonePropsFrom(node2);
      // Undeclared exception!
      try { 
        node3.addChildAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      Node node2 = Node.newString(12, "originalname");
      node1.useSourceInfoIfMissingFrom(node2);
      node2.isParamList();
      node0.isInstanceOf();
      node1.isNoSideEffectsCall();
      node0.isFunction();
      node0.isLabel();
      node2.isBreak();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newNumber((-691.62375387));
      node0.isString();
      Node node1 = Node.newNumber((-1081.679295688), 63, 63);
      node0.putIntProp(47, 4095);
      Node node2 = new Node(15, node0, node0, node0, 36, 126);
      Node node3 = new Node(39, node2, node1, 63, 4095);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSTypeNative jSTypeNative0 = JSTypeNative.GREATEST_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0, (JSType) functionType0, (JSType) functionType0, (JSType) functionType0);
      node3.getSourceFileName();
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, functionType0);
      functionType0.isSubtype(functionType1);
      jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList0);
      node3.setJSType(functionType0);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      // Undeclared exception!
      try { 
        node3.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte) (-116);
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)127;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte) (-116);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isEquivalentTo(node1, false, false, true);
      node0.getType();
      node1.isObjectLit();
      node0.isDefaultCase();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newNumber(1022.9104422765599);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "originalname");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9sHGt32#$Ml]9ND+3|");
      node0.setLength(38);
      // Undeclared exception!
      try { 
        node0.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      Node node1 = new Node(85, node0, node0, node0, node0, 38, 55);
      Node node2 = node1.cloneTree();
      node2.isIn();
      node1.getIndexOfChild(node0);
      node1.isNull();
      node1.isWith();
      node2.hasChild(node1);
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newNumber((double) 4095, 808, 42);
      Node node2 = new Node(47, node1);
      Node node3 = node0.useSourceInfoFromForTree(node2);
      node2.isParamList();
      node1.isParamList();
      node0.isGetProp();
      node1.isNoSideEffectsCall();
      Node node4 = Node.newNumber((double) 2, 53, 0);
      node3.useSourceInfoIfMissingFromForTree(node4);
      node4.isBreak();
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 1083, 87855104);
      Node node1 = Node.newString("com.google.common.collect.AbstractIndexedListIterator");
      node1.isEquivalentTo(node0, true, true, true);
      node1.setOptionalArg(true);
      node1.getProp(56);
      node1.isCatch();
      node1.isFromExterns();
      Node node2 = new Node(12, node0);
      node2.isNE();
      node2.isStringKey();
      node1.getStaticSourceFile();
      node0.isComma();
      node0.isCase();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = new Node(32);
      Node node1 = Node.newString((-2511), "Object#Element", (-3071), 48);
      Node node2 = new Node(55, node0, node1);
      node2.isTrue();
      node0.isHook();
      Node.newNumber((double) 55, 52, 182);
      node2.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node2 = new Node(51);
      node0.isQualifiedName();
      node2.mayMutateArguments();
      node2.isHook();
      node0.addChildToFront(node2);
      node2.detachChildren();
      node2.isNot();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      int int0 = 33;
      Node node0 = new Node(33, 33, (-608));
      Node node1 = Node.newString(" wj", 1, 36);
      Node node2 = new Node(12, node0, node0, node0, node1, 1, 4);
      Node node3 = node2.copyInformationFromForTree(node1);
      node2.putProp(154, (Object) null);
      // Undeclared exception!
      try { 
        node3.replaceChildAfter(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node node2 = node1.cloneTree();
      node2.isQuotedString();
      node0.isAnd();
      Node node3 = new Node(808, 247, 233);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node3.hasMoreThanOneChild();
      node0.isSwitch();
      node2.isReturn();
      try { 
        node2.setString("31R-n:@F%i_");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TYPEOF 32 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = new Node(713);
      Node node1 = Node.newNumber(758.41, 566, 56);
      node0.setCharno((-1030));
      node1.isNew();
      node1.isVar();
      Node node2 = Node.newString(29, "w&J`g%s+Sen6;=vg'");
      node2.isCall();
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      node0.isEquivalentTo(node1, true, true, false);
      node0.getProp(1632);
      node1.isCatch();
      node1.isFromExterns();
      Node node2 = new Node(1109, node0);
      node0.isNE();
      node2.isStringKey();
      node1.getStaticSourceFile();
      node2.isComma();
      Node node3 = Node.newString(49, "duq.\"$=S", 57, 4955);
      node3.isCase();
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newNumber(16.0, (-2422), (-2279));
      Node node2 = new Node(155, node1, node1, 36, 1);
      node2.isQuotedString();
      node0.isAnd();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = new Node(115, node2, node0, node0, 31, 111);
      node3.hasMoreThanOneChild();
      node0.isSwitch();
      node2.isReturn();
      node2.getIntProp(29);
      try { 
        node3.setString("YnnQ(eS=m{");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FOR 31 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = Node.newString((-4289), "originalname");
      Node node1 = new Node(35, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.isParamList();
      Node node3 = null;
      try {
        node3 = new Node((-1318), node1, node0, node2, 126, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = new Node(153);
      node0.toString(false, false, true);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
      node0.isScript();
      node0.children();
      Node node1 = Node.newString(8, "LABEL_NAME", 40, 4095);
      node0.srcref(node1);
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 8
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.srcref(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.setOptionalArg(false);
      node0.addChildrenToBack(node3);
      node0.getParent();
      node0.detachChildren();
      try { 
        node0.setDouble(1243.13919);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // VAR originalname is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isGetterDef();
      node0.isWhile();
      node0.isInc();
      Node node1 = Node.newNumber((double) 54, 54, 142);
      node1.addChildrenToBack(node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.getParent();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Node node2 = new Node(32, node1);
      node2.setLength(8);
      node1.isNE();
      node2.isStringKey();
      node2.getStaticSourceFile();
      node1.isComma();
      node1.isCase();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = Node.newString(1573, "II_i5)ui]g'cc", 38, (-732));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node2.isArrayLit();
      node1.isFromExterns();
      node0.isCase();
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = new Node(153);
      node0.getJsDocBuilderForNode();
      node0.isDebugger();
      node0.toString(true, true, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.newString("|LkwvYKs.7hJP");
      Node node1 = Node.newString(1367, "");
      Node node2 = new Node(1095);
      node2.addChildToBack(node0);
      node1.isSetterDef();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte) (-36);
      byteArray0[2] = (byte) (-103);
      byteArray0[3] = (byte)119;
      byteArray0[4] = (byte) (-56);
      byteArray0[5] = (byte)102;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node3 = Node.newString(40, "&4", 54, (-1390));
      node3.useSourceInfoIfMissingFrom(node0);
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)52;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newNumber((-5344.37));
      Node node1 = new Node((byte)127, node0, node0);
      node1.isEquivalentTo(node0, false, false, true);
      Node node2 = Node.newNumber((double) 12);
      node2.getType();
      node0.isObjectLit();
      node2.isDefaultCase();
      node1.hasChildren();
      node2.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(30, node0, node0);
      node1.getSideEffectFlags();
      Node.newString(4095, ": ", 90, 130);
      node1.isCatch();
      Node node2 = new Node(8, 1063, 113);
      node2.isFromExterns();
      Node node3 = new Node(36, node1);
      node2.isNE();
      node0.isStringKey();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(": ", false);
      node0.isComma();
      node3.isCase();
      Node node4 = Node.newNumber(8202.0, 1464, 38);
      Node node5 = new Node(4095, node2, node2, node4, 4095, 131072);
      node5.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = Node.newNumber((double) 46, 32, 105);
      node0.isVoid();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TOP_LEVEL_PROTOTYPE");
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(1283, "BOOLEAN_OBJECT_FUNCTION_TYPE", 1574, 26);
      node0.isString();
      node0.isFromExterns();
      node0.isBreak();
      node0.setLineno(118);
      node0.removeProp((-492));
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newString("t'VXF", 85, 85);
      Node node1 = new Node(85, node0, node0, node0, node0, 38, 55);
      Node node2 = node1.cloneTree();
      node1.isQuotedString();
      node2.isAnd();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      try { 
        node2.setDouble(47);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // COMMA 38 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString("A{", 183, (-848));
      node0.getString();
      node0.setString("t'VXF");
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.isArrayLit();
      node0.isFromExterns();
      node1.isCase();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newNumber((-271.2377437656269), 183, 183);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setConstant(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.addChildrenToFront(node1);
      node1.isAdd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newString(118, "K^>5D?ZR2PW?Ch&>");
      Node node1 = new Node(43, node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isParamList();
      node0.isParamList();
      node1.isInstanceOf();
      node2.isNoSideEffectsCall();
      node2.useSourceInfoIfMissingFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.REGEXP_TYPE;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.jstype.InstanceObjectType cannot be cast to com.google.javascript.rhino.jstype.FunctionType
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-2810), nodeArray0);
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(43, node0);
      node0.isLabelName();
      node1.setOptionalArg(false);
      Object object0 = new Object();
      Node node2 = node0.detachFromParent();
      node1.isOptionalArg();
      node1.isTry();
      node0.isNull();
      Node node3 = node0.cloneTree();
      node2.isWith();
      node1.isReturn();
      Node node4 = new Node(154, node2, node1, node2, node3);
      node1.srcrefTree(node4);
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = new Node(85, 85, 47);
      node0.isOr();
      Node node1 = new Node(52, node0, node0, 47, 55);
      Node node2 = new Node((-38));
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(85, 85, 47);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOr();
      Node node1 = new Node(52, node0, node0, 47, 55);
      node1.useSourceInfoFrom(node0);
      node0.isEmpty();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = Node.newString("Jm#6kMJOo%[MB7", 116, 116);
      Node node1 = new Node(38, node0, node0);
      node0.isTrue();
      node0.isFromExterns();
      node1.getChildBefore(node0);
      node1.isHook();
      node0.getCharno();
      Node node2 = null;
      try {
        node2 = new Node(51, node1, node1, node0, 43, 32);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = new Node((-876));
      String string0 = "-lJrf[wg_E";
      Node node1 = Node.newString("-lJrf[wg_E", 52, 55);
      node0.isOptionalArg();
      Node node2 = node0.copyInformationFromForTree(node1);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte) (-8);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(181);
      int int0 = Node.NO_SIDE_EFFECTS;
      node0.children();
      node0.getJSDocInfo();
      node0.isString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isOptionalArg();
      node0.isFromExterns();
      Node node1 = new Node(42, node0);
      node1.isNE();
      node0.isStringKey();
      node1.hasOneChild();
      MockFileWriter mockFileWriter0 = new MockFileWriter("Object#Element");
      // Undeclared exception!
      try { 
        node1.appendStringTree(mockFileWriter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 181
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      Node node2 = new Node(36);
      node1.clonePropsFrom(node2);
      node0.isParamList();
      node1.isParamList();
      node0.isInstanceOf();
      node1.removeChildren();
      node1.isNoSideEffectsCall();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString(",~qlMRd2_:p");
      Node node1 = new Node(43, node0, node0, node0, node0, (-753), (-573));
      node0.isEquivalentTo(node1, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isEquivalentTo(node1, true, false, false);
      node1.isIn();
      node0.getIndexOfChild(node1);
      node0.isDec();
      node0.addChildToFront(node1);
      node0.getSideEffectFlags();
      node1.checkTreeEqualsImpl(node0);
      node0.isFromExterns();
      node1.isCase();
      node0.isDelProp();
      node1.cloneNode();
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 32, 32);
      node0.getSourceOffset();
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = node0.cloneNode();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.getDirectives();
      node0.isThrow();
      node1.isDelProp();
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(43, node0);
      node1.isLabelName();
      node1.wasEmptyNode();
      Node node2 = Node.newString(114, "", 30, (-1743));
      Node node3 = Node.newString("com.google.javascript.rhino.Node$StringNode", 124, 43);
      Node node4 = new Node(44, node3, node2);
      Node node5 = node0.clonePropsFrom(node3);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node3, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newNumber((-525.6), 36, 36);
      node0.wasEmptyNode();
      Node node1 = new Node(38, node0);
      node0.isEquivalentToShallow(node1);
      node0.getIndexOfChild(node1);
      node1.isDec();
      node0.addChildToFront(node1);
      node0.isUnscopedQualifiedName();
      node1.getJSType();
      node0.isExprResult();
      node1.getChildAtIndex(1);
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(103);
      node0.hasMoreThanOneChild();
      node0.isContinue();
      node0.isWhile();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = Node.newNumber((double) 4);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node2 = Node.newString("FUNCTION_INSTANCE_TYPE", 48, 36);
      node0.copyInformationFrom(node0);
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      node0.setChangeTime(31);
      Node node3 = new Node(8, node1);
      // Undeclared exception!
      try { 
        node3.removeChild(node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newNumber((-525.6), 36, 36);
      node0.wasEmptyNode();
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1500);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.setReturnsTainted();
      Node node2 = new Node((-1523));
      // Undeclared exception!
      try { 
        node1.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      Node node1 = new Node(39, node0, node0, node0);
      node1.checkTreeEqualsImpl(node1);
      node1.detachChildren();
      node0.isFromExterns();
      node1.isNE();
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newNumber((double) 52);
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1102, 87855104, 87855104);
      Node node1 = Node.newString("com.google.common.collect.AbstractIndexedListIterator");
      Node node2 = new Node(47, node1, node1, node1, node0);
      Node node3 = node1.useSourceInfoFromForTree(node2);
      node3.isParamList();
      Node node4 = Node.newString(524, "\"]65*iI&(Km>O$.");
      node4.isParamList();
      node0.isInstanceOf();
      node4.isNoSideEffectsCall();
      node3.isFunction();
      node2.useSourceInfoIfMissingFromForTree(node4);
      node4.isBreak();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 8202, 0);
      node0.isCast();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEquivalentToTyped(node0);
      try { 
        node0.setString("%h*oF9;");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 8202 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = Node.newString(86, "i]b", 1, 128);
      EvoSuiteFile evoSuiteFile0 = null;
      jSDocInfo0.getBaseType();
      jSDocInfo0.setType((JSTypeExpression) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString("t'VXF", 85, 85);
      Node node1 = new Node(85, node0, node0, node0, node0, 38, 55);
      Node node2 = node1.cloneTree();
      node2.setSourceEncodedPositionForTree(465);
      node1.isQuotedString();
      node1.isGetElem();
      node2.isAnd();
      InputId inputId0 = new InputId("");
      node2.putProp((-502), node1);
      node2.setChangeTime(49);
      // Undeclared exception!
      try { 
        node2.removeChild(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = new Node((byte) (-8));
      Node node1 = new Node(183, node0);
      node1.isLabelName();
      node1.setOptionalArg(false);
      Object object0 = new Object();
      Node node2 = node0.detachFromParent();
      node0.isOptionalArg();
      node2.isNE();
      Node node3 = node0.cloneTree();
      node0.isWith();
      node3.isReturn();
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = new Node(103);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-98);
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte) (-98);
      byteArray0[5] = (byte)54;
      byteArray0[6] = (byte) (-98);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = new Node((-2004));
      int int0 = Node.NO_SIDE_EFFECTS;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      jSTypeArray0[0] = jSType0;
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node2.children();
      node2.isString();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isOptionalArg();
      node0.isFromExterns();
      Node node3 = new Node(1, node0);
      node1.isNumber();
      node1.isStringKey();
      node2.hasOneChild();
      node3.getJSType();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newNumber(16.0, (-2422), (-2279));
      node0.wasEmptyNode();
      Node node2 = new Node(31, node0);
      node2.isEquivalentToShallow(node0);
      node2.addChildToFront(node1);
      node2.isFunction();
      node2.useSourceInfoIfMissingFromForTree(node0);
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      int int0 = 36;
      Node node0 = new Node(36, 182, (-1395));
      node0.setSourceEncodedPosition(36);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(30, node0, node0);
      node1.getSideEffectFlags();
      Node node2 = Node.newNumber((double) 16, 42, 77);
      node2.isBreak();
      node1.isAssignAdd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'kIu=G");
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node1.setSideEffectFlags(node_SideEffectFlags1);
      node1.getProp(27591);
      node2.isDo();
      node0.isCase();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEW [side_effect_flags: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newString("Jm#6kMJOo%[MB7", 116, 116);
      Node node1 = new Node(38, node0, node0);
      node0.isTrue();
      node0.isFromExterns();
      Node node2 = Node.newString(" : ");
      node2.isNE();
      node2.isTry();
      MockFile mockFile0 = new MockFile("Jm#6kMJOo%[MB7", " : ");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) node2;
      objectArray0[1] = (Object) node1;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) mockFile0;
      objectArray0[4] = (Object) " : ";
      objectArray0[5] = (Object) node1;
      objectArray0[6] = (Object) "Jm#6kMJOo%[MB7";
      objectArray0[7] = (Object) node2;
      node0.getProp((-795));
      objectArray0[8] = null;
      PrintStream printStream0 = mockPrintStream0.printf(locale0, " : ", objectArray0);
      node2.appendStringTree(printStream0);
      node1.isNE();
      node2.isTypeOf();
      node2.isLocalResultCall();
      node2.toString();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      Node node2 = Node.newString(12, "originalname");
      node0.isVar();
      node2.isParamList();
      node0.isInstanceOf();
      node1.isNoSideEffectsCall();
      node0.isFunction();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.putIntProp(1630, 87855104);
      Node node1 = Node.newString(46, "com.google.javascript.rhino.Node$IntPropListItem", 303, 808);
      Node node2 = new Node((-1661), 41, 53);
      Node node3 = node2.srcref(node1);
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1661
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(57, node0, 52, 4095);
      node0.isLabelName();
      node0.wasEmptyNode();
      Node node2 = Node.newString(12, "", 4095, 105);
      Node node3 = Node.newString("", 0, 4);
      Node node4 = new Node(43, node3, node3);
      node1.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node2, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node(39, node0, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.checkTreeEqualsImpl(node2);
      node1.detachChildren();
      node0.isDefaultCase();
      node0.isFromExterns();
      Node node3 = new Node(32, node0);
      node2.isNE();
      node2.isComma();
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(103);
      node0.hasMoreThanOneChild();
      node0.isEquivalentTo(node0);
      node0.isDo();
      Node node1 = Node.newNumber((double) 57, 2, 49);
      node0.useSourceInfoFrom(node1);
      node1.addChildrenToBack(node0);
      node1.getQualifiedName();
      node1.isThis();
      node1.isDo();
      int int0 = Node.LENGTH;
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isDefaultCase();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node1 = Node.newString("Object#Key", 3417, (-3594));
      node1.addChildToFront(node0);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node2 = new Node(57);
      node0.isQualifiedName();
      Node.newNumber((double) 31, 3, 52);
      node2.hasOneChild();
      node1.isInstanceOf();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setThrows();
      node_SideEffectFlags6.clearSideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      Node node0 = new Node(31);
      node0.isQualifiedName();
      node0.mayMutateArguments();
      node0.isHook();
      node0.isFalse();
      node0.isAssign();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(85, 85, 47);
      node0.isOr();
      Node node1 = new Node(52, node0, node0, 47, 55);
      Node node2 = Node.newString(4095, "@}32HZ?N");
      Node node3 = new Node(54);
      node0.addChildToBack(node2);
      node1.isSetterDef();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node4 = node0.useSourceInfoIfMissingFrom(node3);
      node4.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.Node$IntPropListItem";
      Node node0 = Node.newNumber(0.0, (-1322), (-3829));
      node0.putIntProp(40, 386);
      Node node1 = new Node(46, node0, node0, 15, (-1322));
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom(node1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(30, node0);
      node1.setCharno(42);
      Node node2 = Node.newNumber((double) 1, 43, (-1428));
      node0.getStaticSourceFile();
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = new Node(2);
      node3.setStaticSourceFile((StaticSourceFile) null);
      node2.wasEmptyNode();
      node0.isScript();
      node2.mayMutateArguments();
      node3.srcrefTree(node1);
      node0.getProp(44);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = Node.newString(48, "g0mRM-q*((ZA:H\"q<)", 154, 4820);
      node1.setCharno(42);
      node1.getDirectives();
      node1.isFor();
      node0.isVar();
      Node node2 = new Node(154, node1, node0, node1, node1);
      node0.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.getJSDocInfo();
      Node node3 = new Node(48, 1612, 32);
      Node node4 = new Node(492, node3);
      node3.setCharno(4);
      node4.getChildAtIndex((-176));
      node3.isCall();
      node0.isEquivalentTo(node4);
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = Node.newString("v0-qe]y-A~p }UJ", 492, 114);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.newNumber((-3555.56));
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newNumber((double) 54, 33595392, 0);
      Node node2 = Node.newNumber(885.65, 51, 0);
      node1.isBreak();
      node1.isAssignAdd();
      node1.getBooleanProp(86);
      node2.getQualifiedName();
      node0.isThis();
      node2.isFromExterns();
      Node node3 = new Node(1476, node0);
      node0.isNE();
      node0.isStringKey();
      node2.hasChild(node2);
      node0.isCatch();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(30, node0, node0);
      node1.putIntProp(37, (-2712));
      node1.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-862048943));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags5.setThrows();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node1.isQualifiedName();
      node0.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.checkTreeEquals(node0);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = Node.newString((-1545), "g0mRM-q*((ZA:H\"q<)", 1073741823, 4095);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node1.isArrayLit();
      node0.isFromExterns();
      node1.isCase();
      // Undeclared exception!
      try { 
        Node.newString(57, (String) null, (-74), 47);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node node1 = new Node(4096, node0);
      node0.isLabelName();
      node1.setOptionalArg(true);
      Object object0 = new Object();
      Node node2 = node0.detachFromParent();
      node2.isOptionalArg();
      node0.isNE();
      Node node3 = new Node(47, node2, node1, 13, 54);
      node0.isEmpty();
      node2.isLabelName();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(30, node0, node0, 15, 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.checkTreeEqualsImpl(node0);
      node1.detachChildren();
      node2.isDefaultCase();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node2.setIsSyntheticBlock(false);
      Set<String> set0 = functionType0.getOwnPropertyNames();
      node1.setDirectives(set0);
      node1.isName();
      node0.isAssignAdd();
      // Undeclared exception!
      try { 
        node2.getAncestor((-2309));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(43, node0);
      node0.isLabelName();
      node1.setOptionalArg(false);
      Object object0 = new Object();
      Node node2 = node0.detachFromParent();
      node1.isOptionalArg();
      node2.isNE();
      node0.isNull();
      node0.cloneTree();
      node2.isWith();
      node1.isReturn();
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString(87855565, "originalname", (-848), 105);
      Node node1 = new Node(105, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.setLength(2);
      node1.setSourceEncodedPositionForTree((-1008));
      node2.isQuotedString();
      node0.isGetElem();
      node0.isAnd();
      InputId inputId0 = new InputId("");
      node0.putProp(55, node2);
      node0.setChangeTime(196624);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node1;
      nodeArray0[1] = node2;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node2;
      nodeArray0[5] = node0;
      Node node3 = null;
      try {
        node3 = new Node(11, nodeArray0, 0, 49);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = Node.newNumber((-758.2503), 8213, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(42, node0, node0, node0, node0, 333, 47);
      Node node2 = Node.newString("r+|9<`eV)|2$@");
      // Undeclared exception!
      try { 
        node2.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1914), 122, 1);
      Node node1 = new Node((-1914), node0, node0, node0, node0, 57, (-746));
      Node node2 = node1.cloneTree();
      node0.setSourceEncodedPositionForTree((-1681));
      node0.isQuotedString();
      node0.isGetElem();
      node2.isAnd();
      InputId inputId0 = new InputId("q7pXZy");
      node1.setChangeTime(55);
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = new Node(85);
      node0.isLabel();
      Node node1 = Node.newString(2466, "Object#Element", 39, 4095);
      node0.getIndexOfChild(node1);
      node1.isLabel();
      node0.isNot();
      node0.isInc();
      node0.isCase();
      node1.getString();
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2466
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newNumber((-2684.2931558), 54, (-2654));
      node0.setCharno(4);
      node1.isNew();
      node0.isVar();
      node1.isCall();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node node1 = Node.newString(54, "new child has existing sibling", 31, 1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = new Node(3025, nodeArray0);
      node2.setJSDocInfo(jSDocInfo0);
      Node node3 = null;
      try {
        node3 = new Node(47, nodeArray0, 2, (-2044));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isDec();
      node0.isWhile();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 48, 16);
      node1.toString();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      node1.getDirectives();
      Node node2 = new Node(57, node0, 1, 478);
      node2.type = 4;
      Node node3 = node2.useSourceInfoFromForTree(node0);
      Node node4 = Node.newNumber((double) 36, 478, 62);
      node1.isOnlyModifiesArgumentsCall();
      node3.hasOneChild();
      node4.removeChildren();
      node4.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(103);
      node0.hasMoreThanOneChild();
      node0.isEquivalentTo(node0);
      node0.isDo();
      Node node1 = Node.newNumber((double) 57, 2, 49);
      node1.addChildrenToBack(node0);
      node1.isThis();
      node0.detachChildren();
      Node node2 = new Node(29);
      Node node3 = null;
      try {
        node3 = new Node(40, node1, node2, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newNumber((double) 54, 33595392, 0);
      node1.putIntProp(53, 1);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node2.isQualifiedName();
      node0.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.checkTreeEqualsImpl(node2);
      node1.detachChildren();
      node0.isDefaultCase();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.isNE();
      Node node3 = new Node(1359);
      node3.getType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node4 = node1.setJSDocInfo(jSDocInfo0);
      node4.getInputId();
      node0.wasEmptyNode();
      node1.getProp(38);
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = Node.newNumber((-525.6), 36, 36);
      node0.wasEmptyNode();
      Node node1 = new Node(52, node0, node0, node0);
      node1.addSuppression("");
      node0.setOptionalArg(true);
      node1.toStringTree();
      Node node2 = Node.newString("B`]0dC^kr!b<");
      node0.isEmpty();
      node1.putBooleanProp(4095, false);
      node2.isDo();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node3 = node1.setJSDocInfo(jSDocInfo0);
      node3.addChildrenToFront(node2);
      node3.useSourceInfoIfMissingFrom(node0);
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = new Node(153);
      node0.setWasEmptyNode(false);
      node0.toString(false, false, true);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
      node0.isScript();
      node0.children();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.setOptionalArg(false);
      node0.addChildrenToBack(node1);
      Node node2 = node1.getParent();
      node2.detachChildren();
      node2.cloneTree();
      try { 
        node0.setDouble((-1.0));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LABEL_NAME [directives: com.google.javascript.rhino.Node$ObjectPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = Node.newNumber(386.00713332025);
      Node node1 = Node.newNumber(3103.60682745591, 1, 46);
      Node node2 = Node.newNumber(1.2);
      node2.putIntProp(55, 0);
      node1.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node2.isQualifiedName();
      node2.mayMutateArguments();
      node2.isHook();
      node1.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newString("Jm#6kMJOo%[MB7", 116, 116);
      node0.isFromExterns();
      node0.getAncestors();
      node0.toString();
      node0.getQualifiedName();
      Node node1 = Node.newString(4194304, "STRING Jm#6kMJOo%[MB7 116");
      Node node2 = new Node(40, node1, node1);
      node2.isCase();
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 799, 32);
      node0.getProp(799);
      Node node1 = Node.newString(33, "String", 43, 2601);
      node0.checkTreeEqualsImpl(node1);
      node0.srcref(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "Hb";
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "String");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node1.checkTreeEqualsImpl(node0);
      node0.detachChildren();
      node0.isDefaultCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.setIsSyntheticBlock(true);
      Set<String> set0 = functionType0.getOwnPropertyNames();
      node1.setDirectives(set0);
      node0.isName();
      node0.isAssignAdd();
      // Undeclared exception!
      try { 
        node1.getAncestor((-1157));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.isInc();
      node0.setOptionalArg(false);
      Object object0 = new Object();
      node1.isOptionalArg();
      node1.isNE();
      node1.isIf();
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isDec();
      node0.isWhile();
      node0.isRegExp();
      Node node1 = Node.newNumber((double) 54, 54, 135);
      node1.addChildrenToBack(node0);
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = new Node(54, node1, node1, 4, 46);
      node1.getDouble();
      node2.isEmpty();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node1.isEquivalentTo(node0, false, false, false);
      node1.setOptionalArg(true);
      Object object0 = new Object();
      node0.isOptionalArg();
      node0.isNE();
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      node1.setType((-2283));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isDec();
      node0.isWhile();
      node0.isRegExp();
      Node node1 = Node.newNumber((double) 54, 54, 135);
      node1.addChildrenToBack(node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isEquivalentTo(node1, false, false, false);
      node1.isIn();
      node0.getIndexOfChild(node1);
      node1.isDec();
      node0.isDo();
      node0.addChildToFront(node1);
      node1.getSideEffectFlags();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeEqualsImpl(node0);
      node0.getProp(118);
      node_NodeMismatch0.equals((Object) null);
      node1.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte)54;
      byteArray0[4] = (byte) (-98);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(183);
      int int0 = Node.NO_SIDE_EFFECTS;
      node0.children();
      node0.isString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isOptionalArg();
      node0.isFromExterns();
      Node node1 = new Node(42, node0);
      node0.isSwitch();
      node1.isParamList();
      node0.isBreak();
      node0.isUnscopedQualifiedName();
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = Node.newNumber((-691.62375387));
      node0.isString();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newString(".negate()");
      node0.isBreak();
      Node node2 = Node.newNumber(16.0);
      node1.setIsSyntheticBlock(false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".negate()");
      node1.addChildToBack(node0);
      // Undeclared exception!
      try { 
        node2.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = new Node(2114, (-862048943), 2114);
      Node node1 = new Node(2, 4095, 57);
      node0.srcref(node1);
      Node node2 = null;
      node0.getInputId();
      // Undeclared exception!
      try { 
        node0.getAncestor((-862048943));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = new Node(36);
      Node node1 = new Node((-2454), node0);
      node1.isLabelName();
      node1.setOptionalArg(false);
      Object object0 = new Object();
      node0.detachFromParent();
      node1.isOptionalArg();
      node1.isNE();
      Node node2 = new Node(54, node1, node0, 47, 4);
      node2.isEmpty();
      node0.isLabelName();
      node2.isOr();
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = Node.newString(48, "g0mRM-q*((ZA:H\"q<)", 154, 4820);
      node1.setCharno(42);
      node1.getDirectives();
      node1.isNew();
      node0.isVar();
      Node node2 = new Node(154, node1, node0, node1, node1);
      node0.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.newString(53, "8jbvY_r{@W`s4wZ ", 49, 185);
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = Node.newNumber((double) 54, 33595392, 0);
      node1.putIntProp(53, 1);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node2.isQualifiedName();
      node0.mayMutateArguments();
      node1.isHook();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = Node.newString(4095, "originalname");
      Node node2 = new Node(38, node1);
      Node node3 = node0.useSourceInfoFromForTree(node2);
      node2.isOnlyModifiesThisCall();
      node2.isParamList();
      node3.isParamList();
      node2.isInstanceOf();
      node3.isFunction();
      node3.useSourceInfoIfMissingFromForTree(node1);
      node3.isBreak();
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString((-807), "");
      Node node1 = Node.newString("", 4095, 1);
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node1.hasOneChild();
      node1.getChildAtIndex((-2527));
      boolean boolean0 = false;
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  4095 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node1.isParamList();
      node1.setOptionalArg(true);
      Object object0 = new Object();
      node1.isGetterDef();
      Node node2 = Node.newString("(N|)]W44M", 52, 53);
      node2.getDirectives();
      node0.isWith();
      node1.getCharno();
      node0.getLastChild();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 87855104);
      Node node1 = Node.newString("com.google.common.collect.AbstractIndexedListIterator");
      node1.isEquivalentTo(node0, true, true, true);
      node1.setType(1438);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.NO_RESOLVED_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      node0.setJSType(functionType0);
      node1.setOptionalArg(true);
      node1.getProp(56);
      node1.isCatch();
      node1.isFromExterns();
      Node node2 = new Node(12, node0);
      node2.isNE();
      node2.isStringKey();
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(43, node0);
      node0.isLabelName();
      node1.setOptionalArg(false);
      Object object0 = new Object();
      Node node2 = node0.detachFromParent();
      node1.isOptionalArg();
      node2.isNE();
      Node node3 = new Node(1160, node1, node1, 2839, 37);
      node0.isEmpty();
      node0.isLabelName();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isRegExp();
      node0.isNE();
      node0.getSourcePosition();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte) (-102);
      byteArray0[4] = (byte) (-102);
      byteArray0[5] = (byte)47;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t'VXF");
      Node node1 = Node.newNumber((-795.72153793488), 55, (-4096));
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = Node.newString("originalname", 3251, 3251);
      Node node1 = new Node(3251, node0);
      node1.isEquivalentTo(node0, false, false, false);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = Node.newString("Jm#6kMJOo%[MB7", 116, 116);
      node0.putProp((-1181), "Jm#6kMJOo%[MB7");
      Node node1 = new Node(556, node0);
      node1.getIndexOfChild(node0);
      node1.isDec();
      node0.addChildToFront(node1);
      node1.isUnscopedQualifiedName();
      node0.getJSType();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = Node.newNumber((-525.6), 36, 36);
      node0.wasEmptyNode();
      Node node1 = new Node(38, node0);
      Node node2 = Node.newString("6ODIV/(~47Qs(o:DUtC");
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = Node.newString(0, "new child has existing parent", 0, 3390);
      node0.setCharno(6523);
      node0.getDirectives();
      node0.isNew();
      node0.isVar();
      Node node1 = Node.newString(38, "BITOR");
      node0.isParamList();
      node1.isSwitch();
      node0.isParamList();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      int int0 = (-848);
      Node node0 = new Node((-848), (-848), (-848));
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(103);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -848
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = Node.newString(91, "originalname");
      Node node1 = new Node(36, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node1.isParamList();
      node1.isParamList();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isInstanceOf();
      node1.isNoSideEffectsCall();
      node0.isFunction();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node3.isBreak();
      node3.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node0.isInc();
      node1.setOptionalArg(true);
      Object object0 = new Object();
      node0.isOptionalArg();
      node0.isNE();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isDec();
      node0.isWhile();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 48, 16);
      node1.toString();
      node1.getDirectives();
      Node node2 = new Node(57, node0, 1, 478);
      Node node3 = node2.useSourceInfoFromForTree(node0);
      Node node4 = Node.newNumber((double) 36, 478, 62);
      node1.isOnlyModifiesArgumentsCall();
      node3.hasOneChild();
      node4.removeChildren();
      node4.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = Node.newString(48, "g0mRM-q*((ZA:H\"q<)", 154, 4820);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.isArrayLit();
      node1.isFromExterns();
      node2.isCase();
      node2.getString();
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString((-807), "");
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 8202, 20);
      node0.isCast();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(54, node0);
      node1.setSourceFileForTesting("'YG~S6Yn$L");
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.isVoid();
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      int int0 = 118;
      Node node0 = Node.newString(118, "originalname");
      node0.isWhile();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getQualifiedName();
      Node node1 = new Node((-167), node0, node0, node0, node0, 0, 49);
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = Node.newNumber((-525.6), 36, 36);
      node0.wasEmptyNode();
      Node node1 = new Node(52, node0, node0, node0);
      node1.addSuppression("");
      node0.setOptionalArg(true);
      node1.toStringTree();
      Node node2 = Node.newString("B`]0dC^kr!b<");
      node0.isEmpty();
      node1.putBooleanProp(4095, false);
      node1.isInstanceOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.addChildrenToBack(node2);
      Node node3 = new Node(16, 47, 45);
      node0.checkTreeEqualsImpl(node2);
      try { 
        node2.setDouble(1.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING B`]0dC^kr!b< is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isDec();
      node0.isWhile();
      node0.isInc();
      Node node1 = new Node(1048576, node0, 1032, 0);
      Node node2 = new Node(460, (-1299), 122);
      node2.type = 103;
      Node node3 = node2.copyInformationFromForTree(node0);
      node3.isRegExp();
      node3.getStaticSourceFile();
      node0.addChildToBack(node3);
      node0.isSetterDef();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node4 = node2.useSourceInfoIfMissingFrom(node1);
      node4.isAdd();
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = Node.newString(0, "'k");
      Node node1 = new Node(0, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node1.isParamList();
      node1.isParamList();
      node2.isInstanceOf();
      node0.isNoSideEffectsCall();
      node1.isFunction();
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = null;
      try {
        node3 = new Node(1119, node2, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.isNull();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isArrayLit();
      node0.isFromExterns();
      node0.isCase();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LABEL_NAME 153 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.isParamList();
      node2.isParamList();
      node0.isInstanceOf();
      node1.isNoSideEffectsCall();
      node0.isFunction();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      node3.isBreak();
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newString((-3072), "Object#Element", 40, 103);
      Node node2 = new Node(100, node0, node0);
      node1.isTrue();
      node2.isFromExterns();
      Node.newString("");
      node2.isNE();
      node2.isTry();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(85, 85, 47);
      node0.isOr();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node((-2490), nodeArray0, 0, 29);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = Node.newString(0, "new child has existing parent", 0, 3390);
      node0.isNumber();
      node0.getProp(0);
      Node node1 = new Node(2, node0, node0);
      Node node2 = Node.newNumber((double) 39, 32, (-766));
      Node node3 = new Node(362, 105, 4322);
      node3.checkTreeEqualsImpl(node0);
      node0.setQuotedString();
      node2.isUnscopedQualifiedName();
      Node node4 = Node.newNumber((double) 38, 634879, 12288);
      node4.getJSType();
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 799, 32);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node1.setVarArgs(false);
      node1.addChildrenToFront(node0);
      Node node2 = node0.getParent();
      node2.isOnlyModifiesThisCall();
      node1.isVoid();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node1.isVoid();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-0zk/}Hp^U>hFC");
      node2.isDefaultCase();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      node0.isWhile();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getQualifiedName();
      node0.isThis();
      node0.isDo();
      node0.addChildToFront(node0);
      int int0 = Node.LENGTH;
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSType[] jSTypeArray0 = new JSType[0];
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString("");
      Node node1 = Node.newString(49, "");
      node0.useSourceInfoFrom(node1);
      node0.isTry();
      node0.hasChildren();
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = new Node(153);
      node0.setWasEmptyNode(false);
      node0.toString(false, false, true);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
      node0.isScript();
      node0.children();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.setOptionalArg(false);
      node0.addChildrenToBack(node1);
      Node node2 = node1.getParent();
      node2.detachChildren();
      try { 
        node0.setDouble((-1.0));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LABEL_NAME [directives: com.google.javascript.rhino.Node$ObjectPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = new Node(153);
      String string0 = "g0mRM-q*((ZA:H\"q<)";
      Node node1 = Node.newString("g0mRM-q*((ZA:H\"q<)", 38, 4095);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isEquivalentTo(node2, true, false, false);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = Node.newString("Object#Element", 85, 40);
      Node node1 = new Node(30, node0, node0, node0, node0);
      node0.isEquivalentTo(node1);
      node1.setSideEffectFlags(37);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "6ODIV/(~47Qs(o:DUtC";
      Node node0 = Node.newString(88, "6ODIV/(~47Qs(o:DUtC", 48, 48);
      Node node1 = new Node(40, node0, 1713, 53);
      node1.getDirectives();
      node0.useSourceInfoFrom(node1);
      node1.isEquivalentTo(node0, false, true, true);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.isQuotedString();
      node0.isFalse();
      node0.isDec();
      node0.isLabel();
      node0.addChildToFront(node0);
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(845);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.getType("_&lV~*");
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node1.getProp(37);
      Node node3 = Node.newString((-750), "originalname", 8, 118);
      node1.checkTreeEqualsImpl(node0);
      Node node4 = node1.srcref(node3);
      node4.checkTreeEquals(node0);
      node2.isNE();
      node2.getType();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node5 = node2.setJSDocInfo(jSDocInfo0);
      node2.getInputId();
      node2.wasEmptyNode();
      node5.getProp(57);
      node2.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = new Node(153);
      node0.isNull();
      node0.isCase();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LABEL_NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(43, node0);
      node0.isLabelName();
      node0.wasEmptyNode();
      Node node2 = Node.newString(12, "", 4095, 105);
      Node node3 = new Node(16, node2, node2);
      Node node4 = new Node(43, node3, node3);
      node1.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node2, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.checkTreeEqualsImpl(node2);
      node1.detachChildren();
      node0.isDefaultCase();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node3.setIsSyntheticBlock(true);
      Set<String> set0 = functionType0.getOwnPropertyNames();
      node1.setDirectives(set0);
      functionType0.isNullable();
      node0.isParamList();
      node3.isDo();
      node2.isGetterDef();
      node0.getDirectives();
      node1.isWith();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = Node.newString(87855567, "originalname", (-848), 105);
      Node node1 = new Node(105, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.setLength(2);
      node2.addSuppression("com.google.javascript.rhino.Node");
      node1.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 87855567
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      node0.getDirectives();
      Node node1 = new Node((-2884), node0, node0, node0, 0, (-3277));
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.getAncestor(0);
      Node node3 = Node.newNumber((double) 48, 3390, 1246);
      node3.setIsSyntheticBlock(false);
      node1.isOnlyModifiesArgumentsCall();
      node1.hasOneChild();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      node1.isBreak();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.getBooleanProp(47);
      node1.getQualifiedName();
      node0.isThis();
      Node node2 = Node.newString("(N|)]W44M");
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isDelProp();
      node0.getIntProp((-1073741824));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isContinue();
      node0.isWhile();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node1 = new Node(36, node0, node0, 1207, 0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node1.isParamList();
      Node node3 = null;
      try {
        node3 = new Node(105, node1, node2, node2, 12, 50);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.checkTreeEqualsImpl(node2);
      node1.detachChildren();
      node0.isDefaultCase();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node3.setIsSyntheticBlock(true);
      Set<String> set0 = functionType0.getOwnPropertyNames();
      node1.setDirectives(set0);
      node2.isName();
      node3.isAssignAdd();
      node0.getAncestor(2103);
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.checkTreeEqualsImpl(node0);
      node0.isEquivalentToShallow(node0);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isFor();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node node0 = Node.newString(87855567, "originalname", (-848), 105);
      Node node1 = new Node(1, node0, 0, 87855567);
      Node node2 = new Node(49, (-1576), 8202);
      Node node3 = node0.copyInformationFromForTree(node2);
      node1.isRegExp();
      node3.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isDec();
      node0.isWhile();
      node0.isInc();
      Node node1 = new Node(519, node0, node0, node0, node0);
      Node node2 = new Node(2, node1);
      Node node3 = node0.copyInformationFromForTree(node2);
      node1.addSuppression("fV5,m|qA% Ccb4wN#");
      node3.setOptionalArg(false);
      node3.toStringTree();
      node1.isEmpty();
      node0.putBooleanProp(1, false);
      node2.isInstanceOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        node2.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 8202, 20);
      node0.isCast();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.setSourceFileForTesting("'YG~S6Yn$L");
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.isVoid();
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = Node.newString("87y6*50(", 40, 2319);
      Node node1 = new Node(37, node0);
      node0.isDelProp();
      node1.wasEmptyNode();
      node1.isNull();
      node1.cloneTree();
      Node node2 = Node.newNumber((double) 51, (-1373), 16);
      node0.setIsSyntheticBlock(false);
      node2.isQuotedString();
      node2.isLabelName();
      node2.isReturn();
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString(1048576, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      String string0 = "";
      Node.newString((-807), "");
      Node node0 = new Node(52, 696, 504);
      boolean boolean0 = true;
      node0.putBooleanProp(4, true);
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 4
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.checkTreeEqualsImpl(node2);
      node1.detachChildren();
      node0.isDefaultCase();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node3.setIsSyntheticBlock(true);
      Set<String> set0 = functionType0.getOwnPropertyNames();
      node1.setDirectives(set0);
      Node node4 = new Node(154, node0, node0, 307, 850);
      node4.isEmpty();
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node1.getDirectives();
      node1.setOptionalArg(true);
      Object object0 = new Object();
      node0.detachFromParent();
      node0.isOptionalArg();
      node0.isNE();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.isQuotedString();
      node0.isFalse();
      node0.isDec();
      node0.isLabel();
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = new Node(103);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = new Node(43, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.hasMoreThanOneChild();
      node1.getIndexOfChild(node0);
      node0.isDec();
      node0.isSwitch();
      node1.isParamList();
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getJsDocBuilderForNode();
      node0.isDec();
      node0.isLocalResultCall();
      node0.isInc();
      node0.toString(false, true, false);
      Node node1 = new Node(38, (-1261), 16384);
      Node node2 = new Node(57, node1, node1, node0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(48, nodeArray0, 16, 43);
      Node node4 = Node.newString(4095, "8hCo>Onxn=&u~_+%W");
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node3, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = Node.newString(48, "g0mRM-q*((ZA:H\"q<)", 154, 4820);
      node1.setCharno(42);
      node1.getDirectives();
      node1.isNew();
      node0.setOptionalArg(false);
      Node node2 = new Node(36, node1, node1);
      node1.isOptionalArg();
      node0.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node3.getProp(12288);
      int int0 = 119;
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node2;
      Node node4 = Node.newString(4, "iuwSx2[AcJi{");
      nodeArray0[2] = node4;
      nodeArray0[3] = node0;
      nodeArray0[4] = node2;
      Node node5 = null;
      try {
        node5 = new Node(4095, nodeArray0, 38, 48);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(43, node0);
      node1.hasMoreThanOneChild();
      node0.isSwitch();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(85, 85, 47);
      node0.isOr();
      node0.toString(true, false, true);
      Node node1 = new Node(40, 0, 12);
      Node node2 = new Node(2, node1, node1, node1);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isDelProp();
      node0.getIntProp((-1073741824));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isContinue();
      node0.isWhile();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.addChildToFront(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      Node node2 = new Node(94);
      node2.isQualifiedName();
      node0.mayMutateArguments();
      node2.isHook();
      node2.isNoSideEffectsCall();
      node1.isFalse();
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setVarArgs(true);
      node0.isDec();
      node0.isInc();
      Node node1 = Node.newNumber((-1.0), 0, 0);
      node0.checkTreeEqualsImpl(node1);
      node0.detachChildren();
      node0.isThrow();
      node1.getCharno();
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = Node.newString("Object#Element", 85, 40);
      Node node1 = new Node(4, node0);
      node1.isDelProp();
      node1.wasEmptyNode();
      node0.isNull();
      node0.cloneTree();
      node0.isLabelName();
      node1.isReturn();
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = Node.newNumber((-525.6), 36, 36);
      Node node1 = new Node(16, 8, 83);
      node1.copyInformationFromForTree(node0);
      node0.isRegExp();
      Node node2 = new Node(4095, 460, 8388608);
      node2.isScript();
      node1.isGetProp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      Node node3 = Node.newString("(N|)]W44M", 16, 42);
      node3.isOnlyModifiesArgumentsCall();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isDec();
      node0.isWhile();
      node0.isInc();
      Node node1 = new Node(1048576, node0, 1032, 0);
      Node node2 = Node.newNumber(2491.14931271);
      node1.addChildrenAfter(node2, node0);
      node1.isThrow();
      node2.getCharno();
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getAncestor(6);
      Node node1 = Node.newString(56, "6ODIV/(~47Qs(o:DUtC", (-689), 52);
      Node node2 = new Node(105, node0, node0, node0, (-1826), (-3241));
      // Undeclared exception!
      try { 
        node0.addChildBefore((Node) null, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.valueOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = new Node((-1042), 0, 40);
      Node node1 = new Node((-1042), node0, node0, node0, node0);
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("]Y;ry", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(83);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = Node.newNumber((-525.6), 36, 36);
      node0.wasEmptyNode();
      Node node1 = new Node(38, node0);
      node0.getIndexOfChild(node1);
      node0.detachFromParent();
      node0.isParamList();
      Node.newString((-3031), "6ODIV/(~47Qs(o:DUtC", 16384, 49);
      node0.isAnd();
      node1.isEquivalentTo(node0, true, false, false);
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = Node.newString(50, "t'VXF", (-106), (-1));
      Node node2 = new Node(30, node1, node0);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.GREATEST_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0, (JSType) functionType0, (JSType) functionType0, (JSType) functionType0);
      jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList0);
      node0.setJSType(functionType0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1903
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = Node.newString(48, "g0mRM-q*((ZA:H\"q<)", 154, 4820);
      node1.setCharno(42);
      node1.getDirectives();
      node1.isNew();
      node0.isVar();
      Node node2 = Node.newString(39, "8^?(t<r?FH,6j");
      node0.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.getJSDocInfo();
      Node node3 = new Node(48, 1612, 32);
      Node node4 = new Node(512, node3);
      // Undeclared exception!
      try { 
        node4.getChildAtIndex(30);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 8202, 113, 8202);
      nodeArray0[0] = node0;
      node0.cloneTree();
      Node node1 = new Node(36, nodeArray0, 1, 2201);
      node1.isCatch();
      Node node2 = null;
      try {
        node2 = new Node(8202, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)71;
      byteArray0[4] = (byte) (-98);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(183);
      node0.getChangeTime();
      node0.children();
      node0.isString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isOptionalArg();
      node0.isFromExterns();
      Node node1 = new Node(42, node0);
      node1.isNE();
      node0.isStringKey();
      node0.getStaticSourceFile();
      node0.isComma();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isDec();
      node0.isWhile();
      node0.isInc();
      Node node1 = new Node(1048576, node0, 1032, 0);
      Node node2 = new Node(460, (-1299), 122);
      node2.type = 103;
      Node node3 = node2.copyInformationFromForTree(node0);
      node3.isRegExp();
      Node node4 = new Node(57, 87855104, (-3922));
      node0.isScript();
      node4.isGetProp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node4.isOnlyModifiesArgumentsCall();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      int int0 = 8202;
      int int1 = 36;
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newNumber((double) 8202, 113, 8202);
      nodeArray0[0] = node0;
      Node node1 = null;
      try {
        node1 = new Node(36, nodeArray0, 1, 2201);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(4095, node0, node0, node0);
      node0.checkTreeEqualsImpl(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node1.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 8202, 20);
      node0.isCast();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.setSourceFileForTesting("'YG~S6Yn$L");
      node0.addChildrenToFront(node1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.isAdd();
      node0.isVoid();
      node2.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = Node.newString("Jm#6kMJOo%[MB7", 116, 116);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(36);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.setReturnsTainted();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 57, 38);
      node1.addChildToFront(node0);
      node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags5.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags6.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags7.clearAllFlags();
      node_SideEffectFlags6.setThrows();
      node_SideEffectFlags7.clearSideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node0.isQualifiedName();
      node0.mayMutateArguments();
      node0.isTry();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 87855104);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      Node node2 = Node.newNumber((double) 4, 40, 55);
      node1.isBreak();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.getBooleanProp(201);
      node1.getQualifiedName();
      Node node3 = null;
      try {
        node3 = new Node(0, node0, node1, node2, 39, 47);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = node0.cloneNode();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node node2 = Node.newString("y&q`W\"Rbm[#m$[<r:");
      Node node3 = new Node(4095, node1, node2, node2, 15, 2945);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(1247);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got DEC
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 799, 32);
      node0.getSourceOffset();
      Node node1 = new Node(16, node0);
      node1.hasMoreThanOneChild();
      node1.isNoSideEffectsCall();
      node0.getIndexOfChild(node1);
      node0.isDec();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newNumber((-2684.2931558), 54, (-2654));
      String string0 = "]b8N}fq;_g=";
      Node node2 = Node.newString((-1577), "]b8N}fq;_g=", 4095, (-1577));
      node1.getDirectives();
      node2.isNew();
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = Node.newString(48, "g0mRM-q*((ZA:H\"q<)", 154, 4820);
      node1.setCharno(42);
      node1.getDirectives();
      node1.isNew();
      node0.isVar();
      Node node2 = Node.newString(39, "8^?(t<r?FH,6j");
      node0.isParamList();
      node2.isDo();
      node0.isGetterDef();
      node2.getDirectives();
      node2.isThrow();
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = Node.newString("com.google.jvascript.rhino.Node$IntPropListItem");
      node0.isDec();
      node0.isDec();
      node0.isInc();
      node0.removeProp(135);
      Node node1 = Node.newNumber((double) 54, 54, 135);
      node1.addChildrenToBack(node0);
      node0.getProp((-2463));
      Node node2 = null;
      try {
        node2 = new Node(36, node1, node1, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.isQuotedString();
      node0.getProp(0);
      Node node1 = Node.newString((-1), "\u0000\u00AD\u0600\u06DD\u070F\u1680\u180E\u2000\u2028\u205F\u206A\u3000\uD800\uFEFF\uFFF9\uFFFA", 49, 2);
      Node node2 = Node.newString(584, "\u0000\u00AD\u0600\u06DD\u070F\u1680\u180E\u2000\u2028\u205F\u206A\u3000\uD800\uFEFF\uFFF9\uFFFA", 8, 38);
      Node node3 = new Node(16777216, node2, node1, node1, node2);
      Node node4 = node2.srcref(node3);
      node0.checkTreeEquals(node1);
      node1.isNE();
      node4.getType();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node5 = node2.setJSDocInfo(jSDocInfo0);
      node4.getInputId();
      node5.setInputId((InputId) null);
      node4.isBlock();
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      Object object0 = new Object();
      node0.putProp(51, object0);
      node0.isNumber();
      Node node1 = Node.newString("6ODIV/(~47Qs(o:DUtC");
      Node node2 = new Node(37, node1, node1, node1, 0, 37);
      node2.setSideEffectFlags(56);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-483));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.newNumber(1083.0, (-309), 15);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.getIntProp(46);
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = Node.newString("Jm#6kMJOo%[MB7", 116, 116);
      node0.putIntProp(105, 116);
      Node node1 = new Node(32768, node0, node0, 56, 314);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = null;
      // Undeclared exception!
      try { 
        node1.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = new Node(153);
      node0.hasMoreThanOneChild();
      node0.getJsDocBuilderForNode();
      node0.isDebugger();
      node0.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.DATE_TYPE;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.jstype.InstanceObjectType cannot be cast to com.google.javascript.rhino.jstype.FunctionType
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      String string0 = "t'VXF";
      Node node0 = Node.newString("t'VXF", 85, 85);
      Node node1 = new Node(85, node0, node0, node0, node0, 38, 55);
      Node node2 = node1.cloneTree();
      node2.setSourceEncodedPositionForTree(465);
      node1.isQuotedString();
      node1.isGetElem();
      node2.isAnd();
      InputId inputId0 = new InputId("");
      node2.putProp((-502), node1);
      node2.setChangeTime(49);
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.setOptionalArg(true);
      node1.getProp(53);
      node0.isOptionalArg();
      node0.isGetProp();
      node1.checkTreeEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = Node.newNumber(2491.14931271, (-769), (-769));
      node0.isBreak();
      node0.getJSDocInfo();
      node0.getBooleanProp(3431);
      node0.isSyntheticBlock();
      node0.toString();
      Node node1 = new Node(4095, 29, 49);
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.isEquivalentTo(node1, false, false, false);
      node0.isIn();
      node0.getIndexOfChild(node1);
      node0.isDec();
      node1.isDo();
      node1.addChildToFront(node0);
      node0.getSideEffectFlags();
      node0.isDelProp();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 87855104);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node2.removeFirstChild();
      node2.setIsSyntheticBlock(true);
      node2.setDirectives((Set<String>) null);
      node2.isEmpty();
      // Undeclared exception!
      try { 
        node1.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1903
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.checkTreeEqualsImpl(node2);
      node1.detachChildren();
      node0.isDefaultCase();
      node2.addChildToBack(node1);
      node1.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isQualifiedName();
      node0.getLineno();
      node0.isQuotedString();
      node2.isTrue();
      node2.isNE();
      node2.isNot();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", (-2884), 182);
      node0.toString();
      node0.getDirectives();
      Node node1 = new Node((-2884), node0, node0, node0, 25, (-3277));
      node1.useSourceInfoFromForTree(node0);
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = Node.newString("%h*oF9;");
      node0.setLineno(8202);
      Node node1 = new Node(2651);
      Node node2 = new Node(30, node1);
      node2.hasMoreThanOneChild();
      node0.wasEmptyNode();
      node2.isNew();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = Node.newNumber((-525.6), 36, 36);
      node0.wasEmptyNode();
      Node node1 = new Node(38, node0);
      node0.getIndexOfChild(node1);
      node1.isDec();
      node1.isDo();
      node0.addChildToFront(node1);
      node0.isUnscopedQualifiedName();
      node1.getJSType();
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newString("Jm#6kMJOo%[MB7", 116, 116);
      Node node1 = null;
      Node node2 = null;
      try {
        node2 = new Node(4095, (Node) null, node0, 1362, 55);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 87855104);
      node0.putIntProp(1630, 87855104);
      Node.newNumber(529.91177, 1170, 50);
      // Undeclared exception!
      try { 
        Node.newString((-1215), (String) null, 46, (-621));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = new Node(85);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      Node node1 = new Node(753, node0, node0, (-1326), 57);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node.newNumber(3199.082765265);
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newString("originalname", 2, 4095);
      node1.setString("+naTI");
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 87855104);
      Node node1 = Node.newString("com.google.common.collect.AbstractIndexedListIterator");
      node1.isEquivalentTo(node0, true, true, true);
      node1.setOptionalArg(false);
      node1.getProp(56);
      node0.isOptionalArg();
      node1.isFromExterns();
      Node node2 = new Node(12, node0);
      node2.isNE();
      node2.isStringKey();
      node1.getStaticSourceFile();
      node0.isComma();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString("originalname", 3251, 3251);
      Node node1 = new Node(3251, node0);
      node1.putIntProp(57, 50);
      Node node2 = new Node(12, node1, node1, 51, 153);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList.of((JSType) functionType0);
      Node node3 = null;
      try {
        node3 = new Node(2, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = new Node((-308), (-308), (-308));
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("ASSIGN_MOD", true);
      Node node1 = Node.newNumber((-1535.0059), 50, (-2654));
      Node node2 = Node.newString(56, "ASSIGN_MOD", 12, 49);
      node2.getDirectives();
      node2.isNew();
      node2.isVar();
      Node node3 = Node.newString((-1979), "TYPE_ERROR_FUNCTION_TYPE");
      node1.getIndexOfChild(node3);
      node1.isDec();
      node3.isVarArgs();
      node3.addChildToFront(node1);
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node.newNumber(2491.14931271, 327, 1362);
      Node node0 = null;
      try {
        node0 = new Node(196, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = Node.newString("iuwSx2[AcJi{");
      node0.isExprResult();
      Node node1 = node0.cloneTree();
      node1.setSourceEncodedPositionForTree(53);
      node0.isQuotedString();
      node0.isGetElem();
      node0.isAnd();
      InputId inputId0 = new InputId("iuwSx2[AcJi{");
      node1.putProp(32, inputId0);
      // Undeclared exception!
      try { 
        node1.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = new Node((-848), (-848), (-848));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.checkTreeEqualsImpl(node1);
      node0.isEquivalentToShallow(node0);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.isFor();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(43, node0);
      node1.hasMoreThanOneChild();
      node0.wasEmptyNode();
      node1.getIndexOfChild(node0);
      node0.isDec();
      node1.isDo();
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newString(87855567, "TqQ:>RSW", 36, (-848));
      Node node1 = new Node(48, node0);
      node1.copyInformationFromForTree(node0);
      node0.addSuppression("TqQ:>RSW");
      node1.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 87855567
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node1.isEquivalentTo(node0, false, false, false);
      node1.setOptionalArg(true);
      node1.getProp(53);
      node0.isOptionalArg();
      node0.isComma();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = Node.newString("originalname", 3251, 3251);
      Node node1 = new Node(3251, node0);
      node1.isEquivalentTo(node0, false, false, false);
      node1.setOptionalArg(false);
      node1.getProp(53);
      node0.isOptionalArg();
      node0.isFromExterns();
      Node node2 = new Node(42, node1);
      node1.isNE();
      node0.isStringKey();
      node0.getStaticSourceFile();
      node2.isComma();
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isDelProp();
      node0.getIntProp((-1073741824));
      node0.mayMutateArguments();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isContinue();
      node0.isWhile();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      simpleErrorReporter0.warning("Object#Element", "Object#Key", 898, 2808);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000338] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(43, node0);
      node1.hasMoreThanOneChild();
      node0.wasEmptyNode();
      node1.isNull();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node1.isEquivalentTo(node0, false, false, false);
      node1.setOptionalArg(true);
      node1.getProp(53);
      node0.isOptionalArg();
      node0.isTrue();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = new Node(153);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedHashSet<JSType> linkedHashSet0 = new LinkedHashSet<JSType>(39, 2876.6F);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) linkedHashSet0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.hasMoreThanOneChild();
      node0.wasEmptyNode();
      node0.isScript();
      node2.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = Node.newString((-736), "NUF#BC}<9]7G", 50, (-1));
      Node node1 = new Node(155, node0, node0);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 8202, 0);
      node0.isCast();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.addChildrenToFront(node1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = Node.newNumber(2491.14931271, (-769), (-769));
      node0.isBreak();
      node0.getJSDocInfo();
      node0.getBooleanProp((-769));
      node0.isSyntheticBlock();
      node0.toString();
      Node node1 = new Node(125, 2, (-779));
      node1.getInputId();
      node0.setInputId((InputId) null);
      node0.isEquivalentTo(node1, false, false, true);
      node1.isIn();
      node1.isParamList();
      node1.isDo();
      node0.isGetterDef();
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newNumber(2491.14931271, (-769), (-769));
      node0.isBreak();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getBooleanProp((-769));
      node0.getQualifiedName();
      node0.isThis();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.setLineno(46);
      Node node1 = new Node((-2050));
      Node node2 = new Node(15, node0);
      node0.hasMoreThanOneChild();
      node0.wasEmptyNode();
      node2.isNew();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(799);
      int int0 = Node.POST_FLAG;
      Node node1 = node0.cloneNode();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.isOnlyModifiesArgumentsCall();
      linkedHashSet0.add(" is not a number node");
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.setLineno(46);
      node0.putIntProp(1336, (-4351));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem", 52, 53);
      node0.addChildToFront(node1);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags5.setThrows();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags6.setReturnsTainted();
      node1.isQualifiedName();
      node1.mayMutateArguments();
      node0.getInputId();
      node1.setInputId((InputId) null);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(0, nodeArray0);
      node2.isBlock();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.checkTreeEqualsImpl(node2);
      node1.detachChildren();
      node0.isDefaultCase();
      node2.getStaticSourceFile();
      node2.addChildToBack(node1);
      node1.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isQualifiedName();
      node0.getLineno();
      node0.isQuotedString();
      node2.isTrue();
      Node node3 = Node.newNumber(1.0);
      node3.isNE();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)71;
      byteArray0[4] = (byte) (-98);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(183);
      node0.getChangeTime();
      node0.children();
      node0.isString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.setOptionalArg(true);
      String string0 = " [";
      ObjectType objectType0 = null;
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "originalname");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setVarArgs(true);
      node0.isDec();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-93);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isInc();
      Node node1 = new Node(37, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = Node.newNumber((-1.0), 0, 0);
      Node node3 = node0.useSourceInfoIfMissingFrom(node2);
      node0.checkTreeEqualsImpl(node2);
      node0.detachChildren();
      node2.isDefaultCase();
      node0.getStaticSourceFile();
      node0.addChildToBack(node2);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node2.isQualifiedName();
      node2.getLineno();
      node2.isQuotedString();
      node0.isTrue();
      node3.isNE();
      node0.isStringKey();
      Node node4 = node3.getLastChild();
      node4.isWhile();
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = Node.newString((-219), "Gq  _OuMl<[0q)", (-219), 2651);
      Node node1 = new Node(2651, node0, node0);
      node1.removeChild(node0);
      Node node2 = new Node((-219), node1, 3947, 57);
      Node node3 = new Node((-219), node2);
      node3.getIntProp(878);
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isDec();
      node0.isLocalResultCall();
      node0.isInc();
      node0.removeProp(135);
      Node node1 = Node.newNumber((double) 54, 54, 135);
      node1.addChildrenToBack(node0);
      node1.isDo();
      Node node2 = new Node(49, node1, (-2191), 135);
      Node node3 = new Node(54, (-1151), 57);
      Node.newNumber((-595.9171294729));
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node3;
      nodeArray0[3] = node1;
      nodeArray0[4] = node2;
      nodeArray0[5] = node2;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      nodeArray0[8] = node2;
      Node node4 = null;
      try {
        node4 = new Node(1250, nodeArray0, 46, 53);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = Node.newString("com.google.jvascript.rhino.Node$IntPropListItem");
      node0.isDec();
      node0.isDec();
      node0.isInc();
      node0.removeProp(135);
      Node node1 = Node.newNumber((double) 54, 54, 135);
      node1.addChildrenToBack(node0);
      node0.checkTreeEqualsImpl(node1);
      node1.detachChildren();
      node0.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(39);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = Node.newString("iuwSx2[AcJi{");
      node0.isSyntheticBlock();
      Node node1 = node0.cloneTree();
      node1.setSourceEncodedPositionForTree(53);
      node0.isQuotedString();
      node0.isGetElem();
      node0.isAnd();
      InputId inputId0 = new InputId("iuwSx2[AcJi{");
      inputId0.toString();
      node1.putProp(32, inputId0);
      node1.setQuotedString();
      // Undeclared exception!
      try { 
        node1.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = new Node(102, (-2668), 102);
      Node node1 = new Node(36, node0);
      Node node2 = node0.copyInformationFrom(node1);
      node0.isDebugger();
      int int0 = Node.SLASH_V;
      node0.isEquivalentTo(node2, false, false, false);
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(103);
      node0.hasMoreThanOneChild();
      node0.isEquivalentTo(node0);
      node0.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[6];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      HashSet<TemplateType> hashSet0 = new HashSet<TemplateType>();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Collection<? extends TemplateType>) hashSet0);
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createInterfaceType("Object#Element", node0, immutableList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(103);
      node0.hasMoreThanOneChild();
      node0.isEquivalentTo(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.checkTreeEqualsImpl(node1);
      String string0 = "6ODIV/(~47Qs(o:DUtC";
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("6ODIV/(~47Qs(o:DUtC", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newString(65535, "", 1022, 1022);
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = Node.newNumber(2491.14931271, (-769), (-769));
      node0.isBreak();
      node0.getJSDocInfo();
      node0.getBooleanProp((-769));
      node0.getQualifiedName();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setVarArgs(true);
      node0.isDec();
      node0.isInc();
      Node node1 = Node.newNumber((-1.0), 0, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.checkTreeEqualsImpl(node1);
      node0.detachChildren();
      node1.isDefaultCase();
      node0.getStaticSourceFile();
      node0.addChildToBack(node1);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node1.isQualifiedName();
      node1.getLineno();
      node1.isQuotedString();
      node1.getInputId();
      node1.isLabelName();
      node2.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = new Node(103);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Iterator<JSType> iterator0 = (Iterator<JSType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      ImmutableList<JSType> immutableList1 = immutableList0.reverse();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      node0.isEquivalentTo(node1, false, false, false);
      node0.setOptionalArg(true);
      node1.getProp(39);
      node0.isOptionalArg();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getJsDocBuilderForNode();
      node0.isDec();
      node0.isLocalResultCall();
      node0.isInc();
      Node node1 = Node.newNumber((-4062.3435895186735), (-1525), 50);
      node1.checkTreeEqualsImpl(node0);
      node0.detachChildren();
      node1.setDouble(50);
      node1.isTrue();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = new Node(103);
      node0.setWasEmptyNode(true);
      Node node1 = new Node(43, node0);
      node1.hasMoreThanOneChild();
      node0.wasEmptyNode();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = Node.newString(87855567, "originalname", (-848), 105);
      Node node1 = new Node(105, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.addSuppression("com.google.javascript.rhino.Node");
      node1.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 87855567
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "S4_!tl3,Z=R~");
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      node0.getDirectives();
      Node node1 = new Node((-2884), node0, node0, node0, 0, (-3277));
      Node node2 = node1.useSourceInfoFromForTree(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("q7pXZy", false);
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.srcref(node1);
      node2.getIntProp((-441));
      StaticSourceFile staticSourceFile0 = node0.getStaticSourceFile();
      node2.setStaticSourceFile(staticSourceFile0);
      node1.getStaticSourceFile();
      node3.getNext();
      node2.addChildToBack(node1);
      node1.isSetterDef();
      node1.setSourceEncodedPositionForTree(1127);
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = new Node((-848), (-848), (-848));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = new Node(57, node0, node0, node0, 125, 15);
      node0.isEquivalentToShallow(node2);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.isFor();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(103);
      node0.hasMoreThanOneChild();
      node0.wasEmptyNode();
      node0.isDo();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      boolean boolean0 = true;
      node0.isEquivalentTo(node0, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.setOptionalArg(false);
      node0.getProp(53);
      int int0 = 1979;
      Node node1 = new Node(1979, node0, node0);
      node1.setIsSyntheticBlock(false);
      node0.isOptionalArg();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = Node.newString(0, "new child has existing parent", 0, 3390);
      node0.isNumber();
      node0.removeFirstChild();
      node0.getProp(0);
      Node node1 = new Node(2, node0, node0);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 1083);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      node_NodeMismatch0.equals("");
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node0.isDec();
      node0.isLocalResultCall();
      node0.isInc();
      Node node2 = Node.newNumber((double) 32, 54, 48);
      node0.checkTreeEqualsImpl(node2);
      Node node3 = new Node(4, node2, node1);
      node3.detachChildren();
      try { 
        node3.setDouble(4095);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // RETURN is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.setLineno(46);
      node0.putIntProp(1336, (-4351));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node node1 = Node.newString("t;3mP", 48, 128);
      node1.addChildToFront(node0);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node2 = new Node(103);
      node2.isQualifiedName();
      node1.mayMutateArguments();
      node2.isHook();
      node2.isNoSideEffectsCall();
      node1.isFalse();
      node2.isAssign();
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      node0.useSourceInfoFromForTree(node1);
      node1.getProp(37);
      Node.newString((-750), "originalname", 8, 118);
      Node node2 = new Node(8);
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 8
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = new Node(85);
      boolean boolean0 = true;
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("25XeO", true);
      node0.addChildrenToFront(node0);
      Node node1 = Node.newString("25XeO");
      node0.srcref(node1);
      // Undeclared exception!
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node0.isDec();
      node0.isLocalResultCall();
      node0.isInc();
      node0.removeProp(135);
      Node node1 = Node.newNumber((double) 54, 54, 135);
      node1.addChildrenToBack(node0);
      node0.checkTreeEqualsImpl(node1);
      node1.detachChildren();
      node0.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(46);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(3474);
      node0.isEmpty();
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 87855104);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      node1.getProp(49);
      node1.isDo();
      Node node2 = null;
      try {
        node2 = new Node(4, node0, 54, 123);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = Node.newString(3251, "6ODIV/(~47Qs(o:DUtC");
      Node node1 = new Node(31, node0, node0, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Class<StringType> class0 = StringType.class;
      ServiceLoader<StringType> serviceLoader0 = ServiceLoader.loadInstalled(class0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) serviceLoader0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node.newString((-807), "");
      Node.newString("", 4095, 1);
      boolean boolean0 = false;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[2];
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, (List<JSType>) immutableList0);
      JSType jSType1 = modificationVisitor0.caseFunctionType(functionType0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of((JSType) functionType0, jSType1, (JSType) functionType0, jSType0, jSType0, jSType1, (JSType) functionType0, (JSType) functionType0, jSType0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = jSTypeRegistry2.createParametersWithVarArgs((List<JSType>) immutableList1);
      node0.toString();
      Node node2 = jSTypeRegistry1.createParameters((List<JSType>) immutableList0);
      Node node3 = new Node(0, node2, node1);
      Node node4 = new Node(39, node3, node3, node0);
      node1.addChildrenToBack(node4);
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      node0.getDirectives();
      Node node1 = new Node((-2862), node0, node0, node0, 0, (-3277));
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node.newString("q7pXZy");
      Node node3 = Node.newNumber((double) 48, 3390, 1246);
      node0.getQualifiedName();
      node1.isContinue();
      node1.wasEmptyNode();
      node1.hasMoreThanOneChild();
      node1.isDec();
      Node node4 = node2.useSourceInfoFrom(node3);
      node1.isNull();
      node4.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = Node.newString(0, "new child has existing parent", 0, 3390);
      node0.isNumber();
      node0.removeFirstChild();
      node0.getProp(0);
      Node node1 = new Node(2, node0, node0);
      node0.isOptionalArg();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setVarArgs(true);
      node0.isDec();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-93);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isInc();
      Node node1 = Node.newNumber((-1.0), 0, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.checkTreeEqualsImpl(node1);
      node0.detachChildren();
      node1.isDefaultCase();
      node0.getStaticSourceFile();
      node0.addChildToBack(node1);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node1.isQualifiedName();
      node1.getLineno();
      node1.isQuotedString();
      node0.isTrue();
      node2.isNE();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      node0.getDirectives();
      Node node1 = new Node((-2884), node0, node0, node0, 0, (-3277));
      Node node2 = node1.useSourceInfoFromForTree(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(": ", false);
      node2.putProp(782, simpleSourceFile0);
      Node node3 = Node.newNumber((double) 48, 3390, 1246);
      node1.isOnlyModifiesArgumentsCall();
      node1.hasOneChild();
      // Undeclared exception!
      try { 
        node3.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = Node.newString("originalname");
      node0.getAncestor(87855567);
      Node node1 = Node.newString(31, "originalname", 38, 57);
      Node node2 = new Node((-1826), node1, node1, node1, 40, 111);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node2, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(83);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(152);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 152
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setVarArgs(true);
      node0.getJsDocBuilderForNode();
      node0.isDec();
      node0.isLocalResultCall();
      node0.isInc();
      Node node1 = Node.newNumber((-1.0), 42, 0);
      node0.checkTreeEqualsImpl(node1);
      node0.detachChildren();
      node0.getStaticSourceFile();
      node0.setDouble(1.0);
      node0.useSourceInfoFrom(node1);
      node0.isTrue();
      node1.isNE();
      node1.getInputId();
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 799, 32);
      node0.isDec();
      node0.isLocalResultCall();
      node0.isInc();
      Node node1 = Node.newNumber(1.0, (-1277), 4);
      node0.addChildrenToBack(node1);
      node1.checkTreeEqualsImpl(node0);
      node0.detachChildren();
      node1.setDouble(0.0);
      node1.isTrue();
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newString("\u0002T+DM");
      node0.isDec();
      node0.isWhile();
      node0.isRegExp();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newNumber((double) 36);
      node1.getQualifiedName();
      node0.isThis();
      node0.isNot();
      node0.isBreak();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      node0.getDirectives();
      Node node1 = new Node((-2884), node0, node0, node0, 0, (-3277));
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node.newString("q7pXZy");
      Node node3 = Node.newNumber((double) 48, 3390, 1246);
      node0.getQualifiedName();
      node1.isContinue();
      node1.hasMoreThanOneChild();
      node1.isDec();
      node3.isScript();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(103);
      node0.hasMoreThanOneChild();
      node0.wasEmptyNode();
      node0.isDo();
      node0.setLength((-822));
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = Node.newString(118, "htXtNm?z+s", 118, 118);
      JSTypeNative jSTypeNative0 = JSTypeNative.SYNTAX_ERROR_TYPE;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[1];
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      node0.getJsDocBuilderForNode();
      node0.isSyntheticBlock();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isEquivalentTo(node1, false, true, true);
      node0.isIn();
      EnumType enumType0 = jSTypeRegistry0.createEnumType(": ", node0, jSType0);
      Stack<JSType> stack0 = new Stack<JSType>();
      jSTypeRegistry1.createFunctionTypeWithVarArgs((ObjectType) enumType0, (JSType) enumType0, (List<JSType>) stack0);
      node1.isParamList();
      Node node2 = new Node(4095, node1);
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 87855104);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType0);
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node.newNumber(3924.6454185941);
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = Node.newString(1820, "new child has existing parent", 1820, 1820);
      node0.isNumber();
      node0.getProp(0);
      Node node1 = Node.newString("new child has existing parent");
      node0.isOptionalArg();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = new Node(85);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("25XeO", true);
      Node node1 = new Node(4095, node0, node0, 693, 32);
      node0.addChildrenToFront(node1);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // COMMA is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = new Node(132);
      node0.getChangeTime();
      Node node1 = Node.newNumber((double) 1, 39, 56);
      Node.newString(30, "}s`p/", 753, 100);
      node0.getDirectives();
      node1.getProp(47);
      node0.isDo();
      Node node2 = null;
      try {
        node2 = new Node(1, (Node) null, 1834, 41);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = new Node(85);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      Node node1 = Node.newNumber((-1535.0059), 50, (-2654));
      Node node2 = Node.newString(56, "", 12, 49);
      node2.getDirectives();
      node2.isNew();
      node2.isVar();
      Node node3 = Node.newString((-1979), "TYPE_ERROR_FUNCTION_TYPE");
      node1.getIndexOfChild(node3);
      node1.isDec();
      node0.isDo();
      node3.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = new Node(85);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      Node.newNumber((-1535.0059), 50, (-2654));
      Node node1 = Node.newString(56, "", 12, 49);
      Node node2 = Node.newNumber((double) 53, 4095, 9);
      node1.checkTreeEqualsImpl(node2);
      node2.detachChildren();
      try { 
        node0.setDouble(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // COMMA is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = Node.newString(0, "new child has existing parent", 0, 3390);
      node0.isNumber();
      Node node1 = Node.newNumber(1.0, 55, 4);
      Node node2 = Node.newString(0, "new child has existing parent", 15, 30);
      node1.getDirectives();
      node2.getProp(306654252);
      node0.isDo();
      Node node3 = new Node((-1275), node2, 147, 12);
      Node node4 = null;
      try {
        node4 = new Node(4095, node2, node0, node3, 12, 54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node node0 = Node.newString("Jm#6kMJOo%[MB7", 116, 116);
      node0.putProp((-1181), "Jm#6kMJOo%[MB7");
      boolean boolean0 = false;
      node0.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id -1181
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = Node.newString((-1529), "(N|)]W44M");
      JSTypeNative jSTypeNative0 = JSTypeNative.SYNTAX_ERROR_TYPE;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[2];
      jSTypeNativeArray0[0] = jSTypeNative0;
      jSTypeNativeArray0[1] = jSTypeNative0;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, (List<JSType>) immutableList0);
      JSType jSType1 = modificationVisitor0.caseFunctionType(functionType0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of(jSType0, jSType0, jSType1, jSType0, (JSType) functionType0, (JSType) functionType0, jSType0, (JSType) functionType0, jSType0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) immutableList1);
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1529
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 8202, 0);
      node0.isCast();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("@eG.n~IZ{'qIMaA", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setVarArgs(true);
      node0.getJsDocBuilderForNode();
      node0.isDec();
      node0.isLocalResultCall();
      node0.isInc();
      Node node1 = Node.newNumber((-1.0), 42, 0);
      node0.checkTreeEqualsImpl(node1);
      node0.detachChildren();
      node0.setDouble(1.0);
      node0.isTrue();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("%%^4rGw)DX5PpX^|\"A");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isFunction();
      Node node1 = null;
      try {
        node1 = new Node(105, node0, node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(32, nodeArray0, 799, 32);
      node0.getSourceOffset();
      Node node1 = node0.cloneNode();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add(" is not a number node");
      linkedHashSet0.add("com.google.javascript.rhino.Node$IntPropListItem");
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = new Node(103);
      node0.hasMoreThanOneChild();
      node0.wasEmptyNode();
      Node node1 = new Node((-1), node0, node0, node0, node0, (-1305), 54);
      node0.isEquivalentToTyped(node1);
      node0.isDec();
      node0.isScript();
      Node.extractCharno(112);
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(52, node0, 8, 4);
      node1.putIntProp(53, 1);
      Node node2 = null;
      try {
        node2 = new Node(46, node1, node0, 36, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = Node.newString((-807), "");
      Node node1 = Node.newString("", 4095, 1);
      Node node2 = new Node(43, node0);
      node0.useSourceInfoFromForTree(node1);
      node2.getProp(42);
      Node.newString(1, "!]+1?[", 44, 29);
      Node node3 = node1.srcref(node2);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -807
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      node0.getDirectives();
      Node node1 = new Node((-2884), node0, node0, node0, 0, (-3277));
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node.newNumber((double) 48, 3390, 1246);
      node0.isDo();
      Node node3 = new Node(49, node2, 821, 492);
      node3.mayMutateArguments();
      try { 
        node3.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THROW 821 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      node0.getDirectives();
      Node node1 = new Node((-2884), node0, node0, node0, 0, (-3277));
      Node node2 = node1.useSourceInfoFromForTree(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(": ", false);
      node2.putProp(782, simpleSourceFile0);
      Node.newNumber((double) 48, 3390, 1246);
      node1.isOnlyModifiesArgumentsCall();
      node1.hasOneChild();
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = new Node(103);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node node1 = new Node(40, node0, node0, 1, 52);
      Node node2 = new Node(48);
      // Undeclared exception!
      try { 
        node2.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = Node.newNumber((-5344.37));
      Node node1 = Node.newNumber((double) 47, 0, 0);
      node0.putIntProp(1336, (-4351));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      node0.addChildToFront(node1);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags5.setReturnsTainted();
      node0.isQualifiedName();
      node1.mayMutateArguments();
      node0.isHook();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = Node.newNumber((-525.6), 36, 36);
      Node node1 = Node.newNumber(424.0);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = new Node(85);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      Node node1 = Node.newNumber((-1535.0059), 50, (-2654));
      Node node2 = Node.newString(56, "", 12, 49);
      node2.getDirectives();
      node1.getProp(4095);
      node0.isDo();
      Node node3 = new Node(1834, node0, 38, 761);
      Node node4 = new Node((-1111), 43, 42);
      node3.addChildToFront(node4);
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString((-807), "");
      Node node1 = new Node(2, node0, 51, 46);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -807
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1083, 87855104, 87855104);
      node0.putIntProp(1630, 87855104);
      Node node1 = new Node((-1903), node0, node0, 36, 29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.detachChildren();
      // Undeclared exception!
      try { 
        node1.setDouble(1630);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1903
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node0.copyInformationFromForTree(node1);
      node0.isEquivalentTo(node1);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(47);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3251
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = Node.newString("Object#Element", 85, 40);
      Node node1 = Node.newString("(N|)]W44M", 37, 57);
      node1.addSuppression("(N|)]W44M");
      node0.setOptionalArg(false);
      node1.toStringTree();
      node0.isEmpty();
      node1.isInstanceOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType jSType0 = null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("(N|)]W44M", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setVarArgs(true);
      node0.isDec();
      node0.isInc();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getSourceOffset();
      Node node1 = Node.newNumber((-1.0), 46, 0);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.checkTreeEqualsImpl(node1);
      node0.detachChildren();
      node1.isDefaultCase();
      node0.getStaticSourceFile();
      node0.addChildToBack(node1);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node1.isQualifiedName();
      node1.getLineno();
      node1.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = Node.newString(0, "new child has existing parent", 0, 3390);
      node0.isNumber();
      node0.getProp(0);
      // Undeclared exception!
      try { 
        node0.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-997), 39);
      node0.putIntProp(0, 2388);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(59);
      node_SideEffectFlags2.setReturnsTainted();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node1.getProp(37);
      Node node3 = Node.newString((-750), "originalname", 8, 118);
      Node node4 = node1.srcref(node3);
      node4.checkTreeEquals(node0);
      node2.isNE();
      node2.getType();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node5 = node2.setJSDocInfo(jSDocInfo0);
      node5.getInputId();
      node2.setInputId((InputId) null);
      node4.isBlock();
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      node0.getDirectives();
      Node node1 = new Node((-2884), node0, node0, node0, 0, (-3277));
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = Node.newNumber((double) 48, 3390, 1246);
      node0.isDo();
      Node node4 = new Node(49, node2, 821, 492);
      node3.addChildToFront(node4);
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      int int0 = Node.IS_CONSTANT_NAME;
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.FunctionType$PropAccess");
      Node node1 = new Node(0, 53, 1);
      Node node2 = new Node(55, node0, node0, node0, node1);
      node2.isQualifiedName();
      Node node3 = Node.newString("9d{`8\"cDL--hI#&0@DM", 31, 0);
      Node node4 = node1.copyInformationFrom(node3);
      node3.isFromExterns();
      node4.getIntProp(0);
      Node node5 = Node.newNumber((double) 46);
      Node.newString(16, "", 1889, 122);
      node5.siblings();
      node5.siblings();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      // Undeclared exception!
      try { 
        simpleSourceFile0.getLineOffset((-374));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number -374
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node node0 = Node.newNumber((-5344.37));
      Node node1 = Node.newNumber((double) 47, 0, 0);
      node0.putIntProp(1336, (-4351));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.addChildToFront(node1);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags4.setReturnsTainted();
      node0.isQualifiedName();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      int int0 = 8202;
      Node[] nodeArray0 = new Node[19];
      Node node0 = Node.newNumber((double) 8202, 113, 8202);
      nodeArray0[0] = node0;
      Node node1 = null;
      try {
        node1 = new Node(36, nodeArray0, 1, 2201);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setVarArgs(true);
      node0.isDec();
      node0.isInc();
      Node node1 = Node.newNumber((-1.0), 0, 0);
      node0.checkTreeEqualsImpl(node1);
      node0.detachChildren();
      node0.isEmpty();
      node0.isInstanceOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.getInputId();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("6ODIV/(~47Qs(o:DUtC", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node node0 = new Node(103);
      node0.hasMoreThanOneChild();
      node0.wasEmptyNode();
      node0.isDec();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node node0 = new Node(2);
      Node node1 = new Node(103, node0, node0, node0, 48, 54);
      Node node2 = Node.newNumber((double) 42, 46, 57);
      node0.useSourceInfoFromForTree(node2);
      Node node3 = Node.newNumber((double) 57, 57, 32);
      node2.isOnlyModifiesArgumentsCall();
      node3.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = new Node(103);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = null;
      try {
        node1 = new Node(50, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = new Node((-3), (-3), (-3));
      node0.getJsDocBuilderForNode();
      node0.isParamList();
      // Undeclared exception!
      try { 
        node0.setString("0pmQ4;JY8Bo");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node node0 = Node.newString(0, "new child has existing parent", 0, 3390);
      Node node1 = Node.newNumber((double) 15, 5, 1804);
      node1.getDirectives();
      node1.getProp(15);
      Object object0 = new Object();
      node0.putProp((-361), object0);
      node1.getAncestor(1213);
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = new Node(130, 130, 130);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("<", true);
      node0.isNumber();
      node0.getProp(1661);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node1 = null;
      try {
        node1 = new Node(118, node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newNumber((double) 1, 46, 50);
      node1.getStaticSourceFile();
      node1.mayMutateGlobalStateOrThrow();
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = new Node(130);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("<", true);
      Node node1 = Node.newNumber(0.0, 53, 39);
      node0.getDirectives();
      node1.getProp(130);
      Node node2 = Node.newString((-1952), "<", 4095, 1213);
      Node node3 = node0.srcref(node1);
      node0.checkTreeEquals(node1);
      node2.isNE();
      node3.getType();
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = Node.newNumber((double) 87855104, 3109, 87855104);
      node0.putIntProp(3109, 5011);
      Node node1 = new Node(54, node0, node0, 2, 5);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1, true);
      JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;
      jSTypeRegistry1.getNativeFunctionType(jSTypeNative0);
      Node node2 = null;
      try {
        node2 = new Node(212, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node1.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3251
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      try { 
        node0.setDouble(51);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // VAR originalname is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 8202, 113, 8202);
      nodeArray0[0] = node0;
      Node node1 = new Node(36, nodeArray0, 1, 52);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.isEquivalentTo(node0);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(110);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node2.setOptionalArg(false);
      node2.addChildrenToBack(node1);
      node0.getParent();
      node1.detachChildren();
      node2.getQualifiedName();
      Node.newNumber((double) 47);
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      Node node0 = Node.newString("(N|)]W44M", 2319, 2319);
      Node node1 = new Node(85, node0, node0, node0, node0);
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = Node.newString("Jm#6kMJOo%[MB7", 116, 116);
      node0.putProp((-1181), "Jm#6kMJOo%[MB7");
      node0.isFromExterns();
      Node node1 = Node.newString("a");
      Node node2 = new Node(154, node0, node1, node0, 105, 52);
      boolean boolean0 = false;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(465);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = Node.newNumber((-5344.37));
      Node node1 = Node.newNumber((double) 47, 0, 0);
      node0.putIntProp(1336, (-4351));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      node1.isEquivalentTo(node0);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newNumber((-335.73360475), 33595392, 0);
      node1.putIntProp(53, 1);
      Node node2 = new Node(46, node1, node0, 36, 57);
      node2.setIsSyntheticBlock(true);
      node1.isOnlyModifiesArgumentsCall();
      node1.setDirectives((Set<String>) null);
      node2.isEmpty();
      node1.getJSType();
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node node0 = new Node(130);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("<", true);
      Node node1 = Node.newNumber(0.0, 53, 39);
      node0.getDirectives();
      node1.getProp(130);
      node0.putProp(49, (Object) null);
      node0.getAncestor(51);
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3039));
      String string0 = "no next sibling.";
      int int0 = 696;
      Node node0 = new Node(696, 4263, 11);
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 696
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node node0 = Node.newString("com.goog+e.javascript.rhino.Node$ObjecuPropListItem");
      node0.setLineno(46);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = new Node(4095);
      node1.getInputId();
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 8202, 113, 8202);
      nodeArray0[0] = node0;
      Node node1 = new Node(36, nodeArray0, 1, 2201);
      Node node2 = null;
      try {
        node2 = new Node(8202, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = Node.newString("Object#Element", 116, 16777216);
      Node node1 = Node.newString("Object#Element", 46, 4);
      node1.isEquivalentTo(node0);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(100);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node node0 = Node.newNumber((-5344.37));
      Node node1 = Node.newNumber((double) 47, 0, 0);
      node0.putIntProp(1336, (-4351));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      node0.addChildToFront(node1);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      node1.cloneTree();
      Node.mergeLineCharNo(32, (-503));
      node0.setSourceFileForTesting("");
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.addSuppression("nvL2?*o,>v");
      node2.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3251
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      node0.getDirectives();
      Node node1 = new Node((-2884), node0, node0, node0, 0, (-3277));
      Node node2 = null;
      try {
        node2 = new Node(50, node1, node0, node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      Node node0 = Node.newString(0, "new child has existing parent", 0, 3390);
      node0.isNumber();
      node0.getProp(0);
      Node node1 = new Node(2, node0, node0);
      node0.isOptionalArg();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node.newNumber((double) 0);
      Node node0 = Node.newNumber((double) 1, 46, 50);
      node0.getStaticSourceFile();
      node0.mayMutateGlobalStateOrThrow();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      node0.isDebugger();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node node0 = Node.newString(118, "originalname");
      Node node1 = new Node(118, node0);
      node0.useSourceInfoFromForTree(node1);
      node0.isParamList();
      node1.isQualifiedName();
      node0.isInstanceOf();
      node1.isNoSideEffectsCall();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node0.useSourceInfoFromForTree(node1);
      node0.isParamList();
      node1.isQualifiedName();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = Node.newString(1729, "Object#Element", (-233), (-1206));
      Node node1 = new Node(1729, node0, node0, node0, node0, 4, 4);
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      Node node0 = Node.newString(0, "new child has existing parent", 0, 3390);
      node0.isNumber();
      node0.getProp(0);
      node0.isVarArgs();
      node0.isNull();
      Node node1 = node0.cloneTree();
      Node.mergeLineCharNo(53, 55);
      node1.setSourceFileForTesting("new child has existing parent");
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = new Node(130);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("<", true);
      Node node1 = Node.newNumber(0.0, 53, 39);
      node1.getProp(130);
      node0.putProp(49, (Object) null);
      node1.setWasEmptyNode(true);
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node0.isParamList();
      // Undeclared exception!
      try { 
        node1.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3251
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node0.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      node1.isSyntheticBlock();
      node0.hasMoreThanOneChild();
      node1.isDec();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node node0 = new Node(3251);
      Node node1 = new Node(3251, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getEnumParameterType();
      jSDocInfo0.addImplementedInterface((JSTypeExpression) null);
      node0.putProp(1, jSDocInfo0);
      node0.isParamList();
      node1.isQualifiedName();
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setVarArgs(true);
      node0.getJsDocBuilderForNode();
      node0.isDec();
      node0.isLocalResultCall();
      node0.isInc();
      Node node1 = Node.newNumber((-1.0), 0, 0);
      node0.checkTreeEqualsImpl(node1);
      node0.detachChildren();
      node0.isTrue();
      Node node2 = Node.newString(40, "enum{", 1631, 40);
      Node node3 = node2.srcref(node0);
      node3.checkTreeEquals(node1);
      node1.isNE();
      node2.getType();
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node node0 = new Node(0, 0, 87855567);
      node0.isGetElem();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node0.isSyntheticBlock();
      node0.hasMoreThanOneChild();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType[] templateTypeArray0 = new TemplateType[0];
      ImmutableList.copyOf(templateTypeArray0);
      JSType jSType0 = null;
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setVarArgs(true);
      node0.isDec();
      node0.isInc();
      Node node1 = Node.newNumber((-1.0), 0, 0);
      node0.checkTreeEqualsImpl(node1);
      node0.detachChildren();
      node1.isDefaultCase();
      node0.getStaticSourceFile();
      node0.addChildToBack(node1);
      node0.isSetterDef();
      node0.setSourceEncodedPositionForTree(1301);
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      node0.getDirectives();
      Node node1 = new Node((-2884), node0, node0, node0, 0, (-3277));
      node1.useSourceInfoFromForTree(node0);
      Node.newNumber((double) 48, 3390, 1246);
      node1.isOnlyModifiesArgumentsCall();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setVarArgs(true);
      node0.getJsDocBuilderForNode();
      node0.isDec();
      node0.isLocalResultCall();
      node0.isInc();
      Node node1 = Node.newNumber((-1.0), 42, 0);
      node0.checkTreeEqualsImpl(node1);
      node0.detachChildren();
      node0.setDouble(1.0);
      node0.isTrue();
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      int int0 = (-2015);
      // Undeclared exception!
      try { 
        node0.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      Node node0 = Node.newNumber((-5344.37));
      Node node1 = Node.newNumber((double) 47, 0, 0);
      node0.putIntProp(1336, (-4351));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      node0.addChildToFront(node1);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags5.setMutatesArguments();
      node1.isSyntheticBlock();
      node0.hasMoreThanOneChild();
      node1.isDec();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = new Node(130);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("<", true);
      Node node1 = Node.newNumber(0.0, 53, 39);
      node1.getProp(130);
      node0.putProp(49, (Object) null);
      node0.getAncestor(51);
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node(3251, node0);
      node0.isParamList();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node(1083, (Node) null, (Node) null, (Node) null, 154, 26);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setVarArgs(true);
      node0.getJsDocBuilderForNode();
      node0.isDec();
      node0.isLocalResultCall();
      node0.isInc();
      Node node1 = Node.newNumber((-1.0), 0, 0);
      node0.checkTreeEqualsImpl(node1);
      node0.detachChildren();
      node0.isTrue();
      Node node2 = Node.newString(40, "enum{", 1631, 40);
      node2.srcref(node0);
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      Node node0 = Node.newString(116, "m%]N[6V+icNz<Cy?", 2382, 44);
      node0.wasEmptyNode();
      node0.getProp(4);
      node0.isNull();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node node0 = Node.newNumber((-1374.5691173245864), 1706, 765);
      node0.isOnlyModifiesArgumentsCall();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$ObjectPropListItem");
      node0.setLineno(46);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node1.setOptionalArg(false);
      node0.addChildrenToBack(node1);
      Node node2 = node1.getParent();
      node2.detachChildren();
      node2.getQualifiedName();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      node_SideEffectFlags0.clearAllFlags();
      Node.newNumber((double) 38);
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node node0 = new Node(132);
      node0.getChangeTime();
      node0.isVarArgs();
      try { 
        node0.setString("var_args_name");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SCRIPT is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(63, (Node) null, (Node) null, (Node) null, (Node) null, 986, 986);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[7];
      JSTypeNative jSTypeNative0 = JSTypeNative.TYPE_ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.ARRAY_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.SYNTAX_ERROR_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.TOP_LEVEL_PROTOTYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSTypeNative jSTypeNative4 = JSTypeNative.NULL_VOID;
      jSTypeNativeArray0[4] = jSTypeNative4;
      JSTypeNative jSTypeNative5 = JSTypeNative.FUNCTION_INSTANCE_TYPE;
      jSTypeNativeArray0[5] = jSTypeNative5;
      JSTypeNative jSTypeNative6 = JSTypeNative.URI_ERROR_TYPE;
      jSTypeNativeArray0[6] = jSTypeNative6;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.toString();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.addChildrenToBack(node1);
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 8202, 0);
      node0.isVarArgs();
      try { 
        node0.setString("@eG.n~IZ{'qIMaA");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 8202 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      String string0 = "";
      Node.newString((-807), "");
      Node node0 = new Node(52, 696, 504);
      boolean boolean0 = true;
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INSTANCEOF 696 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      Node node0 = Node.newString(0, "new child has existing parent", 0, 3390);
      node0.wasEmptyNode();
      node0.getProp(0);
      node0.isNull();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      int int0 = 738;
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(1756, (Node) null, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      Node node0 = Node.newString("iuwSx2[AcJi{");
      node0.isSyntheticBlock();
      Node node1 = node0.cloneTree();
      node1.setSourceEncodedPositionForTree(53);
      node0.isQuotedString();
      node0.isGetElem();
      node0.isAnd();
      Node node2 = null;
      InputId inputId0 = new InputId("iuwSx2[AcJi{");
      node1.putProp(32, inputId0);
      // Undeclared exception!
      try { 
        node1.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      int int0 = (-3056);
      Node[] nodeArray0 = new Node[9];
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      nodeArray0[0] = node0;
      int int1 = (-2420);
      JSType[] jSTypeArray0 = new JSType[7];
      jSTypeArray0[0] = jSType0;
      ImmutableList<TemplateType> immutableList1 = ImmutableList.of();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createInterfaceType("Unknown class name", node0, immutableList1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      int int0 = 3251;
      String string0 = "originalname";
      Node node0 = Node.newString(3251, "originalname");
      Node node1 = new Node((-1633));
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test680()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      Node node0 = new Node(48, 48, 2305);
      node0.putIntProp(2305, 48);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test681()  throws Throwable  {
      int int0 = 0;
      // Undeclared exception!
      try { 
        Node.newString((String) null, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test682()  throws Throwable  {
      Node node0 = Node.newString("", 63, 16777216);
      Node node1 = Node.newString("6ODIV/(~47Qs(o:DUtC", 0, 8388608);
      node1.isEquivalentTo(node0);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(2011);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test683()  throws Throwable  {
      Node node0 = Node.newNumber((-5344.37));
      Node node1 = Node.newNumber((double) 47, 0, 0);
      node0.putIntProp(1336, (-4351));
      node0.useSourceInfoFromForTree(node1);
      node1.setIsSyntheticBlock(true);
      node0.setDirectives((Set<String>) null);
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test684()  throws Throwable  {
      Node node0 = new Node((-425), (-425), (-665));
      Node node1 = new Node(12, node0, node0, 42, (-3471));
      node1.isQuotedString();
      node1.setType(36);
      Node node2 = null;
      try {
        node2 = new Node((-425), node0, node1, node0, node1, 46, 52);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test685()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(53);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test686()  throws Throwable  {
      Node node0 = Node.newNumber((-1374.5691173245864), 1690, 765);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test687()  throws Throwable  {
      Node node0 = new Node(130);
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test688()  throws Throwable  {
      Node node0 = new Node(0, 0, 87855567);
      node0.isGetElem();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      node0.getIndexOfChild((Node) null);
  }

  @Test(timeout = 4000)
  public void test689()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-978), 324);
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test690()  throws Throwable  {
      int int0 = 0;
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test691()  throws Throwable  {
      Node node0 = Node.newString(199, "H(*K)>RujE", 2721, 2721);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test692()  throws Throwable  {
      Node node0 = Node.newString(1832, "Kh");
      Node node1 = new Node(0, node0, 0, 0);
      Node node2 = null;
      try {
        node2 = new Node(0, node1, node0, node0, node1, (-1515), 19);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test693()  throws Throwable  {
      Node node0 = new Node(132);
      node0.getChangeTime();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test694()  throws Throwable  {
      int int0 = 560;
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      Node node1 = new Node(1426, node0, node0, node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(560, node1, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test695()  throws Throwable  {
      Node node0 = Node.newNumber((-3570.2208248694237));
      node0.siblings();
      node0.getDouble();
      Node node1 = null;
      node0.isOptionalArg();
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test696()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3039));
      Node node0 = Node.newString("no next sibling.", (-3039), (-3039));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("no next sibling.");
      node_FileLevelJsDocBuilder0.append("no next sibling.");
      node0.setVarArgs(true);
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("bKAei,~ogYia");
      node0.getSideEffectFlags();
      node_FileLevelJsDocBuilder0.append("no next sibling.");
      node0.isOnlyModifiesArgumentsCall();
      node0.getBooleanProp((-3039));
  }

  @Test(timeout = 4000)
  public void test697()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = 3926;
      Node[] nodeArray0 = new Node[5];
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[6];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      jSTypeArray0[0] = jSType0;
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSTypeArray0[0], (List<JSType>) immutableList0);
      jSTypeArray0[1] = (JSType) functionType0;
      JSType jSType1 = jSTypeRegistry0.createFunctionTypeWithVarArgs((ObjectType) functionType0, (JSType) functionType0, (List<JSType>) immutableList0);
      jSTypeArray0[2] = jSType1;
      JSType jSType2 = jSTypeRegistry1.createNullableType(functionType0);
      jSTypeArray0[3] = jSType2;
      Node node0 = Node.newNumber((double) 1, 639, 3915);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Not declared as a constructor", node0, jSTypeArray0[3]);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      JSType jSType3 = enumElementType0.getPropertyType("Object#Key");
      jSTypeArray0[4] = jSType3;
      FunctionType functionType1 = jSTypeRegistry0.createConstructorType(jSTypeArray0[3], false, jSTypeArray0);
      jSTypeArray0[5] = (JSType) functionType1;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = new Node(639, node1, 0, 42);
      Node node3 = new Node(3926, node2);
      nodeArray0[0] = node3;
      Node node4 = Node.newString("Unknown class name", 39, 47);
      nodeArray0[1] = node4;
      Node node5 = Node.newNumber(1.0, 46, 0);
      nodeArray0[2] = node5;
      Node node6 = null;
      try {
        node6 = new Node(0, node5, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test698()  throws Throwable  {
      int int0 = 628;
      String string0 = "JDu";
      Node.newString(628, "JDu", 628, 628);
      Node node0 = Node.newNumber((double) 46);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 46.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test699()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$ObjectPropListItem");
      node0.setLineno(2111);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node1.setOptionalArg(false);
      node0.addChildrenToBack(node1);
      Node node2 = node1.getParent();
      node2.detachChildren();
      Node node3 = node1.srcrefTree(node0);
      node3.getQualifiedName();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      node_SideEffectFlags0.clearAllFlags();
      Node.newNumber((double) 38);
  }

  @Test(timeout = 4000)
  public void test700()  throws Throwable  {
      Node node0 = Node.newString("q7pXZy", 0, 182);
      node0.toString();
      node0.getDirectives();
      Node node1 = new Node((-2884), node0, node0, node0, 0, (-3277));
      Node node2 = node1.useSourceInfoFromForTree(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("q7pXZy", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.srcref(node1);
      node2.getIntProp((-441));
      StaticSourceFile staticSourceFile0 = node0.getStaticSourceFile();
      node2.setStaticSourceFile(staticSourceFile0);
      node1.getStaticSourceFile();
      node2.addChildToBack(node1);
      node1.isSetterDef();
      node1.setSourceEncodedPositionForTree(1127);
  }

  @Test(timeout = 4000)
  public void test701()  throws Throwable  {
      Node node0 = Node.newNumber((-3570.2208248694237));
      node0.siblings();
      node0.getDouble();
      node0.isOptionalArg();
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test702()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1083, 0);
      node0.isDebugger();
      assertEquals(4435968, node0.getSourcePosition());
      assertEquals(39, node0.getType());
  }

  @Test(timeout = 4000)
  public void test703()  throws Throwable  {
      int int0 = 2719;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2719);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setAllFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      String string0 = ".=";
      Node node0 = null;
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test704()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setMutatesGlobalState();
      String string0 = "lv#,FxthZcE59G@i}zy";
      Node node0 = Node.newString(2044, "lv#,FxthZcE59G@i}zy", 2044, 2044);
      node0.setSourceEncodedPosition(2044);
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test705()  throws Throwable  {
      int int0 = 2076;
      Node.extractLineno(2076);
      int int1 = 285;
      Node node0 = null;
      int int2 = 2468;
      Node node1 = null;
      try {
        node1 = new Node(285, (Node) null, 2468, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test706()  throws Throwable  {
      Node.newNumber(2991.386666, (-275), 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test707()  throws Throwable  {
      Node.extractCharno(13);
      Node.newString("com.google.javascript.rhino.jstype.FunctionType$PropAccess");
      Node node0 = new Node(0, 53, 1);
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test708()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      int int0 = (-2003);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(886, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test709()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(35);
      Node node1 = new Node(0, node0, (-600), 2);
      Node.newString(0, "M`||U!_]1^/2:", 0, (-619));
      node1.setCharno(2);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }
}
