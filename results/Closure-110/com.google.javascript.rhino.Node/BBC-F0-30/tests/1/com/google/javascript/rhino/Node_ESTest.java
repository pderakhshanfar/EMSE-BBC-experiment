/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 22:44:31 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import java.io.BufferedOutputStream;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PipedWriter;
import java.net.URI;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.ServiceLoader;
import java.util.Set;
import java.util.SortedSet;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int int0 = 2198;
      Node[] nodeArray0 = new Node[5];
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[4];
      Node node0 = Node.newNumber((-144.43051041835096));
      Node node1 = new Node(2198, node0);
      JSType jSType0 = node1.getJSType();
      jSTypeArray0[0] = null;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseEnumElementType((EnumElementType) null);
      jSTypeArray0[1] = null;
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;
      JSType jSType1 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[2] = jSType1;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("Not declared as a constructor", node1, jSType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node((-536870912));
      Node node1 = Node.newString("T4%x", 38, 0);
      node1.setQuotedString();
      node0.isEquivalentToShallow(node1);
      node0.getLength();
      Node node2 = new Node((-1314), node0, node0);
      node2.removeChildren();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -536870912
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString("", 330, 330);
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("m1,JX,'ZcM2L", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      node0.isHook();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node0 = Node.newString("The new child node already has a parent.");
      Node node1 = new Node(9, node0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createInterfaceType("com.google.common.base.CharMatcher$10", node1, (ImmutableList<TemplateType>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node(0, 2867, (-492));
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = new Node(65536);
      Node node1 = new Node((-1610), node0, (-475), 48);
      node0.addChildrenToBack(node1);
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.putProp(168, node_SideEffectFlags0);
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newNumber((double) 52, 52, 52);
      node0.getChangeTime();
      Node node1 = new Node(52, node0, 4091, 48);
      Node node2 = new Node(52, node1, node1, node1, 43, 12);
      Node node3 = null;
      try {
        node3 = new Node(52, node2, node2, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int int0 = 4745;
      Node[] nodeArray0 = new Node[5];
      String string0 = "BRgsz@\\`y-BcuSF3";
      Node node0 = Node.newString("BRgsz@`y-BcuSF3");
      Node node1 = new Node(4745, node0);
      Node node2 = null;
      try {
        node2 = new Node(4745, node1, node1, node0, 4745, 37);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newString(130, "rhino_ast.java.com.google.javascript.rhino.Messages");
      try { 
        node0.setDouble(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // EXPR_RESULT rhino_ast.java.com.google.javascript.rhino.Messages is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(0, node0, (-887), 4095);
      node1.isParamList();
      // Undeclared exception!
      try { 
        node1.setDouble(0.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      int int0 = (-2223);
      Node[] nodeArray0 = new Node[7];
      Node node0 = new Node((-2223));
      nodeArray0[0] = node0;
      Node node1 = null;
      try {
        node1 = new Node(51, nodeArray0, (-268), 49);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[6];
      Node node0 = Node.newString("\".tV?8(t@8@2%2h<");
      nodeArray0[0] = node0;
      Node node1 = new Node(55, 0, 53);
      nodeArray0[1] = node1;
      Node node2 = new Node((-2176), node0);
      nodeArray0[2] = node2;
      Node node3 = new Node((-1988));
      nodeArray0[3] = node3;
      Node node4 = null;
      try {
        node4 = new Node(15, node2, node0, node2, node3, 30, 2660);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newNumber(3591.592249769);
      node0.isInc();
      node0.isOnlyModifiesArgumentsCall();
      node0.isTry();
      Node node1 = node0.cloneNode();
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      EnumType enumType0 = jSTypeRegistry1.createEnumType("Not declared as a type name", (Node) null, jSType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      JSType jSType1 = enumElementType0.getPrimitiveType();
      jSTypeArray0[1] = jSType1;
      JSType jSType2 = modificationVisitor0.caseBooleanType();
      jSTypeArray0[2] = jSType2;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = new Node((-1553), (-1154), (-1553));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.setInputId((InputId) null);
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setThrows();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1553
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = Node.newNumber(82.0055256585);
      node0.getDirectives();
      node0.isLocalResultCall();
      node0.mayMutateArguments();
      Node node1 = Node.newString("");
      node1.setWasEmptyNode(true);
      node1.toString();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = Node.newString("6F@]+>rX9gz");
      node0.getAncestors();
      node0.getCharno();
      int int0 = 0;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("com.google.javascript.rhino.JSDocInfo$Marker", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = null;
      Node node1 = Node.newString((-4068), "com.google.common.base.Predicates$NotPredicate", 0, 0);
      Node node2 = null;
      try {
        node2 = new Node((-4068), (Node) null, node1, node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = Node.newString(434, "Jc7-;VXg\"");
      node0.getBooleanProp(3204);
      Node node1 = new Node(434, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 6078, 2196);
      node0.isVoid();
      node0.isNoSideEffectsCall();
      node0.setLineno((-3174));
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = Node.newString((-3216), "length");
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1777);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = Node.newNumber((-1286.1719), 47, (-30));
      node0.putIntProp(47, (-30));
      node0.setIsSyntheticBlock(false);
      node0.isFromExterns();
      String string0 = "";
      String string1 = "com.google.common.base.Predicates$ContainsPatternPredicate";
      URI uRI0 = MockURI.aFTPURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newString(55, "B;\"\"\",Xp");
      node0.isLocalResultCall();
      Node node1 = new Node(55, node0, node0, 0, (-1267));
      node1.type = 32;
      node1.isOptionalArg();
      node0.getDirectives();
      node1.setLineno(1455);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node1.setLength(36);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = new Node(0, 302, 0);
      int int0 = 46;
      int int1 = 863;
      int int2 = 0;
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.clearAllFlags();
      Node node0 = Node.newString(0, "com.google.javascript.rhino.jstype.BooleanType");
      Node node1 = new Node(0, node0, node0, (-534), 57);
      node1.getIntProp(664);
      node_SideEffectFlags0.setAllFlags();
      Node.newNumber((-95.40228783), 2, 49);
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(52, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int int0 = 11;
      Node node0 = new Node((-1552), 11, (-371));
      node0.isQuotedString();
      node0.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-1342));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1552
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, (-358));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Class<TemplateType> class0 = TemplateType.class;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ServiceLoader<TemplateType> serviceLoader0 = ServiceLoader.load(class0, classLoader0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) serviceLoader0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = new Node((-3926));
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node(54, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1187));
      Node node1 = new Node((-1187), node0, 85, 27591);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isIn();
      node0.getLineno();
      node1.isLocalResultCall();
      node0.setDouble((-2327.86));
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node((-1593), node0, node0, node0);
      node1.siblings();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node node2 = Node.newNumber(0.0);
      node1.isInc();
      node0.isWith();
      node2.isTry();
      Node node3 = Node.newNumber((double) 38);
      node3.isTry();
      Node node4 = null;
      try {
        node4 = new Node(4095, node2, node0, node1, 39, 36);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newString(55, "B;\"\"\",Xp");
      node0.setCharno(45);
      node0.isLocalResultCall();
      Node node1 = new Node(55, node0, node0, 0, (-1267));
      node1.type = 32;
      node1.isOptionalArg();
      node0.getDirectives();
      node1.setLineno(1455);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node1.setLength(36);
      node0.addSuppression("duplicate child");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node((-536870912));
      Node node1 = Node.newString("T4%x", 38, 0);
      node1.setQuotedString();
      node0.isEquivalentToShallow(node1);
      node0.getLength();
      Node node2 = new Node((-1314), node0, node0);
      node2.removeChildren();
      node1.getAncestors();
      node2.isThis();
      // Undeclared exception!
      try { 
        node2.toString(false, true, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1314
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node((-536870912));
      Node node1 = Node.newString("T4%x", 38, 0);
      node1.setQuotedString();
      node0.isEquivalentToShallow(node1);
      node0.getLength();
      node0.getQualifiedName();
      Node node2 = new Node((-1314), node0, node0);
      node2.removeChildren();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -536870912
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = new Node((-270), (-270), (-270));
      Node node1 = new Node(0, node0, node0, node0, node0, (-270), 0);
      node1.copyInformationFromForTree(node0);
      Node node2 = new Node((-1509), 50, 57);
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      Class<TemplateType> class0 = TemplateType.class;
      ServiceLoader<TemplateType> serviceLoader0 = ServiceLoader.load(class0, (ClassLoader) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) serviceLoader0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node[] nodeArray0 = new Node[6];
      Node node0 = Node.newString("\".tV?8(t@8@2%2h<");
      nodeArray0[0] = node0;
      Node node1 = new Node(55, 0, 53);
      nodeArray0[1] = node1;
      node0.isInc();
      node1.isOnlyModifiesArgumentsCall();
      node0.isTry();
      node1.cloneNode();
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = new Node((-536870912));
      Node node1 = Node.newString("T4%x", 38, 0);
      node1.toString();
      node1.setQuotedString();
      node0.isEquivalentToShallow(node1);
      node0.getLength();
      Node node2 = new Node((-1314), node0, node0);
      node2.removeChildren();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -536870912
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = new Node(65536);
      Node node1 = new Node((-536870912), node0, (-2401), 8);
      Node node2 = null;
      try {
        node2 = new Node(48, node0, node0, node0, 98, 16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString(55, "B;\"\"\",Xp");
      node0.isLocalResultCall();
      Node node1 = new Node(55, node0, node0, 0, (-1267));
      node1.type = 32;
      node1.isOptionalArg();
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      JSType jSType1 = jSTypeRegistry0.createOptionalType(jSType0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("RoZGR7XE", node1, jSType1);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getPrimitiveType();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType2 = modificationVisitor0.caseBooleanType();
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType1;
      jSTypeArray0[2] = jSType2;
      jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = Node.newString(57, "Named type with empty name component");
      node2.isSwitch();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(1624, node0, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.isQuotedString();
      Node node2 = new Node(558, node1, 12, 1);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isEquivalentTo(node0);
      node1.getBooleanProp(2);
      node1.isEmpty();
      Node.newString(15, "m8");
      // Undeclared exception!
      try { 
        Node.newString((String) null, 2097152, (-1448));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = Node.newString(2564, "", (-1448), 2097152);
      Node node1 = new Node(1937, node0, node0, node0);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = null;
      try {
        node2 = new Node(2097152, node0, node0, node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = Node.newString(" is not a number node", 52, 52);
      node0.isNot();
      node0.getLineno();
      Node node1 = new Node(43, node0, node0, node0, node0, 16, 461845907);
      Node node2 = node0.srcrefTree(node1);
      node2.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "RANGE_ERROR_TYPE";
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node((-1593), node0, node0, node0);
      node1.siblings();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node2 = Node.newNumber(0.0);
      node1.isInc();
      node0.isWith();
      node2.isTry();
      Node.newNumber((double) 38);
      // Undeclared exception!
      try { 
        node2.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newNumber(3591.592249769);
      node0.isInc();
      node0.isWith();
      node0.isTry();
      Node node1 = Node.newNumber((double) 55);
      node1.checkTreeEquals(node0);
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = new Node((-536870912));
      Node node1 = Node.newString("T4%x", 38, 0);
      node0.isEquivalentToTyped(node1);
      node1.setQuotedString();
      node0.isEquivalentToShallow(node1);
      node0.getLength();
      Node node2 = new Node((-1314), node0, node0);
      Node node3 = node2.removeChildren();
      node1.getAncestors();
      node2.isThis();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node2;
      Node node4 = new Node(31);
      nodeArray0[1] = node4;
      nodeArray0[2] = node3;
      Node node5 = new Node(1390, nodeArray0, (-315), 12);
      Node node6 = null;
      try {
        node6 = new Node(0, node3, node3, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getVisibility();
      Node node0 = Node.newNumber((double) 27, 27, 154);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("im", true);
      node0.putProp(1906, simpleSourceFile0);
      node0.mayMutateArguments();
      node0.isSyntheticBlock();
      Node node1 = null;
      try {
        node1 = new Node((-1448), (Node[]) null, 31, (-2844));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = new Node((-270), (-270), (-270));
      Node node1 = new Node(0, node0, node0, node0, node0, (-270), 0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.setLineno(77);
      Node node3 = new Node((-1509), 50, 57);
      Node node4 = node1.useSourceInfoFromForTree(node0);
      node3.getJSType();
      // Undeclared exception!
      try { 
        node4.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(148, 148, (-3571));
      Node node1 = new Node(8, node0, node0, node0, node0, 2768, 113);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(86, 760, 42);
      node2.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = new Node(65536);
      Node node1 = new Node((-1610), node0, (-475), 48);
      node0.addChildrenToBack(node1);
      node0.putProp(168, node_SideEffectFlags0);
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 65536
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString(43, "");
      boolean boolean0 = false;
      Node node1 = Node.newString("");
      // Undeclared exception!
      try { 
        node1.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.areAllFlagsSet();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newNumber(3591.592249769);
      node0.isInc();
      node0.isWith();
      Node node1 = node0.cloneNode();
      node0.setIsSyntheticBlock(false);
      node0.putBooleanProp(15, true);
      node1.isContinue();
      Node node2 = node1.cloneNode();
      node0.mayMutateGlobalStateOrThrow();
      node2.addChildrenToFront(node1);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = new Node(65536);
      Node node1 = new Node((-1610), node0, (-475), 48);
      int int0 = 168;
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newString("second new child has existing sibling");
      node0.isDec();
      node0.getInputId();
      node0.isOnlyModifiesThisCall();
      node0.getSourceOffset();
      node0.type = 18;
      Node.newNumber((double) 2, 2154, 35);
      node0.removeFirstChild();
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = new Node((-1504), (-1504), 1937);
      Node node1 = new Node(26, node0, node0, 2395, 39);
      node1.getChildCount();
      Node node2 = new Node(457, node1, node1);
      CharBuffer charBuffer0 = CharBuffer.allocate(154);
      int int0 = (-363);
      boolean boolean0 = false;
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charBuffer1.duplicate();
      // Undeclared exception!
      try { 
        charBuffer0.put(charBuffer1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // 154
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node((-1552), 11, (-371));
      node0.isQuotedString();
      node0.getStaticSourceFile();
      node0.getAncestors();
      Node node1 = Node.newString("", 115, (-185));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isTrue();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(1624, node0, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.isQuotedString();
      node0.isOptionalArg();
      node0.getDirectives();
      node0.setLineno(48);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1662));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node1.setLength((-64));
      Node node2 = Node.newString("duplicate child");
      node2.addSuppression("JXde-)b");
      node2.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newString(55, "B;\"\"\",Xp");
      node0.setCharno(45);
      node0.isLocalResultCall();
      Node node1 = new Node(55, node0, node0, 0, (-1267));
      Node node2 = null;
      try {
        node2 = new Node(2, node0, 3617, (-3186));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = new Node(65536);
      Node node1 = new Node((-1610), node0, (-475), 48);
      node0.putBooleanProp(37, false);
      int int0 = 168;
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = new Node(65536);
      Node node1 = Node.newNumber(3128.775103512482);
      node1.isInc();
      Node node2 = Node.newNumber(0.5, 101, 42);
      node2.isWith();
      Node node3 = node1.cloneNode();
      node3.setIsSyntheticBlock(false);
      node3.putBooleanProp(114, false);
      node2.isContinue();
      Node node4 = node3.cloneNode();
      node3.mayMutateGlobalStateOrThrow();
      node4.addChildrenToFront(node1);
      int int0 = 56;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node5 = Node.newString(34, "!x#z JD9^ Z", 42, 1);
      Node node6 = null;
      try {
        node6 = new Node(507, node1, node5, 1, 49);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, (-358));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(524288, node0, node0, node0, node0, 36, (-191));
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node((-1593), node0, node0, node0);
      node1.siblings();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node2 = Node.newNumber(0.0);
      node1.isInc();
      node0.isWith();
      node2.isTry();
      Node node3 = Node.newNumber((double) 38);
      node3.isTry();
      Node node4 = Node.newNumber((double) 40);
      node0.checkTreeEquals(node4);
      node1.removeChild(node0);
      node1.cloneNode();
      node1.getIntProp(57);
      Node node5 = new Node(3902);
      Node node6 = node5.srcref(node2);
      // Undeclared exception!
      try { 
        node6.replaceChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = Node.newNumber(3591.592249769);
      node0.isName();
      node0.isWith();
      node0.isTry();
      Node node1 = Node.newNumber((double) 55);
      node1.checkTreeEquals(node0);
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = Node.newString(434, "Jc7-;VXg\"");
      node0.getBooleanProp(3208);
      Node node1 = new Node(434, node0, node0, node0, node0);
      node1.mayMutateArguments();
      node1.getIndexOfChild(node0);
      node0.siblings();
      node0.isSetterDef();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = Node.newString(2564, "", (-1448), 2097152);
      node0.isParamList();
      // Undeclared exception!
      try { 
        Node.newString((-388), (String) null, 2479, 1244);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = Node.newString("P,/*m{B");
      node0.isQuotedString();
      node0.removeProp((-2129));
      node0.getAncestors();
      Node node1 = Node.newNumber(0.5);
      node0.getDirectives();
      node1.setDirectives((Set<String>) null);
      node0.isExprResult();
      node0.getDirectives();
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(1624, node0, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.isQuotedString();
      Node node2 = new Node(558, node1, 12, 1);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isEquivalentTo(node0);
      node2.isLabelName();
      node1.isEmpty();
      Node node3 = Node.newString(15, "m8");
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node3;
      nodeArray0[2] = node3;
      nodeArray0[3] = node3;
      nodeArray0[4] = node2;
      nodeArray0[5] = node2;
      int int0 = (-1267);
      Node node4 = null;
      try {
        node4 = new Node(126, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = new Node((-536870912));
      Node node1 = Node.newString("T4%x", 38, 0);
      node0.isEquivalentToTyped(node1);
      node1.setQuotedString();
      node0.isEquivalentToShallow(node1);
      node0.getLength();
      Node node2 = new Node((-1314), node0, node0);
      node2.removeChildren();
      node1.getAncestors();
      node2.isThis();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node2;
      Node node3 = new Node(31);
      Node node4 = Node.newString("", 15, 29);
      Node node5 = new Node(37, (-1448), 392);
      node5.isAssignAdd();
      Node node6 = new Node(30);
      node2.addChildrenToFront(node4);
      node4.isNot();
      node1.isComma();
      node2.getBooleanProp(2919);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node((-536870912));
      String string0 = "T4%x";
      int int0 = 0;
      // Undeclared exception!
      try { 
        node0.setString("not a StringNode");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -536870912
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, (-358));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      node0.isHook();
      node0.getAncestors();
      Node node1 = Node.newString(53, "Object#Key");
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(1624, node0, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.isQuotedString();
      Node node2 = new Node(558, node1, 12, 1);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isEquivalentTo(node0);
      node1.getBooleanProp(2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ClassLoader.getSystemClassLoader();
      node2.isHook();
      node1.getAncestors();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, (-358));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      Node node1 = new Node(1);
      Node node2 = Node.newString("iz", 4, (-2454));
      node0.isAssignAdd();
      Node node3 = new Node(105);
      node0.addChildrenToFront(node2);
      node1.isNot();
      node2.isComma();
      node2.getBooleanProp(1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(0, node0, (-887), 4095);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(102, nodeArray0);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String string0 = "Jc7-\\;VXg\"";
      Node node0 = new Node(46, 434, 108);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node0.setInputId((InputId) null);
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got SHNE
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node((-1593), node0, node0, node0);
      node1.siblings();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node0.isQuotedString();
      node1.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(47);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got FALSE
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(1624, node0, node0);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.isQuotedString();
      Node node2 = new Node(558, node1, 12, 1);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isEquivalentTo(node0);
      node1.getBooleanProp(2);
      node1.isEmpty();
      Node node3 = Node.newString(15, "m8");
      node2.isAssignAdd();
      Node node4 = new Node(1);
      node2.addChildrenToFront(node4);
      node2.isNot();
      node0.isComma();
      node3.getBooleanProp(4861);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(1624, node0, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.addSuppression((String) null);
      node0.isQuotedString();
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node0.isEquivalentTo(node0);
      Node node2 = new Node(1858, 54, 2);
      Node node3 = Node.newNumber((-1328.9310572937));
      node3.isTrue();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newString("P,/*m{B");
      node0.isQuotedString();
      node0.removeProp((-2129));
      node0.getAncestors();
      Node node1 = Node.newNumber((double) 4, 8, 36);
      node1.removeProp(32);
      Node node2 = Node.newNumber(1.2);
      node0.toString();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newString("second new child has existing sibling");
      node0.isDec();
      node0.getInputId();
      node0.isOnlyModifiesThisCall();
      node0.getSourceOffset();
      Node node1 = Node.newString("second new child has existing sibling", (-394), 56);
      Node node2 = new Node(38, node1, node0);
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(47);
      Node node1 = new Node(1764, node0, node0, 2097152, 55);
      node1.getQualifiedName();
      Node node2 = null;
      try {
        node2 = new Node(1764, node1, node0, node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(1624, node0, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.addSuppression((String) null);
      node0.isQuotedString();
      node1.checkTreeTypeAwareEqualsImpl(node1);
      Stack<TemplateType> stack0 = new Stack<TemplateType>();
      Iterator<TemplateType> iterator0 = stack0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1624
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(1624, node0, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.addSuppression((String) null);
      node0.isQuotedString();
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node0.isEquivalentTo(node0);
      Node node2 = new Node(1858, 54, 2);
      Node node3 = null;
      try {
        node3 = new Node(155, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node((-1593), node0, node0, node0);
      node1.siblings();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node2 = Node.newNumber(0.0);
      node1.isInc();
      node0.isWith();
      node2.isTry();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = Node.newNumber((double) 38);
      node3.isTry();
      Node node4 = Node.newNumber((double) 40);
      node0.checkTreeEquals(node4);
      node1.removeChild(node0);
      node1.cloneNode();
      node1.getIntProp(57);
      Node node5 = new Node(3902);
      Node node6 = node5.srcref(node2);
      // Undeclared exception!
      try { 
        node6.replaceChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newNumber((double) 558, 558, 558);
      Node node1 = new Node(558, node0, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.isQuotedString();
      Node node2 = new Node(558, node1, 15, 1);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isEquivalentTo(node0);
      node2.isLabelName();
      Node node3 = Node.newString(15, "m8");
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node3;
      nodeArray0[3] = node3;
      nodeArray0[4] = node2;
      nodeArray0[5] = node2;
      int int0 = (-1267);
      Node node4 = null;
      try {
        node4 = new Node(126, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = new Node((-1550), (-1154), (-1550));
      Node node1 = Node.newString("UhG ");
      Node node2 = new Node(2, node0, node1, node0, node0, 623, 114);
      node0.copyInformationFromForTree(node1);
      node2.setLineno(55);
      Node node3 = new Node(55, 17, (-37));
      Node node4 = node1.useSourceInfoFromForTree(node2);
      JSType jSType0 = node0.getJSType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType(jSType0.NOT_A_TYPE, node4, jSType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(0, node0, (-887), 4095);
      Node[] nodeArray0 = new Node[1];
      Node node2 = null;
      try {
        node2 = new Node(102, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      Node.extractCharno(39);
      int int1 = (-1593);
      Node[] nodeArray0 = new Node[6];
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      JSType[] jSTypeArray0 = new JSType[0];
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node((-887), node0, node0, node0);
      nodeArray0[0] = node1;
      Node node2 = new Node(213044, node1, node1);
      nodeArray0[1] = node2;
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      nodeArray0[2] = node3;
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      nodeArray0[3] = node4;
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[6];
      JSTypeNative jSTypeNative0 = JSTypeNative.ARRAY_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.U2U_FUNCTION_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.BOOLEAN_OBJECT_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSTypeNative jSTypeNative4 = JSTypeNative.NO_RESOLVED_TYPE;
      jSTypeNativeArray0[4] = jSTypeNative4;
      JSTypeNative jSTypeNative5 = JSTypeNative.ERROR_TYPE;
      jSTypeNativeArray0[5] = jSTypeNative5;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("iz", node2, jSType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getRootNode();
      nodeArray0[4] = null;
      enumElementType0.getRootNode();
      nodeArray0[5] = null;
      Node node5 = null;
      try {
        node5 = new Node((-358), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = new Node(47);
      Node node1 = new Node(1764, node0, node0, 2097152, 55);
      node1.getQualifiedName();
      InputId inputId0 = new InputId((String) null);
      node1.setInputId(inputId0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node1.removeChildren();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags5.setThrows();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1764
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node.extractCharno(1073741823);
      Node node0 = Node.newString(116, "not a StringNode", (-2994), 1323);
      Node node1 = new Node((-3929), node0, node0);
      Node node2 = new Node(1340, node1, 15, 1859);
      node2.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newString("%.]+C_saK_", 1018, 170);
      node0.isFromExterns();
      node0.getAncestors();
      Node node1 = new Node(46, 170, 55);
      Node node2 = node0.copyInformationFrom(node1);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = new Node((-3010));
      node0.getProp((-3010));
      node0.putProp((-3010), (Object) null);
      node0.getBooleanProp(2097152);
      node0.putIntProp((-3010), 10);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      node0.setSourceFileForTesting("");
      node0.isParamList();
      node0.isHook();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = new Node(48, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = Node.newString(" is not a number node", 52, 52);
      node0.isNot();
      node0.isThrow();
      Node node1 = new Node(154);
      Node node2 = Node.newString("UZ>j", 2741, 50);
      node2.isAssignAdd();
      Node node3 = new Node((-554));
      Node node4 = new Node(51, node0, 1, 55);
      node4.addChildrenToFront(node1);
      node3.isNot();
      node4.isComma();
      node2.isDo();
      Node node5 = Node.newString("", 3001, 31);
      node5.isSwitch();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      Node node0 = null;
      EnumType enumType0 = jSTypeRegistry1.createEnumType("Not declared as a type name", (Node) null, jSType0);
      enumType0.getElementsType();
      Node node1 = new Node(1);
      node1.mayMutateGlobalStateOrThrow();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = "RANGE_ERROR_TYPE";
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node(node0.QUOTED_PROP, node0, node0, node0.POST_FLAG, node0.COLUMN_BITS);
      node1.siblings();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node1.LAST_PROP);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      double double0 = 0.0;
      Node node2 = Node.newNumber(double0);
      node1.isInc();
      node0.isWith();
      node0.isRegExp();
      Node node3 = Node.newNumber((double) node2.SYNTHETIC_BLOCK_PROP);
      node3.isTry();
      Node node4 = Node.newNumber((double) node3.ORIGINALNAME_PROP);
      node0.checkTreeEquals(node4);
      node1.removeChild(node0);
      node1.cloneNode();
      int int0 = Node.DIRECTIVES;
      int int1 = 3902;
      Node node5 = new Node(int1);
      Node node6 = node5.srcref(node2);
      // Undeclared exception!
      try { 
        node6.replaceChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newNumber((-1286.1719), 47, (-30));
      node0.putIntProp(47, (-30));
      node0.setIsSyntheticBlock(false);
      node0.isUnscopedQualifiedName();
      String string0 = "";
      String string1 = "com.google.common.base.Predicates$ContainsPatternPredicate";
      URI uRI0 = MockURI.aFTPURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node((-3010));
      node0.getProp((-3010));
      node0.putProp((-3010), (Object) null);
      node0.isLabelName();
      node0.putIntProp((-3010), 10);
      // Undeclared exception!
      try { 
        Node.newString(130, (String) null, 50, 49);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString("prev is not a child of this node.", 52, 52);
      Node node1 = new Node(1320, 4095, 40);
      node1.isNot();
      node1.isThrow();
      Node node2 = new Node(30);
      Node node3 = Node.newString("", (-5699), (-22));
      node3.isAssignAdd();
      Node node4 = new Node(2);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node3;
      nodeArray0[1] = node0;
      Node node5 = new Node(37, nodeArray0);
      Node node6 = new Node((-157), node5, 4131, 2584);
      Node node7 = Node.newString("", 130, 52);
      // Undeclared exception!
      try { 
        node7.addChildrenToFront(node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newString(856, "");
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = Node.newString(4113, "", 4113, 4113);
      node0.isOr();
      Node node1 = new Node(4, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newString("sjsx5Aqf:JV@");
      node0.isDec();
      node0.getInputId();
      node0.isOnlyModifiesThisCall();
      node0.getSourceOffset();
      Node node1 = Node.newNumber((double) 51, (-1), 42);
      node0.removeFirstChild();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = Node.newNumber((double) 1);
      node2.getAncestor(4095);
      node2.toString();
      node0.removeFirstChild();
      node1.getType();
      node1.mayMutateGlobalStateOrThrow();
      node1.getType();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node.extractCharno(1073741823);
      Node node0 = Node.newString(116, "not a StringNode", (-2994), 1323);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry0.getObjectIndexKey();
      node0.putProp(50, "not a StringNode");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = null;
      try {
        node1 = new Node((-3407), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString("", 52, (-694));
      node0.isNot();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      Node node1 = Node.newString(37, "SvmT.6{5wFF)ZGI~#t$");
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CALL SvmT.6{5wFF)ZGI~#t$ is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(303);
      String string0 = "T4%x";
      int int0 = 0;
      try { 
        node0.setString("not a StringNode");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // EOC is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1187));
      Node node1 = new Node((-1187), node0, 85, 27591);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isIn();
      node0.getLineno();
      node1.isLocalResultCall();
      node1.getLength();
      node2.getQualifiedName();
      Node node3 = new Node(2584, node1, node1, node2, 52, 51);
      Node node4 = null;
      try {
        node4 = new Node(48, node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node.extractCharno(1073741823);
      Node node0 = new Node(24576);
      Node node1 = new Node(1532, node0, (-536870912), 52);
      node1.setOptionalArg(true);
      node0.addChildrenToFront(node1);
      node0.isNot();
      node0.isComma();
      node1.isDo();
      Node node2 = Node.newString("", 22, 57);
      node2.isQuotedString();
      node2.isSwitch();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newNumber((double) 558, 558, 558);
      Node node1 = new Node(558, node0, node0);
      node0.isCatch();
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.isQuotedString();
      Node node2 = new Node(558, node1, 12, 1);
      node2.isEquivalentTo(node0);
      node2.isLabelName();
      node1.isEmpty();
      String string0 = "m8";
      Node.newString(15, "m8");
      Node node3 = Node.newString(32, "m8");
      Node node4 = new Node((-1267), node3, 12, 8232);
      Node node5 = null;
      try {
        node5 = new Node(0, node3, node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newNumber((double) 558, 558, 558);
      Node node1 = new Node(558, node0, node0);
      node1.isEquivalentTo(node0, false, false, false);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.isQuotedString();
      Node node2 = new Node(558, node1, 12, 1);
      node2.isEquivalentTo(node0);
      node2.isLabelName();
      node1.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[4];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      jSTypeRegistry1.createParameters(jSTypeArray0);
      node2.isSwitch();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      jSTypeArray0[2] = jSType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      LinkedList<TemplateType> linkedList0 = new LinkedList<TemplateType>();
      Vector<JSType> vector0 = new Vector<JSType>(linkedList0);
      Node node1 = jSTypeRegistry1.createParameters((List<JSType>) vector0);
      node1.setOptionalArg(false);
      node1.getJsDocBuilderForNode();
      node1.getDirectives();
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(1624, node0, node0);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.addSuppression((String) null);
      node0.isQuotedString();
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node0.isEquivalentTo(node0);
      node0.children();
      Node node2 = new Node(1858, 54, 2);
      node2.isVarArgs();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      String string0 = "RANGE_ERROR_TYPE";
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node(36, node0, node0, 2, 12);
      node1.siblings();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node_SideEffectFlags0.clearAllFlags();
      node1.isInc();
      node0.isWith();
      node0.isRegExp();
      Node node2 = Node.newNumber((double) 38);
      node2.isTry();
      Node node3 = Node.newNumber((double) 40);
      node0.checkTreeEquals(node3);
      node1.removeChild(node0);
      node1.cloneNode();
      int int0 = Node.DIRECTIVES;
      Node node4 = new Node(3902);
      Node node5 = node4.srcref(node1);
      // Undeclared exception!
      try { 
        node5.replaceChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = new Node(303);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.areAllFlagsSet();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      Node node1 = Node.newNumber((double) 51);
      node1.isInc();
      node0.isWith();
      node1.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.isEquivalentToShallow(node1);
      node0.getProp(1624);
      node0.getProp(3001);
      node0.putProp(48, (Object) null);
      node0.getBooleanProp(16);
      node1.putIntProp(38, 50);
      node1.isThrow();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node0 = Node.newString("", 52, (-694));
      node0.isBreak();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      Node node1 = Node.newString(37, "SvmT.6{5wFF)ZGI~#t$");
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CALL SvmT.6{5wFF)ZGI~#t$ is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-536870912));
      node0.getJSType();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newString(" is not a number node", 52, 52);
      node0.isNot();
      node0.getLineno();
      node0.getJSType();
      Node.mergeLineCharNo((-1906), 16);
      Node node1 = new Node(115);
      node0.srcrefTree(node1);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType((String) null, node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newNumber((double) 558, 558, 558);
      Node node1 = new Node(558, node0, node0);
      node1.isEquivalentTo(node0, false, false, false);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.isQuotedString();
      Node node2 = new Node(558, node1, 12, 1);
      node2.isEquivalentTo(node0);
      node2.isLabelName();
      node0.setWasEmptyNode(true);
      node1.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node0.isWith();
      node0.getInputId();
      Node node3 = Node.newNumber((double) 31, 4096, 949);
      node3.putBooleanProp(40, false);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node2);
      node4.isIn();
      node4.isContinue();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newString(856, "");
      Node node1 = null;
      Node node2 = null;
      try {
        node2 = new Node(49, node0, node0, (Node) null, 43, 49);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node node0 = Node.newString("", 52, (-694));
      node0.isNot();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = null;
      try {
        node1 = new Node(1, nodeArray0, 29, 50);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newString("P,/*m{B");
      node0.isQuotedString();
      node0.removeProp((-2129));
      node0.getAncestors();
      Node node1 = Node.newNumber(0.5);
      node0.getDirectives();
      Node.newString(37, "BANG");
      Node node2 = Node.newNumber((double) 36);
      node1.isTrue();
      node2.isName();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newString(" is not a number node", 52, 52);
      node0.isNot();
      node0.getLineno();
      Node node1 = new Node(43, node0, node0, node0, node0, 16, 461845907);
      node1.isName();
      node1.setVarArgs(false);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = Node.newString(" is not a number node", 52, 52);
      node0.isNot();
      node0.getLineno();
      Node node1 = new Node(43, node0, node0, node0, node0, 16, 461845907);
      node1.isName();
      node1.removeFirstChild();
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = new Node(4096);
      Node.newString("*tH[-~^,|Ow", 152, 949);
      node0.detachChildren();
      Node.newNumber((-897.1));
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = new Node(65536);
      Node node1 = new Node(56, node0, node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(780, nodeArray0, 8, 1);
      node2.removeChildren();
      node2.getAncestors();
      node0.isThis();
      Node node3 = new Node((-3114));
      Node node4 = new Node(2194, nodeArray0, 4113, (-710));
      Node node5 = null;
      try {
        node5 = new Node(5556, node2, node4, (Node) null, 16, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = "Jc7-\\;VXg\"";
      Node node0 = Node.newString(434, "Jc7-;VXg\"");
      node0.getBooleanProp(3208);
      Node node1 = new Node(434, node0, node0, node0, node0);
      node1.mayMutateArguments();
      node1.getIndexOfChild(node0);
      node0.isEquivalentTo(node1, true, true, false);
      node0.siblings();
      node0.isSetterDef();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      node1.setLineno(56);
      Node node2 = new Node(1, 38, 1073741823);
      node0.useSourceInfoFromForTree(node2);
      node0.getJSType();
      node0.toString();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newString("\n\nTree2:\n");
      node0.hasChild(node0);
      node0.removeProp((-2129));
      node0.getAncestors();
      Node node1 = new Node(12, node0, node0, node0, node0, 0, 32);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = Node.newNumber(0.5);
      node0.getDirectives();
      Node.newString(37, "BANG");
      Node node3 = Node.newNumber((double) 36);
      node2.isTrue();
      node3.isName();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(40, node0, node0, node0, node0, 57, 40);
      Node node2 = new Node(32);
      node0.isUnscopedQualifiedName();
      Node node3 = new Node(598);
      node3.isNot();
      node0.isDo();
      node3.isNull();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      JSTypeNative jSTypeNative0 = JSTypeNative.EVAL_ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      jSTypeRegistry0.createObjectType(" g8X[/5<Y$Za", node0, (ObjectType) functionType0);
      Node node1 = new Node(3697, node0, node0, node0, 57, 40);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isQualifiedName();
      Node node3 = node0.srcrefTree(node2);
      node1.getLength();
      node1.hasChild(node3);
      node3.isStringKey();
      node3.isCase();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newString(4113, "");
      node0.isOr();
      node0.getDirectives();
      Node node1 = Node.newString((-2440), "BANG");
      Node.newNumber((double) 46);
      node1.isTrue();
      Node node2 = Node.newString(57, "yFMdB:<x}0(Z");
      node2.isName();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newString(4113, "", 4113, 4113);
      node0.isOr();
      Node node1 = new Node(4, node0, node0, node0, node0);
      Node node2 = Node.newString(29, "");
      node1.isEquivalentTo(node2);
      node1.children();
      Node node3 = new Node(8, 36, 4);
      node2.isVarArgs();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node.extractCharno(1073741823);
      Node node0 = Node.newString(116, "not a StringNode", (-2994), 1323);
      Node node1 = new Node((-3929), node0, node0);
      node1.putIntProp(110, 42);
      Node node2 = new Node(1340, node1, 15, 1859);
      node2.hasOneChild();
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getProp((-2994));
      node0.putProp((-2994), (Object) null);
      Node node1 = new Node(42);
      Node node2 = new Node(217);
      node1.isNot();
      // Undeclared exception!
      try { 
        node2.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node[] nodeArray0 = new Node[6];
      Node node0 = Node.newString("\".tV?8(t@8@2%2h<");
      nodeArray0[0] = node0;
      Node node1 = new Node(55, 0, 53);
      nodeArray0[1] = node1;
      node0.isInc();
      node1.isOnlyModifiesArgumentsCall();
      node1.isUnscopedQualifiedName();
      node1.getStaticSourceFile();
      Node.newString("", 8, 43);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("", "com.google.common.base.Objects", 52, 39);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ClassLoader.getSystemClassLoader();
      node1.isHook();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(54);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = new Node(598);
      node0.isIf();
      node0.detachChildren();
      node0.isScript();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = new Node((-3010));
      node0.getProp((-3010));
      node0.putProp((-3010), (Object) null);
      node0.isOr();
      Node node1 = new Node(16384, node0, node0, node0, node0);
      Node node2 = new Node(120);
      node2.putBooleanProp(43, false);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node0 = Node.newNumber((double) 223, 65536, 65536);
      Node node1 = new Node((-267), node0, node0);
      node0.setDouble((-4811.83991431095));
      node1.getSideEffectFlags();
      node0.addSuppression("");
      node1.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isEquivalentTo(node0);
      node1.children();
      node0.isDo();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      Node node0 = null;
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      jSTypeArray0[2] = jSType0;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node.newNumber((double) 32);
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(53);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 53
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newString(4113, "", 4113, 4113);
      node0.isOr();
      node0.getNext();
      Node node1 = null;
      try {
        node1 = new Node(39, (Node) null, (Node) null, 1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString(4113, "", 4113, 4113);
      node0.isOr();
      Node node1 = new Node(4, node0, node0, node0, node0);
      node0.setType((-1967));
      Node node2 = new Node(0, node1, node1);
      node2.setChangeTime(4095);
      node2.isSwitch();
      Node.extractCharno((-2417));
      Node node3 = Node.newNumber(3591.592249769);
      Node node4 = new Node((-3030), node2, node3, node3, node2);
      node0.isEquivalentTo(node4, false, false, false);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = Node.newNumber((-1286.0), 47, (-42));
      node0.putIntProp(47, (-42));
      node0.setIsSyntheticBlock(false);
      node0.isString();
      URI uRI0 = MockURI.aFTPURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = Node.newNumber((double) 558, 558, 558);
      Node node1 = new Node(558, node0, node0);
      node1.isEquivalentTo(node0, false, false, false);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node1.isEquivalentToTyped(node0);
      node0.isQuotedString();
      Node node2 = new Node(558, node1, 12, 1);
      node2.isEquivalentTo(node0);
      node2.isLabelName();
      node1.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[4];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      jSTypeRegistry1.createParameters(jSTypeArray0);
      node2.isSwitch();
      node0.isCall();
      node2.getDirectives();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      node_SideEffectFlags0.clearAllFlags();
      node1.isQuotedString();
      Node node2 = new Node(38, node0, 4, 1563);
      node1.isEquivalentTo(node2);
      node1.isLabelName();
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[7];
      jSTypeArray0[0] = jSType0;
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0);
      FunctionType functionType0 = jSTypeRegistry2.createFunctionType(jSTypeArray0[1], node1);
      jSTypeArray0[2] = (JSType) functionType0;
      jSTypeArray0[3] = jSType0;
      jSTypeArray0[4] = jSType0;
      jSTypeArray0[5] = jSType0;
      jSTypeArray0[6] = jSType0;
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.isSwitch();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      node1.setLineno(56);
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.putProp(0, (Object) null);
      node1.addChildrenToBack(node0);
      Node node2 = Node.newNumber((double) 57);
      node2.getDouble();
      node0.hasChild(node2);
      node1.isDo();
      node2.isSwitch();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1187));
      Node node1 = new Node((-1187), node0, 85, 27591);
      node1.putIntProp(30, 3000);
      // Undeclared exception!
      try { 
        node1.clonePropsFrom(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(40, node0, node0, node0, node0, 57, 40);
      Node node2 = new Node(32);
      node0.isUnscopedQualifiedName();
      node1.isNoSideEffectsCall();
      node1.setSourceEncodedPositionForTree(813);
      Node node3 = Node.newString(1563, "G\"94RMu", 24576, 598);
      Node node4 = null;
      try {
        node4 = new Node(48, node3, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newString("\".tV?8(t@8@2%2h<");
      Node node1 = Node.newNumber((-1498.6991701403983), 24, (-156));
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("ZNMU=2-Thy?");
      Node node2 = Node.newString(29, "/|KRp");
      node2.setCharno(30);
      Node node3 = Node.newNumber((double) 49);
      Node node4 = new Node(46, node0, 51, 2);
      node3.addChildrenToBack(node4);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node3.isIf();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(40, node0, node0, node0, node0, 57, 40);
      Node node2 = new Node(32);
      node0.isUnscopedQualifiedName();
      node0.isWith();
      node1.isRegExp();
      Node node3 = Node.newNumber(3618.1431227634343);
      node3.isOr();
      Node.newNumber((double) 8);
      node1.checkTreeEquals(node3);
      // Undeclared exception!
      try { 
        node0.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      node_SideEffectFlags0.clearAllFlags();
      node1.isQuotedString();
      Node node2 = new Node(38, node0, 4, 1563);
      node1.isEquivalentTo(node2);
      node1.isLabelName();
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseBooleanType();
      node1.isScript();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(9, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(346);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node(36, node0, node0, 2, 12);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.areAllFlagsSet();
      Node.newNumber(0.0);
      node1.isInc();
      node0.isWith();
      node0.isRegExp();
      Node node2 = Node.newNumber((double) 38);
      node2.isOr();
      Node node3 = Node.newNumber((double) 40);
      node0.checkTreeEquals(node3);
      Node node4 = Node.newNumber((-725.4208154923));
      Node node5 = new Node(4127, node4, 41, (-1777));
      node5.addChildrenToBack(node3);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType.toMaybeTemplatizedType((JSType) null);
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("", node4, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      node0.setSourceFileForTesting("");
      node0.isParamList();
      node0.isHook();
      Node node1 = new Node(48, node0, node0, node0, node0);
      Node node2 = node0.detachFromParent();
      Node node3 = node2.useSourceInfoFromForTree(node0);
      node0.isAdd();
      node3.isNoSideEffectsCall();
      Node node4 = Node.newString(4, "G\"94RMu", 43, 85);
      Node node5 = new Node(42, node0, node3, node4, node4);
      node2.getJSType();
      node3.toString();
      node2.isNot();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node5.isTry();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber(56.0);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newString("\".tV?8(t@8@2%2h<");
      Node node1 = new Node(8, node0, 38, 567);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isIn();
      node2.getLineno();
      node0.isLocalResultCall();
      node0.getLength();
      node1.getQualifiedName();
      Node node3 = new Node(327, node1, node2, node2, 8, 115);
      Node node4 = null;
      try {
        node4 = new Node(37, node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      int int0 = (-156);
      Node.newNumber((double) 1, 9, (-1943));
      TreeSet<String> treeSet0 = new TreeSet<String>();
      String string0 = "/|KRp";
      treeSet0.add("com.google.common.base.CharMatcher$RangesMatcher");
      // Undeclared exception!
      try { 
        Node.newString(32, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node(36, node0, node0, 2, 12);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node_SideEffectFlags0.setMutatesThis();
      node0.removeProp(1421);
      node_SideEffectFlags0.areAllFlagsSet();
      Node node2 = Node.newNumber(0.0);
      node1.isInc();
      node0.isWith();
      node0.isRegExp();
      Node node3 = Node.newNumber((double) 38);
      node3.isOr();
      node1.getSourceFileName();
      node3.setVarArgs(false);
      node2.isQuotedString();
      Node.newString("q`Ss*|0D.DA~-?h{o");
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newString("\".tV?8(t@8@2%2h<");
      Node node1 = Node.newNumber((-1498.6991701403983), 24, (-156));
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("ZNMU=2-Thy?");
      Node node2 = Node.newString(29, "/|KRp");
      node2.setCharno(30);
      Node node3 = Node.newNumber((double) 49);
      Node node4 = new Node(46, node0, 51, 2);
      node3.addChildrenToBack(node4);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node3.isIf();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node.extractCharno(1073741823);
      Node node0 = Node.newNumber(2847.6661154557178);
      node0.isTrue();
      node0.isName();
      node0.isDebugger();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(false);
      Node node1 = Node.newString("ONP/!VA&Mv/~D*I?", 52, 46);
      node1.putBooleanProp(543, false);
      node1.isContinue();
      Node node2 = node0.cloneNode();
      node2.mayMutateGlobalStateOrThrow();
      node0.addChildrenToFront(node1);
      node1.getIntProp(780);
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(40);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      Vector<JSType> vector0 = new Vector<JSType>();
      vector0.replaceAll(unaryOperator0);
      JSTypeNative jSTypeNative0 = JSTypeNative.EVAL_ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      jSTypeRegistry0.createObjectType("=", node0, (ObjectType) functionType0);
      Node node1 = new Node(52, node0, node0, node0, 37, 83);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        Node.newString(57, (String) null, 52, 16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      String string0 = "Zn\"n/5beG+o!";
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      node_SideEffectFlags0.clearAllFlags();
      node1.isQuotedString();
      Node node2 = new Node(38, node0, 4, 1563);
      node1.isEquivalentTo(node2);
      node1.isLabelName();
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getIntProp(2782);
      node0.getChildAtIndex((-2370));
      // Undeclared exception!
      try { 
        node2.replaceChildAfter((Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      node0.isEquivalentToShallow(node0);
      node0.getProp(1624);
      node0.getProp(3001);
      node0.putProp(48, (Object) null);
      node0.getBooleanProp(16);
      node0.putIntProp(38, 50);
      node0.isThrow();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = new Node(42);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseBooleanType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.putIntProp(42, 1);
      node0.isIn();
      node0.isFromExterns();
      node0.setSourceEncodedPosition(1);
      node0.isCall();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("\".tV?8(t@8@2%2h<");
      nodeArray0[0] = node0;
      Node node1 = new Node(55, 0, 53);
      nodeArray0[1] = node1;
      node0.isInc();
      node1.isOnlyModifiesArgumentsCall();
      node1.isUnscopedQualifiedName();
      node0.getStaticSourceFile();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ClassLoader.getSystemClassLoader();
      node1.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(47);
      node_SideEffectFlags2.valueOf();
      node0.isLocalResultCall();
      node0.getJSType();
      node0.isAnd();
      node0.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      Node node2 = Node.newString("ONP/!VA&Mv/~D*I?", 55, 37);
      Node node3 = Node.newNumber((-1.0));
      Node node4 = new Node(153, node3);
      node4.putBooleanProp(50, true);
      node1.isContinue();
      Node node5 = node4.cloneNode();
      node0.mayMutateGlobalStateOrThrow();
      node5.addChildrenToFront(node2);
      node5.getIntProp(126);
      // Undeclared exception!
      try { 
        node4.getChildAtIndex(56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      String string0 = "$i|jW,";
      Node node0 = Node.newString((-3212), "$i|jW,");
      Node node1 = new Node(55, node0, node0, node0, node0);
      node0.getInputId();
      node1.setInputId((InputId) null);
      node0.isEquivalentToTyped(node0);
      node1.isQualifiedName();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newString(4480, "com.google.javascript.rhino.Node$NodeMismatch");
      node0.isArrayLit();
      Node node1 = Node.newString("");
      node0.useSourceInfoIfMissingFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.valueOf();
      node1.isLocalResultCall();
      node0.getJSType();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(496);
      node1.isEquivalentToShallow(node0);
      node0.getProp(42);
      node1.getProp(50);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("B!Y* NejKvK{=?&T", false);
      node1.putProp(87, simpleSourceFile0);
      node1.getBooleanProp(113);
      node1.putIntProp(46, 0);
      node0.isThrow();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(1624, node0, node0);
      node0.siblings();
      node0.isSetterDef();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newNumber(56.0);
      Node node1 = new Node(53, node0);
      int int0 = (-1153);
      node1.getProp((-1153));
      node1.putProp(54, (Object) null);
      node1.getSourceFileName();
      node1.isOptionalArg();
      Node node2 = node1.removeChildren();
      node2.detachChildren();
      node2.isInstanceOf();
      node2.getSideEffectFlags();
      node1.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node1.getJsDocBuilderForNode();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearSideEffectFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newNumber((-1851.345));
      node0.isCast();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      // Undeclared exception!
      try { 
        node1.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags3.valueOf();
      node1.isLocalResultCall();
      node0.getJSType();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(42);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      String string0 = "$i|jW,";
      Node node0 = Node.newString((-3212), "$i|jW,");
      node0.getAncestors();
      Node node1 = Node.newString(4, "$i|jW,");
      InputId inputId0 = new InputId("$i|jW,");
      node1.setInputId(inputId0);
      node1.isAdd();
      node1.isQualifiedName();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(1624, node0, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.addSuppression((String) null);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node0.isEquivalentTo(node0);
      Node node2 = new Node(2045, 54, 2);
      node0.isTrue();
      Node.newString("com.google.common.collect.UnmodifiableIterator", 39, 38);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      node0.putIntProp((-1881), (-1));
      Node node2 = new Node(2, node0, (-4347), 50);
      node0.getJSType();
      Node.mergeLineCharNo(30, 154);
      node0.srcrefTree(node2);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(1863, nodeArray0);
      Node node4 = node2.useSourceInfoFromForTree(node0);
      node4.detachChildren();
      node0.getJSType();
      // Undeclared exception!
      try { 
        node1.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id -1881
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newNumber((-1814.3666103278986));
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newString(1323, "", (-1731), (-1731));
      Node node1 = Node.newString(2, "", 56, 119);
      node0.addChildToFront(node1);
      Node node2 = Node.newString("!Xzw6$:]0%db1O>OH");
      node2.isCast();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = Node.newNumber((-1814.3666103278986));
      Node node1 = new Node(5524, node0, node0);
      node1.putIntProp(2, 32);
      node0.hasOneChild();
      node0.isSyntheticBlock();
      node1.getLength();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newString(" is not a number node", 52, 52);
      node0.isNot();
      node0.isThrow();
      Node node1 = new Node(2);
      Node.newString("UZ>j", 2741, 50);
      node1.isUnscopedQualifiedName();
      Node node2 = new Node((-554));
      Node node3 = new Node(51, node0, 1, 55);
      node3.addChildrenToFront(node1);
      node2.isNot();
      node3.isComma();
      node0.getBooleanProp(1);
      node3.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newString("\".tV?8(t@8@2%2h<");
      Node node1 = Node.newNumber((-1498.6991701403983), 24, (-156));
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node.newNumber(2308.379748331);
      node1.isTrue();
      Node node2 = new Node(5278, node0, 0, 42);
      node2.isName();
      node2.isFromExterns();
      node2.isLabel();
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = Node.newNumber((double) 30);
      Node node2 = new Node((-2296));
      node1.addChildToFront(node0);
      node0.isCast();
      node1.getDouble();
      node2.hasChildren();
      node1.isRegExp();
      node2.isEquivalentTo(node1, false, false, true);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("\".tV?8(t@8@2%2h<");
      nodeArray0[0] = node0;
      Node node1 = new Node(55, 0, 53);
      nodeArray0[1] = node1;
      node0.isInc();
      node1.isOnlyModifiesArgumentsCall();
      node1.isUnscopedQualifiedName();
      node0.getStaticSourceFile();
      ClassLoader.getSystemClassLoader();
      node1.isHook();
      Node node2 = new Node(49);
      Node node3 = new Node(1, node1, 51, 46);
      node1.isEquivalentToShallow(node0);
      node3.addChildrenToFront(node0);
      node0.isNot();
      node2.isComma();
      node3.getBooleanProp(55);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      Node node0 = null;
      int int0 = 550;
      Node node1 = Node.newNumber(14.14174532, 1624, 550);
      // Undeclared exception!
      try { 
        node1.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newNumber(1343.4426112451167, 1323, 3000);
      node0.setSourceFileForTesting("side_effect_flags");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node_SideEffectFlags0.clearAllFlags();
      node0.isQuotedString();
      Node node1 = new Node(50, node0, 494, (-1273));
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("side_effect_flags");
      TreeSet<String> treeSet1 = new TreeSet<String>((SortedSet<String>) treeSet0);
      Node node2 = Node.newNumber((-559.0));
      Node node3 = new Node(37, node2, 85, 8);
      node2.addChildrenToBack(node1);
      node0.isSetterDef();
      node1.isOnlyModifiesThisCall();
      Node node4 = node0.detachFromParent();
      node1.getChildCount();
      node4.isFor();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Node node2 = new Node((-303), 2490, 1029);
      node2.useSourceInfoFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      Node node1 = new Node(3697, node0, node0, node0, 57, 40);
      node1.isQualifiedName();
      Node node2 = node0.srcrefTree(node0);
      node1.getLength();
      node1.hasChild(node2);
      node0.isDelProp();
      node0.isComma();
      node0.getBooleanProp(119);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = new Node(42);
      Node node1 = new Node(1, node0);
      node0.addChildrenToBack(node1);
      node0.children();
      Node node2 = new Node(217);
      node2.isSyntheticBlock();
      node0.isNot();
      // Undeclared exception!
      try { 
        node2.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newNumber((double) 24576);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node2 = new Node(115);
      node2.getProp((-2263));
      node1.isUnscopedQualifiedName();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isQualifiedName();
      node1.srcrefTree(node2);
      Node node4 = Node.newString("!V&8(bhXq?}kmF[6");
      node4.getLength();
      node1.hasChild(node4);
      node3.isStringKey();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = new Node(115);
      Node.newNumber((double) 37, 5654, 1300);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node1 = Node.newNumber((-100.5111848));
      node1.isTrue();
      Node node2 = new Node(42, node0, 39, 56);
      node1.isName();
      node2.isComma();
      node1.isLabel();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1187));
      Node node1 = new Node((-1187), node0, 85, 27591);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isIn();
      node0.getLineno();
      node1.isLocalResultCall();
      node1.getLength();
      Node node3 = Node.newString(",J*v]d>d& q4${/1Dx", 112, 102);
      Node node4 = new Node((-1639), node3, 54, 38);
      node4.removeFirstChild();
      node2.getType();
      node3.mayMutateGlobalStateOrThrow();
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.isEquivalentToShallow(node1);
      node0.getProp(1624);
      node0.getProp(3001);
      node0.putProp(48, (Object) null);
      node0.getBooleanProp(16);
      node1.putIntProp(38, 50);
      node1.isName();
      node1.isDebugger();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      node0.setSourceFileForTesting("");
      node0.isParamList();
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(48, node0, node0, node0, node0);
      Node node2 = node0.detachFromParent();
      Node node3 = node2.useSourceInfoFromForTree(node0);
      node0.isAdd();
      node0.getJSDocInfo();
      node3.isNoSideEffectsCall();
      Node node4 = Node.newString(4, "G\"94RMu", 43, 85);
      Node node5 = new Node(42, node0, node3, node4, node4);
      node3.getJSType();
      node3.toString();
      node2.isNot();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node5.isTry();
      node4.checkTreeEqualsImpl(node5);
      node3.toString(false, false, true);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node(36, node0, node0, 2, 12);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node2 = Node.newNumber(0.0);
      node1.isInc();
      node0.isWith();
      node1.isTypeOf();
      Node node3 = Node.newNumber((double) 38);
      node3.isOr();
      Node node4 = Node.newNumber((double) 40);
      node0.checkTreeEquals(node4);
      Node node5 = Node.newNumber((-725.4208154923));
      Node node6 = new Node(4127, node5, 41, (-1777));
      node6.addChildrenToBack(node4);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node7 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node7.siblings();
      node7.isSwitch();
      node2.isNoSideEffectsCall();
      Set<String> set0 = new LinkedHashSet<String>();
      node1.getJSType();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = new Node(51);
      node0.getCharno();
      node0.getAncestor(83);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newNumber(0.7, 117, 117);
      int int0 = 39;
      String string0 = "ojNP8)HN**4";
      Node node1 = Node.newString("ojNP8)HN**4");
      Node node2 = new Node(4095, node0, node1, 506, (-3346));
      node0.addChildToFront(node2);
      int int1 = 35;
      // Undeclared exception!
      try { 
        node0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = Node.newString((-3212), "$i|jW,");
      node0.getAncestors();
      Node node1 = Node.newString(4, "$i|jW,");
      InputId inputId0 = new InputId("$i|jW,");
      node1.isAdd();
      node1.isQualifiedName();
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.setSourceEncodedPositionForTree(40);
      node0.wasEmptyNode();
      node0.setVarArgs(false);
      Node node2 = node0.srcref(node1);
      node2.getJsDocBuilderForNode();
      node0.isNumber();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-2943));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3212
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Node node2 = new Node(1124, node0, node0, node0, 354, 2);
      Iterable<Node> iterable0 = new PriorityQueue<Node>();
      Node node3 = new Node(47);
      node3.srcrefTree(node1);
      node0.isSyntheticBlock();
      node2.isNot();
      Node node4 = Node.newString("B!Y* NejKvK{=?&T");
      // Undeclared exception!
      try { 
        node3.replaceChild(node4, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1187));
      Node node1 = Node.newString("*v]M.");
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node2 = Node.newNumber((double) 4095);
      node0.isSetterDef();
      node2.isNoSideEffectsCall();
      node1.isNoSideEffectsCall();
      node0.isLabel();
      Node node3 = Node.newString(113, ")mE f}R5z");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("    ");
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      String string0 = "\".tf?8(t@8@2%2h<";
      int int0 = (-109);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(27591, (Node) null, (-109), (-109));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1187));
      Node node1 = new Node((-1187), node0, 85, 27591);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isIn();
      node0.getLineno();
      node1.isLocalResultCall();
      node1.getLength();
      node0.isQualifiedName();
      Node node3 = node1.srcrefTree(node0);
      node3.getLength();
      node2.hasChild(node1);
      node2.isDelProp();
      node0.isComma();
      node3.getBooleanProp(506);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(1, node0, 49, 32);
      node1.isEquivalentTo(node0, true, true, true);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.addSuppression((String) null);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node0.isEquivalentTo(node0);
      Node node2 = new Node(2045, 54, 2);
      node0.isTrue();
      Node node3 = new Node(51, node1, node1, node1, 31, 1);
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newNumber((double) 24576);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node2 = new Node(115);
      node2.getProp((-2263));
      node1.isUnscopedQualifiedName();
      Node node3 = new Node(2252);
      Node node4 = Node.newString(54, "t4Y~T", 2, 2109808496);
      node3.isNot();
      node0.putIntProp(101, 2860);
      node2.isIn();
      node4.isTrue();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(40, node0, node0, node0, node0, 47, 42);
      node1.isEquivalentTo(node0, true, true, true);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.setJSType((JSType) null);
      node1.getSourceFileName();
      node0.isNoSideEffectsCall();
      node1.isNoSideEffectsCall();
      node0.isLabel();
      Node node2 = Node.newString(8, ")mE f)RH");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      // Undeclared exception!
      try { 
        node2.toString(true, true, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 8
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = Node.newNumber((double) 24576);
      node0.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node1 = new Node(115);
      node1.getProp((-2263));
      node0.isUnscopedQualifiedName();
      Node node2 = new Node(2252);
      node2.getSourceFileName();
      node2.isNot();
      node1.isNull();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      Node.newString("B!Y* NejKvK{=?&T");
      Node.newString("B!Y* NejKvK{=?&T");
      Node node2 = Node.newNumber((double) 53, 1625, 53);
      node0.isBlock();
      node2.isParamList();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[4];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      Node node0 = jSTypeRegistry1.createParameters(jSTypeArray0);
      Node node1 = Node.newNumber(2847.6661154557178);
      node0.isRegExp();
      // Undeclared exception!
      try { 
        node1.isEquivalentTo((Node) null, true, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      String string0 = "iz";
      Node node0 = Node.newString("iz", 0, (-358));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      Node node1 = new Node(1);
      int int0 = (-2454);
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newString((-3212), "$i|jW,");
      node0.getAncestors();
      Node node1 = Node.newString(4, "$i|jW,");
      InputId inputId0 = new InputId("$i|jW,");
      node1.isAdd();
      node1.isQualifiedName();
      node0.getAncestor(108);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.setSourceEncodedPositionForTree(40);
      node0.wasEmptyNode();
      node0.setVarArgs(false);
      Node node2 = node0.srcref(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node0.isNumber();
      node_FileLevelJsDocBuilder0.append("$i|jW,");
      Node.newString(53, "$i|jW,");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append(")mE f)RH");
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, (-358));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      Node node1 = new Node(1);
      Node node2 = Node.newString("iz", 4, (-2454));
      node0.isAssignAdd();
      Node node3 = new Node(105);
      node0.addChildrenToFront(node2);
      node1.isNot();
      node2.isInstanceOf();
      node2.toString();
      node3.isAnd();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      Node node2 = Node.newString("B!Y* NejKvK{=?&T", 55, 37);
      node2.isWith();
      node0.getJSDocInfo();
      Node.mergeLineCharNo(30, 6263);
      Node node3 = new Node(57, node0, node0, node1, node2);
      node1.checkTreeEqualsImpl(node3);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node1);
      node_NodeMismatch0.equals(unaryOperator0);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newString("a$rac0b<hS");
      TreeSet<String> treeSet0 = new TreeSet<String>();
      TreeSet<String> treeSet1 = new TreeSet<String>();
      treeSet1.add("");
      Node node1 = Node.newString(13, "com.google.common.collect.SingletonImmutableList");
      node0.setCharno(2475);
      Node node2 = Node.newNumber((double) 4095);
      Node node3 = new Node(42, node2, 38, 1);
      node2.addChildrenToBack(node1);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node0.isIf();
      node1.getLineno();
      node3.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1624, 1624, 558);
      Node node1 = new Node(1624, node0, node0);
      node0.setDouble(56);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.addSuppression((String) null);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node0.isEquivalentTo(node0);
      Node node2 = new Node(2045, 54, 2);
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2045
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(115);
      node0.getProp(1300);
      node0.getProp(48);
      Node node1 = new Node(52, node0, node0);
      node1.putProp(49, (Object) null);
      node1.getBooleanProp(16);
      node1.isQuotedString();
      node0.putIntProp((-1020), 29);
      node0.isIn();
      node1.siblings();
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Node node2 = Node.newNumber((-2326.875645359161), 147, 52);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node3 = Node.newNumber((-1498.6991701403983));
      Node node4 = new Node(38, node3, node2, node2, node1, Integer.MIN_VALUE, 37);
      node2.isName();
      node1.isComma();
      Node node5 = null;
      try {
        node5 = new Node(53, node0, node0, node4, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(24576);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node2 = new Node(115);
      node2.getProp((-2287));
      node1.isUnscopedQualifiedName();
      Node node3 = new Node(2252);
      node3.isNot();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node4 = new Node(51, nodeArray0);
      node4.isDo();
      node2.isNull();
      node3.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newString("P,/*m{B");
      node0.removeProp(52);
      Node node1 = new Node(48, node0, node0, node0);
      node0.isTrue();
      node0.isQuotedString();
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, (-358));
      Stack<JSType> stack0 = new Stack<JSType>();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      Node node1 = Node.newString("com.google.common.collect.ImmutableCollection", 120, 31);
      Node node2 = Node.newNumber(24576.0);
      Node node3 = new Node(124, node2);
      node2.isContinue();
      Node node4 = node3.cloneNode();
      node1.mayMutateGlobalStateOrThrow();
      node4.addChildrenToFront(node0);
      node3.getIntProp(2);
      try { 
        node2.setString("iz");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 24576.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      InputId inputId0 = new InputId("");
      node0.isAdd();
      node0.isQualifiedName();
      Node node1 = new Node(4, node0, node0, 43, 37);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceEncodedPositionForTree((-2454));
      node2.wasEmptyNode();
      node2.setVarArgs(false);
      Node node3 = node0.srcref(node1);
      node1.getJsDocBuilderForNode();
      node3.isNumber();
      Node.newString(42, "B!Y* NejKvK{=?&T");
      node3.isBreak();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Node node2 = node0.clonePropsFrom(node1);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("gMW|", true);
      SimpleSourceFile simpleSourceFile1 = new SimpleSourceFile("gMW|", true);
      node1.children();
      node1.setStaticSourceFile(simpleSourceFile1);
      node1.putBooleanProp((-241), true);
      node1.isOnlyModifiesThisCall();
      Node node3 = node0.useSourceInfoFromForTree(node1);
      Node.newNumber(1.0);
      node3.isNew();
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      String string0 = "B!Y* NejKvK{=?&T";
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      Node node1 = new Node(51);
      Node node2 = Node.newString("B!Y* NejKvK{=?&T", (-3139), (-815));
      node2.isAssignAdd();
      Node node3 = new Node(1);
      node2.addChildrenToFront(node1);
      node0.isNot();
      node0.isVar();
      node2.isTrue();
      node3.isQualifiedName();
      node3.isTry();
      int int0 = (-2916);
      int int1 = 1323;
      Node node4 = null;
      try {
        node4 = new Node(4095, (Node[]) null, 42, (-1674));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = Node.newString(4480, "com.google.javascript.rhino.Node$NodeMismatch");
      node0.isArrayLit();
      InputId inputId0 = new InputId("com.google.common.collect.UnmodifiableListIterator");
      node0.isAdd();
      node0.isQualifiedName();
      Node node1 = new Node(51, node0, node0);
      Node node2 = new Node(12, node1, node1, 48, 16);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node0.setSourceEncodedPositionForTree(57);
      node0.wasEmptyNode();
      node2.setVarArgs(false);
      Node node4 = node3.srcref(node1);
      node1.getJsDocBuilderForNode();
      node4.isNumber();
      Node.newString(133, "com.google.javascript.rhino.Node$NodeMismatch");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      InputId inputId0 = new InputId("");
      node0.isAdd();
      node0.isQualifiedName();
      Node node1 = new Node(4, node0, node0, 43, 37);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceEncodedPositionForTree((-2454));
      node2.wasEmptyNode();
      node2.setVarArgs(false);
      Node node3 = node0.srcref(node1);
      node3.isSyntheticBlock();
      node1.getJsDocBuilderForNode();
      node3.isNumber();
      Node.newString(42, "B!Y* NejKvK{=?&T");
      node2.isReturn();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.getProp(1624);
      node0.getStaticSourceFile();
      node0.getProp(2239);
      node0.putProp(48, (Object) null);
      Node node2 = Node.newString(35, "B!Y* NejKvK{=?&T");
      node0.setCharno(49);
      node2.addSuppression("B!Y* NejKvK{=?&T");
      Node node3 = Node.newNumber((double) 54);
      Node node4 = new Node(4095, node0, (-1), 1308);
      node1.addChildrenToBack(node4);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isGetterDef();
      node2.getLineno();
      node2.useSourceInfoIfMissingFrom(node4);
      node3.hasOneChild();
      node1.isUnscopedQualifiedName();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 152);
      String string0 = "ojNP8)HN**4";
      Node.newString("ojNP8)HN**4");
      Node node1 = new Node((-1012), node0, node0, 2, 4);
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(709, node0, node0, node0, 674, 31);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.setSourceFileForTesting("Zn\"n/5beG+o!");
      node0.setLineno(217);
      Node node3 = new Node(132, 49, 126);
      Node node4 = node3.useSourceInfoFromForTree(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node5 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node4.isSwitch();
      node5.setLineno(12);
      node3.isCall();
      node2.getDirectives();
      node0.addChildrenToFront(node5);
      try { 
        node0.setString("CharMatcher.NONE");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 1.2 217 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = new Node(565);
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node2 = new Node(1, 38, 1073741823);
      Node node3 = node0.useSourceInfoFromForTree(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node4 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.isSwitch();
      node4.addChildrenToBack(node0);
      node1.isCall();
      node4.getDirectives();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 38 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.getLength();
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      node1.setLineno(56);
      Node node2 = new Node(0);
      Node node3 = Node.newString("Zn\"n/5beG+o!");
      node0.copyInformationFrom(node3);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType[] jSTypeArray0 = new JSType[0];
      node1.isSwitch();
      node0.isNoSideEffectsCall();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newString("P,/*m{B");
      node0.removeProp((-2129));
      node0.getDirectives();
      Node node1 = Node.newNumber((double) 36);
      node0.isTrue();
      node0.toString(false, false, false);
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      Node node1 = Node.newString("second new child has existing parent");
      node1.getSideEffectFlags();
      Node node2 = new Node(114);
      node0.isEquivalentToShallow(node1);
      node0.getProp(132);
      node0.getProp(1);
      node2.putProp((-1777), node1);
      node1.getBooleanProp(573);
      node0.putIntProp(1, 37);
      node2.isThrow();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node node0 = Node.newString(51, "");
      node0.isArrayLit();
      Node node1 = Node.newString("oK/_");
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node node3 = Node.newString("oK/_");
      node_SideEffectFlags7.clearAllFlags();
      node_SideEffectFlags0.valueOf();
      node2.isLocalResultCall();
      node1.getJSType();
      node0.isBreak();
      node3.isVoid();
      Node.extractLineno(52);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1187));
      Node node1 = new Node((-1187), node0, 85, 27591);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isIn();
      node0.getLineno();
      node1.isLocalResultCall();
      node1.getLength();
      node0.isQualifiedName();
      Node node3 = node1.srcrefTree(node0);
      node3.getLength();
      node2.hasChild(node1);
      node2.isIf();
      node0.getLineno();
      node1.useSourceInfoIfMissingFrom(node3);
      node2.hasOneChild();
      node1.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, (-358));
      Node node1 = Node.newString(30, "iz", 53, 40);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isIn();
      node2.getLineno();
      node0.isLocalResultCall();
      node1.getLength();
      node2.isQualifiedName();
      Node node3 = node2.srcrefTree(node0);
      node1.getLength();
      node2.hasChild(node3);
      node0.isDelProp();
      Node node4 = new Node(15, node1);
      node4.addChildAfter(node0, node3);
      node4.isComma();
      node0.getBooleanProp(2564);
      node2.isCall();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = new Node((-2115));
      Node node1 = new Node(194, node0, node0, node0, (-2643), (-1006));
      node1.getChildBefore(node0);
      node0.putIntProp(745, 54);
      Node node2 = Node.newString(37, "B!Y* NejKvK{=?&T", 2872, 1584);
      node2.isTrue();
      node0.isInc();
      node1.isDo();
      node2.isNot();
      node2.isRegExp();
      node1.getAncestors();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(110);
      Node node2 = node1.clonePropsFrom(node0);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("gMW|", true);
      node2.getChangeTime();
      ArrayList<Node> arrayList0 = new ArrayList<Node>(88);
      SimpleSourceFile simpleSourceFile1 = new SimpleSourceFile("gMW|", true);
      node0.setStaticSourceFile(simpleSourceFile1);
      node2.isOnlyModifiesThisCall();
      Node node3 = node1.useSourceInfoFromForTree(node2);
      Node.newNumber((double) 51);
      node2.isNew();
      node0.getSourceOffset();
      try { 
        node3.setDouble(31);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SWITCH is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newNumber(82.0055256585);
      node0.isLocalResultCall();
      node0.mayMutateArguments();
      Node node1 = Node.newString("");
      node1.setWasEmptyNode(true);
      node1.toString();
      Node node2 = new Node(37, node1, node1, node1);
      node1.getLength();
      node0.addChildToFront(node2);
      Node.extractCharno(16);
      node1.cloneTree();
      Node node3 = Node.newString(15, "", (-1455), 8);
      Node node4 = null;
      try {
        node4 = new Node(18, node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node2 = new Node(1, 38, 1073741823);
      Node node3 = node0.useSourceInfoFromForTree(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node4 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.getSourceFileName();
      node3.useSourceInfoIfMissingFromForTree(node0);
      node3.checkTreeTypeAwareEqualsImpl(node2);
      node2.cloneTree();
      node4.isString();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, (-358));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      node0.siblings();
      node0.getProp((-2839));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString(57, "Po2Pwa]kWSpZy", 15, 53);
      node0.addChildrenToFront(node1);
      node1.getIntProp((-2035));
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = new Node((-358));
      Node node1 = Node.newString("", 126, 52);
      node1.isAssignAdd();
      Node node2 = new Node(43);
      node0.addChildrenToFront(node1);
      node0.isNot();
      node1.isVar();
      node1.isTrue();
      node0.isNE();
      node0.isTry();
      Node node3 = null;
      try {
        node3 = new Node(1, node1, node0, 15, 37);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      UnaryOperator.identity();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      Stack<JSType> stack0 = new Stack<JSType>();
      UnaryOperator<JSType> unaryOperator1 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator1);
      Node node1 = new Node(1621, node0, node0, node0, 57, 49);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isQualifiedName();
      Node node3 = node0.srcrefTree(node2);
      node0.hasChild(node1);
      Node node4 = null;
      try {
        node4 = new Node(4095, node0, node3, node0, 32, 102);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newString("Uk:gR|", 87855567, 87855567);
      node0.isString();
      Node node1 = Node.newString(39, "Uk:gR|", 39, 607);
      node1.mayMutateArguments();
      node1.setVarArgs(true);
      node1.type = 307;
      node0.wasEmptyNode();
      node0.isNE();
      node0.isNumber();
      node0.isDelProp();
      try { 
        node0.setDouble(87855567);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING Uk:gR| 823759 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(755);
      node0.isCatch();
      Vector<Node> vector0 = new Vector<Node>(49, 1367);
      node0.getProp((-920846337));
      node1.getBooleanProp(54);
      Node node2 = new Node(41, (-3795), 53);
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      Node node2 = Node.newString("B!Y* NejKvK{=?&T");
      node2.checkTreeEquals(node0);
      Node node3 = Node.newNumber((double) 53, 1625, 53);
      node0.isBlock();
      node1.getIntProp(42);
      node3.isParamList();
      node3.isGetProp();
      node3.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, (-358));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      node0.siblings();
      node0.getProp((-2839));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString(57, "Po2Pwa]kWSpZy", 15, 53);
      node0.addChildrenToFront(node1);
      node1.getIntProp((-2035));
      node0.setSourceFileForTesting("iz");
      node1.getLineno();
      node1.getSourceFileName();
      node0.setVarArgs(false);
      node0.isQuotedString();
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 57
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      int int0 = Node.DIRECT_EVAL;
      Node node1 = new Node(43);
      node0.isCatch();
      Vector<Node> vector0 = new Vector<Node>(4095, 0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      TreeSet<String> treeSet1 = new TreeSet<String>((SortedSet<String>) treeSet0);
      treeSet1.add("Ke*o1LV2YdSRDh");
      node1.setDirectives(treeSet1);
      node1.isComma();
      node1.isExprResult();
      node0.getAncestors();
      Node node2 = new Node(55, node1, node1, node0);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.getProp(1624);
      node0.getProp(3001);
      node0.putProp(48, (Object) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = node1.cloneTree();
      node3.isString();
      node3.isWhile();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = new Node(42);
      node0.children();
      Node node1 = new Node(46);
      node1.isSyntheticBlock();
      node1.getJSDocInfo();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isQualifiedName();
      node2.srcrefTree(node0);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newNumber(82.0055256585);
      node0.isLocalResultCall();
      node0.mayMutateArguments();
      Node node1 = Node.newString("");
      node1.setWasEmptyNode(true);
      node1.toString();
      Node node2 = new Node(37, node1, node1, node1);
      node1.getLength();
      node0.addChildToFront(node2);
      Node.extractCharno(16);
      node2.getProp(37);
      node1.putProp(1787, node2);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      node2.isEquivalentTo(node3);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.cloneTree();
      node3.isString();
      node2.isWhile();
      node1.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      InputId inputId0 = new InputId("");
      node0.isAdd();
      node0.isQualifiedName();
      Node node1 = new Node(4, node0, node0, 43, 37);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isEquivalentTo(node1, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((List<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      vector0.replaceAll(unaryOperator0);
      Node node1 = new Node(3697, node0, node0, node0, 57, 40);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isQualifiedName();
      Node node3 = node0.srcrefTree(node2);
      node1.hasChild(node3);
      vector0.parallelStream();
      node3.isStringKey();
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.isCatch();
      Vector<Node> vector0 = new Vector<Node>(4095, 0);
      node0.cloneTree();
      node0.getProp(3001);
      node0.getBooleanProp(16);
      Node node2 = new Node(57, 46, 11);
      node1.isGetterDef();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = new Node(3469, (-2977), 0);
      node0.isInc();
      node0.isOnlyModifiesArgumentsCall();
      node0.isUnscopedQualifiedName();
      node0.getStaticSourceFile();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ClassLoader.getSystemClassLoader();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseBooleanType();
      node0.isScript();
      node0.isWhile();
      Node node1 = new Node(49, node0);
      node0.getIndexOfChild(node1);
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      int int0 = 102;
      Node.mergeLineCharNo(49, 102);
      Node node0 = Node.newNumber((-1199.978513241621), (-161), 49);
      int int1 = 9;
      int int2 = 57;
      node0.getInputId();
      Node node1 = Node.newNumber((double) 57, 26, (-890));
      node1.addChildToBack(node0);
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.copyInformationFromForTree(node0);
      node0.setLineno(57);
      Node node1 = new Node((-1646), 8, 29);
      node1.useSourceInfoFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.isEquivalentToShallow(node1);
      Node node2 = Node.newNumber(0.0);
      node0.isInc();
      node1.isWith();
      node2.isRegExp();
      Node node3 = Node.newNumber(747.65562);
      node3.isOr();
      Node node4 = Node.newNumber((-1498.6991701403983));
      node2.checkTreeEquals(node4);
      // Undeclared exception!
      try { 
        node3.removeChild(node4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      node0.setIsSyntheticBlock(true);
      Node node2 = Node.newString("B!Y* NejKvK{=?&T", 55, 37);
      Node node3 = Node.newNumber((-1.0));
      Node node4 = new Node(153, node3);
      node1.isContinue();
      Node node5 = node4.cloneNode();
      node0.mayMutateGlobalStateOrThrow();
      node2.setVarArgs(false);
      node5.isSyntheticBlock();
      node4.getJsDocBuilderForNode();
      node3.isNumber();
      Node.newString(38, "B!Y* NejKvK{=?&T");
      node5.isReturn();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      InputId inputId0 = new InputId("");
      node0.isAdd();
      node0.isQualifiedName();
      Node node1 = new Node(4, node0, node0, 43, 37);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceEncodedPositionForTree((-2454));
      node2.wasEmptyNode();
      node2.addChildrenToFront(node1);
      node1.getIntProp((-807));
      node0.setString("");
      node1.getLength();
      node2.hasChild(node1);
      node0.checkTreeEquals(node1);
      node2.isDelProp();
      int int0 = 3123;
      node1.getIntProp(int0);
      node1.isComma();
      int int1 = (-2341);
      node1.getBooleanProp(int1);
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.getAncestors();
      Node node1 = Node.newString("b@fTg' Aewz'5!t&7");
      node0.hasOneChild();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isWhile();
      node0.isObjectLit();
      node0.isUnscopedQualifiedName();
      node0.isBlock();
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.isVar();
      node2.siblings();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.addChildToBack(node1);
      node0.setChangeTime((-1304));
      node0.isFromExterns();
      node2.copyInformationFrom(node0);
      node2.getJSType();
      node1.isAdd();
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(111);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 111
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(42);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseBooleanType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.putIntProp(42, 1);
      node0.isIn();
      node0.addSuppression("^),j@#lfveys714");
      node0.isAssignAdd();
      node0.isIf();
      try { 
        node0.setDouble(0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THIS [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000672] [side_effect_flags: com.google.javascript.rhino.Node$IntPropListItem@0000000670] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newString((-96), "RANGE_ERROR_TYPE");
      Node node1 = new Node((-3671), node0, node0, 116, 43);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1374));
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.areAllFlagsSet();
      Node.newNumber(0.0);
      node1.isInc();
      node1.isWith();
      node1.isRegExp();
      Node node2 = Node.newNumber(2847.6661154557178);
      node2.isOr();
      Node node3 = Node.newNumber((double) 47);
      // Undeclared exception!
      try { 
        node3.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3671
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(37, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(153, node0);
      Node node2 = node1.cloneNode();
      node2.isSyntheticBlock();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node0.isNumber();
      node2.isReturn();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = new Node(2347, 53, 3697);
      InputId inputId0 = new InputId("Object#Key");
      node0.setInputId(inputId0);
      node1.getProp(1837);
      // Undeclared exception!
      try { 
        node1.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      Node node2 = new Node(0, 53, 86);
      node2.isIn();
      node1.getLineno();
      node1.isLocalResultCall();
      Node node3 = new Node(122);
      node3.getLength();
      node0.isQualifiedName();
      Node node4 = node2.srcrefTree(node0);
      node4.getLength();
      node2.hasChild(node3);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseAllType();
      jSTypeArray0[0] = jSType0;
      node4.isDelProp();
      Node node5 = new Node(12, node4);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node3, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = new Node(42);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isContinue();
      Node node1 = node0.cloneNode();
      node0.mayMutateGlobalStateOrThrow();
      node1.setVarArgs(false);
      node0.isSyntheticBlock();
      node1.getJsDocBuilderForNode();
      node1.isNumber();
      JSType jSType1 = modificationVisitor0.caseNumberType();
      jSType0.testForEquality(jSType1);
      Node node2 = Node.newString(123, " NXS@psXZ9zaH,I[;");
      node2.isReturn();
      Node.newString("Unknown class name", 124, 4);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Node node2 = node0.clonePropsFrom(node1);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      node2.setSourceEncodedPositionForTree(39);
      node1.wasEmptyNode();
      Node node3 = node2.srcref(node1);
      node2.isSyntheticBlock();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      node3.isNumber();
      Node node4 = Node.newString((-2867), "gMW|");
      node4.isReturn();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      InputId inputId0 = new InputId("");
      node0.isAdd();
      node0.isQualifiedName();
      Node node1 = new Node(4, node0, node0, 43, 37);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("B!Y* NejKvK{=?&T", false);
      node2.getChangeTime();
      ArrayList<Node> arrayList0 = new ArrayList<Node>(32);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoFromForTree(node2);
      // Undeclared exception!
      try { 
        node3.setSideEffectFlags(29);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got RETURN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newNumber(1343.4426112451167, 1323, 3000);
      node0.setSourceFileForTesting("side_effect_flags");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node_SideEffectFlags0.clearAllFlags();
      node0.isQuotedString();
      Node node1 = new Node(50, node0, 494, (-1273));
      node1.getLength();
      node1.hasChild(node0);
      Node node2 = new Node(4, node1);
      node2.isIf();
      node1.getLineno();
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      node2.hasOneChild();
      node3.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node3.getChildAtIndex(50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      node0.getDirectives();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getInputId();
      node0.setInputId((InputId) null);
      jSDocInfo0.setLicense("Kz2Jr MMTx@");
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, (-358));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      Node node1 = new Node(1);
      Node node2 = Node.newString("iz", 4, (-2454));
      node0.isAssignAdd();
      Node node3 = new Node(57, node2);
      node3.hasChild(node0);
      node3.isDelProp();
      node1.isComma();
      node1.isBlock();
      Node node4 = Node.newString("");
      node4.setLineno(2);
      node1.isParamList();
      node3.isFalse();
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      Node node1 = new Node(1);
      Node node2 = Node.newString("iz", 2, 30);
      node0.isAssignAdd();
      Node node3 = new Node(105);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isIf();
      node3.getLineno();
      node1.useSourceInfoIfMissingFrom(node0);
      node2.hasOneChild();
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = new Node((-2115));
      InputId inputId0 = new InputId((String) null);
      node0.isAdd();
      node0.isQualifiedName();
      Node node1 = new Node(21, node0, node0, 57, 87855567);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.setSourceEncodedPositionForTree(3697);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(719, nodeArray0, 1024, 48);
      node3.wasEmptyNode();
      Node node4 = Node.newNumber((-1.0), 1, 2);
      node0.srcref(node4);
      node4.isSyntheticBlock();
      node4.getJsDocBuilderForNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node5 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node5.isNumber();
      Node.newString(33, "Object#Element");
      node1.isAdd();
      node5.isNot();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.isEquivalentToShallow(node1);
      node1.srcrefTree(node0);
      node0.getProp(36);
      node0.getProp(3001);
      node0.putProp(48, (Object) null);
      node0.getBooleanProp(16);
      node1.putIntProp(38, 50);
      node1.isThrow();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      node0.setIsSyntheticBlock(true);
      Node node2 = Node.newString("B!Y* NejKvK{=?&T", 55, 37);
      node1.cloneNode();
      node1.isSyntheticBlock();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node0.isNumber();
      node2.isReturn();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      node1.getSourceFileName();
      UnaryOperator.identity();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(")] ?(!d=a", false);
      node1.getChangeTime();
      ArrayList<Node> arrayList0 = new ArrayList<Node>(32);
      node0.setStaticSourceFile(simpleSourceFile0);
      node1.useSourceInfoFromForTree(node0);
      Node node2 = Node.newNumber(1.0);
      node0.isNew();
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, (-358));
      node0.setSourceFileForTesting("Zn\"n/5beG+o!");
      node0.setLineno(1291);
      Node node1 = new Node(43, 50, 1323);
      Node node2 = new Node(38, node0, node1);
      node2.useSourceInfoFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.isEquivalentToShallow(node1);
      Node node2 = node1.srcrefTree(node0);
      node0.getProp(36);
      node0.getProp(3001);
      node0.putProp(48, (Object) null);
      node0.getBooleanProp(16);
      node1.putIntProp(38, 50);
      node2.isRegExp();
      node2.getAncestors();
      Node node3 = node1.getLastSibling();
      node3.isNew();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      nodeArray0[0] = node1;
      node1.setVarArgs(true);
      node1.isQuotedString();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      int int0 = 434;
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = new Node(31, 36, 48);
      node0.getProp(46);
      node0.isFunction();
      Node node2 = null;
      // Undeclared exception!
      try { 
        node0.addChildrenAfter((Node) null, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(709, node0, node0, node0, 659, 31);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node3 = new Node(132, 49, 126);
      Node node4 = node3.useSourceInfoFromForTree(node2);
      node4.setSourceEncodedPosition(8);
      // Undeclared exception!
      try { 
        node4.getSourceOffset();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number 0
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      int int0 = (-1187);
      Node node0 = Node.newNumber((double) (-1187));
      int int1 = 85;
      // Undeclared exception!
      try { 
        node0.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = new Node(56);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isParamList();
      Node node1 = Node.newString("Object#Element");
      node1.isInc();
      node1.isDo();
      node1.isNot();
      node1.isRegExp();
      node1.getAncestors();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseBooleanType();
      Node node0 = Node.newString("unexpected prop id ");
      node0.getLastChild();
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.getSideEffectFlags();
      Stack<JSType> stack0 = new Stack<JSType>();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator0);
      Node node1 = Node.newString("");
      Node node2 = new Node(36, node1, 43, 55);
      node0.isBlock();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node3.isLabel();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = new Node((-2115));
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("G~PIGrpgkYWg,=oN", true);
      node0.getChangeTime();
      ArrayList<Node> arrayList0 = new ArrayList<Node>(0);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node(36, node0, node0, 2, 12);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node2 = Node.newNumber((double) 15);
      node1.isInc();
      node2.mayMutateGlobalStateOrThrow();
      node1.isTypeOf();
      Node node3 = Node.newNumber((double) 38);
      node0.isOr();
      Node node4 = Node.newNumber((double) 40);
      node0.checkTreeEquals(node4);
      Node node5 = Node.newNumber((-725.4208154923));
      node3.getStaticSourceFile();
      Node node6 = new Node(4127, node5, 41, (-1777));
      node6.addChildrenToBack(node4);
      node6.isComma();
      node6.isBlock();
      Node.newString("Node tree inequality:\nTree1:\nFALSE RANGE_ERROR_TYPE\n\n\nTree2:\nNUMBER 40.0\n\n\nSubtree1: FALSE RANGE_ERROR_TYPE\n\n\nSubtree2: NUMBER 40.0\n");
      node1.isParamList();
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      nodeArray0[0] = node1;
      node1.setChangeTime(1);
      node1.isInstanceOf();
      node0.toString();
      node0.isAnd();
      node0.toString(true, false, true);
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      node1.siblings();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.addChildToBack(node0);
      node1.setChangeTime(38);
      Node node2 = null;
      try {
        node2 = new Node(46, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(153, node0);
      Node node2 = Node.newNumber((double) 16);
      Node node3 = new Node(52, node2);
      node3.isContinue();
      Node node4 = node1.cloneNode();
      Node node5 = Node.newString("lRAi8+eod8DH#9)l");
      node5.mayMutateGlobalStateOrThrow();
      node4.isInc();
      Node node6 = new Node(46, node5, node3, node5, node3);
      node4.isDo();
      node3.isNot();
      node0.mayMutateGlobalStateOrThrow();
      node0.getAncestors();
      node6.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = new Node(42, 42, 42);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseBooleanType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.putIntProp(42, 1);
      node0.isIn();
      node0.isFromExterns();
      node0.setSourceEncodedPosition(1);
      node0.isNoSideEffectsCall();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node node1 = Node.newString("Unknown class name");
      node1.getJSType();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newNumber(2386.857);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node0.isIn();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.isSyntheticBlock();
      try { 
        node0.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 2386.857 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(709, node0, node0, node0, (-1992), 31);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.iterator();
      node1.getBooleanProp(15);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 1.2 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = Node.newNumber(3591.592249769, (-2772), (-2772));
      Node node1 = Node.newString(51, "r");
      Node node2 = new Node(37, node1, node0);
      node1.isOnlyModifiesThisCall();
      node2.getStaticSourceFile();
      node0.checkTreeEquals(node2);
      node0.type = (-2772);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(52);
      node2.srcref(node1);
      node0.isLocalResultCall();
      node2.isNull();
      node2.isDo();
      node2.getBooleanProp((-2772));
      Node.extractLineno(52);
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      // Undeclared exception!
      try { 
        node3.getExistingIntProp(37);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 37
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newString(" is not a number node", 52, 52);
      node0.isNot();
      int int0 = Node.DIRECTIVES;
      Node node1 = new Node(43, node0, node0, node0, node0, 16, 461845907);
      node0.addSuppression(" is not a number node");
      node1.isSwitch();
      node0.isCall();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node node2 = Node.newString("aOUy=@P|do^F&", 56, 52);
      node2.getString();
      node2.putProp(185, (Object) null);
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(379);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 379
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      Node node2 = new Node(1178, node0, node1, node1, node1, 46, 29);
      node0.isName();
      node2.removeFirstChild();
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newString(306, "B!Y* NejKvK{=?&T", 306, 306);
      Node node1 = new Node(147, node0, node0, node0, 2, 1);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Locale locale0 = Locale.PRC;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node2.setDirectives(set0);
      Node node3 = new Node(494);
      node0.addChildToFront(node3);
      node0.isRegExp();
      node0.getSourcePosition();
      node3.isThrow();
      node2.isGetElem();
      node3.mayMutateArguments();
      node2.mayMutateArguments();
      node0.getSourceOffset();
      node3.isInstanceOf();
      node2.isThrow();
      node3.isOnlyModifiesArgumentsCall();
      node1.mayMutateGlobalStateOrThrow();
      node1.isIf();
      node2.isQuotedString();
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1187));
      Node node1 = new Node((-1187), node0, 85, 27591);
      node1.isIn();
      node0.getLineno();
      node1.isLocalResultCall();
      Node node2 = new Node(0, 105, (-386));
      Node node3 = node0.useSourceInfoFromForTree(node0);
      node3.setSourceEncodedPosition(51);
      node3.getSourceOffset();
      node1.isSwitch();
      node0.setLineno(21);
      node0.isCall();
      node0.getDirectives();
      node0.addChildrenToFront(node1);
      node1.isTrue();
      node0.removeChildren();
      node0.checkTreeTypeAwareEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = new Node(24576);
      node0.copyInformationFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node2 = new Node(154, 125, 12);
      node1.getProp(1023);
      node0.isFunction();
      String string0 = "utE^tl<wG`J|K";
      Node.newString("Unknown class name", 42, 15);
      // Undeclared exception!
      try { 
        JSType.toMaybeFunctionType((JSType) templateType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ProxyObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node node0 = Node.newString(66, "");
      node0.isArrayLit();
      Node node1 = Node.newString("oK/_");
      Node node2 = new Node(39, node1, node0, node1, node0, 57, (-595));
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node3.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags7.clearSideEffectFlags();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags8.setMutatesGlobalState();
      Node node4 = Node.newString("");
      node_SideEffectFlags5.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags9 = node_SideEffectFlags8.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags10 = node_SideEffectFlags9.clearAllFlags();
      node_SideEffectFlags10.valueOf();
      node4.isLocalResultCall();
      Node node5 = null;
      try {
        node5 = new Node(8, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.isEquivalentToShallow(node1);
      Node node2 = node1.srcrefTree(node0);
      node0.getProp(36);
      node0.getProp(3001);
      node0.putProp(48, (Object) null);
      node2.copyInformationFromForTree(node0);
      node0.getBooleanProp(16);
      node1.putIntProp(38, 8);
      node2.isRegExp();
      node2.getAncestors();
      node1.isNew();
      node2.isIf();
      MockFile mockFile0 = new MockFile("*A");
      mockFile0.setReadable(false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      node0.appendStringTree(mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b@fTg' Aewz'5!t&7");
      node0.setCharno((-2225));
      Node node1 = null;
      try {
        node1 = new Node((-1953), node0, node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      Node.newString("B!Y* NejKvK{=?&T");
      Node node2 = Node.newNumber((double) 53, 1625, 53);
      node0.isBlock();
      node1.getIntProp(42);
      node2.isParamList();
      node2.isGetProp();
      node1.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = new Node((-2820));
      node0.children();
      Node node1 = new Node(29);
      node0.isSyntheticBlock();
      node1.getJSDocInfo();
      Node node2 = Node.newNumber(1202.884536, 36, 662);
      node1.isBlock();
      node2.getIntProp(4095);
      node2.isParamList();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      Node node0 = Node.newNumber(141.0);
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      nodeArray0[0] = node1;
      node1.setChangeTime(57);
      node1.isInstanceOf();
      node1.toString();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      UnaryOperator.identity();
      Node node1 = new Node(3697, node0, node0, node0, 57, 40);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isQualifiedName();
      Node node2 = node0.srcrefTree(node0);
      int int0 = Node.SLASH_V;
      node1.hasChild(node2);
      node0.isDelProp();
      node2.isNot();
      node0.putProp(42, vector0);
      node1.isVar();
      Node node3 = new Node(317, 36, (-190));
      node1.isTrue();
      node3.getJSType();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      InputId inputId0 = new InputId("");
      node0.isAdd();
      node0.isQualifiedName();
      Node node1 = new Node(4, node0, node0, 43, 37);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isEquivalentTo(node1, true, false, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.getJsDocBuilderForNode();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node2.getSourceFileName();
      node2.mayMutateArguments();
      node2.isThis();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newString(306, "B!Y* NejKvK{=?&T", 306, 306);
      Node node1 = new Node(147, node0, node0, node0, 2, 1);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Locale locale0 = Locale.PRC;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node2.setDirectives(set0);
      Node node3 = new Node(494);
      node0.addChildToFront(node3);
      node0.isRegExp();
      node0.getSourcePosition();
      node3.isThrow();
      node2.isGetElem();
      node0.addSuppression("second new child has existing parent");
      node3.isAssignAdd();
      node1.isAdd();
      node1.isNot();
      node3.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      nodeArray0[0] = node1;
      Node node2 = new Node((-665));
      node2.isDelProp();
      node0.isComma();
      node0.getBooleanProp((-3313));
      node1.isAssign();
      node1.isReturn();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newNumber(1343.4426112451167, 1323, 3000);
      node0.setSourceFileForTesting("side_effect_flags");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node node1 = Node.newNumber((-1042.084584246389));
      Node node2 = new Node((-2487), node0);
      node0.isSyntheticBlock();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node2.isNumber();
      node2.mayMutateGlobalStateOrThrow();
      node0.isReturn();
      node2.hasMoreThanOneChild();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-1127), nodeArray0);
      node0.isSyntheticBlock();
      node0.isDelProp();
      node0.siblings();
      node0.isRegExp();
      node0.isUnscopedQualifiedName();
      node0.siblings();
      Node node1 = new Node((-1318), nodeArray0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node0.getProp(375);
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      UnaryOperator.identity();
      Node node1 = new Node(3697, node0, node0, node0, 57, 40);
      node1.isQualifiedName();
      Node node2 = node0.srcrefTree(node0);
      int int0 = Node.SLASH_V;
      node1.hasChild(node2);
      node0.isDelProp();
      node2.isNot();
      node1.getIntProp(4);
      node0.isParamList();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.getSideEffectFlags();
      Stack<JSType> stack0 = new Stack<JSType>();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator0);
      Node node1 = Node.newString("");
      Node node2 = new Node(51, node0, node1, 49, 1);
      node0.isBlock();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node3.isLabel();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      UnaryOperator.identity();
      Node node1 = new Node(3697, node0, node0, node0, 57, 40);
      node1.isDec();
      Node node2 = node0.srcrefTree(node0);
      int int0 = Node.SLASH_V;
      node1.hasChild(node2);
      node0.isDelProp();
      node2.isNot();
      node0.isWhile();
      node0.isTrue();
      node2.isQualifiedName();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      nodeArray0[0] = node1;
      node1.setChangeTime(57);
      Node node2 = new Node(118, nodeArray0, 415, 108);
      // Undeclared exception!
      try { 
        node1.removeChild(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(24576);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      node1.isQuotedString();
      Node node2 = new Node(130, node1, 52, 2);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      TreeSet<String> treeSet1 = new TreeSet<String>();
      node1.setDirectives(treeSet1);
      node1.isLabel();
      Node node3 = Node.newString("Zn\"n/5beG+o!");
      node3.getProp(50);
      Node node4 = new Node(810, node2, node2, node3);
      node4.isExprResult();
      node3.getAncestors();
      // Undeclared exception!
      try { 
        node4.replaceChildAfter(node3, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.getSideEffectFlags();
      Stack<JSType> stack0 = new Stack<JSType>();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator0);
      Node node1 = new Node(57, node0, node0, node0, node0, 0, 0);
      Node node2 = new Node(36, node1, 43, 55);
      node0.isBlock();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node3.isLabel();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      vector0.replaceAll(unaryOperator0);
      Node node1 = new Node(57, 3697, 4095);
      Node node2 = new Node(54, node1);
      node2.isQualifiedName();
      Node node3 = node0.srcrefTree(node2);
      node1.hasChild(node3);
      // Undeclared exception!
      try { 
        node2.replaceChild(node0, node3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node3 = new Node(12, node2);
      node3.getProp(914);
      node0.isOr();
      node0.getProp(869);
      Object object0 = new Object();
      node2.putProp(39, "S;FC1");
      node0.isAnd();
      node3.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      Node node1 = new Node(1);
      Node node2 = Node.newString("iz", 2, 30);
      node0.isAssignAdd();
      Node node3 = new Node(105);
      node1.getProp(55);
      node2.getProp(40);
      node0.putProp(53, (Object) null);
      node3.isVar();
      Node node4 = new Node(55, 101, 56);
      node4.isThis();
      node3.clonePropsFrom(node2);
      node4.isCall();
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.isEquivalentToShallow(node1);
      Node node2 = node1.srcrefTree(node0);
      node0.getProp(36);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getProp(3001);
      node0.putProp(48, (Object) null);
      node0.getBooleanProp(16);
      node1.putIntProp(38, 50);
      node1.isThrow();
      node1.isThis();
      node2.checkTreeEqualsImpl(node0);
      node1.isSyntheticBlock();
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(10);
      node0.setLength(10);
      node0.toString();
      node0.setType(10);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isUnscopedQualifiedName();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = new Node(60);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.createConstructorType(jSType0, jSTypeArray0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.areAllFlagsSet();
      node0.getProp(42);
      node0.putProp(0, node_SideEffectFlags2);
      node0.putIntProp(2092, 42);
      node0.isDebugger();
      node0.isNE();
      JSType[] jSTypeArray1 = new JSType[0];
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray1);
      Node node1 = jSTypeRegistry1.createParameters((List<JSType>) immutableList0);
      node0.isLabel();
      node1.getFirstChild();
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newNumber((double) 3697);
      Node node1 = new Node(32, node0);
      Node node2 = new Node(0);
      Node node3 = Node.newString("Object#Element");
      Node node4 = node2.srcrefTree(node3);
      node2.getLength();
      node3.hasChild(node1);
      node0.isDelProp();
      Node node5 = new Node(40, node4);
      node5.toString();
      node2.isAnd();
      Node node6 = Node.newString("STRING");
      node1.copyInformationFromForTree(node6);
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = new Node(56, 56, 56);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(32, node0, node0);
      Node node2 = node1.srcref(node0);
      node0.srcrefTree(node1);
      node2.getProp(51);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got TYPEOF
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.getSideEffectFlags();
      Stack<JSType> stack0 = new Stack<JSType>();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator0);
      Node node1 = Node.newString("");
      Node node2 = new Node(36, node1, 43, 55);
      node0.isBlock();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node3.getSourcePosition();
      node1.isVar();
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node4.getCharno();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node(36, node0, node0, 2, 12);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node1.putIntProp(2, 12);
      node1.isIn();
      node1.isGetProp();
      Node node2 = new Node(4095, node1);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)98;
      byteArray0[4] = (byte)119;
      byteArray0[5] = (byte) (-103);
      byteArray0[6] = (byte)15;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(113, nodeArray0);
      node3.isScript();
      node1.isVoid();
      node1.isGetProp();
      node3.isSetterDef();
      node3.getParent();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = Node.newString("Uk:gR|", 87855567, 87855567);
      node0.isString();
      Node node1 = Node.newString(39, "Uk:gR|", 39, 607);
      node1.mayMutateArguments();
      node1.setVarArgs(true);
      Node node2 = new Node(49);
      node0.isInc();
      node2.isWith();
      node2.isRegExp();
      node1.cloneNode();
      Node node3 = Node.newNumber((double) 4095);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node2);
      node0.isEquivalentTo(node4, true, true, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node3.getJsDocBuilderForNode();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        node1.setDouble(49);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = new Node(1762);
      node0.isOptionalArg();
      Node node1 = new Node(155, node0, node0, node0, node0);
      node1.isArrayLit();
      node0.useSourceInfoIfMissingFromForTree(node1);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-52);
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte) (-82);
      byteArray0[3] = (byte) (-66);
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)43;
      byteArray0[6] = (byte)5;
      byteArray0[7] = (byte)35;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InputId inputId0 = new InputId("-.gBMoQ=]LgR$Oq/");
      node0.setJSDocInfo((JSDocInfo) null);
      node0.setInputId(inputId0);
      node1.getSourceFileName();
      try { 
        node1.setString((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CAST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      Node node1 = Node.newString("b@fTg' Aewz'5!t&7");
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node2 = Node.newNumber((-1923.870657));
      node1.isSetterDef();
      node2.setLineno(43);
      node1.isNoSideEffectsCall();
      node0.checkTreeEquals(node1);
      node2.isNoSideEffectsCall();
      node0.isLabel();
      node1.getJsDocBuilderForNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      TreeSet<String> treeSet1 = new TreeSet<String>();
      node2.setSourceEncodedPosition(50);
      node2.isCast();
      Node node3 = new Node(4095, node0, node0, node2, 122, 46);
      node3.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      nodeArray0[0] = node1;
      Node node2 = new Node(205, nodeArray0, (-155), 46);
      node1.isIf();
      node1.isQuotedString();
      node1.isCatch();
      node1.getAncestor(1438);
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(681, node0, node0, node0, 659, 31);
      node0.copyInformationFromForTree(node1);
      Node node2 = new Node(0, node1);
      Node node3 = node2.cloneNode();
      node3.isSyntheticBlock();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node2.isNumber();
      node1.isReturn();
      node3.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      Node node2 = node1.srcrefTree(node0);
      node1.getProp(1810);
      node2.getProp((-427));
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("FU6}`(", false);
      node1.putProp((-753), simpleSourceFile0);
      node0.getBooleanProp(57);
      node2.putIntProp(50, 53);
      node1.isThrow();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = new Node(51);
      node0.setLength(51);
      node0.mayMutateGlobalStateOrThrow();
      node0.siblings();
      Node node1 = new Node((-408), node0, node0, node0, (-2004), 153);
      node1.removeChild(node0);
      node1.removeProp(50);
      node0.addChildToBack(node1);
      node0.setSourceEncodedPosition(51);
      node0.isGetProp();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "B4I!|`;V(");
      node0.putIntProp(3108, 4028);
      node0.isScript();
      node0.isDebugger();
      node0.hasChildren();
      node1.isEquivalentTo(node0, true, false, false);
      node1.getSourceOffset();
      node0.isLabelName();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      int int0 = 8;
      Node node0 = Node.newString("B!Y* NejKvK{=?&T", (-1625), 119);
      Node node1 = null;
      try {
        node1 = new Node(44, (Node) null, (Node) null, (Node) null, node0, 36, 1170);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      UnaryOperator.identity();
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(153, node0);
      Node node2 = Node.newNumber((double) 16);
      Node node3 = new Node(52, node2);
      node3.isContinue();
      Node node4 = node1.cloneNode();
      Node node5 = Node.newString("nZi1r>O*%KDxUBgNbW@");
      node5.mayMutateGlobalStateOrThrow();
      node4.isInc();
      Node.newString(0, "nZi1r>O*%KDxUBgNbW@");
      node4.isDo();
      node3.isNot();
      node2.hasChild(node3);
      node4.isStringKey();
      node1.isDebugger();
      node1.addChildToFront(node5);
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = new Node(42);
      Node node1 = new Node(46, node0, 47, 56);
      Node node2 = node0.clonePropsFrom(node1);
      node1.isIn();
      node1.getLineno();
      node2.isLocalResultCall();
      node1.getLength();
      node0.isQualifiedName();
      Node node3 = null;
      try {
        node3 = new Node(44, node2, node0, node2, 48, 54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node((-1884), node0);
      Node node2 = node1.cloneNode();
      node1.isSyntheticBlock();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node0.isNumber();
      node2.getInputId();
      node1.isReturn();
      Node node3 = new Node(1186, node2, node1, 36, 1544);
      node3.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.getSideEffectFlags();
      Stack<JSType> stack0 = new Stack<JSType>();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator0);
      Node node1 = new Node(32, node0, node0, node0, node0);
      Node node2 = new Node(36, node1, 43, 55);
      node0.isBlock();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node3.isLabel();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(10);
      node0.setLength(10);
      node0.toString();
      node0.setType(10);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isEquivalentToTyped(node0);
      Node node1 = Node.newString(57, "BITXOR [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002]", 51, 869);
      node0.useSourceInfoIfMissingFrom(node1);
      try { 
        node0.setDouble(10);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BITXOR 51 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = new Node(60);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseBooleanType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.areAllFlagsSet();
      node0.getLength();
      node0.getProp(42);
      node0.putProp(0, node_SideEffectFlags2);
      node0.putIntProp(2092, 0);
      node0.isNE();
      node0.isNE();
      Node.extractLineno((-420));
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newString("?,j8al4$p]", 2183, (-20));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(49, node0, node0, node0, node0, 12, 42);
      node1.isThrow();
      Node node2 = new Node(43);
      Node node3 = Node.newString("?,j8al4$p]", 48, (-1344));
      node0.isAssignAdd();
      Node node4 = new Node(16);
      node1.getProp(37);
      node1.getProp(46);
      InputId inputId0 = new InputId("?,j8al4$p]");
      node3.putProp(684, inputId0);
      node2.isHook();
      Node node5 = new Node(30, 49, 641);
      node2.isTrue();
      node4.isDebugger();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      String string0 = "e\\@4Mxl~GVU6-#)^tZ.";
      Node node0 = Node.newString("e@4Mxl~GVU6-#)^tZ.");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "reflected_object");
      node0.isLabelName();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isLocalResultCall();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(153, node0, node0, node0);
      node1.isOptionalArg();
      node0.useSourceInfoIfMissingFromForTree(node1);
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = new Node(24576);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node2 = new Node(115);
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1150);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.clearAllFlags();
      node3.isQuotedString();
      node3.hasChild(node2);
      node0.isDelProp();
      node0.isNot();
      node3.isCast();
      node3.isQualifiedName();
      node3.isTry();
      node2.isFalse();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = new Node(8192, node0, node0, 1395, 55);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isEquivalentTo(node2);
      InputId inputId0 = new InputId("T24HsfcVeuKf$Tu");
      node0.setInputId(inputId0);
      Node node3 = null;
      try {
        node3 = new Node(4, node1, node1, node0, 98, 30);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(39, node0, node0, node0, 41, 132);
      Node node2 = Node.newString("second new child has existing parent");
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = new Node(16, 40, 8);
      Node node5 = node1.useSourceInfoFromForTree(node2);
      node5.isSwitch();
      node2.setLineno(2);
      node5.isCall();
      node2.getDirectives();
      node4.addChildrenToFront(node1);
      node0.toString();
      Node node6 = null;
      try {
        node6 = new Node(105, node3, node5, node5, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      node0.addSuppression("OG0=");
      Node node1 = new Node(108, node0, 2, 40);
      node0.isBlock();
      node0.isCast();
      node1.checkTreeEquals(node0);
      node1.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = Node.newNumber((-4687.37043241));
      Node node2 = new Node(56, node0);
      Node node3 = new Node(148);
      Node node4 = new Node(39, 53, 849);
      Node node5 = node4.srcrefTree(node0);
      node1.getLength();
      Node node6 = Node.newString(16, "com.google.common.collect.SingletonImmutableBiMap");
      node3.hasChild(node6);
      node6.isDelProp();
      Node node7 = new Node((-4080), node5);
      // Undeclared exception!
      try { 
        node2.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 56
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newString(415, "Jc7-;VXg\"");
      node0.isTrue();
      Node node1 = new Node(415, node0, node0, node0, node0);
      node0.isSetterDef();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[7];
      jSTypeArray0[0] = null;
      jSTypeArray0[1] = null;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = null;
      jSTypeArray0[4] = null;
      jSTypeArray0[5] = null;
      jSTypeArray0[0] = null;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, false, jSTypeArray0);
      jSTypeRegistry0.createFunctionType((JSType) functionType0, node1);
      Node node2 = jSTypeRegistry1.createParameters(jSTypeArray0);
      node2.isSwitch();
      Node node3 = new Node(1, node2, 30, 1);
      node3.isNew();
      node3.isQualifiedName();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newNumber(2386.857);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.isSyntheticBlock();
      node0.addSuppression("com.google.javascript.rhino.Node");
      node0.isVarArgs();
      node0.getSourceOffset();
      node0.isWhile();
      node_AncestorIterable0.iterator();
      node0.getBooleanProp((-1));
      Node node1 = Node.newString(4, "K@TZLJPtxbxn4");
      node1.isDelProp();
      node0.isComma();
      node1.getBooleanProp(181);
      node1.isAssignAdd();
      // Undeclared exception!
      try { 
        node1.getAncestor((-1237));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.isEquivalentToShallow(node1);
      node1.getIntProp(862);
      node1.srcrefTree(node0);
      node0.getProp(36);
      node0.getProp(3001);
      node0.putProp(48, (Object) null);
      node0.getBooleanProp(16);
      node0.isCatch();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "B!Y* NejKvK{=?&T");
      // Undeclared exception!
      try { 
        node0.getAncestor((-3128));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = new Node(56);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateArguments();
      node0.isGetProp();
      Node node1 = new Node((-2049), node0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)98;
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-84);
      byteArray0[5] = (byte)119;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)119;
      byteArray0[8] = (byte) (-84);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((byte) (-1), nodeArray0);
      Node node3 = new Node(54, node1, node2, node2);
      Node.newNumber((double) 50, 12, 112);
      node3.isScript();
      node2.isDefaultCase();
      node3.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      node1.isFunction();
      Node node2 = Node.newNumber((double) 4095);
      node0.getStaticSourceFile();
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node1.setSourceEncodedPosition(50);
      node0.getDirectives();
      node2.setDirectives((Set<String>) null);
      node3.isLabel();
      node1.isExprResult();
      node1.getAncestors();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node3, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      UnaryOperator.identity();
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.isDec();
      Node node2 = node0.srcrefTree(node1);
      int int0 = Node.SLASH_V;
      node0.hasChild(node0);
      node1.isDelProp();
      node0.isNot();
      node0.isWhile();
      node0.isTrue();
      node1.isQualifiedName();
      node2.isTry();
      Node node3 = new Node(2, node0, node1, node0, node1);
      node3.isInstanceOf();
      node2.isEquivalentTo(node1, false, false, false);
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      node1.isFunction();
      Node node2 = Node.newNumber((double) 4095);
      node0.getStaticSourceFile();
      Node node3 = new Node(434, node2, 4, 614);
      node3.addChildrenToBack(node1);
      node0.isInstanceOf();
      node2.toString();
      node1.isAnd();
      Node node4 = node1.getParent();
      node4.isGetProp();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      Node node1 = new Node(1);
      Node node2 = Node.newString("iz", 2, 30);
      node0.isAssignAdd();
      Node node3 = Node.newNumber((-1.0), (-1238), 4);
      node2.isBlock();
      node2.getIntProp(36);
      node3.isOr();
      node2.getQualifiedName();
      node1.isQualifiedName();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node2;
      nodeArray0[1] = node3;
      Node node4 = new Node(55, nodeArray0, 32, 83);
      // Undeclared exception!
      try { 
        node4.removeChild(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(53, node0, node0, node0, 659, 31);
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.setSourceFileForTesting("com.google.common.collect.ImmutableMapValues");
      Node node3 = new Node(49, 49, 126);
      Node node4 = node3.useSourceInfoFromForTree(node2);
      node4.isSwitch();
      node1.setLineno(12);
      node3.isCall();
      node2.getDirectives();
      // Undeclared exception!
      try { 
        node0.addChildrenToFront(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(48);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseBooleanType();
      Node node1 = new Node((-4667), 8, 51);
      Node node2 = new Node(4, node0);
      node2.isQualifiedName();
      Node node3 = node2.srcrefTree(node0);
      node3.isCall();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -4667
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Node node2 = node1.srcrefTree(node0);
      node0.getProp(36);
      node0.getProp(30);
      Node.newNumber((double) 54, 2, 0);
      node0.getBooleanProp(16);
      node1.putIntProp(38, 50);
      Node node3 = Node.newNumber((double) 29);
      node2.setLineno(52);
      node3.isCall();
      node1.getDirectives();
      node0.addChildrenToFront(node2);
      node0.toString();
      node1.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = new Node(42);
      node0.isSetterDef();
      Node node1 = new Node((-862048943), node0, node0);
      node0.srcref(node1);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      Node node1 = new Node(1);
      Node.newString("iz", 2, 30);
      Node node2 = node1.srcrefTree(node0);
      int int0 = Node.SLASH_V;
      node1.isDelProp();
      node2.isComma();
      node2.getBooleanProp(16);
      Node node3 = Node.newNumber(1988.61527069);
      node3.isAssignAdd();
      node0.isAnd();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3697);
      Node node1 = new Node(52, node0, node0, node0, 2512, 0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node3 = new Node(2, 544, (-832));
      Node node4 = node2.useSourceInfoFromForTree(node0);
      node3.setSourceEncodedPosition(31);
      node0.getDirectives();
      node2.setDirectives((Set<String>) null);
      node4.isLabel();
      node3.isExprResult();
      node2.getAncestors();
      // Undeclared exception!
      try { 
        node4.replaceChildAfter(node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "B JhYI");
      Node node0 = new Node((-2527));
      Node node1 = new Node(962, node0);
      node1.setChangeTime(37);
      node1.setCharno(4);
      node1.mayMutateGlobalStateOrThrow();
      EvoSuiteFile evoSuiteFile0 = null;
      node0.getChangeTime();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "second new child has existing parent");
      node0.useSourceInfoFrom(node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      node0.isOptionalArg();
      node0.isFalse();
      node1.isNot();
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1187));
      Node node1 = new Node(0, node0, 1, 38);
      node1.isIn();
      node1.getLineno();
      node0.isLocalResultCall();
      node1.getLength();
      node0.srcrefTree(node1);
      node0.getLength();
      node0.mayMutateGlobalStateOrThrow();
      node1.getLineno();
      node1.useSourceInfoIfMissingFrom(node0);
      Node node2 = Node.newString(3660, "b@fTg' Aewz'5!t&7");
      node2.hasOneChild();
      node1.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      nodeArray0[0] = node1;
      node1.setChangeTime(57);
      node1.isRegExp();
      node0.toString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.setJSDocInfo(jSDocInfo0);
      node1.isAnd();
      node0.isVoid();
      node1.isLabelName();
      node1.cloneTree();
      Node.extractLineno(2699295);
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) vector0);
      UnaryOperator.identity();
      Node node1 = new Node(42, node0, node0, node0, 660, 2);
      node0.isDec();
      Node node2 = node1.srcrefTree(node0);
      int int0 = Node.SLASH_V;
      node1.hasChild(node2);
      node0.isDelProp();
      node0.isNot();
      node1.isWhile();
      node1.isTrue();
      node2.isQualifiedName();
      node2.isTry();
      node0.isInstanceOf();
      node1.isEquivalentTo(node2, false, false, false);
      node0.getParent();
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(270);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags4.setMutatesArguments();
      node0.removeFirstChild();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setReturnsTainted();
      node_SideEffectFlags5.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags9 = node_SideEffectFlags8.setReturnsTainted();
      Node node1 = Node.newString("directives");
      node_SideEffectFlags9.setMutatesGlobalState();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags8.valueOf();
      node0.isLocalResultCall();
      node1.getJSType();
      node0.isBreak();
      node1.isCast();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      node0.isIn();
      node0.getLineno();
      Node node1 = Node.newString(4, "~dVzD ");
      node1.isLocalResultCall();
      node1.getLength();
      Node node2 = new Node(52, node0, node1);
      Node node3 = node2.srcrefTree(node1);
      int int0 = Node.LENGTH;
      node1.mayMutateGlobalStateOrThrow();
      node1.getLineno();
      node3.useSourceInfoIfMissingFrom(node1);
      Node node4 = Node.newString((-142), "~dVzD ");
      node1.hasOneChild();
      node4.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(155);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = new Node(48, 48, 48);
      node0.isEmpty();
      Node node1 = new Node(48, (-1887), 0);
      Node node2 = node0.clonePropsFrom(node1);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("8W|ljd)dht", true);
      node0.getChangeTime();
      ArrayList<Node> arrayList0 = new ArrayList<Node>(15);
      node2.setStaticSourceFile(simpleSourceFile0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node3.useSourceInfoFromForTree(node0);
      Node node4 = Node.newNumber((double) 49);
      node4.isNew();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = new Node(41);
      node0.children();
      Node node1 = new Node(217);
      node1.isSyntheticBlock();
      node0.isNull();
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 217
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Node node2 = Node.newString("B!Y* NejKvK{=?&T", 55, 39);
      Node.newString("B!Y* NejKvK{=?&T", 2, 52);
      node0.isParamList();
      node0.isDo();
      Node node3 = new Node(1, node2, node1);
      node3.replaceChild(node2, node0);
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString(10, "");
      Node node1 = new Node(30, node0, 54, 46);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(1, nodeArray0, 42, 64);
      Node node3 = node1.srcref(node2);
      node0.isIf();
      node1.isQuotedString();
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      UnaryOperator.identity();
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(148, node0);
      Node node2 = Node.newNumber((double) 16);
      Node node3 = new Node(52, node2);
      node3.isContinue();
      Node node4 = node1.cloneNode();
      Node node5 = Node.newString("nZi1r>O*%KDxUBgNbW@");
      node5.mayMutateGlobalStateOrThrow();
      node0.isFalse();
      Node.newString(0, "nZi1r>O*%KDxUBgNbW@");
      node4.isDo();
      node3.isNot();
      node2.hasChild(node3);
      node4.isStringKey();
      node1.isDebugger();
      node1.addChildToFront(node5);
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node(36, node0, node0, 2, 12);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node1.putIntProp(2, 12);
      node1.isIn();
      node1.isGetProp();
      Node node2 = new Node(4095, node1);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)98;
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte) (-84);
      byteArray0[6] = (byte)15;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(113, nodeArray0);
      node3.useSourceInfoIfMissingFromForTree(node1);
      node3.isScript();
      node1.isDefaultCase();
      node2.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = new Node(42);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Object#Key");
      node0.getIntProp(42);
      node0.isOr();
      node0.getQualifiedName();
      node0.isQualifiedName();
      Node node1 = Node.newString("");
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      node0.isOptionalArg();
      Node node1 = new Node(2, node0, 1597, 1597);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = Node.newNumber(2847.6661154557178, 125, 125);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node((-2441), node0, node0, node0, 57, (-1757));
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.newString(105, "The new child node already has a parent.");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "The new child node already has a parent.");
      node2.copyInformationFromForTree(node0);
      node2.isWith();
      node2.isVoid();
      node0.isLocalResultCall();
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2441
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      vector0.replaceAll(unaryOperator0);
      Node node1 = new Node(56);
      node1.addChildrenToFront(node0);
      node1.isWhile();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = new Node(40, node1);
      node2.isTrue();
      node0.isTry();
      node2.mayMutateArguments();
      node1.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newNumber(2109.572692999, 3005, 44);
      node0.setSourceFileForTesting("side_effect_flags");
      node0.isFunction();
      Node node1 = Node.newNumber((double) 15);
      node0.getStaticSourceFile();
      Node node2 = new Node(3365, node1, (-2474), 12);
      node0.addChildrenToBack(node2);
      Node node3 = Node.newString(46, "side_effect_flags");
      node3.isInstanceOf();
      node3.toString();
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3365
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = Node.newString("B!Y* NejKvK{=?&T", 55, 39);
      Node node2 = Node.newString("", 46, 0);
      Node node3 = Node.newString("B!Y* NejKvK{=?&T", 54, 34);
      node1.isParamList();
      Node node4 = new Node(42, node3, node0, node1, 747, 47);
      node4.isDo();
      Node node5 = new Node(0, node2, node2);
      // Undeclared exception!
      try { 
        node4.replaceChild(node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      node1.isFunction();
      Node node2 = Node.newNumber((double) 4095);
      node0.getStaticSourceFile();
      Node node3 = new Node(434, node2, 4, 614);
      node3.addChildrenToBack(node1);
      node0.isInstanceOf();
      node2.toString();
      node1.getCharno();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      int int0 = (-2228);
      Node node0 = new Node((-2228));
      // Undeclared exception!
      try { 
        node0.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b@fTg' Aewz'5!t&7");
      Node node0 = new Node(49, 63, 63);
      Node node1 = new Node(105, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.getQualifiedName();
      node1.isTypeOf();
      node0.wasEmptyNode();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(709, node0, node0, node0, (-1992), 31);
      Node node2 = node0.copyInformationFromForTree(node1);
      String string0 = "Zn\"n/5beG+o!";
      node2.setSourceFileForTesting("Zn\"n/5beG+o!");
      node0.getAncestor(1);
      Node node3 = new Node(132, 49, 126);
      Node node4 = node3.useSourceInfoFromForTree(node2);
      node4.setSourceEncodedPosition(8);
      node1.getDirectives();
      // Undeclared exception!
      try { 
        node4.replaceChild(node3, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(709, node0, node0, node0, (-1992), 31);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node3 = new Node(132, 49, 126);
      Node node4 = node3.useSourceInfoFromForTree(node2);
      node4.setSourceEncodedPosition(8);
      node1.getDirectives();
      node4.cloneNode();
      node1.setDirectives((Set<String>) null);
      node4.isExprResult();
      node3.getInputId();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = Node.newNumber(960.7402627898, 49, 56);
      node0.setSourceFileForTesting("side_effect_flags");
      Node node2 = new Node(29, node1, node1, node1);
      node0.isTry();
      Node node3 = Node.newNumber(56.0);
      Node node4 = new Node(8, node3, 31, 12);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node4.getProp(1);
      Node node5 = new Node(39, 4, 132);
      node1.isGetterDef();
      // Undeclared exception!
      try { 
        node5.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      Node node1 = new Node(1);
      Node.newString("iz", 2, 30);
      node0.isAssignAdd();
      Node node2 = new Node(105);
      node2.toString(true, false, false);
      node1.getProp(55);
      node1.getInputId();
      Object object0 = new Object();
      node0.putProp(53, (Object) null);
      node2.isVar();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(40);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 40
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newString("is_namespace", 87855567, 56);
      node0.isString();
      Node node1 = Node.newString(2, "is_namespace", 605, 32);
      node0.mayMutateArguments();
      node0.setVarArgs(true);
      Node node2 = new Node(32);
      node0.isInc();
      node1.isWith();
      node0.isRegExp();
      node2.cloneNode();
      node0.isTrue();
      node2.isTry();
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.mergeLineCharNo(105, 142);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(105, nodeArray0, 105, 105);
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString("E{:QC0<<CIW;Y]H(HD");
      Node node2 = node0.srcrefTree(node1);
      int int0 = Node.SLASH_V;
      node0.isDelProp();
      node1.isComma();
      node2.getBooleanProp(4095);
      Node node3 = Node.newNumber(1343.4426112451167, 5195, 35);
      node2.checkTreeEquals(node3);
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(681, node0, node0, node0, 659, 31);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = new Node(132, 49, 126);
      Node node4 = node3.useSourceInfoFromForTree(node2);
      node4.isSwitch();
      node1.setLineno(12);
      Node node5 = new Node(43, node1, node3);
      node5.hasOneChild();
      node5.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(1347);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = new Node(42);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseBooleanType();
      node0.putIntProp(42, 1);
      node0.hasOneChild();
      node0.getIntProp(42);
      node0.isOr();
      node0.getQualifiedName();
      Node node1 = new Node(2676, node0, node0, node0);
      node1.isQualifiedName();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THIS [side_effect_flags: com.google.javascript.rhino.Node$IntPropListItem@0000000337] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(47, node0, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      String string0 = "Zn\"n/5beG+o!";
      node2.setSourceFileForTesting("Zn\"n/5beG+o!");
      node0.getAncestor(1);
      Node node3 = new Node(132, 49, 126);
      Node node4 = node3.useSourceInfoFromForTree(node2);
      node4.setSourceEncodedPosition(8);
      node1.getDirectives();
      // Undeclared exception!
      try { 
        node4.replaceChild(node3, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newString(501, "second new child has existing parent");
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node.extractCharno(1073741823);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      Node node0 = Node.newNumber(1037.53);
      JSType.toMaybeTemplatizedType((JSType) null);
      ObjectType objectType0 = jSTypeRegistry0.createObjectType("comparator", node0, (ObjectType) null);
      FunctionType.getTopDefiningInterface(objectType0, "1!-_4?CU(3ze+asw");
      jSTypeArray0[0] = (JSType) null;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) objectType0, jSTypeArray0);
      // Undeclared exception!
      try { 
        modificationVisitor0.caseFunctionType(functionType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      node0.addSuppression("OG0=");
      Node node1 = new Node(108, node0, 2, 40);
      node0.isBlock();
      node1.removeChildren();
      node1.isQualifiedName();
      node0.isCast();
      node1.checkTreeEquals(node0);
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      Node node1 = new Node(1);
      Node.newString("iz", 2, 30);
      node0.isAssignAdd();
      Node node2 = new Node(105);
      node1.getProp(55);
      Object object0 = new Object();
      node0.putProp(53, (Object) null);
      node0.isCast();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.checkTreeEquals(node0);
      node3.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node(36, node0, node0, 2, 12);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node1.putIntProp(2, 12);
      node1.isIn();
      node1.isGetProp();
      Node node2 = new Node(4095, node1);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)119;
      Node node3 = new Node(114, 50, 42);
      Node node4 = node3.useSourceInfoFromForTree(node0);
      node0.isSwitch();
      node4.setLineno(47);
      Node node5 = Node.newString("RANGE_ERROR_TYPE", 55, (-1209));
      node5.isOnlyModifiesThisCall();
      node5.isCall();
      node5.toString(false, false, false);
      node3.getDirectives();
      node5.addChildrenToFront(node4);
      node0.toString();
      node3.copyInformationFromForTree(node4);
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(27591, node0);
      Node node2 = Node.newNumber((double) 50);
      Node node3 = new Node(39, node2);
      node1.isContinue();
      node3.cloneNode();
      Node node4 = Node.newString("nZi1r>O*%KDxUBgNbW@");
      node0.mayMutateGlobalStateOrThrow();
      node4.isFalse();
      Node node5 = Node.newString(2, "nZi1r>O*%KDxUBgNbW@");
      node5.isDo();
      node3.isNot();
      node5.hasChild(node1);
      node4.isStringKey();
      node4.getProp(760);
      node0.setLength(154);
      node4.isDebugger();
      node5.addChildToFront(node4);
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = new Node(56, 56, 56);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(32, node0, node0);
      Node node2 = Node.newString((-1304), "WZ+.QXYf*");
      Node node3 = node0.srcrefTree(node1);
      int int0 = Node.SLASH_V;
      node3.isDelProp();
      node3.getBooleanProp(125);
      node2.isAnd();
      node2.isGetElem();
      node0.useSourceInfoFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      int int0 = 709;
      Node node1 = new Node(709, node0, node0, node0, (-2022), 31);
      Node node2 = Node.newNumber((double) 52);
      node2.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node3 = new Node(132, 49, 4);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node4 = new Node(29, node1);
      node4.isTrue();
      node3.copyInformationFrom(node4);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node3;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      nodeArray0[3] = node3;
      nodeArray0[4] = node1;
      nodeArray0[5] = node4;
      nodeArray0[6] = node3;
      nodeArray0[7] = node4;
      node3.toString(false, false, false);
      nodeArray0[8] = node2;
      Node node5 = null;
      try {
        node5 = new Node(15, nodeArray0, 934, 50);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) vector0);
      Node node1 = new Node(42, node0, node0, node0, 660, (-3389));
      node0.isDec();
      Node node2 = node1.srcrefTree(node0);
      int int0 = Node.SLASH_V;
      node1.getBooleanProp(12);
      node2.isDefaultCase();
      node0.isNot();
      node1.isWhile();
      node1.isTrue();
      node2.isQualifiedName();
      node2.isTry();
      node0.isInstanceOf();
      node1.isEquivalentTo(node2, false, false, false);
      node2.getProp(2);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      Node node1 = new Node(0);
      Node node2 = new Node(37, node1, node0, node1, 155, 10);
      node1.isDec();
      node2.srcrefTree(node1);
      int int0 = Node.SLASH_V;
      node1.getBooleanProp(289);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node3.isDelProp();
      node2.isOnlyModifiesArgumentsCall();
      node3.isWhile();
      Node node4 = Node.newString("Object#Key", 8, 98);
      node4.isTrue();
      node0.isQualifiedName();
      node4.isTry();
      node2.isInstanceOf();
      Node node5 = null;
      try {
        node5 = new Node(36, node2, node0, node2, 2, 56);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = new Node(60);
      Node node1 = Node.newString(46, "B!Y* NejKvK{=?&T");
      node0.isTrue();
      Node node2 = new Node(236, node1, node0, node0, node0);
      node0.isSetterDef();
      Node node3 = node2.removeChildAfter(node1);
      // Undeclared exception!
      try { 
        node3.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 60
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setLineno(56);
      Node node2 = new Node(8, node1, node0, node0, node0, 15, 40);
      node0.getJSType();
      node0.toString();
      Node.newString(1518, "Not declared as a type name");
      node1.isDelProp();
      Node node3 = new Node(57, 2171, 155);
      node0.isLabelName();
      Node node4 = new Node(39, node3, node3, node3, node3, 16, 48);
      node4.isObjectLit();
      node2.isHook();
      node4.getLastChild();
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      UnaryOperator.identity();
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(153, node0);
      Node node2 = Node.newNumber((double) 16);
      Node node3 = new Node(52, node2);
      node3.isContinue();
      Node node4 = node1.cloneNode();
      Node node5 = Node.newString("nZi1r>O*%KDxUBgNbW@");
      node5.mayMutateGlobalStateOrThrow();
      Node.newString(0, "nZi1r>O*%KDxUBgNbW@");
      node4.isDo();
      node3.isNot();
      node2.hasChild(node3);
      node4.isStringKey();
      node1.isDebugger();
      node1.addChildToFront(node5);
      node1.useSourceInfoFrom(node3);
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = new Node(60);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-339));
      Node node1 = new Node(43, node0, node0, node0, node0, 43, 2);
      node1.setSourceFileForTesting("`{+=-HN'-UB");
      Node node2 = new Node(38, (-1621), (-1621));
      node2.isEquivalentToTyped(node0);
      node2.isLabelName();
      node0.isObjectLit();
      node1.getLastChild();
      node2.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = Node.newString("iz", 0, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      Node node1 = new Node(1);
      Node node2 = Node.newString("iz", 2, 30);
      node0.isAssignAdd();
      Node node3 = new Node(105);
      node1.getProp(55);
      Object object0 = new Object();
      node0.putProp(53, (Object) null);
      node0.isCast();
      node1.putProp(41, node2);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node0);
      node4.isEquivalentTo(node0);
      node4.checkTreeTypeAwareEqualsImpl(node1);
      Node node5 = node1.cloneTree();
      node3.isString();
      node2.isWhile();
      node1.checkTreeTypeAwareEqualsImpl(node5);
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Node node0 = new Node((-1701));
      Node node1 = Node.newNumber((double) 2);
      Node node2 = new Node(29, node0, node0, node1, 2653, 4);
      node2.copyInformationFromForTree(node0);
      node0.checkTreeEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Node node2 = node0.clonePropsFrom(node1);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      Node.newString("gMW|", 37, (-425));
      node2.setType(47);
      Node node3 = Node.newString(117, "B!Y* NejKvK{=?&T");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node5 = new Node(1048576, node3, node4);
      Node node6 = new Node(105, node5, node0, (-851), 0);
      node6.setChangeTime(15);
      node6.toString();
      node6.isAnd();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = new Node(56, 56, 56);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(32, node0, node0);
      Node node2 = node1.srcref(node0);
      node0.srcrefTree(node1);
      node2.getProp(51);
      node0.getProp(53);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.isNew();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      node1.isFunction();
      Node.newNumber((double) 4095);
      node0.getStaticSourceFile();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
      try { 
        node2.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = new Node(60);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-339));
      Node node1 = new Node(43, node0, node0, node0, node0, 43, 2);
      node1.setSourceFileForTesting("`{+=-HN'-UB");
      node1.getProp(2);
      node_SideEffectFlags0.setAllFlags();
      node1.getProp(51);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags((-197));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got FALSE
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = new Node(111);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("", 85, 148);
      node0.srcref(node1);
      Node node2 = Node.newString("", 50, 237);
      node2.setSourceEncodedPositionForTree(36);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newNumber((-2435.0383938665527));
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node1 = new Node(118, (-1536), 86);
      node1.useSourceInfoIfMissingFrom(node0);
      node1.mayMutateArguments();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = new Node(56, 56, 56);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(32, node0, node0);
      Node node2 = node1.srcref(node0);
      node0.srcrefTree(node1);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = Node.newString(19, "Yfhl-MO!9", 42, (-2511));
      node4.isAdd();
      node2.isNot();
      node3.isCast();
      node3.isNew();
      node3.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.mergeLineCharNo(105, 142);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(105, nodeArray0, 105, 105);
      node0.isThis();
      node0.isHook();
      node0.isLabel();
      node0.getBooleanProp(40);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      vector0.clone();
      node0.getSideEffectFlags();
      UnaryOperator.identity();
      node0.isHook();
      node0.cloneTree();
      node0.setType(55);
      Node.newString(102, "Object#Element");
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 55
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = new Node(60, 60, 60);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-339));
      Node node1 = new Node((-339), node0, node0, node0, 32, 15);
      Node node2 = Node.newNumber((double) 56);
      node0.isFromExterns();
      node1.mayMutateArguments();
      node2.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node3 = new Node(110);
      node3.isFalse();
      node1.isName();
      node3.useSourceInfoIfMissingFrom(node2);
      node1.addChildAfter(node2, node0);
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 60
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 37);
      node1.isFunction();
      Node.newNumber((double) 4095);
      node0.getStaticSourceFile();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.useSourceInfoIfMissingFromForTree(node2);
      Node.newString(1106, "Yfhl-MO!9", 29, 50);
      node2.isAdd();
      node1.isNot();
      node0.isCast();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.isNew();
      node1.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.isEquivalentToShallow(node1);
      Node node2 = node1.srcrefTree(node0);
      node0.getProp(36);
      node0.getProp(3001);
      node0.putProp(48, (Object) null);
      node0.getBooleanProp(16);
      node1.putIntProp(38, 50);
      node2.toString();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = Node.newNumber((-2435.0383938665527));
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node1 = new Node(118, (-1536), 86);
      node1.children();
      node1.mayMutateArguments();
      node1.isHook();
      node0.addChildToBack(node1);
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Node node2 = Node.newString("B!Y* NejKvK{=?&T", 55, 39);
      node1.isTrue();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "B!Y* NejKvK{=?&T");
      Node node3 = Node.newString(26, "B!Y* NejKvK{=?&T", 4095, 1981);
      Node node4 = new Node(561, node2, node2, node3, 55, 56);
      node1.isFalse();
      // Undeclared exception!
      try { 
        node4.replaceChild(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(709, node0, node0, node0, 0, 31);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.getAncestor(1);
      Node node3 = new Node(132, 49, 126);
      Node node4 = node3.useSourceInfoFromForTree(node2);
      node4.setSourceEncodedPosition(8);
      node1.getDirectives();
      // Undeclared exception!
      try { 
        node4.replaceChild(node3, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<", 108, 108);
      node0.addSuppression("OG0=");
      Node node1 = new Node(108, node0, 2, 53);
      node0.isEquivalentToTyped(node1);
      node1.srcrefTree(node0);
      node0.isCast();
      node1.checkTreeEquals(node0);
      node0.setLineno(0);
      node1.isDo();
      Node node2 = new Node(229, node1, node1);
      node1.replaceChild(node0, node2);
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = Node.newString(31, "unexpected prop id ");
      Node node2 = node0.srcrefTree(node1);
      node1.isDelProp();
      node0.isComma();
      Node node3 = Node.newNumber((-1.0));
      node3.isAssign();
      node0.isReturn();
      node2.getChildAtIndex((-147));
      node3.isWith();
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = new Node(108);
      Node node1 = new Node(36, (-2544), (-204));
      Node node2 = node0.clonePropsFrom(node1);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("40yap;ub~5<", true);
      node2.getChangeTime();
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.useSourceInfoFromForTree(node1);
      Node.newNumber((double) 54);
      node1.isNew();
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Node node2 = node0.clonePropsFrom(node1);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      Node node3 = Node.newString("gMW|");
      node2.setType(47);
      Node node4 = Node.newString(117, "B!Y* NejKvK{=?&T");
      Node.newString(40, "gMW|");
      Node node5 = new Node((-471), node0, node3, node4, node2);
      node5.isNE();
      node2.isRegExp();
      node1.isTypeOf();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = Node.newString(";c9");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(77, node0, node0, node0);
      node0.toString();
      node1.setLineno(56);
      node1.detachChildren();
      node1.addChildToBack(node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node1.setDirectives((Set<String>) null);
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = new Node(60);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-339));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setAllFlags();
      Node node1 = new Node(29);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = Node.newString(30, "Yfhl-MO!9", 1, 860);
      node1.getProp(3016);
      node3.setSideEffectFlags(130);
      node3.useSourceInfoIfMissingFrom(node1);
      node1.isNew();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      UnaryOperator.identity();
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(153, node0);
      Node node2 = Node.newNumber((double) 16);
      Node node3 = new Node(52, node2);
      node3.isContinue();
      Node node4 = node1.cloneNode();
      Node node5 = Node.newString("nZi1r>O*%KDxUBgNbW@");
      node5.mayMutateGlobalStateOrThrow();
      Node node6 = Node.newString(52, "nZi1r>O*%KDxUBgNbW@");
      node4.isDo();
      node3.isNot();
      node2.hasChild(node3);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TreeSet<TemplateType> treeSet0 = new TreeSet<TemplateType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) treeSet0);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.checkTreeEquals(node6);
      node5.isGetterDef();
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = new Node(154);
      Node node1 = Node.newNumber((double) 36);
      node1.useSourceInfoIfMissingFrom(node0);
      Node node2 = new Node(3082, node1, node1);
      node1.removeProp(37);
      node0.isNew();
      node0.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.getJSType();
      node0.toString();
      Node node2 = new Node(50, node1, node0, node0, node0, 4095, 2);
      node2.checkTreeEqualsImpl(node1);
      node1.checkTreeEqualsImpl(node2);
      node2.isCase();
      node1.getChildCount();
      node1.isTypeOf();
      node1.getChildAtIndex(0);
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b@fTg' Aewz'5!t&7");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString(38, "b@fTg' Aewz'5!t&7", (-7), (-244));
      node0.getQualifiedName();
      node0.setIsSyntheticBlock(true);
      node0.setSourceEncodedPosition(83);
      Node node1 = Node.newString("b@fTg' Aewz'5!t&7", 36, 46);
      node0.srcrefTree(node1);
      Node node2 = new Node(83, node0, node0, node0, node0);
      node0.toStringTree();
      try { 
        node2.setString("1Wh.M8A,am-");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = new Node(57, node0, 30, 0);
      Node node2 = new Node(57);
      node2.isFunction();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags6.areAllFlagsSet();
      node1.isDelProp();
      Node node3 = new Node(4095, node1, node1, (-810), 37);
      node3.isNot();
      node3.isWhile();
      Node node4 = node1.cloneTree();
      node4.getSideEffectFlags();
      node3.isFalse();
      // Undeclared exception!
      try { 
        node3.replaceChild(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      nodeArray0[0] = node1;
      node1.setChangeTime(57);
      node1.toString();
      node1.isAnd();
      node0.isVoid();
      node0.isDefaultCase();
      node1.toStringTree();
      node0.isThis();
      node1.srcref(node0);
      node1.addChildToBack(node1);
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = new Node(108);
      Node node1 = new Node(108, node0, 2, 40);
      node1.isFunction();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.cloneNode();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.areAllFlagsSet();
      node1.isDelProp();
      node1.isNot();
      node0.getProp(51);
      node1.isTypeOf();
      node1.mayMutateArguments();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      UnaryOperator.identity();
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(153, node0);
      Node node2 = Node.newNumber((double) 16);
      Node node3 = new Node(52, node2);
      node3.isContinue();
      Node node4 = node1.cloneNode();
      node4.srcrefTree(node0);
      node3.useSourceInfoFromForTree(node2);
      node1.isDelProp();
      node0.isComma();
      node1.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(37, node0, node0, node0, 15, 47);
      node1.isQualifiedName();
      node1.setSideEffectFlags(4095);
      Node node2 = new Node(598);
      node0.isFalse();
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = Node.newString(43, "RANGE_ERROR_TYPE");
      Node node1 = new Node(36, node0, node0, 2, 12);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node1.putIntProp(2, 12);
      node1.isIn();
      node1.isGetProp();
      Node node2 = new Node(4095, node1);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)119;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)98;
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte) (-84);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(113, nodeArray0);
      node0.isWhile();
      node1.isDefaultCase();
      node3.setType(31);
      Node.extractLineno(0);
      node3.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newString(30, "missing prop: ", 30, 30);
      Node node1 = new Node(30, node0, node0, node0, 1962, 50);
      node1.isExprResult();
      node1.getSourceFileName();
      node1.cloneNode();
      Node node2 = Node.newString("ScOE1@", 1, 0);
      Node node3 = node1.setJSDocInfo((JSDocInfo) null);
      Node node4 = node0.srcrefTree(node1);
      node0.setLineno(38);
      node3.isCast();
      node1.isBreak();
      Node node5 = Node.newString(47, "N'O)1", 56, (-3658));
      node4.isFromExterns();
      Node node6 = Node.newNumber((-1918.061537890914), (-2377), (-1778));
      node6.isLocalResultCall();
      node6.useSourceInfoFrom(node1);
      node3.isObjectLit();
      node5.useSourceInfoIfMissingFrom(node1);
      node2.wasEmptyNode();
      node0.getSourceFileName();
      node5.isAssign();
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      UnaryOperator.identity();
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(153, node0);
      Node node2 = Node.newNumber((double) 16);
      Node node3 = new Node(52, node2);
      node3.isContinue();
      node1.cloneNode();
      Node node4 = new Node(152, node1, 38, 37);
      Node node5 = node4.srcref(node2);
      node1.isIf();
      // Undeclared exception!
      try { 
        node3.removeChild(node5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = Node.newString(205, "40yap;ub~5<");
      Node.newString("$]45HqrGXs");
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString(37, "B!Y* NejKvK{=?&T");
      node0.isDo();
      node0.isNot();
      node0.hasChild(node1);
      node0.isStringKey();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("nZi1r>O*%KDxUBgNbW@", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(125);
      Node node1 = new Node((-842), node0, node0, node0, node0);
      node0.hasChild(node1);
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      Node node2 = Node.newNumber((double) 8, 122, 43);
      Node node3 = node0.useSourceInfoIfMissingFrom(node2);
      node0.hasOneChild();
      node2.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node3.getExistingIntProp(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 0
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(709, node0, node0, node0, 0, 31);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.getAncestor(1);
      Node node3 = new Node(132, 49, 126);
      Node node4 = node3.useSourceInfoFromForTree(node2);
      node1.setSourceEncodedPosition(29);
      Node.newString("", 54, 63);
      Node node5 = node3.srcrefTree(node1);
      Node node6 = null;
      try {
        node6 = new Node(120, node5, node4, node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setAllFlags();
      Node node0 = new Node(125);
      Node node1 = new Node(44);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isAdd();
      node1.isBlock();
      node0.isCast();
      node2.isNew();
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(0, node0, (-887), 4095);
      node1.getSourceFileName();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(102, nodeArray0);
      node2.getLineno();
      node0.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<TemplateType> stack0 = new Stack<TemplateType>();
      Iterator<TemplateType> iterator0 = stack0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node3.toStringTree();
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b@fTg' Aewz'5!t&7");
      int int0 = 83;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(38, (-7), 38);
      // Undeclared exception!
      try { 
        node0.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      node1.isFunction();
      node0.getStaticSourceFile();
      node1.useSourceInfoFromForTree(node0);
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.hasOneChild();
      node2.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 4
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("com.google.common.collect.RegularImmutableTable$Values");
      Node node1 = new Node(33, node0);
      Node node2 = node1.removeFirstChild();
      Node node3 = node1.clonePropsFrom(node2);
      node3.setWasEmptyNode(false);
      node2.getSourceFileName();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("V");
      node0.getSideEffectFlags();
      Node node1 = new Node(30);
      node1.isEquivalentToShallow(node0);
      Node node2 = new Node(2686, node0, node0, node0);
      node1.srcrefTree(node2);
      node2.getProp((-449));
      int int0 = 896;
      Node node3 = null;
      try {
        node3 = new Node(38, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NjKvK{=?&T");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = new Node(39);
      Node node2 = new Node(8);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isAdd();
      node1.isBlock();
      node1.isCast();
      node0.isNew();
      node3.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      Node node2 = new Node(3258);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node3 = node1.setJSDocInfo(jSDocInfo0);
      node1.checkTreeEquals(node3);
      Object object0 = new Object();
      node1.isVar();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((double) 0);
      node0.setIsSyntheticBlock(false);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.setLineno(56);
      Node node2 = new Node(8, node1, node0, node0, node0, 15, 40);
      node0.getDouble();
      node0.isParamList();
      Node node3 = new Node(43, node2, node2);
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 56 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node.mergeLineCharNo(105, 142);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(105, nodeArray0, 105, 105);
      node0.isThis();
      node0.isHook();
      node0.isLabel();
      node0.isInc();
      Node node1 = new Node((-1269), node0, 37, 21);
      Node node2 = node0.srcref(node1);
      Node node3 = null;
      try {
        node3 = new Node(12, node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      Node node2 = new Node(3258);
      node0.getProp(36);
      node1.putProp(53, node0);
      node2.useSourceInfoIfMissingFromForTree(node1);
      node1.isEquivalentTo(node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(25, nodeArray0);
      node3.cloneTree();
      Node node4 = new Node(1, 47, 56);
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node.newNumber((-2435.0383938665527));
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node0 = new Node(118, (-1536), 86);
      node0.getDirectives();
      node0.mayMutateArguments();
      node0.isGetterDef();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = new Node(36, (-2544), (-204));
      Node node2 = node0.clonePropsFrom(node1);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("40yap;ub~5<", false);
      node2.getChangeTime();
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.useSourceInfoFromForTree(node1);
      Node.newNumber((double) 54);
      node1.isNew();
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = new Node(37);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-339));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      Node node1 = Node.newString(30, "Yfhl-MO!9", 1, 860);
      node1.isNot();
      node0.isCast();
      node0.toString();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setAllFlags();
      Node node0 = new Node(125);
      Node node1 = new Node(44);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isAdd();
      Node node3 = Node.newString(49, "3,@/LYE@Jr9lcok.");
      node1.srcref(node3);
      node1.isBlock();
      node0.isCast();
      node2.isNew();
      node2.getSourceOffset();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(40, node0, node0, node0, node0, 57, 40);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      Node node2 = new Node(47);
      node2.useSourceInfoIfMissingFromForTree(node0);
      node0.isAdd();
      node1.isBlock();
      node0.isNew();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = new Node(60, 60, 60);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node node1 = new Node(38);
      // Undeclared exception!
      try { 
        node1.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Vector<JSType> vector0 = new Vector<JSType>();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = new Node(42, node0, node0, node0, 660, (-3389));
      node0.isDec();
      Node node2 = node1.srcrefTree(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node3 = node2.setJSDocInfo(jSDocInfo0);
      node3.isOnlyModifiesArgumentsCall();
      node2.checkTreeEquals(node1);
      Object object0 = new Object();
      node1.isVar();
      node1.cloneTree();
      node0.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setAllFlags();
      Node node0 = new Node(125);
      Node node1 = new Node(44);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isAdd();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node2;
      Node node3 = new Node(56, nodeArray0, 53, (-1074));
      node3.getChildAtIndex((-1684));
      node3.isWith();
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node((-1260));
      Node node1 = node0.getLastSibling();
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1260
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      Node node1 = Node.newString("b@fTg' Aewz'5!t&7");
      Node node2 = Node.newNumber((double) 16);
      node1.isSetterDef();
      node1.isNoSideEffectsCall();
      node0.checkTreeEquals(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      node2.putProp(37, templateType0);
      Node.newString(37, "Unknown class name");
      Node.newString(50, "B!Y* NejKvK{=?&T", 48, 15);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 16.0 [opt_arg: com.google.javascript.rhino.Node$ObjectPropListItem@0000000340] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(37, node0, node0, node0, 15, 47);
      node1.isQualifiedName();
      node1.setSideEffectFlags(4095);
      Node node2 = new Node(598);
      Node node3 = Node.newNumber((-1439.527112999097), 4095, 46);
      node1.addChildrenAfter(node3, node0);
      node0.isFalse();
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("5|mm[Su(4Z SETm", 125, (-2199));
      Node node1 = new Node(125, node0, node0, (-3013), 45);
      node1.isCatch();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = new Node(56);
      node0.isInc();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(32, node0);
      node1.copyInformationFrom(node0);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 56
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-7));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(37, node0, node0, node0, 15, 47);
      node1.isQualifiedName();
      Node node2 = node1.srcref(node0);
      node0.setDouble(55.0);
      node1.setSideEffectFlags(4095);
      node0.isGetElem();
      node0.isComma();
      node2.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = new Node(108, (-83), 108);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isIn();
      Node node1 = new Node(32, node0, node0, node0);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.createObjectType((ObjectType) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = new Node(56);
      node1.addChildrenToFront(node0);
      node1.isWhile();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = new Node(40, node1);
      node0.addChildToBack(node2);
      // Undeclared exception!
      try { 
        node1.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node1.isTrue();
      node0.useSourceInfoFromForTree(node1);
      Node node2 = Node.newNumber((double) 57);
      Node node3 = node1.srcref(node2);
      node2.isIf();
      // Undeclared exception!
      try { 
        node1.removeChild(node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = Node.newNumber((-1187.0));
      Node node1 = new Node(153, node0);
      Node node2 = Node.newNumber((double) 4, 39, 52);
      Node node3 = new Node(52, node2);
      node3.isContinue();
      Node node4 = node1.cloneNode();
      Node node5 = Node.newString("nZi1r>O*%KDxUBgNbW@");
      node5.mayMutateGlobalStateOrThrow();
      Node.newString(52, "nZi1r>O*%KDxUBgNbW@");
      node5.getDirectives();
      node5.isFor();
      node0.isLabel();
      node1.isDebugger();
      node1.addChildToFront(node5);
      Node node6 = node1.useSourceInfoFrom(node3);
      node4.removeChildren();
      node6.cloneTree();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(709, node0, node0, node0, 56, 31);
      node0.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node2 = new Node(132, 49, 126);
      Node node3 = node2.useSourceInfoFromForTree(node1);
      node3.setSourceEncodedPosition(8);
      node1.getDirectives();
      node3.isDebugger();
      Node node4 = Node.newString(57, "Zn\"n/5beG+o!");
      node2.addChildToFront(node4);
      node2.useSourceInfoFrom(node1);
      node3.removeChildren();
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = Node.newNumber(2386.857);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node node1 = new Node(51);
      node1.isLabel();
      node1.isAssign();
      node1.getLength();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) vector0);
      Node node1 = new Node(38);
      node1.isEquivalentToShallow(node0);
      Node node2 = node1.srcrefTree(node0);
      node1.getProp((-356));
      node0.getProp(4095);
      node1.putIntProp(55, 50);
      node1.isThrow();
      node2.isThis();
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Node node2 = node0.clonePropsFrom(node1);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      Node node3 = node1.clonePropsFrom(node0);
      Vector<JSType> vector1 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("gMW|", false);
      node3.getChangeTime();
      node3.setStaticSourceFile(simpleSourceFile0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector1);
      node3.useSourceInfoFromForTree(node4);
      Node.newNumber((-242.2977));
      node1.isNew();
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = new Node(37);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-339));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(">9fV /Ya*e8S%{_", true);
      Node node1 = new Node(154, node0, node0, (-1131), 53);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.useSourceInfoFromForTree(node1);
      Node.newNumber(556.2965408670727);
      node1.isNew();
      Node node2 = Node.newString("second new child has existing parent", 55, 1673);
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      Node node1 = new Node(342);
      node0.getAncestors();
      node1.isWhile();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = new Node(38, node1, node1, 893, 15);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node2.setJSDocInfo(jSDocInfo0);
      node2.isStringKey();
      node1.isRegExp();
      node0.isCall();
      node2.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      node1.isFunction();
      Node node2 = Node.newNumber((double) 4095);
      node0.getStaticSourceFile();
      node2.isContinue();
      Node node3 = node0.cloneNode();
      Node node4 = Node.newString("oz`L7JDbIb1GxoQ2Vc9");
      node3.mayMutateGlobalStateOrThrow();
      Node.newString(83, "oz`L7JDbIb1GxoQ2Vc9");
      node2.isFor();
      node4.isLabel();
      node1.isDebugger();
      node2.addChildToFront(node1);
      Node node5 = node2.useSourceInfoFrom(node0);
      node5.removeChildren();
      node3.isDo();
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = new Node(37);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-339));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      Node node1 = Node.newString("Yfhl-MO!9");
      Node node2 = new Node((-4903), node1, node1, node1, (-2032), 54);
      node2.isTypeOf();
      node2.mayMutateArguments();
      node0.isObjectLit();
      node1.addSuppression("\n\nSubtree1: ");
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node.mergeLineCharNo(105, 142);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(105, nodeArray0, 105, 105);
      node0.isThis();
      node0.isHook();
      node0.isLabel();
      node0.isInc();
      Node node1 = new Node(16, node0);
      node0.isOptionalArg();
      node0.putIntProp(49, 39);
      node0.isThrow();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> 105 [direct_eval: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(108, 12, 108);
      Node node1 = new Node(105, node0);
      node0.addChildrenAfter(node1, (Node) null);
      // Undeclared exception!
      try { 
        node1.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setAllFlags();
      Node node0 = new Node(125);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b@fTg' Aewz'5!t&7");
      Node node1 = new Node(44);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isAdd();
      node1.isBlock();
      node0.isCast();
      node2.isNew();
      node2.getSourceOffset();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(709, node0, node0, node0, 56, 31);
      Node node2 = new Node(40, 49, 126);
      Node node3 = node2.useSourceInfoFromForTree(node1);
      node3.setSourceEncodedPosition(8);
      node1.getDirectives();
      node1.setDirectives((Set<String>) null);
      node3.isExprResult();
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(26);
      Node node1 = new Node(4095);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node2;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node2;
      nodeArray0[5] = node0;
      Node node3 = null;
      try {
        node3 = new Node((-1024), nodeArray0, 48, 40);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = Node.newNumber(971.3734099);
      Node node1 = new Node(31, node0, node0, node0, 103, 56);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.getAncestor(18);
      Node node3 = new Node(29, node1, node2, node2, 38, (-2844));
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = new Node((-2275), 1001, 37);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isIn();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = new Node((-536870912));
      Node node1 = Node.newString("T4%x", 38, 0);
      node1.setQuotedString();
      node0.isEquivalentToShallow(node1);
      node0.getLength();
      Node node2 = new Node((-1314), node0, node0);
      Node node3 = node2.removeChildren();
      node3.getAncestor(0);
      node1.getAncestors();
      node2.isThis();
      node2.getJsDocBuilderForNode();
      node3.isCast();
      // Undeclared exception!
      try { 
        node2.toString(false, true, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1314
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newString(4113, "y", 4113, 4113);
      node0.isOr();
      Object object0 = new Object();
      node0.putIntProp(125, 4113);
      node0.isThrow();
      node0.isName();
      node0.removeProp(125);
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = Node.newString(108, "4yap8;ub~");
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node node1 = new Node(12);
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = new Node(37);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-339));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isStringKey();
      node0.isRegExp();
      node0.isCall();
      Node node1 = new Node(57, node0, node0, node0, 2929, 130);
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.isEquivalentToShallow(node1);
      Node node2 = node1.srcrefTree(node0);
      node0.getProp(36);
      node0.getProp(3019);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.putIntProp(48, 4095);
      node1.isThrow();
      node2.isThis();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(40, node0, node0, node0, node0, 57, 40);
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node1.setString("BY*o NejKvK{=?&T");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(40, node0, node0, node0, node0, 57, 40);
      Node node2 = new Node(32);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<TemplateType> stack0 = new Stack<TemplateType>();
      Iterator<TemplateType> iterator0 = stack0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node((-1485), node0, node0, 93, 38);
      int int0 = Node.EMPTY_BLOCK;
      Node node2 = new Node(8);
      Node node3 = node0.clonePropsFrom(node2);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      Node.newString("Object#Key", 54, 77);
      node3.setType(36);
      Node.newString(29, "Object#Element");
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      Node node4 = jSTypeRegistry1.createParameters((List<JSType>) immutableList0);
      Node node5 = null;
      try {
        node5 = new Node((-6474), node3, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) vector0);
      Node node1 = new Node(42, node0, node0, node0, 660, (-3389));
      node0.isDec();
      Node node2 = node1.srcrefTree(node0);
      jSTypeRegistry0.getType("o?5[;`M5J8`;9@urjv");
      vector0.add((JSType) null);
      int int0 = Node.SLASH_V;
      node1.getBooleanProp(12);
      node0.isDelProp();
      node0.hasChildren();
      node1.isWhile();
      node1.isTrue();
      node2.isQualifiedName();
      node2.isTry();
      node0.isInstanceOf();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isEquivalentTo(node2, false, false, false);
      node2.useSourceInfoFrom(node1);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newNumber((double) 37);
      Node node1 = new Node(12, node0, node0, node0, 31, (-2598));
      Node node2 = new Node(147);
      node2.copyInformationFromForTree(node1);
      node2.getAncestor(38);
      int int0 = 1961;
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node2;
      nodeArray0[1] = node0;
      nodeArray0[2] = node2;
      nodeArray0[3] = node0;
      nodeArray0[4] = null;
      Node node3 = null;
      try {
        node3 = new Node(40, nodeArray0, 0, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = Node.newNumber((double) 153);
      Node node1 = new Node(153, node0);
      Node node2 = Node.newNumber((double) 4, 39, 52);
      Node node3 = new Node(52, node2);
      node0.isDelProp();
      Node node4 = node1.cloneNode();
      Node node5 = Node.newString("nZi1r>O*%KDxUBgNbW@");
      node1.isLabelName();
      Node.newString(52, "nZi1r>O*%KDxUBgNbW@");
      node3.isNot();
      node5.isFor();
      node4.isStringKey();
      node2.isGetProp();
      node5.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(0, node0, node0, node0, 56, 31);
      int int0 = Node.COLUMN_BITS;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(863);
      // Undeclared exception!
      try { 
        node1.appendStringTree(charArrayWriter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = Node.newString(108, "40yap;ub~5<");
      Node node1 = new Node(108, node0, 2, 40);
      node1.isFunction();
      Node node2 = Node.newNumber((double) 4095);
      node0.getStaticSourceFile();
      node1.useSourceInfoFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      ImmutableList.of(jSType0, jSType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.checkTreeEquals(node3);
      node2.isDelProp();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = new Node(0, 4113, 489);
      node0.isOr();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isIn();
      Node node1 = node0.cloneTree();
      node1.getJsDocBuilderForNode();
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) arrayList0);
      Node node1 = new Node(55, node0, node0, node0, 1410, (-444));
      node0.isDec();
      Node node2 = node0.srcrefTree(node1);
      int int0 = Node.SLASH_V;
      node2.getBooleanProp(118);
      node1.isDelProp();
      node1.hasChildren();
      node0.isWhile();
      node1.isTrue();
      node0.isQualifiedName();
      node1.isTry();
      node1.isInstanceOf();
      node2.isEquivalentTo(node0, false, true, true);
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isAnd();
      node0.isVoid();
      node0.isAssign();
      node0.isWith();
      node0.children();
      MockPrintStream mockPrintStream0 = new MockPrintStream("\n\nSubtree1: ");
      node0.appendStringTree(mockPrintStream0);
      Node node1 = new Node((-3218), node0, node0, node0);
      node0.copyInformationFromForTree(node1);
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = Node.newString(108, "4yap8;ub~");
      String string0 = "'.03ieie%h";
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = new Node((-506), node0, node0, 3194, 30);
      node0.copyInformationFrom(node1);
      Node node2 = new Node(56);
      // Undeclared exception!
      try { 
        node2.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(56, node0, node0, node0, 0, 31);
      node1.clonePropsFrom(node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-555));
      Node.newString("com.google.javascript.rhino.jstype.JSTypeNative");
      node0.isComma();
      node1.isDo();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) vector0);
      Node node1 = new Node(42, node0, node0, node0, 660, (-3389));
      node0.isDec();
      Node node2 = node1.srcrefTree(node0);
      int int0 = Node.SLASH_V;
      node1.getBooleanProp(12);
      node0.isDelProp();
      node0.hasChildren();
      node1.isWhile();
      node1.isTrue();
      node2.isQualifiedName();
      node2.isTry();
      node0.isInstanceOf();
      Node node3 = node0.useSourceInfoFrom(node2);
      node3.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isAnd();
      node0.isVoid();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DNL_.E(saj.ITq=Y+VQ");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isIn();
      node0.cloneTree();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(153, node0);
      node0.setSourceFileForTesting("R");
      Node node2 = new Node(100, 619, 48);
      node2.useSourceInfoFromForTree(node1);
      node0.getDirectives();
      node1.setDirectives((Set<String>) null);
      Node node3 = null;
      try {
        node3 = new Node(50, node1, node0, 32, 12);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node.newString(54, "", 4095, 16);
      node0.getQualifiedName();
      node0.getProp(25);
      node0.isLabelName();
      Node node1 = new Node(46, 39, 48);
      node1.isObjectLit();
      node1.addChildToBack(node0);
      Node node2 = Node.newString("b@fTg' Aewz'5!t&7");
      node2.toStringTree();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(709, node0, node0, node0, 56, 31);
      node0.setSourceFileForTesting("Zn\"n/5beG+o!");
      Node node2 = new Node(132, 49, 126);
      Node node3 = node2.useSourceInfoFromForTree(node1);
      node3.isFor();
      node2.isLabel();
      Node node4 = Node.newString("b@fTg' Aewz'5!t&7");
      node4.isDebugger();
      node0.addChildToFront(node3);
      Node node5 = node2.useSourceInfoFrom(node0);
      node5.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = new Node(205, 205, 205);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(12, nodeArray0, 52, 1348);
      node1.isAnd();
      node0.isVoid();
      node0.isDefaultCase();
      node1.isVar();
      Node node2 = node1.removeFirstChild();
      node1.isCase();
      node2.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newString(86, "40yap;ub~5<", 86, 86);
      node0.addSuppression("OG0=");
      Node node1 = new Node(86, node0, 2, 53);
      node0.isCast();
      node1.checkTreeEquals(node0);
      node0.getSourceOffset();
      node0.siblings();
      node1.getStaticSourceFile();
      node1.isBreak();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(153, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEquivalentTo(node0);
      node0.isComma();
      Node node2 = Node.newString(1, "_fRAl`hsv<sS@", 118, (-3525));
      node2.siblings();
      node2.isNot();
      node2.isSwitch();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node0 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) immutableList1);
      Node node1 = Node.newString(37, "Not declared as a type name");
      node0.checkTreeEquals(node1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, (List<JSType>) immutableList0);
      modificationVisitor0.caseFunctionType(functionType0);
      node1.isFalse();
      node0.toString();
      node1.copyInformationFromForTree(node0);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      Node node1 = Node.newString("b@fTg' Aewz'5!t&7");
      Node node2 = Node.newNumber((double) 16);
      node1.isNoSideEffectsCall();
      InputId inputId0 = new InputId("Q\"iU<k,GiI{");
      node2.setInputId(inputId0);
      node0.checkTreeEquals(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      node2.putProp(37, templateType0);
      Node.newString(50, "B!Y* NejKvK{=?&T", 48, 15);
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 16.0 [opt_arg: com.google.javascript.rhino.Node$ObjectPropListItem@0000000341] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString(38, "K%r2}ASC(R", (-7), 38);
      node0.getQualifiedName();
      node0.setVarArgs(true);
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(153, node0);
      node1.isEquivalentToShallow(node0);
      Node node2 = node0.srcrefTree(node1);
      node0.getProp(48);
      node0.getProp(42);
      node2.putIntProp(37, 1817);
      node2.isThis();
      node1.copyInformationFrom(node0);
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      node0.isEquivalentToShallow(node1);
      Node node2 = node1.srcrefTree(node0);
      node0.getProp(36);
      node2.useSourceInfoFrom(node0);
      node0.getProp(3019);
      node2.putIntProp(48, 4095);
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = new Node(116, 116, 297);
      node0.isSyntheticBlock();
      Node node1 = new Node(29, node0, node0, node0, node0);
      node1.getJSDocInfo();
      int int0 = Node.INPUT_ID;
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
      node1.getChildAtIndex((-1614));
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = new Node(10, 10, 10);
      node0.setLength(10);
      Node node1 = new Node(31);
      Node node2 = new Node(0, node0, node0, node0, 39, 31);
      node1.isDec();
      node1.srcrefTree(node0);
      int int0 = Node.SLASH_V;
      node1.isDelProp();
      node0.hasChildren();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node2;
      nodeArray0[1] = node0;
      node2.putBooleanProp(55, true);
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      nodeArray0[4] = node2;
      Node node3 = null;
      try {
        node3 = new Node(4095, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node node0 = Node.newNumber(698.41785335725);
      node0.isLocalResultCall();
      node0.mayMutateArguments();
      Node node1 = Node.newString("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.setWasEmptyNode(true);
      node1.toString();
      Node node2 = new Node(37, node1, node1, node1);
      node1.getLength();
      node0.addChildToFront(node2);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      node2.isEquivalentTo(node3);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.cloneTree();
      Node node4 = new Node(50, 55, 8);
      node4.getLastSibling();
      node3.isVar();
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newString(108, "4yap8;ub~");
      node0.isCase();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isFalse();
      Node node1 = new Node(93, node0, 55, 93);
      node1.copyInformationFrom(node0);
      node0.isVar();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(37, node0, node0, node0, 15, 47);
      node0.isDelProp();
      node1.setSideEffectFlags(4095);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) vector0);
      Node node1 = new Node(39);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) vector0);
      Node node1 = new Node(42, node0, node0, node0, 660, (-3389));
      node0.isDec();
      Node node2 = node1.srcrefTree(node0);
      int int0 = Node.SLASH_V;
      node1.getBooleanProp(12);
      node0.isDelProp();
      node0.hasChildren();
      node1.isWhile();
      node1.isTrue();
      node2.isQualifiedName();
      node0.isOptionalArg();
      node2.putIntProp(43, 30);
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THIS [is_constant_name: com.google.javascript.rhino.Node$IntPropListItem@0000000671] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = new Node(51, 51, 51);
      Node.newString(31, "com.google.javascript.rhino.jstype.NoResolvedType");
      Node node1 = new Node(119, node0, 17, (-957));
      Node node2 = new Node((-1622));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node3 = node2.setJSDocInfo(jSDocInfo0);
      node3.checkTreeEquals(node2);
      Object object0 = new Object();
      node3.isVar();
      Node node4 = null;
      try {
        node4 = new Node(1023, node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(153, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);
      node0.getChangeTime();
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node.newNumber(2035.90534436681);
      node2.isNew();
      node1.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = new Node(116, 116, 297);
      node0.isAnd();
      node0.isVoid();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      node_AncestorIterable0.forEach(consumer0);
      Node node1 = new Node(4);
      node1.isLabel();
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(7);
      Node node1 = Node.newNumber(613.2452108502624);
      Node node2 = new Node(57, node0, node0, node1);
      node0.useSourceInfoFromForTree(node2);
      Node node3 = Node.newNumber((double) 51);
      Node node4 = new Node(30);
      node4.isNew();
      node3.isScript();
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "qslb>2w([:Dxq");
      Node[] nodeArray0 = new Node[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(32, nodeArray0);
      Node node1 = new Node(49, node0, node0, node0, node0);
      node0.getIndexOfChild(node1);
      node0.removeChildren();
      node0.siblings();
      Node node2 = Node.newString(825, "qslb>2w([:Dxq");
      node2.getProp(49);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      node0.getAncestor(0);
      node_NodeMismatch0.equals((Object) null);
      try { 
        node1.setDouble(24576.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THROW is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node.mergeLineCharNo(105, 142);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(105, nodeArray0, 105, 105);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isIn();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = new Node(60, 60, 60);
      Node node1 = Node.newString(46, "B!Y* NejKvK{=?&T");
      node1.isNot();
      Node node2 = new Node(243, node1, node0, node0, node0);
      Node node3 = node2.removeChildAfter(node1);
      // Undeclared exception!
      try { 
        node3.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 60
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(126, node0, node0, 117, 101);
      node0.setSourceEncodedPosition(38);
      simpleErrorReporter0.warning("K", "", 110, (-2976));
      node1.isUnscopedQualifiedName();
      node1.getQualifiedName();
      node0.toStringTree();
      node0.isOnlyModifiesThisCall();
      node0.isStringKey();
      node0.isQuotedString();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(37, node0, node0, node0, 15, 47);
      node0.isDelProp();
      node1.setSideEffectFlags(4095);
      Node node2 = new Node(598);
      node0.isFalse();
      node1.toString();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(37, node0, node0, node0, 15, 47);
      node0.isDelProp();
      int int0 = Node.INPUT_ID;
      Node.newString("qc`5VV\"6hI8", 53, 30);
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        node1.appendStringTree(pipedWriter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = new Node(108);
      Node node1 = new Node((-2174), node0);
      node0.addChildrenAfter(node1, (Node) null);
      node1.mayMutateArguments();
      Node node2 = node0.getLastSibling();
      node2.getAncestor(30);
      node1.getBooleanProp(15);
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isAnd();
      node0.isVoid();
      Node node1 = new Node(15, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.getQualifiedName();
      Node node2 = new Node((-2052));
      node0.isGetterDef();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = new Node(56);
      node1.addChildrenToFront(node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = new Node(40, node1);
      node2.isTrue();
      simpleErrorReporter0.error("Object#Key", "Object#Key", 15, 55);
      node0.isTry();
      Node node3 = node1.detachFromParent();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = new Node(116, 116, 297);
      node0.isAnd();
      node0.getStaticSourceFile();
      node0.isBreak();
      Node node1 = Node.newString(0, "", 12, (-6592));
      Node node2 = new Node(42, node0, node1, (-2459), 30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList.of();
      // Undeclared exception!
      try { 
        node2.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = new Node(10, 10, 10);
      node0.setLength(10);
      Node node1 = new Node(31);
      node0.addChildrenToFront(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.checkTreeEquals(node0);
      Node.newString("Node tree inequality:\nTree1:\nDELPROP\n\n\nTree2:\nBITXOR 10 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002]\n    DELPROP\n\n\nSubtree1: DELPROP\n\n\nSubtree2: BITXOR 10 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002]\n    DELPROP\n", 38, 4);
      node0.isAssignAdd();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = new Node(56);
      node1.addChildrenToFront(node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = new Node(40, node1);
      node2.isTrue();
      node0.isTry();
      node2.mayMutateArguments();
      node0.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = Node.newNumber(1343.4426112451167);
      Node node1 = new Node(105, node0);
      Node node2 = Node.newNumber((double) 50, 2798, 30);
      Node node3 = new Node(120, node2);
      node1.isContinue();
      Node node4 = node3.cloneNode();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)25;
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte) (-70);
      byteArray0[4] = (byte)117;
      byteArray0[5] = (byte)105;
      byteArray0[6] = (byte)82;
      byteArray0[7] = (byte)2;
      byteArray0[8] = (byte)67;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.newString("nZi1r>O*%KDxUBgNbW@");
      Node.newString(52, "nZi1r>O*%KDxUBgNbW@");
      node4.isLabel();
      node1.isDebugger();
      // Undeclared exception!
      try { 
        node1.addChildToFront(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = new Node(10, 10, 10);
      node0.setLength(10);
      Node node1 = new Node(31);
      node0.addChildrenToFront(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isGetElem();
      node0.removeFirstChild();
      Node node2 = Node.newString(49, "O^:dFF`=");
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(176, node0, node0, node0, 8, 461845907);
      node1.setSourceFileForTesting("qslb>2w([:Dxq");
      Node node2 = new Node(63, 176, 16);
      Node node3 = node2.useSourceInfoFromForTree(node0);
      node1.getDirectives();
      node3.getDirectives();
      node2.setDirectives((Set<String>) null);
      node2.isExprResult();
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = new Node(122, 122, (-986));
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(2, node0);
      node0.detachFromParent();
      node0.addChildrenToBack(node1);
      node0.isNot();
      node0.getSourceFileName();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newNumber((-1187.0));
      node0.getSourceFileName();
      Node node1 = new Node(47, node0, 57, 43);
      Node node2 = Node.newNumber((double) 4, 39, 52);
      Node node3 = new Node(52, node2);
      node3.isContinue();
      Node node4 = node1.cloneNode();
      Node.newString("nZi1r>O*%KDxUBgNbW@");
      Node node5 = Node.newString(52, "nZi1r>O*%KDxUBgNbW@");
      node0.checkTreeEquals(node5);
      Object object0 = new Object();
      node2.isVar();
      node2.cloneTree();
      node2.isIn();
      node4.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) vector0);
      Node node1 = new Node(42, node0, node0, node0, 660, (-3389));
      node1.isGetterDef();
      node1.copyInformationFrom(node0);
      Node node2 = node1.srcrefTree(node0);
      int int0 = Node.SLASH_V;
      node1.getBooleanProp(12);
      node0.isDelProp();
      node0.hasChildren();
      node1.isWhile();
      node1.isTrue();
      Node.newNumber((double) 43, 1, 12);
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.isAnd();
      node0.isWith();
      node0.isSwitch();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(40, node0, node0, node0, node0, 57, 40);
      Node node2 = new Node(32);
      node2.isIf();
      node2.isQualifiedName();
      Node node3 = new Node(52);
      node2.hasChild(node1);
      node0.isEquivalentTo(node1, false, false, false);
      node2.siblings();
      node0.toString(true, true, false);
      node0.removeChildren();
      node1.copyInformationFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(56, node0, node0, node0, 0, 31);
      Node node2 = node0.getAncestor(1);
      node2.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = new Node(48, 48, 48);
      node0.isIn();
      Node node1 = new Node(0, node0, node0, 57, 16);
      node0.isAssignAdd();
      node0.detachFromParent();
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 48
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = Node.newString(122, "BY*o NejKvK{=?&T", 122, 2570);
      node0.setString("BY*o NejKvK{=?&T");
      Node node1 = new Node(122, node0, node0, node0, node0);
      Node node2 = Node.newString("BY*o NejKvK{=?&T", 2, 54);
      node0.isEquivalentTo(node1, true, true, true);
      node2.isQuotedString();
      node1.srcrefTree(node2);
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = new Node(116, 116, 297);
      node0.isAnd();
      Node node1 = new Node((-1077), node0, (-3216), 116);
      Node node2 = node0.srcref(node1);
      node2.getDirectives();
      // Undeclared exception!
      try { 
        node2.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      InputId inputId0 = new InputId("");
      node0.isAdd();
      node0.isQualifiedName();
      Node node1 = new Node(4, node0, node0, 43, 37);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceEncodedPositionForTree((-2454));
      node2.wasEmptyNode();
      node2.setVarArgs(false);
      Node node3 = node0.srcref(node1);
      node3.isSyntheticBlock();
      node1.getJsDocBuilderForNode();
      node3.isNumber();
      Node.newString(42, "B!Y* NejKvK{=?&T");
      node2.isReturn();
      node1.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node node1 = new Node(153, node0);
      Node node2 = Node.newNumber((double) 4, 39, 52);
      Node node3 = new Node(52, node2);
      Node node4 = new Node(51, 29, 29);
      Node node5 = node4.useSourceInfoFromForTree(node1);
      node3.getDirectives();
      node4.setDirectives((Set<String>) null);
      Node node6 = new Node(50, 1410, 1203);
      node6.isExprResult();
      node4.isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node7 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node5.checkTreeEquals(node7);
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      Node node1 = new Node((-2174), node0);
      Node node2 = new Node(39);
      node0.isSyntheticBlock();
      node0.getJSDocInfo();
      int int0 = Node.INPUT_ID;
      Node node3 = Node.newNumber((double) 37);
      node3.checkTreeEqualsImpl(node1);
      JSDocInfo.Visibility jSDocInfo_Visibility0 = JSDocInfo.Visibility.INHERITED;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node3.putProp(103, "b@fTg' Gewz'5!t&7");
      node2.cloneTree();
      node3.isOr();
      node1.siblings();
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((double) 125, 125, 125);
      node0.setSourceFileForTesting(" is not a number node");
      Node node1 = new Node(132, (-1616), 2306);
      node0.isOptionalArg();
      node0.putIntProp(31, 32);
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 31
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(110, nodeArray0, 110, 110);
      Node node1 = Node.newString(113, "com.google.javascript.rhino.jstype.InstanceObjectType", 85, 36);
      node1.isNot();
      node0.isSwitch();
      Node node2 = new Node(30, node0, 57, (-964));
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.putIntProp(33, 33);
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 33
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(110, nodeArray0, 110, 110);
      node0.isHook();
      node0.isLabel();
      node0.isInc();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = new Node(16, node0);
      node0.isOptionalArg();
      node0.isUnscopedQualifiedName();
      node0.putIntProp(49, 39);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SWITCH 110 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] [direct_eval: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node1 = new Node(56);
      node1.addChildrenToFront(node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = new Node(40, node1);
      node2.isTrue();
      node2.isEquivalentTo(node2, false, false, false);
      node2.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = Node.newString((-1339), "BY*o NejKvK{=?&T", (-1339), 1);
      Node node1 = new Node(124, node0, (-1339), 56);
      node1.srcref(node0);
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      node0.detachChildren();
      node0.isVoid();
      Node node1 = Node.newString((-1155), "com.google.javascript.rhino.Node$SideEffectFlags");
      node0.useSourceInfoFrom(node1);
      node0.getProp(124);
      node0.getProp(53);
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      Node node1 = new Node((-2174), node0);
      Node node2 = new Node(39);
      Node node3 = new Node(34, node1);
      Node node4 = new Node(2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isSetterDef();
      Node node5 = Node.newString(56, "bai`F&^2c!1)*_\"{G=");
      Node node6 = new Node(40, node3, node2, node5, 23, 535);
      node6.getBooleanProp(1);
      node3.isObjectLit();
      node4.isAssign();
      node6.cloneNode();
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = new Node(41, 41, 41);
      node0.isIn();
      Node node1 = new Node(8, 36, 54);
      node0.isAssignAdd();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) vector0);
      Node node1 = new Node(49, node0, node0, node0, node0, 4, 15);
      node1.isGetterDef();
      Node node2 = node1.srcrefTree(node0);
      int int0 = Node.SLASH_V;
      node1.getBooleanProp(12);
      node0.isDelProp();
      node0.hasChildren();
      node1.isWhile();
      node1.isTrue();
      node2.isCase();
      node2.isTry();
      node0.isInstanceOf();
      node1.isEquivalentTo(node2, false, false, false);
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = new Node(116, 116, 297);
      node0.isAnd();
      node0.isBreak();
      Node node1 = new Node(40, node0);
      node1.isOptionalArg();
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(35);
      Node node1 = new Node(35, node0, node0, node0);
      node1.isGetElem();
      Node node2 = null;
      Node node3 = null;
      try {
        node3 = new Node((-512), (Node) null, 49, (-612));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      Node node1 = new Node((-2174), node0);
      Node node2 = new Node(39);
      int int0 = Node.COLUMN_BITS;
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = new Node(10, 10, 10);
      node0.setLength(10);
      Node node1 = new Node(31);
      node0.addChildrenToFront(node1);
      Node node2 = new Node(9, node0, 32, 49);
      node1.srcref(node0);
      // Undeclared exception!
      try { 
        Node.newString((String) null, 2, 46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(110, nodeArray0, 110, 110);
      node0.isHook();
      node0.isLabel();
      node0.isLabelName();
      Node node1 = new Node(1951, 31, 8199);
      Node node2 = node0.srcref(node1);
      // Undeclared exception!
      try { 
        node2.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      InputId inputId0 = new InputId("");
      node0.isQualifiedName();
      Node node1 = new Node(4, node0, node0, 43, 37);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceEncodedPositionForTree((-2454));
      node2.wasEmptyNode();
      node2.setVarArgs(false);
      Node node3 = node0.srcref(node1);
      node3.isSyntheticBlock();
      node1.getJsDocBuilderForNode();
      node3.isNumber();
      Node.newString(42, "B!Y* NejKvK{=?&T");
      node2.isReturn();
      node1.getLastSibling();
      Node.extractLineno(4095);
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(57, node0, 46, 1);
      node0.getAncestor(1);
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newString((-1339), "40yap;ub~5<");
      node0.setType(31);
      Node node1 = new Node(49, node0, node0);
      node1.isInstanceOf();
      node0.isRegExp();
      node0.isVar();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = new Node(205, 205, 205);
      Node node1 = new Node(37, node0, 269, 4095);
      Node node2 = new Node((-242));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.setJSDocInfo(jSDocInfo0);
      Node node3 = null;
      try {
        node3 = new Node(1, node0, (Node) null, 54, 42);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isDelProp();
      node0.setSideEffectFlags(581);
      Node node1 = new Node((-770));
      node0.isArrayLit();
      node1.isDebugger();
      node0.addSuppression("G]oE>n");
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(110, nodeArray0, 110, 110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.srcrefTree(node1);
      node0.isHook();
      node0.isLabel();
      node0.isInc();
      Node node2 = new Node(16, node0);
      node0.putIntProp(49, 39);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SWITCH [direct_eval: com.google.javascript.rhino.Node$IntPropListItem@0000000339] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(40, node0, node0, node0, node0, 57, 40);
      Node node2 = new Node(32);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node3 = node2.setJSDocInfo(jSDocInfo0);
      node3.checkTreeEquals(node2);
      Object object0 = new Object();
      Node node4 = Node.newNumber((-3813.595505544182), (-2306), 30);
      node4.isVar();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      Node node5 = null;
      try {
        node5 = new Node((-2277), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = new Node(124, 50, 50);
      Node node1 = new Node(54, node0, node0, node0);
      node0.srcrefTree(node1);
      node0.isContinue();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      node0.isVoid();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      try { 
        node1.setString((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BREAK 116 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.toString();
      Node node1 = new Node(53, node0, 29, 42);
      Node node2 = new Node(117);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node3 = node2.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node3.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = Node.newString(38, "K%r2}ASC(R", (-7), 38);
      node0.isUnscopedQualifiedName();
      node0.isStringKey();
      Node node1 = Node.newNumber(848.449);
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      node0.isVoid();
      node0.isDefaultCase();
      int int0 = 44;
      // Undeclared exception!
      try { 
        node0.addChildBefore((Node) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = new Node(37);
      Node node1 = new Node(55, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);
      node0.getChangeTime();
      node0.setStaticSourceFile(simpleSourceFile0);
      node1.useSourceInfoFromForTree(node0);
      node0.setLength(37);
      Node.newNumber((-1329.4193628235));
      node0.isNew();
      node0.getSourceOffset();
      node1.isNE();
      node1.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      int int0 = Node.SLASH_V;
      Node node0 = Node.newString(52, "BY*o NejKvK{=?&T");
      node0.getBooleanProp(52);
      node0.isDelProp();
      node0.hasChildren();
      Node node1 = Node.newNumber(46.0, 2313, (-3940));
      node1.isWhile();
      node0.isQualifiedName();
      node1.isGetElem();
      node0.isInstanceOf();
      node1.isEquivalentTo(node0, true, false, false);
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isDelProp();
      node0.setSideEffectFlags(581);
      Node node1 = new Node((-770));
      Node node2 = new Node((-451), node0, node1, node1, node1);
      Node node3 = node2.removeChildAfter(node0);
      // Undeclared exception!
      try { 
        node3.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -770
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      Node.extractCharno(49);
      node0.getProp(119);
      node0.putProp(49, (Object) null);
      Node node1 = new Node(30, node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isQualifiedName();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.isEquivalentTo(node0);
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      Node node1 = new Node((-2174), node0);
      Node node2 = new Node(39);
      node0.isSyntheticBlock();
      Node node3 = Node.newString(4, "P|w_e1<", 30, 15);
      Node node4 = new Node(49, node1, 3506, 2431);
      Node node5 = node4.srcref(node3);
      node5.removeChild(node1);
      node5.getBooleanProp(57);
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = new Node(60);
      Node node1 = Node.newString(46, "B!Y* NejKvK{=?&T");
      Node node2 = new Node(49, node1, node1, node0, node1);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      node2.isQualifiedName();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node3.isEquivalentTo(node2);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node node0 = Node.newNumber(1104.37303);
      Node node1 = new Node((-1529480716), node0, node0, node0, node0);
      Node node2 = new Node(50, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node3 = new Node(37, node2);
      node3.copyInformationFromForTree(node2);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      JSType[] jSTypeArray0 = new JSType[6];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      jSTypeArray0[0] = jSType0;
      JSType.toMaybeTemplatizedType(jSTypeArray0[0]);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, jSType0, (JSType) null, jSTypeArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(40, node0, node0, node0, node0, 57, 40);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(32);
      node2.isIf();
      node2.isQualifiedName();
      Node node3 = new Node(52);
      node2.hasChild(node1);
      node0.isEquivalentTo(node1, false, false, false);
      node2.siblings();
      node0.toString(false, true, false);
      node0.removeChildren();
      node1.copyInformationFromForTree(node3);
      Node.newNumber((double) 31);
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = new Node(205, 205, 205);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(12, nodeArray0, 52, 1348);
      node0.isRegExp();
      node0.isGetterDef();
      node0.checkTreeEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = Node.newString(110, "no next sibling.");
      node0.getLength();
      Node.extractCharno(0);
      node0.getProp(0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("te2'@ctE#^'B+.@d8", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = Node.newString(96, "40yap;ub~5<", 96, 96);
      JSDocInfo.Visibility jSDocInfo_Visibility0 = JSDocInfo.Visibility.INHERITED;
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals((Object) null);
      Node node1 = new Node(119, 116, 46);
      node1.isWith();
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = new Node(10, 10, 10);
      node0.setLength(10);
      Node node1 = new Node(31);
      node0.addChildrenToFront(node1);
      Node node2 = Node.newNumber((double) 46, 64, 44);
      node1.getSourceOffset();
      node1.putProp(48, node2);
      node1.getIndexOfChild(node0);
      node0.isDec();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z{.U)!(O{ =KnYA`>JZ");
      Node node3 = node1.cloneNode();
      node3.setLineno(442476);
      node3.getSourcePosition();
      node0.getChildAtIndex(1);
      try { 
        node0.setDouble(988.7453595211177);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BITXOR 10 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node(597);
      Node node1 = new Node(102, node0, node0, node0, 55, 49);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isTypeOf();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(154, 153, 320);
      Node node1 = new Node(15, node0, node0);
      node0.cloneNode();
      Node.newString("q1A");
      Node.newString(6, "2;w/Eb");
      node1.isLabel();
      node0.isDebugger();
      node0.isLabel();
      node1.getChangeTime();
      Node.newNumber(46.0, 46, 1954);
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(13, (-288), 13);
      Node node1 = new Node(52, node0, node0, node0, node0, 23, 23);
      node0.isNE();
      Object object0 = new Object();
      node0.isVar();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INSTANCEOF 23 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = new Node(122, 122, (-986));
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(2, node0);
      Node node2 = node0.detachFromParent();
      node0.addChildrenToBack(node1);
      node2.setJSDocInfo((JSDocInfo) null);
      node0.isNot();
      node0.getSourceFileName();
      node0.isInstanceOf();
      node1.isCatch();
      node2.getLength();
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = Node.newNumber((double) 125, 125, 125);
      node0.setSourceFileForTesting(" is not a number node");
      Node node1 = new Node(132, (-1616), 2306);
      node0.getDirectives();
      node0.isTry();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      String string0 = "5)gD0";
      Node node0 = Node.newString((-1888), "5)gD0");
      Node node1 = new Node(32, node0, 1247, 12);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isEquivalentTo(node1);
      node1.useSourceInfoIfMissingFromForTree(node2);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-1888));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1888
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isFunction();
      Node node1 = Node.newString(".prototype");
      node0.copyInformationFromForTree(node1);
      Node node2 = Node.newNumber((double) 15);
      // Undeclared exception!
      try { 
        node2.replaceChild(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node node0 = new Node(154);
      node0.isUnscopedQualifiedName();
      node0.isStringKey();
      node0.isCatch();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = Node.newString("B!Y* NejKvK{=?&T");
      node0.getSideEffectFlags();
      Node node1 = new Node(43);
      Node node2 = node0.clonePropsFrom(node1);
      Vector<JSType> vector0 = new Vector<JSType>();
      UnaryOperator.identity();
      node2.setType(44);
      Node node3 = Node.newString(117, "B!Y* NejKvK{=?&T");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node.newString("b@fTg' Gewz'5!t&7", 8, 10);
      node3.checkTreeEquals(node3);
      node2.isTrue();
      node2.isSwitch();
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = new Node(105, 105, 301);
      node0.isNE();
      Node node1 = new Node(2097152, node0, node0, node0, node0);
      node1.isWhile();
      node0.isTrue();
      node1.isAssignAdd();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Set<String> set0 = jSDocInfo0.getModifies();
      node1.setDirectives(set0);
      node0.isCatch();
      node0.getBooleanProp(47);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = Node.newString(110, "no next sibling.");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(38, node0, node0);
      node0.isEquivalentTo(node1);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isComma();
      node1.isTry();
      node0.isScript();
      node2.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = new Node(48);
      Node node1 = new Node(8, node0, node0, node0, 1, 1);
      node0.isGetterDef();
      Node node2 = node1.srcrefTree(node0);
      int int0 = Node.SLASH_V;
      node1.getBooleanProp(38);
      node1.isDelProp();
      node1.hasChildren();
      node0.isWhile();
      node2.isQualifiedName();
      node0.isGetElem();
      node2.isInstanceOf();
      node1.isEquivalentTo(node2, false, true, false);
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = new Node(108);
      node0.isHook();
      node0.isLabel();
      node0.isEmpty();
      node0.isInc();
      node0.isDefaultCase();
      node0.isVar();
      Node node1 = new Node(512125, node0);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = new Node(37);
      node0.isDelProp();
      node0.isUnscopedQualifiedName();
      node0.isContinue();
      node0.isComma();
      node0.getLastChild();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = Node.newString(125, "com.google.javascript.rhino.Node$NodeMismatch", 112, 124);
      Node node1 = new Node(13, node0, 4194304, 21);
      Node node2 = new Node(758, node1, 51, 1214);
      node1.srcref(node2);
      // Undeclared exception!
      try { 
        node1.removeChild(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = new Node(153);
      node0.isObjectLit();
      Node node1 = Node.newNumber(570.4967179614, (-2584), 653);
      Node node2 = node0.clonePropsFrom(node1);
      node0.checkTreeEqualsImpl(node2);
      Node node3 = new Node(2, node1, node0, node2, node2);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node2);
      Locale locale0 = Locale.CANADA_FRENCH;
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node node0 = Node.newNumber(1.577540089150279);
      node0.getAncestor(1);
      Node node1 = new Node(40, node0, 57, (-1990));
      node1.getChildBefore((Node) null);
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(33);
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = new Node(108);
      Node node1 = Node.newString((-276), "B!Y* NejKvK{=?&T", 24, 720);
      node0.isOr();
      node0.isBreak();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node3 = new Node(13, node1, node2, node2, 25, 12);
      node3.useSourceInfoIfMissingFromForTree(node0);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(110, nodeArray0, 110, 110);
      Node node1 = node0.cloneTree();
      node1.addChildrenToBack(node0);
      node0.isHook();
      node0.putIntProp(49, 39);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SWITCH 110 [direct_eval: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      String string0 = "\u0000\u00AD\u0600\u06DD\u070F\u1680\u180E\u2000\u2028\u205F\u206A\u3000\uD800\uFEFF\uFFF9\uFFFA";
      Node node0 = Node.newString("\u0000\u00AD\u0600\u06DD\u070F\u1680\u180E\u2000\u2028\u205F\u206A\u3000\uD800\uFEFF\uFFF9\uFFFA");
      Node.newNumber((-5026.0));
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      Node node1 = new Node(37, node0, node0);
      Node node2 = node0.cloneNode();
      node0.isLabel();
      node0.isDebugger();
      node0.isVar();
      node2.isContinue();
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = new Node(108);
      Node node1 = new Node(46, node0);
      node1.addChildBefore(node1, node0);
      Node node2 = null;
      try {
        node2 = new Node(12, node1, 52, 55);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node node1 = new Node(37, node0, node0, node0);
      node0.getLength();
      node0.getProp(31);
      node1.getProp(37);
      node1.putProp(55, (Object) null);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = Node.newString("B!Y* NmjRvK{=?&T");
      node2.isQualifiedName();
      node0.isEquivalentTo(node1);
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) vector0);
      Node node1 = new Node(42, node0, node0, node0, 660, 36);
      node0.isTrue();
      Node node2 = node1.srcrefTree(node0);
      node2.removeFirstChild();
      int int0 = Node.DECR_FLAG;
      node1.getBooleanProp(12);
      node0.isDelProp();
      node2.isScript();
      node1.isWhile();
      node2.isQualifiedName();
      node2.isGetElem();
      node0.isInstanceOf();
      node1.isEquivalentTo(node2, false, false, false);
      node0.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(57, node0, node0, 47, 4);
      node0.addChildrenAfter(node1, (Node) null);
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(110, nodeArray0, 110, 110);
      Node node1 = Node.newNumber(0.0, 3892, 43);
      Node node2 = new Node(30, nodeArray0, 36, 51);
      Node node3 = node2.clonePropsFrom(node1);
      node1.setWasEmptyNode(false);
      node1.toString();
      node1.isObjectLit();
      node2.useSourceInfoIfMissingFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = new Node(77);
      node0.isObjectLit();
      Node node1 = Node.newNumber((double) 15, 4095, 50);
      Node node2 = node0.clonePropsFrom(node1);
      node1.checkTreeEqualsImpl(node0);
      node2.isCast();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "NFQm]$#C0a");
      node_SideEffectFlags0.setAllFlags();
      Node node0 = Node.newString(30, "quoted", 30, 30);
      node0.isNot();
      Node node1 = new Node(4, node0, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      ImmutableList.of(jSType0, jSType0);
      Node node0 = Node.newString("Object#Key");
      Node node1 = new Node(30, 35, 2);
      node1.useSourceInfoIfMissingFrom(node0);
      Node node2 = new Node(31, node0, node0, node1, 16, 2243);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
