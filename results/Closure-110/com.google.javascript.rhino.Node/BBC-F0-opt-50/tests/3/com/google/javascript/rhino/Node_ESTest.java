/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 18 08:07:56 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.UnionType;
import com.google.javascript.rhino.jstype.Visitor;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.nio.charset.UnsupportedCharsetException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(44, (-3943), 24);
      node0.getSourceOffset();
      node0.isSyntheticBlock();
      Node node1 = new Node(53, node0, node0, 39, 77);
      node0.useSourceInfoFrom(node1);
      node0.children();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node((-2397), 1180, 1180);
      Node node1 = new Node((-1893), node0);
      Node node2 = Node.newString("[]%LX<)J", 0, 115);
      Node node3 = node1.copyInformationFrom(node2);
      node3.isTrue();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = new Node(54);
      node0.putIntProp(54, 54);
      Node.newString("CharMatcher.anyOf(\"");
      Node.extractCharno((-1));
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.toString(false, false, false);
      node0.hasOneChild();
      node0.isAnd();
      node0.isDefaultCase();
      Node node1 = new Node(50, node0, 2, 1048576);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = new Node(132, 132, 132);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = Node.newString(42, "UVI#p1");
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node((-1341));
      node0.setType((-1341));
      node0.isOnlyModifiesThisCall();
      node0.setLineno(585);
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      Node node1 = new Node(48, node0, node0, node0, node0);
      node0.copyInformationFromForTree(node1);
      int int0 = Node.SLASH_V;
      node0.putIntProp(54, 112);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEFAULT_CASE [slash_v: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = new Node(112, 112, 112);
      Node node1 = new Node(57, 31, 50);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = Node.newString("a+pNH'%:LV74Q");
      Node node2 = new Node(55, node1, node0);
      Node node3 = node2.removeChildAfter(node1);
      // Undeclared exception!
      try { 
        node3.getExistingIntProp(1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 1
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node node0 = new Node(12, 12, 12);
      node0.getDirectives();
      Node node1 = new Node(152, node0);
      node1.isSetterDef();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = new Node(39);
      Node node1 = new Node(57, 40, 53);
      node0.addChildToBack(node1);
      node0.isEquivalentTo(node0, false, true, true);
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.putIntProp(35, (-868));
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 35
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newString("r");
      Node node1 = new Node(38, node0, node0, node0, node0);
      node1.cloneTree();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = Node.newNumber(1541.52, 496, 124);
      node0.getSideEffectFlags();
      node0.getAncestors();
      node0.setSourceFileForTesting("d+++F\u0002c\"eW9rc=I");
      node0.isVarArgs();
      node0.wasEmptyNode();
      node0.isOptionalArg();
      node0.toStringTree();
      node0.setDouble(496.7299105602367);
      node0.isSyntheticBlock();
      Node node1 = node0.getLastSibling();
      node1.mayMutateArguments();
      node1.getSourceFileName();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      Node node1 = new Node(85, node0, node0, 52, 51);
      node1.removeFirstChild();
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = Node.newNumber(1157.0);
      Node node1 = new Node(37, node0, node0);
      Node node2 = new Node(43, node1);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[3];
      JSTypeNative jSTypeNative0 = JSTypeNative.REFERENCE_ERROR_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.VOID_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.TYPE_ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      JSType jSType1 = jSTypeRegistry0.createOptionalNullableType(jSType0);
      jSTypeArray0[0] = jSType1;
      JSType jSType2 = jSTypeRegistry0.getNativeType(jSTypeNative1);
      jSTypeArray0[1] = jSType2;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType((String) null);
      JSType jSType3 = modificationVisitor0.caseTemplateType(templateType0);
      jSTypeArray0[2] = jSType3;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isLocalResultCall();
      node0.checkTreeEquals(node1);
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(126, 126, 126);
      Node node1 = new Node(31, node0);
      node0.removeChildren();
      Node node2 = node0.copyInformationFrom(node1);
      node2.checkTreeEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(33);
      Node node1 = new Node(43, 38, 12);
      node0.addChildrenToBack(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isAnd();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.checkTreeEqualsImpl(node1);
      node0.getQualifiedName();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = Node.newString("a+pNH'%:LV74Q");
      Node node1 = new Node(2, 1142, 32);
      Node node2 = new Node(44, node0, node1);
      node2.removeChildAfter(node0);
      Node node3 = Node.newString("a+pNH'%:LV74Q");
      node3.isOr();
      node0.cloneNode();
      node2.getAncestors();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = new Node(85);
      Node node1 = node0.getAncestor(0);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node0.getIntProp(16);
      Node node1 = new Node(54, 111, 97);
      node0.getInputId();
      node0.removeProp(5760);
      node0.isFunction();
      Node node2 = new Node(37);
      node2.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-917), nodeArray0, 148, 95);
      Node node1 = new Node(64, node0, 49, 42);
      Node node2 = new Node((-917), node1, node1);
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(1516);
      Node node1 = new Node(49, node0);
      node0.addChildToBack(node1);
      Node node2 = node1.detachFromParent();
      node2.getAncestors();
      Node node3 = new Node(587, 39, 56);
      node3.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int int0 = Node.DECR_FLAG;
      Node node0 = new Node(1);
      Node node1 = new Node(49, node0);
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = new Node(112);
      int int0 = Node.QUOTED_PROP;
      node0.putIntProp(36, 112);
      node0.removeFirstChild();
      Node node1 = new Node((-511), node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = new Node(77, 77, 77);
      node0.isObjectLit();
      node0.isFalse();
      Node node1 = new Node(4095, node0, node0, 101, (-349));
      Node node2 = node0.copyInformationFrom(node1);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = new Node(39);
      Node node1 = new Node(57, 40, 53);
      node0.addChildToBack(node1);
      node0.isEquivalentTo(node0, true, true, false);
      Node node2 = new Node(37, 101, 315);
      node2.isOnlyModifiesThisCall();
      node2.getInputId();
      node0.addChildToFront(node2);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(110);
      Node node1 = new Node(152, node0);
      node0.addChildToBack(node1);
      Node node2 = node1.detachFromParent();
      node0.isQualifiedName();
      node1.isCast();
      node2.isDelProp();
      node1.useSourceInfoFromForTree(node0);
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(28, 28, 110);
      Node node1 = new Node(30, node0);
      node0.addChildToBack(node1);
      Node node2 = node1.detachFromParent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEmpty();
      node2.removeFirstChild();
      Node node3 = node2.cloneNode();
      node3.isEquivalentTo(node1, false, false, false);
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(140, 140, 140);
      Node node1 = new Node(32, node0, node0, 4095, 30);
      Node node2 = node1.srcrefTree(node0);
      node1.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(110);
      Node node1 = new Node(152, node0);
      node0.addChildToBack(node1);
      node1.detachFromParent();
      node0.isQualifiedName();
      node1.isCast();
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = new Node(142, 142, 142);
      node0.putIntProp(142, 46);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getIntProp(142);
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = new Node(1426, node0, node0, 27, (-547));
      node0.srcrefTree(node1);
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node((-310));
      Node node1 = new Node(120, node0);
      node0.addChildToBack(node1);
      node1.detachFromParent();
      node0.isQualifiedName();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node(41, 360, 108);
      Node node1 = new Node(0, node0, node0, 32, 50);
      node0.srcrefTree(node1);
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      Node node1 = new Node(85, node0, node0, 52, 51);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = Node.DECR_FLAG;
      Node node0 = new Node(1);
      Node node1 = new Node(49, node0);
      Node node2 = node1.srcref(node0);
      node1.addChildAfter(node1, node0);
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = new Node(55, node1, node0);
      node2.isAssignAdd();
      node0.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node node1 = new Node(31, (-2152), (-2152));
      node1.cloneTree();
      node1.setSourceFileForTesting(")G_c_8P");
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = new Node(256, 256, 256);
      node0.isVarArgs();
      Node node1 = Node.newNumber((double) 36, 3613, (-1217));
      node1.setSourceFileForTesting("x$_2HgNs:G");
      Node node2 = node0.useSourceInfoFrom(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^nWZW(h9~");
      node2.isGetterDef();
      node0.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(120, 1096, 1096);
      Node node1 = new Node(1732, node0);
      Node node2 = Node.newString(302, "^nWZW(h9~");
      node1.removeFirstChild();
      node2.isSetterDef();
      node0.getSourcePosition();
      Node.newString("#2E\"&v(M)g>a&nA|9n");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(110);
      node0.addChildToBack(node0);
      Node node1 = node0.detachFromParent();
      node0.getAncestors();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.getQualifiedName();
      node0.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(43, 43, 43);
      Node node1 = new Node(4095, node0, 2, 2);
      node1.isEquivalentToShallow(node1);
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node(125);
      node0.putIntProp(40, 48);
      node0.isFunction();
      Node node1 = new Node(116);
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom(node1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(54, node0);
      node0.addChildToBack(node1);
      node0.detachFromParent();
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        Charset.forName("sD");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // sD
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node.newString(2527, ";Io.98Cv!@zA5|", (-2233), 111);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString((-2206), "", (-2206), (-2206));
      Node node1 = Node.newString("", 57, 36);
      node1.isEquivalentTo(node0, true, true, true);
      node0.setLength(54);
      node0.getLength();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.addChildToFront(node0);
      Node node3 = Node.newString("", 2, (-689));
      node2.getInputId();
      node0.isVoid();
      Node.mergeLineCharNo(1, 46);
      node1.isLocalResultCall();
      node3.isEquivalentTo(node2, false, false, true);
      node1.isEmpty();
      node0.getSourcePosition();
      node1.isContinue();
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2206
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = new Node((-1));
      Node node1 = Node.newNumber((double) 46, 36, 580);
      node0.isQuotedString();
      Node node2 = new Node(42, node0, node1);
      Node node3 = node2.getChildBefore(node1);
      // Undeclared exception!
      try { 
        node3.replaceChild(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = new Node(704, 704, 704);
      node0.type = 101;
      Node node1 = new Node((-1237), node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = new Node((-2043));
      Node node1 = new Node(47, node0);
      node0.addChildToBack(node1);
      Node node2 = node1.detachFromParent();
      node1.getAncestors();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.getQualifiedName();
      node2.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(33);
      Node node1 = new Node(43, 38, 12);
      node0.addChildrenToBack(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isTypeOf();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isQualifiedName();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node(43);
      Node node1 = new Node(31);
      node1.isEquivalentToShallow(node1);
      node0.isNE();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      node0.setChangeTime(30);
      node0.getStaticSourceFile();
      Node node1 = new Node(85, node0, node0, 52, 51);
      node1.isAssign();
      try { 
        node0.setDouble(1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // COMMA 85 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 125;
      Node node0 = new Node(125);
      int int1 = Node.SLASH_V;
      node0.putIntProp(54, 48);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BLOCK [slash_v: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newString((-1045), "com.google.javascript.rhino.Node$StringNode");
      Node node1 = Node.newString("-a1:", (-691), 16);
      node1.setSourceFileForTesting("NUMBER_VALUE_OR_OBJECT_TYPE");
      Node node2 = node0.srcref(node1);
      StaticSourceFile staticSourceFile0 = node0.getStaticSourceFile();
      node2.setStaticSourceFile(staticSourceFile0);
      node2.getType();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(39);
      node0.isEquivalentTo(node0, true, true, false);
      Node node1 = new Node(31, node0, node0, 4095, 15);
      Node node2 = node0.srcref(node1);
      node2.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = new Node(43);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " is not a string node");
      node0.isThrow();
      Node node1 = new Node(57);
      node0.isTrue();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node(110);
      String string0 = "OBJECT_NUMBER_STRING";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`2.5");
      Node node1 = new Node(32, node0);
      node0.addChildToBack(node1);
      Node node2 = new Node(42);
      node1.isQualifiedName();
      // Undeclared exception!
      node0.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = new Node(126);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("vEg", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(126, 40, (-1444));
      node0.useSourceInfoIfMissingFrom(node1);
      node1.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = new Node(27, 16, 27);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(152, node0);
      node0.addChildToBack(node1);
      Node.newString(52, "^nWZW(h9~");
      node1.removeFirstChild();
      node1.isSetterDef();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = new Node(140);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(48, 140, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      node2.useSourceInfoFrom(node1);
      node2.isDelProp();
      try { 
        node2.setString("iuTgx5o7gZ_E");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TYPEOF 140 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      Node node1 = new Node(32, node0, node0, node0);
      node0.srcrefTree(node1);
      Node node2 = null;
      try {
        node2 = new Node(85, node0, node0, 52, 51);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = new Node(125, 125, 48);
      node0.getAncestor(0);
      try { 
        node0.setDouble((-3226.133));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BLOCK 125 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(77, nodeArray0, 256, 77);
      Node node1 = new Node(53, 40, 4095);
      Node node2 = new Node(206);
      node1.addChildrenToFront(node2);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(28, 28, 110);
      Node node1 = new Node(32, node0, node0, node0, node0, 12, 15);
      node0.addChildToBack(node1);
      Node node2 = node1.detachFromParent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEmpty();
      node2.removeFirstChild();
      Node node3 = node2.cloneNode();
      node3.isEquivalentTo(node1, false, false, false);
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node(39);
      Node node1 = new Node(43, node0);
      node0.addChildToBack(node1);
      node0.detachFromParent();
      node0.isQualifiedName();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = 125;
      Node node0 = new Node(125);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.putIntProp(40, 48);
      node0.isFunction();
      node0.isOptionalArg();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BLOCK [originalname: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = Node.newNumber((-2055.0), 415, (-1294));
      node0.isEquivalentToShallow(node1);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(110);
      Node node1 = new Node(37, node0);
      node0.addChildToBack(node1);
      Node node2 = node1.detachFromParent();
      node1.isQualifiedName();
      node2.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-2224.927413199));
      node0.mayMutateArguments();
      node0.addSuppression("o(");
      node0.getJSDocInfo();
      Node node1 = Node.newNumber((double) 43, 100, 2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.getDouble();
      node1.setWasEmptyNode(true);
      Node node2 = node0.srcrefTree(node1);
      node0.isWhile();
      node1.getLength();
      // Undeclared exception!
      try { 
        node2.addChildBefore(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node((-2051));
      Node node1 = new Node(49, node0, 4095, 1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.setLineno(52);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(103);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.hasOneChild();
      Node node1 = new Node(36, node0, 30, 103);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isNot();
      node0.isEquivalentToShallow(node1);
      try { 
        node0.setDouble(103);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEC 30 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = new Node(43, 43, 124);
      Node node1 = new Node(4095, node0, 2, 2);
      node1.isEquivalentToShallow(node1);
      node0.mayMutateGlobalStateOrThrow();
      node0.getNext();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(38, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.isVoid();
      node2.getAncestor(56);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(26, 27, (-2651));
      Node node1 = node0.getAncestor(0);
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = Node.newNumber((-245.23074215173585));
      node0.isFunction();
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        node0.appendStringTree(pipedWriter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = new Node(155, 110, 155);
      Node node1 = new Node(110, node0);
      node0.addChildToBack(node1);
      Node node2 = Node.newString(4095, "^nWZW(h9~");
      node1.removeFirstChild();
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = new Node(148);
      node0.useSourceInfoIfMissingFrom(node0);
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = new Node(56, 4, 482);
      Node node1 = new Node(0, node0);
      node0.addChildToBack(node1);
      Node node2 = node1.detachFromParent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.isEmpty();
      Node node3 = node2.removeFirstChild();
      Node node4 = node2.cloneNode();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node2;
      nodeArray0[1] = node4;
      nodeArray0[2] = node3;
      Node node5 = new Node(50, nodeArray0);
      node0.isEquivalentTo(node5, true, true, false);
      node5.isWith();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(27, 16, 110);
      Node node1 = new Node(152, node0);
      node0.addChildToBack(node1);
      Node node2 = node1.detachFromParent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEmpty();
      Node node3 = node2.removeFirstChild();
      Node node4 = Node.newString("already specified skipNulls", 124, 8192);
      Node node5 = new Node(42, node0, node4);
      node5.detachChildren();
      Node node6 = node2.useSourceInfoFrom(node5);
      Node node7 = node2.cloneNode();
      node7.isEquivalentTo(node1, false, false, false);
      node3.toString();
      node6.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(110);
      Node node1 = new Node(152, node0);
      node0.addChildToBack(node1);
      node0.isQualifiedName();
      node1.isCast();
      node1.copyInformationFrom(node0);
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = Node.DECR_FLAG;
      Node node0 = Node.newString(1, "{jd,6LIE", 1, 1);
      Node node1 = new Node(1, node0, node0, 57, 1);
      node1.setLineno(56);
      node1.addChildAfter(node1, node0);
      node1.hasMoreThanOneChild();
      node1.getAncestor(4);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = new Node((-12), (-12), (-12));
      Node node1 = new Node(32, node0, node0, node0, 12, 42);
      node1.cloneTree();
      node1.isComma();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(77, nodeArray0, 256, 77);
      Node node1 = new Node(56, node0, node0, node0, 4095, 4);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(42, 41, 40);
      node0.srcrefTree(node1);
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      Node node1 = new Node(85, node0, node0, 52, 51);
      Node node2 = node0.cloneTree();
      node1.isEquivalentTo(node2);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = new Node(855);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(37, 57, 304);
      node1.isUnscopedQualifiedName();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(4, node0, node0, 36, (-5066));
      node1.getStaticSourceFile();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(1, node0, 2, 49);
      node0.srcrefTree(node1);
      node0.getJSDocInfo();
      // Undeclared exception!
      try { 
        node1.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = new Node(44);
      Node node1 = Node.newNumber((-1.0), (-3573), 0);
      node1.getQualifiedName();
      node0.srcrefTree(node1);
      node0.setVarArgs(false);
      node0.getJSDocInfo();
      node0.setLineno(44);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = Node.newNumber((-245.23074215173585));
      node0.isFunction();
      Node node1 = Node.newString(38, ".I3aD#");
      node1.putIntProp(32, 29);
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(130, "}:o!L", 122, 122);
      node0.isExprResult();
      node0.isAnd();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = Node.newString("a+p4H'%:LV74Q", 54, 2);
      Node node2 = node0.srcrefTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isExprResult();
      node2.isAnd();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = new Node(38, 4, 30);
      Node node2 = node0.cloneTree();
      node0.isEquivalentTo(node2);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(125);
      int int0 = Node.QUOTED_PROP;
      Node node1 = new Node(152, node0, node0, node0, (-503), 2);
      node0.useSourceInfoIfMissingFrom(node1);
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = new Node(43, 43, 43);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(56, nodeArray0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals("^Sy");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.extractCharno(148);
      Node node0 = new Node(1843);
      Node node1 = new Node((-570), node0);
      Node node2 = new Node(148, node1, 56, 15);
      node2.getStaticSourceFile();
      node2.getAncestor(57);
      node2.getJSType();
      Node node3 = node2.cloneNode();
      node0.isNoSideEffectsCall();
      node3.siblings();
      Node.newNumber((double) 48, (-893), 0);
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = new Node(125);
      InputId inputId0 = new InputId("!%4@L0b(");
      node0.setInputId(inputId0);
      node0.getInputId();
      node0.isHook();
      node0.isAssignAdd();
      try { 
        node0.setString((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BLOCK [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = new Node(55, node1, node0);
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(44);
      node0.getJSDocInfo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node2 = node0.clonePropsFrom(node1);
      node2.isCall();
      node1.children();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.isLabelName();
      Node.newString("not a StringNode", 29, (-2923));
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(43, 43, 124);
      Node node1 = new Node(4095, node0, 2, 2);
      node1.isEquivalentToShallow(node1);
      node0.isTrue();
      node0.isNot();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node2 = new Node(1135, node1);
      node0.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newString("F|nctDon", 64, 44);
      node0.hasMoreThanOneChild();
      Node node1 = new Node(26, node0, node0, node0);
      Node node2 = node0.cloneNode();
      Node node3 = Node.newNumber(40.0, 36, 64);
      node1.setWasEmptyNode(true);
      node1.checkTreeEqualsImpl(node2);
      node3.getQualifiedName();
      node2.isInc();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node1.setJSDocInfo((JSDocInfo) null);
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      // Undeclared exception!
      try { 
        node1.getChildBefore(node4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      Node node0 = Node.newString(115, "Object#Key", 1, 0);
      JSType jSType1 = modificationVisitor0.caseNumberType();
      simpleErrorReporter0.warning("Not declared as a constructor", "o~p>5+pyq-'@h}'", (-4477), 53);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType1;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.isLocalResultCall();
      node0.checkTreeEquals(node1);
      node0.isEquivalentToShallow(node1);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = new Node(49, node0, 42, 38);
      node0.useSourceInfoFromForTree(node1);
      node1.isLabelName();
      node1.removeProp(32);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isOr();
      Node.newString(994, "B6k", 116, 53);
      node0.putIntProp(49, (-612));
      Node node1 = new Node(1800, node0, 50, 102);
      node0.isDefaultCase();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = new Node(132);
      Node node1 = new Node(36, node0, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isExprResult();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString("|x-kF");
      node0.siblings();
      Node node1 = node0.cloneTree();
      node1.getSourceFileName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      node0.isNoSideEffectsCall();
      boolean boolean0 = true;
      node0.setVarArgs(true);
      node0.getSourcePosition();
      node0.getSourcePosition();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isTry();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING |x-kF [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node(105, 105, 105);
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node1.wasEmptyNode();
      node0.isAdd();
      node0.removeProp(16);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(45, "/.%8");
      node0.setLineno(45);
      node0.putBooleanProp(45, true);
      node0.isLabelName();
      node0.removeProp(45);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node.newString((-493), ":~cC#dd%5_", (-493), 3481);
      Node node0 = Node.newString("`25");
      node0.putIntProp(43, 92);
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node.newString((-1488), "QUiqHMyN7A%[9", (-1488), 3481);
      Node node0 = Node.newString("Object#Key");
      node0.putIntProp(57, 49);
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(13, 101, 13);
      Node node1 = new Node(13, node0);
      Node node2 = new Node((-3829));
      Node node3 = new Node((-6254), node1, node2);
      node0.clonePropsFrom(node2);
      Node node4 = null;
      try {
        node4 = new Node((-6254), node3, node0, node2, 32, 2332);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Node node0 = Node.newString("hAs#", 958, 958);
      Node node1 = new Node(21, node0, node0);
      Node node2 = new Node(21, node1, 4095, 4095);
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = new Node(55, node1, node0);
      node2.removeChildAfter(node1);
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = new Node(39);
      Node node1 = new Node(3189);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      node0.addChildToFront(node1);
      node_NodeMismatch0.equals(node0);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = new Node((-12), (-12), (-12));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.Property");
      Node node1 = new Node(37, 8, 46);
      node1.addChildrenToBack(node0);
      Node node2 = node1.cloneTree();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isEquivalentTo(node2, true, false, true);
      node2.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(125);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = Node.QUOTED_PROP;
      Node node1 = new Node(42, 2, 38);
      node1.cloneTree();
      node1.addSuppression("u4UE6");
      node0.isLabel();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = Node.newString(32, "O'U!LkNX\u0002qM4#E2x}<", 696, (-1789));
      node1.setType(53);
      node0.clonePropsFrom(node1);
      node1.isCall();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = new Node((-12));
      Node node1 = new Node(49);
      node1.addChildrenToBack(node0);
      Node node2 = node1.cloneTree();
      node0.isFunction();
      // Undeclared exception!
      try { 
        node2.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = new Node((-2), (-1819), (-1819));
      Node node1 = new Node(110, 38, 12);
      node0.addChildrenToBack(node1);
      node1.cloneTree();
      node0.isEquivalentTo(node1);
      int int0 = Node.VAR_ARGS_NAME;
      Node node2 = node0.srcrefTree(node1);
      node0.isTypeOf();
      node1.mayMutateArguments();
      node1.isDec();
      node2.isFunction();
      node2.removeChildren();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newNumber(2101.816016297, 8199, 4096);
      node0.getType();
      node0.getDouble();
      node0.getSourceOffset();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getParent();
      node0.getType();
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = new Node(43, 43, 124);
      node0.isQuotedString();
      node0.addSuppression((String) null);
      node0.putBooleanProp(2192, false);
      Node node1 = new Node(57, node0, node0, 112, 56);
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node0.isQuotedString();
      Node node1 = new Node(3308, node0, (-701), 148);
      node1.isEquivalentToShallow(node0);
      node1.isTrue();
      Node node2 = Node.newString(95, "Object#Element", 1, 37);
      node0.useSourceInfoIfMissingFromForTree(node2);
      node2.getStaticSourceFile();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(45, "GETPROP");
      node0.addSuppression((String) null);
      node0.putBooleanProp(45, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node0.setDouble(1.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 45
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.common.base.CharMatcher$7");
      Node node0 = new Node(113, 103, 103);
      node0.putIntProp(103, 301);
      node0.getAncestors();
      Node node1 = new Node(113, node0, 113, 354);
      node1.isOnlyModifiesThisCall();
      node0.getDirectives();
      node0.srcrefTree(node1);
      node0.addChildToBack(node1);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newNumber((double) 77, 77, 77);
      Node node1 = new Node(77, node0, node0, 57, 39);
      node1.copyInformationFromForTree(node0);
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node((-1361));
      Node node1 = Node.newString(103, "}:o!L", 55, 1);
      Node node2 = node0.srcrefTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node3 = node2.srcrefTree(node0);
      node0.isTypeOf();
      node3.mayMutateArguments();
      node1.isDec();
      Node node4 = new Node(39, node3, node0);
      // Undeclared exception!
      try { 
        node4.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node(64);
      Node node1 = Node.newNumber((double) 51);
      node0.isEquivalentToTyped(node1);
      Node node2 = node0.srcrefTree(node1);
      node0.isNoSideEffectsCall();
      node1.setType(12);
      node0.getSourceFileName();
      node1.isQualifiedName();
      node0.isQuotedString();
      node0.isFunction();
      node1.isVarArgs();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = node2.srcref(node1);
      node3.isQualifiedName();
      node2.children();
      node2.isEquivalentToShallow(node1);
      node1.getInputId();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(119, 16, 118);
      Node node1 = new Node(60, node0);
      node0.addChildToBack(node1);
      Node node2 = node1.detachFromParent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEmpty();
      Node node3 = node2.removeFirstChild();
      Node node4 = new Node(60, node1, node3, node3, 47, 56);
      node4.isEquivalentTo(node1, false, false, false);
      node3.isCall();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node((-1848));
      node0.addChildrenToBack(node0);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = Node.newString("Object#Element", 0, 55);
      node1.putIntProp(42, (-1848));
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(1, node0, node0, node0, node0, 2, 2);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.hasOneChild();
      node1.getDirectives();
      node1.isEquivalentTo(node1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.children();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getQualifiedName();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newString("v#Hj@mT#Cd>BCv5");
      node0.setQuotedString();
      node0.isOptionalArg();
      Node node1 = Node.newString((-239), "v#Hj@mT#Cd>BCv5");
      node0.putProp((-735), "v#Hj@mT#Cd>BCv5");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+hGw<)");
      node0.isGetterDef();
      node0.putIntProp(2, 706);
      node0.isQuotedString();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = new Node(43, 43, 124);
      node0.isQuotedString();
      Node node1 = new Node(4095, node0, 2, 2);
      node1.isEquivalentToShallow(node1);
      node0.isTrue();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.getStaticSourceFile();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = new Node(101, 101, 134);
      Node node1 = new Node(4, 57, 2240);
      node1.addChildrenToBack(node0);
      Node node2 = node1.cloneTree();
      node1.useSourceInfoFrom(node2);
      Node.newNumber(0.0);
      node0.isEquivalentTo(node2);
      int int0 = Node.VAR_ARGS_NAME;
      node0.isCast();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(1607, 110, (-2353));
      Node node1 = new Node(113, node0);
      node0.addChildToBack(node1);
      Node node2 = node0.detachFromParent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.isEmpty();
      Node node3 = node2.removeFirstChild();
      Node node4 = node3.cloneNode();
      node0.useSourceInfoIfMissingFromForTree(node1);
      node3.isEquivalentTo(node1, true, false, true);
      node2.setIsSyntheticBlock(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "U");
      node4.isDefaultCase();
      // Undeclared exception!
      try { 
        node2.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1607
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(27, 16, 110);
      Node node1 = new Node(152, node0);
      node0.addChildToBack(node1);
      Node node2 = node1.detachFromParent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEmpty();
      node2.removeFirstChild();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.cloneNode();
      node1.clonePropsFrom(node0);
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2055));
      node0.isGetElem();
      Node node1 = new Node(49, node0, 4095, 1);
      node1.getIntProp(55);
      Node node2 = new Node(55, node1);
      node1.clonePropsFrom(node0);
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(120, 120, 120);
      Node node1 = new Node(1, node0);
      Node node2 = node0.srcrefTree(node1);
      node0.isTypeOf();
      node2.mayMutateArguments();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("com.google.javascript.rhino.Node$AncestorIterable", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(27, 16, 110);
      Node node1 = new Node(152, node0);
      node1.setIsSyntheticBlock(false);
      node0.addChildToBack(node1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEmpty();
      node0.removeFirstChild();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.cloneNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((List<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = new Node(125);
      int int0 = Node.QUOTED_PROP;
      Node node1 = new Node(42, 2, 38);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isBlock();
      node2.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString("enum{");
      node0.getSourceFileName();
      Node node1 = new Node(2073, node0, node0, node0, node0, 32, (-1428));
      node0.addChildrenToFront(node1);
      node0.isVarArgs();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.setDirectives((Set<String>) null);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType((String) null);
      node_NodeMismatch0.equals(templateType0);
      Node node2 = node0.removeChildren();
      Node node3 = node2.useSourceInfoFromForTree(node0);
      node1.isLabel();
      Node.NodeMismatch node_NodeMismatch1 = node1.checkTreeEqualsImpl(node0);
      node3.isGetterDef();
      node1.isEmpty();
      node2.isOptionalArg();
      node2.isLabelName();
      node2.cloneNode();
      node_NodeMismatch1.equals("enum{");
      node1.isLabelName();
      node1.removeProp((-1646));
      node2.isFromExterns();
      node1.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = Node.newNumber((double) 57, 43, 1835);
      node1.addChildToFront(node0);
      node0.copyInformationFromForTree(node1);
      node0.isRegExp();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = new Node(38);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = new Node(11, 11, 11);
      Node node1 = new Node(37, (-3673), 46);
      node1.addChildrenToBack(node0);
      Node node2 = node1.cloneTree();
      node1.isEquivalentTo(node2);
      int int0 = Node.VAR_ARGS_NAME;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createUnionType((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = new Node(43, 43, 124);
      node0.isQuotedString();
      Node node1 = new Node(4095, node0, 2, 2);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isCall();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(44, "GETPROP");
      node0.addSuppression((String) null);
      node0.putBooleanProp(44, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node0.setDouble(1.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 44
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(48, 2, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      node1.isEquivalentToShallow(node2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      Node node4 = new Node(155, (-972), 36);
      node2.isDelProp();
      node4.isDebugger();
      node3.children();
      node2.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(39);
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        node0.setDouble(1.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(461845907, (-4689), 304);
      Node node1 = new Node(32, node0);
      node0.addChildToBack(node1);
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = node0.detachFromParent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEmpty();
      node0.removeFirstChild();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.cloneNode();
      node2.hasMoreThanOneChild();
      node2.setIsSyntheticBlock(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LD9p!)TM8>");
      node2.isDefaultCase();
      // Undeclared exception!
      try { 
        node2.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 461845907
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = new Node(112);
      int int0 = Node.QUOTED_PROP;
      node0.putIntProp(36, (-1985));
      node0.isFunction();
      Node node1 = new Node(15, node0, 122, 34);
      node0.isDefaultCase();
      node0.toString();
      node0.getNext();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(39);
      nodeArray0[0] = node0;
      Node node1 = Node.newString(31, "^nWZW(h9~", 0, 51);
      node0.clonePropsFrom(node1);
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(39);
      nodeArray0[0] = node0;
      Node node1 = node0.useSourceInfoFrom(node0);
      node0.isEquivalentTo(node0, true, true, true);
      node1.getSideEffectFlags();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(115, node0, 4095, 120);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = Node.newString("z!JIg");
      node2.isExprResult();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(38, node0, node0, node0, 12, 38);
      Node node2 = node0.srcrefTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isExprResult();
      node1.isAnd();
      node2.wasEmptyNode();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = new Node(101, 101, 142);
      Node node1 = new Node(4, 57, 3484);
      node1.isFromExterns();
      node1.addChildrenToBack(node0);
      Node node2 = node1.cloneTree();
      Node node3 = node2.removeFirstChild();
      node2.isAdd();
      node3.isHook();
      // Undeclared exception!
      try { 
        node3.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(142);
      Node node1 = Node.newString(38, "second new child has existing parent", 42, 50);
      Node node2 = new Node(1, node0, node0, node0, node1, 4095, 54);
      node1.isCall();
      node0.mayMutateArguments();
      node2.useSourceInfoIfMissingFrom(node1);
      Node.newString("Zqg5&L");
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isOr();
      Node node1 = new Node(1, node0, node0, node0, node0, 2, 2);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.setIsSyntheticBlock(false);
      node1.hasOneChild();
      node1.getDirectives();
      Node node2 = node0.cloneNode();
      node0.isEquivalentTo(node2, false, false, false);
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 111, 111);
      Node node1 = new Node(111, node0, node0, node0, 29, 12);
      int int0 = Node.VAR_ARGS_NAME;
      node1.srcrefTree(node0);
      node1.isTypeOf();
      Node node2 = Node.newString("l=4/12.4", 2, 155660);
      node2.mayMutateArguments();
      node1.isDec();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newNumber((-248.44917504055658));
      Node node1 = new Node(93, 30, 55);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Iterator<JSType> iterator0 = linkedList0.descendingIterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node2.siblings();
      node1.cloneNode();
      node1.isEquivalentTo(node0, false, false, true);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node1.isSyntheticBlock();
      node0.setIsSyntheticBlock(false);
      node0.removeProp(16);
      Node node2 = new Node(36);
      node2.isGetElem();
      node2.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = new Node(122);
      node0.getIntProp(57);
      node0.isUnscopedQualifiedName();
      node0.setType(0);
      Node node1 = new Node(8, node0);
      node0.useSourceInfoIfMissingFromForTree(node0);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(120, 120, 120);
      Node node1 = new Node(40, node0, node0, node0, node0, 153, 1);
      node0.isEquivalentTo(node1);
      node0.isAssignAdd();
      // Undeclared exception!
      try { 
        node1.setString("Oy?wic_");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(91, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      node2.putProp(2, node0);
      Node node3 = new Node(50);
      Node node4 = new Node(155, (-972), 36);
      node1.isScript();
      node3.isIf();
      Node node5 = new Node(57, node4, 2, 31);
      node5.removeChildren();
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = new Node(101, 101, 142);
      Node node1 = new Node(4, 57, 3484);
      node1.addChildrenToBack(node0);
      Node node2 = node1.cloneTree();
      Node node3 = Node.newNumber(0.0);
      node0.isEquivalentTo(node2);
      int int0 = Node.VAR_ARGS_NAME;
      Node node4 = node1.srcrefTree(node0);
      node3.isTypeOf();
      node3.mayMutateArguments();
      node0.isDec();
      try { 
        node4.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // RETURN 101 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(39);
      nodeArray0[0] = node0;
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      node1.addSuppression("q#*LlF=}b8%Pb'Kw");
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber((-2522.31));
      Node node1 = new Node(41, node0, node0, node0, node0, 2, 390);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.hasOneChild();
      node1.isQualifiedName();
      int int0 = Node.SIDE_EFFECTS_ALL;
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.clonePropsFrom(node1);
      node0.siblings();
      node0.isVoid();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node(42, (-1409), 38);
      int int0 = Node.POST_FLAG;
      node0.isDebugger();
      node1.isVarArgs();
      node0.isSyntheticBlock();
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newString("`QoAh", 34, 1709);
      node3.checkTreeTypeAwareEqualsImpl(node2);
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = new Node(13);
      node0.isCase();
      int int0 = Node.POST_FLAG;
      node0.isDebugger();
      node1.isVarArgs();
      Node node2 = new Node(597);
      node2.isSyntheticBlock();
      node0.copyInformationFromForTree(node1);
      Node.newString("f9wPc^", 37, 55);
      Node node3 = Node.newNumber(440.0235907559792);
      try { 
        node3.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 440.0235907559792 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = new Node(125);
      int int0 = Node.QUOTED_PROP;
      node0.putIntProp(36, (-1985));
      node0.isFunction();
      Node node1 = new Node(15, node0, 122, 34);
      node0.isDefaultCase();
      node0.toString();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(120, 120, 120);
      node0.isSyntheticBlock();
      Node node1 = new Node(42, 2, 53);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newString("f9wPc^", 2, 40);
      node3.checkTreeTypeAwareEqualsImpl(node2);
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newString(2015, "C~,R12S>n8atH/Th#");
      node0.cloneNode();
      node0.getDirectives();
      Node node1 = new Node(40, (-985), 42);
      node1.getQualifiedName();
      node1.srcref(node0);
      node1.toStringTree();
      node0.isEquivalentTo(node1, true, true, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.common.base.Predicates$ContainsPatternPredicate");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        node0.toString(true, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2015
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(115, node0, 4095, 120);
      node1.checkTreeEqualsImpl(node1);
      node1.isName();
      node1.isBlock();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = new Node(133);
      Node node1 = new Node(48, 2, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      JSType[] jSTypeArray0 = new JSType[4];
      jSTypeArray0[0] = null;
      jSTypeArray0[1] = null;
      jSTypeArray0[2] = null;
      jSTypeArray0[3] = null;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isVoid();
      node3.getChildAtIndex((-609));
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = new Node(122);
      node0.getIntProp(57);
      Node node1 = new Node(8, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node0);
      node2.putBooleanProp(49, true);
      node0.isBlock();
      Node node3 = node0.cloneTree();
      node3.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      Node node0 = Node.newString(115, "Object#Key", 1, 0);
      node0.putIntProp(50, (-2059));
      node0.isFunction();
      Node node1 = new Node(1504, node0, 49, 115);
      node1.isDefaultCase();
      node0.toString();
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(39);
      nodeArray0[0] = node0;
      Node node1 = new Node(39, nodeArray0, 1, 1);
      node1.isThrow();
      node0.getSourceOffset();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(39, 16, 29);
      Node node1 = new Node(51, node0);
      node0.addChildToBack(node1);
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = node1.detachFromParent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node3 = Node.newString("\n\nSubtree1: ");
      node3.isEmpty();
      node1.removeFirstChild();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node3.cloneNode();
      node0.isEquivalentTo(node2, false, false, false);
      node1.setIsSyntheticBlock(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LD9p!)TM8>");
      node2.isDefaultCase();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newString("R3w");
      node0.setSourceFileForTesting((String) null);
      node0.getSourceFileName();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = new Node((-1646), (-1646), (-1646));
      int int0 = Node.DECR_FLAG;
      Node node1 = new Node(56, node0, node0);
      node0.isGetProp();
      Node node2 = new Node(42, 15, 8);
      node1.addChildAfter(node2, node0);
      node0.getJSDocInfo();
      node0.getBooleanProp(3277);
      node2.wasEmptyNode();
      node2.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node0.getProp(2813);
      node0.getProp((-25));
      node0.putProp((-25), (Object) null);
      node0.isIf();
      Node node1 = Node.newString("BAG", 155, 1093);
      node0.isReturn();
      node0.isAssignAdd();
      Node node2 = new Node((-25));
      node1.setOptionalArg(false);
      node0.getDouble();
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(110);
      Node node1 = new Node(152, node0);
      node0.addChildToBack(node1);
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = node1.detachFromParent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEmpty();
      Node node3 = node2.removeFirstChild();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node4 = node2.cloneNode();
      node4.isEquivalentTo(node1, false, false, true);
      node3.setIsSyntheticBlock(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LD9p!)TM8>");
      node0.isDefaultCase();
      node3.toString();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = new Node(101, 142, 142);
      Node node1 = new Node(4829304, 180, 56);
      node1.addChildrenToBack(node0);
      Node node2 = node0.cloneTree();
      Node node3 = Node.newNumber((double) 2);
      node3.isEquivalentTo(node2);
      int int0 = Node.VAR_ARGS_NAME;
      Node node4 = node2.srcrefTree(node0);
      node3.isTypeOf();
      node2.mayMutateArguments();
      node4.isDec();
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // AND 142 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(120, 120, 120);
      node0.cloneTree();
      node0.siblings();
      node0.isVoid();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)68;
      byteArray0[2] = (byte)53;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(103, 48, 103);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
      Node node1 = new Node(37, node0, node0);
      node0.getAncestors();
      node1.isVarArgs();
      node1.getJsDocBuilderForNode();
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)41;
      byteArray1[1] = (byte)83;
      byteArray1[2] = (byte)35;
      byteArray1[3] = (byte)44;
      byteArray1[4] = (byte)73;
      byteArray1[5] = (byte) (-51);
      byteArray1[6] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      node0.checkTreeEquals(node1);
      node1.getLastSibling();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node[] nodeArray0 = new Node[15];
      Node node0 = new Node(39);
      nodeArray0[0] = node0;
      Node node1 = node0.copyInformationFromForTree(node0);
      Node node2 = new Node(0, node1, node1, node0, node1);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = new Node(122);
      node0.getIntProp(3243);
      Node node1 = new Node(13);
      node0.cloneNode();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = new Node(127, (-3800), 54);
      Node node3 = new Node(36, (-4168), 2);
      node2.addChildrenToBack(node3);
      node1.getSideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isTypeOf();
      node2.isFor();
      node1.isNull();
      node3.isTrue();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      int int0 = Node.POST_FLAG;
      Node node1 = new Node(42, (-1409), 38);
      Node node2 = new Node(55, 38, 32);
      node2.isFunction();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      int int1 = Node.INFERRED_FUNCTION;
      node1.isIf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEmpty();
      node1.isAssignAdd();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = new Node((-2), (-1819), (-1819));
      Node node1 = new Node(98, 38, 12);
      node1.isQualifiedName();
      node1.isHook();
      node0.isAssignAdd();
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = new Node(142);
      node0.children();
      int int0 = Node.OPT_ARG_NAME;
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(56, node0, node0);
      node1.isAnd();
      Node node2 = new Node(42, 15, 8);
      node1.addChildAfter(node2, node0);
      Node node3 = node1.copyInformationFrom(node1);
      node3.getSourceOffset();
      node1.useSourceInfoIfMissingFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = new Node((-1261));
      node0.type = 101;
      Node node1 = Node.newString(16, "Oy?wic_");
      node0.isEquivalentTo(node1);
      int int0 = Node.VAR_ARGS_NAME;
      node0.srcrefTree(node1);
      node1.isTypeOf();
      node1.mayMutateArguments();
      node1.isDec();
      node0.mayMutateGlobalStateOrThrow();
      node1.removeProp(57);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(33);
      Node node1 = new Node(113, 38, 12);
      node0.addChildrenToBack(node1);
      Node.newString(38, "com.google.javascript.rhino.jstype.Property");
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.useSourceInfoFrom(node1);
      Node node3 = Node.newString("`QoAh", 39, 1600);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      JSTypeNative jSTypeNative0 = JSTypeNative.U2U_FUNCTION_TYPE;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[1] = (JSType) objectType0;
      jSTypeRegistry0.createFunctionType(jSType0, jSTypeArray0);
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isVoid();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(33, (-1848), (-1848));
      Node node1 = new Node(43, 38, 12);
      Node node2 = new Node(29, node1);
      node1.addChildToBack(node2);
      node1.mayMutateGlobalStateOrThrow();
      node1.detachFromParent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEmpty();
      node2.removeFirstChild();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node3 = node1.cloneNode();
      node0.isEquivalentTo(node3, false, false, true);
      node0.setIsSyntheticBlock(true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LD9p!)TM8>");
      node1.isDefaultCase();
      node3.toString();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = new Node(29, node0, node0, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.getInputId();
      Node node2 = node1.removeFirstChild();
      node1.isAdd();
      Node node3 = node2.cloneNode();
      node3.isEquivalentTo(node0, false, false, true);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(39);
      nodeArray0[0] = node0;
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node0, true, false, true);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = new Node((-2), (-1819), (-1819));
      Node node1 = new Node(98, 38, 12);
      node1.setLineno(0);
      node0.addChildrenToBack(node1);
      node1.cloneTree();
      node0.isEquivalentTo(node1);
      int int0 = Node.VAR_ARGS_NAME;
      node0.srcrefTree(node1);
      node1.setSourceEncodedPosition(1);
      node0.isTypeOf();
      node1.mayMutateArguments();
      node1.isDec();
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.isLabelName();
      String string0 = "not a StringNode";
      try { 
        node1.setString("not a StringNode");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FOR 115 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[1];
      ObjectType.cast((JSType) null);
      ArrayList<EnumElementType> arrayList0 = new ArrayList<EnumElementType>(142);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) arrayList0);
      JSType jSType0 = jSTypeRegistry0.createFunctionType((ObjectType) null, (JSType) null, (List<JSType>) immutableList0);
      JSType.toMaybeTemplatizedType(jSType0);
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, false, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isTry();
      node0.isWhile();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node(119, (-979), 119);
      node0.siblings();
      node0.isWith();
      node0.getQualifiedName();
      node0.isInc();
      node0.isInc();
      node0.isContinue();
      int int0 = Node.QUOTED_PROP;
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = new Node(114, (-1892), (-1081));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ArrayList<Node> arrayList0 = new ArrayList<Node>();
      int int0 = Node.QUOTED_PROP;
      Node node1 = new Node(36, 117, 36);
      Node node2 = new Node(140, node0, node0, node0, node0, 4095, 1);
      node2.isLabel();
      node0.isName();
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(48, 2, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      Node node4 = new Node(155, (-972), 36);
      node4.isScript();
      node4.isDebugger();
      node3.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = new Node((-1361));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(49);
      node0.setSourceEncodedPosition(100);
      Node node2 = new Node((-1275), node0, node0, node0, 2, 55);
      node0.isUnscopedQualifiedName();
      node1.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(37, 16, 110);
      Node node1 = new Node(152, node0);
      node0.addChildToBack(node1);
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = node1.detachFromParent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEmpty();
      Node node3 = node2.removeFirstChild();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node4 = node2.cloneNode();
      node4.isEquivalentTo(node1, false, false, true);
      node3.setIsSyntheticBlock(true);
      node2.clonePropsFrom(node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LD9p!)TM8>");
      node1.isRegExp();
      node1.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(37, 16, 110);
      Node node1 = new Node(152, node0);
      node0.addChildToBack(node1);
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = node1.detachFromParent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEmpty();
      Node node3 = node2.removeFirstChild();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node4 = node2.cloneNode();
      node4.isEquivalentTo(node1, false, false, true);
      node3.setIsSyntheticBlock(true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LD9p!)TM8>");
      node0.isDefaultCase();
      node3.toString();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(40, 88, 88);
      Node node1 = new Node(1843, node0, node0, node0, node0);
      node0.useSourceInfoFromForTree(node1);
      node1.isLabelName();
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString(56, "");
      Node node1 = new Node(85, node0, node0, 52, 51);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.mayMutateGlobalStateOrThrow();
      node1.isAssign();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = new Node((-2), (-1819), (-1819));
      Node node1 = new Node(98, 38, 12);
      node0.addChildrenToBack(node1);
      node1.cloneTree();
      node0.isEquivalentTo(node1);
      int int0 = Node.VAR_ARGS_NAME;
      node0.srcrefTree(node1);
      node0.isTypeOf();
      node1.mayMutateArguments();
      node1.isDec();
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = new Node(122);
      node0.getIntProp(3243);
      node0.putIntProp(122, 122);
      Node node1 = new Node(8, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("`QoAh", false);
      Node node2 = new Node(52);
      node0.copyInformationFrom(node2);
      node0.useSourceInfoIfMissingFromForTree(node2);
      node0.isBlock();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.isCall();
      node1.isThrow();
      node0.isRegExp();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      Node node0 = Node.newString(115, "Object#Key", 1, 0);
      node0.putIntProp(50, (-2089));
      node0.isFunction();
      Node node1 = new Node(1504, node0, 49, 115);
      node1.isDefaultCase();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = new Node(114, (-1892), (-1081));
      ArrayList<Node> arrayList0 = new ArrayList<Node>();
      Node node1 = new Node(29, node0, node0, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node1.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.detachFromParent();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-836));
      Node node1 = node0.cloneNode();
      node1.isDefaultCase();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(115, node0, 4095, 120);
      node1.isFor();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node(42, (-1438), 38);
      Node node2 = new Node(55, 38, 32);
      node0.isCase();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node1.getIntProp(1);
      Node node3 = node1.clonePropsFrom(node0);
      node0.isCall();
      node3.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(122);
      node0.getIntProp(57);
      node0.putIntProp(122, 122);
      Node node1 = new Node(8, node0);
      Node node2 = new Node(40, 31, (-3541));
      Node node3 = Node.newNumber(1248.447);
      node3.isAssignAdd();
      node2.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = new Node(122);
      node0.getIntProp(3243);
      Node node1 = Node.newString(2325, "}:o!L", 2543, 107);
      node0.srcrefTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isExprResult();
      node0.isAnd();
      Node node2 = new Node(31, node0, node0, 2, 31);
      node2.isGetElem();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node((-1361), (-1361), (-1361));
      node0.isBreak();
      node0.isCase();
      int int0 = Node.DECR_FLAG;
      node0.isDebugger();
      Node node1 = new Node(46, node0, 83, 1907);
      node1.children();
      node0.isSyntheticBlock();
      Node node2 = new Node(36, 0, 1988);
      Node node3 = node0.copyInformationFromForTree(node2);
      // Undeclared exception!
      try { 
        node3.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = new Node(125);
      int int0 = Node.QUOTED_PROP;
      Node node1 = new Node(42, 2, 38);
      node0.isFor();
      node1.isDec();
      node0.isFunction();
      Node node2 = node0.cloneTree();
      node0.isEquivalentTo(node1, false, false, false);
      node2.addChildrenToFront(node0);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node((-1713), (-1713), (-1713));
      Node node1 = Node.newString("`QoAh", 37, 32);
      node1.isBreak();
      node1.isCase();
      int int0 = Node.DECR_FLAG;
      node0.isDebugger();
      node1.children();
      node0.isSyntheticBlock();
      Node node2 = new Node(51, 12, 2);
      Node node3 = node2.copyInformationFromForTree(node0);
      node0.getBooleanProp(52);
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isOr();
      Node node1 = new Node(1, node0, node0, node0, node0, 2, 2);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.hasOneChild();
      node1.getDirectives();
      node1.isEquivalentTo(node1);
      node0.isAssignAdd();
      try { 
        node0.setString("Oy?wic_");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEC is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isOr();
      Node node1 = new Node(29, node0, node0, node0, node0);
      node0.checkTreeEqualsImpl(node0);
      node1.hasOneChild();
      node1.getDirectives();
      Node node2 = new Node(87, 29, 54);
      Node node3 = node0.copyInformationFromForTree(node2);
      Node.newString("Object#Element", 43, 36);
      node3.checkTreeTypeAwareEqualsImpl(node2);
      node1.isOnlyModifiesThisCall();
      node3.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = new Node(140);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(48, 140, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      Node.newString(308, "Jpp>,zY", 39, 2);
      node2.clonePropsFrom(node0);
      Node node3 = Node.newString(140, "Jpp>,zY", 57, 36);
      node3.isCall();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(57, 56, 56);
      Node node2 = Node.newString("`QoAh", 53, 48);
      node2.isInc();
      node1.isBreak();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isCase();
      int int0 = Node.DECR_FLAG;
      node2.isDebugger();
      node2.children();
      node0.isSyntheticBlock();
      Node node3 = new Node(31, 105, 51);
      Node node4 = node1.copyInformationFromForTree(node2);
      Node node5 = Node.newString("f9wPc^", 36, Integer.MAX_VALUE);
      node3.checkTreeTypeAwareEqualsImpl(node4);
      node4.isOnlyModifiesThisCall();
      node1.clonePropsFrom(node5);
      node3.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = new Node(124, (-1848), 111);
      Node node1 = new Node(48, 40, 3331);
      node0.addChildrenToBack(node1);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = node0.srcrefTree(node1);
      node1.isTypeOf();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node1.children();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = new Node(119, (-995), 119);
      node0.siblings();
      Node node1 = node0.cloneNode();
      boolean boolean0 = false;
      node1.copyInformationFrom(node0);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(4096);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got WITH
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(122);
      node0.getIntProp(57);
      node0.putIntProp(122, 122);
      Node node1 = new Node(8, node0);
      Node node2 = new Node(29);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      node3.setDirectives((Set<String>) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node3.setJSDocInfo(jSDocInfo0);
      node0.isBlock();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = new Node((-1), (-1), (-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node1.isNumber();
      node1.isNE();
      Node.extractLineno((-1));
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = new Node(111);
      Node node1 = new Node(53, node0, node0, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.hasOneChild();
      node1.removeFirstChild();
      node1.isAdd();
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2055));
      node0.isGetElem();
      Node node1 = new Node(43, node0);
      node0.addChildToBack(node1);
      node1.mayMutateGlobalStateOrThrow();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.isEmpty();
      node0.removeFirstChild();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = Node.newNumber((-2276.256));
      node2.cloneNode();
      node1.isEquivalentTo(node1, false, false, false);
      node1.setIsSyntheticBlock(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LD9p!)TM8>");
      node2.isRegExp();
      node0.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newString((-2265), "");
      Node node1 = new Node((-1), node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-3144));
      Node node1 = new Node((-3144), node0, 16777216, 112);
      Node node2 = node1.srcrefTree(node0);
      node1.isNot();
      node2.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedHashSet<JSType> linkedHashSet0 = new LinkedHashSet<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) linkedHashSet0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isInc();
      node0.isBreak();
      node0.isCase();
      int int0 = Node.DECR_FLAG;
      node0.isDebugger();
      node0.children();
      node0.isSyntheticBlock();
      Node node1 = new Node(43, 38, 53);
      node1.copyInformationFromForTree(node0);
      Node node2 = Node.newString("`QoAh", 1, 208);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node0.isOnlyModifiesThisCall();
      Node node3 = new Node(101, node2, node0, node1, node1);
      node2.clonePropsFrom(node3);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newString("D,4c-;w5R`HJ");
      Node node1 = new Node(52, 53, 50);
      node1.clonePropsFrom(node0);
      Node.newNumber((double) 49, 64, 4224);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(48, 2, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      node2.srcref(node1);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      Node node4 = null;
      try {
        node4 = new Node((-2167), node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(39);
      nodeArray0[0] = node0;
      Node node1 = new Node(39, nodeArray0, 1, 1);
      node1.isLocalResultCall();
      node0.isTypeOf();
      node0.setSourceEncodedPosition(54);
      node1.useSourceInfoFromForTree(node0);
      Node.newNumber(0.5, 117, 54);
      node1.isNot();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = new Node((-2039));
      node0.isQuotedString();
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(44);
      Node node1 = node0.cloneNode();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node1;
      nodeArray0[6] = node0;
      Node node2 = null;
      try {
        node2 = new Node(12, nodeArray0, 29, (-526));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(33, (-1819), (-1819));
      Node node1 = new Node(110, 38, 12);
      node1.isEquivalentToShallow(node0);
      node1.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(33, (-1848), (-1848));
      Node node1 = new Node(110, 38, 12);
      node0.addChildrenToBack(node1);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      node1.setSourceFileForTesting("x6l8\"J+^x[Fw~%w9l:?");
      node0.isOptionalArg();
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isInc();
      node1.isCase();
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      node1.isSwitch();
      node1.isFromExterns();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = new Node(122);
      node0.getIntProp(3243);
      node0.putIntProp(122, 122);
      Node node1 = new Node(8, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("`QoAh", false);
      Node node2 = new Node(52);
      node0.useSourceInfoIfMissingFromForTree(node2);
      node0.isBlock();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.isCall();
      node1.isThrow();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = new Node(41);
      Node node1 = new Node(41, node0, 4095, 120);
      Node node2 = new Node(41, node1);
      node0.isDo();
      node1.checkTreeEqualsImpl(node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = new Node(41);
      Node node1 = new Node(41, node0, 4095, 120);
      Node node2 = new Node(41, node1);
      node0.isDo();
      node1.checkTreeEqualsImpl(node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(33, (-1848), (-1848));
      Node node1 = new Node(110, 38, 12);
      node0.addChildrenToBack(node1);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = node0.srcrefTree(node1);
      node0.isTypeOf();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node2.setIsSyntheticBlock(true);
      node1.children();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node1.isFor();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = new Node(41);
      Node node1 = new Node(41, node0, 4095, 120);
      Node node2 = new Node(41, node1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.checkTreeEqualsImpl(node1);
      node2.isOnlyModifiesThisCall();
      node1.detachChildren();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node2.toString();
      node2.isCall();
      Node node3 = new Node(41, node0, 42, (-1549));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node2.setJSDocInfo(jSDocInfo0);
      node3.getSourceOffset();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte) (-102);
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte)49;
      byteArray0[5] = (byte) (-25);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(42);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = new Node((-1050), node0, node0, node0, 1466, 49);
      node1.isEquivalentTo(node0, false, false, false);
      node1.getSideEffectFlags();
      node1.isVoid();
      node1.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node1.isTrue();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = new Node(41);
      Node node1 = new Node(41, node0, 4095, 120);
      Node node2 = new Node(41, node1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.checkTreeEqualsImpl(node1);
      node2.isOnlyModifiesThisCall();
      node1.detachChildren();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node2.toString();
      node2.isCall();
      Node node3 = new Node(41, node0, 42, (-1549));
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = new Node(41);
      Node node1 = new Node(41, node0, 4095, 120);
      Node node2 = new Node(41, node1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = new Node(41, node2, node2, node2, node2, 4095, 29);
      node3.checkTreeEqualsImpl(node1);
      node2.isOnlyModifiesThisCall();
      node3.checkTreeTypeAwareEqualsImpl(node2);
      node3.toString();
      node1.isCall();
      Node node4 = new Node((-933), node3, 2812, 46);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node3, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = new Node(93);
      Node node1 = new Node(30, node0, 105, (-1440));
      Node node2 = node0.copyInformationFrom(node1);
      node0.getProp(21);
      Node node3 = Node.newString(112, "Null");
      node0.addChildToFront(node3);
      node0.srcrefTree(node3);
      try { 
        node2.setString("Null");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ASSIGN_ADD is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = new Node(114, (-1892), (-1081));
      node0.siblings();
      Node node1 = new Node(29, node0, node0, node0, node0);
      Node node2 = new Node((-277), 52, 53);
      Node node3 = new Node(49, 48, 49);
      node3.useSourceInfoFrom(node2);
      node3.isCase();
      node0.isNumber();
      node0.isNE();
      // Undeclared exception!
      try { 
        node3.setSideEffectFlags(116);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got THROW
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node(33);
      Node node1 = new Node(110, 38, 12);
      node0.addChildrenToBack(node1);
      node1.getSideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newString(77, "com.google.javascript.rhino.jstype.Property", 51, 15);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isCall();
      node2.isContinue();
      node2.isOr();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = new Node(21);
      Node node1 = new Node(42, node0, node0, node0, 49, 47);
      node1.removeChildren();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("Object#Key");
      templateType0.isDict();
      node1.isTypeOf();
      JSType jSType0 = modificationVisitor0.caseNoType();
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = jSType0;
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      JSTypeNative jSTypeNative0 = JSTypeNative.NULL_VOID;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.jstype.UnionType cannot be cast to com.google.javascript.rhino.jstype.ObjectType
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = new Node(119, (-985), 119);
      node0.siblings();
      node0.isLabel();
      node0.getQualifiedName();
      node0.isQuotedString();
      Node node1 = new Node(134, node0, node0, node0);
      node0.useSourceInfoFromForTree(node1);
      node0.isInc();
      node0.setLineno(53);
      node0.isGetElem();
      node1.addSuppression((String) null);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node.newString("D,4c-;w5R`HJ");
      Node node0 = new Node(52, 53, 50);
      node0.cloneNode();
      Node node1 = Node.newNumber((double) 49, 64, 4224);
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(33, (-1848), (-1848));
      Node node1 = new Node(110, 38, 12);
      node0.addChildrenToBack(node1);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString(30, "m0gTh1xkrc", 2590, 47);
      node2.isNoSideEffectsCall();
      node2.setSideEffectFlags(16);
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = new Node(41);
      Node node1 = new Node(41, node0, 4095, 120);
      Node node2 = new Node(41, node1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = new Node(41, node2, node2, node2, node2, 4095, 29);
      node3.checkTreeEqualsImpl(node1);
      node2.isOnlyModifiesThisCall();
      node3.detachChildren();
      node3.checkTreeTypeAwareEqualsImpl(node2);
      node3.toString();
      node1.isCall();
      Node node4 = new Node((-933), node3, 2812, 46);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node3, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1640));
      Node node1 = new Node(39, node0, node0, node0);
      node0.isNot();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.hasChildren();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = new Node(119, (-979), 119);
      node0.siblings();
      node0.isLabel();
      node0.getQualifiedName();
      node0.isInc();
      node0.isInc();
      node0.isContinue();
      node0.isVoid();
      node0.isName();
      Node node1 = Node.newString("com.google.common.collect.EmptyImmutableBiMap", 2, 30);
      node0.srcrefTree(node1);
      Node node2 = new Node(47, node1, node1, node1, node1, 43, 48);
      // Undeclared exception!
      try { 
        node0.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("null");
      Node node1 = new Node(47);
      node1.isOr();
      Node node2 = node1.srcrefTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isExprResult();
      node2.isAnd();
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.getBooleanProp((-2069));
      // Undeclared exception!
      try { 
        node0.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = new Node(140);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(48, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      node0.isSetterDef();
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(1497);
      node0.getIntProp(2266);
      Node node1 = new Node(0, node0, node0, node0, node0, 30, 55);
      Node node2 = new Node((-2404), (-1689), 1027);
      node2.isCase();
      node2.isNumber();
      node0.isStringKey();
      node1.isCast();
      node1.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newString("D,4c-;w5R`HJ");
      Node node1 = new Node(3243, (-1713), 36);
      Node node2 = new Node(47, node0, node1, 38, 38);
      node2.cloneNode();
      node0.setSourceEncodedPositionForTree(1);
      node1.isEquivalentTo(node0, true, true, true);
      node1.isExprResult();
      Node.mergeLineCharNo(32, 1027);
      node2.getType();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(48, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      node2.isTypeOf();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node2;
      Node node4 = Node.newString(32, "&th[\"o7R@>D!@XbKh");
      nodeArray0[1] = node4;
      nodeArray0[2] = node0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node5 = Node.newNumber((double) 30, 57, 126);
      nodeArray0[4] = node5;
      nodeArray0[5] = node1;
      Node node6 = null;
      try {
        node6 = new Node(2389, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node((-1713), (-1713), (-1713));
      Node node1 = Node.newString("`QoAh", 37, 32);
      Node node2 = new Node(302, node1, node1, 0, 57);
      Node node3 = new Node(154, node2, node0, node0, (-1848), 36);
      Node node4 = new Node(32, 2, 48);
      node4.isScript();
      node1.isDebugger();
      node3.isStringKey();
      node4.srcrefTree(node0);
      node1.isRegExp();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Node node0 = new Node(114, (-1892), (-1081));
      node0.siblings();
      node0.isOr();
      Node node1 = new Node(29, node0, node0, node0, node0);
      node0.clonePropsFrom(node1);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node1.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      node0.isAdd();
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(33, (-1848), (-1848));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      // Undeclared exception!
      try { 
        node0.getQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newString("a12%(", (-4656), 119);
      node0.isOnlyModifiesThisCall();
      node0.removeFirstChild();
      node0.isSyntheticBlock();
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      node0.getQualifiedName();
      node0.isBlock();
      Node node1 = new Node(32);
      node1.isAdd();
      node1.isFor();
      Node node2 = Node.newNumber((double) 51);
      Node node3 = node1.useSourceInfoFromForTree(node0);
      Node node4 = new Node(608, node3, node3, node1, node1, 48, 634);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node3, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(33, (-1848), (-1848));
      Node node1 = new Node(110, 38, 12);
      node0.addChildrenToBack(node1);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.srcrefTree(node1);
      node0.isTypeOf();
      node1.isFor();
      node1.getQualifiedName();
      node1.isDec();
      node1.addChildToFront(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isOr();
      Node node1 = new Node(29, node0, node0, node0, node0);
      node0.checkTreeEqualsImpl(node0);
      node1.hasOneChild();
      Node node2 = node1.removeFirstChild();
      node1.getDirectives();
      node0.isStringKey();
      node0.isAssignAdd();
      node2.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(118);
      Node node1 = new Node(647, 32, 55);
      Node node2 = new Node((-116), node0, node0, 93, 47);
      Node node3 = new Node(47, node1, node1, node1, 57, 48);
      Node node4 = new Node(29, 29, 1);
      node4.isScript();
      node0.isDebugger();
      node2.isStringKey();
      node2.srcrefTree(node0);
      node2.isRegExp();
      node3.isLabelName();
      node3.useSourceInfoIfMissingFrom(node1);
      node4.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.Node$NodeMismatch");
      Node node0 = new Node(33, (-1848), (-1848));
      Node node1 = new Node(110, 38, 12);
      node0.addChildrenToBack(node1);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = node0.srcrefTree(node1);
      node2.cloneTree();
      node0.isTypeOf();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(63);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 63
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = new Node((-1646));
      HashSet<Node> hashSet0 = new HashSet<Node>();
      int int0 = Node.DECR_FLAG;
      Node node1 = new Node(31, node0, node0, node0, node0, 30, 48);
      node0.setSourceEncodedPositionForTree(11);
      Node node2 = new Node((-3088), (-3596), 1416);
      node0.isEquivalentTo(node2, true, true, true);
      node1.isExprResult();
      node2.isNE();
      node2.getIntProp(1844);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newNumber((-1154.8295783477583));
      node0.isGetProp();
      node0.isAssignAdd();
      node0.isNoSideEffectsCall();
      node0.getQualifiedName();
      node0.isInc();
      Node node1 = new Node(51);
      node1.isIn();
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = new Node((-1066), (-1066), (-1066));
      node0.isCall();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(108, node0, node0, node0, node0);
      node1.isUnscopedQualifiedName();
      node1.isSwitch();
      node1.isNE();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = new Node((-50), (-50), (-50));
      Node node1 = new Node(52);
      node0.isNot();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.isLabel();
      Node node3 = new Node((-1973), node1, 2, 1869);
      node3.isName();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.addSuppression("I3 >BUiUQGRf<");
      Node node1 = new Node(119, 46, 469);
      node0.getQualifiedName();
      node1.isInc();
      Node node2 = new Node(52);
      Node node3 = Node.newNumber(0.7);
      node2.useSourceInfoIfMissingFromForTree(node3);
      node2.isIn();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = new Node(133);
      Node node1 = new Node(48, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      Node node4 = new Node(51, (-972), 36);
      node4.isScript();
      node4.isDebugger();
      Node.newString((-1807), "Gx}_<$6#|fdh", 1, 1);
      node3.clonePropsFrom(node0);
      node3.isCall();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = new Node((-50), (-50), (-50));
      Node node1 = new Node(29, node0, node0);
      node0.isTypeOf();
      node0.isFor();
      node0.isDec();
      node1.setLineno(16);
      node1.getChildBefore(node0);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = new Node(33, (-1848), (-1848));
      Node node1 = new Node(110, 38, 12);
      node0.addChildrenToBack(node1);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.srcrefTree(node1);
      Node.newString(284, "`QoAh");
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = new Node((-572), node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = new Node(142, 142, 142);
      int int0 = Node.QUOTED_PROP;
      Node node1 = new Node(42, 2, 38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.newNumber(1.0, 57, 1690);
      node0.isSyntheticBlock();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getQualifiedName();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = new Node((-1), (-1), (-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(879);
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node0.isLabel();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-2069), (-2069), 29);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_PROTOTYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = (JSType) objectType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, jSTypeArray0);
      modificationVisitor0.caseFunctionType(functionType0);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(122);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2069
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(39);
      nodeArray0[0] = node0;
      Node node1 = new Node(39, nodeArray0, 1, 1);
      node1.isUnscopedQualifiedName();
      node1.isAssign();
      Node node2 = node1.srcrefTree(node0);
      node2.isTypeOf();
      // Undeclared exception!
      try { 
        node2.removeChild(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = new Node(142, 142, 142);
      int int0 = Node.INPUT_ID;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildBefore((Node) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(33, (-1848), (-1848));
      Node node1 = new Node(110, 38, 12);
      node0.addChildrenToBack(node1);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = node0.srcrefTree(node1);
      node0.isTypeOf();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node2.isSyntheticBlock();
      node1.children();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.getQualifiedName();
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isGetProp();
      node0.isAssignAdd();
      node0.isQualifiedName();
      Node node1 = new Node(108, node0, node0, node0, node0);
      Node node2 = new Node(30, node1, node1, node1, 29, 4);
      node1.srcref(node2);
      try { 
        node1.setString("g");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // IF 29 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = new Node(133);
      Node node1 = new Node(48, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      Node node4 = new Node(51, (-972), 36);
      node2.setLineno(4);
      node4.isScript();
      node4.isDebugger();
      node2.isAssignAdd();
      node4.isRegExp();
      node3.isBlock();
      node1.isCall();
      node2.isWhile();
      node4.useSourceInfoFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(33);
      Node node1 = new Node(113, 38, 12);
      node0.addChildrenToBack(node1);
      Node.newString(38, "com.google.javascript.rhino.jstype.Property");
      node0.copyInformationFromForTree(node1);
      Node node2 = Node.newString("`QoAh", 39, 1600);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node((-2069));
      node0.isOr();
      Node node1 = new Node(52, node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2756);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.removeFirstChild();
      Node node2 = Node.newString("9\u0003\"!!WW<r461)PF~h");
      Node node3 = node1.srcrefTree(node2);
      node0.isAdd();
      node3.isNull();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isGetProp();
      node0.isAssignAdd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node0.getProp(2813);
      node0.putProp((-704), (Object) null);
      node0.isIf();
      Node node1 = Node.newString("BAG", (-1), 40);
      node1.isReturn();
      node1.hasMoreThanOneChild();
      Node node2 = Node.newString("J", 621, 32);
      node2.setOptionalArg(true);
      node2.isQualifiedName();
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING J 621 [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = new Node(133);
      Node node1 = new Node(48, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      node0.getSideEffectFlags();
      Node node4 = new Node(51, (-972), 36);
      node4.isScript();
      node4.isDebugger();
      node4.isStringKey();
      node2.isAssignAdd();
      node3.srcrefTree(node0);
      node4.isRegExp();
      node0.isLabelName();
      node4.getChildCount();
      node3.copyInformationFromForTree(node4);
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(30);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got TYPEOF
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(48, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      node1.isInc();
      Node node3 = node1.cloneNode();
      node3.setSourceEncodedPositionForTree(138);
      node1.isEquivalentTo(node3, true, true, false);
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      Node node0 = Node.newString(0, "Object#Element", 844, 844);
      node0.getIntProp(0);
      Node node1 = Node.newString("F[ohUC#_T\"Lx@;3y");
      modificationVisitor0.caseBooleanType();
      node1.putIntProp(47, 36);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F[ohUC#_T\"Lx@;3y");
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      node1.getProp(40);
      node0.putProp((-1646), node1);
      node0.isIf();
      node0.isReturn();
      node0.hasMoreThanOneChild();
      node0.isQualifiedName();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING F[ohUC#_T\"Lx@;3y [is_dispatcher: com.google.javascript.rhino.Node$IntPropListItem@0000000338] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = new Node(114);
      node0.getQualifiedName();
      node0.isNot();
      Node node1 = new Node(32);
      node1.getSourceFileName();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(93, (-1713), 114);
      Node node1 = Node.newString("Object#Key", 4095, 1090);
      node1.isInc();
      node0.isBreak();
      node0.isCase();
      node1.isObjectLit();
      int int0 = Node.COLUMN_MASK;
      node1.isDebugger();
      node1.isSyntheticBlock();
      Node node2 = Node.newString(55, "com.google.javascript.rhino.jstype.Property");
      Node node3 = node0.copyInformationFromForTree(node2);
      Node node4 = Node.newString("Object#Element", 57, (-1272));
      node4.checkTreeTypeAwareEqualsImpl(node2);
      node3.isExprResult();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isGetElem();
      Node node1 = new Node(49, node0, 4095, 1);
      node1.getIntProp(55);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1049));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node2 = node1.removeFirstChild();
      node1.srcrefTree(node2);
      node2.isAdd();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isLocalResultCall();
      node0.setSourceFileForTesting("STRUCT");
      node0.putProp(110, "STRUCT");
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(110);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isGetProp();
      node0.isAssignAdd();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(44, node0, node0, node0);
      node1.checkTreeEqualsImpl(node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(51, nodeArray0);
      node2.isOnlyModifiesArgumentsCall();
      node1.useSourceInfoIfMissingFrom(node2);
      Node node3 = new Node(32, nodeArray0, 155, 1);
      node3.isUnscopedQualifiedName();
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-2069), (-2069), (-2069));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[5];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      jSTypeArray0[0] = jSType0;
      JSTypeNative jSTypeNative0 = JSTypeNative.GREATEST_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[1] = (JSType) objectType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSTypeArray0[0], jSTypeArray0);
      // Undeclared exception!
      try { 
        modificationVisitor0.caseFunctionType(functionType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = new Node(114, (-1892), (-1892));
      Node node1 = new Node(43, node0, node0);
      node0.srcref(node1);
      node0.siblings();
      node0.isFor();
      node0.getStaticSourceFile();
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(37, 16, 110);
      Node node1 = new Node(152, node0);
      node0.addChildToBack(node1);
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = node1.detachFromParent();
      node2.addChildToBack(node1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEmpty();
      Node node3 = node2.removeFirstChild();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node4 = node2.cloneNode();
      node4.isEquivalentTo(node1, false, false, true);
      node3.setIsSyntheticBlock(true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LD9p!)TM8>");
      node1.isRegExp();
      node1.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(48, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      Node.newString(42, "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection");
      node2.isDelProp();
      node3.getLength();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      Node node0 = new Node(1);
      node0.getIntProp(0);
      node0.putIntProp(31, 36);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      node_SideEffectFlags0.setMutatesArguments();
      jSTypeRegistry0.getObjectElementKey();
      Node node1 = Node.newString((-708), "Not declared as a type name", 4, 51);
      Node node2 = new Node(116, node0, node1, node1, node0, 4095, 16);
      Node node3 = Node.newString((-1146), "BITXOR");
      node2.copyInformationFromForTree(node3);
      // Undeclared exception!
      try { 
        Node.newString((String) null, (-283), 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.addSuppression("I3 >BUiUQGRf<");
      Node node1 = new Node(119, 46, 469);
      node0.getQualifiedName();
      node1.isInc();
      node1.isVarArgs();
      Node node2 = new Node(52);
      node2.putIntProp(37, 1516);
      node2.cloneTree();
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      Node node1 = Node.newString("STRUCT");
      node1.isAssign();
      node0.isDelProp();
      Node node2 = new Node(2327, node1, node0, node0, node0);
      node2.isBlock();
      node2.isCall();
      // Undeclared exception!
      try { 
        node2.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node.newString("D,4c-;w5R`HJ");
      Node node0 = new Node(52, 53, 50);
      node0.getAncestor(52);
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isUnscopedQualifiedName();
      node0.isAssign();
      node0.isCatch();
      Node node1 = new Node(108, node0, node0, node0, node0);
      node0.isBlock();
      node0.isCall();
      node0.isSetterDef();
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      node0.isOr();
      Node node1 = new Node(29, node0, node0, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node node2 = Node.newString((-872), "com.google.javascript.rhino.jstype.Property");
      Node node3 = node0.copyInformationFromForTree(node2);
      String string0 = "3L>? sq";
      // Undeclared exception!
      try { 
        node3.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node0 = new Node(98, (-76), 98);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags5.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags6.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags6.setThrows();
      node_SideEffectFlags8.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags9 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags9.setMutatesThis();
      node0.isLabel();
      node0.getSideEffectFlags();
      Node node1 = node0.cloneNode();
      node1.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isGetProp();
      node0.isAssignAdd();
      node0.isQualifiedName();
      Node node1 = new Node(111, 2, 31);
      Node node2 = new Node(4095, node0, node1, node1, node1, (-1361), 113);
      node1.checkTreeEqualsImpl(node2);
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(114);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.isThis();
      node2.getSideEffectFlags();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      Node node0 = Node.newString(0, "Object#Element", 844, 844);
      node0.getIntProp(0);
      Node.newString("F[ohUC#_T\"Lx@;3y");
      modificationVisitor0.caseBooleanType();
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor1.caseNumberType();
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = jSType0;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = Node.newString(48, "Not declared as a type name", (-3791), 49);
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 48
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("BO");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      jSTypeArray0[0] = jSType0;
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSType jSType1 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      jSTypeArray0[1] = jSType1;
      Visitor<Node> visitor0 = (Visitor<Node>) mock(Visitor.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(visitor0).caseFunctionType(any(com.google.javascript.rhino.jstype.FunctionType.class));
      jSType1.visit(visitor0);
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.checkTreeEquals(node0);
      jSType1.canTestForEqualityWith(jSType0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionTypeWithVarArgs(jSTypeArray0[0], (List<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2055));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSTypeNative jSTypeNative0 = JSTypeNative.U2U_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[0] = (JSType) objectType0;
      jSTypeArray0[1] = (JSType) objectType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) objectType0, jSTypeArray0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      templateTypeMapReplacer0.caseFunctionType(functionType0);
      try { 
        node0.setString("`QoAh");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -2055.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isGetElem();
      Node node1 = new Node(49, node0, (-2918), 1);
      node1.getIntProp(55);
      Node node2 = new Node(116);
      node1.isNumber();
      node0.isStringKey();
      Node node3 = new Node(30, 16, (-3279));
      node3.isNew();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = new Node((-2069), (-2069), (-2069));
      node0.isCall();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(108, node0, node0, node0, node0);
      node1.isSwitch();
      node1.isTrue();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      Node node1 = Node.newNumber((double) 1, 15, 39);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node2 = new Node(29, 110, (-1884));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      node2.useSourceInfoIfMissingFromForTree(node1);
      node1.isCase();
      node2.isNumber();
      node1.isStringKey();
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isAssignAdd();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(108, node0, node0, node0, node0);
      node1.clonePropsFrom(node0);
      node1.isSwitch();
      node1.removeProp((-2305));
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = new Node((-1), (-1), (-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setVarArgs(false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("Object#Key");
      node0.detachFromParent();
      templateType0.isDict();
      node1.isTypeOf();
      JSType jSType0 = modificationVisitor0.caseNoType();
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[2] = jSType0;
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isInc();
      node1.isCase();
      node2.getSideEffectFlags();
      Node node3 = node0.cloneNode();
      node3.mayMutateGlobalStateOrThrow();
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node(33, (-1848), (-1848));
      Node node1 = new Node(1072, node0, node0, 103, 93);
      node0.useSourceInfoIfMissingFrom(node1);
      Node node2 = new Node(110, 38, 12);
      node0.addChildrenToBack(node2);
      node2.getSideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isTypeOf();
      node2.isFor();
      node0.isGetElem();
      Node.extractLineno(53);
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node(42, (-1438), 38);
      Node node2 = Node.newNumber((double) 125, 55, 49);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node_SideEffectFlags0.setThrows();
      node0.siblings();
      node0.isOr();
      Node node3 = new Node(8, node0, node0, node2, node1);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch((Node) null, node2);
      node1.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.isWhile();
      node0.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(102, "(.!uNS");
      node0.getQualifiedName();
      node0.removeProp(102);
      node0.isInc();
      node0.isInc();
      node0.isName();
      int int0 = Node.QUOTED_PROP;
      Node.newString("*GYiQMX-\"sQht9'O", 40, 41);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      node0.getIntProp(0);
      node0.removeChildren();
      Node node1 = new Node(43, node0, node0, node0);
      Node node2 = Node.newNumber((double) 125, 55, 49);
      node0.setOptionalArg(false);
      Node.newString((-4575), "?s#");
      node2.isOptionalArg();
      Node node3 = node1.useSourceInfoFrom(node2);
      node3.getSideEffectFlags();
      node2.checkTreeTypeAwareEqualsImpl(node3);
      node1.getQualifiedName();
      node2.isInstanceOf();
      Node.newString(142, "/Qs%q*89p(");
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = new Node(133);
      Node node1 = new Node(48, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      Node node4 = new Node(51, (-972), 36);
      node4.isScript();
      node4.isDebugger();
      node4.isStringKey();
      node2.isAssignAdd();
      node3.srcrefTree(node0);
      node4.isRegExp();
      node0.isLabelName();
      node4.getChildCount();
      node3.getLastChild();
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = new Node(48, node0, node0, node0, node0, 40, 32);
      int int0 = Node.EMPTY_BLOCK;
      node0.isDebugger();
      Node.newString("com.google.javascript.rhino.Node$NodeMismatch");
      node0.isCatch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node1.isDefaultCase();
      node1.isContinue();
      int int1 = Node.QUOTED_PROP;
      Node node2 = Node.newNumber(0.5, (-51), 2);
      node0.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = new Node(133);
      Node node1 = new Node(48, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node4 = new Node(51, (-972), 36);
      node4.isScript();
      node4.isDebugger();
      node4.isStringKey();
      node2.isAssignAdd();
      Node node5 = node3.srcrefTree(node0);
      node5.useSourceInfoFrom(node3);
      node4.isRegExp();
      node0.isLabelName();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString((-407), "Object#Element", (-1713), (-1713));
      Node node1 = Node.newString("`QoAh", 37, 32);
      node1.isInc();
      node1.isBreak();
      node1.isCase();
      node1.isObjectLit();
      node1.getLength();
      node0.isDebugger();
      node0.isSyntheticBlock();
      Node node2 = Node.newString(4095, "com.google.javascript.rhino.jstype.Property");
      Node node3 = node2.copyInformationFromForTree(node0);
      Node node4 = new Node(39, node0, node2, node2, node0);
      node4.copyInformationFrom(node1);
      Node node5 = new Node((-2284), node4, node1);
      node1.isHook();
      node4.removeChildAfter(node3);
      node5.isCall();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = new Node((-50), (-50), (-50));
      Node node1 = new Node(29, node0, node0);
      Node node2 = new Node(30, 57, 52);
      Node.newNumber(323.68851203457916, 46, 112);
      node1.isAssignAdd();
      node2.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      Node node0 = Node.newString(0, "Object#Element", 844, 844);
      node0.getIntProp(0);
      Node node1 = Node.newString("F[ohUC#_T\"Lx@;3y");
      node1.putIntProp(31, 36);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = new Node(40, node0, node0, node1);
      node2.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags((-4882));
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node3 = node2.removeFirstChild();
      Node node4 = node2.srcrefTree(node3);
      node1.isAdd();
      node4.isNE();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = new Node(21, node0, node0, node0, node0, 40, 32);
      node0.isWith();
      node1.getQualifiedName();
      node1.isInc();
      node0.cloneNode();
      node0.getSourceFileName();
      node1.isContinue();
      int int0 = Node.DIRECT_EVAL;
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newNumber((double) 40, 2558, 40);
      node0.removeProp((-842));
      Node node1 = new Node(40, node0, node0, node0, node0, 100, 1565);
      Node node2 = node1.cloneNode();
      node2.isCall();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 40.0 2558 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = new Node(12, (-526), 57);
      Node node1 = Node.newString(40, "*(68TepLa^i[(@3Tt", 12, 153);
      Node node2 = new Node(115, node0, node0, node0, node1, 766, 40);
      Node node3 = new Node(18, node2);
      node3.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node(33, (-1848), (-1848));
      node0.isScript();
      node0.isTry();
      node0.isStringKey();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = node0.srcrefTree(node1);
      node2.isRegExp();
      node0.isLabelName();
      Node node3 = new Node(30, node1, node1, node0);
      node3.getChildCount();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = new Node(118, 26, 0);
      Node node1 = Node.newNumber((double) 32);
      node1.isDebugger();
      Node node2 = new Node(2, node0, node0);
      Node node3 = new Node((-1409), node1, node2);
      Node node4 = Node.newString(118, "The new child node already has a parent.");
      node4.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isTypeOf();
      node3.isGetElem();
      node0.getChildCount();
      node4.isSyntheticBlock();
      node2.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = new Node(1579);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "    ");
      Node node1 = Node.newString((-2519), "aXz>");
      Node node2 = new Node(12, node0, node1);
      node1.type = 39;
      node0.getAncestor(1);
      node2.getIntProp(55);
      node2.removeChild(node1);
      node1.getLength();
      node0.isNew();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isGetElem();
      Node node1 = new Node(49, node0, (-2918), 42);
      node1.getIntProp(55);
      node0.hasChild(node1);
      Node node2 = new Node(2924, 57, 48);
      node1.checkTreeEqualsImpl(node0);
      node1.setCharno(47);
      node1.isThrow();
      node1.isWhile();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node3 = Node.newString(39, " : ", 53, 12);
      JSType.toMaybeTemplatizedType((JSType) null);
      jSTypeRegistry0.createObjectType("'8&1GM", node3, (ObjectType) null);
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = new Node(114, (-1892), (-82));
      node0.siblings();
      node0.isOr();
      Node node1 = new Node(29, node0, node0, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node1.hasOneChild();
      node1.isNew();
      Node node2 = node1.cloneNode();
      node0.srcrefTree(node2);
      node1.isRegExp();
      node2.isLabelName();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = new Node((-1646));
      HashSet<Node> hashSet0 = new HashSet<Node>();
      int int0 = Node.DECR_FLAG;
      node0.isObjectLit();
      Node node1 = new Node(56, node0, node0);
      node0.isVar();
      Node node2 = new Node(42, 15, 8);
      node2.isNoSideEffectsCall();
      node0.putProp((-893), (Object) null);
      node0.isIf();
      node0.isReturn();
      Node node3 = new Node(2, 54, 38);
      node2.isQualifiedName();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1646
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1591));
      node0.isInc();
      Node node1 = node0.cloneNode();
      node0.setSourceEncodedPositionForTree(61);
      Node node2 = new Node(132, node0, 56, 521);
      node0.isEquivalentTo(node2, false, false, false);
      Node node3 = new Node(7, node2, node1, 47, 53);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = new Node((-2069), (-2069), (-2069));
      node0.isBreak();
      node0.isCase();
      node0.isObjectLit();
      Node node1 = new Node(116, node0, 1, 4095);
      node1.isNew();
      Node node2 = node1.cloneNode();
      node0.isSyntheticBlock();
      Node node3 = Node.newString(108, "\n\nSubtree2: ");
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node4 = Node.newString(26, "\n\nSubtree2: ", 52, (-578));
      node4.isSyntheticBlock();
      node4.children();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node3.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 859, 111);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(111, node0, node0, node0, 452, 12);
      node1.isNot();
      node1.isCase();
      Node.newString("5}\"zu2/Hx");
      node0.isExprResult();
      node0.setDouble((-1.0));
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node(33, (-1848), (-1848));
      Node node1 = new Node(110, 38, 12);
      node0.addChildrenToBack(node1);
      node1.getSideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isTypeOf();
      node1.isFor();
      Node node2 = node1.srcrefTree(node0);
      node2.isAdd();
      node0.isInstanceOf();
      node2.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = new Node(142, 142, 142);
      node0.getIntProp(37);
      Node node1 = new Node(92, 108, 859);
      node0.isOptionalArg();
      node0.getSourcePosition();
      node0.isEmpty();
      Node node2 = new Node(1463, node1, node0, 48, 188885);
      node2.removeChildren();
      node1.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node(42, 2, 38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node2 = Node.newNumber((double) 30, 52, 1);
      Node node3 = new Node(1048576, 39, 56);
      node2.isCase();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node2.getIntProp(152);
      node2.isIf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEmpty();
      node0.isWhile();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1650));
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isThis();
      node0.isObjectLit();
      Node node1 = new Node(39, node0, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Object#Key", false);
      node1.addChildrenToFront(node2);
      LinkedHashSet<Node> linkedHashSet1 = new LinkedHashSet<Node>();
      node2.putIntProp(2, 105);
      node0.isSwitch();
      node1.isVar();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = Node.newNumber(1233.52256, 57, 710);
      Node node2 = new Node(3221, 48, 52);
      node1.isStringKey();
      Node node3 = new Node(4095, node2, node2, node0, node1, 40, 29);
      node0.isNE();
      node3.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(119, (-979), 119);
      node0.siblings();
      node0.getIntProp((-2802));
      node0.isDebugger();
      node0.isCatch();
      Node node1 = new Node(2017, node0, node0);
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node1.isOr();
      Node node3 = node2.srcref(node0);
      node0.isReturn();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node3.isWhile();
      node0.getSourceOffset();
      node3.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(119, (-979), 119);
      node0.siblings();
      node0.getIntProp((-2802));
      node0.isObjectLit();
      node0.isDebugger();
      Node node1 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node2 = Node.newString(4095, "|N_{d/g?b:03");
      Node node3 = new Node((-2956), node1, node0, node1);
      Node node4 = node3.copyInformationFromForTree(node1);
      Node node5 = Node.newString("|N_{d/g?b:03", (-1646), 43);
      node3.checkTreeTypeAwareEqualsImpl(node2);
      node3.isSyntheticBlock();
      node1.children();
      node4.isNumber();
      node5.isThrow();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node5;
      nodeArray0[1] = node1;
      nodeArray0[2] = node3;
      nodeArray0[4] = node2;
      nodeArray0[5] = node2;
      nodeArray0[6] = node4;
      nodeArray0[7] = node1;
      Node node6 = null;
      try {
        node6 = new Node(1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node.newNumber((double) (-2069));
      Node node0 = new Node(30, 8, 12);
      node0.isIf();
      Node node1 = new Node(2, (-2069), (-2589));
      node1.getProp(1244);
      node0.isInc();
      node0.cloneNode();
      node1.siblings();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node.mergeLineCharNo(777, 777);
      Node node0 = Node.newString("zcb($1[.Y", 3183369, 3183369);
      node0.isDelProp();
      Node node1 = Node.newNumber(2831.5956531109837, 4, 31);
      Node node2 = new Node(53, node0, node0, node0, node1);
      node2.removeChild(node0);
      node1.putIntProp((-380), 4394);
      node2.isSwitch();
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isAssignAdd();
      node0.isNoSideEffectsCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable1.forEach(consumer0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(131072, node0, 30, 108);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      node1.isTypeOf();
      node1.isGetElem();
      node1.isLabelName();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isGetElem();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.hasOneChild();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.isWhile();
      node0.removeFirstChild();
      Node node1 = Node.newNumber((double) 53);
      // Undeclared exception!
      try { 
        node1.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.getQualifiedName();
      node0.isInc();
      Node node1 = new Node(122, node0, node0, node0, 29, 29);
      Node node2 = node0.cloneTree();
      node2.toString(false, false, false);
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = new Node((-1), (-1), (-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setVarArgs(false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("RQ");
      templateType0.isDict();
      node1.isTypeOf();
      JSType jSType0 = modificationVisitor0.caseNoType();
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isInc();
      node1.isCase();
      node2.siblings();
      node0.getSideEffectFlags();
      node1.addChildBefore(node2, node0);
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isGetElem();
      Node node1 = new Node(49, node0, (-2918), 42);
      node1.getIntProp(55);
      node0.hasChild(node1);
      node1.getDirectives();
      node0.setSourceEncodedPosition(55);
      node1.isOnlyModifiesArgumentsCall();
      node0.isSetterDef();
      Node node2 = node1.cloneNode();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node2;
      nodeArray0[6] = node0;
      Node node3 = new Node(1, 98, 38);
      nodeArray0[7] = node3;
      Node node4 = null;
      try {
        node4 = new Node(36, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      Node node1 = new Node(36, 32, 568);
      node1.getSourceOffset();
      node0.isDec();
      Node node2 = new Node(699, node1);
      Node node3 = new Node(30, 29, 40);
      Node node4 = new Node(1, 54, 1537);
      Node node5 = Node.newString("ICp<-`8$f_I+`CbJ;j", 883, 126);
      node0.wasEmptyNode();
      node5.isQuotedString();
      node2.isVoid();
      Node node6 = node3.cloneTree();
      // Undeclared exception!
      try { 
        node6.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node(33, (-1848), (-1848));
      Node node1 = new Node(110, 38, 12);
      node0.addChildrenToBack(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = Node.newString("");
      jSTypeRegistry0.createObjectType("", node2, (ObjectType) null);
      node0.siblings();
      node1.isOr();
      node0.isGetProp();
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      JSTypeNative jSTypeNative0 = JSTypeNative.NUMBER_STRING;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeRegistry0.createFunctionType(jSType0, false, jSTypeArray0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.getQualifiedName();
      node0.isInc();
      node0.isAssign();
      node0.isFromExterns();
      Node node1 = new Node(39, node0);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(91, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      node2.getBooleanProp(52);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node1.isAssign();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags6.setMutatesGlobalState();
      node0.isWhile();
      node0.removeFirstChild();
      Node node4 = node2.srcrefTree(node0);
      Node node5 = null;
      try {
        node5 = new Node((-1438), node0, node4, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newString("duplicate child", 101, 101);
      Node node1 = new Node(101, node0, node0);
      node1.isNoSideEffectsCall();
      Node.newString("we(eG");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isComma();
      Node node2 = node1.getLastChild();
      node2.setCharno(33);
      node2.putIntProp(93, 100);
      node2.getStaticSourceFile();
      Node node3 = node1.useSourceInfoFrom(node2);
      node2.getProp(3974);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getQualifiedName();
      node1.isOptionalArg();
      node3.getSourcePosition();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node(42, (-1438), 38);
      Node node2 = Node.newNumber((double) 125, 55, 49);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      node1.hasOneChild();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Oy?wic_");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2137208606));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.isWhile();
      node2.removeFirstChild();
      node1.srcrefTree(node0);
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.getQualifiedName();
      Node node1 = Node.newString("", 308, 25);
      node0.isBreak();
      node1.isCase();
      node0.isObjectLit();
      node0.isNew();
      Node node2 = node0.cloneNode();
      node2.isSyntheticBlock();
      node2.isLabelName();
      Node node3 = node2.cloneNode();
      node3.isOr();
      // Undeclared exception!
      try { 
        node2.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1806);
      Node node1 = new Node(40, node0);
      node0.isCall();
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.getBooleanProp((-2069));
      Node node1 = new Node(108, node0, node0, node0, node0);
      node0.checkTreeEqualsImpl(node1);
      node1.isHook();
      node1.isInstanceOf();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node(42, (-1438), 38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node1.isDefaultCase();
      node0.isContinue();
      int int0 = Node.QUOTED_PROP;
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node(42, (-1438), 38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isLabel();
      node0.getSideEffectFlags();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = new Node(33, (-1), 108);
      Node node1 = new Node(309, node0, node0, 0, (-1864));
      Node node2 = node0.copyInformationFrom(node1);
      node2.setIsSyntheticBlock(false);
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newString("duplicate child", 101, 101);
      Node node1 = new Node(101, node0, node0);
      node1.isNoSideEffectsCall();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isComma();
      Node node2 = Node.newNumber((double) 50, (-1106), 1);
      node2.isGetElem();
      Node node3 = new Node(4, node1, (-160), (-2172));
      node1.setSourceEncodedPosition(151584);
      node0.isOnlyModifiesArgumentsCall();
      node1.isSetterDef();
      node2.isLabelName();
      Node node4 = node3.cloneNode();
      Node node5 = Node.newString("duplicate child");
      node5.isOr();
      node4.srcref(node1);
      node4.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node4.isEmpty();
      node2.isWhile();
      node5.getSourceOffset();
      Node node6 = new Node(4095, node5);
      node6.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = new Node(142, 142, 0);
      Iterable<Node> iterable0 = new HashSet<Node>(29);
      node0.getIntProp(37);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(4, node0, node0, 1, 48);
      node0.isComma();
      node0.isSetterDef();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(38, node0);
      Vector<Node> vector0 = new Vector<Node>(1);
      node1.getIntProp(57);
      Node node2 = Node.newString("a*v 5.Mx#");
      Node node3 = new Node(124, node2, 3562, (-1719));
      Node node4 = node2.useSourceInfoIfMissingFrom(node3);
      Node node5 = Node.newNumber((-26.92060555));
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeEqualsImpl(node4);
      node2.getBooleanProp(965);
      node3.putIntProp(103, 12);
      node5.isParamList();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags3.valueOf();
      node3.getProp(49);
      node1.putProp(1, node_NodeMismatch0);
      node2.isIf();
      node5.getAncestors();
      node0.copyInformationFromForTree(node5);
      node0.useSourceInfoIfMissingFrom(node5);
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newString("x#");
      node0.isNoSideEffectsCall();
      Node node1 = new Node(52, node0, node0, node0, node0);
      node1.copyInformationFrom(node0);
      Node node2 = null;
      try {
        node2 = new Node(56, node0, node0, node0, 37, 48);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = new Node(114, (-1892), (-1933));
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isThis();
      node0.isObjectLit();
      Node node1 = new Node(1073741824, node0, node0, node0);
      Node node2 = Node.newString(54, "a+p4H'%:LV74Q", 0, 124);
      Node node3 = new Node(2, node2, node1);
      node0.isHook();
      node3.removeChildAfter(node2);
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = new Node(114, (-1892), (-1081));
      node0.siblings();
      node0.isOr();
      Node node1 = new Node(29, node0, node0, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node1.hasOneChild();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4]2Q+-_k.cE\"PK");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.isWhile();
      node1.removeFirstChild();
      node1.srcrefTree(node0);
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = new Node(1090);
      node0.getLength();
      Node node1 = new Node(47, 15, (-4098));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node1.isLabel();
      node0.getSideEffectFlags();
      Node node2 = Node.newString(30, "second new child has existing sibling", (-1667), 101);
      Node node3 = node1.copyInformationFrom(node2);
      node3.isComma();
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = new Node((-50), (-50), (-50));
      Node node1 = new Node(29, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.removeProp((-1989));
      node1.isInc();
      int int0 = Node.OPT_ARG_NAME;
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = new Node(64);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getQualifiedName();
      node0.isNot();
      Node node1 = new Node(2, node0, node0, 46, 48);
      node1.setVarArgs(false);
      Node node2 = new Node(40, 42, (-1892));
      node1.isScript();
      node2.isVoid();
      node2.isDelProp();
      node2.isFor();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 859, 111);
      Node node1 = new Node(111, node0, node0, node0, 452, 12);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node(42, (-1438), 38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      Node node2 = new Node(0);
      node2.isUnscopedQualifiedName();
      node0.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = Node.newString(65, ">");
      Node node1 = new Node(85, node0, node0, 52, 51);
      node1.isComma();
      node0.getAncestor(83);
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = new Node(125);
      int int0 = Node.DECR_FLAG;
      Node node1 = new Node(42, 47, 38);
      String string0 = "a+p4H'%:LV74Q";
      node1.isThis();
      node0.isObjectLit();
      Node node2 = new Node(57, node0, node0, node1);
      Node.newString(10, "a+p4H'%:LV74Q", 29, 377);
      node1.isOptionalArg();
      Node node3 = null;
      try {
        node3 = new Node((-488), node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = new Node((-50), (-50), (-50));
      Node node1 = new Node(29, node0, node0);
      node0.getQualifiedName();
      node1.isNot();
      node1.getSourceFileName();
      node1.getQualifiedName();
      Node node2 = new Node(31, node1);
      node2.isInc();
      node0.isLabel();
      node0.getSideEffectFlags();
      Node node3 = node2.copyInformationFrom(node1);
      node3.isComma();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node(42, (-1438), 38);
      Node node2 = Node.newNumber((double) 125, 55, 49);
      Node node3 = new Node(55, 38, 32);
      node1.useSourceInfoIfMissingFrom(node2);
      node0.isCase();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node1.getIntProp(1);
      node2.isIf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setSourceEncodedPosition(8);
      node0.isEmpty();
      node3.isWhile();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node(42, (-1438), 38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isLabel();
      node0.getSideEffectFlags();
      node0.copyInformationFrom(node1);
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      Node node0 = Node.newString(0, "Object#Element", 844, 844);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`QoAh");
      node0.getIntProp(0);
      Node node1 = new Node(1, node0, node0, node0, node0, 113, 1);
      node1.isWith();
      Node node2 = Node.newString(2, "null", (-1586), 37);
      Node node3 = new Node(8, node2, node1, 53, 38);
      Node.newString(15, "Named type with empty name component");
      Node node4 = Node.newNumber(0.4, 15, 57);
      node4.hasOneChild();
      // Undeclared exception!
      try { 
        node1.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.getLength();
      node0.getIntProp(0);
      Node node1 = Node.newNumber((double) 2);
      node0.getBooleanProp(31);
      node0.isCatch();
      Node node2 = new Node(2550, node0, node0);
      node2.removeFirstChild();
      Node.newNumber((double) 57, 2, 48);
      node1.getBooleanProp(50);
      node0.isName();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(33, (-1848), (-1848));
      node0.isIf();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)127;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = new Node(110, 38, 12);
      node0.useSourceInfoFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isInc();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isThis();
      node0.isObjectLit();
      Node node1 = new Node(39, node0, node0, node0);
      Node node2 = Node.newString(40, "a+p4H'%:LV74Q", (-1570), (-1366));
      node1.isOptionalArg();
      Node node3 = new Node(55, node2, node1);
      node2.isHook();
      node3.removeChildAfter(node2);
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = new Node(93);
      node0.getProp(15);
      Node node1 = Node.newString(112, "Null");
      node0.addChildToFront(node1);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = new Node(114, (-1892), (-1081));
      node0.siblings();
      node0.isOr();
      Node node1 = new Node(29, node0, node0, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node1.isHook();
      node1.hasOneChild();
      Node node2 = new Node(32, 443223, 29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isInc();
      Node node3 = node0.cloneNode();
      node3.setVarArgs(false);
      node3.isAdd();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newString("a+p4H'%:LV74Q");
      Node node1 = new Node(92, 43, 859);
      node0.isObjectLit();
      node1.isNew();
      Node node2 = node0.cloneNode();
      node1.isSyntheticBlock();
      Node node3 = Node.newString(50, "19&>{T20j");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TreeSet<EnumElementType> treeSet0 = new TreeSet<EnumElementType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) treeSet0);
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node4.copyInformationFromForTree(node0);
      Node.newString("mIS7.y8", 2097152, (-1847));
      node3.isSyntheticBlock();
      node3.children();
      node0.isNumber();
      node2.isFunction();
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = new Node(104);
      Node node1 = new Node(50, node0);
      Node node2 = node1.cloneNode();
      node2.isString();
      node2.checkTreeEqualsImpl(node1);
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 50
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(33, (-1848), (-1848));
      node0.isIf();
      Node node1 = new Node(51, node0, node0, node0, node0, 1, 29);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isObjectLit();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isAssignAdd();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(108, node0, node0, node0, node0);
      node1.removeChild(node0);
      node0.putIntProp(12, 51);
      node1.isSwitch();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(91, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      Node node3 = new Node(1, node0, node0);
      Node.newNumber((-442.67), (-899), 42);
      node2.getBooleanProp(108);
      node3.isName();
      Node node4 = null;
      try {
        node4 = new Node((-919), (Node) null, node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = Node.newString(118, "L\fcqIK>M`", (-783), (-783));
      Node node1 = Node.newString("|#q~A9'wW?/`hyZGt", 4095, 1);
      node0.isInc();
      Node node2 = Node.newString("L\fcqIK>M`");
      node2.isBreak();
      node0.isCase();
      node1.isObjectLit();
      node1.isNew();
      Node node3 = node2.cloneNode();
      node2.isGetProp();
      Node node4 = Node.newString(52, "com.google.javascript.rhino.Node$SiblingNodeIterable");
      node4.copyInformationFromForTree(node1);
      Node node5 = Node.newString("", 785, 40);
      Node node6 = new Node(50, node0, node5, node3);
      node6.checkTreeTypeAwareEqualsImpl(node0);
      node4.isSyntheticBlock();
      node2.children();
      node6.isNumber();
      node5.isArrayLit();
      node6.replaceChild(node5, node1);
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = new Node((-50), (-50), (-50));
      Node node1 = new Node(37, node0, node0, 36, 56);
      node0.setLength((-50));
      node1.setSideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node1.setSideEffectFlags(node_SideEffectFlags4);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.srcrefTree(node0);
      node1.copyInformationFrom(node0);
      node0.isOptionalArg();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)127;
      byteArray0[1] = (byte)122;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString((int) (byte)127, "F!e}R}W4eifi-|s");
      Node node1 = new Node((-2137), node0, node0, node0, (-2137), 42);
      node1.checkTreeEqualsImpl(node0);
      node0.getJSDocInfo();
      node0.addChildrenToFront(node1);
      node0.setVarArgs(true);
      node0.isSwitch();
      Node node2 = Node.newString("F!e}R}W4eifi-|s");
      node1.siblings();
      node2.toStringTree();
      node2.isRegExp();
      node0.getCharno();
      Node node3 = node1.getAncestor(54);
      node3.isCase();
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.getQualifiedName();
      Node node1 = Node.newString("", 308, 25);
      node0.isBreak();
      node1.isCase();
      node0.isObjectLit();
      node0.isNew();
      Node node2 = node0.srcrefTree(node1);
      Node node3 = new Node(30, node0);
      Node node4 = node3.copyInformationFrom(node1);
      node4.isOptionalArg();
      // Undeclared exception!
      try { 
        node2.addChildAfter(node4, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(33, (-1848), (-1848));
      node0.isIf();
      Node node1 = new Node(110, 38, 12);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isInc();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = new Node(114, (-1892), (-1081));
      node0.siblings();
      node0.isOr();
      Node node1 = new Node(29, node0, node0, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node1.isHook();
      node1.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node.newString("com.google.common.collect.Maps$1");
      node0.isDo();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(91, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      Node node3 = new Node(4);
      node3.getSourceOffset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesGlobalState();
      node3.isWhile();
      node3.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(48, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      Node node4 = new Node(155, (-972), 36);
      node4.isScript();
      node4.isDebugger();
      node2.getDirectives();
      node4.isStringKey();
      node2.isAssignAdd();
      node3.isObjectLit();
      node4.isContinue();
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString((-407), "Object#Element", (-1705), 118);
      Node node1 = Node.newString("`QoAh", 37, 32);
      node1.isInc();
      node1.isBreak();
      node1.isCase();
      node1.isObjectLit();
      node1.isNew();
      node1.cloneNode();
      node0.isSyntheticBlock();
      Node node2 = Node.newString(4095, "com.google.javascript.rhino.jstype.Property");
      Node node3 = node2.copyInformationFromForTree(node0);
      node2.getSideEffectFlags();
      node2.getQualifiedName();
      node3.isOptionalArg();
      node1.getSourcePosition();
      node3.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = new Node(125);
      int int0 = Node.DECR_FLAG;
      Node node1 = new Node(42, (-1438), 38);
      node0.useSourceInfoFromForTree(node1);
      Node.newNumber((double) 125, 55, 10);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newString(56, "");
      Node node1 = new Node(85, node0, node0, 52, 51);
      node1.isAssign();
      node0.getStaticSourceFile();
      Node node2 = node1.cloneNode();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = Node.newString(56, "");
      node0.getAncestor(76);
      Node.extractLineno((-2125));
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.siblings();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      node0.isTrue();
      node0.putIntProp((-3347), 1709);
      node0.isSwitch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node1.isTrue();
      node1.srcrefTree(node0);
      Node node2 = Node.newString("Object#Key", 1, 52);
      node1.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.setLength((-2069));
      node0.isAssignAdd();
      node0.isQualifiedName();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(108, node0, node0, node0, node0);
      node1.isIf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEmpty();
      node0.isWhile();
      node0.isLocalResultCall();
      node0.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.getLength();
      node0.getIntProp(0);
      Node node1 = new Node(54, 111, 97);
      node0.getInputId();
      node0.removeProp(5760);
      node0.isFunction();
      Node node2 = null;
      try {
        node2 = new Node(1550, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(33, (-1848), (-1848));
      node0.isIf();
      Node node1 = new Node(110, 38, 12);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isInstanceOf();
      node0.removeProp(98);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      ImmutableList.copyOf(jSTypeArray0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = Node.newNumber(0.0, 103, 118);
      node1.setOptionalArg(false);
      node1.isFor();
      node0.isFunction();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.isAssignAdd();
      node0.isOr();
      Node node1 = new Node(108, node0, node0, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      node1.isHook();
      node1.hasOneChild();
      node0.isInc();
      node1.cloneNode();
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isThis();
      node0.isObjectLit();
      Node node1 = new Node(39, node0, node0, node0);
      Node node2 = Node.newString(40, "a+p4H'%:LV74Q", (-1570), (-1366));
      node1.detachChildren();
      node2.setOptionalArg(false);
      node1.isOptionalArg();
      Node node3 = new Node(55, node2, node1);
      node2.isHook();
      node3.removeChildAfter(node2);
      node1.getJSType();
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = new Node((-1), (-1), (-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setVarArgs(true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("RQ");
      templateType0.isDict();
      node1.isTypeOf();
      node1.getProp(147);
      node1.putProp(53, templateType0);
      node1.isIf();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      node1.useSourceInfoFromForTree(node0);
      node_SideEffectFlags3.setMutatesArguments();
      node1.putBooleanProp(36, false);
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = new Node(116, (-1892), (-475));
      node0.siblings();
      node0.getIntProp((-1892));
      node0.getInputId();
      node0.removeProp(47);
      Node node1 = Node.newString(54, "com.google.javascript.rhino.Node$IntPropListItem", (-2103), 40);
      node1.isDefaultCase();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = new Node((-1), (-1), (-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setVarArgs(false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("RQ");
      templateType0.isDict();
      node1.isTypeOf();
      node1.getProp(147);
      node1.putProp(53, templateType0);
      node1.isIf();
      node0.isReturn();
      node1.hasMoreThanOneChild();
      // Undeclared exception!
      try { 
        node1.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000340] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString(89, "8yL,oZq_PRm%E");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8yL,oZq_PRm%E");
      Node node1 = new Node((-2193), node0, node0);
      Node node2 = node0.srcref(node1);
      node1.setType(48);
      node2.isTrue();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(91, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      Node node3 = new Node(4);
      node1.toStringTree();
      Node.newNumber((double) 38, 1783, 50);
      node3.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node(42, (-1438), 38);
      Node node2 = Node.newNumber((double) 125, 55, 49);
      Node node3 = new Node(55, 38, 32);
      node0.isCase();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node1.getIntProp(1);
      node3.getSourceOffset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.isWhile();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node3;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      Node node4 = new Node(63, nodeArray0, 51, 43);
      node4.srcrefTree(node2);
      node2.isNot();
      Node.extractCharno(53);
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newString("a+p4H'%:LV74Q");
      Node node1 = new Node(92, 43, 859);
      node1.isIf();
      Node node2 = Node.newNumber(52.0, (-300), 30);
      node0.setOptionalArg(false);
      node2.isFor();
      node1.isFunction();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.getLength();
      node0.getIntProp(0);
      Node node1 = new Node(54, 111, 97);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.getInputId();
      node0.removeProp(5760);
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.setWasEmptyNode(false);
      Node node1 = new Node((-1376), 12, 1729);
      Node node2 = new Node((-1376), 55, 38);
      Node node3 = new Node(56, 39, 0);
      node0.isCase();
      Node node4 = new Node(3910);
      Node node5 = new Node(38, node2, node4);
      node3.isCatch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.isIf();
      node1.isReturn();
      node5.hasMoreThanOneChild();
      node2.isGetElem();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = new Node(142, 142, 0);
      node0.children();
      node0.getIntProp(37);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node1 = new Node(4, node0, node0, 1, 48);
      node1.setWasEmptyNode(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      node_SideEffectFlags0.clearAllFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEmpty();
      node0.isWhile();
      node1.isBlock();
      node1.isCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry0.getObjectElementKey();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Object#Element", true);
      Node node0 = Node.newString("Not declared as a type name");
      Node node1 = new Node(39, node0);
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "tb<<7");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!)i1+bLUD':");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      JSType jSType1 = jSTypeRegistry0.createOptionalType(jSType0);
      jSTypeArray0[0] = jSType1;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setJSType(jSTypeArray0[0]);
      Node[] nodeArray0 = new Node[6];
      Node.newNumber((double) 8, 101, 42);
      Node node1 = Node.newString(30, "", 136, 37);
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      node1.checkTreeEqualsImpl(node0);
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      node0.setLineno(15);
      Node node2 = null;
      try {
        node2 = new Node(51, nodeArray0, 0, 43);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node0.isNoSideEffectsCall();
      Node node1 = new Node((-2588), 46, 1);
      Node node2 = new Node(16, node1, node0, 461845907, 39);
      Node.newString("vOP`~XDX0$MiEKUqo,");
      node1.isDo();
      node2.isAnd();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = new Node((-1), (-1), (-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setVarArgs(false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("RQ");
      templateType0.isDict();
      node1.isTypeOf();
      JSType jSType0 = modificationVisitor0.caseNoType();
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.useSourceInfoFrom(node1);
      node2.isInc();
      try { 
        node2.setString("Not declared as a constructor");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = new Node(142, 142, 142);
      node0.children();
      Node node1 = new Node(63, 29, 1570);
      Node node2 = Node.newNumber((double) 1);
      node1.checkTreeEqualsImpl(node2);
      node1.getBooleanProp(50);
      node1.isCatch();
      node1.isAssignAdd();
      node0.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags((-660));
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      node2.isTrue();
      Node node3 = Node.newString(39, "com.google.javascript.rhino.Node$ObjectPropListItem");
      node3.hasChild(node0);
      Node node4 = new Node(4, node1, 40, 29);
      node_SideEffectFlags3.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = Node.newNumber((-874.7063), 1959, 77);
      Node node1 = new Node(77, node0, node0, node0, (-4319), 54);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.getProp(147);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(31);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 31
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = new Node((-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      node_SideEffectFlags0.setAllFlags();
      node0.getIntProp(119);
      node0.hasMoreThanOneChild();
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = new Node(4095, node1, node1);
      Node.newString(2, "a+p4H'%:LV74Q", 3867, 2);
      node1.isTrue();
      node1.getChildAtIndex(1);
      node2.getJSType();
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = new Node(114, (-1892), (-1081));
      node0.siblings();
      node0.isOr();
      Node node1 = new Node(51, node0, node0, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node1.isHook();
      node1.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node0.getSourceOffset();
      node_SideEffectFlags3.setMutatesGlobalState();
      node0.isWhile();
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = new Node(114, (-1892), (-1081));
      node0.siblings();
      node0.getIntProp(105);
      node0.addSuppression("I3 >BUiUQGRf<");
      node0.putBooleanProp(63, true);
      node0.isTypeOf();
      Node node1 = Node.newString(16, "");
      node1.isThis();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = Node.newString("~)V{YoADZA,uOmI");
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null, true, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.isNew();
      Node node1 = node0.cloneNode();
      node0.isSyntheticBlock();
      Node node2 = Node.newString((-1586), "`QoAh");
      Node node3 = node1.copyInformationFromForTree(node2);
      Node node4 = Node.newString("second new child has existing sibling", 37, 2);
      node4.isQualifiedName();
      node1.checkTreeTypeAwareEqualsImpl(node3);
      Node.newString("1BfJ.|V<p?<S");
      node3.isThis();
      Node node5 = new Node(16384);
      node3.isBlock();
      node0.isCall();
      node3.addChildToFront(node4);
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.getQualifiedName();
      node0.isInc();
      Node node1 = node0.cloneNode();
      node1.setSourceEncodedPositionForTree((-2137208606));
      node1.isEquivalentTo(node1, false, false, false);
      Node node2 = new Node(41, node0, node1, 729, 29);
      Node node3 = node0.useSourceInfoFromForTree(node2);
      node1.addChildToBack(node2);
      node2.clonePropsFrom(node3);
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = new Node(142, 142, 0);
      node0.children();
      node0.getIntProp(37);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(4, node0, node0, 1, 48);
      node1.setWasEmptyNode(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      node_SideEffectFlags0.clearAllFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEmpty();
      node0.isWhile();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // RETURN 1 [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isInc();
      node0.isQualifiedName();
      node0.isObjectLit();
      node0.setSourceEncodedPosition(40);
      node0.isSyntheticBlock();
      node0.children();
      node0.setSourceFileForTesting("");
      Node node1 = new Node(1, node0, node0, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(33, (-1848), (-1848));
      node0.isIf();
      Node node1 = new Node(110, 38, 12);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isTypeOf();
      node1.isThis();
      node1.removeFirstChild();
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = Node.newString("~)V{YoADZA,uOmI");
      node0.isEquivalentToShallow(node0);
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = new Node(142, 142, 142);
      node0.children();
      Node node1 = new Node(63, 29, 1570);
      Node node2 = Node.newNumber((double) 1);
      node1.checkTreeEqualsImpl(node2);
      node1.getBooleanProp(50);
      node1.isCatch();
      node1.isAssignAdd();
      node0.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags((-660));
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      node2.hasOneChild();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(1592);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isSyntheticBlock();
      jSDocInfo0.setStableIdGenerator(false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node2 = Node.newNumber((double) 0);
      node1.isFor();
      node1.isAdd();
      node0.getSideEffectFlags();
      node0.isEmpty();
      Node node3 = new Node(38, node2, node2, node0, 40, 1323);
      Node node4 = node1.srcrefTree(node3);
      // Undeclared exception!
      try { 
        node4.setDouble(52);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1592
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(56, node0, node0);
      node1.isAnd();
      Node node2 = new Node(42, 15, 8);
      node1.addChildAfter(node2, node0);
      node1.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      Node node0 = Node.newString("Object#Element");
      node0.isGetProp();
      node0.isArrayLit();
      Node node1 = Node.newNumber((-898.444), 47, 1823);
      node0.getAncestor(63);
      Node node2 = new Node(16, node1, node1, 124, 4095);
      node2.replaceChild(node1, node0);
      node2.siblings();
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = new Node(116, (-1892), (-475));
      node0.siblings();
      node0.getIntProp((-475));
      Node node1 = Node.newNumber((double) (-475));
      node1.getBooleanProp(2);
      node1.isCatch();
      Node node2 = new Node((-1434), node1, node0);
      node0.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(41);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node0.getSourceOffset();
      node_SideEffectFlags2.setMutatesGlobalState();
      node2.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      node0.getIntProp(0);
      Node node1 = new Node(42, (-1438), 38);
      Node node2 = Node.newNumber((double) 125, 55, 49);
      node0.setOptionalArg(false);
      Node.newString((-4575), "?s#");
      node2.isOptionalArg();
      Node node3 = node1.useSourceInfoFrom(node2);
      node2.checkTreeTypeAwareEqualsImpl(node3);
      node1.getQualifiedName();
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2580, nodeArray0, 2580, 256);
      Node node1 = Node.newString(2546, "com.google.common.collect.AbstractMultimap");
      node0.hasChild(node1);
      Node node2 = new Node((-1325), node1, 46, 113);
      node0.isWhile();
      node0.isBreak();
      node2.isUnscopedQualifiedName();
      node1.isAdd();
      node2.getProp(114);
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2580
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(55, nodeArray0, 55, 64);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(48);
      InputId inputId0 = new InputId((String) null);
      node0.setInputId(inputId0);
      node0.isName();
      Node node2 = new Node(4, node1, node1, node0);
      node2.copyInformationFromForTree(node0);
      node1.getBooleanProp(139);
      node0.removeProp(178);
      Node node3 = Node.newString("");
      Node.newNumber(1.0, 2, 1);
      Node node4 = Node.newNumber(140.61134006399);
      node1.checkTreeEqualsImpl(node3);
      node3.isGetterDef();
      node2.addChildToFront(node3);
      node3.isNull();
      Node.extractCharno(32);
      node4.isAdd();
      Node node5 = new Node(4095, nodeArray0, 55, 43);
      node5.isTypeOf();
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node((-1882), 40, (-719));
      Node node2 = Node.newString("");
      node1.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.addChildrenToFront(node2);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      node2.isAnd();
      node1.isExprResult();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      // Undeclared exception!
      try { 
        node2.appendStringTree(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getIntProp((-786));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setMutatesArguments();
      node0.isLabel();
      node0.isInstanceOf();
      Node node1 = Node.newString((-1223), "");
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = new Node(1018, 1018, (-1586));
      node0.siblings();
      int int0 = Node.JSDOC_INFO_PROP;
      Node node1 = Node.newString(57, "a+ppH'%:Ly7HQ", 54, 4095);
      node1.hasMoreThanOneChild();
      node1.isObjectLit();
      node0.setWasEmptyNode(false);
      node1.isVarArgs();
      node0.checkTreeEqualsImpl(node0);
      node1.getQualifiedName();
      Node node2 = new Node(57, node0, node1);
      // Undeclared exception!
      try { 
        node2.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = new Node(114, (-1892), (-1081));
      node0.siblings();
      node0.getIntProp(105);
      Node node1 = Node.newNumber((double) 1);
      node1.getBooleanProp(77);
      node0.isCatch();
      Node node2 = new Node(38, node1, node0);
      node2.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(3104);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node0.getSourceOffset();
      node1.isOr();
      node0.getSideEffectFlags();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      Node node0 = Node.newString("Object#Key", 124, 30);
      node0.isInc();
      node0.isInc();
      node0.isOr();
      node0.getSideEffectFlags();
      node0.isTrue();
      node0.isEmpty();
      Node node1 = node0.cloneNode();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = new Node(5760, 102, 5760);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "ZX+a,2Yj4A~";
      JSType jSType0 = null;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.isObjectLit();
      String string0 = "";
      Node node1 = new Node(51, node0, 1, 4095);
      Node node2 = Node.newString(40, "");
      node0.cloneNode();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = new Node(1018, 1018, (-1586));
      node0.siblings();
      int int0 = Node.JSDOC_INFO_PROP;
      Node node1 = Node.newString(57, "a+ppH'%:Ly7HQ", 54, 4095);
      node1.hasMoreThanOneChild();
      node1.isObjectLit();
      node0.setWasEmptyNode(false);
      node0.checkTreeEqualsImpl(node0);
      node1.getQualifiedName();
      Node node2 = new Node(57, node0, node1);
      node2.isInc();
      node0.isInc();
      node0.isOr();
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+`mc{3Z W0uM^WG2");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      Node node0 = Node.newString((-10), "Object#Element", (-2171), (-2171));
      Node node1 = new Node((-2171), node0, node0, node0);
      node1.isStringKey();
      node1.isAssignAdd();
      node0.isNE();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = Node.newString("TRUCuT");
      Node node1 = new Node((-866), 38, (-685));
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.getIntProp(51);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node2 = node1.cloneTree();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isLabel();
      node0.isInstanceOf();
      node1.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = new Node((-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setThrows();
      Node node2 = Node.newString(1570, "',r>{M[%[yhXH");
      node1.isOptionalArg();
      Node node3 = node0.useSourceInfoFrom(node2);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node3.getQualifiedName();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      Node node0 = new Node(305, 305, (-752));
      Node node1 = Node.newNumber((double) 12, 16, (-1));
      Node node2 = new Node((-969), 39, 39);
      node1.isCase();
      node2.isNumber();
      node0.isStringKey();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = new Node((-2085));
      Node node1 = node0.getAncestor(0);
      node0.isGetProp();
      node1.isAssignAdd();
      node0.isInc();
      Node node2 = node1.cloneNode();
      node0.setSourceEncodedPositionForTree(1);
      node1.isEquivalentTo(node2, true, false, true);
      Node node3 = new Node((-895), node1, node1, (-457), 48);
      node3.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+`mc{3Z W0uM^WG2");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isEquivalentToTyped(node0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = new Node((-1), (-1), (-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setVarArgs(false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      jSTypeRegistry0.createEnumType("Node has existing properties.", node0, jSType0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("RQ");
      templateType0.isDict();
      node1.isTypeOf();
      JSType jSType1 = modificationVisitor0.caseNoType();
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = jSType1;
      jSTypeArray0[1] = jSType1;
      jSTypeArray0[2] = jSType1;
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isInc();
      node1.isCase();
      node2.siblings();
      node0.getSideEffectFlags();
      node1.addChildBefore(node2, node0);
      node2.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(91, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      node2.putProp(2, node0);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      Node node4 = new Node(155, (-972), 36);
      node1.isScript();
      node3.isIf();
      Node node5 = new Node(48, node3, node3, node3);
      node5.removeChildren();
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newString(0, "STRUCT", 2513, (-2069));
      node0.siblings();
      node0.getQualifiedName();
      node0.isNot();
      Node node1 = new Node(55, node0, node0, (-2470), 30);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node1.isLabelName();
      Node node2 = new Node((-1586));
      node2.isRegExp();
      node0.isCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isHook();
      Node node3 = new Node(56, node2, node1, 2, 51);
      node3.removeChildren();
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = new Node((-1), (-1), (-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      int int0 = Node.JSDOC_INFO_PROP;
      node1.useSourceInfoIfMissingFrom(node0);
      Node.newString(0, "a+ppH'%:Ly7HQ", (-1824), 4095);
      node1.hasMoreThanOneChild();
      node1.isObjectLit();
      node0.isOptionalArg();
      Node node2 = Node.newString(42, "a+ppH'%:Ly7HQ", 1660, 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newString("Oy?wic_");
      node2.isOptionalArg();
      Node node3 = Node.newString(37, "", 1023, 53);
      node3.isDo();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = new Node(142, 142, 0);
      node0.children();
      node0.getIntProp(37);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(4, node0, node0, 1, 48);
      node0.checkTreeEqualsImpl(node1);
      node1.setWasEmptyNode(true);
      node1.checkTreeEqualsImpl(node0);
      node0.setSourceEncodedPositionForTree(42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node3 = new Node((-294), 4095, 86);
      node2.isEquivalentTo(node3, false, false, true);
      Node node4 = new Node(2, node2, node1, (-102), (-2891));
      Node node5 = new Node(142, node3, 30, 3482);
      node5.useSourceInfoFromForTree(node1);
      Node node6 = Node.newString(53, ",ZI,1+;\":RR0/", 2, 47);
      node6.addSuppression("`QoAh");
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      Node node1 = new Node(63, 29, 1570);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node2 = Node.newNumber((-1.0), 30, 57);
      Node node3 = node1.useSourceInfoFrom(node0);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node2.getQualifiedName();
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString((-407), "Object#Element", (-1705), 118);
      Node node1 = Node.newString("`QoAh", 37, 32);
      node1.isInc();
      node1.isBreak();
      node1.isCase();
      node1.isObjectLit();
      node1.isNew();
      Node node2 = node1.cloneNode();
      node0.isSyntheticBlock();
      Node node3 = Node.newString(4095, "com.google.javascript.rhino.jstype.Property");
      node3.copyInformationFromForTree(node0);
      Node node4 = Node.newString("Oy?wic_", 132, 57);
      node4.checkTreeTypeAwareEqualsImpl(node2);
      node4.isSyntheticBlock();
      node1.children();
      node1.checkTreeTypeAwareEqualsImpl(node4);
      node3.getQualifiedName();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node5 = Node.newNumber((-851.0), (-2512), 10);
      node5.isNull();
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      node0.getIntProp(0);
      Node node1 = new Node(42, (-1438), 38);
      Node node2 = Node.newNumber((double) 125, 55, 49);
      Node node3 = new Node(55, 38, 32);
      node0.isCase();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node1.getIntProp(1);
      node2.isIf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEmpty();
      node3.isWhile();
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = Node.newString(56, "");
      Node node1 = new Node(85, node0, node0, 52, (-958));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      node_SideEffectFlags0.setMutatesArguments();
      Node node2 = Node.newString(4630, "");
      Node node3 = node1.copyInformationFromForTree(node0);
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node0.isCase();
      Node node4 = new Node(8, node2, node3, node3);
      node2.isNumber();
      node1.isGetProp();
      node0.isArrayLit();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(39, node0, node0, node0);
      node1.isInc();
      node0.isOr();
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = new Node(21, node0, node0, node0, node0, 40, 32);
      node0.isWith();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = new Node((-1646), 64, 142);
      node0.getIntProp(30);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = new Node(16, node0, 57, (-3155));
      node1.checkTreeEqualsImpl(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.getObjectElementKey();
      Node.NodeMismatch node_NodeMismatch1 = node1.checkTreeTypeAwareEqualsImpl(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Object#Key", false);
      node_NodeMismatch1.equals(simpleSourceFile0);
      Node node2 = Node.newString("com.google.javascript.rhino.jstype.TemplatizedType");
      Node node3 = Node.newString(".qQ-_Hfu$f");
      node3.isThis();
      node2.isBlock();
      node0.isCall();
      node2.toStringTree();
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(4, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = Node.newString("F|nctDon", 64, 44);
      node0.useSourceInfoIfMissingFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(305);
      node_SideEffectFlags0.setMutatesArguments();
      node0.isAssign();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(125);
      node_SideEffectFlags1.clearAllFlags();
      Node node1 = Node.newNumber((-1.0));
      Node node2 = Node.newNumber((-1.0), 54, (-673));
      node2.checkTreeEqualsImpl(node1);
      node1.getQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.UNKNOWN_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      JSTypeNative jSTypeNative1 = JSTypeNative.STRING_OBJECT_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative1);
      JSType[] jSTypeArray0 = new JSType[0];
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType(objectType0, jSTypeArray0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, (JSType) objectType0, (JSType) templatizedType0);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("quoted");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      // Undeclared exception!
      try { 
        node3.appendStringTree(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      node0.setWasEmptyNode(false);
      Node node1 = new Node((-1394), 12, 1729);
      Node node2 = Node.newNumber(0.0, 130, 2);
      node2.getQualifiedName();
      node1.isInc();
      node2.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(103);
      node_SideEffectFlags0.setMutatesArguments();
      Node node3 = Node.newNumber((double) 125);
      Node node4 = Node.newNumber((double) 49, 55, 38);
      node4.getProp(256);
      Node node5 = new Node(4095, node0, node3, node4, node1, 1344, 523);
      node5.isFor();
      node2.checkTreeEqualsImpl(node3);
      node3.getQualifiedName();
      node5.isInc();
      node5.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = new Node((-1), (-1), (-1));
      Node node1 = new Node(42, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node1.cloneNode();
      Node.newNumber((double) 48, 0, 32);
      node0.setWasEmptyNode(true);
      node1.checkTreeEqualsImpl(node0);
      node1.getQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((List<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(233526, nodeArray0);
      Node node2 = node0.cloneNode();
      node1.children();
      node0.putIntProp(46, 29);
      node0.isSwitch();
      node0.isTrue();
      Node node3 = new Node((-1892), 48, 154);
      node0.getBooleanProp(913);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node4 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node4.isCase();
      node2.isNumber();
      node3.isStringKey();
      node0.isCast();
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1216));
      Node node1 = new Node((-1216), node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(22);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setVarArgs(false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("RQ");
      templateType0.isDict();
      node1.isTypeOf();
      JSType jSType0 = modificationVisitor0.caseNoType();
      JSType[] jSTypeArray0 = new JSType[5];
      jSTypeArray0[0] = jSType0;
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      // Undeclared exception!
      try { 
        modificationVisitor0.caseUnionType(unionType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(39, node0, node0, node0);
      Node node2 = Node.newString(40, "a+p4H'%:LV74Q", (-1570), (-1366));
      node2.setOptionalArg(false);
      node1.isOptionalArg();
      Node node3 = new Node(55, node2, node1);
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node2.isHook();
      // Undeclared exception!
      try { 
        node1.setString("a+p4H'%:LV74Q");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newString("STRUT");
      node0.isOnlyModifiesThisCall();
      node0.addSuppression("I3 >BUiUQGRf<");
      node0.putBooleanProp(119, true);
      node0.isFalse();
      // Undeclared exception!
      try { 
        node0.getProp(119);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = new Node(1018, 1018, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newString(57, "a+p4H'%:LV74Q", 54, 4095);
      node3.hasMoreThanOneChild();
      node3.isObjectLit();
      node2.isOptionalArg();
      Node.newString(55, "a+p4H'%:LV74Q", 4100, (-5319));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newString("a+p4H'%:LV74Q");
      node0.isDo();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(56, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isSyntheticBlock();
      node0.children();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getQualifiedName();
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.isNew();
      Node node1 = node0.cloneNode();
      node1.putIntProp(52, (-1224));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "yPB7jy~?( _AzI|#$L");
      node0.isSwitch();
      node0.isTrue();
      node1.getChildAtIndex((-1929));
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = new Node(1018, 1018, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newString(57, "a+p4H'%:LV74Q", 54, 4095);
      node3.hasMoreThanOneChild();
      node3.isObjectLit();
      node0.isObjectLit();
      node2.isNew();
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(39, nodeArray0, 1719, 6);
      node4.cloneNode();
      Node node5 = new Node(52, nodeArray0, (-1130), 117);
      // Undeclared exception!
      try { 
        node3.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = new Node(21, (-1758), (-1758));
      Node node1 = new Node(4095, 1, 38);
      Node node2 = node0.cloneNode();
      node1.children();
      node0.putIntProp(46, 29);
      Node node3 = new Node((-26), 161, (-2451));
      node1.isScript();
      node3.isOnlyModifiesThisCall();
      Node node4 = Node.newString("");
      Node node5 = node0.useSourceInfoIfMissingFromForTree(node3);
      node4.isOnlyModifiesThisCall();
      Node node6 = new Node(47, node0, node4, node0);
      node6.isAssignAdd();
      node4.isGetProp();
      node6.isArrayLit();
      // Undeclared exception!
      try { 
        node5.replaceChild(node4, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = Node.newString("7j-m^O/", 5760, 5760);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString(32, "7j-m^O/");
      node1.isUnscopedQualifiedName();
      Node node2 = new Node(56, node1, node0, 12, 54);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(5, 5, (-2890));
      Node node1 = new Node(15, node0, node0, node0, 687, (-952));
      node1.getChildCount();
      Node node2 = new Node((-2124), (-2603), 55);
      node1.getSourceOffset();
      node0.isDec();
      Node.newNumber((double) 36);
      node2.setCharno(56);
      Node node3 = Node.newString(6, "6", 48, 38);
      node3.setString("Iu(!)Pv%NU%L1H#N/D");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node5 = new Node(46, node2);
      // Undeclared exception!
      try { 
        node4.addChildAfter(node5, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      Node node1 = Node.newString("");
      node0.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(91, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      Node node4 = new Node(155, (-972), 36);
      node4.isScript();
      node4.isDebugger();
      node2.getDirectives();
      node4.isStringKey();
      node2.isAssignAdd();
      // Undeclared exception!
      try { 
        node3.addChildToFront(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newNumber((-2528.915459054), 8199, 8199);
      node0.isQuotedString();
      String string0 = "slash_v";
      node0.isDefaultCase();
      node0.isGetProp();
      node0.getBooleanProp(8199);
      Node node1 = Node.newString(8199, "3<", 1425, 49);
      node1.setCharno(16);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -2528.915459054 8199 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = Node.newNumber((double) 700);
      Node node1 = new Node(51, node0, node0, node0, 1, 700);
      node0.setDouble((-2269.4914770133));
      node1.checkTreeEqualsImpl(node0);
      node1.isBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesArguments();
      node0.isLabel();
      node0.isInstanceOf();
      node0.isStringKey();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(91, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      node2.getBooleanProp(52);
      Node node3 = new Node(2, node0, node2, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node1.isAssign();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(50);
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = Node.newNumber((double) 2);
      Node.newNumber((-1402.465310149), (-3933), 1764);
      Node node5 = new Node(91, 52, 2);
      node0.checkTreeEqualsImpl(node5);
      node1.getQualifiedName();
      node3.isInc();
      node4.isOptionalArg();
      node1.addChildToBack(node4);
      node2.isNot();
      node3.isThrow();
      Node node6 = node5.clonePropsFrom(node0);
      node6.isDelProp();
      node4.mayMutateGlobalStateOrThrow();
      node2.toStringTree();
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = Node.newString(56, "");
      Node node1 = new Node(85, node0, node0, 52, (-958));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      node_SideEffectFlags0.setMutatesArguments();
      node1.isAssign();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(100);
      node_SideEffectFlags1.clearAllFlags();
      Node node2 = Node.newNumber((double) 2513, 2, 0);
      node2.isArrayLit();
      node0.getAncestors();
      Node node3 = Node.newString(63, "Q");
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      Node node0 = Node.newString(0, "Not declared as a type name", (-1621), 844);
      node0.getIntProp((-1621));
      Node node1 = Node.newString("setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      node0.putIntProp(51, 40);
      node1.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(51);
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(44);
      node_SideEffectFlags3.valueOf();
      node0.getProp(114);
      Node node2 = Node.newNumber((-159.769), 47, 1887);
      node1.putProp(407, node2);
      node2.isIf();
      node0.isReturn();
      node2.hasMoreThanOneChild();
      node2.isQualifiedName();
      node2.getDouble();
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = new Node(309);
      node0.putBooleanProp(16, true);
      node0.setSourceEncodedPositionForTree(108);
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      Node node1 = Node.newNumber((double) 57);
      Node node2 = Node.newNumber(0.0);
      Node node3 = new Node(53, node2, node1, node1, node0, (-3123), (-151));
      node3.isEquivalentToShallow(node2);
      node2.setDouble((-151));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(740);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isAssign();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(15);
      node3.isIf();
      // Undeclared exception!
      try { 
        node3.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      Node node0 = Node.newString(0, "Object#Element", 844, 844);
      node0.getIntProp(0);
      Node node1 = Node.newString("F[ohUC#_T\"Lx@;3y");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1889));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node1.isAssign();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(38);
      node_SideEffectFlags4.clearAllFlags();
      Node node2 = Node.newNumber((double) 4);
      Node node3 = Node.newNumber((double) 55, 33, 0);
      Node node4 = new Node(39, 50, 141);
      node4.checkTreeEqualsImpl(node2);
      node2.getQualifiedName();
      node2.isInc();
      node0.isOptionalArg();
      node0.addChildToBack(node3);
      node1.isNot();
      node1.isThrow();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = node0.cloneNode();
      node0.isString();
      node0.checkTreeEqualsImpl(node1);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.getQualifiedName();
      node2.isInstanceOf();
      node1.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = Node.newString("7j-m^O/", 5760, 5760);
      node0.isAssign();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString(32, "");
      node1.isUnscopedQualifiedName();
      Node node2 = Node.newNumber((double) 31, 54, 32);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(43, node0, (-1366), 51);
      node0.addChildrenAfter(node1, (Node) null);
      node1.isGetterDef();
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1753);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = Node.newString("a+p4H'%:LV74Q");
      node0.isIf();
      node0.getString();
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      node0.getIntProp(0);
      Node node1 = new Node(42, (-1438), 38);
      Node.newNumber((double) 125, 55, (-455));
      Node node2 = new Node(55, 38, 32);
      node2.setOptionalArg(false);
      node0.isCase();
      Node node3 = new Node(4095, node0, node2, node1);
      Node node4 = new Node(2097152, 53, 1048576);
      node1.isScript();
      node1.isVoid();
      node3.isComma();
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(39, node0, node0, node0);
      Node node2 = new Node(43, node1, (-1366), 51);
      node1.addChildrenAfter(node2, (Node) null);
      node2.isGetterDef();
      // Undeclared exception!
      try { 
        node1.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = Node.newNumber(323.68851203457916);
      node0.isNew();
      Node node1 = node0.cloneNode();
      node1.getStaticSourceFile();
      node1.children();
      node0.putIntProp(50, (-1657));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "yPB7jy~?( _AzI|#$L");
      node0.isSwitch();
      node0.isTrue();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(653);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(1175, " qP7ZO9GCtFl", 1175, 1175);
      node0.isDefaultCase();
      Node node1 = new Node(898, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isNull();
      Node node3 = null;
      try {
        node3 = new Node(8, node0, node2, node1, 30, 40);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      Node node0 = Node.newString(0, "Object#Element", 844, 844);
      node0.getIntProp(0);
      Node node1 = Node.newString("F[ohUC#_T\"Lx@;3y");
      node1.putIntProp(31, 36);
      node1.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(52);
      node_SideEffectFlags0.valueOf();
      node0.getProp((-2597));
      node1.putProp((-124), (Object) null);
      node0.isIf();
      node0.isReturn();
      node1.putIntProp((-124), 57);
      node0.hasMoreThanOneChild();
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id -124
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      Node node1 = Node.newNumber(0.0);
      Node node2 = new Node(53, node1, node0, node0, node0, (-3123), (-151));
      node2.isEquivalentToShallow(node1);
      node1.setDouble((-151));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(740);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isAssign();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(15);
      node2.useSourceInfoFromForTree(node1);
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesArguments();
      Node.newNumber((double) 2);
      Node node3 = Node.newNumber(1.0, 4, 39);
      node2.isFor();
      // Undeclared exception!
      try { 
        node3.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = Node.newString("TRUCuT");
      node0.setQuotedString();
      node0.getBooleanProp((-126));
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(2, node0, node0, node0);
      Node node2 = node0.cloneNode();
      node2.setOptionalArg(false);
      node2.isOptionalArg();
      node1.useSourceInfoFrom(node2);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node0.getQualifiedName();
      node0.isInstanceOf();
      node1.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setSourceEncodedPosition((-2859));
      node0.isDelProp();
      Node node1 = new Node(16, node0, node0, node0, 4630, (-2104));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node3 = node2.clonePropsFrom(node1);
      node3.isDec();
      ImmutableList.copyOf(jSTypeArray0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node4 = Node.newString(38, "Object#Key");
      node4.isCatch();
      node2.isTry();
      Node node5 = new Node(2, node3, node4);
      node4.checkTreeEquals(node2);
      node0.getInputId();
      node2.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags4.setMutatesArguments();
      node2.isLabel();
      node1.isInstanceOf();
      Node node6 = node1.srcref(node3);
      node6.useSourceInfoIfMissingFromForTree(node5);
      // Undeclared exception!
      try { 
        node5.addChildToBack(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node(42, (-1438), 38);
      Node node2 = Node.newNumber((double) 125, 55, (-455));
      Node node3 = new Node(55, 38, 32);
      node0.isCase();
      Node node4 = new Node(4095, node0, node3, node1);
      node4.isNumber();
      node1.isGetProp();
      node4.isArrayLit();
      node4.replaceChild(node0, node2);
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      int int0 = 1520;
      Node node0 = null;
      try {
        node0 = new Node(1520, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = new Node((-1646));
      node0.children();
      node0.getIntProp(37);
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(0, node0, node0, node0, node0, 12, 50);
      Node node2 = node1.cloneNode();
      node2.setOptionalArg(false);
      node0.isOptionalArg();
      Node node3 = node2.useSourceInfoFrom(node0);
      node3.isSyntheticBlock();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.getQualifiedName();
      node0.isInstanceOf();
      node2.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.getQualifiedName();
      Node node1 = Node.newString("", 308, 30);
      node1.isInc();
      node0.isBreak();
      node1.isCase();
      node0.isObjectLit();
      node0.isNew();
      Node node2 = node0.cloneNode();
      node2.isSyntheticBlock();
      Node node3 = Node.newString(32, "/");
      Node node4 = node1.copyInformationFromForTree(node2);
      node4.checkTreeTypeAwareEqualsImpl(node0);
      node0.isSyntheticBlock();
      node1.children();
      node0.checkTreeTypeAwareEqualsImpl(node4);
      node3.getQualifiedName();
      Node node5 = Node.newNumber((double) 54, 4, 4095);
      node5.isNull();
      node2.isComma();
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isInc();
      Node node1 = Node.newString((-338), "", (-950), 48);
      node1.siblings();
      node0.setLineno(38);
      node0.getQualifiedName();
      node1.isNot();
      Node node2 = new Node((-338), node0, node0, 46, 1);
      Node.AncestorIterable node_AncestorIterable0 = node2.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node2.isLabelName();
      Node node3 = new Node(64);
      node1.isArrayLit();
      node0.isCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node3.getAncestor(102);
      Node node4 = Node.newNumber((double) 51, 36, (-1960));
      node1.getString();
      node4.getAncestor(2252);
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-104);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-113);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)50;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newNumber(1.0);
      Node node1 = node0.cloneNode();
      node0.isString();
      node0.checkTreeEqualsImpl(node1);
      node0.children();
      node0.checkTreeEquals(node1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.addChildToBack(node0);
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = Node.newString(4095, "FALSE", 55, 53);
      node0.isIf();
      node1.removeFirstChild();
      Node node2 = new Node(38, node0);
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node2.isAssign();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(15);
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node2.srcref(node1);
      Node node3 = new Node(38, 42, 31);
      node0.isScript();
      node0.isDebugger();
      node3.isStringKey();
      node0.isAssignAdd();
      node0.isNew();
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = new Node(111, 111, (-1646));
      node0.children();
      node0.getIntProp(37);
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      node0.useSourceInfoIfMissingFrom(node1);
      Node node2 = new Node(54, node1, node0, 12, 39);
      node2.isOptionalArg();
      node2.removeFirstChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter2);
      Node.newNumber(3091.490650126216, 4095, 40);
      node2.useSourceInfoIfMissingFrom(node1);
      Node.extractLineno(86);
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = new Node((-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setVarArgs(false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("RQ");
      templateType0.isDict();
      templateType0.matchesInt32Context();
      JSType jSType0 = modificationVisitor0.caseNoType();
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isInc();
      node1.isCase();
      node1.isInc();
      node1.cloneNode();
      node1.isIn();
      node1.getIntProp(30);
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = Node.newString(0, "STRUCT", 2513, (-2069));
      node0.siblings();
      node0.setLineno(32);
      node0.getQualifiedName();
      node0.isNot();
      Node node1 = new Node(55, node0, node0, (-2470), 30);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node1.isLabelName();
      Node node2 = new Node(102);
      node2.isArrayLit();
      node0.isCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.newNumber((-1603.5028625183036), 15, 51);
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INC is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      jSTypeArray0[0] = jSType0;
      JSType jSType1 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[1] = jSType1;
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      jSType1.isDict();
      jSType1.matchesInt32Context();
      JSType jSType2 = modificationVisitor1.caseNoType();
      jSTypeArray0[2] = jSType2;
      Node node0 = new Node(0, 0, 30);
      Node node1 = new Node(0, node0, node0, node0, 16, (-425));
      node1.removeChildren();
      node1.getLineno();
      node1.setSourceFileForTesting("|M*_C{");
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      int int0 = (-151);
      int int1 = (-2167);
      Node node0 = Node.newNumber((-3252.533449852), (-151), (-2167));
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -3252.533449852 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(39, node0, node0, node0);
      Node node2 = Node.newString(40, "a+p4H'%:LV74Q", (-1570), (-1366));
      node2.setOptionalArg(false);
      node1.isOptionalArg();
      Node node3 = new Node(55, node2, node1);
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node2.isHook();
      // Undeclared exception!
      try { 
        node0.addChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = new Node((-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.setVarArgs(false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("RQ");
      templateType0.isDict();
      templateType0.matchesInt32Context();
      JSType jSType0 = modificationVisitor0.caseNoType();
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isInc();
      node1.isCase();
      node2.siblings();
      node0.getSideEffectFlags();
      node1.addChildBefore(node2, node0);
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      Node node0 = Node.newString(0, "Object#Element", 844, 844);
      node0.getIntProp(0);
      Node node1 = Node.newString("F[ohUC#_T\"Lx@;3y");
      node1.putIntProp(31, 36);
      node1.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(52);
      node_SideEffectFlags0.valueOf();
      node0.getProp((-2597));
      node1.putProp((-124), (Object) null);
      node0.isIf();
      node0.isReturn();
      node0.hasMoreThanOneChild();
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 31
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node.mergeLineCharNo((-1312), 1233);
      Node node0 = Node.newString("", 42, (-68));
      node0.isDelProp();
      node0.getAncestors();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.isSyntheticBlock();
      node0.isNew();
      Node node1 = node0.cloneNode();
      node1.children();
      Node node2 = Node.newString("");
      node2.putIntProp(1098, 29);
      node1.isSwitch();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = new Node(777, 777, 777);
      Node node1 = new Node(436, (-181), (-1646));
      Node node2 = node1.cloneNode();
      node2.children();
      node0.putIntProp((-1250), 15);
      Node node3 = new Node(29, 4095, 2592);
      node2.isScript();
      node0.isDebugger();
      Node node4 = Node.newString("H<}*uYq$waNL%");
      Node node5 = node1.useSourceInfoIfMissingFromForTree(node4);
      Node node6 = Node.newString("H<}*uYq$waNL%", 31, 12);
      node6.isOnlyModifiesThisCall();
      Node node7 = Node.newNumber((double) 46, 971, 36);
      node7.checkTreeTypeAwareEqualsImpl(node6);
      node0.isHook();
      Node node8 = new Node(2, node5, node5, node5, 98, 15);
      Node node9 = null;
      try {
        node9 = new Node(15, node8, node1, node6, 31, 1095);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = Node.newString(306654252, "SS~m7e");
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(57, node0, 51, 495);
      node1.setVarArgs(true);
      node1.getAncestors();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isEquivalentTo(node1, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getSourceFileName();
      node0.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.areAllFlagsSet();
      node1.isQualifiedName();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 306654252
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(233526, nodeArray0);
      Node node2 = new Node(57, node0, node0, 13, 38);
      node2.removeFirstChild();
      Node node3 = new Node(103, 31, 34);
      node0.isScript();
      node0.isDebugger();
      node3.isStringKey();
      node2.getLastSibling();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      Node node1 = new Node(63, 29, 1570);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node2 = Node.newNumber((-1.0), 30, 57);
      nodeArray0[6] = node0;
      nodeArray0[7] = node1;
      Node node3 = new Node(47, 57, 8);
      node0.isCase();
      node1.isNumber();
      node2.isStringKey();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node.mergeLineCharNo(777, 777);
      Node node0 = Node.newString("zcb($1[.Y", (-2405), 3183369);
      node0.isDelProp();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.isSyntheticBlock();
      Node node1 = Node.newString((-90), "zcb($1[.Y");
      // Undeclared exception!
      try { 
        node1.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = Node.newString(56, "this");
      node0.getAncestors();
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = new Node(64, (-1758), (-1758));
      Node node1 = new Node(4095, 1, 38);
      Node node2 = new Node(31, node1, node1);
      node1.children();
      node0.putIntProp(46, 29);
      Node node3 = new Node((-26), 161, (-2451));
      node1.isScript();
      node1.isDebugger();
      Node node4 = Node.newString("");
      Node node5 = node0.useSourceInfoIfMissingFromForTree(node3);
      node4.isOnlyModifiesThisCall();
      Node node6 = Node.newNumber((-1.0), 37, (-605));
      node3.checkTreeTypeAwareEqualsImpl(node6);
      node5.isHook();
      node1.isQuotedString();
      Node node7 = new Node(15, node3, node3, node3, 46, 900);
      // Undeclared exception!
      try { 
        node5.clonePropsFrom(node6);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(91, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      node2.getBooleanProp(52);
      Node node3 = new Node(51, node0, node0, node2, 0, 55);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node1.isAssign();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(50);
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = Node.newNumber((double) 2);
      Node node5 = Node.newNumber((-1402.465310149), (-3933), 1764);
      Node node6 = new Node(91, 52, 2);
      node0.checkTreeEqualsImpl(node6);
      node1.getQualifiedName();
      node3.isInc();
      node4.isOptionalArg();
      node1.addChildToBack(node4);
      node2.isNot();
      node3.isThrow();
      // Undeclared exception!
      try { 
        node5.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.checkTreeEqualsImpl(node1);
      Node.newNumber((-1.0));
      node0.getSourceOffset();
      node0.isDec();
      Node node3 = Node.newNumber((double) 53);
      node1.setString("a+p4H'%:LV74Q");
      // Undeclared exception!
      try { 
        node2.addChildAfter(node3, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = new Node(1018, 1018, (-1586));
      node0.siblings();
      node0.siblings();
      node0.getIntProp(1018);
      Node node1 = Node.newNumber(1.0);
      node0.checkTreeEqualsImpl(node1);
      node0.getBooleanProp((-1920));
      node1.isCatch();
      node1.getDirectives();
      node0.isAssignAdd();
      Node node2 = new Node(0, node0, node1);
      node1.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(2);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags2.valueOf();
      node2.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      jSTypeArray0[0] = (JSType) templateType0;
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node3.hasChild(node1);
      node1.isWhile();
      Node node4 = node2.cloneNode();
      node4.isIn();
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      int int0 = Node.MAX_COLUMN_NUMBER;
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber((double) 31);
      node0.checkTreeEqualsImpl(node3);
      node2.getBooleanProp(167);
      node3.useSourceInfoIfMissingFrom(node0);
      Node node4 = new Node(36, node2, node1, 2425, 2201);
      node4.removeFirstChild();
      Node node5 = new Node((-50), 26, 37);
      node2.isScript();
      node3.isDebugger();
      node0.isStringKey();
      node2.getLastSibling();
      Node node6 = new Node((-966), node0, 16395, 1);
      // Undeclared exception!
      try { 
        node4.addChildBefore(node5, node6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(133, 3243, 57);
      node0.isName();
      Node node2 = new Node(2, node0, node0, node0);
      node1.removeProp(103);
      Node node3 = new Node(133, node1, node2, node2, 57, 50);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node2;
      nodeArray0[1] = node3;
      nodeArray0[2] = node2;
      nodeArray0[3] = node0;
      nodeArray0[4] = node2;
      nodeArray0[5] = node3;
      nodeArray0[6] = node3;
      node3.cloneNode();
      node3.children();
      Node node4 = null;
      try {
        node4 = new Node(36, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(56, node0, node0);
      Node node2 = Node.newString(40, "a+p4H'%:LV74Q", (-1570), (-1366));
      node1.isAnd();
      Node node3 = new Node(42, 15, 8);
      node1.addChildAfter(node3, node0);
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = new Node((-50), (-50), (-50));
      Node node1 = new Node(29, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(233526, nodeArray0);
      Node node2 = node0.cloneNode();
      node2.isParamList();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(4);
      node_SideEffectFlags2.valueOf();
      node1.getProp((-268));
      node1.getProp(56);
      Object object0 = new Object();
      node0.putProp(136, object0);
      node1.isIf();
      node1.isReturn();
      node0.hasMoreThanOneChild();
      node2.isQualifiedName();
      node1.getJSType();
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      node2.isWhile();
      node3.isAdd();
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = new Node(83, 83, 87855567);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node0);
      node0.setOptionalArg(false);
      Node node1 = Node.newString("LvCFJ@\"~XF*c/uS");
      node0.isThis();
      node1.isBlock();
      CharBuffer charBuffer0 = CharBuffer.allocate(4095);
      node1.appendStringTree(charBuffer0);
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      int int0 = 154;
      Node node0 = Node.newNumber((double) 154);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      String string0 = "ERROR";
      node_FileLevelJsDocBuilder0.append("ERROR");
      String string1 = "`n5;E594Jdz";
      try { 
        node0.setString("`n5;E594Jdz");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 154.0 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000006] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = new Node(54, node1, node0, 12, 39);
      node3.removeFirstChild();
      Node node4 = new Node(92, 108, 859);
      node2.isScript();
      node2.isDebugger();
      node4.hasMoreThanOneChild();
      node3.isQualifiedName();
      Node node5 = Node.newString((-1297), "a+p4H'%:LV74Q", 147, 14);
      // Undeclared exception!
      try { 
        node5.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1297
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setSourceEncodedPosition((-2859));
      node0.isAnd();
      Node node1 = new Node(16, node0, node0, node0, 4630, (-2104));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = Node.newString(52, "Object#Key");
      node2.isDec();
      Node node3 = Node.newNumber(2712.9);
      Node node4 = new Node((-1933));
      node1.addChildrenAfter(node2, node0);
      node3.setSourceEncodedPosition((-2863));
      Node node5 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node5.putProp((-818), jSTypeRegistry0);
      node2.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node0.isLabel();
      node2.setQuotedString();
      Node node6 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node6.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = Node.newString("F|nctDon", 64, 44);
      node0.hasMoreThanOneChild();
      Node node1 = new Node(26, node0, node0, node0);
      Node node2 = node0.cloneNode();
      Node node3 = Node.newNumber(40.0, 36, 64);
      node1.setWasEmptyNode(true);
      node1.checkTreeEqualsImpl(node2);
      node3.getQualifiedName();
      node2.isInc();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      // Undeclared exception!
      try { 
        node1.getChildBefore(node4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(233526, nodeArray0);
      Node node2 = new Node(48, node0, node1, 1, 8);
      node1.children();
      node0.putIntProp(46, 29);
      node0.isGetProp();
      node0.isTrue();
      node2.setSourceEncodedPositionForTree(10);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(7);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 233526
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newString("TRUCuT");
      node0.setQuotedString();
      node0.getBooleanProp((-126));
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(2, node0, node0, node0);
      Node node2 = node0.cloneNode();
      node2.setOptionalArg(false);
      Node node3 = Node.newString("TRUCuT");
      Node node4 = null;
      try {
        node4 = new Node(49, node0, node3, node0, 46, 55);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = new Node((-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      Node.newString(662, "");
      // Undeclared exception!
      try { 
        node1.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(91, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      node2.getBooleanProp(52);
      Node node3 = new Node(2, node0, node2, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node1.isAssign();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(50);
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = Node.newNumber((double) 2);
      Node.newNumber((-1402.465310149), (-3933), 1764);
      Node node5 = new Node(91, 52, 2);
      node0.checkTreeEqualsImpl(node5);
      node1.getQualifiedName();
      node3.isInc();
      node4.isOptionalArg();
      node1.addChildToBack(node4);
      node2.isNot();
      node3.isThrow();
      Node node6 = node5.clonePropsFrom(node0);
      node6.isDelProp();
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = new Node((-261), 5, 5);
      node0.getChildCount();
      Node node1 = Node.newNumber(0.7);
      node1.getSourceOffset();
      node0.isDec();
      Node node2 = Node.newNumber((double) 56);
      try { 
        node2.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 56.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = Node.newString(0, "STRUCT", 2513, (-2069));
      node0.siblings();
      node0.setLineno(32);
      node0.getQualifiedName();
      node0.isNot();
      Node node1 = new Node(55, node0, node0, (-2470), 30);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node1.isLabelName();
      Node node2 = new Node(102);
      node2.isArrayLit();
      node0.isCase();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.getSideEffectFlags();
      node0.isRegExp();
      node2.getSourceFileName();
      node1.hasOneChild();
      node2.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(133, 3243, 57);
      node1.isEquivalentTo(node1);
      Node node2 = new Node(2, node0, node0, node0);
      node1.removeProp(119);
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.getQualifiedName();
      Node node1 = Node.newString("", 308, 30);
      node1.isInc();
      node0.isBreak();
      node1.isCase();
      node0.isObjectLit();
      node0.isNew();
      Node node2 = node0.cloneNode();
      node2.isSyntheticBlock();
      Node.newString(32, "/");
      Node node3 = node1.copyInformationFromForTree(node2);
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node0.isSyntheticBlock();
      node1.children();
      node0.getLineno();
      node3.setSourceFileForTesting((String) null);
      node0.getCharno();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = new Node(54, node1, node0, 12, 39);
      node3.removeFirstChild();
      Node node4 = new Node(48, 108, 859);
      node2.isScript();
      node2.isDebugger();
      node2.isStringKey();
      Node node5 = node0.getLastSibling();
      // Undeclared exception!
      try { 
        node3.addChildBefore(node5, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = new Node(64, (-1758), (-1758));
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(4095, 1, 38);
      node0.cloneNode();
      node1.children();
      node0.putIntProp(46, 29);
      Node node2 = new Node((-26), 161, (-2451));
      node1.isScript();
      node1.isDebugger();
      Node node3 = Node.newString("");
      node0.useSourceInfoIfMissingFromForTree(node2);
      node3.isOnlyModifiesThisCall();
      Node node4 = new Node(47, node0, node3, node0);
      node4.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      Node node0 = new Node(456, 112, 456);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("STRUCT", node0, templateType0);
      ObjectType objectType0 = enumType0.getImplicitPrototype();
      jSTypeArray0[0] = (JSType) objectType0;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSTypeArray0[1];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = new Node(21, node0, node0, node0, node1, 117, 39);
      node0.getBooleanProp(12);
      node1.hasMoreThanOneChild();
      node0.isScript();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = Node.newString(2, "is_dispatcher", 8199, 8199);
      node0.isAssignAdd();
      node0.isEmpty();
      Node node1 = Node.newNumber((double) 42, (-1), 29);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(2, node0, node0, node0, node0, 90, 1);
      node1.getBooleanProp((-882));
      node0.hasMoreThanOneChild();
      node0.isScript();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.getJsDocBuilderForNode();
      node1.isAnd();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = new Node(16, (-786), 43);
      Node node2 = Node.newNumber(1.0, 31, 119);
      Node node3 = Node.newNumber((double) 40);
      node3.checkTreeEqualsImpl(node2);
      node0.isGetterDef();
      node3.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = new Node(4655, node2, node2, 1636, 102);
      // Undeclared exception!
      try { 
        node3.replaceChild(node2, node4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      Node node1 = Node.newNumber((double) 57);
      Node node2 = Node.newNumber(0.0);
      Node node3 = new Node(53, node2, node1, node1, node0, (-3123), (-151));
      node3.isEquivalentToShallow(node2);
      node2.setDouble((-151));
      node2.checkTreeEqualsImpl(node1);
      node1.isLocalResultCall();
      node2.setVarArgs(false);
      Node node4 = Node.newString("STRUCT", 110, 941);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags((-3123));
      node_SideEffectFlags2.valueOf();
      node2.getProp((-1));
      // Undeclared exception!
      try { 
        node0.addChildBefore(node4, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.setQuotedString();
      node0.getBooleanProp((-126));
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(36, node0, node0, node0);
      Node node2 = node1.cloneNode();
      node0.setOptionalArg(false);
      node1.isOptionalArg();
      Node node3 = Node.newString("STRUCT");
      Node node4 = node2.useSourceInfoFrom(node3);
      node1.checkTreeTypeAwareEqualsImpl(node4);
      node4.getQualifiedName();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = new Node(83, 83, 87855567);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node0);
      node0.setOptionalArg(false);
      String string0 = "LvCFJ@\"~XF*c/uS";
      try { 
        node0.setString("LvCFJ@\"~XF*c/uS");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST 83 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = new Node((-1586), 53, (-1586));
      ArrayList<Node> arrayList0 = new ArrayList<Node>();
      int int0 = Node.LAST_PROP;
      Node node1 = Node.newString("LP\"kAJNx3L?A.iE7!17");
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = Node.newNumber((double) 42);
      Node node4 = new Node(4, 49, 1627);
      node2.checkTreeEqualsImpl(node4);
      node0.getProp(3741);
      node0.getBooleanProp(43);
      node1.putIntProp(54, 0);
      node3.isParamList();
      node3.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(1);
      Node.newString("");
      node0.isThis();
      node3.isBlock();
      node2.isCall();
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = new Node(64);
      node0.getQualifiedName();
      node0.isNot();
      Node node1 = new Node(2, node0, node0, 46, 48);
      node1.getQualifiedName();
      node0.isInc();
      Node node2 = new Node(12);
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node.newString("a+p4H'%:LV74Q");
      Node node1 = Node.newNumber(1.0, 31, 119);
      Node node2 = Node.newNumber((double) 40);
      node2.checkTreeEqualsImpl(node1);
      node0.isGetterDef();
      node0.addChildToFront(node1);
      node0.isNull();
      Node.extractCharno(39);
      node1.isAdd();
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 122;
      Node.extractCharno(122);
      int int1 = 125;
      int int2 = 2643;
      int int3 = 39;
      Node[] nodeArray0 = new Node[6];
      Node node0 = Node.newNumber((double) 122, 52, 83);
      nodeArray0[0] = node0;
      Node node1 = Node.newString("", 40, 47);
      nodeArray0[1] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node1, objectType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      Node node2 = enumElementType0.getRootNode();
      nodeArray0[2] = null;
      Node node3 = Node.newString("&u");
      nodeArray0[3] = node3;
      Node node4 = null;
      try {
        node4 = new Node(124, node3, node1, node3, node2, 52, 2792);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setSourceEncodedPosition((-2859));
      node0.isDelProp();
      Node node1 = new Node(16, node0, node0, node0, 4630, (-2104));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node3 = node2.clonePropsFrom(node1);
      node3.isDec();
      Node node4 = Node.newNumber(2712.9);
      Node node5 = new Node((-1933));
      node1.addChildrenAfter(node3, node0);
      node4.setSourceEncodedPosition((-2863));
      Node node6 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node6.putProp((-818), jSTypeRegistry0);
      node3.cloneNode();
      Node node7 = null;
      try {
        node7 = new Node(43, node3, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = new Node((-1));
      Node node1 = new Node(38, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(31, nodeArray0);
      Node node3 = node2.cloneNode();
      node3.children();
      node1.putIntProp(0, 2);
      Node node4 = new Node(40, node3);
      node4.isGetProp();
      node0.isTrue();
      node2.setSourceEncodedPositionForTree(105);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(16);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      // Undeclared exception!
      try { 
        node4.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(39, node0, node0, node0);
      Node node2 = Node.newString(40, "a+p4H'%:LV74Q", (-1570), (-1366));
      node2.setOptionalArg(false);
      node2.removeFirstChild();
      node1.isOptionalArg();
      Node node3 = new Node(55, node2, node1);
      node2.isCase();
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      jSTypeArray0[0] = jSType0;
      JSType jSType1 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[1] = jSType1;
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      jSType1.isDict();
      jSType1.matchesInt32Context();
      JSType jSType2 = modificationVisitor1.caseNoType();
      jSTypeArray0[2] = jSType2;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isInc();
      node0.isOr();
      node0.siblings();
      Node node1 = Node.newNumber(1883.270007391592);
      node0.addChildToFront(node1);
      node0.getLastSibling();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2682));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node3 = Node.newNumber(1957.390349506);
      node2.copyInformationFromForTree(node3);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node2.isLabel();
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber((double) 31);
      node0.checkTreeEqualsImpl(node3);
      node2.getBooleanProp(167);
      node0.isCatch();
      node1.getDirectives();
      node1.isAssignAdd();
      Node node4 = new Node(12, node3, node3);
      node3.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.newString((-3047), "oY1L[26");
      // Undeclared exception!
      try { 
        node1.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)115;
      byteArray0[3] = (byte)83;
      byteArray0[4] = (byte)42;
      byteArray0[5] = (byte) (-41);
      byteArray0[6] = (byte) (-3);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString((int) (byte) (-3), "o!A0l,A[A2b]");
      Node node1 = Node.newString(40, "o!A0l,A[A2b]", 8, 2477);
      Node node2 = Node.newString("o!A0l,A[A2b]", 32, (-645));
      node2.getJSDocInfo();
      node2.setVarArgs(false);
      Node node3 = node1.useSourceInfoFrom(node0);
      node0.getString();
      node2.isEquivalentTo(node3, false, false, true);
      node0.isOr();
      node1.getAncestors();
      node1.isHook();
      node2.getIntProp(36);
      node2.setLineno(36);
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      Node node1 = Node.newNumber((double) 57);
      Node node2 = Node.newNumber(0.0);
      Node node3 = new Node(53, node2, node1, node1, node0, (-3123), (-151));
      node3.isEquivalentToShallow(node2);
      node2.setDouble((-151));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(740);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isAssign();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.newNumber((double) 2);
      Node node4 = Node.newNumber(1.0, 4, 39);
      node3.isFor();
      // Undeclared exception!
      try { 
        node4.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      Node node1 = Node.newString("com.google.common.collect.Lists$2");
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = new Node(300, node2, node1, 2750, (-2221));
      node1.removeFirstChild();
      Node node4 = new Node(1, 57, 2127);
      node4.isScript();
      Node node5 = Node.newString("STRUCT");
      node5.isDebugger();
      node0.isStringKey();
      node3.isAssignAdd();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(39, node0, node0, node0);
      Node node2 = Node.newString(40, "a+p4H'%:LV74Q", (-1570), (-1366));
      node2.setOptionalArg(false);
      node1.isOptionalArg();
      Node node3 = new Node(55, node2, node1);
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node2.isHook();
      node3.removeChildAfter(node2);
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      Iterable<Node> iterable0 = node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2682));
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ImmutableList.of();
      node2.isAnd();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      node_NodeMismatch0.equals(iterable0);
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.setVarArgs(false);
      node0.removeChildren();
      node0.getDouble();
      Node node1 = Node.newNumber(150.7, 2048, 0);
      Node node2 = new Node(41, node1, node0, node1, node1);
      // Undeclared exception!
      try { 
        node0.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node node0 = Node.newNumber((-1241.58383));
      Node node1 = new Node(1, node0, node0, node0, node0);
      Node node2 = node0.srcrefTree(node1);
      node2.detachFromParent();
      node1.isNull();
      node1.getJSDocInfo();
      node1.getSideEffectFlags();
      node1.isEquivalentToTyped(node0);
      node1.isInc();
      node0.setDouble(39);
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = Node.newString("F|nctDon", 64, 44);
      node0.getAncestor(6);
      Node node1 = new Node(6, node0, node0, 0, 38);
      int int0 = 305;
      // Undeclared exception!
      try { 
        node1.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = new Node(54, node1, node0, 12, 39);
      node3.removeFirstChild();
      Node node4 = new Node(92, 108, 859);
      node2.isScript();
      node2.isDebugger();
      node2.isStringKey();
      node4.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      int int0 = 154;
      Node node0 = Node.newNumber((double) 154);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      String string0 = "ERROR";
      node_FileLevelJsDocBuilder0.append("ERROR");
      String string1 = "`n5;E594Jdz";
      try { 
        node0.setString("`n5;E594Jdz");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 154.0 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      int int0 = (-3637);
      Node node0 = new Node((-3637));
      String string0 = "?EiR2'";
      InputId inputId0 = new InputId("?EiR2'");
      inputId0.toString();
      inputId0.toString();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = new Node(83, 83, 87855567);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node0);
      node0.setOptionalArg(false);
      Node node1 = Node.newString("LvCFJ@\"~XF*c/uS");
      node0.isThis();
      node1.isBlock();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isNoSideEffectsCall();
      node0.getBooleanProp((-126));
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(2, node0, node0, node0);
      Node node2 = node0.cloneNode();
      Node node3 = Node.newNumber(0.0, 38, 32);
      node3.setWasEmptyNode(true);
      node2.checkTreeEqualsImpl(node3);
      node3.getQualifiedName();
      node1.isInc();
      Node[] nodeArray0 = new Node[1];
      node1.getChildBefore(node0);
      nodeArray0[0] = node1;
      Node node4 = new Node(4095, (-3637), 55);
      node4.children();
      // Undeclared exception!
      try { 
        node3.addChildAfter(node4, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("Object#Key");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node2;
      nodeArray0[3] = node2;
      Node node3 = null;
      try {
        node3 = new Node(8, nodeArray0, (-130), 16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      Node node1 = Node.newString("");
      node0.isDo();
      node0.mayMutateArguments();
      node1.getLineno();
      Node node2 = Node.newNumber(0.0, 29, 57);
      // Undeclared exception!
      try { 
        node2.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp(48);
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber((double) 31);
      node0.checkTreeEqualsImpl(node3);
      node2.getBooleanProp(167);
      node0.isCatch();
      node1.isAssignAdd();
      Node node4 = new Node(12, node3, node3);
      node3.checkTreeEquals(node4);
      node3.getInputId();
      node4.getChangeTime();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node5 = new Node((-607), node2, node1, node0, node4);
      node5.getProp((-228));
      node4.putProp(116, (Object) null);
      node0.isIf();
      node5.isReturn();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber((double) 31);
      node0.checkTreeEqualsImpl(node3);
      node2.getBooleanProp(167);
      node0.isCatch();
      node1.getDirectives();
      node1.isAssignAdd();
      Node node4 = new Node(12, node3, node3);
      node3.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(77);
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.valueOf();
      node0.isTrue();
      node2.hasChild(node0);
      node2.isWhile();
      node0.cloneNode();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = Node.newNumber((double) 31);
      node0.isExprResult();
      node1.isAdd();
      node1.isUnscopedQualifiedName();
      node1.getProp(53);
      node2.removeProp(33);
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(31, nodeArray0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      Node node2 = new Node(1435, 0, 307);
      node0.isScript();
      node2.isVoid();
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isOptionalArg();
      node0.mayMutateArguments();
      Node node1 = null;
      try {
        node1 = new Node(31, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = Node.newString((-2069), "STRUCT", 3051, (-2069));
      node0.siblings();
      node0.setLineno((-2069));
      node0.getQualifiedName();
      node0.isAdd();
      Node node1 = Node.newNumber((double) 47);
      Node node2 = new Node(2819, node0, node1, 32, 29);
      Node node3 = node1.copyInformationFromForTree(node0);
      node3.isInc();
      node0.isAssignAdd();
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2819
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = Node.newString(0, "STRUCT", 2513, (-2069));
      node0.siblings();
      node0.setLineno(32);
      node0.getQualifiedName();
      node0.isNot();
      Node node1 = new Node(55, node0, node0, (-2470), 30);
      node0.getQualifiedName();
      node0.isInc();
      node1.cloneNode();
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      node0.getBooleanProp((-126));
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(2, node0, node0, node0);
      Node node2 = node0.cloneNode();
      Node node3 = Node.newString("M");
      node3.srcrefTree(node1);
      node3.isOnlyModifiesArgumentsCall();
      node2.isInc();
      node1.isOr();
      node1.addChildToFront(node3);
      node3.getLastSibling();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = new Node((-1586), (-1586), (-1586));
      node0.siblings();
      node0.getIntProp((-2671));
      String string0 = "a+p4H'%:LV74Q";
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.checkTreeEqualsImpl(node0);
      node1.getBooleanProp(54);
      node2.putIntProp(860, 29);
      node1.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      // Undeclared exception!
      try { 
        node2.replaceChild(node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = new Node((-203));
      node0.getLength();
      Node node1 = new Node(233526, node0, node0, node0, node0, 22, (-2465));
      Node node2 = node0.clonePropsFrom(node1);
      node1.isWith();
      Node node3 = Node.newNumber((double) 2);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = Node.newNumber(812.0);
      String string0 = "bFU";
      node0.getProp(118);
      MockFile mockFile0 = new MockFile("bFU");
      mockFile0.getCanonicalFile();
      String string1 = "r&.Lr`Z3VgL9MfeV>";
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(30);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 30
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isInc();
      node0.mayMutateArguments();
      node0.getLineno();
      Node node1 = Node.newNumber((double) 31);
      Node node2 = Node.newNumber((-1668.47840302215), 2232, 8);
      node1.checkTreeEqualsImpl(node2);
      Node node3 = new Node(91, node1, node1, 47, (-1078));
      node3.isGetterDef();
      node3.srcref(node1);
      Node node4 = Node.newNumber(2073.83400369555, 1, 67);
      node3.clonePropsFrom(node4);
      node0.getStaticSourceFile();
      try { 
        node1.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 31.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(233526, nodeArray0);
      Node node2 = node0.cloneNode();
      node1.children();
      node0.putIntProp(46, 29);
      node0.isSwitch();
      node0.isTrue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(7);
      node1.getNext();
      node2.isNumber();
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(233526, nodeArray0);
      Node node2 = node0.cloneNode();
      node1.children();
      node0.putIntProp(46, 29);
      node0.isSwitch();
      node0.isTrue();
      node2.setSourceEncodedPositionForTree(10);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(7);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 233526
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isThrow();
      node0.mayMutateArguments();
      Node node1 = new Node((-1014), node0);
      node0.isWith();
      // Undeclared exception!
      try { 
        node1.setString("STRUCT");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1014
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.isIf();
      node0.isSyntheticBlock();
      Node node3 = new Node(53, node2);
      node1.getInputId();
      node3.setInputId((InputId) null);
      node1.isWith();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node2.isExprResult();
      node3.isCall();
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(31, nodeArray0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      node0.isExprResult();
      node1.isTry();
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = Node.newString("O3hEdjb!n");
      node0.toString(false, false, false);
      Node node1 = new Node(49, node0, node0);
      node1.toString();
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$FileLevelJsDocBuilder");
      node0.removeChildren();
      Node node1 = new Node(154, 36, 265);
      InputId inputId0 = new InputId("");
      node0.getAncestor(105);
      inputId0.toString();
      node0.isEquivalentTo(node1, false, false, false);
      node0.wasEmptyNode();
      inputId0.toString();
      // Undeclared exception!
      try { 
        node1.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      String string0 = "STRUCT";
      Node node0 = Node.newString("STRUCT");
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      node0.getBooleanProp((-126));
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(2, node0, node0, node0);
      Node node2 = node0.cloneNode();
      node2.setOptionalArg(false);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.isUnscopedQualifiedName();
      node2.setLineno((-126));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "s8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node.mergeLineCharNo(777, 0);
      String string0 = "zcb($1[.Y";
      Node.newString("zcb($1[.Y");
      Node node0 = new Node(40);
      node0.getSourceOffset();
      try { 
        node0.setDouble(868.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(52);
      node0.checkTreeEqualsImpl(node1);
      node1.getBooleanProp(51);
      node1.putIntProp(40, 39);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesThis();
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      Node node1 = Node.newString("", 2, 54);
      Node node2 = new Node((-865), node0, node0, node1);
      node2.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags3.valueOf();
      node0.isTrue();
      node2.hasChild(node1);
      node0.isWhile();
      Node node3 = node1.cloneNode();
      node3.setCharno(1333);
      node3.isDo();
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber((double) 31);
      node0.checkTreeEqualsImpl(node3);
      node2.getBooleanProp(167);
      node0.isCatch();
      node1.isAssignAdd();
      Node node4 = new Node(12, node3, node3);
      node3.checkTreeEquals(node4);
      node3.getInputId();
      node4.getChangeTime();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType jSType0 = null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalType((JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      jSTypeArray0[0] = jSType0;
      JSType jSType1 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[1] = jSType1;
      Node node0 = new Node(1243, 1, 3322);
      node0.isLocalResultCall();
      node0.setVarArgs(false);
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.StringType", 2, 4);
      node0.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node1.isSyntheticBlock();
      node1.isArrayLit();
      node0.isCase();
      node1.getSideEffectFlags();
      node0.isRegExp();
      node1.getSourceFileName();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      ArrayList<Node> arrayList0 = new ArrayList<Node>();
      int int0 = Node.LAST_PROP;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.valueOf();
      Node node0 = Node.newNumber((double) 3741, 57, 0);
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      jSTypeArray0[0] = jSType0;
      JSType jSType1 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[1] = jSType1;
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      jSType1.isDict();
      jSType1.matchesInt32Context();
      JSType jSType2 = modificationVisitor1.caseNoType();
      jSTypeArray0[2] = jSType2;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = Node.newNumber(1.0, 114, 32);
      Node node2 = node0.clonePropsFrom(node1);
      node2.getStaticSourceFile();
      Node node3 = Node.newString("LGt3!+&]LG\"iwm;L=J");
      node3.setString("expected one element but was: <");
      node3.getAncestors();
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      Node node0 = Node.newString("Unknown class name", 0, (-1139));
      node0.setSourceEncodedPosition(29);
      node0.isDelProp();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(30);
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isLabel();
      node0.setQuotedString();
      node0.isInstanceOf();
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node node0 = Node.newString("");
      boolean boolean0 = true;
      node0.setIsSyntheticBlock(true);
      Node node1 = null;
      Node node2 = node0.cloneTree();
      node2.getProp((-2907));
      node0.checkTreeEquals(node2);
      int int0 = 427;
      // Undeclared exception!
      try { 
        node2.replaceChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      jSTypeArray0[0] = jSType0;
      JSType jSType1 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[1] = jSType1;
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      jSType1.isDict();
      jSType1.matchesInt32Context();
      JSType jSType2 = modificationVisitor1.caseNoType();
      jSTypeArray0[2] = jSType2;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isWhile();
      node0.getAncestor(1);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(233526, nodeArray0);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.iterator();
      Node node2 = node0.cloneNode();
      node1.children();
      node0.putIntProp(46, 29);
      node0.isSwitch();
      node0.isTrue();
      node1.isInc();
      node2.isOr();
      Node node3 = Node.newString("y");
      node1.addChildToFront(node3);
      Node node4 = node1.getLastSibling();
      node0.getLastSibling();
      node4.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = new Node(118);
      node0.getLength();
      Node node1 = new Node(21, node0, node0, node0, node0, 40, 32);
      Node node2 = node0.clonePropsFrom(node1);
      node1.isDec();
      Node node3 = Node.newNumber(0.0);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(396, node0, node0, node0, node0, 36, 48);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter2);
      node1.isExprResult();
      ImmutableList.of();
      node1.putIntProp((-1), 102);
      node1.isParamList();
      node1.isFalse();
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node.mergeLineCharNo(768, 768);
      Node node0 = Node.newString("zcb($1[.Y", (-2405), 3146496);
      node0.isContinue();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.isSyntheticBlock();
      node0.isArrayLit();
      node0.isCase();
      node0.getSideEffectFlags();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(48, node0, node0, node0, node0, 4, 31);
      node1.isOptionalArg();
      node0.mayMutateArguments();
      node0.getLineno();
      Node node2 = Node.newNumber((double) 51);
      Node.newNumber(1483.4804, 148, 118);
      node1.checkTreeEqualsImpl(node0);
      node0.isGetterDef();
      node1.addChildToFront(node2);
      node2.isNull();
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = new Node((-1361), (-1361), (-1361));
      Node node1 = node0.cloneNode();
      node1.isLabelName();
      Node node2 = new Node(47, node1);
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      Node node1 = new Node(2, 25, 48);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      node1.siblings();
      node1.isOr();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node(911, node1, node0, node0);
      node2.checkTreeEqualsImpl(node1);
      node2.isHook();
      node2.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node1.isIf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = Node.newString(1, "?y", (-818), 1);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(2);
      node0.isArrayLit();
      node0.isCase();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.getSideEffectFlags();
      node1.isRegExp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[6];
      JSType jSType0 = node0.getJSType();
      jSTypeArray0[0] = null;
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      jSTypeArray0[1] = (JSType) templateType0;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("EQUOZbq2%", node1, jSType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      Node node1 = Node.newNumber((double) 57);
      Node node2 = Node.newNumber(0.0);
      Node node3 = new Node(53, node2, node1, node1, node0, (-3123), (-151));
      node3.isEquivalentToShallow(node2);
      node2.setDouble((-151));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(740);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isAssign();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.newNumber((double) 2);
      Node node4 = Node.newNumber(1.0, 4, 39);
      // Undeclared exception!
      try { 
        node4.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      Node node1 = node0.getAncestor(0);
      node0.isGetProp();
      node1.isAssignAdd();
      node0.isEmpty();
      node0.toStringTree();
      node1.isQualifiedName();
      node1.isNoSideEffectsCall();
      Node node2 = new Node(108, node0, node1, node0, node1);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node2.isHook();
      node2.hasOneChild();
      node1.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      Node node1 = Node.newNumber((double) 57);
      Node node2 = Node.newNumber(0.0);
      Node node3 = new Node(53, node2, node1, node1, node0, (-3123), (-151));
      node3.isEquivalentToShallow(node2);
      node2.setDouble((-151));
      node2.checkTreeEqualsImpl(node1);
      node1.isLocalResultCall();
      node2.setVarArgs(false);
      Node node4 = Node.newString("STRUCT", 110, 941);
      node4.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node1.isSyntheticBlock();
      node1.isArrayLit();
      node4.isCase();
      node1.getSideEffectFlags();
      node4.isRegExp();
      node4.getSourceFileName();
      node3.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      Node.mergeLineCharNo(768, 768);
      Node node0 = Node.newString("zcb($1[.Y", (-2405), 3146496);
      node0.isContinue();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.valueOf();
      node0.isTrue();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(29, nodeArray0);
      node0.hasChild(node1);
      node0.isWhile();
      Node node2 = node1.cloneNode();
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      Node node1 = new Node(21, node0, node0, node0, node0, 40, 32);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isWith();
      Node node3 = Node.newNumber(0.0);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = Node.newString(4095, "FALSE", 55, 53);
      node0.isIf();
      Node node2 = new Node(38, node0);
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node2.isAssign();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(15);
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      Node node3 = Node.newNumber((double) 0);
      Node node4 = Node.newNumber(31.0, 42, 126);
      node3.checkTreeEqualsImpl(node4);
      node1.isGetterDef();
      node4.addChildToFront(node1);
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      int int0 = 6;
      Node node0 = Node.newString("Function", 64, 44);
      node0.getAncestor(6);
      Node node1 = null;
      try {
        node1 = new Node(6, (Node) null, 1478, 50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      node0.getBooleanProp((-126));
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(2, node0, node0, node0);
      Node node2 = node0.cloneNode();
      Node node3 = Node.newNumber(0.0, 38, 32);
      node2.checkTreeEqualsImpl(node3);
      node3.getQualifiedName();
      node1.isInc();
      Node[] nodeArray0 = new Node[1];
      node1.getChildBefore(node0);
      nodeArray0[0] = node1;
      Node node4 = new Node(4, nodeArray0, 57, 2518);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      Node node1 = Node.newNumber((double) 57);
      Node node2 = Node.newNumber(0.0);
      Node node3 = new Node(53, node2, node1, node1, node0, (-3123), (-151));
      node2.setDouble((-151));
      node2.checkTreeEqualsImpl(node1);
      node1.isLocalResultCall();
      node2.setVarArgs(false);
      Node node4 = Node.newString("STRUCT", 110, 941);
      node4.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.valueOf();
      node4.isTrue();
      node0.hasChild(node1);
      node1.isWhile();
      Node node5 = node0.cloneNode();
      node5.isIn();
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isInc();
      node0.mayMutateArguments();
      node0.getLineno();
      Node node1 = Node.newNumber((double) 31);
      Node node2 = Node.newNumber((-1668.47840302215), 2232, 8);
      node1.checkTreeEqualsImpl(node2);
      Node node3 = new Node(91, node1, node1, 47, (-1078));
      node3.isGetterDef();
      Node node4 = Node.newNumber(2073.83400369555, 1, 67);
      node3.clonePropsFrom(node4);
      node0.getStaticSourceFile();
      node2.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = new Node((-1312));
      node0.isQualifiedName();
      node0.isDo();
      node0.getLastSibling();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      node0.getBooleanProp((-126));
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(2, node0, node0, node0);
      Node node2 = node0.cloneNode();
      node2.setOptionalArg(false);
      node2.isOptionalArg();
      Node node3 = node1.useSourceInfoFrom(node2);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node3.isHook();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node node0 = Node.newString("Function", 64, 44);
      node0.getAncestor(6);
      Node node1 = new Node(6, node0, node0, 0, 38);
      Node node2 = new Node(6, node1, 1478, 50);
      Node node3 = new Node(6, node2);
      node3.isLocalResultCall();
      node1.setVarArgs(false);
      node1.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.valueOf();
      node0.isTrue();
      Node.newNumber((double) 57, (-1814), (-2367));
      node2.setIsSyntheticBlock(true);
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.checkTreeEqualsImpl(node2);
      node2.getBooleanProp(167);
      node2.putIntProp(50, 0);
      node2.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(38);
      Vector<JSType> vector0 = new Vector<JSType>();
      // Undeclared exception!
      try { 
        vector0.listIterator(57);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 57
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isThrow();
      node0.mayMutateArguments();
      Node node1 = new Node((-1014), node0);
      node0.isWith();
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      Node node1 = Node.newNumber((double) 57);
      node1.putBooleanProp((-1142), false);
      Node node2 = Node.newNumber(0.0);
      Node node3 = new Node(53, node2, node1, node1, node0, (-3123), (-151));
      node2.setDouble((-151));
      node2.checkTreeEqualsImpl(node1);
      node0.isBlock();
      Node node4 = node2.cloneNode();
      node3.setOptionalArg(false);
      node4.isOptionalArg();
      Node node5 = Node.newString(154, "");
      Node node6 = node0.copyInformationFromForTree(node3);
      node4.getQualifiedName();
      node5.isInc();
      node2.isAssignAdd();
      node1.checkTreeEquals(node6);
      node5.getInputId();
      node6.getChangeTime();
      node2.getAncestors();
      node4.cloneTree();
      node0.getAncestor(30);
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node node0 = new Node(133);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(91, 3243, 57);
      Node node2 = new Node(32, node1, node1, 4095, 30);
      node2.getBooleanProp(52);
      node0.hasMoreThanOneChild();
      Node node3 = new Node(2, node0, node2, node0);
      node1.removeProp(119);
      // Undeclared exception!
      try { 
        node2.detachFromParent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      Node node1 = Node.newNumber((double) 57);
      Node node2 = Node.newNumber(0.0);
      node1.addChildToBack(node0);
      int int0 = (-151);
      Node node3 = null;
      try {
        node3 = new Node(53, node2, node1, node1, node0, (-3123), (-151));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(233526, nodeArray0);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.iterator();
      node0.cloneNode();
      node1.children();
      node0.putIntProp(46, 29);
      node0.isSwitch();
      node0.isTrue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(7);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 233526
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      String string0 = "STRUCT";
      Node node0 = Node.newString("STRUCT");
      node0.isNoSideEffectsCall();
      node0.getBooleanProp((-126));
      node0.hasMoreThanOneChild();
      Node node1 = new Node(36, (-126), 37);
      node1.removeProp(40);
      Node node2 = new Node(49, node1, node1, node1, node1, 32, 31);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber((double) 31);
      node0.checkTreeEqualsImpl(node3);
      node2.getBooleanProp(167);
      node2.putIntProp(50, 0);
      node2.isParamList();
      node3.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(38);
      node_SideEffectFlags4.valueOf();
      node1.getProp(29);
      node1.putProp(154, (Object) null);
      node2.isIf();
      node2.isReturn();
      node0.hasMoreThanOneChild();
      node2.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = new Node(133);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(52, node0, node0, node0, node0, (-1570), 0);
      Node node3 = new Node(48, node1, 16, 2975);
      Node node4 = null;
      try {
        node4 = new Node(37, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(38, node0);
      Iterable<Node> iterable0 = new Vector<Node>(1);
      node1.getIntProp(57);
      Node node2 = Node.newString("a*v 5.Mx#");
      Node node3 = new Node(124, node2, 3562, (-1719));
      Node node4 = node2.useSourceInfoIfMissingFrom(node3);
      Node node5 = Node.newNumber((-26.92060555));
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeEqualsImpl(node4);
      node2.getBooleanProp(965);
      node3.putIntProp(103, 12);
      node5.isParamList();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags3.valueOf();
      node3.getProp(49);
      node1.putProp(1, node_NodeMismatch0);
      node2.isIf();
      node5.getAncestors();
      node0.copyInformationFromForTree(node5);
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      String string0 = "STRUCT";
      Node node0 = Node.newString("STRUCT");
      Node node1 = Node.newNumber((double) 57);
      node1.putBooleanProp((-1142), false);
      Node node2 = Node.newNumber(0.0);
      Node node3 = new Node(53, node2, node1, node1, node0, (-3123), (-151));
      node2.setDouble((-151));
      node2.checkTreeEqualsImpl(node1);
      node0.isBlock();
      Node node4 = node2.cloneNode();
      try { 
        node4.setString("STRUCT");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -151.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node node0 = Node.newString("Function", 64, 44);
      node0.getAncestor(0);
      Node node1 = new Node(0, node0, node0, 0, 38);
      Node node2 = new Node(0, node1, 1478, 50);
      Node node3 = new Node(0, node2);
      node3.isLocalResultCall();
      node1.setVarArgs(false);
      node1.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.valueOf();
      node0.isTrue();
      Node.newNumber((double) 57, (-1814), (-2367));
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      Node node0 = Node.newString("", (-1312), 444);
      Node node1 = new Node(434, node0, node0, node0, node0);
      node1.useSourceInfoFrom(node0);
      node1.isHook();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node node0 = Node.newString("", (-1312), 444);
      Node node1 = new Node(434, node0, node0, node0, node0);
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      Node node0 = Node.newString(0, "R}t%.x", 0, 0);
      node0.siblings();
      Node node1 = node0.getAncestor(0);
      node1.isGetProp();
      Node node2 = new Node(42);
      node2.isEquivalentTo(node1);
      Node.newString(0, "", 4914, 1);
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      node0.setLineno(2340);
      node0.getQualifiedName();
      node0.isFromExterns();
      // Undeclared exception!
      try { 
        Node.newString(4095, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isInc();
      node0.isQualifiedName();
      node0.isObjectLit();
      Node node1 = new Node(48, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.hasChildren();
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node node0 = new Node(0);
      Node.newString(4095, "FALSE", 55, 53);
      node0.isIf();
      Node node1 = new Node(38, node0);
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node1.isAssign();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(15);
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node2 = Node.newNumber((double) 0);
      Node.newNumber((-3793.201358), 327, (-1768));
      node1.checkTreeEqualsImpl(node2);
      // Undeclared exception!
      try { 
        node1.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isInc();
      node0.isQualifiedName();
      node0.isObjectLit();
      Node node1 = Node.newString("");
      node1.getQualifiedName();
      node1.isCatch();
      node0.isAssignAdd();
      node0.checkTreeEquals(node1);
      node1.getInputId();
      node0.getChangeTime();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.getQualifiedName();
      node1.getCharno();
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      Node node1 = Node.newNumber((double) 57);
      Node node2 = Node.newNumber(0.0);
      Node node3 = new Node(53, node2, node1, node1, node0, (-3123), (-151));
      node2.setDouble((-151));
      node2.checkTreeEqualsImpl(node1);
      node0.isBlock();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList.of();
      node3.putIntProp(2573, 2);
      node1.isParamList();
      node1.isFalse();
      node0.isAnd();
      node1.putIntProp(53, 43);
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber((double) 31);
      node0.checkTreeEqualsImpl(node3);
      node0.isObjectLit();
      Node node4 = new Node((-355), node1, node1, node0);
      Node node5 = node2.cloneNode();
      node5.setOptionalArg(false);
      node0.isOptionalArg();
      Node node6 = node1.useSourceInfoFrom(node4);
      node0.checkTreeTypeAwareEqualsImpl(node4);
      node2.toString();
      Node node7 = null;
      try {
        node7 = new Node(1, node2, node1, node5, node6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isOptionalArg();
      node0.mayMutateArguments();
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(57);
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node node1 = Node.newNumber((double) 1);
      Node node2 = node0.clonePropsFrom(node1);
      node2.checkTreeEqualsImpl(node1);
      node1.checkTreeEquals(node2);
      Node node3 = new Node(55, node1, node1, node1, node1, 52, 1658);
      // Undeclared exception!
      try { 
        node2.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isInc();
      node0.isBreak();
      node0.isCase();
      node0.isObjectLit();
      node0.isNew();
      Node node1 = node0.cloneNode();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(5, nodeArray0, (-3533), 1174);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      Node node0 = new Node(142, 142, (-1646));
      node0.children();
      node0.getIntProp(37);
      Node node1 = new Node(63, 29, 1570);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node0.isSyntheticBlock();
      node1.isArrayLit();
      node1.isCase();
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node.mergeLineCharNo(768, 768);
      Node node0 = Node.newString("zcb($1[.Y", (-2405), 3146496);
      node0.isContinue();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "f,:!b258A XVJ2j";
      Node node0 = Node.newString(13, "f,:!b258A XVJ2j", 13, 1622);
      node0.isArrayLit();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.cloneNode();
      Node node1 = new Node(56, node0, node0, node0, node0, 31, (-3086));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2069));
      Node node1 = node0.getAncestor(0);
      node0.isGetProp();
      Node node2 = new Node(42);
      node1.checkTreeEquals(node0);
      Node node3 = new Node(20, node2, node1, node1, node2, 39, 57);
      Node node4 = null;
      try {
        node4 = new Node(102, node0, node2, node3, node1, 806, (-1921));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      String string0 = "OzH@R";
      Node node0 = Node.newString((-3774), "OzH@R", 0, (-3774));
      node0.isOptionalArg();
      Node node1 = new Node(1, node0, node0, node0, node0);
      node0.addChildrenToFront(node1);
      Node node2 = null;
      try {
        node2 = new Node(49, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isOptionalArg();
      node0.mayMutateArguments();
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node1 = Node.newNumber((double) 30, 113, (-1230));
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(38, node0);
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(15);
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      Node node2 = Node.newNumber((double) 42);
      Node node3 = node2.clonePropsFrom(node0);
      node2.checkTreeEqualsImpl(node1);
      node2.checkTreeEquals(node3);
      Node node4 = null;
      try {
        node4 = new Node((-552), node1, node0, node2, node3, 29, (-2470));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      node0.getBooleanProp((-126));
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(2, node0, node0, node0);
      Node node2 = node0.cloneNode();
      node2.setOptionalArg(false);
      node2.isOptionalArg();
      Node node3 = node1.useSourceInfoFrom(node2);
      Node node4 = node0.useSourceInfoFromForTree(node2);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node3;
      nodeArray0[1] = node0;
      nodeArray0[2] = node4;
      Node node5 = null;
      try {
        node5 = new Node(46, nodeArray0, 8, 47);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.siblings();
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      node0.removeFirstChild();
      nodeArray0[1] = node0;
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isDo();
      node0.isIf();
      Node node1 = new Node(46, node0);
      node0.isWith();
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.mayMutateArguments();
      node0.getLineno();
      Node.newNumber(1.0, 32, 47);
      Node node1 = Node.newString(4089, "ti+JiqO4;KL^", 29, 4);
      // Undeclared exception!
      try { 
        node1.appendStringTree((Appendable) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4089
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isInc();
      node0.isBreak();
      node0.isCase();
      node0.isObjectLit();
      node0.isNew();
      Node node1 = node0.cloneNode();
      Node node2 = Node.newString(16, "/");
      node2.copyInformationFromForTree(node1);
      node2.isSyntheticBlock();
      node0.children();
      node2.setSourceFileForTesting("");
      node2.isIf();
      node1.isNumber();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append((String) null);
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      String string0 = "?y";
      Node node0 = Node.newString(1, "?y", (-818), 1);
      node0.mayMutateGlobalStateOrThrow();
      int int0 = (-2470);
      Node node1 = new Node(31, node0, node0);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test680()  throws Throwable  {
      Node node0 = Node.newString(1, "?y", (-818), 1);
      node0.mayMutateGlobalStateOrThrow();
      node0.isQuotedString();
      node0.setLineno((-2470));
      node0.getQualifiedName();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test681()  throws Throwable  {
      String string0 = "OzH@R";
      Node node0 = Node.newString((-942), "|ABu/z", 1363, 2975);
      node0.isOptionalArg();
      Node node1 = new Node(1792, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test682()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$6", 1827, 1827);
      node0.addSuppression("originalname");
      Node node1 = new Node(1827, node0);
      node1.detachChildren();
      Node node2 = node1.cloneNode();
      node0.setOptionalArg(true);
      node1.isOptionalArg();
      Node node3 = node1.useSourceInfoFrom(node0);
      // Undeclared exception!
      try { 
        node3.replaceChild(node2, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test683()  throws Throwable  {
      String string0 = "STRUCT";
      Node node0 = Node.newString("STRUCT");
      node0.isNoSideEffectsCall();
      node0.getBooleanProp((-126));
      node0.hasMoreThanOneChild();
      Node node1 = new Node(2, node0, node0, node0);
      node1.removeProp(40);
      node0.detachFromParent();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test684()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      Node node1 = new Node(2975, node0, node0);
      Node node2 = new Node(2975, node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      node2.hasChildren();
  }

  @Test(timeout = 4000)
  public void test685()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isIf();
      Node node1 = new Node(38, node0);
      node0.isWith();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.copyInformationFromForTree(node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test686()  throws Throwable  {
      Node node0 = new Node((-2069), (-2069), (-2069));
      node0.getAncestor(0);
      Node.newNumber((double) 39, 37, 155);
      // Undeclared exception!
      try { 
        node0.appendStringTree((Appendable) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2069
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test687()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isOptionalArg();
      node0.setQuotedString();
      node0.getBooleanProp((-656));
      node0.hasMoreThanOneChild();
      node0.isScript();
      Node node1 = new Node(42, node0, node0, node0);
      Node node2 = node1.cloneNode();
      node0.setOptionalArg(false);
      node2.isOptionalArg();
      Node node3 = node0.useSourceInfoFrom(node1);
      Node node4 = null;
      try {
        node4 = new Node(12, node3, node0, node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test688()  throws Throwable  {
      Node node0 = Node.newString(1672, "");
      node0.addSuppression("");
      node0.putBooleanProp(1, true);
      Node node1 = new Node(0, node0, node0, 50, 47);
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test689()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      node0.getBooleanProp((-126));
      node0.hasMoreThanOneChild();
      node0.isObjectLit();
      Node node1 = new Node(2, node0, node0, node0);
      Node node2 = node0.cloneNode();
      node2.setOptionalArg(false);
      node2.isOptionalArg();
      Node node3 = node1.useSourceInfoFrom(node2);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      // Undeclared exception!
      try { 
        node3.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test690()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isIf();
      Node node1 = new Node(38, node0);
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(15);
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node2 = Node.newNumber((double) 0);
      Node node3 = Node.newNumber((-3793.201358), 327, (-1768));
      node1.checkTreeEqualsImpl(node2);
      node0.isGetterDef();
      node2.addChildToFront(node1);
      node3.isNull();
      node1.hasChild(node2);
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test691()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber((double) 31);
      node0.checkTreeEqualsImpl(node3);
      node2.getBooleanProp(167);
      node2.putIntProp(50, 0);
      node2.isParamList();
      node3.isFalse();
      node0.children();
      node3.putIntProp((-2746), 924);
      node1.isSwitch();
      node0.setWasEmptyNode(false);
      node1.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test692()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isInc();
      node0.isBreak();
      node0.isNumber();
      node0.isSyntheticBlock();
      node0.isNew();
      Node node1 = node0.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node1.copyInformationFrom(node0);
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.valueOf();
      node1.getProp(49);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.putProp(2530, jSDocInfo0);
      node0.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test693()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isDo();
      node0.mayMutateArguments();
      node0.getLineno();
      Node node1 = Node.newNumber((double) 36, 31, 126);
      // Undeclared exception!
      try { 
        node1.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test694()  throws Throwable  {
      Node.mergeLineCharNo(777, 777);
      Node node0 = Node.newString("zcb($1[.Y", (-2405), 3183369);
      node0.isDelProp();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.isSyntheticBlock();
      node0.isNew();
      Node node1 = node0.cloneNode();
      node0.children();
      node0.putIntProp(4095, 43);
      node1.isSwitch();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test695()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isIf();
      Node node1 = new Node(38, node0);
      node0.isWith();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test696()  throws Throwable  {
      Node node0 = Node.newString((-3774), "OzH@R", 0, (-3774));
      node0.isOptionalArg();
      Node node1 = new Node(1, node0, node0, node0, node0);
      node1.isNumber();
      node0.isObjectLit();
      node1.isNew();
      Node node2 = node0.cloneNode();
      Node node3 = Node.newString(56, "OzH@R");
      Node node4 = node0.copyInformationFromForTree(node3);
      node2.getQualifiedName();
      node4.isInc();
      node0.isAssignAdd();
      node4.checkTreeEquals(node2);
      node4.getInputId();
      node4.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test697()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isInc();
      node0.isBreak();
      node0.isNumber();
      node0.isObjectLit();
      node0.isNew();
      Node node1 = node0.cloneNode();
      Node node2 = Node.newString(16, "/");
      node2.copyInformationFromForTree(node1);
      node0.getQualifiedName();
      node1.isCatch();
      node1.isAssignAdd();
      node0.checkTreeEquals(node1);
      node2.getInputId();
      node0.getChangeTime();
      node2.getJSDocInfo();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test698()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(396, node0, node0, node0, node0, 36, 48);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      try { 
        node2.setDouble(1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test699()  throws Throwable  {
      Node node0 = Node.newString(0, "STRUCT", 2513, (-2069));
      node0.siblings();
      node0.setLineno(3029);
      node0.getQualifiedName();
      node0.isNot();
      Node node1 = new Node(55, node0, node0, (-2470), 30);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.getQualifiedName();
      node2.isInc();
      node1.isAssignAdd();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test700()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      String string0 = "a+p4H'%:LV74Q";
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber((double) 31);
      node0.checkTreeEqualsImpl(node3);
      node2.getBooleanProp(167);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-487));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node node4 = Node.newNumber((double) 1);
      Node node5 = Node.newNumber((-151.0), 52, 0);
      node5.checkTreeEqualsImpl(node2);
      node4.isGetterDef();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test701()  throws Throwable  {
      Node node0 = Node.newString(0, "R}t%.x", 1073741824, 0);
      node0.siblings();
      node0.setLineno(0);
      node0.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = Node.newNumber((double) 0);
      Node node2 = Node.newNumber(323.68851203457916, 30, 46);
      node2.checkTreeEqualsImpl(node0);
      node2.isGetterDef();
      node1.addChildToFront(node2);
      node2.isNull();
      node0.hasChild(node2);
  }

  @Test(timeout = 4000)
  public void test702()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.siblings();
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      node0.removeFirstChild();
      nodeArray0[1] = node0;
      node0.useSourceInfoFromForTree(node0);
      Node node1 = null;
      try {
        node1 = new Node((-4431), nodeArray0, 0, 98);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test703()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isOptionalArg();
      node0.setQuotedString();
      node0.getBooleanProp((-656));
      node0.hasMoreThanOneChild();
      node0.isScript();
      Node node1 = new Node(42, node0, node0, node0);
      Node node2 = node1.cloneNode();
      node0.setOptionalArg(false);
      node2.isOptionalArg();
      node0.useSourceInfoFrom(node1);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      Node node3 = null;
      try {
        node3 = new Node(2, node0, 2644, 33);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test704()  throws Throwable  {
      Node node0 = Node.newString(1672, "HZ|:q%Pz~!Qshzj");
      node0.isCase();
      node0.mayMutateArguments();
      node0.getLineno();
      Node node1 = Node.newNumber((-34.0), 50, 2);
      node1.setSourceFileForTesting("synthetic");
      StringWriter stringWriter0 = new StringWriter(127);
      // Undeclared exception!
      try { 
        node0.appendStringTree(stringWriter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1672
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test705()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isOptionalArg();
      node0.mayMutateArguments();
      node0.getLineno();
      Node node1 = new Node(11, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node0.wasEmptyNode();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.newString("Number node not created with Node.newNumber", 4, (-1));
      node0.isQualifiedName();
      node2.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test706()  throws Throwable  {
      String string0 = "R}t%.x";
      Node node0 = new Node(0);
      node0.isIf();
      Node node1 = new Node(38, node0);
      node0.isWith();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("Not declared as a constructor", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test707()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isInc();
      node0.isBreak();
      node0.isNumber();
      node0.isObjectLit();
      node0.isNew();
      Node node1 = node0.cloneNode();
      Node node2 = Node.newString(16, "/");
      node2.copyInformationFromForTree(node1);
      node0.getQualifiedName();
      node2.isInc();
      node1.isAssignAdd();
      node0.checkTreeEquals(node1);
      node2.getInputId();
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test708()  throws Throwable  {
      Node node0 = Node.newString("`Ggz_a_JL", 0, 0);
      node0.isInc();
      node0.isBreak();
      node0.isNumber();
      node0.isSyntheticBlock();
      node0.isNew();
      node0.cloneNode();
      Node node1 = new Node(2513, node0, node0, 43, (-1191));
      node1.children();
      node0.putIntProp(47, (-149));
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test709()  throws Throwable  {
      Node node0 = Node.newString(0, "R}t%.x", 1073741824, 0);
      node0.siblings();
      node0.setLineno(0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(46);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test710()  throws Throwable  {
      String string0 = "STRUCT";
      Node node0 = Node.newString("STRUCT");
      node0.isOptionalArg();
      node0.mayMutateArguments();
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test711()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node((-1584), node0, node0, node0, node0, 31, 89);
      node1.getBooleanProp(57);
      node1.hasMoreThanOneChild();
      node1.isScript();
      Node node2 = null;
      try {
        node2 = new Node(1467, node1, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test712()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.addSuppression("I3 >BUiUQGRf<");
      node0.putBooleanProp(119, true);
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test713()  throws Throwable  {
      Node node0 = Node.newString(93, "(7?  !cIz@dX9s");
      node0.setLength(93);
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test714()  throws Throwable  {
      Node node0 = Node.newString(0, "R}t%.x", 1073741824, 0);
      node0.siblings();
      node0.setLineno(0);
      node0.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = Node.newNumber((double) 0);
      node1.clonePropsFrom(node0);
      Node node2 = Node.newNumber(323.68851203457916, 30, 46);
      node2.checkTreeEqualsImpl(node0);
      node2.checkTreeEquals(node1);
      Node node3 = node0.clonePropsFrom(node2);
      node2.getStaticSourceFile();
      node3.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test715()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber((double) 31);
      node0.checkTreeEqualsImpl(node3);
      node2.getBooleanProp(167);
      node2.putIntProp(50, 0);
      node2.isParamList();
      node3.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.valueOf();
      node1.getProp(29);
      node1.putProp(154, (Object) null);
  }

  @Test(timeout = 4000)
  public void test716()  throws Throwable  {
      Node node0 = Node.newString(0, "R}t%.x", 0, 0);
      node0.siblings();
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      node0.removeFirstChild();
      nodeArray0[1] = node0;
      node0.useSourceInfoFromForTree(node0);
      Node node1 = null;
      try {
        node1 = new Node((-4430), nodeArray0, 0, 98);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test717()  throws Throwable  {
      Node.mergeLineCharNo(777, 777);
      Node node0 = Node.newString("zcb($1[.Y", (-2405), 3183369);
      node0.setSourceEncodedPosition(32);
      node0.isDelProp();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2434);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = Node.newString(62, "zcb($1[.Y");
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.getQualifiedName();
      node0.isInc();
      node2.isAssignAdd();
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 62
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test718()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      Node node1 = Node.newNumber((double) 57);
      Node node2 = Node.newNumber(0.0);
      Node node3 = new Node(53, node2, node1, node1, node0, (-3123), (-151));
      node2.setDouble((-151));
      node2.checkTreeEqualsImpl(node1);
      node0.isBlock();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList.of();
      node3.putIntProp(2573, 2);
      node1.isParamList();
      node1.isFalse();
      node0.isAnd();
      // Undeclared exception!
      try { 
        node3.replaceChild(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test719()  throws Throwable  {
      Node node0 = Node.newString("]+v", (-116), (-786));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node1 = null;
      try {
        node1 = new Node(43, node0, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test720()  throws Throwable  {
      Node node0 = Node.newString(0, "R}t%.x", 1073741824, 0);
      node0.siblings();
      node0.setLineno(0);
      node0.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = Node.newNumber((double) 0);
      Node node2 = Node.newNumber(323.68851203457916, 30, 46);
      node2.checkTreeEqualsImpl(node0);
      node2.isGetterDef();
      node1.addChildToFront(node2);
      node2.isNull();
  }

  @Test(timeout = 4000)
  public void test721()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber((double) 31);
      node3.removeFirstChild();
      Node node4 = new Node(92, 108, 859);
      node2.isScript();
      node1.checkTreeEquals(node3);
      node0.clonePropsFrom(node4);
  }

  @Test(timeout = 4000)
  public void test722()  throws Throwable  {
      String string0 = "R}t%.x";
      Node node0 = Node.newString(0, "R}t%.x", 0, 0);
      node0.siblings();
      // Undeclared exception!
      try { 
        node0.setDouble(323.68851203457916);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test723()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 0, 1193);
      Node node1 = new Node(140, node0, node0, 31, 1193);
      Node node2 = null;
      try {
        node2 = new Node(30, node0, node1, node1, node0, 54, 47);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test724()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(26);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newString((-1983), "*", 125, 47);
      Node.newString(15, "", (-1263), 2);
      Node node1 = new Node(40, (-362), (-1263));
      node1.getProp(1197);
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test725()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = Node.newString(57, "_~Yok?~D", (-1983), 29);
      node0.getProp(0);
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test726()  throws Throwable  {
      Node.newString("RU");
      // Undeclared exception!
      try { 
        Node.newString(4, (String) null, 477, 962);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test727()  throws Throwable  {
      Node.mergeLineCharNo(777, 777);
      Node node0 = Node.newString("zcb($1[.Y", (-2405), (-2682));
      node0.setSourceEncodedPosition((-2859));
      node0.isDelProp();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2434);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = Node.newString(62, "Number node not created with Node.newNumber");
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.getQualifiedName();
      node0.isInc();
      node2.isAssignAdd();
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 62
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test728()  throws Throwable  {
      Node node0 = Node.newString(1, "?y", (-818), 1);
      node0.mayMutateGlobalStateOrThrow();
      node0.removeChildren();
      node0.isOptionalArg();
      node0.getLength();
      node0.mayMutateArguments();
      node0.getLineno();
      node0.setSourceFileForTesting("?y");
  }

  @Test(timeout = 4000)
  public void test729()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(26);
      Node node0 = Node.newString(625, "", 625, 625);
      node0.getQualifiedName();
      node0.isInc();
      node0.isBreak();
      node0.isNumber();
      node0.isSyntheticBlock();
      node0.isNew();
      Node node1 = node0.cloneNode();
      node1.children();
      node1.isOnlyModifiesThisCall();
      node0.putIntProp(152, 57);
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test730()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isInc();
      node0.isBreak();
      node0.isNumber();
      node0.isOptionalArg();
      node0.isSyntheticBlock();
      node0.isNew();
      Node node1 = node0.cloneNode();
      node1.children();
      node0.setLineno(4253);
      node1.getBooleanProp(8);
      Node.newNumber((double) 37, 122, (-2682));
  }

  @Test(timeout = 4000)
  public void test731()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1586));
      node0.siblings();
      node0.getIntProp((-786));
      Node node1 = Node.newString("a+p4H'%:LV74Q");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newNumber((double) 31);
      node3.removeFirstChild();
      Node node4 = new Node(92, 108, 859);
      node2.isScript();
      node4.isVoid();
  }

  @Test(timeout = 4000)
  public void test732()  throws Throwable  {
      Node node0 = Node.newString("VALUE_MATCH", (-2682), 1675);
      Node node1 = new Node(11, node0, node0, node0);
      node1.setSourceEncodedPosition(0);
      node1.isDelProp();
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(1675);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      Node node2 = Node.newNumber((double) 54);
      node2.checkTreeEqualsImpl(node1);
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test733()  throws Throwable  {
      Node node0 = Node.newString(0, "R}t%.x", 1073741824, 0);
      node0.siblings();
      node0.setLineno(0);
      node0.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = Node.newNumber((double) 0);
      Node node2 = Node.newNumber(323.68851203457916, 30, 46);
      node2.checkTreeEqualsImpl(node0);
      node2.checkTreeEquals(node1);
      node0.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test734()  throws Throwable  {
      Node.mergeLineCharNo(777, 777);
      Node node0 = Node.newString("zcb($1[.Y", (-2405), (-2682));
      node0.setSourceEncodedPosition((-2859));
      node0.isDelProp();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2434);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(2, nodeArray0, 51, 2136);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test735()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isIf();
      Node node1 = new Node(1675);
      Node node2 = new Node(1823, node0);
      node1.isWith();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("STRUCT", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test736()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = new Node(523, 523, 523);
      Node node1 = new Node((-75));
      Node node2 = new Node(523, node0, node0, node1, 40, 7);
      JSTypeNative jSTypeNative0 = JSTypeNative.EVAL_ERROR_TYPE;
      jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node1.copyInformationFromForTree(node0);
      node0.setOptionalArg(true);
      node1.isScript();
      node2.isIf();
      Node node3 = node1.cloneNode();
      Node node4 = node3.copyInformationFrom(node0);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node3.isCase();
      node2.isQualifiedName();
      node2.getSideEffectFlags();
      node4.getJSDocInfo();
      node1.getInputId();
  }

  @Test(timeout = 4000)
  public void test737()  throws Throwable  {
      Node node0 = Node.newString(1651, "");
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      node0.getBooleanProp(1651);
      node0.hasMoreThanOneChild();
      node0.isScript();
      node0.getSideEffectFlags();
      Node node1 = new Node(51, node0, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType.cast((JSType) null);
      Node.newString("Unknown class name", (-1883), 37);
      JSType.toMaybeFunctionType((JSType) null);
      node1.isVoid();
      node1.setChangeTime(12);
      simpleErrorReporter0.error("POS", "", 2828, 53);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test738()  throws Throwable  {
      String string0 = "j~>l1|Rp'o>|.l?>Z";
      Node node0 = Node.newString((-3423), "j~>l1|Rp'o>|.l?>Z", (-3423), 103);
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test739()  throws Throwable  {
      Node node0 = Node.newString((-3774), "OzH@R", (-3774), (-3774));
      node0.isOptionalArg();
      Node node1 = new Node(1, node0, node0, node0, node0);
      Node node2 = new Node(15, 34, 54);
      node0.isScript();
      node2.setLength(101);
      node0.setLength(0);
  }

  @Test(timeout = 4000)
  public void test740()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$6", 1827, 1827);
      Node node1 = Node.newNumber(4037.798, 3456, 49);
      node1.getAncestor(83);
      node0.isGetProp();
      Node node2 = new Node(54);
      // Undeclared exception!
      try { 
        node1.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test741()  throws Throwable  {
      Node node0 = new Node(98, (-959), 560);
      Node node1 = new Node(2);
      node1.siblings();
      node1.getIntProp(1369);
      Node node2 = Node.newString("");
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      Node node4 = Node.newNumber(0.0);
      Node node5 = Node.newNumber((double) 38);
      Node node6 = new Node(47, node0, node3, node1, node4, (-4587), 30);
      node5.checkTreeEqualsImpl(node6);
      node4.isBlock();
      node1.putIntProp(42, 1244);
      node1.isParamList();
      node1.isFalse();
      node3.isAnd();
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node6);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test742()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      node0.setType((-930));
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test743()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isOptionalArg();
      node0.mayMutateArguments();
      node0.getLineno();
      Node node1 = Node.newNumber((double) 36, 130, 110);
      node1.setSourceFileForTesting("STRUCT");
      // Undeclared exception!
      try { 
        node1.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test744()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isIf();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test745()  throws Throwable  {
      Node node0 = Node.newString("source_file");
      node0.getLastSibling();
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test746()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = Node.newString(57, "_~Yok?~D", (-1983), 29);
      node0.getProp(0);
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test747()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(233526, nodeArray0);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isCase();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Set<String> set0 = jSDocInfo0.getModifies();
      node1.setDirectives(set0);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test748()  throws Throwable  {
      Node node0 = new Node(2597, 2597, (-2601));
      Node node1 = new Node(54, node0, 42, (-2601));
      node1.isEquivalentTo(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesGlobalState();
      node1.setCharno(36);
      node0.isEquivalentTo(node1);
      node1.checkTreeEqualsImpl(node0);
      node0.getQualifiedName();
      Node node2 = null;
      try {
        node2 = new Node(2597, node0, (Node) null, 56, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test749()  throws Throwable  {
      Node node0 = Node.newString(0, "R}t%.x", 1073741824, 0);
      node0.siblings();
      node0.setLineno(0);
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      node0.isFromExterns();
      node0.addChildrenToBack(node0);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test750()  throws Throwable  {
      Node.mergeLineCharNo(777, 0);
      Node node0 = Node.newString("zcb($1[.Y", (-2405), (-2682));
      node0.setSourceEncodedPosition((-2859));
      node0.isDelProp();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2434);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node1 = Node.newString((-2859), "zcb($1[.Y", 40, 4);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      Node node2 = null;
      try {
        node2 = new Node(4, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test751()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      Node.extractCharno(2900);
      int int0 = (-1826);
      int int1 = 34;
      Node[] nodeArray0 = new Node[5];
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      ObjectType objectType0 = null;
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createTemplatizedType((ObjectType) null, (Map<TemplateType, JSType>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test752()  throws Throwable  {
      String string0 = "Vp.RjA!z\"zDfUJ3aM";
      Node node0 = Node.newString("Vp.RjA!z\"zDfUJ3aM");
      node0.isNoSideEffectsCall();
      node0.getString();
      int int0 = 1073741824;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      JSType jSType0 = null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createDefaultObjectUnion((JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test753()  throws Throwable  {
      Node node0 = Node.newString(0, "R}t%.x", 1073741824, 0);
      node0.siblings();
      node0.setLineno(0);
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      node0.isFromExterns();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test754()  throws Throwable  {
      int int0 = 2597;
      Node node0 = new Node(2597, 2597, (-2601));
      Node node1 = new Node(54, node0, 42, (-2601));
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test755()  throws Throwable  {
      Node node0 = Node.newString("&f6:hUbK:1>Rr`()9", 102, 102);
      Node node1 = new Node(102, node0, node0, node0);
      node1.getQualifiedName();
      node1.isVarArgs();
      node0.mayMutateGlobalStateOrThrow();
      node0.isBreak();
      Node node2 = null;
      try {
        node2 = new Node(16, node1, node0, node0, node0, 127, 102);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test756()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getQualifiedName();
      node0.isVarArgs();
      node0.isInc();
      node0.isBreak();
      node0.isNumber();
      node0.isSyntheticBlock();
      node0.isNew();
      Node node1 = node0.cloneNode();
      node1.children();
      node1.putIntProp((-137), (-126));
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test757()  throws Throwable  {
      Node node0 = Node.newString(1672, "");
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      node0.getBooleanProp(1672);
      node0.hasMoreThanOneChild();
      node0.isScript();
      node0.getSideEffectFlags();
      Node node1 = new Node(51, node0, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType.cast((JSType) null);
      Node.newString("Unknown class name", (-1886), 37);
      JSType.toMaybeFunctionType((JSType) null);
      node1.isVoid();
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test758()  throws Throwable  {
      Node.mergeLineCharNo(777, 777);
      Node node0 = Node.newString("zcb($1[.Y", (-2405), (-2682));
      node0.setSourceEncodedPosition((-2859));
      node0.isDelProp();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2434);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node node1 = Node.newNumber((double) (-2405));
      node0.checkTreeEqualsImpl(node1);
      node1.checkTreeEquals(node0);
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test759()  throws Throwable  {
      Node node0 = Node.newString(1672, "");
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      node0.getBooleanProp(1672);
      node0.hasMoreThanOneChild();
      node0.isScript();
      node0.getSideEffectFlags();
      node0.isDelProp();
      Node node1 = new Node(8, node0, node0, (-3549), 4);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node1.isLabel();
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test760()  throws Throwable  {
      Node.extractCharno(0);
  }

  @Test(timeout = 4000)
  public void test761()  throws Throwable  {
      Node.mergeLineCharNo(777, 0);
      Node node0 = new Node(777);
      node0.setSourceEncodedPosition((-2859));
      node0.isDelProp();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2434);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isLabel();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test762()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(233526, nodeArray0);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isCase();
      Node node2 = Node.newString("J~", 401, 86);
      node2.isQualifiedName();
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test763()  throws Throwable  {
      Node node0 = Node.newString(1672, "");
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      node0.getBooleanProp(1672);
      node0.hasMoreThanOneChild();
      node0.isScript();
      Node node1 = new Node(2, node0, node0, node0);
      Node node2 = node1.cloneNode();
      node2.setOptionalArg(false);
      node2.isOptionalArg();
      node2.useSourceInfoFrom(node1);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1672
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test764()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = node0.getAncestor(0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
      try { 
        node1.appendStringTree(charArrayWriter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test765()  throws Throwable  {
      Node node0 = Node.newString("STRUCT");
      node0.isOptionalArg();
      node0.isQualifiedName();
      node0.isObjectLit();
      Node node1 = Node.newString("");
      Node node2 = new Node(43, node0, node1, (-1814), 32);
      node2.getQualifiedName();
      node1.isCatch();
      node2.isAssignAdd();
      Node node3 = null;
      try {
        node3 = new Node(29, node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test766()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 0, 1193);
      Node node1 = new Node(140, node0, node0, 31, 1193);
      Node node2 = null;
      try {
        node2 = new Node(0, node1, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test767()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$6", 1827, 1827);
      node0.addSuppression("originalname");
      Node node1 = new Node(1827, node0);
      node1.detachChildren();
      node1.removeProp(0);
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test768()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      String string0 = "";
      Node.newString("");
      JSType jSType0 = null;
      String string1 = "Error";
      JSType[] jSTypeArray0 = new JSType[7];
      jSTypeArray0[0] = null;
      jSTypeArray0[1] = null;
      jSTypeArray0[2] = null;
      jSTypeArray0[3] = null;
      jSTypeArray0[4] = null;
      jSTypeArray0[5] = null;
      jSTypeArray0[6] = null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) null, jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test769()  throws Throwable  {
      Node node0 = Node.newString(742, "Gg|,fVd0\"");
      Node node1 = new Node((-3409), node0);
      Node node2 = null;
      try {
        node2 = new Node(0, node1, node0, node0, node0, 38, 380);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test770()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(26);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber(1859.0, 0, (-2069));
      node0.getAncestor(0);
      node0.isGetProp();
      Node node1 = new Node(42);
      node0.isEquivalentTo(node1);
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test771()  throws Throwable  {
      int int0 = 2597;
      Node node0 = new Node(2597, 2597, (-2601));
      Node node1 = new Node(54, node0, 42, (-2601));
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(36);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 54
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test772()  throws Throwable  {
      Node node0 = Node.newString(3234, ")XG*g_uJpjc2r t");
      Node node1 = new Node(5688, node0);
      Node node2 = new Node((-1705), node1, 57, 54);
      node2.getLineno();
  }

  @Test(timeout = 4000)
  public void test773()  throws Throwable  {
      Node node0 = Node.newString(1672, "");
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      node0.getBooleanProp(1672);
      node0.hasMoreThanOneChild();
      node0.isScript();
      node0.getSideEffectFlags();
      Node node1 = new Node(51, node0, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        Node.newString((String) null, (-1886), 37);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test774()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(0, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test775()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node((-75));
      Node node2 = new Node(523, node0, node0, node1, 40, 7);
      JSTypeNative jSTypeNative0 = JSTypeNative.EVAL_ERROR_TYPE;
      jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      Node node3 = node1.copyInformationFromForTree(node0);
      node0.setOptionalArg(true);
      node2.mayMutateArguments();
      node2.isIf();
      Node node4 = node1.cloneNode();
      node4.copyInformationFrom(node0);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node4.isCase();
      node3.isQualifiedName();
      node2.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test776()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newNumber((double) 0, (-2877), 0);
      Node node1 = new Node(0, node0, 2207, 1367);
      Node node2 = null;
      try {
        node2 = new Node(0, node1, node1, node0, node1, 4095, 54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test777()  throws Throwable  {
      int int0 = 0;
      int int1 = (-2978);
      Node node0 = Node.newString("Function", 64, 44);
      // Undeclared exception!
      try { 
        node0.getAncestor((-2978));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test778()  throws Throwable  {
      Node node0 = Node.newString("f");
      // Undeclared exception!
      try { 
        node0.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test779()  throws Throwable  {
      Node.mergeLineCharNo(777, 0);
      Node node0 = Node.newString("zcb($1[.Y", (-2405), (-2682));
      node0.setSourceEncodedPosition((-2859));
      node0.isDelProp();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2434);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isLabel();
      node0.setQuotedString();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test780()  throws Throwable  {
      Node node0 = Node.newNumber(1737.343469238244, (-623), (-1199));
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      node0.isQuotedString();
      nodeArray0[2] = node0;
      Node node1 = null;
      try {
        node1 = new Node(57, nodeArray0, (-1795), (-1199));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test781()  throws Throwable  {
      Node node0 = Node.newString("NO_OBJECT_TYPE", 305, 2452);
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.wasEmptyNode();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Set<String> set0 = jSDocInfo0.getModifies();
      node2.setDirectives(set0);
  }

  @Test(timeout = 4000)
  public void test782()  throws Throwable  {
      Node node0 = Node.newString(1, "?y", (-818), 1);
      node0.mayMutateGlobalStateOrThrow();
      node0.removeChildren();
      node0.isOptionalArg();
      node0.mayMutateArguments();
      node0.getLineno();
      node0.setSourceFileForTesting("?y");
  }

  @Test(timeout = 4000)
  public void test783()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(2111, (Node) null, (Node) null, (Node) null, 1455, 4566);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test784()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setVarArgs(false);
      node0.removeChildren();
      Node node1 = Node.newNumber(150.7, 2048, 0);
      Node node2 = new Node(41, node1, node0, node1, node1);
      // Undeclared exception!
      try { 
        node0.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test785()  throws Throwable  {
      Node node0 = Node.newString(0, "call");
      int int0 = 0;
      String string0 = null;
      Node node1 = new Node(36, 38, 0);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test786()  throws Throwable  {
      Node node0 = Node.newString(52, "=)/S~g)N");
      node0.putIntProp(52, (-1630));
      node0.getDirectives();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INSTANCEOF =)/S~g)N [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test787()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(955, (Node) null, (Node) null, 955, (-1198));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test788()  throws Throwable  {
      Node node0 = Node.newString(0, "R}t%.x", 1073741824, 0);
      node0.siblings();
      node0.setLineno(0);
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node((-4430), nodeArray0, 0, 98);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test789()  throws Throwable  {
      Node node0 = new Node((-754));
      InputId inputId0 = new InputId((String) null);
      inputId0.toString();
      node0.setInputId(inputId0);
      Node.newString(29, "D#IJ/zB4", 37, (-833));
  }

  @Test(timeout = 4000)
  public void test790()  throws Throwable  {
      Node node0 = new Node(64, (-1758), 0);
      node0.isScript();
      assertTrue(node0.isObjectLit());
      assertEquals((-1), node0.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test791()  throws Throwable  {
      int int0 = (-233);
      Node[] nodeArray0 = new Node[3];
      Node node0 = null;
      try {
        node0 = new Node((-233), nodeArray0, 2086, 2086);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test792()  throws Throwable  {
      Node node0 = new Node(133);
      node0.cloneNode();
      Node node1 = new Node(52, node0, node0, node0, node0, (-1570), 0);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test793()  throws Throwable  {
      Node node0 = new Node((-1087), (-1087), (-1087));
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = null;
      try {
        node1 = new Node(47, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test794()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isLocalResultCall();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test795()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) jSTypeRegistry0;
      objectArray0[1] = (Object) jSTypeRegistry0;
      objectArray0[2] = (Object) simpleErrorReporter0;
      objectArray0[3] = (Object) simpleErrorReporter0;
      objectArray0[4] = (Object) simpleErrorReporter0;
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage("Object#Element", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property Object#Element
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test796()  throws Throwable  {
      int int0 = Node.extractCharno((-2072));
      assertEquals(2024, int0);
      
      Node node0 = Node.newString("el/yI=2/sH");
      Node node1 = new Node((-2213), node0, node0, node0);
      Node node2 = node1.getAncestor(47);
      assertEquals((-1), node0.getCharno());
      assertEquals((-2213), node1.getType());
      assertFalse(node1.hasMoreThanOneChild());
      assertEquals(40, node0.getType());
      assertNull(node2);
  }

  @Test(timeout = 4000)
  public void test797()  throws Throwable  {
      Node node0 = Node.newString("");
      try { 
        node0.setDouble(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }
}
