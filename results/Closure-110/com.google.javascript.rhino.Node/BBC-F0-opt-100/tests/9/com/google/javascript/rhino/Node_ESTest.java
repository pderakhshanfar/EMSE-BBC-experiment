/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 13 01:31:37 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = Node.newString(0, "", 8202, 0);
      node0.setVarArgs(true);
      boolean boolean0 = node0.isTypeOf();
      node0.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter.getMessage0("");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      JSType[] jSTypeArray0 = null;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.isEquivalentToTyped(node0);
      // Undeclared exception!
      try { 
        node0.copyInformationFrom(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags4.valueOf();
      int int0 = 130;
      node_SideEffectFlags2.setMutatesThis();
      Node node0 = Node.newString(130, "p)Sn\"t~}&&9");
      node0.isStringKey();
      node0.isDo();
      node0.isLocalResultCall();
      node0.putBooleanProp(130, false);
      node_SideEffectFlags2.setReturnsTainted();
      node0.isThis();
      node0.isOr();
      node0.checkTreeTypeAwareEqualsImpl((Node) null);
      node0.getIntProp(int0);
      // Undeclared exception!
      try { 
        node0.isTrue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      JSType jSType1 = jSTypeRegistry0.createDefaultObjectUnion(jSType0);
      jSTypeArray0[0] = jSType1;
      JSType jSType2 = jSTypeRegistry1.createDefaultObjectUnion(jSTypeArray0[0]);
      jSTypeArray0[1] = jSType2;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setOptionalArg(true);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = new Node(8388608);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int int0 = 1419;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[5];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType jSType0 = jSTypeRegistry1.getType("Object#Element");
      jSTypeArray0[0] = null;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, false, jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      JSType.toMaybeFunctionType(jSType0);
      jSTypeArray0[2] = (JSType) null;
      String string0 = "The existing child node of the parent should not be null.";
      int int1 = 0;
      Node[] nodeArray0 = new Node[8];
      Node node0 = new Node(1);
      Node node1 = new Node(1419, node0, node0, node0);
      nodeArray0[0] = node1;
      int int2 = 0;
      Node node2 = new Node(2, node0, node1, 0, 2);
      Node node3 = new Node(int2, node2, node2, node1, node0);
      nodeArray0[1] = node3;
      int int3 = 48;
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(1603);
      node0.isSyntheticBlock();
      int int0 = (-478);
      String string0 = "CharMatcher.ASCII";
      node0.setSideEffectFlags((-1280));
      Node node1 = Node.newString(string0);
      // Undeclared exception!
      try { 
        node1.isFromExterns();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1603
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesGlobalState();
      int int0 = 0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      List<JSType> list0 = null;
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) null);
      Node node1 = null;
      try {
        node1 = new Node(int0, node0, node0.SIDE_EFFECTS_ALL, node0.JSDOC_INFO_PROP);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newString(0, (String) null, 536870912, (-1072));
      node0.detachFromParent();
      node0.getString();
      int int0 = (-3130);
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-701), (-701));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-205));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node0.setSideEffectFlags(node_SideEffectFlags2);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setSideEffectFlags(7740);
      Node node1 = new Node(node0.LAST_PROP);
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = Node.newString("r9YOR_,D#\"epYzAw", 0, 117);
      JSType jSType0 = null;
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node0, (JSType) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) enumType0, (JSType) enumType0, jSType0, jSType0, jSType0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.getNext();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int int0 = 2991;
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 2991);
      nodeArray0[0] = node0;
      Node node1 = new Node(0, nodeArray0, 1, 0);
      Node node2 = new Node(0, node1, node1);
      Node node3 = new Node(2230, node2, 2841, 39);
      Node node4 = new Node(2991, node3);
      int int1 = (-1282);
      node0.setString("c[}!mv");
      int int2 = 6346;
      Node node5 = new Node(int0, node4, node1, int1, int2);
      node5.getJSType();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node node0 = Node.newNumber((-1625.767043829));
      node_SideEffectFlags2.setThrows();
      node0.isRegExp();
      node_SideEffectFlags2.clearSideEffectFlags();
      node0.isNew();
      node0.setLength((-3910));
      node0.getIntProp(0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newString("Unknown");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isBreak();
      node0.setLineno(2616);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = new Node(0, 2374, 31);
      Node node1 = new Node(33, node0, node0, 0, 1345);
      node1.addChildBefore(node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isOnlyModifiesThisCall();
      int int0 = 1334;
      node0.getBooleanProp(int0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      // Undeclared exception!
      try { 
        node0.children();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(18);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags5.setThrows();
      Node node0 = Node.newNumber(4846.13, 628, 5);
      node0.isInc();
      node0.getBooleanProp(628);
      Node node1 = Node.newString("is_constant_name", 8, 15);
      node1.setStaticSourceFile((StaticSourceFile) null);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(3569, node0, node0, node0);
      node0.isEquivalentTo(node1, true, false, true);
      node0.getIntProp((-1440));
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newNumber((-3674.1248), 1311, 35);
      node0.toString(false, false, true);
      node0.isLocalResultCall();
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(0, (Node[]) null);
      int int1 = 304;
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = Node.newString(37, "W;+", (-498), (-498));
      Node node1 = new Node(37, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isEquivalentToTyped(node0);
      node1.isHook();
      Node node3 = node1.removeChildren();
      node1.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(5066);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      Node node4 = Node.newString((String) null, 1, 30);
      node4.addChildrenAfter(node3, node2);
      node_SideEffectFlags1.setMutatesArguments();
      Appendable appendable0 = null;
      node2.addChildrenToBack(node1);
      // Undeclared exception!
      try { 
        node3.appendStringTree(appendable0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(20);
      node0.isHook();
      node0.isCase();
      node0.children();
      node0.isAssignAdd();
      node0.getStaticSourceFile();
      Node node1 = Node.newNumber((double) 39);
      node0.removeChild(node1);
      // Undeclared exception!
      try { 
        node1.getJsDocBuilderForNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = Node.newString(381, "", 897, 39);
      Node node1 = new Node(381, node0, node0, node0);
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.putIntProp(2282, 2282);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2466);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = new Node(2466);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Set<String> set0 = jSDocInfo0.getModifies();
      node0.setDirectives(set0);
      node0.putBooleanProp(2466, true);
      node0.isContinue();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType(" eptK(^{@^t2to)eva", node0, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      String string0 = "9m";
      // Undeclared exception!
      try { 
        enumElementType0.getPropertyNode(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = Node.newNumber(1987.3, 132, (-947));
      Node node1 = Node.newNumber((double) 4095, 1, 0);
      node0.srcrefTree(node1);
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = null;
      Node node1 = new Node(0, (Node) null, (Node) null, 0, 4080);
      String string0 = "kwYwDZy*R";
      int int0 = 21;
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = new Node(2601);
      node0.setWasEmptyNode(true);
      node0.removeFirstChild();
      Node node1 = new Node(2, node0, node0, 8199, 425);
      node1.setDouble(3747.1623456);
      node0.removeChild(node1);
      node0.setSideEffectFlags(node1.COLUMN_BITS);
      node0.isFromExterns();
      node1.isDelProp();
      // Undeclared exception!
      try { 
        node1.isFunction();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = (-1822);
      String string0 = null;
      // Undeclared exception!
      try { 
        Node.newString((-1822), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      int int0 = 126;
      Node node0 = new Node(126);
      Node node1 = new Node(54, node0, 50, 1720);
      node0.removeChildAfter(node1);
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(0, 1397, 1397);
      node0.toString(false, false, false);
      node0.setDouble(int0);
      Node node1 = null;
      try {
        node1 = new Node(node0.SYNTHETIC_BLOCK_PROP, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(200, 200, 200);
      node0.removeChildren();
      node0.detachFromParent();
      int int0 = 65536;
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.mayMutateGlobalStateOrThrow();
      node0.isQuotedString();
      node0.isUnscopedQualifiedName();
      node0.getSideEffectFlags();
      node0.setLength(0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      int int0 = 1514;
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString("-S6X]c&ohbD2k=HL", 27591, 54);
      Node node1 = new Node(1514, node0, node0, node0, node0);
      Node node2 = new Node(1514, node1);
      nodeArray0[0] = node2;
      Node node3 = Node.newString("", 131072, 36);
      Node node4 = Node.newString(54, "", 56, 1367);
      Node node5 = new Node((-2051), node2, node3, node3, node4);
      nodeArray0[1] = node5;
      Node node6 = Node.newString("", 3946, 43);
      nodeArray0[2] = node6;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[8];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseAllType();
      jSTypeArray0[0] = jSType0;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Node tree inequality:\nTree1:\n", node6, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getTypeOfThis();
      jSTypeArray0[1] = null;
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      JSType jSType1 = jSTypeRegistry0.createFunctionType((ObjectType) enumType1, jSTypeArray0[0], (List<JSType>) immutableList0);
      jSTypeArray0[2] = jSType1;
      JSType jSType2 = modificationVisitor0.caseNullType();
      jSTypeArray0[3] = jSType2;
      JSTypeNative jSTypeNative0 = JSTypeNative.SYNTAX_ERROR_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[4] = (JSType) objectType0;
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) enumType1, (Map<TemplateType, JSType>) hashMap0);
      jSTypeArray0[5] = (JSType) templatizedType0;
      // Undeclared exception!
      try { 
        enumElementType0.toMaybeEnumElementType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 1
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isWith();
      Node node1 = Node.newNumber(3934.77787622, (-1048), 2);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.addChildToBack(node2);
      node2.toStringTree();
      int int0 = 0;
      node2.setLineno(int0);
      // Undeclared exception!
      node2.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newString(5760, "");
      node0.setSourceEncodedPosition((-1282));
      node0.isThrow();
      node0.addChildrenToBack((Node) null);
      Node node1 = node0.getNext();
      node1.getInputId();
      node1.isVarArgs();
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.mayMutateGlobalStateOrThrow();
      node0.isQuotedString();
      node0.isUnscopedQualifiedName();
      node0.getSideEffectFlags();
      node0.setLength(0);
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString("-S6X]c&ohbD2k=HL", 27591, 54);
      Node node1 = new Node(1514, node0);
      nodeArray0[0] = node1;
      Node node2 = Node.newString("", 131072, 36);
      Node node3 = Node.newString(54, "", 56, 1367);
      Node node4 = new Node((-2051), node1, node2, node2, node3);
      nodeArray0[1] = node4;
      node3.getLength();
      Node node5 = Node.newString("", 3946, 43);
      nodeArray0[2] = node5;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[8];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseAllType();
      jSTypeArray0[0] = jSType0;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Node tree inequality:\nTree1:\n", node5, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getTypeOfThis();
      jSTypeArray0[1] = null;
      ImmutableList.copyOf(jSTypeArray0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String string0 = "direct_eval";
      Node node0 = Node.newString("direct_eval", (-701), (-701));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-205));
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.getIntProp((-701));
      node0.isTrue();
      node0.getDouble();
      node0.isReturn();
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING direct_eval is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(115);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("UnknowTn");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(46, node0, node0, 523, 48);
      node2.isBreak();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node(2601);
      node0.setWasEmptyNode(true);
      node0.removeFirstChild();
      Node node1 = Node.newNumber(1.0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((-1509), nodeArray0, (-95), 16);
      Node node3 = new Node((-95), (Node) null, node2);
      int int0 = (-306);
      int int1 = 38;
      Node node4 = new Node(int0, node1, int1, node3.DECR_FLAG);
      int int2 = 2077;
      Node node5 = null;
      try {
        node5 = new Node(int2, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newNumber((double) 3569, (-224), 54);
      node0.getSideEffectFlags();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newString("_LFmIZR!gfYB1:~JK \"");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newNumber((-720.66), 8, 8);
      node0.getJsDocBuilderForNode();
      node0.setQuotedString();
      node0.mayMutateArguments();
      int int0 = 112;
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = Node.newString(5760, "");
      node0.setSourceEncodedPosition((-1282));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      Node node1 = Node.newNumber((double) 12);
      node_SideEffectFlags0.setThrows();
      node0.isAdd();
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.isNew();
      node1.setLength(57);
      node1.getIntProp(4);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = Node.newString(1214, "", (-825), (-825));
      Node node1 = new Node(2318, 43, (-297));
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(20);
      node0.isHook();
      node0.isCase();
      node0.children();
      Node node1 = new Node((-694), node0, node0, node0, node0, 32, 1367);
      node1.mayMutateGlobalStateOrThrow();
      node0.isQuotedString();
      Node node2 = new Node(18, 46, 3041);
      node2.isUnscopedQualifiedName();
      node2.getSideEffectFlags();
      node2.setLength(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node2.isString();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.getDirectives();
      node0.removeProp(4);
      node0.mayMutateGlobalStateOrThrow();
      node0.isQuotedString();
      node0.isUnscopedQualifiedName();
      node0.getSideEffectFlags();
      node0.setLength(0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = Node.newNumber(1987.3, 132, (-947));
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.common.base.CharMatcher$RangesMatcher", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(36, node0, node0, node0);
      node1.isName();
      node1.toString(false, true, false);
      int int0 = (-5946);
      node0.getIntProp(int0);
      node1.wasEmptyNode();
      node0.addChildrenToBack(node1);
      node0.isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newString(903, "", 903, (-2665));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = Node.newNumber((-2549.0974841));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = Node.newString("K!");
      node1.siblings();
      Node node3 = Node.newString("~", 40, 2);
      node3.setChangeTime((-95));
      node3.checkTreeEqualsImpl(node1);
      node3.isFor();
      node1.isObjectLit();
      node0.getCharno();
      node2.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newNumber(1987.3, 132, (-947));
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.common.base.CharMatcher$RangesMatcher", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = Node.newString("com.google.common.base.CharMatcher$RangesMatcher", 48, 31);
      node1.isName();
      Node node2 = new Node((-3371), node0, node0);
      Node node3 = new Node(1, node1, 8, 15);
      Node node4 = new Node(8, node2);
      node0.setString("");
      int int0 = (-3068);
      Node node5 = new Node(node2.MAX_COLUMN_NUMBER, node0, node1, node4.FLAG_GLOBAL_STATE_UNMODIFIED, int0);
      node5.getJSType();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 2991);
      nodeArray0[0] = node0;
      Node node1 = new Node(52, node0, 30, 53);
      node0.toString(false, false, false);
      node1.getIntProp(16);
      node1.wasEmptyNode();
      node0.addChildrenToBack(node0);
      nodeArray0[0].isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      Vector<JSType> vector0 = null;
      try {
        vector0 = new Vector<JSType>();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-701), (-701));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-205));
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newString(37, "W;+", (-498), (-498));
      Node node1 = new Node(37, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isEquivalentToTyped(node0);
      node1.isHook();
      Node node3 = node1.removeChildren();
      node1.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(5066);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      Node node4 = Node.newString(56, "W;+", 42, 47);
      node4.addChildrenAfter(node3, node2);
      node_SideEffectFlags1.setMutatesArguments();
      Appendable appendable0 = null;
      node2.addChildrenToBack(node1);
      node3.appendStringTree(appendable0);
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-701), (-701));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(114);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags6.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags((-1258));
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node.newString("Unknown");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isBreak();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newNumber((-2549.0974841));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = Node.newString("K!");
      node1.siblings();
      Node node3 = Node.newString("~", 40, 2);
      node3.setChangeTime((-95));
      node3.checkTreeEqualsImpl(node1);
      node3.isFor();
      node1.isObjectLit();
      node0.setChangeTime(1);
      node0.isNumber();
      node2.getChildAtIndex(2138);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.mayMutateGlobalStateOrThrow();
      node0.isQuotedString();
      node0.isUnscopedQualifiedName();
      node0.getSideEffectFlags();
      node0.isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node0.srcref(node1);
      node1.isInc();
      node0.isVoid();
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node((-1509), nodeArray0, (-95), 16);
      node0.isEquivalentTo(node1, false, false, false);
      node1.isVarArgs();
      node0.getIntProp(110);
      Node.extractCharno(30);
      Node.newString(30, "N6Y=Eiui");
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = Node.newString(381, "", 897, 39);
      Node node1 = new Node((-338));
      Node node2 = new Node(57, node1);
      node2.setString(":=ZS,^jN4^YTTxs");
      int int0 = (-4068);
      Node node3 = new Node(node2.SLASH_V, node2, node2, node2.SIDE_EFFECTS_ALL, int0);
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newString(903, "", 903, (-2665));
      node0.getJsDocBuilderForNode();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-701), (-701));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1509));
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.newString("ZYicbZCiT.*-\"%W]r");
      Node node1 = Node.newNumber(0.0, 16, 54);
      node1.isTrue();
      node1.getDouble();
      node0.isReturn();
      node0.getLength();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newString(903, "", 903, (-2665));
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(98, 53, 114);
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newNumber(1987.3, 132, (-947));
      Node node1 = Node.newNumber((double) 4095, 1, 0);
      node1.setCharno(2);
      node0.srcrefTree(node1);
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = 1240;
      Node node0 = Node.newNumber(0.0, 1240, (-2869));
      Node node1 = new Node(8202, node0, node0, node0, node0, (-2869), 1);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      Node node2 = new Node(29, nodeArray0, 4095, 8);
      Node node3 = new Node(int0, node0, node0, node1, node2);
      node3.setSourceEncodedPosition(node2.COLUMN_MASK);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setReturnsTainted();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString(5760, "");
      Node node1 = Node.newString(38, "", 4, 103);
      node1.setVarArgs(true);
      boolean boolean0 = node0.isTypeOf();
      node0.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter.getMessage0("");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      JSType[] jSTypeArray0 = null;
      boolean boolean1 = false;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, boolean1);
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createOptionalParameters(jSTypeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newString("", (-2665), 42);
      Node node1 = Node.newString(43, "com.google.javascript.rhino.Node$IntPropListItem");
      Node node2 = Node.newNumber(1550.4);
      Node node3 = node2.copyInformationFrom(node0);
      node2.getIntProp(4095);
      node0.addChildAfter(node1, node3);
      Node node4 = node3.useSourceInfoFromForTree(node2);
      int int0 = (-2211);
      node1.getExistingIntProp(int0);
      int int1 = 130;
      // Undeclared exception!
      try { 
        node4.setChangeTime(int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = (-557);
      Node node0 = new Node(1236, (Node[]) null, 126, 4);
      Node node1 = new Node(int0, node0, node0, node0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = Node.newNumber(1085.998994445, 98, 3957);
      Node node1 = new Node((-95), node0, node0, node0, 85, 54);
      node1.addChildToBack(node0);
      JSTypeRegistry jSTypeRegistry0 = null;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseNoObjectType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = null;
      try {
        jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = new Node(1562);
      node0.isCase();
      node0.isAssignAdd();
      node0.getStaticSourceFile();
      Node node1 = Node.newNumber((double) 1);
      node1.removeChild(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber((double) 0);
      int int0 = 39;
      Node[] nodeArray0 = new Node[10];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      String string0 = null;
      Node node1 = Node.newString((String) null);
      nodeArray0[3] = node1;
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1240, 1240, (-2869));
      Node node1 = new Node(8202, node0, node0, node0, node0, (-2869), 1);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      Node node2 = new Node(1240, node0, node0, node1, node1);
      node2.setSourceEncodedPosition(nodeArray0[2].COLUMN_MASK);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isOnlyModifiesArgumentsCall();
      node_SideEffectFlags0.clearSideEffectFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setReturnsTainted();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node node0 = Node.newString("", 8202, 308);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(50);
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getIntProp(8202);
      node0.isTrue();
      node0.getDouble();
      node0.isReturn();
      String string0 = "k";
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  8202 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(115);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newNumber((double) 54, 116, 120);
      node0.isTrue();
      node0.getDouble();
      node0.isReturn();
      node0.getLength();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      boolean boolean0 = true;
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      Node node2 = Node.newNumber((double) 36);
      nodeArray0[4] = node2;
      nodeArray0[5] = node1;
      nodeArray0[6] = node0;
      Node node3 = new Node(303, nodeArray0, 46, (-3167));
      node3.setWasEmptyNode(boolean0);
      node3.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newNumber(1987.3, 132, (-947));
      Node node1 = Node.newNumber((double) 4095, 1, 0);
      Node node2 = new Node((-663), node0);
      String string0 = "&?`?:<bvrVq{\"";
      node2.copyInformationFrom(node0);
      node2.setString("&?`?:<bvrVq{\"");
      Node.newString(node0.NO_SIDE_EFFECTS, string0, node0.IS_NAMESPACE, node0.DIRECTIVES);
      int int0 = 10;
      int int1 = 761;
      Node node3 = new Node(node2.SLASH_V, int1, node1.FLAG_ARGUMENTS_UNMODIFIED);
      int int2 = 8202;
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 2991);
      nodeArray0[0] = node0;
      Node node1 = new Node(0, nodeArray0, 1, 0);
      Node node2 = new Node(0, node1, node1);
      Node node3 = new Node(2230, node2, 2841, 39);
      node2.setCharno(37);
      node3.srcrefTree(node1);
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 2991);
      nodeArray0[0] = node0;
      Node node1 = new Node(0, nodeArray0, 1, 0);
      Node node2 = new Node(0, node1, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2795));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setThrows();
      Node.newNumber((double) 57);
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags6.setThrows();
      node1.isAdd();
      node_SideEffectFlags5.clearSideEffectFlags();
      node1.isNew();
      node0.setLength(4095);
      node0.isFalse();
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newString(5760, "");
      node0.setSourceEncodedPosition((-1282));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = new Node(4, node0, (-1), 152);
      Node node2 = new Node(52, node0);
      String string0 = null;
      node1.setString(string0);
      Node node3 = new Node(node0.FLAG_THIS_UNMODIFIED);
      int int0 = 42;
      int int1 = (-2873);
      Node node4 = null;
      try {
        node4 = new Node(node1.MAX_COLUMN_NUMBER, node1, node3, int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newString("_LFmIZR!gfYB1:~JK \"");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node0.setWasEmptyNode(true);
      node1.getChildBefore(node0);
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("");
      nodeArray0[0] = node0;
      Node node1 = new Node(65536, nodeArray0);
      Node node2 = new Node(65536, node1, node0, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.clearSideEffectFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1240, (-2869));
      Node node1 = new Node(8202, node0, node0, node0, node0, (-2869), 1);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Fy%C`1$nxARNp,7", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      String string0 = "zg";
      Node node2 = Node.newString("zg", 40, (-1359));
      node1.isName();
      Node node3 = new Node((-1359), node2, node2);
      Node node4 = new Node(381, node2, (-1500), 16);
      Node node5 = new Node(node0.OPT_ARG_NAME, node3);
      node0.setString(string0);
      int int0 = (-1204);
      Node node6 = new Node(node1.INCRDECR_PROP, node1, nodeArray0[0], node5.COLUMN_BITS, int0);
      nodeArray0[0].getJSType();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newString(903, "", 903, (-2665));
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(86, node0, 30, 57);
      node0.copyInformationFromForTree(node1);
      node0.setString("DuZ");
      Node node2 = new Node(39, node0, node0, 34, 51);
      node2.getJSType();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = Node.newString("K!");
      node1.siblings();
      Node node3 = Node.newString("~", 40, 2);
      node3.setChangeTime((-95));
      node1.checkTreeEqualsImpl(node1);
      node3.isFor();
      node1.isObjectLit();
      node0.getCharno();
      node2.isFromExterns();
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newString(381, "", 897, 39);
      node0.getDouble();
      node0.getLength();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(339);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newNumber((double) 54, 116, 120);
      Node node1 = new Node(116, node0, node0, node0);
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newString(37, "W;+", (-498), (-498));
      Node node1 = new Node(37, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isEquivalentToTyped(node0);
      node1.isHook();
      Node node3 = node1.removeChildren();
      node3.getChangeTime();
      node1.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(5066);
      node2.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      Node node4 = Node.newString(56, "W;+", 42, 47);
      node4.addChildrenAfter(node3, node2);
      node_SideEffectFlags1.setMutatesArguments();
      node4.isInc();
      node1.isVoid();
      // Undeclared exception!
      try { 
        node0.isTypeOf();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isNE();
      node0.isQuotedString();
      node0.isUnscopedQualifiedName();
      node0.getSideEffectFlags();
      node0.isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node2 = node0.srcref(node1);
      node1.addChildrenToBack(node0);
      Node node3 = Node.newString("D;");
      node3.appendStringTree((Appendable) null);
      node2.isEquivalentToTyped(node1);
      node1.setSourceEncodedPositionForTree(node0.EMPTY_BLOCK);
      int int0 = 903;
      // Undeclared exception!
      try { 
        Node.newNumber((double) node1.DIRECT_EVAL, int0, node0.LAST_PROP);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newString(903, "", 903, (-2665));
      node0.getJsDocBuilderForNode();
      node0.srcrefTree((Node) null);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 2991);
      nodeArray0[0] = node0;
      Node node1 = new Node(0, nodeArray0, 1, 0);
      Node node2 = new Node(0, node1, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2795));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      Node node3 = new Node(53, node2, node0);
      node3.setSideEffectFlags(node_SideEffectFlags2);
      node3.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString(37, "W;+", (-498), (-498));
      Node node1 = new Node(37, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      boolean boolean0 = node2.isEquivalentToTyped(node0);
      node1.isHook();
      Node node3 = node1.removeChildren();
      node1.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(5066);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.setSideEffectFlags((Node.SideEffectFlags) null);
      node3.getBooleanProp(node2.IS_DISPATCHER);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      JSType[] jSTypeArray0 = new JSType[0];
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newString(37, "W;+", (-498), (-498));
      Node node1 = new Node(37, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isEquivalentToTyped(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node3 = Node.newString("S[RH]DA/Al9$A");
      Node.newNumber((double) 57, (-50), 30);
      node2.isTrue();
      node2.getDouble();
      node3.isReturn();
      node1.getLength();
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      boolean boolean0 = true;
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      Node node2 = Node.newNumber((double) 36);
      nodeArray0[4] = node2;
      node0.setSourceEncodedPositionForTree(50);
      nodeArray0[5] = node1;
      nodeArray0[6] = node0;
      node2.isInstanceOf();
      Node node3 = new Node(303, nodeArray0, 46, (-3167));
      node3.setWasEmptyNode(boolean0);
      node3.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 2991);
      nodeArray0[0] = node0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      String string0 = "?.";
      Node node1 = Node.newString("?.");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = new Node(52, node1, node0);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      boolean boolean0 = true;
      Node node3 = Node.newNumber((double) 30);
      Node node4 = new Node((-3167), nodeArray0, (-1625), 55);
      int int0 = 34;
      Node node5 = Node.newString(string0, int0, node3.FREE_CALL);
      // Undeclared exception!
      try { 
        node5.setWasEmptyNode(boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      int int0 = (-1156);
      Node node0 = null;
      Node node1 = new Node((-1762), (Node) null, (Node) null, (Node) null, (Node) null);
      int int1 = 982;
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-691), (-691));
      Node node1 = Node.newString("B");
      Node node2 = Node.newNumber((-3094.31), 36, (-2795));
      node1.isTrue();
      node2.getDouble();
      node1.isReturn();
      int int0 = Node.SLASH_V;
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      int int0 = 381;
      Node node0 = Node.newString(381, "", 897, 39);
      Node node1 = Node.newString("", 37, 40);
      node0.checkTreeEquals(node1);
      Node node2 = new Node(int0, node0, node0, node0);
      node2.toString();
      // Undeclared exception!
      try { 
        node2.isLabel();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 381
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node((-17));
      node0.isCase();
      node0.isAssignAdd();
      node0.getStaticSourceFile();
      Node node1 = new Node(1, node0, node0, node0, node0, 47, 57);
      Node.newNumber((-1090.0), (-373), 44);
      node1.setCharno(53);
      Node node2 = node0.srcrefTree(node1);
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = Node.newNumber((-3004.05189));
      node0.setVarArgs(true);
      node0.isOptionalArg();
      node0.isUnscopedQualifiedName();
      node0.setQuotedString();
      node0.isInc();
      // Undeclared exception!
      try { 
        node0.isSetterDef();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString(903, "", 903, (-2665));
      Node node1 = Node.newString("_LFmIZR!gfYB1:~JK \"");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node2.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node1.setVarArgs(true);
      node0.setWasEmptyNode(true);
      node1.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = Node.newString("K!");
      node1.siblings();
      Node node3 = Node.newString("~", 40, 2);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      node3.appendStringTree(stringBuffer0);
      node3.setChangeTime((-95));
      node1.checkTreeEqualsImpl(node1);
      node3.isFor();
      node1.isObjectLit();
      node0.getCharno();
      node2.isFromExterns();
      node3.isScript();
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.mayMutateGlobalStateOrThrow();
      node0.isQuotedString();
      boolean boolean0 = node0.isTry();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter.getMessage0("/L\"=x1WNrI,");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      JSType[] jSTypeArray0 = null;
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newString("Unknown");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.addChildToBack(node1);
      node1.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(339);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newNumber((double) 46, 116, 120);
      Node node1 = new Node(116, node0, node0, node0);
      node0.isLabel();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newNumber((-2549.0974841));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = Node.newString("K!");
      node1.siblings();
      Node node3 = Node.newString("~", 40, 2);
      node3.setChangeTime((-95));
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node3.checkTreeEqualsImpl(node1);
      node3.isFor();
      node1.isObjectLit();
      node0.setChangeTime(1);
      node0.isNumber();
      Node.mergeLineCharNo(154, 12);
      Node node4 = node2.getChildAtIndex(2138);
      int int0 = (-348);
      node4.getProp(int0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-691), (-691));
      Node.newString("B");
      Node node1 = Node.newNumber((-3103.4056464558885), 36, (-2795));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.getGreatestSubtypeWithProperty((JSType) null, "");
      Node node2 = Node.newString("F]Up", (-2384), 4095);
      node1.addChildToBack(node2);
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.mayMutateGlobalStateOrThrow();
      node0.isQuotedString();
      node0.isUnscopedQualifiedName();
      node0.getSideEffectFlags();
      node0.isComma();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isVoid();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-701), (-701));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-205));
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      node0.setWasEmptyNode(true);
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(20);
      node0.setSourceEncodedPosition(20);
      node0.isThrow();
      node0.addChildrenToBack((Node) null);
      Node node1 = node0.getNext();
      // Undeclared exception!
      try { 
        node1.getInputId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newString(63, "", 2199, 2515);
      Node node1 = Node.newString("%s0q", 54, 52);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(307, nodeArray0);
      node2.checkTreeEquals(node1);
      Node node3 = new Node(12, node0, node2, node2);
      node0.toString();
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = new Node(64, 2, 2);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newNumber((-619.0));
      node0.getSideEffectFlags();
      node1.useSourceInfoIfMissingFrom(node0);
      node1.getStaticSourceFile();
      Node node2 = null;
      node1.checkTreeEquals((Node) null);
      node0.siblings();
      node0.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node0.isOr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newString(38, "", 38, 38);
      node0.hasOneChild();
      node0.isVarArgs();
      Node node1 = Node.newNumber((double) 57, 51, 38);
      node1.isFromExterns();
      node0.isUnscopedQualifiedName();
      node0.isVar();
      Node node2 = node0.cloneTree();
      Node.newString((-6362), "");
      node1.hasOneChild();
      node2.removeFirstChild();
      Node.newString("");
      node0.getIntProp(54);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags6.setMutatesGlobalState();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags6.valueOf();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags3.setMutatesThis();
      String string0 = "p)Sn\"t~}&&9";
      Node node0 = Node.newString(31, "p)Sn\"t~}&&9");
      node0.isStringKey();
      node0.isDo();
      node0.isLocalResultCall();
      node0.putBooleanProp(31, false);
      node_SideEffectFlags3.setReturnsTainted();
      node0.isThis();
      node0.isOr();
      node_SideEffectFlags5.setMutatesThis();
      node0.setSideEffectFlags(node_SideEffectFlags7);
      // Undeclared exception!
      try { 
        node0.isOr();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got DELPROP
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(20);
      node0.isHook();
      node0.isCase();
      node0.children();
      Node node1 = new Node(56, node0, node0, node0, node0, 32, 1367);
      node1.mayMutateGlobalStateOrThrow();
      node0.isQuotedString();
      Node node2 = new Node(18, 46, 51);
      node2.isUnscopedQualifiedName();
      node2.getSideEffectFlags();
      node2.setLength(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node2.isString();
      node1.getCharno();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2466);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = new Node(2466);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Set<String> set0 = jSDocInfo0.getModifies();
      node0.setDirectives(set0);
      node0.putBooleanProp(2466, true);
      node0.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newNumber((double) 54, 40, 46);
      node0.isTrue();
      node0.getDouble();
      node1.isSyntheticBlock();
      node0.getLength();
      // Undeclared exception!
      try { 
        node0.isScript();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2466
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags5.valueOf();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString("T?PP0fC");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isBreak();
      node1.isQualifiedName();
      node0.setDouble(526.580666);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node0 = Node.newString("_LFmIZR!gfYB1:~JK \"");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = new Node(2601);
      node0.setWasEmptyNode(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node0.isString();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString(0, "", 8202, 0);
      node0.isTypeOf();
      node0.isUnscopedQualifiedName();
      node0.getSideEffectFlags();
      node0.setLength(102);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.setVarArgs(false);
      node0.setWasEmptyNode(false);
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newString(903, "", 903, (-2665));
      node0.getJsDocBuilderForNode();
      node0.isUnscopedQualifiedName();
      node0.isBlock();
      node0.setSourceEncodedPosition((-2665));
      node0.putIntProp(823, 2601);
      node0.isNull();
      Node node1 = new Node((-2031), node0, 1946, 56);
      node1.setOptionalArg(false);
      Node node2 = new Node(2601, node0, node1, node1, node0);
      Node node3 = node0.getChildBefore(node2);
      int int0 = 124;
      Node.extractCharno(int0);
      node3.isOptionalArg();
      node3.getJSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.clearSideEffectFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = Node.newString("K!");
      node1.siblings();
      node0.setChangeTime((-95));
      node1.checkTreeEqualsImpl(node1);
      node2.isFor();
      node1.isObjectLit();
      node2.isFromExterns();
      node0.isScript();
      node1.isVarArgs();
      node1.isParamList();
      Node.newNumber((double) 54);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = Node.newString("K!");
      node1.siblings();
      node0.setChangeTime(43);
      node1.checkTreeEqualsImpl(node1);
      node0.isNot();
      node1.isObjectLit();
      node2.isFromExterns();
      node0.isScript();
      node1.isVarArgs();
      node1.isParamList();
      Node.newNumber((double) 54);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = new Node(2466);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(1);
      node_SideEffectFlags3.setMutatesGlobalState();
      node0.isFor();
      node0.isObjectLit();
      node0.getCharno();
      node0.isFromExterns();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-701), (-701));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Set<String> set0 = jSDocInfo0.getModifies();
      node0.setDirectives(set0);
      node0.putBooleanProp((-205), true);
      node0.isContinue();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType(",URtFxnr[", node0, (JSType) null);
      enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType0.getElementsType();
      String string0 = "EVAL_ERROR_FUNCTION_TYPE";
      Node node1 = enumElementType0.getPropertyNode(string0);
      Node node2 = node1.srcrefTree(node0);
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newString(913, "", 913, 913);
      node0.getJsDocBuilderForNode();
      Node node1 = Node.newNumber(4170.766314367525, 48, 428);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.setString("");
      Node node3 = new Node(46, node1, node2, 39, 37);
      node3.getJSType();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(55, 29, 53);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isFor();
      node1.isObjectLit();
      node0.getCharno();
      node1.isFromExterns();
      node1.isSetterDef();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[4];
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.DATE_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.CHECKED_UNKNOWN_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.U2U_FUNCTION_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      node1.setJSType(jSType0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = Node.newNumber(3934.77787622, (-1048), 2);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.toStringTree();
      node2.setLineno(0);
      node0.setSideEffectFlags((-1790));
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isOnlyModifiesArgumentsCall();
      int int0 = (-1175);
      node0.removeProp(int0);
      // Undeclared exception!
      try { 
        node2.getSideEffectFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newString("Unknown");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.addChildToBack(node1);
      node1.removeChild(node0);
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags5.valueOf();
      node_SideEffectFlags4.clearSideEffectFlags();
      String string0 = "oy<[`&@z?l";
      Node node0 = Node.newString(31, "oy<[`&@z?l", 31, 127);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = new Node(31, node0, node0, node0);
      nodeArray0[3] = node1;
      Node node2 = new Node(65, nodeArray0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node_FileLevelJsDocBuilder0.append(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = new Node(42, node1, node0, node1, node1);
      node1.siblings();
      String string0 = "~";
      Node.newString(string0, node0.ORIGINALNAME_PROP, node1.FLAG_THIS_UNMODIFIED);
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2466);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = new Node(2466);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Set<String> set0 = jSDocInfo0.getModifies();
      node0.setDirectives(set0);
      node0.putBooleanProp(2466, true);
      node0.isContinue();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newNumber((-2538.620259994533), 38, 15);
      node0.useSourceInfoFrom(node1);
      EnumType enumType0 = jSTypeRegistry0.createEnumType(" eptK(^{@^t2to)eva", node0, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      String string0 = "9m";
      Node node2 = enumElementType0.getPropertyNode(string0);
      node0.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node((-1509), nodeArray0, (-95), 16);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("y;WB2(E+dz");
      node0.getQualifiedName();
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newNumber((-2549.0974841));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = Node.newString("K!");
      node1.siblings();
      Node node3 = Node.newString("~", 40, 2);
      Node node4 = Node.newString("", 4041, 16);
      node1.isName();
      Node node5 = new Node(4, node4, node1, node4, 49, 46);
      Node node6 = new Node(51, node3, 1165, 98);
      Node node7 = new Node(37, node2);
      node4.setString((String) null);
      int int0 = (-1278);
      int int1 = (-545);
      Node node8 = new Node(node2.QUOTED_PROP, node2, node0, int0, int1);
      node5.getJSType();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newString("YLL`ncu;SzK?CEE)9");
      node0.getIntProp(306654252);
      node0.setType(1448);
      int int0 = 2096;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[9];
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeArray0);
      jSTypeArray0[0] = jSType0;
      String string0 = "synthetic";
      int int1 = 152;
      Node node1 = null;
      try {
        node1 = new Node(node0.IS_NAMESPACE, node0, node0, int1, node0.REFLECTED_OBJECT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.UnionTypeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newNumber((-737.31215), (-3939), 131072);
      Node node1 = new Node((-3939), node0, node0, node0, node0);
      InputId inputId0 = new InputId("Function");
      node1.setInputId(inputId0);
      node1.getExistingIntProp((-42));
      node1.isOnlyModifiesArgumentsCall();
      node1.cloneTree();
      node1.isBreak();
      node0.isQuotedString();
      // Undeclared exception!
      try { 
        node0.isSyntheticBlock();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -42
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(20);
      node0.isCase();
      node0.children();
      Node node1 = new Node((-694), node0, node0, node0, node0, 32, 1367);
      node1.mayMutateGlobalStateOrThrow();
      node0.isQuotedString();
      Node node2 = new Node(18, 46, 3041);
      node2.isBlock();
      node2.getSideEffectFlags();
      node2.setLength(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node2.isString();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(49, node0, node0, 2, 4095);
      Node node2 = Node.newString("K!");
      node1.siblings();
      Node node3 = Node.newString("~", 40, 2);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      node3.appendStringTree(stringBuffer0);
      node3.setChangeTime((-91));
      node1.checkTreeEqualsImpl(node1);
      node3.isFor();
      node1.isObjectLit();
      node0.getCharno();
      node2.isFromExterns();
      node3.isScript();
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = new Node(30, node1, node0, node1, 29, 43);
      node1.siblings();
      String string0 = "~";
      Node.newString(string0, node0.ORIGINALNAME_PROP, node1.FLAG_THIS_UNMODIFIED);
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(55, 29, 53);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isFor();
      node1.isObjectLit();
      node0.getCharno();
      node1.isFromExterns();
      node1.isSetterDef();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[4];
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.DATE_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.CHECKED_UNKNOWN_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.U2U_FUNCTION_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      node1.setJSType(jSType0);
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isWith();
      Node node1 = Node.newNumber(3934.77787622, (-1048), 2);
      node0.getAncestor((-4303));
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.addChildToBack(node2);
      node2.toStringTree();
      int int0 = 0;
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-947));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags7.clearSideEffectFlags();
      node_SideEffectFlags8.clearSideEffectFlags();
      Node node0 = Node.newString("T?PP0fC");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(1161, 49, 1);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node1.isBreak();
      node0.isQualifiedName();
      node0.setDouble((-2087.89132363));
      node2.isCase();
      node0.getChildAtIndex(node2.SYNTHETIC_BLOCK_PROP);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = Node.newString("K!");
      node0.getBooleanProp(111);
      node0.isAdd();
      node0.isAssignAdd();
      node0.isInc();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = new Node((-4303));
      Node node1 = node0.getAncestor(8388608);
      Node node2 = node0.copyInformationFromForTree((Node) null);
      node1.addChildToBack(node2);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-701), (-701));
      node0.children();
      Node node1 = new Node(148, node0, node0, node0, node0, 55, 39);
      node0.mayMutateGlobalStateOrThrow();
      node1.isQuotedString();
      Node node2 = new Node((-1225), 297, 57);
      node0.isBlock();
      Node node3 = new Node(3080, node0, node0, node2);
      node3.getSideEffectFlags();
      int int0 = 3036;
      int int1 = (-3470);
      Node node4 = new Node(int0, node1.COLUMN_BITS, int1);
      int int2 = 26;
      node4.setLength(int2);
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(85, "", 85, 85);
      node0.isCase();
      node0.isAssignAdd();
      node0.getStaticSourceFile();
      Node node1 = Node.newNumber((-2538.620259994533));
      node1.getJSDocInfo();
      node0.removeChild(node1);
      node_SideEffectFlags0.clearSideEffectFlags();
      String string0 = null;
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node0 = Node.newString("");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.getStaticSourceFile();
      Node node2 = new Node(30, node0, node1, node1, 29, (-174));
      node2.setStaticSourceFile((StaticSourceFile) null);
      Node.newNumber((-314.803));
      node2.setSourceEncodedPositionForTree(2);
      node2.isInstanceOf();
      node0.putIntProp(49, 3646);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isBreak();
      node1.isFalse();
      node1.isEquivalentToShallow(node0);
      node0.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString((-801), "6S");
      node0.isQuotedString();
      node0.isTry();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = null;
      Node node1 = jSTypeRegistry0.createOptionalParameters((JSType[]) null);
      Node node2 = new Node(node0.FLAG_THIS_UNMODIFIED);
      // Undeclared exception!
      try { 
        node2.isEquivalentToTyped(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = Node.newString("c", 7740, 7740);
      Node node1 = new Node(7740, node0, node0, node0);
      node1.getAncestor(1156);
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newString("direct_eval");
      node0.detachChildren();
      int int0 = Node.ORIGINALNAME_PROP;
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.mayMutateGlobalStateOrThrow();
      node0.isQuotedString();
      node0.isUnscopedQualifiedName();
      node0.getSideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("NULL_TYPE");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("1$p.$wD*}jK2.fN");
      node0.getQualifiedName();
      node0.clonePropsFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node.newNumber(1.0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-1509), nodeArray0, (-95), 16);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node0.srcref(node1);
      node1.isInc();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newString(903, "", 903, (-2665));
      Node node1 = Node.newString(54, "");
      node0.isLabel();
      Node.newNumber((double) 43);
      node0.isOr();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder1.append("_.G7Ov,>");
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newString(0, "", 8202, 0);
      node0.isTypeOf();
      node0.setOptionalArg(false);
      node0.isUnscopedQualifiedName();
      node0.getSideEffectFlags();
      node0.setLength(102);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = Node.newString(102, "");
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-701));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags5.setThrows();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags9 = node_SideEffectFlags7.setMutatesThis();
      node_SideEffectFlags9.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags10 = node_SideEffectFlags7.setMutatesArguments();
      node_SideEffectFlags10.clearSideEffectFlags();
      node_SideEffectFlags8.valueOf();
      node_SideEffectFlags2.setMutatesThis();
      Node node0 = Node.newString(31, "p)Sn\"t~}&&9");
      node0.isStringKey();
      node0.isDo();
      Node node1 = Node.newString(0, "direct_eval", 53, 52);
      node1.isLocalResultCall();
      node0.putBooleanProp((-1891), true);
      Node.SideEffectFlags node_SideEffectFlags11 = node_SideEffectFlags5.setReturnsTainted();
      node1.isThis();
      node1.isOr();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node_SideEffectFlags6.setMutatesThis();
      node1.setSideEffectFlags(node_SideEffectFlags11);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newString(38, "", 38, 38);
      node0.hasOneChild();
      node0.isVarArgs();
      Node node1 = Node.newNumber((double) 57, 51, 38);
      node1.getInputId();
      node1.setInputId((InputId) null);
      node0.getExistingIntProp(29);
      node1.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        node0.cloneTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 29
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = Node.newString("K!");
      node1.siblings();
      node1.checkTreeEqualsImpl(node1);
      node0.isNot();
      node1.isObjectLit();
      node2.isQuotedString();
      node1.isSyntheticBlock();
      node0.detachFromParent();
      node2.isCatch();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      Node node0 = new Node(152, (-557), 49);
      Node node1 = Node.newNumber((-1.0));
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isOnlyModifiesThisCall();
      node0.setChangeTime(110);
      node1.checkTreeEqualsImpl(node0);
      node0.isFor();
      node0.isObjectLit();
      node0.getCharno();
      node0.isFromExterns();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = Node.newString("K!");
      node1.siblings();
      node0.setChangeTime(43);
      node1.checkTreeEqualsImpl(node1);
      node0.isGetProp();
      node0.isSyntheticBlock();
      node1.isObjectLit();
      node2.isFromExterns();
      node0.isScript();
      node1.isVarArgs();
      node1.isParamList();
      Node.newNumber((double) 54);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 0, 0);
      Node node1 = new Node(0, node0, 4, 111);
      node1.siblings();
      node0.setChangeTime(43);
      node1.checkTreeEqualsImpl(node1);
      node0.isNot();
      node1.isObjectLit();
      node0.isScript();
      node1.isVarArgs();
      node1.isParamList();
      Node.newNumber((double) 54);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      int int0 = 262144;
      Node node0 = Node.newString(262144, ".DS.?\"c%>pcw:-jRZm");
      int int1 = 4095;
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.toString();
      Node node1 = null;
      try {
        node1 = new Node(int0, node0, node0, node0.ORIGINALNAME_PROP, int1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 262144
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = Node.newString("K!");
      node0.setChangeTime(111);
      node0.checkTreeEqualsImpl((Node) null);
      node0.isFor();
      node0.isObjectLit();
      // Undeclared exception!
      try { 
        node0.getCharno();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newString(38, "", 38, 38);
      boolean boolean0 = node0.hasOneChild();
      node0.isVarArgs();
      Node node1 = Node.newNumber((double) 57, 51, 38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesThis();
      Node node2 = Node.newString(8, "/PVU6MXLJiOw' Ea>,");
      node2.isStringKey();
      node1.isDo();
      node1.isLocalResultCall();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node1;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node3 = new Node(32, nodeArray0);
      Node node4 = new Node(node1.NO_SIDE_EFFECTS, node3, nodeArray0[5], node1, node1);
      int int0 = 749;
      // Undeclared exception!
      try { 
        node4.putBooleanProp(int0, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = Node.newString(211, "V>vPEVUG}d+M:");
      node0.isFromExterns();
      node0.isUnscopedQualifiedName();
      node0.isVar();
      node0.cloneTree();
      Node.newString((-2870), "V>vPEVUG}d+M:");
      Node node1 = Node.newString("");
      node1.getIntProp(130);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.mayMutateGlobalStateOrThrow();
      node0.isAnd();
      node0.isTry();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createOptionalParameters((JSType[]) null);
      Node.newString(jSTypeRegistry0.OBJECT_ELEMENT_TEMPLATE);
      // Undeclared exception!
      try { 
        node1.detachChildren();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node(46, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = Node.newString(0, "", 8202, 0);
      node0.isTypeOf();
      node0.setSourceFileForTesting("FUNCTION_INSTANCE_TYPE");
      node0.setOptionalArg(false);
      node0.isUnscopedQualifiedName();
      node0.getSideEffectFlags();
      node0.setLength(102);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = Node.newString(102, "");
      node1.getStaticSourceFile();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newString(0, "", 8202, 0);
      node0.isTypeOf();
      node0.setOptionalArg(false);
      node0.isUnscopedQualifiedName();
      node0.getSideEffectFlags();
      node0.setLength(102);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.newString("");
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = Node.newString(102, "");
      node1.isCall();
      node1.isDelProp();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[5];
      JSType jSType0 = null;
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber(2232.742);
      nodeArray0[0] = node0;
      Node node1 = new Node(9, nodeArray0, 38, 4);
      Node node2 = new Node(9, node1, (-628), (-1002));
      Node node3 = new Node(9, node2, node1, node2, node0, 2754, 8);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, node3);
      jSTypeArray0[0] = (JSType) functionType0;
      JSType jSType1 = jSTypeRegistry0.createUnionType(jSTypeArray0);
      jSTypeArray0[1] = jSType1;
      FunctionType functionType1 = jSTypeRegistry0.createConstructorType((JSType) functionType0, jSTypeArray0);
      jSTypeArray0[2] = (JSType) functionType1;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createObjectType((ObjectType) functionType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(0, node0, 4, 111);
      node1.isVarArgs();
      Node node2 = Node.newNumber((double) 31, 57, 37);
      node0.isFromExterns();
      node0.isUnscopedQualifiedName();
      node1.isVar();
      node2.cloneTree();
      Node node3 = Node.newString((-1609), "FOR");
      Node.mergeLineCharNo(4, (-1924));
      Node node4 = node1.getChildAtIndex(57);
      int int0 = (-1279);
      node4.getIntProp(int0);
      int int1 = (-318);
      node3.getProp(int1);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newString(0, "", 8202, 0);
      node0.isTypeOf();
      node0.setOptionalArg(false);
      node0.getSideEffectFlags();
      node0.setLength(102);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.newString("");
      node_SideEffectFlags0.setMutatesThis();
      node0.isCall();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-701));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags2.setMutatesThis();
      Node node0 = Node.newString(2853, "");
      node0.isStringKey();
      node0.isDo();
      node0.isLocalResultCall();
      Node node1 = new Node(1, 91, 790);
      node1.putBooleanProp(106, false);
      node_SideEffectFlags2.setReturnsTainted();
      node1.isThis();
      Node node2 = new Node(2, node0, node1, 57, 48);
      node0.isOr();
      node1.setSourceEncodedPositionForTree((-2957));
      node1.isInstanceOf();
      node0.putIntProp(36, (-3455));
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-701), 27591);
      Node node1 = new Node(57, node0, node0, node0, node0);
      Node node2 = new Node(4095, node1, node1, node0, 301, (-2369));
      int int0 = (-1569);
      int int1 = 274;
      int int2 = 2374;
      Node node3 = new Node(int0, node1, node0, node1, node0, int1, int2);
      // Undeclared exception!
      try { 
        node2.isTypeOf();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newNumber((double) 903, 100, 100);
      Node node1 = new Node(55, node0, 15, (-154));
      Iterable<Node> iterable0 = new Node.AncestorIterable(node1);
      node1.setChangeTime(55);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.cloneTree();
      node1.isNot();
      node1.isObjectLit();
      node0.isScript();
      node0.isVarArgs();
      node0.isParamList();
      Node.newNumber((double) 52);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = new Node(103);
      node0.detachChildren();
      int int0 = Node.ORIGINALNAME_PROP;
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = Node.newString("direct_eval");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isFor();
      node0.isCase();
      node0.getCharno();
      node0.isFromExterns();
      node0.isSetterDef();
      node0.getSourceFileName();
      node0.isGetterDef();
      node0.setQuotedString();
      Node node1 = new Node(30, node0, node0, (-1719), 1628);
      node0.clonePropsFrom(node1);
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node.extractLineno(148);
      Node node0 = Node.newNumber((double) 0);
      node0.setChangeTime(119);
      Node node1 = new Node(148, node0, 2337, 0);
      Node node2 = new Node((-5101), node0, 2, 37);
      node1.srcrefTree(node2);
      node1.setLineno(node0.CHANGE_TIME);
      Node node3 = node0.removeFirstChild();
      // Undeclared exception!
      try { 
        node3.isFromExterns();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(0, node0, 4, 111);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node2 = new Node(55);
      node1.detachChildren();
      int int0 = Node.ORIGINALNAME_PROP;
      node2.isInc();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = Node.newString(56, "K!");
      node0.isStringKey();
      node2.isDo();
      int int0 = 1238;
      Node[] nodeArray0 = new Node[5];
      Node node3 = new Node(Integer.MAX_VALUE, node1, node2, node1, node0);
      nodeArray0[0] = node3;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node2;
      nodeArray0[4] = node2;
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node node0 = Node.newString("%");
      node0.siblings();
      node0.setChangeTime(88);
      Node node1 = new Node(40, node0, node0, node0);
      node0.checkTreeEqualsImpl(node1);
      node1.isGetProp();
      node0.isSyntheticBlock();
      node1.isObjectLit();
      node0.isFromExterns();
      node0.isScript();
      node0.isVarArgs();
      node1.isParamList();
      Node.newNumber(1.0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      String string0 = "8";
      Node node0 = Node.newString("8");
      Node node1 = Node.newNumber((double) 47);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = Node.newString("c", 7740, 7740);
      Node node1 = new Node(7740, node0, node0, node0);
      node1.getLength();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-701), (-701));
      node0.children();
      Node node1 = new Node(148, node0, node0, node0, node0, 55, 39);
      node0.mayMutateGlobalStateOrThrow();
      node1.isQuotedString();
      Node node2 = new Node((-1225), 297, 57);
      node2.useSourceInfoFromForTree(node1);
      node0.getProp(423);
      node0.isBlock();
      Node node3 = new Node(3080, node0, node0, node2);
      node3.getSideEffectFlags();
      int int0 = 3036;
      int int1 = (-3470);
      Node node4 = new Node(int0, node1.COLUMN_BITS, int1);
      int int2 = 26;
      node4.setLength(int2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setMutatesThis();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      int int0 = (-174);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-174), (Node) null, (-174), (-174));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = new Node(38, 38, 38);
      node0.hasOneChild();
      node0.isVarArgs();
      Node node1 = Node.newNumber((double) 57, 51, 38);
      node1.setLength(43);
      node1.getDouble();
      node1.putBooleanProp(8, false);
      node0.isHook();
      node0.isQualifiedName();
      node1.isDo();
      // Undeclared exception!
      try { 
        node1.isInc();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 38 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-701), (-701));
      node0.children();
      Node node1 = new Node(148, node0, node0, node0, node0, 55, 39);
      node0.mayMutateGlobalStateOrThrow();
      node1.isQuotedString();
      Node node2 = Node.newString("direct_eval", 39, 57);
      node1.setChangeTime(47);
      node2.checkTreeEqualsImpl(node1);
      Node node3 = new Node(4, node2, node1, 0, 37);
      node3.isFor();
      node1.isObjectLit();
      node3.setChangeTime(52);
      node1.isNumber();
      Node node4 = Node.newString(2, "The new child node already has a parent.");
      node4.getChildAtIndex(417);
      node3.isRegExp();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      int int0 = 88;
      Node node0 = new Node(433, 22, 88);
      node0.getString();
      node0.isThis();
      int int1 = 1659;
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node0.addChildrenToFront((Node) null);
      // Undeclared exception!
      try { 
        node0.mayMutateGlobalStateOrThrow();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newString((-498), "this", 100, 100);
      Node node1 = new Node((-1031), node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isEquivalentToTyped(node1);
      node2.isHook();
      Node node3 = node2.removeChildren();
      node3.getChangeTime();
      node3.isHook();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node1.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      Node node4 = Node.newString(2, "", 1, 153);
      node4.addChildrenAfter(node0, node0);
      node2.srcrefTree(node1);
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = Node.newNumber(1971.8632755717206, 132, (-947));
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.common.base.CharMatcher$RangesMatcher", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      Node node1 = Node.newNumber((-1625.767043829));
      node_SideEffectFlags2.setThrows();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(4095, nodeArray0);
      node2.isRegExp();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.useSourceInfoFrom(node1);
      node0.isNew();
      node1.setLength(50);
      node1.getIntProp(48);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = Node.newNumber(1987.3, 132, (-947));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("K!");
      node1.siblings();
      Node node2 = Node.newString("com.google.comm+n.collect.Iterator!$MergingIterator", 16, 512);
      node1.setChangeTime(38);
      node0.checkTreeEqualsImpl(node1);
      node0.isFor();
      node2.isObjectLit();
      node0.setChangeTime(109);
      node2.isNumber();
      node2.getChildAtIndex((-1241));
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = Node.newString("K!");
      node1.siblings();
      Node node3 = Node.newString("~", 40, 2);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      node3.appendStringTree(stringBuffer0);
      node3.setChangeTime((-95));
      node1.checkTreeEqualsImpl(node1);
      node3.isFor();
      node1.isObjectLit();
      node0.getCharno();
      node2.isFromExterns();
      node0.getAncestors();
      node3.isScript();
      node2.isGetElem();
      node1.isWhile();
      node0.getChildAtIndex((-2382));
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isInc();
      node0.isVarArgs();
      Node node1 = Node.newNumber((-1225.4216940928038), 43, 21);
      node1.isFromExterns();
      Node node2 = new Node((-2243), 152, 2);
      node2.isUnscopedQualifiedName();
      node1.isVar();
      node0.cloneTree();
      Node.newString(46, "f_R5Ai3/]y");
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = Node.newNumber((double) 31);
      node0.wasEmptyNode();
      Node node2 = Node.newString("oVv474>");
      node0.siblings();
      Node node3 = Node.newString("6UAg7", 52, 100);
      node1.setChangeTime(4095);
      node2.checkTreeEqualsImpl(node3);
      node1.isFor();
      node3.isObjectLit();
      node3.setChangeTime(29);
      node1.isNumber();
      node0.getChildAtIndex(2);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node.extractLineno((-5065));
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = new Node(103);
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      node0.isVarArgs();
      node0.isParamList();
      Node.newNumber(2872.78999);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isWith();
      Node node1 = Node.newNumber(3934.77787622, (-1048), 2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2432);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node0.useSourceInfoIfMissingFromForTree(node1);
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType1, (JSType) templateType0, (JSType) templateType1);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node2.putIntProp(node0.IS_CONSTANT_NAME, templateType1.ENUMDECL);
      node1.isNull();
      node0.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-701), 27570);
      Node node1 = new Node(57, node0, node0, node0, node0);
      Node node2 = new Node(52, node1);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(12);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.newString("Object#Element");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      node2.isBreak();
      node2.isFalse();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = new Node(4, 4, 4);
      node0.hasOneChild();
      node0.isEquivalentToShallow(node0);
      node0.siblings();
      Node node1 = Node.newString("<T4PUNbNBiN}Sn", (-1815), 32);
      node1.setChangeTime((-3077));
      node1.getString();
      node1.checkTreeEqualsImpl(node0);
      node1.isFor();
      node0.isObjectLit();
      node1.setChangeTime((-242));
      node1.isNumber();
      node1.getChildAtIndex((-3456));
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4, 4, 4);
      Node node1 = new Node(4, node0, 4, 111);
      node1.siblings();
      node0.setChangeTime(43);
      node1.checkTreeEqualsImpl(node1);
      node0.isNot();
      node1.isObjectLit();
      node0.isScript();
      node1.isVarArgs();
      node1.isParamList();
      Node node2 = new Node(38, node0, node1, node0, node0, 46, 48);
      node1.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = Node.newNumber((double) 31);
      node0.wasEmptyNode();
      Node node2 = Node.newString("oVv474>");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = new Node(16, node1, node0, node1, node2);
      node1.setChangeTime(4095);
      node2.checkTreeEqualsImpl(node3);
      node1.isFor();
      node3.isObjectLit();
      node3.setChangeTime(29);
      node1.isScript();
      node2.useSourceInfoIfMissingFrom(node3);
      Node.extractLineno(57);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      Node node0 = new Node(152, (-557), 49);
      Node node1 = Node.newNumber((-1.0));
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = Node.newNumber((double) 46);
      node0.setSourceEncodedPositionForTree(4237);
      node0.isInstanceOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newNumber(1987.3, 132, (-947));
      node0.mayMutateGlobalStateOrThrow();
      node0.isQuotedString();
      Node node1 = new Node(43, 47, 4095);
      node1.isBlock();
      Node node2 = new Node(1, node1, node0, node1);
      node1.getSideEffectFlags();
      Node node3 = new Node(32, 54, 48);
      node0.setLength(54);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node2.removeFirstChild();
      node3.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(49, node0, node0, 2, 4095);
      Node node2 = Node.newString("K!");
      node1.siblings();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setThrows();
      Node node3 = Node.newNumber(0.7);
      node2.isVar();
      Node node4 = node1.cloneTree();
      Node.newString(55, "");
      Node.mergeLineCharNo(4095, 159);
      node3.getChildAtIndex(1277);
      String string0 = "";
      int int0 = (-209);
      Node node5 = Node.newString(node1.IS_CONSTANT_NAME, string0, node1.SLASH_V, int0);
      node5.getProp(node4.IS_DISPATCHER);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      Node node0 = Node.newNumber((-1625.767043829));
      node_SideEffectFlags3.setThrows();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.addSuppression("SHEQ");
      node0.setJSDocInfo(jSDocInfo0);
      node0.isBreak();
      node0.isQualifiedName();
      node0.setDouble(526.580666);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newString(38, "", 38, 38);
      node0.hasOneChild();
      node0.isVarArgs();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.valueOf();
      node_SideEffectFlags1.setMutatesThis();
      Node node1 = Node.newString(54, "MC3sALB~Q+m$(*f.|6");
      node1.isStringKey();
      node1.isDo();
      node0.isLocalResultCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.putBooleanProp(1, true);
      Node node2 = new Node(2050, node0, node0, node0, node1, 33, 15);
      node2.isHook();
      node2.isQualifiedName();
      node2.isDo();
      node0.isInc();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = new Node(103);
      Node node1 = new Node(83, node0, node0, node0);
      node0.isEquivalentTo(node1);
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      node0.isIn();
      node0.isParamList();
      Node.newNumber(2872.78999);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = Node.newNumber((-294.48434), (-2292), (-2292));
      Node node1 = new Node(1, node0, node0, 0, 294);
      Node node2 = node0.copyInformationFrom(node1);
      node0.getType();
      Node node3 = node1.useSourceInfoFromForTree(node0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add((String) null);
      node0.putIntProp(node1.NO_SIDE_EFFECTS, node2.FLAG_LOCAL_RESULTS);
      node3.setDirectives(treeSet0);
      Node node4 = node3.srcref(node1);
      double double0 = (-1.0);
      // Undeclared exception!
      try { 
        node4.setDouble(double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = new Node(103);
      node0.putBooleanProp(103, true);
      node_SideEffectFlags3.setThrows();
      node0.isLabel();
      node0.isFor();
      node0.isCase();
      node0.getCharno();
      node0.isFromExterns();
      node0.isSetterDef();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = new Node(103);
      node0.putBooleanProp(103, true);
      node_SideEffectFlags3.setThrows();
      node0.isLabel();
      node0.isFor();
      node0.isCase();
      node0.getCharno();
      node0.putIntProp(0, (-1));
      node0.isNull();
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newNumber((double) 100, (-1581), (-1581));
      Node node1 = new Node(2048, node0, 3673, 4095);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node2 = Node.newString(1882, "posit#on (");
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      nodeArray0[4] = node1;
      Node node3 = new Node(54, node2, node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      node1.setChangeTime(55);
      node2.checkTreeTypeAwareEqualsImpl(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.getGreatestSubtypeWithProperty((JSType) null, "String node not created with Node.newString");
      Node.newString("Unknown class name", 1966, 4095);
      node1.addChildToBack(node3);
      node2.mayMutateArguments();
      node0.isDelProp();
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags6.clearSideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.putIntProp(0, 3082);
      node0.isNull();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = Node.newString(381, "", 897, 39);
      Node node1 = Node.newString("", 37, 40);
      Node node2 = new Node(214, node0, node1, node1, 52, 36);
      Node.newString(8, "");
      node1.isTypeOf();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("direct_eval", false);
      node1.putProp(49, simpleSourceFile0);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString(38, "", 38, 38);
      Node node1 = new Node(47, node0, node0, node0, node0, 52, 63);
      node0.mayMutateGlobalStateOrThrow();
      node0.isQuotedString();
      Node node2 = new Node(305, (-862048943), 1075);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node4 = node1.useSourceInfoFromForTree(node3);
      node1.getProp(55);
      node3.isBlock();
      Node node5 = new Node(33, node1, node4, node1);
      node5.getSideEffectFlags();
      Node node6 = new Node(31, 79, 39);
      node2.setLength(31);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node2.isString();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node node1 = new Node(0, node0, 4, 111);
      Node node2 = Node.newString("K!");
      node1.siblings();
      node0.setChangeTime(43);
      node1.checkTreeEqualsImpl(node1);
      node0.isGetProp();
      node0.isSyntheticBlock();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node1.isBreak();
      node0.isQualifiedName();
      node0.setDouble(0.0);
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = new Node(103);
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("empty_block", node0, (JSType) null);
      enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType0.getElementsType();
      // Undeclared exception!
      try { 
        enumElementType0.getPropertyNode(enumType0.EMPTY_TYPE_COMPONENT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = Node.newNumber(31.0, (-1906), 124);
      Node node1 = Node.newString("K[*D!TjzMI^4y.`KAsp");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.getSourceOffset();
      node0.getDirectives();
      node1.checkTreeEqualsImpl(node0);
      Node node3 = Node.newString(51, "direct_eval");
      node3.getChangeTime();
      node0.getQualifiedName();
      node0.isInc();
      node3.isFunction();
      node1.isInstanceOf();
      node1.isComma();
      node3.getLength();
      Node node4 = Node.newString(43, "*7jXKbXC=l{S{.#");
      node4.setChangeTime(147);
      node1.srcrefTree(node4);
      node2.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newString(38, "", 38, 38);
      node0.hasOneChild();
      boolean boolean0 = node0.isVarArgs();
      Node node1 = Node.newNumber((double) 57, 51, 38);
      node1.setLength(43);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node0.toString();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node0.isDebugger();
      node0.setSideEffectFlags(node_SideEffectFlags2);
      node0.isContinue();
      // Undeclared exception!
      try { 
        node1.putBooleanProp(node0.FLAG_NO_THROWS, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NAME
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = Node.newString(38, "", 38, 38);
      Node node1 = new Node(47, node0, node0, node0, node0, 52, 63);
      node0.mayMutateGlobalStateOrThrow();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1717);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      Node node2 = Node.newNumber(0.0);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags((-309));
      node_SideEffectFlags3.setThrows();
      node1.isRegExp();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      node2.isNew();
      node1.setLength(52);
      node1.getIntProp(102);
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newString("diect_eval", (-701), 27570);
      Node node1 = new Node(57, node0, node0, node0, node0);
      Node node2 = new Node(52, node1);
      Node node3 = Node.newNumber((-2538.620259994533), (-2216), 15);
      node3.isFromExterns();
      Node node4 = new Node(4095, 16, 48);
      node4.isUnscopedQualifiedName();
      node4.hasOneChild();
      Node node5 = node0.cloneTree();
      Node node6 = Node.newString((-2216), "diect_eval");
      node5.isScript();
      node6.isAssign();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isSyntheticBlock();
      node0.getAncestors();
      Node.extractLineno((-3910));
      node0.getIndexOfChild((Node) null);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newString(".", 124, 116);
      Node node1 = new Node(2935, node0);
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesArgumentsCall();
      node0.isLabelName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createOptionalParameters((JSType[]) null);
      Node.newString(jSTypeRegistry0.OBJECT_ELEMENT_TEMPLATE);
      // Undeclared exception!
      try { 
        node1.detachChildren();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString(".", 124, (-3620));
      node0.wasEmptyNode();
      Node node1 = new Node(2, node0);
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = Node.newString(0, "", 8217, 0);
      node0.isExprResult();
      node0.setOptionalArg(false);
      node0.getSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString("");
      node0.isSetterDef();
      node0.getSourceFileName();
      node1.isGetterDef();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = new Node(103);
      node0.detachChildren();
      int int0 = Node.ORIGINALNAME_PROP;
      node0.isObjectLit();
      node0.isSetterDef();
      Node node1 = Node.newString((-321), "com.google.javascript.rhino.Node$AncestorIterable", 37, 54);
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newString(381, "", 10, 381);
      node0.hasOneChild();
      node0.isEmpty();
      Node node1 = Node.newNumber((double) 15, (-913), 2);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      Node node2 = new Node(54, nodeArray0);
      node2.getExistingIntProp(node1.IS_NAMESPACE);
      nodeArray0[1].isOnlyModifiesArgumentsCall();
      node0.cloneTree();
      // Undeclared exception!
      try { 
        nodeArray0[2].isBreak();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(38);
      node0.isVarArgs();
      Node node1 = Node.newNumber((double) 57, 51, 38);
      node1.setLength(43);
      node1.getDouble();
      node1.putBooleanProp(8, false);
      node0.isHook();
      node0.hasChildren();
      node1.isDo();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newString("7", 1, 49);
      Node node1 = new Node(1, node0, node0, node0, node0, 2465, 55);
      node1.setVarArgs(true);
      Node node2 = node1.cloneNode();
      node2.isVarArgs();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newString("DuZ");
      Node node1 = new Node((-2665), node0, node0, node0, 56, (-538));
      Node node2 = new Node(34, node1, node1, node1, node1, (-420), 2216);
      node2.copyInformationFrom(node0);
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = Node.newNumber(9.70757751324376);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.addChildrenToFront(node0);
      node0.getLineno();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("Unknown");
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo1);
      Node node3 = new Node(93, node2, node0, node0, node0, 1346, 57);
      node3.isBreak();
      node3.isFalse();
      node0.toStringTree();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.areAllFlagsSet();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node node0 = new Node(103);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags1.valueOf();
      node_SideEffectFlags3.setMutatesThis();
      Node node1 = Node.newString(0, "");
      node1.isStringKey();
      node1.isDo();
      node1.isLocalResultCall();
      node0.putBooleanProp(44, true);
      Node node2 = new Node(12288, node1, node0, 4095, 51);
      node2.isNew();
      node2.isInc();
      node2.isSwitch();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.getBooleanProp(57);
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString(6, "com.google.javascript.rhino.Node$AncestorIterable$1");
      Node.mergeLineCharNo(2, 43);
      node1.detachChildren();
      int int0 = Node.ORIGINALNAME_PROP;
      node0.isInc();
      node1.removeFirstChild();
      node2.getSourcePosition();
      node2.isThrow();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = new Node(33, 16, (-558));
      Node.newNumber((-600.247961841507), 125, 1);
      node0.isIf();
      int int0 = 1024;
      node0.removeProp(1024);
      node0.isUnscopedQualifiedName();
      node0.isOptionalArg();
      node0.getChangeTime();
      node0.mayMutateGlobalStateOrThrow();
      node0.isExprResult();
      node0.removeProp(int0);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.areAllFlagsSet();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node(103);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node0.isCase();
      node0.getCharno();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(2690);
      node1.isDebugger();
      node0.setSideEffectFlags(node_SideEffectFlags1);
      node0.isContinue();
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = Node.newString(1826, "V9LE");
      node0.setCharno((-392));
      node0.isLabel();
      Node node1 = Node.newString("V9LE", 30, 36);
      node1.getInputId();
      node0.addChildAfter(node1, (Node) null);
      Node node2 = Node.newNumber((double) 33);
      Node node3 = Node.newString("com.google.common.collect.ImmutableMapValues", 150, 55);
      node3.isOnlyModifiesArgumentsCall();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("a??1n1:eDm,y%Y+*``c");
      node0.setLength(2281);
      node3.getIntProp(51);
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isWith();
      Node node1 = Node.newNumber(3934.77787622, (-1048), 2);
      Node node2 = Node.newString("vQq;!83", (-1), (-2664));
      Node node3 = new Node((-3912), node1, node2);
      node3.addChildToBack(node0);
      node1.mayMutateArguments();
      Node node4 = node0.srcrefTree(node1);
      node0.isDelProp();
      node4.hasOneChild();
      node3.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(20);
      node0.setSourceEncodedPosition(20);
      node0.isThrow();
      Node node1 = new Node(31, node0, node0, node0, 1, 52);
      node0.wasEmptyNode();
      Node node2 = Node.newString("");
      node2.siblings();
      Node node3 = Node.newString("Named type with empty name component", 4095, 1202);
      node1.setChangeTime(43);
      node2.checkTreeEqualsImpl(node3);
      node3.isFor();
      node2.isObjectLit();
      node0.setChangeTime(4095);
      node0.isNumber();
      node0.getChildAtIndex(55);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newString(38, "", 38, 38);
      node0.hasOneChild();
      node0.isVarArgs();
      Node node1 = Node.newNumber((double) 57, 51, 38);
      node1.setLength(43);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node0.toString();
      node_SideEffectFlags1.setAllFlags();
      Node.extractLineno(37);
      node1.getIndexOfChild((Node) null);
      node0.copyInformationFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.620259994533));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.areAllFlagsSet();
      node_SideEffectFlags0.setReturnsTainted();
      Node node1 = new Node(16, node0, node0, node0, node0, 32, 50);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node1.isCase();
      node1.getCharno();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node2 = new Node(29, node0);
      node2.getSideEffectFlags();
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber((-5978.4344), (-1421), (-1421));
      Node node1 = new Node(2, node0, 154, 40);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node1.setChangeTime(4095);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = node1.cloneTree();
      node2.isNot();
      node1.isObjectLit();
      node0.isScript();
      node1.isVarArgs();
      node1.isParamList();
      Node node3 = Node.newNumber(0.0);
      node3.isDo();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.62));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(52, (-1381), 12);
      Node node2 = new Node(1, node0, node0, node0, node0);
      node0.getLineno();
      node0.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString("Unknown");
      Node node4 = node0.setJSDocInfo(jSDocInfo0);
      Node node5 = new Node(47, node3, node2, node0, node0, 2373, 1952);
      node4.isBreak();
      node0.isFalse();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = Node.newNumber((double) 31);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(306);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node2 = Node.newString(4095, "p)Sn\"t~}&&9");
      node1.isStringKey();
      node2.isDo();
      node0.isLocalResultCall();
      node2.putBooleanProp(476, true);
      node_SideEffectFlags3.setReturnsTainted();
      node0.isThis();
      node0.isOr();
      node2.setString("");
      Node node3 = new Node(1615);
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newString("direct_eval", (-701), (-701));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-205));
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.getIntProp((-701));
      Node node1 = new Node((-3847));
      Node node2 = new Node(26, node1, node0, node1);
      node0.isEquivalentTo(node2);
      node2.isSyntheticBlock();
      node1.isOnlyModifiesArgumentsCall();
      node1.isIn();
      node0.isParamList();
      Node.newNumber(Double.POSITIVE_INFINITY);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newString(13, "", 13, 13);
      node0.putBooleanProp(13, false);
      Node node1 = new Node((-307), node0);
      node0.setIsSyntheticBlock(true);
      node1.setLength(2);
      node1.setQuotedString();
      node0.addChildBefore(node1, node1);
      node0.isStringKey();
      node1.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setMutatesArguments();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.identifyNonNullableName("p1RjsJ7Jf");
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNullType();
      jSType0.getPossibleToBooleanOutcomes();
      node0.setJSType(jSType0);
      node0.setType(103);
      simpleErrorReporter0.error("o-`RxAT9/wj4DT", "Object#Key", 31, 2);
      node0.isComma();
      jSTypeRegistry0.incrementGeneration();
      node0.isFromExterns();
      node0.getType();
      node0.getString();
      node0.isThis();
      int int0 = 155;
      Node node1 = new Node(node0.OPT_ARG_NAME, node0, node0, node0, node0.FLAG_THIS_UNMODIFIED, int0);
      node0.addChildrenToFront(node1);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = new Node(103);
      node0.detachChildren();
      node0.isNot();
      node0.isObjectLit();
      node0.isScript();
      node0.isVarArgs();
      node0.isParamList();
      Node node1 = new Node(46, node0, node0, node0, node0, 100, 110);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newNumber(9.70757751324376);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.addChildrenToFront(node0);
      node0.getLineno();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(49, nodeArray0, 56, 1135);
      node0.isContinue();
      node1.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString("direct_eval", 460, 4127);
      node2.addChildToBack(node1);
      node1.mayMutateArguments();
      node2.isDelProp();
      node1.hasOneChild();
      node2.getJsDocBuilderForNode();
      node2.isStringKey();
      node2.getChildBefore(node1);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = Node.newNumber(1987.3, 132, (-947));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Set<String> set0 = jSDocInfo0.getModifies();
      node0.setDirectives(set0);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newString("9[+H%,=/#A`RjW#3ob");
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      Node node3 = new Node(1, node0, node2, node2, node0, 55, 57);
      node0.isBreak();
      node3.isFalse();
      node2.toStringTree();
      node1.getChildCount();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = new Node(103);
      Node node1 = new Node(83, node0, node0, node0);
      node0.isEquivalentTo(node1);
      node0.isAnd();
      node0.isQualifiedName();
      node1.isDo();
      Node node2 = Node.newString(46, "new child has existing sibling");
      node2.isInc();
  }
}
