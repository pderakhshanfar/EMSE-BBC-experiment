* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.google.javascript.rhino.Node
* Starting Client-0
* Connecting to master process on port 13455
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-110/build/classes
  - subjects/buggy-versions/Closure-110/lib/args4j.jar
  - subjects/buggy-versions/Closure-110/lib/guava.jar
  - subjects/buggy-versions/Closure-110/lib/json.jar
  - subjects/buggy-versions/Closure-110/lib/jsr305.jar
  - subjects/buggy-versions/Closure-110/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-110/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-110/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.Node
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 7813
* Using seed 2916736263
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 5977 / 7813
[MASTER] 10:00:29.032 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 10:00:30.527 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 10:00:31.007 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.google.javascript.rhino.Node.putProp(ILjava/lang/Object;)V: I8 Branch 108 IFNULL L846 - false in context: com.google.javascript.rhino.Node:putProp(ILjava/lang/Object;)V
[MASTER] 10:01:12.869 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
Number of times BBC is called for com.google.javascript.rhino.Node.getLastSibling()Lcom/google/javascript/rhino/Node;: I8 Branch 64 IFNULL L589 - true: 219
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 26 TABLESWITCH L114 Case 54 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1871: 1834
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1870: 1834
Number of times BBC is called for com.google.javascript.rhino.Node.isVar()Z: I5 Branch 276 IF_ICMPNE L2435 - false: 25338
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1872: 1834
Number of times BBC is called for com.google.javascript.rhino.Node.isVar()Z: I5 Branch 276 IF_ICMPNE L2435 - true: 429
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1867: 1834
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1866: 1834
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I12 Branch 280 IFEQ L174 - false: 692
Number of times BBC is called for com.google.javascript.rhino.Node.setDouble(D)V: I5 Branch 114 IF_ICMPNE L902 - false: 1111
Number of times BBC is called for com.google.javascript.rhino.Node.isGetterDef()Z: Line 2311: 4789
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I12 Branch 280 IFEQ L174 - true: 538
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I195 Branch 128 IFEQ L997 - true: 48
Number of times BBC is called for com.google.javascript.rhino.Node.isParamList()Z: I5 Branch 263 IF_ICMPNE L2383 - true: 1058
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 26 TABLESWITCH L114 Case 54 - true: 973
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I44 Branch 171 IF_ICMPNE L1527 - false: 3852
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I127 Branch 126 IF_ICMPGE L980 - false: 21
Number of times BBC is called for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 709: 362
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - true: 3851
Number of times BBC is called for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 708: 362
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1861: 1834
Number of times BBC is called for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 707: 362
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1860: 1834
Number of times BBC is called for com.google.javascript.rhino.Node.isParamList()Z: I5 Branch 263 IF_ICMPNE L2383 - false: 2144
Number of times BBC is called for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 704: 362
Number of times BBC is called for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 210 IFNONNULL L1747 - true: 2628
Number of times BBC is called for com.google.javascript.rhino.Node.isThis()Z: I5 Branch 271 IF_ICMPNE L2415 - true: 659
Number of times BBC is called for com.google.javascript.rhino.Node.getLastSibling()Lcom/google/javascript/rhino/Node;: I8 Branch 64 IFNULL L589 - false: 3562
Number of times BBC is called for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - false: 19306
Number of times BBC is called for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: Line 699: 362
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: Line 1365: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.getChildCount()I: I11 Branch 152 IFNULL L1408 - false: 196
Number of times BBC is called for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - true: 7625
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 19 TABLESWITCH L114 Case 47 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: Line 1958: 45
Number of times BBC is called for com.google.javascript.rhino.Node.isThis()Z: I5 Branch 271 IF_ICMPNE L2415 - false: 22968
Number of times BBC is called for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: Line 1959: 45
Number of times BBC is called for com.google.javascript.rhino.Node.isGetterDef()Z: I5 Branch 245 IF_ICMPNE L2311 - false: 10314
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I49 Branch 73 IFNONNULL L627 - false: 642
Number of times BBC is called for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - true: 782
Number of times BBC is called for com.google.javascript.rhino.Node.isGetterDef()Z: I5 Branch 245 IF_ICMPNE L2311 - true: 4789
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I83 Branch 175 IF_ICMPNE L1534 - false: 6665
Number of times BBC is called for com.google.javascript.rhino.Node.isCase()Z: Line 2251: 4074
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I16 Branch 90 IFNONNULL L717 - true: 1116
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 89 IFNONNULL L715 - true: 2707
Number of times BBC is called for com.google.javascript.rhino.Node.getLastSibling()Lcom/google/javascript/rhino/Node;: Line 588: 219
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 212 IFNULL L1793 - false: 86
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 48 IFNONNULL L424 - true: 20160
Number of times BBC is called for com.google.javascript.rhino.Node.getLastSibling()Lcom/google/javascript/rhino/Node;: Line 592: 219
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I21 Branch 82 IFNULL L670 - true: 59
Number of times BBC is called for com.google.javascript.rhino.Node.getInputId()Lcom/google/javascript/rhino/InputId;: Line 1123: 136
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 19 TABLESWITCH L114 Case 47 - true: 5640
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I16 Branch 167 IF_ACMPEQ L1517 - false: 7499
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I21 Branch 82 IFNULL L670 - false: 59
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 161 IFNE L1473 - true: 3652
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I45 Branch 164 IFNULL L1483 - false: 32465
Number of times BBC is called for com.google.javascript.rhino.Node.isDebugger()Z: I5 Branch 235 IF_ICMPNE L2271 - true: 916
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I182 Branch 184 IFNE L1558 - false: 2940
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: Line 223: 45
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I12 Branch 154 IF_ACMPNE L1417 - true: 2986
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I9 Branch 151 IF_ACMPEQ L1403 - true: 287
Number of times BBC is called for com.google.javascript.rhino.Node.getJsDocBuilderForNode()Lcom/google/javascript/rhino/Node$FileLevelJsDocBuilder;: Line 1847: 219
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I12 Branch 154 IF_ACMPNE L1417 - false: 3949
Number of times BBC is called for com.google.javascript.rhino.Node.isSetterDef()Z: I5 Branch 267 IF_ICMPNE L2399 - false: 39586
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I49 Branch 73 IFNONNULL L627 - true: 1196
Number of times BBC is called for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - false: 3201
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 38 IFNONNULL L400 - true: 16755
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 156 IFNE L1446 - true: 291
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - false: 155
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - true: 45
Number of times BBC is called for com.google.javascript.rhino.Node.isFalse()Z: I5 Branch 242 IF_ICMPNE L2299 - false: 1345
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - true: 3586
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestors()Lcom/google/javascript/rhino/Node$AncestorIterable;: root-Branch: 45
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 12 TABLESWITCH L114 Case 40 - true: 2230
Number of times BBC is called for com.google.javascript.rhino.Node.isObjectLit()Z: Line 2375: 1212
Number of times BBC is called for com.google.javascript.rhino.Node.isAssign()Z: Line 2231: 782
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 12 TABLESWITCH L114 Case 40 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 195 LOOKUPSWITCH L1616 Case 33 - true: 3052
Number of times BBC is called for com.google.javascript.rhino.Node.isGetElem()Z: I5 Branch 246 IF_ICMPNE L2315 - false: 33410
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I30 Branch 169 IFNE L1523 - false: 8302
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 195 LOOKUPSWITCH L1616 Case 33 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1356: 45
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: Line 307: 95285
Number of times BBC is called for com.google.javascript.rhino.Node.getJsDocBuilderForNode()Lcom/google/javascript/rhino/Node$FileLevelJsDocBuilder;: root-Branch: 219
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I7 Branch 81 IF_ACMPNE L669 - false: 60
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: Line 1380: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - false: 155
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceEncodedPositionForTree(I)V: Line 1180: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isGetElem()Z: I5 Branch 246 IF_ICMPNE L2315 - true: 219
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceEncodedPositionForTree(I)V: Line 1182: 219
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - true: 155
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 5 TABLESWITCH L114 Case 33 - true: 2335
Number of times BBC is called for com.google.javascript.rhino.Node.isDec()Z: I5 Branch 236 IF_ICMPNE L2275 - true: 538
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceEncodedPositionForTree(I)V: Line 1186: 219
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I17 Branch 63 IF_ACMPNE L577 - true: 2199
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I17 Branch 63 IF_ACMPNE L577 - false: 614
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: I12 Branch 201 IFNULL L1658 - true: 659
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I66 Branch 160 IFNULL L1459 - false: 7661
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: root-Branch: 45
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 5 TABLESWITCH L114 Case 33 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isDec()Z: I5 Branch 236 IF_ICMPNE L2275 - false: 22549
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - false: 1644
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1358: 45
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1357: 45
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: I12 Branch 201 IFNULL L1658 - false: 754
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1337: 547
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1333: 547
Number of times BBC is called for com.google.javascript.rhino.Node.isAssignAdd()Z: I5 Branch 226 IF_ICMPNE L2235 - false: 9944
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1332: 429
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.getDouble()D: Line 162: 782
Number of times BBC is called for com.google.javascript.rhino.Node.isNE()Z: I5 Branch 256 IF_ICMPNE L2355 - true: 219
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I35 Branch 282 IFNE L179 - false: 5459
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 646: 31482
Number of times BBC is called for com.google.javascript.rhino.Node.isFromExterns()Z: I8 Branch 134 IFNONNULL L1128 - true: 5663
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: Line 1278: 83162
Number of times BBC is called for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 209 IFNONNULL L1743 - true: 6560
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 162 IFNONNULL L1480 - true: 35947
Number of times BBC is called for com.google.javascript.rhino.Node.isFromExterns()Z: I8 Branch 134 IFNONNULL L1128 - false: 1058
Number of times BBC is called for com.google.javascript.rhino.Node.isNE()Z: I5 Branch 256 IF_ICMPNE L2355 - false: 18453
Number of times BBC is called for com.google.javascript.rhino.Node.isGetProp()Z: I5 Branch 247 IF_ICMPNE L2319 - false: 8162
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - true: 104424
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 162 IFNONNULL L1480 - false: 3656
Number of times BBC is called for com.google.javascript.rhino.Node.isRegExp()Z: Line 2387: 219
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - false: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 18 TABLESWITCH L114 Case 46 - true: 8392
Number of times BBC is called for com.google.javascript.rhino.Node.isCatch()Z: I5 Branch 232 IF_ICMPNE L2259 - true: 659
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 3 TABLESWITCH L114 Case 31 - true: 6329
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 193 LOOKUPSWITCH L1598 Default-Case - false: 1477
Number of times BBC is called for com.google.javascript.rhino.Node.getNext()Lcom/google/javascript/rhino/Node;: root-Branch: 45
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 27 TABLESWITCH L114 Case 55 - true: 2257
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 18 TABLESWITCH L114 Case 46 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I9 Branch 151 IF_ACMPEQ L1403 - false: 607
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 27 TABLESWITCH L114 Case 55 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isDebugger()Z: I5 Branch 235 IF_ICMPNE L2271 - false: 19857
Number of times BBC is called for com.google.javascript.rhino.Node.isGetProp()Z: I5 Branch 247 IF_ICMPNE L2319 - true: 1992
Number of times BBC is called for com.google.javascript.rhino.Node.isNot()Z: Line 2363: 538
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I39 Branch 132 IFNULL L1035 - false: 40
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestors()Lcom/google/javascript/rhino/Node$AncestorIterable;: Line 1344: 45
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I4 Branch 99 IFNONNULL L778 - true: 5992
Number of times BBC is called for com.google.javascript.rhino.Node.isHook()Z: I5 Branch 248 IF_ICMPNE L2323 - false: 12408
Number of times BBC is called for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I9 Branch 117 IF_ICMPNE L925 - false: 3699
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: I5 Branch 299 IFNULL L1365 - true: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.isNull()Z: Line 2367: 2501
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: I5 Branch 299 IFNULL L1365 - false: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I4 Branch 99 IFNONNULL L778 - false: 5520
Number of times BBC is called for com.google.javascript.rhino.Node.isCatch()Z: I5 Branch 232 IF_ICMPNE L2259 - false: 13301
Number of times BBC is called for com.google.javascript.rhino.Node.isVar()Z: Line 2435: 429
Number of times BBC is called for com.google.javascript.rhino.Node.isInc()Z: Line 2335: 6087
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(Lcom/google/javascript/rhino/Node$SideEffectFlags;)V: Line 2036: 7693
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 4 TABLESWITCH L114 Case 32 - true: 2119
Number of times BBC is called for com.google.javascript.rhino.Node.isDelProp()Z: Line 2283: 317
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 4 TABLESWITCH L114 Case 32 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I170 Branch 182 IFEQ L1558 - true: 3361
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 13 TABLESWITCH L114 Case 41 - true: 1843
Number of times BBC is called for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: root-Branch: 782
Number of times BBC is called for com.google.javascript.rhino.Node.isVoid()Z: Line 2439: 45
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I170 Branch 182 IFEQ L1558 - false: 767
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I94 Branch 54 IFNONNULL L488 - true: 41
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 13 TABLESWITCH L114 Case 41 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I162 Branch 127 LOOKUPSWITCH L987 Default-Case - true: 21
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I162 Branch 127 LOOKUPSWITCH L987 Default-Case - false: 9314
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - true: 88965
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I133 Branch 178 IF_ICMPNE L1547 - false: 1994
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateArguments()Z: Line 2161: 538
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - false: 83162
Number of times BBC is called for com.google.javascript.rhino.Node.isNew()Z: I5 Branch 257 IF_ICMPNE L2359 - false: 2044
Number of times BBC is called for com.google.javascript.rhino.Node.isGetElem()Z: Line 2315: 219
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: Line 2211: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I4 Branch 150 IFNULL L1403 - false: 603
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 157 IFNONNULL L1453 - true: 11754
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceEncodedPositionForTree(I)V: I13 Branch 138 IFNULL L1183 - false: 736
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: Line 1370: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I4 Branch 150 IFNULL L1403 - true: 317
Number of times BBC is called for com.google.javascript.rhino.Node.isInstanceOf()Z: Line 2339: 1058
Number of times BBC is called for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I13 Branch 102 IF_ICMPNE L800 - false: 132
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 17 TABLESWITCH L114 Case 45 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 157 IFNONNULL L1453 - false: 72
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceEncodedPositionForTree(I)V: I13 Branch 138 IFNULL L1183 - true: 219
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I7 Branch 153 IFNULL L1416 - false: 3442
Number of times BBC is called for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - true: 317
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - true: 51132
Number of times BBC is called for com.google.javascript.rhino.Node.isStringKey()Z: Line 2407: 782
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 17 TABLESWITCH L114 Case 45 - true: 5460
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I7 Branch 75 IF_ACMPNE L640 - true: 437
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - false: 31482
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToBack(Lcom/google/javascript/rhino/Node;)V: root-Branch: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - false: 22311
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I7 Branch 153 IFNULL L1416 - true: 538
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - false: 17669
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - true: 17669
Number of times BBC is called for com.google.javascript.rhino.Node.isEmpty()Z: Line 2291: 1834
Number of times BBC is called for com.google.javascript.rhino.Node.isArrayLit()Z: I5 Branch 224 IF_ICMPNE L2227 - false: 651
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 76 IFNONNULL L642 - true: 4702
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateArguments()Z: I7 Branch 219 IFNE L2161 - true: 3744
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - true: 83162
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateArguments()Z: I7 Branch 219 IFNE L2161 - false: 538
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - false: 83162
Number of times BBC is called for com.google.javascript.rhino.Node.isBreak()Z: Line 2243: 4433
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I31 Branch 77 IFNONNULL L644 - false: 31269
Number of times BBC is called for com.google.javascript.rhino.Node.setQuotedString()V: root-Branch: 1992
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - false: 88965
Number of times BBC is called for com.google.javascript.rhino.Node.isContinue()Z: I5 Branch 234 IF_ICMPNE L2267 - true: 5150
Number of times BBC is called for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - true: 5520
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 197 LOOKUPSWITCH L1616 Default-Case - true: 219
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: Line 349: 104424
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - true: 83162
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2031: 4598
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.iterator()Ljava/util/Iterator;: root-Branch: 45
Number of times BBC is called for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - false: 29991
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I30 Branch 39 IFNONNULL L401 - true: 64
Number of times BBC is called for com.google.javascript.rhino.Node.getSourcePosition()I: root-Branch: 538
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 80 IFNULL L669 - false: 45
Number of times BBC is called for com.google.javascript.rhino.Node.isFor()Z: I5 Branch 243 IF_ICMPNE L2303 - false: 21808
Number of times BBC is called for com.google.javascript.rhino.Node.isInc()Z: I5 Branch 251 IF_ICMPNE L2335 - true: 6087
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I42 Branch 67 IFNONNULL L601 - false: 136
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2032: 4598
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 80 IFNULL L669 - true: 99
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I42 Branch 67 IFNONNULL L601 - true: 1093
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 781: 5520
Number of times BBC is called for com.google.javascript.rhino.Node.isInc()Z: I5 Branch 251 IF_ICMPNE L2335 - false: 8636
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 778: 5520
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 780: 5520
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 14 TABLESWITCH L114 Case 42 - true: 1344
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - false: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: root-Branch: 45
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I113 Branch 125 IFEQ L978 - true: 48
Number of times BBC is called for com.google.javascript.rhino.Node.isSwitch()Z: Line 2411: 659
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 47 IFNONNULL L423 - true: 83
Number of times BBC is called for com.google.javascript.rhino.Node.hasOneChild()Z: I9 Branch 149 IF_ACMPNE L1393 - false: 216
Number of times BBC is called for com.google.javascript.rhino.Node.isTypeOf()Z: I5 Branch 275 IF_ICMPNE L2431 - true: 136
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: root-Branch: 95285
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I6 Branch 71 IFNULL L620 - false: 136
Number of times BBC is called for com.google.javascript.rhino.Node.isTry()Z: Line 2427: 45
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - true: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I85 Branch 50 IFNONNULL L426 - true: 20135
Number of times BBC is called for com.google.javascript.rhino.Node.getJSDocInfo()Lcom/google/javascript/rhino/JSDocInfo;: Line 1881: 45
Number of times BBC is called for com.google.javascript.rhino.Node.isThrow()Z: Line 2419: 317
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: Line 1416: 538
Number of times BBC is called for com.google.javascript.rhino.Node.isWith()Z: I5 Branch 279 IF_ICMPNE L2447 - false: 948
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 197 LOOKUPSWITCH L1616 Default-Case - false: 4525
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 252: 916
Number of times BBC is called for com.google.javascript.rhino.Node.isTypeOf()Z: I5 Branch 275 IF_ICMPNE L2431 - false: 35219
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 253: 916
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.getDouble()D: root-Branch: 782
Number of times BBC is called for com.google.javascript.rhino.Node.hasOneChild()Z: I9 Branch 149 IF_ACMPNE L1393 - true: 467
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 14 TABLESWITCH L114 Case 42 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I6 Branch 71 IFNULL L620 - true: 292
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: Line 1311: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: I5 Branch 115 IF_ICMPNE L912 - true: 3362
Number of times BBC is called for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - true: 2945
Number of times BBC is called for com.google.javascript.rhino.Node.isString()Z: I5 Branch 268 IF_ICMPNE L2403 - true: 317
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L114 Case 35 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 16 TABLESWITCH L114 Case 44 - true: 8334
Number of times BBC is called for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - false: 1212
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L114 Case 35 - true: 3169
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 25 TABLESWITCH L114 Case 53 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isDefaultCase()Z: Line 2279: 219
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 84 IFNULL L676 - true: 99
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 84 IFNULL L676 - false: 817
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 16 TABLESWITCH L114 Case 44 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isString()Z: I5 Branch 268 IF_ICMPNE L2403 - false: 423
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 25 TABLESWITCH L114 Case 53 - true: 1900
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: I4 Branch 216 IFNONNULL L1974 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 669: 45
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I23 Branch 295 IFEQ L2204 - true: 202
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 670: 99
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I27 Branch 207 IFNULL L1724 - false: 925
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: I4 Branch 216 IFNONNULL L1974 - true: 3837
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 156 IFNE L1446 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - false: 1604
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: root-Branch: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 916
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I27 Branch 207 IFNULL L1724 - true: 925
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - false: 5753
Number of times BBC is called for com.google.javascript.rhino.Node.isContinue()Z: I5 Branch 234 IF_ICMPNE L2267 - false: 28146
Number of times BBC is called for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: I5 Branch 115 IF_ICMPNE L912 - false: 10029
Number of times BBC is called for com.google.javascript.rhino.Node.isScript()Z: I5 Branch 266 IF_ICMPNE L2395 - false: 34877
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I18 Branch 51 IFEQ L478 - true: 146
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - true: 5753
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: root-Branch: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - false: 4122
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 692: 99
Number of times BBC is called for com.google.javascript.rhino.Node.isScript()Z: I5 Branch 266 IF_ICMPNE L2395 - true: 4603
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.iterator()Ljava/util/Iterator;: Line 1362: 45
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I74 Branch 49 IFNONNULL L425 - true: 27
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 196 LOOKUPSWITCH L1616 Case 38 - true: 6680
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 214 IFNONNULL L1813 - true: 8814
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: root-Branch: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isLabel()Z: Line 2343: 4603
Number of times BBC is called for com.google.javascript.rhino.Node.isString()Z: Line 2403: 317
Number of times BBC is called for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - false: 424
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - true: 1994
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 675: 99
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I12 Branch 62 IFNULL L576 - false: 9387
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 676: 99
Number of times BBC is called for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - true: 1495
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 601: 136
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 604: 136
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: Line 344: 43391
Number of times BBC is called for com.google.javascript.rhino.Node.isName()Z: I5 Branch 255 IF_ICMPNE L2351 - false: 14986
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I12 Branch 62 IFNULL L576 - true: 8782
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 24 TABLESWITCH L114 Case 52 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: root-Branch: 538
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 24 TABLESWITCH L114 Case 52 - true: 366
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTree()Ljava/lang/String;: root-Branch: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isOr()Z: Line 2379: 429
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 596: 136
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 729: 6232
Number of times BBC is called for com.google.javascript.rhino.Node.areBitFlagsSet(II)Z: I6 Branch 221 IF_ICMPNE L2174 - false: 3093
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 598: 136
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 196 LOOKUPSWITCH L1616 Case 38 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 15 TABLESWITCH L114 Case 43 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 731: 6352
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 597: 136
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 600: 136
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 599: 136
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 734: 6352
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I32 Branch 119 IF_ICMPNE L956 - true: 21
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 735: 6352
Number of times BBC is called for com.google.javascript.rhino.Node.isReturn()Z: I5 Branch 265 IF_ICMPNE L2391 - false: 276
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 736: 6352
Number of times BBC is called for com.google.javascript.rhino.Node.isBlock()Z: I5 Branch 227 IF_ICMPNE L2239 - false: 5744
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L114 Case 34 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 15 TABLESWITCH L114 Case 43 - true: 2119
Number of times BBC is called for com.google.javascript.rhino.Node.isNull()Z: I5 Branch 259 IF_ICMPNE L2367 - true: 2501
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I32 Branch 119 IF_ICMPNE L956 - false: 1625
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L114 Case 34 - true: 8518
Number of times BBC is called for com.google.javascript.rhino.Node.isNull()Z: I5 Branch 259 IF_ICMPNE L2367 - false: 3432
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 37 IFNONNULL L399 - true: 117
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: Line 1732: 2328
Number of times BBC is called for com.google.javascript.rhino.Node.isParamList()Z: Line 2383: 1058
Number of times BBC is called for com.google.javascript.rhino.Node.getJSDocInfo()Lcom/google/javascript/rhino/JSDocInfo;: root-Branch: 45
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I86 Branch 86 IFNULL L685 - false: 8483
Number of times BBC is called for com.google.javascript.rhino.Node.isLabel()Z: I5 Branch 253 IF_ICMPNE L2343 - false: 30155
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - true: 1090
Number of times BBC is called for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - false: 6717
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: Line 1720: 2328
Number of times BBC is called for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - true: 916
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: Line 1721: 2328
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: Line 1616: 219
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: Line 1403: 317
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L114 Case 36 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isLabel()Z: I5 Branch 253 IF_ICMPNE L2343 - true: 4603
Number of times BBC is called for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: I4 Branch 199 IFNULL L1634 - false: 184
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.<init>(Lcom/google/javascript/rhino/Node;)V: root-Branch: 219
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.getObjectValue()Ljava/lang/Object;: root-Branch: 219
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.getObjectValue()Ljava/lang/Object;: Line 312: 219
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: I4 Branch 286 IF_ACMPNE L223 - true: 45
Number of times BBC is called for com.google.javascript.rhino.Node.getNext()Lcom/google/javascript/rhino/Node;: Line 546: 45
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I39 Branch 159 IFNONNULL L1455 - true: 576
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L114 Case 36 - true: 1705
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I62 Branch 189 IF_ICMPNE L1586 - false: 1656
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: Line 1299: 83162
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: I4 Branch 286 IF_ACMPNE L223 - false: 155
Number of times BBC is called for com.google.javascript.rhino.Node.isObjectLit()Z: I5 Branch 261 IF_ICMPNE L2375 - true: 1212
Number of times BBC is called for com.google.javascript.rhino.Node.setCharno(I)V: root-Branch: 659
Number of times BBC is called for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: Line 925: 136
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I25 Branch 297 IFNONNULL L1867 - true: 2138
Number of times BBC is called for com.google.javascript.rhino.Node.isObjectLit()Z: I5 Branch 261 IF_ICMPNE L2375 - false: 16268
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 565: 219
Number of times BBC is called for com.google.javascript.rhino.Node.getDouble()D: I5 Branch 113 IF_ICMPNE L889 - false: 335
Number of times BBC is called for com.google.javascript.rhino.Node.isTry()Z: I5 Branch 274 IF_ICMPNE L2427 - false: 11993
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 570: 219
Number of times BBC is called for com.google.javascript.rhino.Node.getSortedPropTypes()[I: I33 Branch 112 IFNULL L878 - false: 43
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 568: 51
Number of times BBC is called for com.google.javascript.rhino.Node.setLineno(I)V: I9 Branch 137 IF_ICMPNE L1165 - true: 752
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: Line 1582: 3903
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 1 TABLESWITCH L114 Case 29 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: Line 1577: 136
Number of times BBC is called for com.google.javascript.rhino.Node.isTry()Z: I5 Branch 274 IF_ICMPNE L2427 - true: 45
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToBack(Lcom/google/javascript/rhino/Node;)V: Line 633: 219
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: Line 174: 538
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToBack(Lcom/google/javascript/rhino/Node;)V: Line 634: 219
Number of times BBC is called for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: Line 1944: 45
Number of times BBC is called for com.google.javascript.rhino.Node.isCast()Z: Line 2255: 219
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: Line 173: 538
Number of times BBC is called for com.google.javascript.rhino.Node.isNE()Z: Line 2355: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - false: 14682
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I73 Branch 85 IF_ACMPNE L680 - true: 17094
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I73 Branch 85 IF_ACMPNE L680 - false: 718
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 30 TABLESWITCH L114 Default-Case - true: 429
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 42 IFNONNULL L404 - true: 16633
Number of times BBC is called for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - true: 429
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I43 Branch 283 IFNE L179 - true: 19554
Number of times BBC is called for com.google.javascript.rhino.Node.isLabelName()Z: I5 Branch 254 IF_ICMPNE L2347 - false: 39578
Number of times BBC is called for com.google.javascript.rhino.Node.isRegExp()Z: I5 Branch 264 IF_ICMPNE L2387 - true: 219
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I5 Branch 217 IF_ICMPEQ L2026 - true: 11311
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: I9 Branch 155 IFNULL L1430 - true: 291
Number of times BBC is called for com.google.javascript.rhino.Node.isGetProp()Z: Line 2319: 1992
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 41 IFNONNULL L403 - true: 510
Number of times BBC is called for com.google.javascript.rhino.Node.getExistingIntProp(I)I: I9 Branch 107 IFNONNULL L838 - true: 15193
Number of times BBC is called for com.google.javascript.rhino.Node.isLabelName()Z: I5 Branch 254 IF_ICMPNE L2347 - true: 6867
Number of times BBC is called for com.google.javascript.rhino.Node.isFunction()Z: I5 Branch 244 IF_ICMPNE L2307 - false: 8769
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1682: 317
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.<init>(Lcom/google/javascript/rhino/Node$AncestorIterable;)V: root-Branch: 45
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: Line 317: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 74 IFNULL L640 - true: 5704
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.<init>(ILjava/lang/String;)V: I9 Branch 284 IF_ACMPNE L194 - false: 27
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1684: 560
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: root-Branch: 916
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 44 IFNONNULL L420 - true: 20299
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I17 Branch 146 IFNULL L1334 - true: 360
Number of times BBC is called for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 211 IFNULL L1764 - false: 9
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - false: 7331
Number of times BBC is called for com.google.javascript.rhino.Node.isRegExp()Z: I5 Branch 264 IF_ICMPNE L2387 - false: 6419
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - true: 6665
Number of times BBC is called for com.google.javascript.rhino.Node.isExprResult()Z: Line 2295: 7625
Number of times BBC is called for com.google.javascript.rhino.Node.isIn()Z: I5 Branch 250 IF_ICMPNE L2331 - false: 610
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I150 Branch 180 IFEQ L1553 - true: 96
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I43 Branch 283 IFNE L179 - false: 5459
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 30 TABLESWITCH L114 Default-Case - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isWhile()Z: Line 2443: 916
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1694: 17669
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 23 TABLESWITCH L114 Case 51 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1692: 17669
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I17 Branch 146 IFNULL L1334 - false: 360
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1693: 17669
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 190 LOOKUPSWITCH L1598 Case 33 - true: 908
Number of times BBC is called for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: Line 1943: 45
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 23 TABLESWITCH L114 Case 51 - true: 1022
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1687: 17669
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I4 Branch 293 IFEQ L2202 - false: 30107
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1688: 17669
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1689: 17669
Number of times BBC is called for com.google.javascript.rhino.Node.isDo()Z: Line 2287: 4074
Number of times BBC is called for com.google.javascript.rhino.Node.isDec()Z: Line 2275: 538
Number of times BBC is called for com.google.javascript.rhino.Node.getSortedPropTypes()[I: I11 Branch 111 IFNULL L873 - false: 41
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I26 Branch 83 IFNONNULL L671 - true: 1
Number of times BBC is called for com.google.javascript.rhino.Node.isTypeOf()Z: Line 2431: 136
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I11 Branch 166 IF_ICMPNE L1517 - true: 189
Number of times BBC is called for com.google.javascript.rhino.Node.isContinue()Z: Line 2267: 5150
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1019: 11557
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1018: 11557
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1015: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isAdd()Z: Line 2219: 5520
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1017: 219
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 213 IFNONNULL L1809 - true: 21534
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1016: 219
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1858: 219
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - true: 560
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I73 Branch 173 IF_ICMPEQ L1533 - false: 59
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - false: 17407
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 354: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.detachChildren()V: I7 Branch 202 IFNULL L1671 - false: 379
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: Line 114: 219
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I9 Branch 218 IF_ICMPNE L2026 - false: 4236
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L114 Case 37 - false: 312
Number of times BBC is called for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: Line 1319: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - true: 1992
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: I9 Branch 155 IFNULL L1430 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: I8 Branch 61 IFLE L566 - true: 219
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: I8 Branch 61 IFLE L566 - false: 283
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTree()Ljava/lang/String;: Line 1010: 219
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L114 Case 37 - true: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - false: 4210
Number of times BBC is called for com.google.javascript.rhino.Node.isAnd()Z: I5 Branch 223 IF_ICMPNE L2223 - false: 30135
Number of times BBC is called for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: Line 1986: 538
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: Line 1103: 45
Number of times BBC is called for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: Line 1985: 538
Number of times BBC is called for com.google.javascript.rhino.Node.isTrue()Z: Line 2423: 45
Number of times BBC is called for com.google.javascript.rhino.Node.lookupProperty(I)Lcom/google/javascript/rhino/Node$PropListItem;: I12 Branch 98 IF_ICMPEQ L764 - true: 23
Number of times BBC is called for com.google.javascript.rhino.Node.setJSDocInfo(Lcom/google/javascript/rhino/JSDocInfo;)Lcom/google/javascript/rhino/Node;: Line 1888: 219
Number of times BBC is called for com.google.javascript.rhino.Node.setJSDocInfo(Lcom/google/javascript/rhino/JSDocInfo;)Lcom/google/javascript/rhino/Node;: Line 1889: 219
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I30 Branch 45 IFNONNULL L421 - true: 69
Number of times BBC is called for com.google.javascript.rhino.Node.isNumber()Z: I5 Branch 260 IF_ICMPNE L2371 - true: 538
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: Line 1104: 45
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: root-Branch: 1992
Number of times BBC is called for com.google.javascript.rhino.Node.isNumber()Z: I5 Branch 260 IF_ICMPNE L2371 - false: 1609
Number of times BBC is called for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - true: 538
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - false: 1384
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I29 Branch 281 IFNE L177 - true: 1059
Number of times BBC is called for com.google.javascript.rhino.Node.hasOneChild()Z: I4 Branch 148 IFNULL L1393 - false: 214
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToBack(Lcom/google/javascript/rhino/Node;)V: I15 Branch 69 IFNONNULL L608 - true: 20419
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - true: 1313
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I29 Branch 281 IFNE L177 - false: 160
Number of times BBC is called for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1635: 184
Number of times BBC is called for com.google.javascript.rhino.Node.isCase()Z: I5 Branch 230 IF_ICMPNE L2251 - false: 20513
Number of times BBC is called for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1636: 184
Number of times BBC is called for com.google.javascript.rhino.Node.isCase()Z: I5 Branch 230 IF_ICMPNE L2251 - true: 4074
Number of times BBC is called for com.google.javascript.rhino.Node.getInputId()Lcom/google/javascript/rhino/InputId;: root-Branch: 136
Number of times BBC is called for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: I8 Branch 200 IFNULL L1647 - false: 243
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 203 IF_ACMPNE L1682 - false: 559
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I20 Branch 147 IFLE L1334 - true: 1801
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I25 Branch 297 IFNONNULL L1867 - false: 1834
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: I8 Branch 133 IFNONNULL L1104 - false: 45
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I35 Branch 158 IFNULL L1453 - false: 576
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I70 Branch 122 IF_ICMPNE L966 - false: 22
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 46 IFNONNULL L422 - true: 20214
Number of times BBC is called for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 79 IFNONNULL L660 - false: 1212
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 203 IF_ACMPNE L1682 - true: 317
Number of times BBC is called for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - false: 8042
Number of times BBC is called for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I9 Branch 87 IFNONNULL L699 - false: 362
Number of times BBC is called for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 79 IFNONNULL L660 - true: 12046
Number of times BBC is called for com.google.javascript.rhino.Node.getSourcePosition()I: Line 1160: 538
Number of times BBC is called for com.google.javascript.rhino.Node.isNumber()Z: Line 2371: 538
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I163 Branch 181 IFNULL L1556 - false: 767
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I48 Branch 121 IF_ICMPEQ L961 - true: 292
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I27 Branch 187 IF_ICMPNE L1580 - false: 2213
Number of times BBC is called for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I9 Branch 87 IFNONNULL L699 - true: 4030
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1978: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isThrow()Z: I5 Branch 272 IF_ICMPNE L2419 - false: 3699
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I11 Branch 72 IFNONNULL L621 - false: 505
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: I8 Branch 133 IFNONNULL L1104 - true: 19162
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1974: 219
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1977: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isThrow()Z: I5 Branch 272 IF_ICMPNE L2419 - true: 317
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - true: 63212
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - false: 63212
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 22 TABLESWITCH L114 Case 50 - true: 4156
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I121 Branch 177 IF_ICMPEQ L1544 - false: 7849
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - false: 29780
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 22 TABLESWITCH L114 Case 50 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I12 Branch 118 IFEQ L953 - true: 21
Number of times BBC is called for com.google.javascript.rhino.Node.isScript()Z: Line 2395: 4603
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 40 IFNONNULL L402 - true: 16678
Number of times BBC is called for com.google.javascript.rhino.Node.getLength()I: root-Branch: 45
Number of times BBC is called for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: Line 2076: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I40 Branch 170 IF_ICMPEQ L1527 - true: 1992
Number of times BBC is called for com.google.javascript.rhino.Node.setType(I)V: Line 531: 538
Number of times BBC is called for com.google.javascript.rhino.Node.setType(I)V: Line 530: 538
Number of times BBC is called for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - true: 659
Number of times BBC is called for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - false: 12815
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: I8 Branch 135 IFNONNULL L1149 - true: 23375
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I5 Branch 185 IF_ICMPNE L1577 - true: 136
Number of times BBC is called for com.google.javascript.rhino.Node.isLabelName()Z: Line 2347: 6867
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: root-Branch: 2328
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 192 LOOKUPSWITCH L1598 Case 42 - true: 790
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I7 Branch 131 IF_ICMPEQ L1029 - false: 38
Number of times BBC is called for com.google.javascript.rhino.Node.getBooleanProp(I)Z: I5 Branch 105 IFEQ L821 - false: 588
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I5 Branch 185 IF_ICMPNE L1577 - false: 1448
Number of times BBC is called for com.google.javascript.rhino.Node.isFromExterns()Z: Line 1128: 1058
Number of times BBC is called for com.google.javascript.rhino.Node.isFromExterns()Z: Line 1127: 1058
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I123 Branch 55 IFNONNULL L491 - true: 9
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 28 TABLESWITCH L114 Case 56 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: Line 1446: 219
Number of times BBC is called for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I29 Branch 60 IFNONNULL L557 - true: 1183
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 28 TABLESWITCH L114 Case 56 - true: 312
Number of times BBC is called for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - true: 4433
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 620: 136
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - false: 18258
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L114 Case 38 - true: 794
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 622: 505
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I173 Branch 183 IFNE L1558 - true: 5155
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 624: 292
Number of times BBC is called for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: Line 1241: 1212
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 625: 642
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 626: 642
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - true: 6680
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 627: 642
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 2 TABLESWITCH L114 Case 30 - true: 2201
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 630: 642
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L114 Case 38 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I87 Branch 123 IFEQ L970 - true: 66
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.<init>(ILjava/lang/String;II)V: I11 Branch 285 IF_ACMPNE L202 - false: 13
Number of times BBC is called for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 58 IF_ACMPNE L550 - false: 162
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 757: 63212
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: Line 339: 1992
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 21 TABLESWITCH L114 Case 49 - true: 1849
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 754: 63212
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 21 TABLESWITCH L114 Case 49 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 759: 63212
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 758: 63212
Number of times BBC is called for com.google.javascript.rhino.Node.isDefaultCase()Z: I5 Branch 237 IF_ICMPNE L2279 - false: 1494
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToBack(Lcom/google/javascript/rhino/Node;)V: I4 Branch 68 IFNONNULL L607 - true: 594
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 748: 1690
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 753: 63212
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I9 Branch 296 IFNONNULL L1861 - true: 2138
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 752: 63212
Number of times BBC is called for com.google.javascript.rhino.Node.isDefaultCase()Z: I5 Branch 237 IF_ICMPNE L2279 - true: 219
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 751: 1690
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 750: 1690
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 3 TABLESWITCH L114 Case 31 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: I7 Branch 220 IFNE L2166 - true: 52887
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 739: 45
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I9 Branch 296 IFNONNULL L1861 - false: 1834
Number of times BBC is called for com.google.javascript.rhino.Node.isDebugger()Z: Line 2271: 916
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 744: 155
Number of times BBC is called for com.google.javascript.rhino.Node.removeProp(I)V: I13 Branch 100 IF_ACMPEQ L786 - false: 673
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 742: 155
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1710: 13936
Number of times BBC is called for com.google.javascript.rhino.Node.getLength()I: Line 1132: 45
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1711: 13936
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 36 IFNONNULL L385 - true: 24992
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: Line 1294: 83162
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I20 Branch 34 IFNONNULL L381 - true: 25095
Number of times BBC is called for com.google.javascript.rhino.Node.setQuotedString()V: Line 2188: 1992
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I12 Branch 206 IFNULL L1721 - true: 2328
Number of times BBC is called for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 660: 1212
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I12 Branch 206 IFNULL L1721 - false: 3225
Number of times BBC is called for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 662: 1212
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: I8 Branch 135 IFNONNULL L1149 - false: 136
Number of times BBC is called for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 663: 43812
Number of times BBC is called for com.google.javascript.rhino.Node.isIf()Z: I5 Branch 249 IF_ICMPNE L2327 - false: 10767
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I146 Branch 56 IF_ACMPEQ L494 - false: 45435
Number of times BBC is called for com.google.javascript.rhino.Node.isCall()Z: Line 2247: 4433
Number of times BBC is called for com.google.javascript.rhino.Node.hasChildren()Z: Line 534: 1834
Number of times BBC is called for com.google.javascript.rhino.Node.isIf()Z: I5 Branch 249 IF_ICMPNE L2327 - true: 1362
Number of times BBC is called for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: root-Branch: 45
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - true: 9482
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 322: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;)Z: Line 1492: 916
Number of times BBC is called for com.google.javascript.rhino.Node.isVoid()Z: I5 Branch 277 IF_ICMPNE L2439 - true: 45
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - false: 21
Number of times BBC is called for com.google.javascript.rhino.Node.getProp(I)Ljava/lang/Object;: I9 Branch 104 IFNONNULL L814 - true: 76
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;)V: I20 Branch 32 IFNONNULL L367 - true: 17045
Number of times BBC is called for com.google.javascript.rhino.Node.isComma()Z: I5 Branch 233 IF_ICMPNE L2263 - false: 1117
Number of times BBC is called for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - false: 19689
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I3 Branch 145 IFLT L1332 - false: 545
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 191 LOOKUPSWITCH L1598 Case 38 - true: 1090
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: Line 575: 8782
Number of times BBC is called for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - true: 4074
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: Line 574: 8782
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - true: 6352
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I3 Branch 145 IFLT L1332 - true: 429
Number of times BBC is called for com.google.javascript.rhino.Node.isVoid()Z: I5 Branch 277 IF_ICMPNE L2439 - false: 15577
Number of times BBC is called for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: Line 912: 3362
Number of times BBC is called for com.google.javascript.rhino.Node.isStringKey()Z: I5 Branch 269 IF_ICMPNE L2407 - true: 782
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: Line 1430: 219
Number of times BBC is called for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I32 Branch 103 IF_ACMPEQ L804 - false: 11631
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: Line 1429: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isIf()Z: Line 2327: 1362
Number of times BBC is called for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: I4 Branch 298 IFNE L2076 - true: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isCall()Z: I5 Branch 229 IF_ICMPNE L2247 - false: 14884
Number of times BBC is called for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: I4 Branch 298 IFNE L2076 - false: 372
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I77 Branch 174 IF_ICMPNE L1533 - false: 3534
Number of times BBC is called for com.google.javascript.rhino.Node.isCatch()Z: Line 2259: 659
Number of times BBC is called for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I29 Branch 88 IF_ACMPNE L704 - true: 479
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 33 IFNONNULL L379 - true: 446
Number of times BBC is called for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I29 Branch 88 IF_ACMPNE L704 - false: 362
Number of times BBC is called for com.google.javascript.rhino.Node.isStringKey()Z: I5 Branch 269 IF_ICMPNE L2407 - false: 16599
Number of times BBC is called for com.google.javascript.rhino.Node.isCall()Z: I5 Branch 229 IF_ICMPNE L2247 - true: 4433
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I77 Branch 174 IF_ICMPNE L1533 - true: 59
Number of times BBC is called for com.google.javascript.rhino.Node.isEmpty()Z: I5 Branch 240 IF_ICMPNE L2291 - true: 1834
Number of times BBC is called for com.google.javascript.rhino.Node.isInstanceOf()Z: I5 Branch 252 IF_ICMPNE L2339 - false: 19495
Number of times BBC is called for com.google.javascript.rhino.Node.isInstanceOf()Z: I5 Branch 252 IF_ICMPNE L2339 - true: 1058
Number of times BBC is called for com.google.javascript.rhino.Node.isEmpty()Z: I5 Branch 240 IF_ICMPNE L2291 - false: 26983
Number of times BBC is called for com.google.javascript.rhino.Node.setType(I)V: root-Branch: 538
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: Line 1149: 136
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - false: 23242
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - false: 6352
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: Line 1148: 136
Number of times BBC is called for com.google.javascript.rhino.Node.isCast()Z: I5 Branch 231 IF_ICMPNE L2255 - false: 19579
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - true: 23242
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I15 Branch 66 IFNONNULL L597 - true: 23679
Number of times BBC is called for com.google.javascript.rhino.Node.isCast()Z: I5 Branch 231 IF_ICMPNE L2255 - true: 219
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 215 IFNULL L1828 - false: 585
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I200 Branch 129 IFNULL L998 - false: 21
Number of times BBC is called for com.google.javascript.rhino.Node.isTrue()Z: I5 Branch 273 IF_ICMPNE L2423 - false: 9798
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 2 TABLESWITCH L114 Case 30 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L114 Case 39 - true: 2758
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I15 Branch 66 IFNONNULL L597 - false: 136
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I4 Branch 65 IFNONNULL L596 - false: 136
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 1 TABLESWITCH L114 Case 29 - true: 596
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: Line 168: 2328
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - false: 30111
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: root-Branch: 43391
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: Line 167: 2328
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1657: 659
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L114 Case 39 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1658: 659
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I4 Branch 65 IFNONNULL L596 - true: 1007
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1661: 659
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1662: 659
Number of times BBC is called for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: Line 1116: 782
Number of times BBC is called for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: Line 1117: 782
Number of times BBC is called for com.google.javascript.rhino.Node.setJSDocInfo(Lcom/google/javascript/rhino/JSDocInfo;)Lcom/google/javascript/rhino/Node;: root-Branch: 219
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1663: 659
Number of times BBC is called for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - false: 11643
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 20 TABLESWITCH L114 Case 48 - true: 1447
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 20 TABLESWITCH L114 Case 48 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: root-Branch: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 29 TABLESWITCH L114 Case 57 - true: 2564
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 29 TABLESWITCH L114 Case 57 - false: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isTrue()Z: I5 Branch 273 IF_ICMPNE L2423 - true: 45
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - true: 30309
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I46 Branch 91 IF_ACMPNE L725 - false: 6228
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: root-Branch: 104424
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I39 Branch 159 IFNONNULL L1455 - false: 8237
Number of times BBC is called for com.google.javascript.rhino.Node.extractCharno(I)I: I4 Branch 143 IF_ICMPNE L1221 - true: 157
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;)V: I8 Branch 31 IFNONNULL L365 - true: 13
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I97 Branch 124 IF_ICMPEQ L972 - true: 12
Number of times BBC is called for com.google.javascript.rhino.Node.isThis()Z: Line 2415: 659
Number of times BBC is called for com.google.javascript.rhino.Node.setCharno(I)V: Line 1173: 659
Number of times BBC is called for com.google.javascript.rhino.Node.setCharno(I)V: Line 1172: 659
Number of times BBC is called for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I5 Branch 116 IF_ICMPEQ L925 - false: 136
Number of times BBC is called for com.google.javascript.rhino.Node.hasChildren()Z: I4 Branch 57 IFNULL L534 - true: 1834
Number of times BBC is called for com.google.javascript.rhino.Node.getIntProp(I)I: I9 Branch 106 IFNONNULL L830 - true: 941
Number of times BBC is called for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I5 Branch 116 IF_ICMPEQ L925 - true: 9137
Number of times BBC is called for com.google.javascript.rhino.Node.hasChildren()Z: I4 Branch 57 IFNULL L534 - false: 3273
Number of times BBC is called in total: 6802857
* Search finished after 604s and 622 generations, 289029 statements, best individual has fitness: 2808.0
* Minimizing test suite
[MASTER] 10:11:49.448 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 853
* Number of covered goals: 794
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 714
* Number of covered goals: 635
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 102
* Number of covered goals: 102
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 90%
* Total number of goals: 530
* Number of covered goals: 476
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 4536
* Number of covered goals: 2215
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 92%
* Total number of goals: 233
* Number of covered goals: 214
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 90%
* Total number of goals: 233
* Number of covered goals: 210
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 714
* Number of covered goals: 594
* Generated 853 tests with total length 10863
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 10:13:00.371 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.6891% of time used, but only 46/853 tests minimized), falling back to using all assertions
[MASTER] 10:13:19.199 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 14%
[MASTER] 10:13:30.870 [logback-1] WARN  TimeController - Phase ASSERTION_GENERATION lasted too long, 11 seconds more than allowed.
* Compiling and checking tests
[MASTER] 10:13:54.463 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_175_1628158434321/com/google/javascript/rhino/Node_175_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_175_1628158434321/com/google/javascript/rhino/Node_175_tmp__ESTest_scaffolding.java]]
[MASTER] 10:13:54.463 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Closure-110/build/classes:subjects/buggy-versions/Closure-110/lib/args4j.jar:subjects/buggy-versions/Closure-110/lib/guava.jar:subjects/buggy-versions/Closure-110/lib/json.jar:subjects/buggy-versions/Closure-110/lib/jsr305.jar:subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:subjects/buggy-versions/Closure-110/build/lib/rhino.jar:subjects/buggy-versions/Closure-110/lib/ant.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 10:13:54.463 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 10:13:54.473 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method contains(com.google.javascript.rhino.Node)
  location: variable iterable0 of type java.lang.Iterable<com.google.javascript.rhino.Node>: 1015
[MASTER] 10:13:54.475 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_175_1628158434321/com/google/javascript/rhino/Node_175_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Aug 05 10:13:54 GMT 2021
4:  */
5: 
6: package com.google.javascript.rhino;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.google.javascript.rhino.Node;
12: import org.evosuite.runtime.EvoRunner;
13: import org.evosuite.runtime.EvoRunnerParameters;
14: import org.junit.runner.RunWith;
15: 
16: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
17: public class Node_175_tmp__ESTest extends Node_175_tmp__ESTest_scaffolding {
18: 
19:   @Test(timeout = 4000)
20:   public void test0()  throws Throwable  {
21:       Node node0 = Node.newString("Function");
22:       assertNotNull(node0);
23:       assertFalse(node0.isIn());
24:       assertFalse(node0.isCase());
25:       assertFalse(node0.isFor());
26:       assertFalse(node0.isInc());
27:       assertFalse(node0.isVoid());
28:       assertFalse(node0.isEmpty());
29:       assertFalse(node0.isDelProp());
30:       assertFalse(node0.isIf());
31:       assertFalse(node0.isNE());
32:       assertFalse(node0.isTrue());
33:       assertFalse(node0.isSetterDef());
34:       assertFalse(node0.isBreak());
35:       assertFalse(node0.isGetProp());
36:       assertEquals(40, node0.getType());
37:       assertFalse(node0.isFalse());
38:       assertFalse(node0.isThrow());
39:       assertFalse(node0.isFunction());
40:       assertFalse(node0.isComma());
41:       assertFalse(node0.isCast());
42:       assertFalse(node0.isNot());
43:       assertFalse(node0.isAnd());
44:       assertFalse(node0.isObjectLit());
45:       assertFalse(node0.isDebugger());
46:       assertEquals((-1), node0.getSourcePosition());
47:       assertFalse(node0.isOr());
48:       assertFalse(node0.isLabel());
49:       assertFalse(node0.isAssignAdd());
50:       assertFalse(node0.isReturn());
51:       assertEquals((-1), node0.getLineno());
52:       assertFalse(node0.isDo());
53:       assertFalse(node0.isAssign());
54:       assertFalse(node0.isGetElem());
55:       assertFalse(node0.isContinue());
56:       assertFalse(node0.isWhile());
57:       assertFalse(node0.hasMoreThanOneChild());
58:       assertFalse(node0.isTypeOf());
59:       assertFalse(node0.isDec());
60:       assertFalse(node0.hasChildren());
61:       assertFalse(node0.isAdd());
62:       assertFalse(node0.isCall());
63:       assertFalse(node0.isExprResult());
64:       assertFalse(node0.isNew());
65:       assertFalse(node0.isName());
66:       assertFalse(node0.isNull());
67:       assertFalse(node0.isParamList());
68:       assertFalse(node0.isInstanceOf());
69:       assertFalse(node0.isCatch());
70:       assertFalse(node0.isWith());
71:       assertFalse(node0.isDefaultCase());
72:       assertFalse(node0.isVar());
73:       assertFalse(node0.isRegExp());
74:       assertFalse(node0.isHook());
75:       assertFalse(node0.isThis());
76:       assertEquals(0, node0.getChildCount());
77:       assertFalse(node0.isTry());
78:       assertFalse(node0.isBlock());
79:       assertTrue(node0.isString());
80:       assertFalse(node0.isSwitch());
81:       assertFalse(node0.isScript());
82:       assertFalse(node0.isArrayLit());
83:       assertFalse(node0.hasOneChild());
84:       assertFalse(node0.isLabelName());
85:       assertFalse(node0.isStringKey());
86:       assertFalse(node0.isNumber());
87:       assertFalse(node0.isGetterDef());
88:       assertEquals((-1), node0.getCharno());
89:       assertEquals(48, Node.DIRECTIVES);
90:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
91:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
92:       assertEquals(50, Node.FREE_CALL);
93:       assertEquals(36, Node.QUOTED_PROP);
94:       assertEquals(8, Node.FLAG_NO_THROWS);
95:       assertEquals(39, Node.EMPTY_BLOCK);
96:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
97:       assertEquals(55, Node.INFERRED_FUNCTION);
98:       assertEquals(53, Node.INPUT_ID);
99:       assertEquals(57, Node.LAST_PROP);
100:       assertEquals(54, Node.SLASH_V);
101:       assertEquals(43, Node.IS_CONSTANT_NAME);
102:       assertEquals(30, Node.VAR_ARGS_NAME);
103:       assertEquals(2, Node.POST_FLAG);
104:       assertEquals(40, Node.ORIGINALNAME_PROP);
105:       assertEquals(32, Node.INCRDECR_PROP);
106:       assertEquals(37, Node.OPT_ARG_NAME);
107:       assertEquals(51, Node.STATIC_SOURCE_FILE);
108:       assertEquals(12, Node.COLUMN_BITS);
109:       assertEquals(47, Node.IS_DISPATCHER);
110:       assertEquals(46, Node.IS_NAMESPACE);
111:       assertEquals(56, Node.CHANGE_TIME);
112:       assertEquals(29, Node.JSDOC_INFO_PROP);
113:       assertEquals(1, Node.DECR_FLAG);
114:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
115:       assertEquals(15, Node.NO_SIDE_EFFECTS);
116:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
117:       assertEquals(52, Node.LENGTH);
118:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
119:       assertEquals(57, Node.REFLECTED_OBJECT);
120:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
121:       assertEquals(49, Node.DIRECT_EVAL);
122:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
123:       assertEquals(4095, Node.COLUMN_MASK);
124:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
125:       
126:       Node node1 = Node.newString("Function", 38, 7);
127:       assertNotNull(node1);
128:       assertFalse(node1.isIn());
129:       assertFalse(node1.isSwitch());
130:       assertFalse(node1.isNE());
131:       assertFalse(node1.isIf());
132:       assertEquals(38, node1.getLineno());
133:       assertFalse(node1.isDelProp());
134:       assertEquals(7, node1.getCharno());
135:       assertFalse(node1.isFalse());
136:       assertFalse(node1.isThrow());
137:       assertFalse(node1.isTrue());
138:       assertFalse(node1.isDefaultCase());
139:       assertFalse(node1.isEmpty());
140:       assertFalse(node1.isInc());
141:       assertFalse(node1.isCatch());
142:       assertEquals(0, node1.getChildCount());
143:       assertFalse(node1.isThis());
144:       assertFalse(node1.isParamList());
145:       assertFalse(node1.isRegExp());
146:       assertFalse(node1.isWith());
147:       assertFalse(node1.isInstanceOf());
148:       assertFalse(node1.isArrayLit());
149:       assertFalse(node1.hasOneChild());
150:       assertFalse(node1.isStringKey());
151:       assertFalse(node1.isHook());
152:       assertFalse(node1.isFor());
153:       assertFalse(node1.isBlock());
154:       assertFalse(node1.isNumber());
155:       assertFalse(node1.isGetterDef());
156:       assertEquals(155655, node1.getSourcePosition());
157:       assertTrue(node1.isString());
158:       assertFalse(node1.isTry());
159:       assertFalse(node1.isCase());
160:       assertFalse(node1.isScript());
161:       assertFalse(node1.hasMoreThanOneChild());
162:       assertFalse(node1.isContinue());
163:       assertFalse(node1.isOr());
164:       assertFalse(node1.isLabel());
165:       assertFalse(node1.isAssignAdd());
166:       assertFalse(node1.isWhile());
167:       assertFalse(node1.isReturn());
168:       assertFalse(node1.isDec());
169:       assertFalse(node1.isTypeOf());
170:       assertFalse(node1.isLabelName());
171:       assertFalse(node1.isGetElem());
172:       assertFalse(node1.isVar());
173:       assertFalse(node1.isCast());
174:       assertFalse(node1.isName());
175:       assertFalse(node1.isNull());
176:       assertFalse(node1.isSetterDef());
177:       assertFalse(node1.isDo());
178:       assertFalse(node1.isNew());
179:       assertFalse(node1.isAdd());
180:       assertFalse(node1.isAnd());
181:       assertFalse(node1.isObjectLit());
182:       assertFalse(node1.isNot());
183:       assertEquals(40, node1.getType());
184:       assertFalse(node1.isComma());
185:       assertFalse(node1.isVoid());
186:       assertFalse(node1.isFunction());
187:       assertFalse(node1.isBreak());
188:       assertFalse(node1.isCall());
189:       assertFalse(node1.isExprResult());
190:       assertFalse(node1.isAssign());
191:       assertFalse(node1.hasChildren());
192:       assertFalse(node1.isDebugger());
193:       assertFalse(node1.isGetProp());
194:       assertEquals(55, Node.INFERRED_FUNCTION);
195:       assertEquals(4095, Node.COLUMN_MASK);
196:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
197:       assertEquals(8, Node.FLAG_NO_THROWS);
198:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
199:       assertEquals(39, Node.EMPTY_BLOCK);
200:       assertEquals(53, Node.INPUT_ID);
201:       assertEquals(40, Node.ORIGINALNAME_PROP);
202:       assertEquals(50, Node.FREE_CALL);
203:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
204:       assertEquals(43, Node.IS_CONSTANT_NAME);
205:       assertEquals(54, Node.SLASH_V);
206:       assertEquals(12, Node.COLUMN_BITS);
207:       assertEquals(51, Node.STATIC_SOURCE_FILE);
208:       assertEquals(46, Node.IS_NAMESPACE);
209:       assertEquals(30, Node.VAR_ARGS_NAME);
210:       assertEquals(2, Node.POST_FLAG);
211:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
212:       assertEquals(47, Node.IS_DISPATCHER);
213:       assertEquals(15, Node.NO_SIDE_EFFECTS);
214:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
215:       assertEquals(1, Node.DECR_FLAG);
216:       assertEquals(57, Node.LAST_PROP);
217:       assertEquals(32, Node.INCRDECR_PROP);
218:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
219:       assertEquals(57, Node.REFLECTED_OBJECT);
220:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
221:       assertEquals(29, Node.JSDOC_INFO_PROP);
222:       assertEquals(52, Node.LENGTH);
223:       assertEquals(37, Node.OPT_ARG_NAME);
224:       assertEquals(56, Node.CHANGE_TIME);
225:       assertEquals(36, Node.QUOTED_PROP);
226:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
227:       assertEquals(49, Node.DIRECT_EVAL);
228:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
229:       assertEquals(48, Node.DIRECTIVES);
230:       assertNotSame(node1, node0);
231:       assertFalse(node1.equals((Object)node0));
232:       
233:       boolean boolean0 = node0.isEquivalentToTyped(node1);
234:       assertTrue(boolean0);
235:       assertFalse(node0.isIn());
236:       assertFalse(node0.isCase());
237:       assertFalse(node0.isFor());
238:       assertFalse(node0.isInc());
239:       assertFalse(node0.isVoid());
240:       assertFalse(node0.isEmpty());
241:       assertFalse(node0.isDelProp());
242:       assertFalse(node0.isIf());
243:       assertFalse(node0.isNE());
244:       assertFalse(node0.isTrue());
245:       assertFalse(node0.isSetterDef());
246:       assertFalse(node0.isBreak());
247:       assertFalse(node0.isGetProp());
248:       assertEquals(40, node0.getType());
249:       assertFalse(node0.isFalse());
250:       assertFalse(node0.isThrow());
251:       assertFalse(node0.isFunction());
252:       assertFalse(node0.isComma());
253:       assertFalse(node0.isCast());
254:       assertFalse(node0.isNot());
255:       assertFalse(node0.isAnd());
256:       assertFalse(node0.isObjectLit());
257:       assertFalse(node0.isDebugger());
258:       assertEquals((-1), node0.getSourcePosition());
259:       assertFalse(node0.isOr());
260:       assertFalse(node0.isLabel());
261:       assertFalse(node0.isAssignAdd());
262:       assertFalse(node0.isReturn());
263:       assertEquals((-1), node0.getLineno());
264:       assertFalse(node0.isDo());
265:       assertFalse(node0.isAssign());
266:       assertFalse(node0.isGetElem());
267:       assertFalse(node0.isContinue());
268:       assertFalse(node0.isWhile());
269:       assertFalse(node0.hasMoreThanOneChild());
270:       assertFalse(node0.isTypeOf());
271:       assertFalse(node0.isDec());
272:       assertFalse(node0.hasChildren());
273:       assertFalse(node0.isAdd());
274:       assertFalse(node0.isCall());
275:       assertFalse(node0.isExprResult());
276:       assertFalse(node0.isNew());
277:       assertFalse(node0.isName());
278:       assertFalse(node0.isNull());
279:       assertFalse(node0.isParamList());
280:       assertFalse(node0.isInstanceOf());
281:       assertFalse(node0.isCatch());
282:       assertFalse(node0.isWith());
283:       assertFalse(node0.isDefaultCase());
284:       assertFalse(node0.isVar());
285:       assertFalse(node0.isRegExp());
286:       assertFalse(node0.isHook());
287:       assertFalse(node0.isThis());
288:       assertEquals(0, node0.getChildCount());
289:       assertFalse(node0.isTry());
290:       assertFalse(node0.isBlock());
291:       assertTrue(node0.isString());
292:       assertFalse(node0.isSwitch());
293:       assertFalse(node0.isScript());
294:       assertFalse(node0.isArrayLit());
295:       assertFalse(node0.hasOneChild());
296:       assertFalse(node0.isLabelName());
297:       assertFalse(node0.isStringKey());
298:       assertFalse(node0.isNumber());
299:       assertFalse(node0.isGetterDef());
300:       assertEquals((-1), node0.getCharno());
301:       assertFalse(node1.isIn());
302:       assertFalse(node1.isSwitch());
303:       assertFalse(node1.isNE());
304:       assertFalse(node1.isIf());
305:       assertEquals(38, node1.getLineno());
306:       assertFalse(node1.isDelProp());
307:       assertEquals(7, node1.getCharno());
308:       assertFalse(node1.isFalse());
309:       assertFalse(node1.isThrow());
310:       assertFalse(node1.isTrue());
311:       assertFalse(node1.isDefaultCase());
312:       assertFalse(node1.isEmpty());
313:       assertFalse(node1.isInc());
314:       assertFalse(node1.isCatch());
315:       assertEquals(0, node1.getChildCount());
316:       assertFalse(node1.isThis());
317:       assertFalse(node1.isParamList());
318:       assertFalse(node1.isRegExp());
319:       assertFalse(node1.isWith());
320:       assertFalse(node1.isInstanceOf());
321:       assertFalse(node1.isArrayLit());
322:       assertFalse(node1.hasOneChild());
323:       assertFalse(node1.isStringKey());
324:       assertFalse(node1.isHook());
325:       assertFalse(node1.isFor());
326:       assertFalse(node1.isBlock());
327:       assertFalse(node1.isNumber());
328:       assertFalse(node1.isGetterDef());
329:       assertEquals(155655, node1.getSourcePosition());
330:       assertTrue(node1.isString());
331:       assertFalse(node1.isTry());
332:       assertFalse(node1.isCase());
333:       assertFalse(node1.isScript());
334:       assertFalse(node1.hasMoreThanOneChild());
335:       assertFalse(node1.isContinue());
336:       assertFalse(node1.isOr());
337:       assertFalse(node1.isLabel());
338:       assertFalse(node1.isAssignAdd());
339:       assertFalse(node1.isWhile());
340:       assertFalse(node1.isReturn());
341:       assertFalse(node1.isDec());
342:       assertFalse(node1.isTypeOf());
343:       assertFalse(node1.isLabelName());
344:       assertFalse(node1.isGetElem());
345:       assertFalse(node1.isVar());
346:       assertFalse(node1.isCast());
347:       assertFalse(node1.isName());
348:       assertFalse(node1.isNull());
349:       assertFalse(node1.isSetterDef());
350:       assertFalse(node1.isDo());
351:       assertFalse(node1.isNew());
352:       assertFalse(node1.isAdd());
353:       assertFalse(node1.isAnd());
354:       assertFalse(node1.isObjectLit());
355:       assertFalse(node1.isNot());
356:       assertEquals(40, node1.getType());
357:       assertFalse(node1.isComma());
358:       assertFalse(node1.isVoid());
359:       assertFalse(node1.isFunction());
360:       assertFalse(node1.isBreak());
361:       assertFalse(node1.isCall());
362:       assertFalse(node1.isExprResult());
363:       assertFalse(node1.isAssign());
364:       assertFalse(node1.hasChildren());
365:       assertFalse(node1.isDebugger());
366:       assertFalse(node1.isGetProp());
367:       assertEquals(48, Node.DIRECTIVES);
368:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
369:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
370:       assertEquals(50, Node.FREE_CALL);
371:       assertEquals(36, Node.QUOTED_PROP);
372:       assertEquals(8, Node.FLAG_NO_THROWS);
373:       assertEquals(39, Node.EMPTY_BLOCK);
374:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
375:       assertEquals(55, Node.INFERRED_FUNCTION);
376:       assertEquals(53, Node.INPUT_ID);
377:       assertEquals(57, Node.LAST_PROP);
378:       assertEquals(54, Node.SLASH_V);
379:       assertEquals(43, Node.IS_CONSTANT_NAME);
380:       assertEquals(30, Node.VAR_ARGS_NAME);
381:       assertEquals(2, Node.POST_FLAG);
382:       assertEquals(40, Node.ORIGINALNAME_PROP);
383:       assertEquals(32, Node.INCRDECR_PROP);
384:       assertEquals(37, Node.OPT_ARG_NAME);
385:       assertEquals(51, Node.STATIC_SOURCE_FILE);
386:       assertEquals(12, Node.COLUMN_BITS);
387:       assertEquals(47, Node.IS_DISPATCHER);
388:       assertEquals(46, Node.IS_NAMESPACE);
389:       assertEquals(56, Node.CHANGE_TIME);
390:       assertEquals(29, Node.JSDOC_INFO_PROP);
391:       assertEquals(1, Node.DECR_FLAG);
392:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
393:       assertEquals(15, Node.NO_SIDE_EFFECTS);
394:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
395:       assertEquals(52, Node.LENGTH);
396:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
397:       assertEquals(57, Node.REFLECTED_OBJECT);
398:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
399:       assertEquals(49, Node.DIRECT_EVAL);
400:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
401:       assertEquals(4095, Node.COLUMN_MASK);
402:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
403:       assertEquals(55, Node.INFERRED_FUNCTION);
404:       assertEquals(4095, Node.COLUMN_MASK);
405:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
406:       assertEquals(8, Node.FLAG_NO_THROWS);
407:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
408:       assertEquals(39, Node.EMPTY_BLOCK);
409:       assertEquals(53, Node.INPUT_ID);
410:       assertEquals(40, Node.ORIGINALNAME_PROP);
411:       assertEquals(50, Node.FREE_CALL);
412:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
413:       assertEquals(43, Node.IS_CONSTANT_NAME);
414:       assertEquals(54, Node.SLASH_V);
415:       assertEquals(12, Node.COLUMN_BITS);
416:       assertEquals(51, Node.STATIC_SOURCE_FILE);
417:       assertEquals(46, Node.IS_NAMESPACE);
418:       assertEquals(30, Node.VAR_ARGS_NAME);
419:       assertEquals(2, Node.POST_FLAG);
420:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
421:       assertEquals(47, Node.IS_DISPATCHER);
422:       assertEquals(15, Node.NO_SIDE_EFFECTS);
423:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
424:       assertEquals(1, Node.DECR_FLAG);
425:       assertEquals(57, Node.LAST_PROP);
426:       assertEquals(32, Node.INCRDECR_PROP);
427:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
428:       assertEquals(57, Node.REFLECTED_OBJECT);
429:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
430:       assertEquals(29, Node.JSDOC_INFO_PROP);
431:       assertEquals(52, Node.LENGTH);
432:       assertEquals(37, Node.OPT_ARG_NAME);
433:       assertEquals(56, Node.CHANGE_TIME);
434:       assertEquals(36, Node.QUOTED_PROP);
435:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
436:       assertEquals(49, Node.DIRECT_EVAL);
437:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
438:       assertEquals(48, Node.DIRECTIVES);
439:       assertNotSame(node0, node1);
440:       assertNotSame(node1, node0);
441:       assertFalse(node0.equals((Object)node1));
442:       assertFalse(node1.equals((Object)node0));
443:       
444:       node1.setOptionalArg(true);
445:       assertFalse(node1.isIn());
446:       assertFalse(node1.isSwitch());
447:       assertFalse(node1.isNE());
448:       assertFalse(node1.isIf());
449:       assertEquals(38, node1.getLineno());
450:       assertFalse(node1.isDelProp());
451:       assertEquals(7, node1.getCharno());
452:       assertFalse(node1.isFalse());
453:       assertFalse(node1.isThrow());
454:       assertFalse(node1.isTrue());
455:       assertFalse(node1.isDefaultCase());
456:       assertFalse(node1.isEmpty());
457:       assertFalse(node1.isInc());
458:       assertFalse(node1.isCatch());
459:       assertEquals(0, node1.getChildCount());
460:       assertFalse(node1.isThis());
461:       assertFalse(node1.isParamList());
462:       assertFalse(node1.isRegExp());
463:       assertFalse(node1.isWith());
464:       assertFalse(node1.isInstanceOf());
465:       assertFalse(node1.isArrayLit());
466:       assertFalse(node1.hasOneChild());
467:       assertFalse(node1.isStringKey());
468:       assertFalse(node1.isHook());
469:       assertFalse(node1.isFor());
470:       assertFalse(node1.isBlock());
471:       assertFalse(node1.isNumber());
472:       assertFalse(node1.isGetterDef());
473:       assertEquals(155655, node1.getSourcePosition());
474:       assertTrue(node1.isString());
475:       assertFalse(node1.isTry());
476:       assertFalse(node1.isCase());
477:       assertFalse(node1.isScript());
478:       assertFalse(node1.hasMoreThanOneChild());
479:       assertFalse(node1.isContinue());
480:       assertFalse(node1.isOr());
481:       assertFalse(node1.isLabel());
482:       assertFalse(node1.isAssignAdd());
483:       assertFalse(node1.isWhile());
484:       assertFalse(node1.isReturn());
485:       assertFalse(node1.isDec());
486:       assertFalse(node1.isTypeOf());
487:       assertFalse(node1.isLabelName());
488:       assertFalse(node1.isGetElem());
489:       assertFalse(node1.isVar());
490:       assertFalse(node1.isCast());
491:       assertFalse(node1.isName());
492:       assertFalse(node1.isNull());
493:       assertFalse(node1.isSetterDef());
494:       assertFalse(node1.isDo());
495:       assertFalse(node1.isNew());
496:       assertFalse(node1.isAdd());
497:       assertFalse(node1.isAnd());
498:       assertFalse(node1.isObjectLit());
499:       assertFalse(node1.isNot());
500:       assertEquals(40, node1.getType());
501:       assertFalse(node1.isComma());
502:       assertFalse(node1.isVoid());
503:       assertFalse(node1.isFunction());
504:       assertFalse(node1.isBreak());
505:       assertFalse(node1.isCall());
506:       assertFalse(node1.isExprResult());
507:       assertFalse(node1.isAssign());
508:       assertFalse(node1.hasChildren());
509:       assertFalse(node1.isDebugger());
510:       assertFalse(node1.isGetProp());
511:       assertEquals(55, Node.INFERRED_FUNCTION);
512:       assertEquals(4095, Node.COLUMN_MASK);
513:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
514:       assertEquals(8, Node.FLAG_NO_THROWS);
515:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
516:       assertEquals(39, Node.EMPTY_BLOCK);
517:       assertEquals(53, Node.INPUT_ID);
518:       assertEquals(40, Node.ORIGINALNAME_PROP);
519:       assertEquals(50, Node.FREE_CALL);
520:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
521:       assertEquals(43, Node.IS_CONSTANT_NAME);
522:       assertEquals(54, Node.SLASH_V);
523:       assertEquals(12, Node.COLUMN_BITS);
524:       assertEquals(51, Node.STATIC_SOURCE_FILE);
525:       assertEquals(46, Node.IS_NAMESPACE);
526:       assertEquals(30, Node.VAR_ARGS_NAME);
527:       assertEquals(2, Node.POST_FLAG);
528:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
529:       assertEquals(47, Node.IS_DISPATCHER);
530:       assertEquals(15, Node.NO_SIDE_EFFECTS);
531:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
532:       assertEquals(1, Node.DECR_FLAG);
533:       assertEquals(57, Node.LAST_PROP);
534:       assertEquals(32, Node.INCRDECR_PROP);
535:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
536:       assertEquals(57, Node.REFLECTED_OBJECT);
537:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
538:       assertEquals(29, Node.JSDOC_INFO_PROP);
539:       assertEquals(52, Node.LENGTH);
540:       assertEquals(37, Node.OPT_ARG_NAME);
541:       assertEquals(56, Node.CHANGE_TIME);
542:       assertEquals(36, Node.QUOTED_PROP);
543:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
544:       assertEquals(49, Node.DIRECT_EVAL);
545:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
546:       assertEquals(48, Node.DIRECTIVES);
547:       assertNotSame(node1, node0);
548:       assertFalse(node1.equals((Object)node0));
549:       
550:       boolean boolean1 = node0.isWith();
551:       assertFalse(boolean1);
552:       assertFalse(node0.isIn());
553:       assertFalse(node0.isCase());
554:       assertFalse(node0.isFor());
555:       assertFalse(node0.isInc());
556:       assertFalse(node0.isVoid());
557:       assertFalse(node0.isEmpty());
558:       assertFalse(node0.isDelProp());
559:       assertFalse(node0.isIf());
560:       assertFalse(node0.isNE());
561:       assertFalse(node0.isTrue());
562:       assertFalse(node0.isSetterDef());
563:       assertFalse(node0.isBreak());
564:       assertFalse(node0.isGetProp());
565:       assertEquals(40, node0.getType());
566:       assertFalse(node0.isFalse());
567:       assertFalse(node0.isThrow());
568:       assertFalse(node0.isFunction());
569:       assertFalse(node0.isComma());
570:       assertFalse(node0.isCast());
571:       assertFalse(node0.isNot());
572:       assertFalse(node0.isAnd());
573:       assertFalse(node0.isObjectLit());
574:       assertFalse(node0.isDebugger());
575:       assertEquals((-1), node0.getSourcePosition());
576:       assertFalse(node0.isOr());
577:       assertFalse(node0.isLabel());
578:       assertFalse(node0.isAssignAdd());
579:       assertFalse(node0.isReturn());
580:       assertEquals((-1), node0.getLineno());
581:       assertFalse(node0.isDo());
582:       assertFalse(node0.isAssign());
583:       assertFalse(node0.isGetElem());
584:       assertFalse(node0.isContinue());
585:       assertFalse(node0.isWhile());
586:       assertFalse(node0.hasMoreThanOneChild());
587:       assertFalse(node0.isTypeOf());
588:       assertFalse(node0.isDec());
589:       assertFalse(node0.hasChildren());
590:       assertFalse(node0.isAdd());
591:       assertFalse(node0.isCall());
592:       assertFalse(node0.isExprResult());
593:       assertFalse(node0.isNew());
594:       assertFalse(node0.isName());
595:       assertFalse(node0.isNull());
596:       assertFalse(node0.isParamList());
597:       assertFalse(node0.isInstanceOf());
598:       assertFalse(node0.isCatch());
599:       assertFalse(node0.isWith());
600:       assertFalse(node0.isDefaultCase());
601:       assertFalse(node0.isVar());
602:       assertFalse(node0.isRegExp());
603:       assertFalse(node0.isHook());
604:       assertFalse(node0.isThis());
605:       assertEquals(0, node0.getChildCount());
606:       assertFalse(node0.isTry());
607:       assertFalse(node0.isBlock());
608:       assertTrue(node0.isString());
609:       assertFalse(node0.isSwitch());
610:       assertFalse(node0.isScript());
611:       assertFalse(node0.isArrayLit());
612:       assertFalse(node0.hasOneChild());
613:       assertFalse(node0.isLabelName());
614:       assertFalse(node0.isStringKey());
615:       assertFalse(node0.isNumber());
616:       assertFalse(node0.isGetterDef());
617:       assertEquals((-1), node0.getCharno());
618:       assertEquals(48, Node.DIRECTIVES);
619:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
620:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
621:       assertEquals(50, Node.FREE_CALL);
622:       assertEquals(36, Node.QUOTED_PROP);
623:       assertEquals(8, Node.FLAG_NO_THROWS);
624:       assertEquals(39, Node.EMPTY_BLOCK);
625:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
626:       assertEquals(55, Node.INFERRED_FUNCTION);
627:       assertEquals(53, Node.INPUT_ID);
628:       assertEquals(57, Node.LAST_PROP);
629:       assertEquals(54, Node.SLASH_V);
630:       assertEquals(43, Node.IS_CONSTANT_NAME);
631:       assertEquals(30, Node.VAR_ARGS_NAME);
632:       assertEquals(2, Node.POST_FLAG);
633:       assertEquals(40, Node.ORIGINALNAME_PROP);
634:       assertEquals(32, Node.INCRDECR_PROP);
635:       assertEquals(37, Node.OPT_ARG_NAME);
636:       assertEquals(51, Node.STATIC_SOURCE_FILE);
637:       assertEquals(12, Node.COLUMN_BITS);
638:       assertEquals(47, Node.IS_DISPATCHER);
639:       assertEquals(46, Node.IS_NAMESPACE);
640:       assertEquals(56, Node.CHANGE_TIME);
641:       assertEquals(29, Node.JSDOC_INFO_PROP);
642:       assertEquals(1, Node.DECR_FLAG);
643:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
644:       assertEquals(15, Node.NO_SIDE_EFFECTS);
645:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
646:       assertEquals(52, Node.LENGTH);
647:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
648:       assertEquals(57, Node.REFLECTED_OBJECT);
649:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
650:       assertEquals(49, Node.DIRECT_EVAL);
651:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
652:       assertEquals(4095, Node.COLUMN_MASK);
653:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
654:       assertNotSame(node0, node1);
655:       assertFalse(node0.equals((Object)node1));
656:       assertFalse(boolean1 == boolean0);
657:       
658:       Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
659:       assertNotNull(node_SideEffectFlags0);
660:       assertEquals(2, node_SideEffectFlags0.valueOf());
661:       assertFalse(node_SideEffectFlags0.areAllFlagsSet());
662:       
663:       node_SideEffectFlags0.clearSideEffectFlags();
664:       assertEquals(15, node_SideEffectFlags0.valueOf());
665:       assertFalse(node_SideEffectFlags0.areAllFlagsSet());
666:       
667:       Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
668:       assertNotNull(node_SideEffectFlags1);
669:       assertEquals(11, node_SideEffectFlags0.valueOf());
670:       assertFalse(node_SideEffectFlags0.areAllFlagsSet());
671:       assertFalse(node_SideEffectFlags1.areAllFlagsSet());
672:       assertEquals(11, node_SideEffectFlags1.valueOf());
673:       assertSame(node_SideEffectFlags0, node_SideEffectFlags1);
674:       assertSame(node_SideEffectFlags1, node_SideEffectFlags0);
675:       
676:       boolean boolean2 = node1.wasEmptyNode();
677:       assertFalse(boolean2);
678:       assertFalse(node1.isIn());
679:       assertFalse(node1.isSwitch());
680:       assertFalse(node1.isNE());
681:       assertFalse(node1.isIf());
682:       assertEquals(38, node1.getLineno());
683:       assertFalse(node1.isDelProp());
684:       assertEquals(7, node1.getCharno());
685:       assertFalse(node1.isFalse());
686:       assertFalse(node1.isThrow());
687:       assertFalse(node1.isTrue());
688:       assertFalse(node1.isDefaultCase());
689:       assertFalse(node1.isEmpty());
690:       assertFalse(node1.isInc());
691:       assertFalse(node1.isCatch());
692:       assertEquals(0, node1.getChildCount());
693:       assertFalse(node1.isThis());
694:       assertFalse(node1.isParamList());
695:       assertFalse(node1.isRegExp());
696:       assertFalse(node1.isWith());
697:       assertFalse(node1.isInstanceOf());
698:       assertFalse(node1.isArrayLit());
699:       assertFalse(node1.hasOneChild());
700:       assertFalse(node1.isStringKey());
701:       assertFalse(node1.isHook());
702:       assertFalse(node1.isFor());
703:       assertFalse(node1.isBlock());
704:       assertFalse(node1.isNumber());
705:       assertFalse(node1.isGetterDef());
706:       assertEquals(155655, node1.getSourcePosition());
707:       assertTrue(node1.isString());
708:       assertFalse(node1.isTry());
709:       assertFalse(node1.isCase());
710:       assertFalse(node1.isScript());
711:       assertFalse(node1.hasMoreThanOneChild());
712:       assertFalse(node1.isContinue());
713:       assertFalse(node1.isOr());
714:       assertFalse(node1.isLabel());
715:       assertFalse(node1.isAssignAdd());
716:       assertFalse(node1.isWhile());
717:       assertFalse(node1.isReturn());
718:       assertFalse(node1.isDec());
719:       assertFalse(node1.isTypeOf());
720:       assertFalse(node1.isLabelName());
721:       assertFalse(node1.isGetElem());
722:       assertFalse(node1.isVar());
723:       assertFalse(node1.isCast());
724:       assertFalse(node1.isName());
725:       assertFalse(node1.isNull());
726:       assertFalse(node1.isSetterDef());
727:       assertFalse(node1.isDo());
728:       assertFalse(node1.isNew());
729:       assertFalse(node1.isAdd());
730:       assertFalse(node1.isAnd());
731:       assertFalse(node1.isObjectLit());
732:       assertFalse(node1.isNot());
733:       assertEquals(40, node1.getType());
734:       assertFalse(node1.isComma());
735:       assertFalse(node1.isVoid());
736:       assertFalse(node1.isFunction());
737:       assertFalse(node1.isBreak());
738:       assertFalse(node1.isCall());
739:       assertFalse(node1.isExprResult());
740:       assertFalse(node1.isAssign());
741:       assertFalse(node1.hasChildren());
742:       assertFalse(node1.isDebugger());
743:       assertFalse(node1.isGetProp());
744:       assertEquals(55, Node.INFERRED_FUNCTION);
745:       assertEquals(4095, Node.COLUMN_MASK);
746:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
747:       assertEquals(8, Node.FLAG_NO_THROWS);
748:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
749:       assertEquals(39, Node.EMPTY_BLOCK);
750:       assertEquals(53, Node.INPUT_ID);
751:       assertEquals(40, Node.ORIGINALNAME_PROP);
752:       assertEquals(50, Node.FREE_CALL);
753:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
754:       assertEquals(43, Node.IS_CONSTANT_NAME);
755:       assertEquals(54, Node.SLASH_V);
756:       assertEquals(12, Node.COLUMN_BITS);
757:       assertEquals(51, Node.STATIC_SOURCE_FILE);
758:       assertEquals(46, Node.IS_NAMESPACE);
759:       assertEquals(30, Node.VAR_ARGS_NAME);
760:       assertEquals(2, Node.POST_FLAG);
761:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
762:       assertEquals(47, Node.IS_DISPATCHER);
763:       assertEquals(15, Node.NO_SIDE_EFFECTS);
764:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
765:       assertEquals(1, Node.DECR_FLAG);
766:       assertEquals(57, Node.LAST_PROP);
767:       assertEquals(32, Node.INCRDECR_PROP);
768:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
769:       assertEquals(57, Node.REFLECTED_OBJECT);
770:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
771:       assertEquals(29, Node.JSDOC_INFO_PROP);
772:       assertEquals(52, Node.LENGTH);
773:       assertEquals(37, Node.OPT_ARG_NAME);
774:       assertEquals(56, Node.CHANGE_TIME);
775:       assertEquals(36, Node.QUOTED_PROP);
776:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
777:       assertEquals(49, Node.DIRECT_EVAL);
778:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
779:       assertEquals(48, Node.DIRECTIVES);
780:       assertNotSame(node1, node0);
781:       assertFalse(node1.equals((Object)node0));
782:       assertTrue(boolean2 == boolean1);
783:       assertFalse(boolean2 == boolean0);
784:       
785:       Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
786:       assertNotNull(node_SideEffectFlags2);
787:       assertEquals(9, node_SideEffectFlags0.valueOf());
788:       assertFalse(node_SideEffectFlags0.areAllFlagsSet());
789:       assertEquals(9, node_SideEffectFlags2.valueOf());
790:       assertFalse(node_SideEffectFlags2.areAllFlagsSet());
791:       assertSame(node_SideEffectFlags0, node_SideEffectFlags2);
792:       assertSame(node_SideEffectFlags0, node_SideEffectFlags1);
793:       assertSame(node_SideEffectFlags2, node_SideEffectFlags1);
794:       assertSame(node_SideEffectFlags2, node_SideEffectFlags0);
795:       
796:       Node node2 = Node.newNumber((double) 32, 48, 57);
797:       assertNotNull(node2);
798:       assertEquals(48, node2.getLineno());
799:       assertFalse(node2.hasOneChild());
800:       assertFalse(node2.isNot());
801:       assertFalse(node2.isObjectLit());
802:       assertFalse(node2.isScript());
803:       assertFalse(node2.isLabel());
804:       assertFalse(node2.isAssignAdd());
805:       assertFalse(node2.isAnd());
806:       assertFalse(node2.isLabelName());
807:       assertFalse(node2.isFalse());
808:       assertFalse(node2.isCast());
809:       assertFalse(node2.isContinue());
810:       assertFalse(node2.isBlock());
811:       assertFalse(node2.isSwitch());
812:       assertFalse(node2.isHook());
813:       assertFalse(node2.isThrow());
814:       assertFalse(node2.isStringKey());
815:       assertFalse(node2.isCase());
816:       assertEquals(57, node2.getCharno());
817:       assertFalse(node2.isInc());
818:       assertFalse(node2.isSetterDef());
819:       assertFalse(node2.isIn());
820:       assertFalse(node2.isNE());
821:       assertFalse(node2.isThis());
822:       assertFalse(node2.isIf());
823:       assertFalse(node2.isFor());
824:       assertEquals(39, node2.getType());
825:       assertFalse(node2.isWith());
826:       assertFalse(node2.isRegExp());
827:       assertFalse(node2.hasMoreThanOneChild());
828:       assertFalse(node2.isCatch());
829:       assertFalse(node2.isInstanceOf());
830:       assertFalse(node2.isTry());
831:       assertFalse(node2.isVoid());
832:       assertFalse(node2.isDebugger());
833:       assertFalse(node2.isTrue());
834:       assertFalse(node2.isDefaultCase());
835:       assertFalse(node2.isEmpty());
836:       assertFalse(node2.isGetterDef());
837:       assertEquals(196665, node2.getSourcePosition());
838:       assertEquals(0, node2.getChildCount());
839:       assertFalse(node2.isParamList());
840:       assertFalse(node2.isArrayLit());
841:       assertFalse(node2.isFunction());
842:       assertFalse(node2.isAdd());
843:       assertFalse(node2.isNew());
844:       assertFalse(node2.isVar());
845:       assertFalse(node2.isWhile());
846:       assertFalse(node2.isDo());
847:       assertFalse(node2.isString());
848:       assertFalse(node2.isOr());
849:       assertFalse(node2.isReturn());
850:       assertFalse(node2.isGetProp());
851:       assertTrue(node2.isNumber());
852:       assertFalse(node2.isComma());
853:       assertFalse(node2.isNull());
854:       assertFalse(node2.isAssign());
855:       assertFalse(node2.isName());
856:       assertFalse(node2.isGetElem());
857:       assertFalse(node2.isDelProp());
858:       assertFalse(node2.isBreak());
859:       assertFalse(node2.hasChildren());
860:       assertFalse(node2.isDec());
861:       assertFalse(node2.isCall());
862:       assertFalse(node2.isExprResult());
863:       assertFalse(node2.isTypeOf());
864:       assertEquals(52, Node.LENGTH);
865:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
866:       assertEquals(54, Node.SLASH_V);
867:       assertEquals(57, Node.REFLECTED_OBJECT);
868:       assertEquals(30, Node.VAR_ARGS_NAME);
869:       assertEquals(49, Node.DIRECT_EVAL);
870:       assertEquals(40, Node.ORIGINALNAME_PROP);
871:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
872:       assertEquals(48, Node.DIRECTIVES);
873:       assertEquals(46, Node.IS_NAMESPACE);
874:       assertEquals(12, Node.COLUMN_BITS);
875:       assertEquals(4095, Node.COLUMN_MASK);
876:       assertEquals(51, Node.STATIC_SOURCE_FILE);
877:       assertEquals(50, Node.FREE_CALL);
878:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
879:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
880:       assertEquals(32, Node.INCRDECR_PROP);
881:       assertEquals(1, Node.DECR_FLAG);
882:       assertEquals(53, Node.INPUT_ID);
883:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
884:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
885:       assertEquals(36, Node.QUOTED_PROP);
886:       assertEquals(43, Node.IS_CONSTANT_NAME);
887:       assertEquals(56, Node.CHANGE_TIME);
888:       assertEquals(37, Node.OPT_ARG_NAME);
889:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
890:       assertEquals(2, Node.POST_FLAG);
891:       assertEquals(8, Node.FLAG_NO_THROWS);
892:       assertEquals(47, Node.IS_DISPATCHER);
893:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
894:       assertEquals(29, Node.JSDOC_INFO_PROP);
895:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
896:       assertEquals(55, Node.INFERRED_FUNCTION);
897:       assertEquals(15, Node.NO_SIDE_EFFECTS);
898:       assertEquals(39, Node.EMPTY_BLOCK);
899:       assertEquals(57, Node.LAST_PROP);
900:       assertFalse(node2.equals((Object)node0));
901:       assertFalse(node2.equals((Object)node1));
902:       
903:       boolean boolean3 = node2.mayMutateGlobalStateOrThrow();
904:       assertTrue(boolean3);
905:       assertEquals(48, node2.getLineno());
906:       assertFalse(node2.hasOneChild());
907:       assertFalse(node2.isNot());
908:       assertFalse(node2.isObjectLit());
909:       assertFalse(node2.isScript());
910:       assertFalse(node2.isLabel());
911:       assertFalse(node2.isAssignAdd());
912:       assertFalse(node2.isAnd());
913:       assertFalse(node2.isLabelName());
914:       assertFalse(node2.isFalse());
915:       assertFalse(node2.isCast());
916:       assertFalse(node2.isContinue());
917:       assertFalse(node2.isBlock());
918:       assertFalse(node2.isSwitch());
919:       assertFalse(node2.isHook());
920:       assertFalse(node2.isThrow());
921:       assertFalse(node2.isStringKey());
922:       assertFalse(node2.isCase());
923:       assertEquals(57, node2.getCharno());
924:       assertFalse(node2.isInc());
925:       assertFalse(node2.isSetterDef());
926:       assertFalse(node2.isIn());
927:       assertFalse(node2.isNE());
928:       assertFalse(node2.isThis());
929:       assertFalse(node2.isIf());
930:       assertFalse(node2.isFor());
931:       assertEquals(39, node2.getType());
932:       assertFalse(node2.isWith());
933:       assertFalse(node2.isRegExp());
934:       assertFalse(node2.hasMoreThanOneChild());
935:       assertFalse(node2.isCatch());
936:       assertFalse(node2.isInstanceOf());
937:       assertFalse(node2.isTry());
938:       assertFalse(node2.isVoid());
939:       assertFalse(node2.isDebugger());
940:       assertFalse(node2.isTrue());
941:       assertFalse(node2.isDefaultCase());
942:       assertFalse(node2.isEmpty());
943:       assertFalse(node2.isGetterDef());
944:       assertEquals(196665, node2.getSourcePosition());
945:       assertEquals(0, node2.getChildCount());
946:       assertFalse(node2.isParamList());
947:       assertFalse(node2.isArrayLit());
948:       assertFalse(node2.isFunction());
949:       assertFalse(node2.isAdd());
950:       assertFalse(node2.isNew());
951:       assertFalse(node2.isVar());
952:       assertFalse(node2.isWhile());
953:       assertFalse(node2.isDo());
954:       assertFalse(node2.isString());
955:       assertFalse(node2.isOr());
956:       assertFalse(node2.isReturn());
957:       assertFalse(node2.isGetProp());
958:       assertTrue(node2.isNumber());
959:       assertFalse(node2.isComma());
960:       assertFalse(node2.isNull());
961:       assertFalse(node2.isAssign());
962:       assertFalse(node2.isName());
963:       assertFalse(node2.isGetElem());
964:       assertFalse(node2.isDelProp());
965:       assertFalse(node2.isBreak());
966:       assertFalse(node2.hasChildren());
967:       assertFalse(node2.isDec());
968:       assertFalse(node2.isCall());
969:       assertFalse(node2.isExprResult());
970:       assertFalse(node2.isTypeOf());
971:       assertEquals(52, Node.LENGTH);
972:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
973:       assertEquals(54, Node.SLASH_V);
974:       assertEquals(57, Node.REFLECTED_OBJECT);
975:       assertEquals(30, Node.VAR_ARGS_NAME);
976:       assertEquals(49, Node.DIRECT_EVAL);
977:       assertEquals(40, Node.ORIGINALNAME_PROP);
978:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
979:       assertEquals(48, Node.DIRECTIVES);
980:       assertEquals(46, Node.IS_NAMESPACE);
981:       assertEquals(12, Node.COLUMN_BITS);
982:       assertEquals(4095, Node.COLUMN_MASK);
983:       assertEquals(51, Node.STATIC_SOURCE_FILE);
984:       assertEquals(50, Node.FREE_CALL);
985:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
986:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
987:       assertEquals(32, Node.INCRDECR_PROP);
988:       assertEquals(1, Node.DECR_FLAG);
989:       assertEquals(53, Node.INPUT_ID);
990:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
991:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
992:       assertEquals(36, Node.QUOTED_PROP);
993:       assertEquals(43, Node.IS_CONSTANT_NAME);
994:       assertEquals(56, Node.CHANGE_TIME);
995:       assertEquals(37, Node.OPT_ARG_NAME);
996:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
997:       assertEquals(2, Node.POST_FLAG);
998:       assertEquals(8, Node.FLAG_NO_THROWS);
999:       assertEquals(47, Node.IS_DISPATCHER);
1000:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1001:       assertEquals(29, Node.JSDOC_INFO_PROP);
1002:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1003:       assertEquals(55, Node.INFERRED_FUNCTION);
1004:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1005:       assertEquals(39, Node.EMPTY_BLOCK);
1006:       assertEquals(57, Node.LAST_PROP);
1007:       assertFalse(node2.equals((Object)node0));
1008:       assertFalse(node2.equals((Object)node1));
1009:       assertTrue(boolean3 == boolean0);
1010:       assertFalse(boolean3 == boolean1);
1011:       assertFalse(boolean3 == boolean2);
1012:       
1013:       Iterable<Node> iterable0 = node2.children();
1014:       assertNotNull(iterable0);
1015:       assertFalse(iterable0.contains(node1));
1016:       assertEquals(48, node2.getLineno());
1017:       assertFalse(node2.hasOneChild());
1018:       assertFalse(node2.isNot());
1019:       assertFalse(node2.isObjectLit());
1020:       assertFalse(node2.isScript());
1021:       assertFalse(node2.isLabel());
1022:       assertFalse(node2.isAssignAdd());
1023:       assertFalse(node2.isAnd());
1024:       assertFalse(node2.isLabelName());
1025:       assertFalse(node2.isFalse());
1026:       assertFalse(node2.isCast());
1027:       assertFalse(node2.isContinue());
1028:       assertFalse(node2.isBlock());
1029:       assertFalse(node2.isSwitch());
1030:       assertFalse(node2.isHook());
1031:       assertFalse(node2.isThrow());
1032:       assertFalse(node2.isStringKey());
1033:       assertFalse(node2.isCase());
1034:       assertEquals(57, node2.getCharno());
1035:       assertFalse(node2.isInc());
1036:       assertFalse(node2.isSetterDef());
1037:       assertFalse(node2.isIn());
1038:       assertFalse(node2.isNE());
1039:       assertFalse(node2.isThis());
1040:       assertFalse(node2.isIf());
1041:       assertFalse(node2.isFor());
1042:       assertEquals(39, node2.getType());
1043:       assertFalse(node2.isWith());
1044:       assertFalse(node2.isRegExp());
1045:       assertFalse(node2.hasMoreThanOneChild());
1046:       assertFalse(node2.isCatch());
1047:       assertFalse(node2.isInstanceOf());
1048:       assertFalse(node2.isTry());
1049:       assertFalse(node2.isVoid());
1050:       assertFalse(node2.isDebugger());
1051:       assertFalse(node2.isTrue());
1052:       assertFalse(node2.isDefaultCase());
1053:       assertFalse(node2.isEmpty());
1054:       assertFalse(node2.isGetterDef());
1055:       assertEquals(196665, node2.getSourcePosition());
1056:       assertEquals(0, node2.getChildCount());
1057:       assertFalse(node2.isParamList());
1058:       assertFalse(node2.isArrayLit());
1059:       assertFalse(node2.isFunction());
1060:       assertFalse(node2.isAdd());
1061:       assertFalse(node2.isNew());
1062:       assertFalse(node2.isVar());
1063:       assertFalse(node2.isWhile());
1064:       assertFalse(node2.isDo());
1065:       assertFalse(node2.isString());
1066:       assertFalse(node2.isOr());
1067:       assertFalse(node2.isReturn());
1068:       assertFalse(node2.isGetProp());
1069:       assertTrue(node2.isNumber());
1070:       assertFalse(node2.isComma());
1071:       assertFalse(node2.isNull());
1072:       assertFalse(node2.isAssign());
1073:       assertFalse(node2.isName());
1074:       assertFalse(node2.isGetElem());
1075:       assertFalse(node2.isDelProp());
1076:       assertFalse(node2.isBreak());
1077:       assertFalse(node2.hasChildren());
1078:       assertFalse(node2.isDec());
1079:       assertFalse(node2.isCall());
1080:       assertFalse(node2.isExprResult());
1081:       assertFalse(node2.isTypeOf());
1082:       assertEquals(52, Node.LENGTH);
1083:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1084:       assertEquals(54, Node.SLASH_V);
1085:       assertEquals(57, Node.REFLECTED_OBJECT);
1086:       assertEquals(30, Node.VAR_ARGS_NAME);
1087:       assertEquals(49, Node.DIRECT_EVAL);
1088:       assertEquals(40, Node.ORIGINALNAME_PROP);
1089:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1090:       assertEquals(48, Node.DIRECTIVES);
1091:       assertEquals(46, Node.IS_NAMESPACE);
1092:       assertEquals(12, Node.COLUMN_BITS);
1093:       assertEquals(4095, Node.COLUMN_MASK);
1094:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1095:       assertEquals(50, Node.FREE_CALL);
1096:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1097:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1098:       assertEquals(32, Node.INCRDECR_PROP);
1099:       assertEquals(1, Node.DECR_FLAG);
1100:       assertEquals(53, Node.INPUT_ID);
1101:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1102:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1103:       assertEquals(36, Node.QUOTED_PROP);
1104:       assertEquals(43, Node.IS_CONSTANT_NAME);
1105:       assertEquals(56, Node.CHANGE_TIME);
1106:       assertEquals(37, Node.OPT_ARG_NAME);
1107:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1108:       assertEquals(2, Node.POST_FLAG);
1109:       assertEquals(8, Node.FLAG_NO_THROWS);
1110:       assertEquals(47, Node.IS_DISPATCHER);
1111:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1112:       assertEquals(29, Node.JSDOC_INFO_PROP);
1113:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1114:       assertEquals(55, Node.INFERRED_FUNCTION);
1115:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1116:       assertEquals(39, Node.EMPTY_BLOCK);
1117:       assertEquals(57, Node.LAST_PROP);
1118:       assertFalse(node2.equals((Object)node0));
1119:       assertFalse(node2.equals((Object)node1));
1120:       
1121:       Node node3 = Node.newString((-1175), "Function");
1122:       assertNotNull(node3);
1123:       assertFalse(node3.isScript());
1124:       assertFalse(node3.isExprResult());
1125:       assertFalse(node3.isAnd());
1126:       assertFalse(node3.isInstanceOf());
1127:       assertFalse(node3.isCast());
1128:       assertFalse(node3.isGetElem());
1129:       assertFalse(node3.isAssign());
1130:       assertFalse(node3.isWith());
1131:       assertEquals((-1), node3.getSourcePosition());
1132:       assertFalse(node3.isNumber());
1133:       assertFalse(node3.isTypeOf());
1134:       assertFalse(node3.isDec());
1135:       assertFalse(node3.isComma());
1136:       assertFalse(node3.isThis());
1137:       assertFalse(node3.isGetProp());
1138:       assertFalse(node3.hasChildren());
1139:       assertFalse(node3.isLabelName());
1140:       assertFalse(node3.hasOneChild());
1141:       assertFalse(node3.isNot());
1142:       assertFalse(node3.isObjectLit());
1143:       assertEquals((-1), node3.getCharno());
1144:       assertFalse(node3.isNew());
1145:       assertFalse(node3.isDo());
1146:       assertFalse(node3.isWhile());
1147:       assertFalse(node3.isSwitch());
1148:       assertFalse(node3.isVar());
1149:       assertFalse(node3.isCall());
1150:       assertFalse(node3.isReturn());
1151:       assertFalse(node3.isLabel());
1152:       assertFalse(node3.isNull());
1153:       assertFalse(node3.isBreak());
1154:       assertFalse(node3.isName());
1155:       assertFalse(node3.isDelProp());
1156:       assertFalse(node3.isAssignAdd());
1157:       assertFalse(node3.isAdd());
1158:       assertFalse(node3.isOr());
1159:       assertFalse(node3.isEmpty());
1160:       assertFalse(node3.isRegExp());
1161:       assertFalse(node3.isDebugger());
1162:       assertFalse(node3.isTrue());
1163:       assertFalse(node3.isVoid());
1164:       assertFalse(node3.isTry());
1165:       assertFalse(node3.isDefaultCase());
1166:       assertFalse(node3.isArrayLit());
1167:       assertFalse(node3.isCatch());
1168:       assertEquals(0, node3.getChildCount());
1169:       assertFalse(node3.isFunction());
1170:       assertFalse(node3.isGetterDef());
1171:       assertFalse(node3.isFor());
1172:       assertFalse(node3.isStringKey());
1173:       assertFalse(node3.isParamList());
1174:       assertFalse(node3.isString());
1175:       assertFalse(node3.isInc());
1176:       assertFalse(node3.isBlock());
1177:       assertFalse(node3.isCase());
1178:       assertEquals((-1175), node3.getType());
1179:       assertFalse(node3.isHook());
1180:       assertEquals((-1), node3.getLineno());
1181:       assertFalse(node3.isContinue());
1182:       assertFalse(node3.hasMoreThanOneChild());
1183:       assertFalse(node3.isFalse());
1184:       assertFalse(node3.isNE());
1185:       assertFalse(node3.isSetterDef());
1186:       assertFalse(node3.isThrow());
1187:       assertFalse(node3.isIf());
1188:       assertFalse(node3.isIn());
1189:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1190:       assertEquals(57, Node.LAST_PROP);
1191:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1192:       assertEquals(30, Node.VAR_ARGS_NAME);
1193:       assertEquals(54, Node.SLASH_V);
1194:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1195:       assertEquals(12, Node.COLUMN_BITS);
1196:       assertEquals(32, Node.INCRDECR_PROP);
1197:       assertEquals(52, Node.LENGTH);
1198:       assertEquals(1, Node.DECR_FLAG);
1199:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1200:       assertEquals(56, Node.CHANGE_TIME);
1201:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1202:       assertEquals(8, Node.FLAG_NO_THROWS);
1203:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1204:       assertEquals(57, Node.REFLECTED_OBJECT);
1205:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1206:       assertEquals(4095, Node.COLUMN_MASK);
1207:       assertEquals(48, Node.DIRECTIVES);
1208:       assertEquals(49, Node.DIRECT_EVAL);
1209:       assertEquals(37, Node.OPT_ARG_NAME);
1210:       assertEquals(43, Node.IS_CONSTANT_NAME);
1211:       assertEquals(36, Node.QUOTED_PROP);
1212:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1213:       assertEquals(55, Node.INFERRED_FUNCTION);
1214:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1215:       assertEquals(53, Node.INPUT_ID);
1216:       assertEquals(29, Node.JSDOC_INFO_PROP);
1217:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1218:       assertEquals(39, Node.EMPTY_BLOCK);
1219:       assertEquals(2, Node.POST_FLAG);
1220:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1221:       assertEquals(50, Node.FREE_CALL);
1222:       assertEquals(47, Node.IS_DISPATCHER);
1223:       assertEquals(46, Node.IS_NAMESPACE);
1224:       assertEquals(40, Node.ORIGINALNAME_PROP);
1225:       assertNotSame(node3, node1);
1226:       assertNotSame(node3, node0);
1227:       assertFalse(node3.equals((Object)node1));
1228:       assertFalse(node3.equals((Object)node0));
1229:       assertFalse(node3.equals((Object)node2));
1230:       
1231:       // Undeclared exception!
1232:       try { 
1233:         node0.addChildrenAfter(node2, node3);
1234:         fail("Expecting exception: IllegalArgumentException");
1235:       
1236:       } catch(IllegalArgumentException e) {
1237:          //
1238:          // no message in exception (getMessage() returned null)
1239:          //
1240:          verifyException("com.google.common.base.Preconditions", e);
1241:       }
1242:   }
1243: }
RegularFileObject[/tmp/EvoSuite_175_1628158434321/com/google/javascript/rhino/Node_175_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Aug 05 10:13:54 GMT 2021
5:  */
6: 
7: package com.google.javascript.rhino;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class Node_175_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "com.google.javascript.rhino.Node"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Node_175_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "com.google.common.collect.ArrayListMultimap",
70:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
71:       "com.google.javascript.rhino.JSDocInfo$StringPosition",
72:       "com.google.common.collect.ImmutableList$SubList",
73:       "com.google.javascript.rhino.jstype.NoType",
74:       "com.google.javascript.rhino.JSDocInfo$Visibility",
75:       "com.google.common.collect.ListMultimap",
76:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
77:       "com.google.javascript.rhino.jstype.ArrowType",
78:       "com.google.javascript.rhino.SimpleErrorReporter",
79:       "com.google.common.collect.Lists$RandomAccessPartition",
80:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
81:       "com.google.common.collect.Collections2",
82:       "com.google.javascript.rhino.jstype.NumberType",
83:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
84:       "com.google.common.collect.PeekingIterator",
85:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
86:       "com.google.common.collect.RegularImmutableList",
87:       "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
88:       "com.google.javascript.rhino.jstype.StaticScope",
89:       "com.google.javascript.rhino.jstype.InstanceObjectType",
90:       "com.google.common.collect.Lists$TransformingRandomAccessList",
91:       "com.google.javascript.rhino.Node$PropListItem",
92:       "com.google.javascript.rhino.Node$IntPropListItem",
93:       "com.google.common.collect.Sets$2",
94:       "com.google.common.collect.Maps$KeySet",
95:       "com.google.common.collect.Sets$3",
96:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
97:       "com.google.common.collect.LinkedHashMultimap",
98:       "com.google.javascript.rhino.Node",
99:       "com.google.javascript.rhino.jstype.ObjectType",
100:       "com.google.javascript.rhino.SourcePosition",
101:       "com.google.common.collect.Sets$1",
102:       "com.google.javascript.rhino.JSDocInfo$TrimmedStringPosition",
103:       "com.google.common.collect.ImmutableMapKeySet",
104:       "com.google.javascript.rhino.JSDocInfo$Marker",
105:       "com.google.common.collect.RegularImmutableMap",
106:       "com.google.common.collect.RegularImmutableBiMap",
107:       "com.google.javascript.rhino.Node$NodeMismatch",
108:       "com.google.javascript.rhino.jstype.RecordType",
109:       "com.google.common.collect.SortedMapDifference",
110:       "com.google.common.collect.RegularImmutableSet",
111:       "com.google.javascript.rhino.jstype.ModificationVisitor",
112:       "com.google.javascript.rhino.jstype.PropertyMap$1",
113:       "com.google.common.collect.AbstractMapEntry",
114:       "com.google.javascript.rhino.Node$AncestorIterable$1",
115:       "com.google.common.collect.Iterators$12",
116:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
117:       "com.google.common.collect.Iterators$11",
118:       "com.google.javascript.rhino.jstype.JSType$1",
119:       "com.google.common.collect.EmptyImmutableBiMap",
120:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
121:       "com.google.common.base.Predicate",
122:       "com.google.javascript.rhino.jstype.VoidType",
123:       "com.google.common.base.Joiner",
124:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
125:       "com.google.common.collect.AbstractListMultimap",
126:       "com.google.common.collect.Iterables",
127:       "com.google.javascript.rhino.jstype.JSType",
128:       "com.google.common.collect.ImmutableAsList",
129:       "com.google.javascript.rhino.Node$StringNode",
130:       "com.google.javascript.rhino.jstype.ProxyObjectType",
131:       "com.google.common.collect.Sets$SetView",
132:       "com.google.common.collect.RegularImmutableAsList",
133:       "com.google.javascript.rhino.jstype.TemplateType",
134:       "com.google.common.collect.SingletonImmutableSet",
135:       "com.google.javascript.rhino.jstype.NamedType",
136:       "com.google.common.collect.Iterators$13",
137:       "com.google.javascript.rhino.InputId",
138:       "com.google.common.collect.ImmutableList$SerializedForm",
139:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
140:       "com.google.javascript.rhino.jstype.RelationshipVisitor",
141:       "com.google.common.collect.AbstractMapBasedMultimap",
142:       "com.google.common.collect.Lists$Partition",
143:       "com.google.common.collect.Lists",
144:       "com.google.javascript.rhino.Node$SideEffectFlags",
145:       "com.google.common.collect.UnmodifiableListIterator",
146:       "com.google.javascript.rhino.jstype.NullType",
147:       "com.google.common.collect.Lists$TransformingSequentialList",
148:       "com.google.javascript.rhino.ErrorReporter",
149:       "com.google.javascript.rhino.jstype.UnknownType",
150:       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
151:       "com.google.javascript.rhino.jstype.ValueType",
152:       "com.google.javascript.rhino.jstype.PropertyMap",
153:       "com.google.javascript.rhino.Token",
154:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
155:       "com.google.common.collect.ObjectArrays",
156:       "com.google.javascript.rhino.jstype.StaticSourceFile",
157:       "com.google.javascript.rhino.jstype.BooleanType",
158:       "com.google.javascript.rhino.jstype.NoObjectType",
159:       "com.google.common.collect.AbstractIterator",
160:       "com.google.javascript.rhino.jstype.FunctionBuilder",
161:       "com.google.javascript.rhino.jstype.JSType$TypePair",
162:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
163:       "com.google.common.base.Joiner$MapJoiner",
164:       "com.google.common.collect.ImmutableList$1",
165:       "com.google.common.collect.MapDifference",
166:       "com.google.javascript.rhino.JSDocInfo$1",
167:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
168:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
169:       "com.google.common.collect.Sets$ImprovedAbstractSet",
170:       "com.google.javascript.rhino.jstype.FunctionType",
171:       "com.google.common.base.Preconditions",
172:       "com.google.common.collect.UnmodifiableIterator",
173:       "com.google.javascript.rhino.JSDocInfo",
174:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
175:       "com.google.javascript.rhino.jstype.Property",
176:       "com.google.common.collect.ImmutableMapValues",
177:       "com.google.common.collect.ImmutableEntry",
178:       "com.google.common.base.Joiner$1",
179:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
180:       "com.google.common.base.Joiner$2",
181:       "com.google.common.collect.ImmutableCollection",
182:       "com.google.common.collect.ImmutableEnumMap",
183:       "com.google.javascript.rhino.jstype.TernaryValue",
184:       "com.google.javascript.rhino.Node$AncestorIterable",
185:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
186:       "com.google.common.collect.Lists$RandomAccessListWrapper",
187:       "com.google.common.collect.ImmutableEnumSet",
188:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
189:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
190:       "com.google.javascript.rhino.jstype.EnumElementType",
191:       "com.google.javascript.rhino.jstype.UnionType",
192:       "com.google.common.base.Objects",
193:       "com.google.javascript.rhino.Node$NumberNode",
194:       "com.google.common.collect.SingletonImmutableList",
195:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
196:       "com.google.common.collect.ImmutableCollection$Builder",
197:       "com.google.javascript.rhino.jstype.StaticSlot",
198:       "com.google.common.collect.Iterators$6",
199:       "com.google.common.collect.BiMap",
200:       "com.google.common.collect.Iterators$7",
201:       "com.google.common.collect.AbstractSetMultimap",
202:       "com.google.common.base.Function",
203:       "com.google.common.collect.ImmutableSet",
204:       "com.google.common.collect.Lists$AbstractListWrapper",
205:       "com.google.common.collect.ImmutableMap",
206:       "com.google.common.collect.AbstractIndexedListIterator",
207:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
208:       "com.google.common.collect.Maps$1",
209:       "com.google.javascript.rhino.jstype.EnumType",
210:       "com.google.javascript.rhino.JSDocInfo$TypePosition",
211:       "com.google.common.collect.Iterators$1",
212:       "com.google.common.collect.Iterators$2",
213:       "com.google.javascript.rhino.jstype.NamespaceType",
214:       "com.google.common.collect.Iterators$3",
215:       "com.google.common.collect.Sets",
216:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
217:       "com.google.javascript.rhino.Node$ObjectPropListItem",
218:       "com.google.common.collect.Lists$StringAsImmutableList",
219:       "com.google.common.collect.Lists$2",
220:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
221:       "com.google.common.collect.ImmutableList$Builder",
222:       "com.google.common.collect.Lists$1",
223:       "com.google.javascript.rhino.jstype.StaticReference",
224:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
225:       "com.google.common.collect.Multiset",
226:       "com.google.common.collect.AbstractMultimap",
227:       "com.google.common.collect.Multimap",
228:       "com.google.common.collect.Iterators",
229:       "com.google.common.collect.EmptyImmutableSet",
230:       "com.google.common.collect.Maps$ImprovedAbstractMap",
231:       "com.google.common.collect.ImmutableBiMap",
232:       "com.google.javascript.rhino.JSDocInfo$NamePosition",
233:       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
234:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedDocumentation",
235:       "com.google.common.collect.ImmutableList",
236:       "com.google.common.collect.SingletonImmutableBiMap",
237:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
238:       "com.google.javascript.rhino.jstype.StringType",
239:       "com.google.javascript.rhino.Node$AbstractPropListItem",
240:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
241:       "com.google.javascript.rhino.jstype.TemplatizedType",
242:       "com.google.javascript.rhino.jstype.Visitor",
243:       "com.google.javascript.rhino.jstype.NoResolvedType",
244:       "com.google.javascript.rhino.jstype.JSTypeNative",
245:       "com.google.javascript.rhino.jstype.AllType",
246:       "com.google.common.collect.Maps",
247:       "com.google.common.collect.SetMultimap",
248:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
249:       "com.google.common.collect.Maps$EntryTransformer",
250:       "com.google.javascript.rhino.JSTypeExpression",
251:       "com.google.common.collect.Iterators$MergingIterator"
252:     );
253:   } 
254: 
255:   private static void resetClasses() {
256:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Node_175_tmp__ESTest_scaffolding.class.getClassLoader()); 
257: 
258:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
259:       "com.google.javascript.rhino.Node",
260:       "com.google.javascript.rhino.Node$NumberNode",
261:       "com.google.javascript.rhino.Node$StringNode",
262:       "com.google.javascript.rhino.Node$AbstractPropListItem",
263:       "com.google.javascript.rhino.Node$ObjectPropListItem",
264:       "com.google.javascript.rhino.Node$IntPropListItem",
265:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
266:       "com.google.javascript.rhino.Node$AncestorIterable",
267:       "com.google.javascript.rhino.Node$NodeMismatch",
268:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
269:       "com.google.javascript.rhino.Node$SideEffectFlags",
270:       "com.google.javascript.rhino.Token",
271:       "com.google.common.base.Preconditions",
272:       "com.google.javascript.rhino.SimpleErrorReporter",
273:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
274:       "com.google.common.base.Joiner",
275:       "com.google.common.base.Joiner$1",
276:       "com.google.common.collect.Collections2",
277:       "com.google.common.base.Joiner$MapJoiner",
278:       "com.google.common.collect.Maps",
279:       "com.google.common.collect.AbstractMultimap",
280:       "com.google.common.collect.AbstractMapBasedMultimap",
281:       "com.google.common.collect.AbstractSetMultimap",
282:       "com.google.common.collect.LinkedHashMultimap",
283:       "com.google.common.collect.AbstractMapEntry",
284:       "com.google.common.collect.ImmutableEntry",
285:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
286:       "com.google.common.collect.AbstractListMultimap",
287:       "com.google.common.collect.ArrayListMultimap",
288:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
289:       "com.google.common.collect.ImmutableCollection",
290:       "com.google.common.collect.RegularImmutableList",
291:       "com.google.common.collect.ObjectArrays",
292:       "com.google.common.collect.ImmutableList",
293:       "com.google.javascript.rhino.jstype.ModificationVisitor",
294:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
295:       "com.google.common.collect.ImmutableCollection$Builder",
296:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
297:       "com.google.common.collect.ImmutableList$Builder",
298:       "com.google.common.collect.UnmodifiableIterator",
299:       "com.google.common.collect.UnmodifiableListIterator",
300:       "com.google.common.collect.Iterators$1",
301:       "com.google.common.collect.Iterators$2",
302:       "com.google.common.collect.Iterators",
303:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
304:       "com.google.javascript.rhino.jstype.JSType$1",
305:       "com.google.javascript.rhino.jstype.JSType",
306:       "com.google.javascript.rhino.jstype.ObjectType",
307:       "com.google.javascript.rhino.jstype.ProxyObjectType",
308:       "com.google.javascript.rhino.jstype.TemplateType",
309:       "com.google.javascript.rhino.jstype.ValueType",
310:       "com.google.javascript.rhino.jstype.BooleanType",
311:       "com.google.javascript.rhino.jstype.NullType",
312:       "com.google.javascript.rhino.jstype.NumberType",
313:       "com.google.javascript.rhino.jstype.StringType",
314:       "com.google.javascript.rhino.jstype.UnknownType",
315:       "com.google.javascript.rhino.jstype.VoidType",
316:       "com.google.javascript.rhino.jstype.AllType",
317:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
318:       "com.google.common.collect.ImmutableMap",
319:       "com.google.common.collect.ImmutableBiMap",
320:       "com.google.common.collect.EmptyImmutableBiMap",
321:       "com.google.javascript.rhino.jstype.PropertyMap$1",
322:       "com.google.javascript.rhino.jstype.PropertyMap",
323:       "com.google.javascript.rhino.jstype.FunctionType",
324:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
325:       "com.google.javascript.rhino.jstype.ArrowType",
326:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
327:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
328:       "com.google.javascript.rhino.jstype.InstanceObjectType",
329:       "com.google.javascript.rhino.jstype.Property",
330:       "com.google.common.collect.Lists",
331:       "com.google.javascript.rhino.jstype.NoObjectType",
332:       "com.google.javascript.rhino.jstype.NoType",
333:       "com.google.javascript.rhino.jstype.NoResolvedType",
334:       "com.google.common.collect.SingletonImmutableList",
335:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
336:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
337:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
338:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
339:       "com.google.javascript.rhino.jstype.UnionType",
340:       "com.google.javascript.rhino.jstype.FunctionBuilder",
341:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
342:       "com.google.javascript.rhino.jstype.EnumType",
343:       "com.google.javascript.rhino.jstype.EnumElementType",
344:       "com.google.javascript.rhino.JSDocInfo",
345:       "com.google.javascript.rhino.JSTypeExpression",
346:       "com.google.common.base.Objects",
347:       "com.google.javascript.rhino.jstype.TemplatizedType",
348:       "com.google.common.collect.Iterables",
349:       "com.google.common.collect.ImmutableSet",
350:       "com.google.common.collect.EmptyImmutableSet",
351:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
352:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
353:       "com.google.javascript.rhino.Node$AncestorIterable$1",
354:       "com.google.common.collect.AbstractIndexedListIterator",
355:       "com.google.common.collect.Iterators$11",
356:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
357:       "com.google.common.collect.Sets",
358:       "com.google.javascript.rhino.InputId",
359:       "com.google.javascript.rhino.jstype.TernaryValue",
360:       "com.google.javascript.rhino.jstype.JSType$2",
361:       "com.google.javascript.rhino.jstype.JSType$TypePair",
362:       "com.google.javascript.rhino.jstype.NamedType",
363:       "com.google.common.collect.AbstractMultimap$Values",
364:       "com.google.common.collect.AbstractMapBasedMultimap$Itr",
365:       "com.google.common.collect.AbstractMapBasedMultimap$1",
366:       "com.google.common.collect.Multimaps$Entries",
367:       "com.google.common.collect.AbstractMultimap$Entries",
368:       "com.google.common.collect.AbstractMapBasedMultimap$2",
369:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedDocumentation",
370:       "com.google.javascript.rhino.JSDocInfo$Visibility",
371:       "com.google.common.collect.Iterators$12",
372:       "com.google.common.collect.Sets$ImprovedAbstractSet",
373:       "com.google.common.collect.LinkedHashMultimap$ValueSet",
374:       "com.google.common.collect.Hashing",
375:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
376:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet",
377:       "com.google.common.collect.ImmutableList$1",
378:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
379:       "com.google.common.collect.Platform"
380:     );
381:   }
382: }

[MASTER] 10:13:54.526 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Node node0 = Node.newString("Function");
assertNotNull(node0);
assertFalse(node0.isIn());
assertFalse(node0.isCase());
assertFalse(node0.isFor());
assertFalse(node0.isInc());
assertFalse(node0.isVoid());
assertFalse(node0.isEmpty());
assertFalse(node0.isDelProp());
assertFalse(node0.isIf());
assertFalse(node0.isNE());
assertFalse(node0.isTrue());
assertFalse(node0.isSetterDef());
assertFalse(node0.isBreak());
assertFalse(node0.isGetProp());
assertEquals(40, node0.getType());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isFunction());
assertFalse(node0.isComma());
assertFalse(node0.isCast());
assertFalse(node0.isNot());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.isDebugger());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isOr());
assertFalse(node0.isLabel());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isReturn());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isDo());
assertFalse(node0.isAssign());
assertFalse(node0.isGetElem());
assertFalse(node0.isContinue());
assertFalse(node0.isWhile());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.hasChildren());
assertFalse(node0.isAdd());
assertFalse(node0.isCall());
assertFalse(node0.isExprResult());
assertFalse(node0.isNew());
assertFalse(node0.isName());
assertFalse(node0.isNull());
assertFalse(node0.isParamList());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(node0.isWith());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isRegExp());
assertFalse(node0.isHook());
assertFalse(node0.isThis());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isTry());
assertFalse(node0.isBlock());
assertTrue(node0.isString());
assertFalse(node0.isSwitch());
assertFalse(node0.isScript());
assertFalse(node0.isArrayLit());
assertFalse(node0.hasOneChild());
assertFalse(node0.isLabelName());
assertFalse(node0.isStringKey());
assertFalse(node0.isNumber());
assertFalse(node0.isGetterDef());
assertEquals((-1), node0.getCharno());
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.LAST_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);

Node node1 = Node.newString("Function", 38, 7);
assertNotNull(node1);
assertFalse(node1.isIn());
assertFalse(node1.isSwitch());
assertFalse(node1.isNE());
assertFalse(node1.isIf());
assertEquals(38, node1.getLineno());
assertFalse(node1.isDelProp());
assertEquals(7, node1.getCharno());
assertFalse(node1.isFalse());
assertFalse(node1.isThrow());
assertFalse(node1.isTrue());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isEmpty());
assertFalse(node1.isInc());
assertFalse(node1.isCatch());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isThis());
assertFalse(node1.isParamList());
assertFalse(node1.isRegExp());
assertFalse(node1.isWith());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isArrayLit());
assertFalse(node1.hasOneChild());
assertFalse(node1.isStringKey());
assertFalse(node1.isHook());
assertFalse(node1.isFor());
assertFalse(node1.isBlock());
assertFalse(node1.isNumber());
assertFalse(node1.isGetterDef());
assertEquals(155655, node1.getSourcePosition());
assertTrue(node1.isString());
assertFalse(node1.isTry());
assertFalse(node1.isCase());
assertFalse(node1.isScript());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isContinue());
assertFalse(node1.isOr());
assertFalse(node1.isLabel());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isWhile());
assertFalse(node1.isReturn());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isLabelName());
assertFalse(node1.isGetElem());
assertFalse(node1.isVar());
assertFalse(node1.isCast());
assertFalse(node1.isName());
assertFalse(node1.isNull());
assertFalse(node1.isSetterDef());
assertFalse(node1.isDo());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isAnd());
assertFalse(node1.isObjectLit());
assertFalse(node1.isNot());
assertEquals(40, node1.getType());
assertFalse(node1.isComma());
assertFalse(node1.isVoid());
assertFalse(node1.isFunction());
assertFalse(node1.isBreak());
assertFalse(node1.isCall());
assertFalse(node1.isExprResult());
assertFalse(node1.isAssign());
assertFalse(node1.hasChildren());
assertFalse(node1.isDebugger());
assertFalse(node1.isGetProp());
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertNotSame(node1, node0);
assertFalse(node1.equals((Object)node0));

boolean boolean0 = node0.isEquivalentToTyped(node1);
assertTrue(boolean0);
assertFalse(node0.isIn());
assertFalse(node0.isCase());
assertFalse(node0.isFor());
assertFalse(node0.isInc());
assertFalse(node0.isVoid());
assertFalse(node0.isEmpty());
assertFalse(node0.isDelProp());
assertFalse(node0.isIf());
assertFalse(node0.isNE());
assertFalse(node0.isTrue());
assertFalse(node0.isSetterDef());
assertFalse(node0.isBreak());
assertFalse(node0.isGetProp());
assertEquals(40, node0.getType());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isFunction());
assertFalse(node0.isComma());
assertFalse(node0.isCast());
assertFalse(node0.isNot());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.isDebugger());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isOr());
assertFalse(node0.isLabel());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isReturn());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isDo());
assertFalse(node0.isAssign());
assertFalse(node0.isGetElem());
assertFalse(node0.isContinue());
assertFalse(node0.isWhile());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.hasChildren());
assertFalse(node0.isAdd());
assertFalse(node0.isCall());
assertFalse(node0.isExprResult());
assertFalse(node0.isNew());
assertFalse(node0.isName());
assertFalse(node0.isNull());
assertFalse(node0.isParamList());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(node0.isWith());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isRegExp());
assertFalse(node0.isHook());
assertFalse(node0.isThis());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isTry());
assertFalse(node0.isBlock());
assertTrue(node0.isString());
assertFalse(node0.isSwitch());
assertFalse(node0.isScript());
assertFalse(node0.isArrayLit());
assertFalse(node0.hasOneChild());
assertFalse(node0.isLabelName());
assertFalse(node0.isStringKey());
assertFalse(node0.isNumber());
assertFalse(node0.isGetterDef());
assertEquals((-1), node0.getCharno());
assertFalse(node1.isIn());
assertFalse(node1.isSwitch());
assertFalse(node1.isNE());
assertFalse(node1.isIf());
assertEquals(38, node1.getLineno());
assertFalse(node1.isDelProp());
assertEquals(7, node1.getCharno());
assertFalse(node1.isFalse());
assertFalse(node1.isThrow());
assertFalse(node1.isTrue());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isEmpty());
assertFalse(node1.isInc());
assertFalse(node1.isCatch());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isThis());
assertFalse(node1.isParamList());
assertFalse(node1.isRegExp());
assertFalse(node1.isWith());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isArrayLit());
assertFalse(node1.hasOneChild());
assertFalse(node1.isStringKey());
assertFalse(node1.isHook());
assertFalse(node1.isFor());
assertFalse(node1.isBlock());
assertFalse(node1.isNumber());
assertFalse(node1.isGetterDef());
assertEquals(155655, node1.getSourcePosition());
assertTrue(node1.isString());
assertFalse(node1.isTry());
assertFalse(node1.isCase());
assertFalse(node1.isScript());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isContinue());
assertFalse(node1.isOr());
assertFalse(node1.isLabel());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isWhile());
assertFalse(node1.isReturn());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isLabelName());
assertFalse(node1.isGetElem());
assertFalse(node1.isVar());
assertFalse(node1.isCast());
assertFalse(node1.isName());
assertFalse(node1.isNull());
assertFalse(node1.isSetterDef());
assertFalse(node1.isDo());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isAnd());
assertFalse(node1.isObjectLit());
assertFalse(node1.isNot());
assertEquals(40, node1.getType());
assertFalse(node1.isComma());
assertFalse(node1.isVoid());
assertFalse(node1.isFunction());
assertFalse(node1.isBreak());
assertFalse(node1.isCall());
assertFalse(node1.isExprResult());
assertFalse(node1.isAssign());
assertFalse(node1.hasChildren());
assertFalse(node1.isDebugger());
assertFalse(node1.isGetProp());
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.LAST_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertNotSame(node0, node1);
assertNotSame(node1, node0);
assertFalse(node0.equals((Object)node1));
assertFalse(node1.equals((Object)node0));

node1.setOptionalArg(true);
assertFalse(node1.isIn());
assertFalse(node1.isSwitch());
assertFalse(node1.isNE());
assertFalse(node1.isIf());
assertEquals(38, node1.getLineno());
assertFalse(node1.isDelProp());
assertEquals(7, node1.getCharno());
assertFalse(node1.isFalse());
assertFalse(node1.isThrow());
assertFalse(node1.isTrue());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isEmpty());
assertFalse(node1.isInc());
assertFalse(node1.isCatch());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isThis());
assertFalse(node1.isParamList());
assertFalse(node1.isRegExp());
assertFalse(node1.isWith());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isArrayLit());
assertFalse(node1.hasOneChild());
assertFalse(node1.isStringKey());
assertFalse(node1.isHook());
assertFalse(node1.isFor());
assertFalse(node1.isBlock());
assertFalse(node1.isNumber());
assertFalse(node1.isGetterDef());
assertEquals(155655, node1.getSourcePosition());
assertTrue(node1.isString());
assertFalse(node1.isTry());
assertFalse(node1.isCase());
assertFalse(node1.isScript());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isContinue());
assertFalse(node1.isOr());
assertFalse(node1.isLabel());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isWhile());
assertFalse(node1.isReturn());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isLabelName());
assertFalse(node1.isGetElem());
assertFalse(node1.isVar());
assertFalse(node1.isCast());
assertFalse(node1.isName());
assertFalse(node1.isNull());
assertFalse(node1.isSetterDef());
assertFalse(node1.isDo());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isAnd());
assertFalse(node1.isObjectLit());
assertFalse(node1.isNot());
assertEquals(40, node1.getType());
assertFalse(node1.isComma());
assertFalse(node1.isVoid());
assertFalse(node1.isFunction());
assertFalse(node1.isBreak());
assertFalse(node1.isCall());
assertFalse(node1.isExprResult());
assertFalse(node1.isAssign());
assertFalse(node1.hasChildren());
assertFalse(node1.isDebugger());
assertFalse(node1.isGetProp());
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertNotSame(node1, node0);
assertFalse(node1.equals((Object)node0));

boolean boolean1 = node0.isWith();
assertFalse(boolean1);
assertFalse(node0.isIn());
assertFalse(node0.isCase());
assertFalse(node0.isFor());
assertFalse(node0.isInc());
assertFalse(node0.isVoid());
assertFalse(node0.isEmpty());
assertFalse(node0.isDelProp());
assertFalse(node0.isIf());
assertFalse(node0.isNE());
assertFalse(node0.isTrue());
assertFalse(node0.isSetterDef());
assertFalse(node0.isBreak());
assertFalse(node0.isGetProp());
assertEquals(40, node0.getType());
assertFalse(node0.isFalse());
assertFalse(node0.isThrow());
assertFalse(node0.isFunction());
assertFalse(node0.isComma());
assertFalse(node0.isCast());
assertFalse(node0.isNot());
assertFalse(node0.isAnd());
assertFalse(node0.isObjectLit());
assertFalse(node0.isDebugger());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isOr());
assertFalse(node0.isLabel());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isReturn());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isDo());
assertFalse(node0.isAssign());
assertFalse(node0.isGetElem());
assertFalse(node0.isContinue());
assertFalse(node0.isWhile());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDec());
assertFalse(node0.hasChildren());
assertFalse(node0.isAdd());
assertFalse(node0.isCall());
assertFalse(node0.isExprResult());
assertFalse(node0.isNew());
assertFalse(node0.isName());
assertFalse(node0.isNull());
assertFalse(node0.isParamList());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isCatch());
assertFalse(node0.isWith());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isRegExp());
assertFalse(node0.isHook());
assertFalse(node0.isThis());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isTry());
assertFalse(node0.isBlock());
assertTrue(node0.isString());
assertFalse(node0.isSwitch());
assertFalse(node0.isScript());
assertFalse(node0.isArrayLit());
assertFalse(node0.hasOneChild());
assertFalse(node0.isLabelName());
assertFalse(node0.isStringKey());
assertFalse(node0.isNumber());
assertFalse(node0.isGetterDef());
assertEquals((-1), node0.getCharno());
assertEquals(48, Node.DIRECTIVES);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(50, Node.FREE_CALL);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(53, Node.INPUT_ID);
assertEquals(57, Node.LAST_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertNotSame(node0, node1);
assertFalse(node0.equals((Object)node1));
assertFalse(boolean1 == boolean0);

Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
assertNotNull(node_SideEffectFlags0);
assertEquals(2, node_SideEffectFlags0.valueOf());
assertFalse(node_SideEffectFlags0.areAllFlagsSet());

node_SideEffectFlags0.clearSideEffectFlags();
assertEquals(15, node_SideEffectFlags0.valueOf());
assertFalse(node_SideEffectFlags0.areAllFlagsSet());

Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
assertNotNull(node_SideEffectFlags1);
assertEquals(11, node_SideEffectFlags0.valueOf());
assertFalse(node_SideEffectFlags0.areAllFlagsSet());
assertFalse(node_SideEffectFlags1.areAllFlagsSet());
assertEquals(11, node_SideEffectFlags1.valueOf());
assertSame(node_SideEffectFlags0, node_SideEffectFlags1);
assertSame(node_SideEffectFlags1, node_SideEffectFlags0);

boolean boolean2 = node1.wasEmptyNode();
assertFalse(boolean2);
assertFalse(node1.isIn());
assertFalse(node1.isSwitch());
assertFalse(node1.isNE());
assertFalse(node1.isIf());
assertEquals(38, node1.getLineno());
assertFalse(node1.isDelProp());
assertEquals(7, node1.getCharno());
assertFalse(node1.isFalse());
assertFalse(node1.isThrow());
assertFalse(node1.isTrue());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isEmpty());
assertFalse(node1.isInc());
assertFalse(node1.isCatch());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isThis());
assertFalse(node1.isParamList());
assertFalse(node1.isRegExp());
assertFalse(node1.isWith());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isArrayLit());
assertFalse(node1.hasOneChild());
assertFalse(node1.isStringKey());
assertFalse(node1.isHook());
assertFalse(node1.isFor());
assertFalse(node1.isBlock());
assertFalse(node1.isNumber());
assertFalse(node1.isGetterDef());
assertEquals(155655, node1.getSourcePosition());
assertTrue(node1.isString());
assertFalse(node1.isTry());
assertFalse(node1.isCase());
assertFalse(node1.isScript());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isContinue());
assertFalse(node1.isOr());
assertFalse(node1.isLabel());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isWhile());
assertFalse(node1.isReturn());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isLabelName());
assertFalse(node1.isGetElem());
assertFalse(node1.isVar());
assertFalse(node1.isCast());
assertFalse(node1.isName());
assertFalse(node1.isNull());
assertFalse(node1.isSetterDef());
assertFalse(node1.isDo());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isAnd());
assertFalse(node1.isObjectLit());
assertFalse(node1.isNot());
assertEquals(40, node1.getType());
assertFalse(node1.isComma());
assertFalse(node1.isVoid());
assertFalse(node1.isFunction());
assertFalse(node1.isBreak());
assertFalse(node1.isCall());
assertFalse(node1.isExprResult());
assertFalse(node1.isAssign());
assertFalse(node1.hasChildren());
assertFalse(node1.isDebugger());
assertFalse(node1.isGetProp());
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertNotSame(node1, node0);
assertFalse(node1.equals((Object)node0));
assertTrue(boolean2 == boolean1);
assertFalse(boolean2 == boolean0);

Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
assertNotNull(node_SideEffectFlags2);
assertEquals(9, node_SideEffectFlags0.valueOf());
assertFalse(node_SideEffectFlags0.areAllFlagsSet());
assertEquals(9, node_SideEffectFlags2.valueOf());
assertFalse(node_SideEffectFlags2.areAllFlagsSet());
assertSame(node_SideEffectFlags0, node_SideEffectFlags2);
assertSame(node_SideEffectFlags0, node_SideEffectFlags1);
assertSame(node_SideEffectFlags2, node_SideEffectFlags1);
assertSame(node_SideEffectFlags2, node_SideEffectFlags0);

Node node2 = Node.newNumber((double) 32, 48, 57);
assertNotNull(node2);
assertEquals(48, node2.getLineno());
assertFalse(node2.hasOneChild());
assertFalse(node2.isNot());
assertFalse(node2.isObjectLit());
assertFalse(node2.isScript());
assertFalse(node2.isLabel());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isAnd());
assertFalse(node2.isLabelName());
assertFalse(node2.isFalse());
assertFalse(node2.isCast());
assertFalse(node2.isContinue());
assertFalse(node2.isBlock());
assertFalse(node2.isSwitch());
assertFalse(node2.isHook());
assertFalse(node2.isThrow());
assertFalse(node2.isStringKey());
assertFalse(node2.isCase());
assertEquals(57, node2.getCharno());
assertFalse(node2.isInc());
assertFalse(node2.isSetterDef());
assertFalse(node2.isIn());
assertFalse(node2.isNE());
assertFalse(node2.isThis());
assertFalse(node2.isIf());
assertFalse(node2.isFor());
assertEquals(39, node2.getType());
assertFalse(node2.isWith());
assertFalse(node2.isRegExp());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isCatch());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isTry());
assertFalse(node2.isVoid());
assertFalse(node2.isDebugger());
assertFalse(node2.isTrue());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isEmpty());
assertFalse(node2.isGetterDef());
assertEquals(196665, node2.getSourcePosition());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isParamList());
assertFalse(node2.isArrayLit());
assertFalse(node2.isFunction());
assertFalse(node2.isAdd());
assertFalse(node2.isNew());
assertFalse(node2.isVar());
assertFalse(node2.isWhile());
assertFalse(node2.isDo());
assertFalse(node2.isString());
assertFalse(node2.isOr());
assertFalse(node2.isReturn());
assertFalse(node2.isGetProp());
assertTrue(node2.isNumber());
assertFalse(node2.isComma());
assertFalse(node2.isNull());
assertFalse(node2.isAssign());
assertFalse(node2.isName());
assertFalse(node2.isGetElem());
assertFalse(node2.isDelProp());
assertFalse(node2.isBreak());
assertFalse(node2.hasChildren());
assertFalse(node2.isDec());
assertFalse(node2.isCall());
assertFalse(node2.isExprResult());
assertFalse(node2.isTypeOf());
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(2, Node.POST_FLAG);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(57, Node.LAST_PROP);
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node1));

boolean boolean3 = node2.mayMutateGlobalStateOrThrow();
assertTrue(boolean3);
assertEquals(48, node2.getLineno());
assertFalse(node2.hasOneChild());
assertFalse(node2.isNot());
assertFalse(node2.isObjectLit());
assertFalse(node2.isScript());
assertFalse(node2.isLabel());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isAnd());
assertFalse(node2.isLabelName());
assertFalse(node2.isFalse());
assertFalse(node2.isCast());
assertFalse(node2.isContinue());
assertFalse(node2.isBlock());
assertFalse(node2.isSwitch());
assertFalse(node2.isHook());
assertFalse(node2.isThrow());
assertFalse(node2.isStringKey());
assertFalse(node2.isCase());
assertEquals(57, node2.getCharno());
assertFalse(node2.isInc());
assertFalse(node2.isSetterDef());
assertFalse(node2.isIn());
assertFalse(node2.isNE());
assertFalse(node2.isThis());
assertFalse(node2.isIf());
assertFalse(node2.isFor());
assertEquals(39, node2.getType());
assertFalse(node2.isWith());
assertFalse(node2.isRegExp());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isCatch());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isTry());
assertFalse(node2.isVoid());
assertFalse(node2.isDebugger());
assertFalse(node2.isTrue());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isEmpty());
assertFalse(node2.isGetterDef());
assertEquals(196665, node2.getSourcePosition());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isParamList());
assertFalse(node2.isArrayLit());
assertFalse(node2.isFunction());
assertFalse(node2.isAdd());
assertFalse(node2.isNew());
assertFalse(node2.isVar());
assertFalse(node2.isWhile());
assertFalse(node2.isDo());
assertFalse(node2.isString());
assertFalse(node2.isOr());
assertFalse(node2.isReturn());
assertFalse(node2.isGetProp());
assertTrue(node2.isNumber());
assertFalse(node2.isComma());
assertFalse(node2.isNull());
assertFalse(node2.isAssign());
assertFalse(node2.isName());
assertFalse(node2.isGetElem());
assertFalse(node2.isDelProp());
assertFalse(node2.isBreak());
assertFalse(node2.hasChildren());
assertFalse(node2.isDec());
assertFalse(node2.isCall());
assertFalse(node2.isExprResult());
assertFalse(node2.isTypeOf());
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(2, Node.POST_FLAG);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(57, Node.LAST_PROP);
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node1));
assertTrue(boolean3 == boolean0);
assertFalse(boolean3 == boolean1);
assertFalse(boolean3 == boolean2);

Iterable<Node> iterable0 = node2.children();
assertNotNull(iterable0);
assertFalse(iterable0.contains(node1));
assertEquals(48, node2.getLineno());
assertFalse(node2.hasOneChild());
assertFalse(node2.isNot());
assertFalse(node2.isObjectLit());
assertFalse(node2.isScript());
assertFalse(node2.isLabel());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isAnd());
assertFalse(node2.isLabelName());
assertFalse(node2.isFalse());
assertFalse(node2.isCast());
assertFalse(node2.isContinue());
assertFalse(node2.isBlock());
assertFalse(node2.isSwitch());
assertFalse(node2.isHook());
assertFalse(node2.isThrow());
assertFalse(node2.isStringKey());
assertFalse(node2.isCase());
assertEquals(57, node2.getCharno());
assertFalse(node2.isInc());
assertFalse(node2.isSetterDef());
assertFalse(node2.isIn());
assertFalse(node2.isNE());
assertFalse(node2.isThis());
assertFalse(node2.isIf());
assertFalse(node2.isFor());
assertEquals(39, node2.getType());
assertFalse(node2.isWith());
assertFalse(node2.isRegExp());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isCatch());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isTry());
assertFalse(node2.isVoid());
assertFalse(node2.isDebugger());
assertFalse(node2.isTrue());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isEmpty());
assertFalse(node2.isGetterDef());
assertEquals(196665, node2.getSourcePosition());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isParamList());
assertFalse(node2.isArrayLit());
assertFalse(node2.isFunction());
assertFalse(node2.isAdd());
assertFalse(node2.isNew());
assertFalse(node2.isVar());
assertFalse(node2.isWhile());
assertFalse(node2.isDo());
assertFalse(node2.isString());
assertFalse(node2.isOr());
assertFalse(node2.isReturn());
assertFalse(node2.isGetProp());
assertTrue(node2.isNumber());
assertFalse(node2.isComma());
assertFalse(node2.isNull());
assertFalse(node2.isAssign());
assertFalse(node2.isName());
assertFalse(node2.isGetElem());
assertFalse(node2.isDelProp());
assertFalse(node2.isBreak());
assertFalse(node2.hasChildren());
assertFalse(node2.isDec());
assertFalse(node2.isCall());
assertFalse(node2.isExprResult());
assertFalse(node2.isTypeOf());
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(50, Node.FREE_CALL);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(2, Node.POST_FLAG);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(57, Node.LAST_PROP);
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node1));

Node node3 = Node.newString((-1175), "Function");
assertNotNull(node3);
assertFalse(node3.isScript());
assertFalse(node3.isExprResult());
assertFalse(node3.isAnd());
assertFalse(node3.isInstanceOf());
assertFalse(node3.isCast());
assertFalse(node3.isGetElem());
assertFalse(node3.isAssign());
assertFalse(node3.isWith());
assertEquals((-1), node3.getSourcePosition());
assertFalse(node3.isNumber());
assertFalse(node3.isTypeOf());
assertFalse(node3.isDec());
assertFalse(node3.isComma());
assertFalse(node3.isThis());
assertFalse(node3.isGetProp());
assertFalse(node3.hasChildren());
assertFalse(node3.isLabelName());
assertFalse(node3.hasOneChild());
assertFalse(node3.isNot());
assertFalse(node3.isObjectLit());
assertEquals((-1), node3.getCharno());
assertFalse(node3.isNew());
assertFalse(node3.isDo());
assertFalse(node3.isWhile());
assertFalse(node3.isSwitch());
assertFalse(node3.isVar());
assertFalse(node3.isCall());
assertFalse(node3.isReturn());
assertFalse(node3.isLabel());
assertFalse(node3.isNull());
assertFalse(node3.isBreak());
assertFalse(node3.isName());
assertFalse(node3.isDelProp());
assertFalse(node3.isAssignAdd());
assertFalse(node3.isAdd());
assertFalse(node3.isOr());
assertFalse(node3.isEmpty());
assertFalse(node3.isRegExp());
assertFalse(node3.isDebugger());
assertFalse(node3.isTrue());
assertFalse(node3.isVoid());
assertFalse(node3.isTry());
assertFalse(node3.isDefaultCase());
assertFalse(node3.isArrayLit());
assertFalse(node3.isCatch());
assertEquals(0, node3.getChildCount());
assertFalse(node3.isFunction());
assertFalse(node3.isGetterDef());
assertFalse(node3.isFor());
assertFalse(node3.isStringKey());
assertFalse(node3.isParamList());
assertFalse(node3.isString());
assertFalse(node3.isInc());
assertFalse(node3.isBlock());
assertFalse(node3.isCase());
assertEquals((-1175), node3.getType());
assertFalse(node3.isHook());
assertEquals((-1), node3.getLineno());
assertFalse(node3.isContinue());
assertFalse(node3.hasMoreThanOneChild());
assertFalse(node3.isFalse());
assertFalse(node3.isNE());
assertFalse(node3.isSetterDef());
assertFalse(node3.isThrow());
assertFalse(node3.isIf());
assertFalse(node3.isIn());
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(1, Node.DECR_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(2, Node.POST_FLAG);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(50, Node.FREE_CALL);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertNotSame(node3, node1);
assertNotSame(node3, node0);
assertFalse(node3.equals((Object)node1));
assertFalse(node3.equals((Object)node0));
assertFalse(node3.equals((Object)node2));

node0.addChildrenAfter(node2, node3);

[MASTER] 10:14:18.063 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'Node_ESTest' to results/Closure-110/com.google.javascript.rhino.Node/BBC-F0-50/tests/10
* Done!

* Computation finished
