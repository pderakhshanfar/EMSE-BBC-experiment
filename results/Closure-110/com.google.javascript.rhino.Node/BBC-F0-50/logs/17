* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.google.javascript.rhino.Node
* Starting Client-0
* Connecting to master process on port 11911
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-110/build/classes
  - subjects/buggy-versions/Closure-110/lib/args4j.jar
  - subjects/buggy-versions/Closure-110/lib/guava.jar
  - subjects/buggy-versions/Closure-110/lib/json.jar
  - subjects/buggy-versions/Closure-110/lib/jsr305.jar
  - subjects/buggy-versions/Closure-110/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-110/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-110/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.Node
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 7813
* Using seed 1481333150
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 5977 / 7813
[MASTER] 10:29:24.286 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 10:29:28.883 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 10:29:46.399 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 26 TABLESWITCH L114 Case 54 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1871: 617
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1870: 617
Number of times BBC is called for com.google.javascript.rhino.Node.isVar()Z: I5 Branch 276 IF_ICMPNE L2435 - false: 4266
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1872: 617
Number of times BBC is called for com.google.javascript.rhino.Node.isVar()Z: I5 Branch 276 IF_ICMPNE L2435 - true: 44
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1867: 617
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1866: 617
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I12 Branch 280 IFEQ L174 - false: 142
Number of times BBC is called for com.google.javascript.rhino.Node.setDouble(D)V: I5 Branch 114 IF_ICMPNE L902 - false: 7814
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I12 Branch 280 IFEQ L174 - true: 44
Number of times BBC is called for com.google.javascript.rhino.Node.isParamList()Z: I5 Branch 263 IF_ICMPNE L2383 - true: 4545
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 26 TABLESWITCH L114 Case 54 - true: 5786
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I127 Branch 126 IF_ICMPGE L980 - false: 332
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I44 Branch 171 IF_ICMPNE L1527 - false: 5909
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - true: 2018
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1861: 617
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1860: 617
Number of times BBC is called for com.google.javascript.rhino.Node.isParamList()Z: I5 Branch 263 IF_ICMPNE L2383 - false: 6102
Number of times BBC is called for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 210 IFNONNULL L1747 - true: 42
Number of times BBC is called for com.google.javascript.rhino.Node.isThis()Z: I5 Branch 271 IF_ICMPNE L2415 - true: 4183
Number of times BBC is called for com.google.javascript.rhino.Node.getLastSibling()Lcom/google/javascript/rhino/Node;: I8 Branch 64 IFNULL L589 - false: 4178
Number of times BBC is called for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - false: 7782
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: Line 1365: 2179
Number of times BBC is called for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - true: 871
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 19 TABLESWITCH L114 Case 47 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.isThis()Z: I5 Branch 271 IF_ICMPNE L2415 - false: 29275
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I16 Branch 90 IFNONNULL L717 - false: 744
Number of times BBC is called for com.google.javascript.rhino.Node.isGetterDef()Z: I5 Branch 245 IF_ICMPNE L2311 - false: 18882
Number of times BBC is called for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - true: 2969
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I83 Branch 175 IF_ICMPNE L1534 - false: 7725
Number of times BBC is called for com.google.javascript.rhino.Node.isCase()Z: Line 2251: 215
Number of times BBC is called for com.google.javascript.rhino.Node.isArrayLit()Z: Line 2227: 44
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I45 Branch 164 IFNULL L1483 - true: 1616
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I16 Branch 90 IFNONNULL L717 - true: 1209
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 89 IFNONNULL L715 - true: 4148
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 161 IFNE L1473 - false: 246
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 212 IFNULL L1793 - false: 222
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 48 IFNONNULL L424 - true: 15910
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 19 TABLESWITCH L114 Case 47 - true: 2144
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I16 Branch 167 IF_ACMPEQ L1517 - false: 1558
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 161 IFNE L1473 - true: 1757
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I45 Branch 164 IFNULL L1483 - false: 7956
Number of times BBC is called for com.google.javascript.rhino.Node.isDebugger()Z: I5 Branch 235 IF_ICMPNE L2271 - true: 398
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I182 Branch 184 IFNE L1558 - false: 1580
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 89 IFNONNULL L715 - false: 744
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: Line 223: 10098
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I12 Branch 154 IF_ACMPNE L1417 - true: 1420
Number of times BBC is called for com.google.javascript.rhino.Node.mergeLineCharNo(II)I: I15 Branch 141 IFEQ L1197 - false: 467
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I9 Branch 151 IF_ACMPEQ L1403 - true: 237
Number of times BBC is called for com.google.javascript.rhino.Node.getJsDocBuilderForNode()Lcom/google/javascript/rhino/Node$FileLevelJsDocBuilder;: Line 1847: 1006
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I12 Branch 154 IF_ACMPNE L1417 - false: 711
Number of times BBC is called for com.google.javascript.rhino.Node.isFalse()Z: I5 Branch 242 IF_ICMPNE L2299 - true: 4183
Number of times BBC is called for com.google.javascript.rhino.Node.isSetterDef()Z: I5 Branch 267 IF_ICMPNE L2399 - false: 41464
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I49 Branch 73 IFNONNULL L627 - true: 82
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.<init>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 2195: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - false: 4979
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 38 IFNONNULL L400 - true: 19875
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.<init>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 2197: 131
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 156 IFNE L1446 - true: 266
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.<init>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 2196: 131
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - false: 131
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - true: 266
Number of times BBC is called for com.google.javascript.rhino.Node.isFalse()Z: I5 Branch 242 IF_ICMPNE L2299 - false: 4481
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - true: 622
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 12 TABLESWITCH L114 Case 40 - true: 4545
Number of times BBC is called for com.google.javascript.rhino.Node.isObjectLit()Z: Line 2375: 2969
Number of times BBC is called for com.google.javascript.rhino.Node.isAssign()Z: Line 2231: 2969
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 12 TABLESWITCH L114 Case 40 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 195 LOOKUPSWITCH L1616 Case 33 - true: 2868
Number of times BBC is called for com.google.javascript.rhino.Node.isGetElem()Z: I5 Branch 246 IF_ICMPNE L2315 - false: 296
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 195 LOOKUPSWITCH L1616 Case 33 - false: 215
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I30 Branch 169 IFNE L1523 - false: 1545
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I7 Branch 81 IF_ACMPNE L669 - false: 114
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: Line 307: 40127
Number of times BBC is called for com.google.javascript.rhino.Node.getJsDocBuilderForNode()Lcom/google/javascript/rhino/Node$FileLevelJsDocBuilder;: root-Branch: 1006
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceFileForTesting(Ljava/lang/String;)V: root-Branch: 131
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: Line 1380: 99476
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I30 Branch 169 IFNE L1523 - true: 121
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - false: 131
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.<init>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 2198: 131
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I7 Branch 81 IF_ACMPNE L669 - true: 164
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - true: 131
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 5 TABLESWITCH L114 Case 33 - true: 3983
Number of times BBC is called for com.google.javascript.rhino.Node.isDec()Z: I5 Branch 236 IF_ICMPNE L2275 - true: 6001
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I17 Branch 63 IF_ACMPNE L577 - true: 5076
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I17 Branch 63 IF_ACMPNE L577 - false: 5274
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: Line 1473: 131
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: I12 Branch 201 IFNULL L1658 - true: 131
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I66 Branch 160 IFNULL L1459 - false: 324
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 5 TABLESWITCH L114 Case 33 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.isDec()Z: I5 Branch 236 IF_ICMPNE L2275 - false: 15876
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - false: 902
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: I12 Branch 201 IFNULL L1658 - false: 271
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1337: 131
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1333: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isAssignAdd()Z: I5 Branch 226 IF_ICMPNE L2235 - false: 13555
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1332: 131
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;II)V: Line 472: 53
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;II)V: Line 473: 53
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;II)V: Line 471: 53
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 642: 5278
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I35 Branch 282 IFNE L179 - false: 299
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 640: 5278
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 646: 42311
Number of times BBC is called for com.google.javascript.rhino.Node.isFromExterns()Z: I8 Branch 134 IFNONNULL L1128 - true: 2415
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 644: 5278
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: Line 1278: 20474
Number of times BBC is called for com.google.javascript.rhino.Node.isFor()Z: Line 2303: 617
Number of times BBC is called for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 209 IFNONNULL L1743 - true: 6811
Number of times BBC is called for com.google.javascript.rhino.Node.isAssignAdd()Z: I5 Branch 226 IF_ICMPNE L2235 - true: 131
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 162 IFNONNULL L1480 - true: 20202
Number of times BBC is called for com.google.javascript.rhino.Node.isFromExterns()Z: I8 Branch 134 IFNONNULL L1128 - false: 305
Number of times BBC is called for com.google.javascript.rhino.Node.isNE()Z: I5 Branch 256 IF_ICMPNE L2355 - false: 34615
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I35 Branch 282 IFNE L179 - true: 299
Number of times BBC is called for com.google.javascript.rhino.Node.isGetProp()Z: I5 Branch 247 IF_ICMPNE L2319 - false: 7558
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 193 LOOKUPSWITCH L1598 Default-Case - true: 398
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - true: 99476
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 99476
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 162 IFNONNULL L1480 - false: 1511
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - false: 99476
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 18 TABLESWITCH L114 Case 46 - true: 3080
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: Line 492: 87
Number of times BBC is called for com.google.javascript.rhino.Node.isCatch()Z: I5 Branch 232 IF_ICMPNE L2259 - true: 44
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 3 TABLESWITCH L114 Case 31 - true: 2806
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 193 LOOKUPSWITCH L1598 Default-Case - false: 3768
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I8 Branch 287 IFEQ L232 - false: 50
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 27 TABLESWITCH L114 Case 55 - true: 3568
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 18 TABLESWITCH L114 Case 46 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I9 Branch 151 IF_ACMPEQ L1403 - false: 1184
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: Line 494: 87
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 27 TABLESWITCH L114 Case 55 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.isDebugger()Z: I5 Branch 235 IF_ICMPNE L2271 - false: 25963
Number of times BBC is called for com.google.javascript.rhino.Node.isGetProp()Z: I5 Branch 247 IF_ICMPNE L2319 - true: 617
Number of times BBC is called for com.google.javascript.rhino.Node.isNot()Z: Line 2363: 44
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I39 Branch 132 IFNULL L1035 - false: 166
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I4 Branch 99 IFNONNULL L778 - true: 398
Number of times BBC is called for com.google.javascript.rhino.Node.isHook()Z: I5 Branch 248 IF_ICMPNE L2323 - false: 6179
Number of times BBC is called for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I9 Branch 117 IF_ICMPNE L925 - false: 748
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: I5 Branch 299 IFNULL L1365 - true: 2179
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: I5 Branch 299 IFNULL L1365 - false: 2322
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I4 Branch 99 IFNONNULL L778 - false: 493
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I44 Branch 52 IF_ICMPGE L482 - true: 15
Number of times BBC is called for com.google.javascript.rhino.Node.isCatch()Z: I5 Branch 232 IF_ICMPNE L2259 - false: 22158
Number of times BBC is called for com.google.javascript.rhino.Node.isVar()Z: Line 2435: 44
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I39 Branch 132 IFNULL L1035 - true: 76
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(Lcom/google/javascript/rhino/Node$SideEffectFlags;)V: Line 2036: 20759
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 4 TABLESWITCH L114 Case 32 - true: 4380
Number of times BBC is called for com.google.javascript.rhino.Node.isDelProp()Z: Line 2283: 44
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 4 TABLESWITCH L114 Case 32 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I170 Branch 182 IFEQ L1558 - true: 41
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 13 TABLESWITCH L114 Case 41 - true: 5356
Number of times BBC is called for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: root-Branch: 502
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 13 TABLESWITCH L114 Case 41 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I162 Branch 127 LOOKUPSWITCH L987 Default-Case - true: 332
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I162 Branch 127 LOOKUPSWITCH L987 Default-Case - false: 7648
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - true: 46412
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I133 Branch 178 IF_ICMPNE L1547 - false: 6688
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateArguments()Z: Line 2161: 871
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I35 Branch 163 IFNULL L1480 - false: 1616
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - false: 20474
Number of times BBC is called for com.google.javascript.rhino.Node.isNew()Z: I5 Branch 257 IF_ICMPNE L2359 - false: 12190
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: Line 2211: 99476
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I4 Branch 150 IFNULL L1403 - false: 367
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 157 IFNONNULL L1453 - true: 15223
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceEncodedPositionForTree(I)V: I13 Branch 138 IFNULL L1183 - false: 80
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentToTyped(Lcom/google/javascript/rhino/Node;)Z: Line 1505: 2337
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: Line 1370: 3140
Number of times BBC is called for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 99476
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I4 Branch 150 IFNULL L1403 - true: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isInstanceOf()Z: Line 2339: 215
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 17 TABLESWITCH L114 Case 45 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 157 IFNONNULL L1453 - false: 136
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I7 Branch 153 IFNULL L1416 - false: 841
Number of times BBC is called for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - true: 44
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - true: 52357
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 17 TABLESWITCH L114 Case 45 - true: 5896
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - false: 42311
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I7 Branch 75 IF_ACMPNE L640 - true: 1172
Number of times BBC is called for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - false: 4412
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I7 Branch 153 IFNULL L1416 - true: 131
Number of times BBC is called for com.google.javascript.rhino.Node.getJSType()Lcom/google/javascript/rhino/jstype/JSType;: Line 1839: 44
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - false: 10284
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - true: 17072
Number of times BBC is called for com.google.javascript.rhino.Node.isBlock()Z: Line 2239: 44
Number of times BBC is called for com.google.javascript.rhino.Node.isArrayLit()Z: I5 Branch 224 IF_ICMPNE L2227 - true: 44
Number of times BBC is called for com.google.javascript.rhino.Node.isArrayLit()Z: I5 Branch 224 IF_ICMPNE L2227 - false: 355
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 76 IFNONNULL L642 - true: 31821
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateArguments()Z: I7 Branch 219 IFNE L2161 - true: 7841
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - true: 22661
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I31 Branch 77 IFNONNULL L644 - true: 5278
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 76 IFNONNULL L642 - false: 5278
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateArguments()Z: I7 Branch 219 IFNE L2161 - false: 871
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - false: 20474
Number of times BBC is called for com.google.javascript.rhino.Node.isBreak()Z: Line 2243: 131
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I31 Branch 77 IFNONNULL L644 - false: 42000
Number of times BBC is called for com.google.javascript.rhino.Node.setQuotedString()V: root-Branch: 398
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - false: 46412
Number of times BBC is called for com.google.javascript.rhino.Node.isNoSideEffectsCall()Z: root-Branch: 2810
Number of times BBC is called for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - true: 1425
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 197 LOOKUPSWITCH L1616 Default-Case - true: 215
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: Line 349: 99476
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - true: 20474
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2031: 9218
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.iterator()Ljava/util/Iterator;: root-Branch: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - false: 26916
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I30 Branch 39 IFNONNULL L401 - true: 39
Number of times BBC is called for com.google.javascript.rhino.Node.getSourcePosition()I: root-Branch: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isFor()Z: I5 Branch 243 IF_ICMPNE L2303 - false: 23691
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 80 IFNULL L669 - false: 104
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I6 Branch 165 IF_ICMPNE L1517 - true: 26
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentToTyped(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 2337
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2032: 9218
Number of times BBC is called for com.google.javascript.rhino.Node.isFor()Z: I5 Branch 243 IF_ICMPNE L2303 - true: 617
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I42 Branch 67 IFNONNULL L601 - true: 971
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 781: 493
Number of times BBC is called for com.google.javascript.rhino.Node.isInc()Z: I5 Branch 251 IF_ICMPNE L2335 - false: 2866
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 778: 398
Number of times BBC is called for com.google.javascript.rhino.Node.isWith()Z: I5 Branch 279 IF_ICMPNE L2447 - true: 617
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 780: 493
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 14 TABLESWITCH L114 Case 42 - true: 2950
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - false: 53528
Number of times BBC is called for com.google.javascript.rhino.Node.isSwitch()Z: Line 2411: 1727
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 47 IFNONNULL L423 - true: 54
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: root-Branch: 40127
Number of times BBC is called for com.google.javascript.rhino.Node.isTry()Z: Line 2427: 131
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - true: 3140
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I85 Branch 50 IFNONNULL L426 - true: 15865
Number of times BBC is called for com.google.javascript.rhino.Node.isThrow()Z: Line 2419: 44
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: Line 1416: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isWith()Z: I5 Branch 279 IF_ICMPNE L2447 - false: 38841
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 197 LOOKUPSWITCH L1616 Default-Case - false: 3293
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 252: 44
Number of times BBC is called for com.google.javascript.rhino.Node.isTypeOf()Z: I5 Branch 275 IF_ICMPNE L2431 - false: 32834
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 253: 44
Number of times BBC is called for com.google.javascript.rhino.Node.hasOneChild()Z: I9 Branch 149 IF_ACMPNE L1393 - true: 1785
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 14 TABLESWITCH L114 Case 42 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: Line 1311: 99476
Number of times BBC is called for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: I5 Branch 115 IF_ICMPNE L912 - true: 1572
Number of times BBC is called for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - true: 215
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1039: 115
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L114 Case 35 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 16 TABLESWITCH L114 Case 44 - true: 4151
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1032: 44
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1033: 115
Number of times BBC is called for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - false: 1284
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1034: 115
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L114 Case 35 - true: 5540
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 25 TABLESWITCH L114 Case 53 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 84 IFNULL L676 - false: 882
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: Line 1029: 44
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 16 TABLESWITCH L114 Case 44 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.isString()Z: I5 Branch 268 IF_ICMPNE L2403 - false: 195
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 25 TABLESWITCH L114 Case 53 - true: 3263
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: I4 Branch 216 IFNONNULL L1974 - false: 131
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I27 Branch 207 IFNULL L1724 - false: 247
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: I4 Branch 216 IFNONNULL L1974 - true: 967
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 156 IFNE L1446 - false: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isAssignAdd()Z: Line 2235: 131
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - false: 444
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: root-Branch: 99476
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 1425
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;II)V: Line 460: 55
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;II)V: Line 461: 55
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;II)V: Line 462: 55
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - false: 1716
Number of times BBC is called for com.google.javascript.rhino.Node.isContinue()Z: I5 Branch 234 IF_ICMPNE L2267 - false: 3955
Number of times BBC is called for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: I5 Branch 115 IF_ICMPNE L912 - false: 6982
Number of times BBC is called for com.google.javascript.rhino.Node.isScript()Z: I5 Branch 266 IF_ICMPNE L2395 - false: 40851
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I18 Branch 51 IFEQ L478 - true: 15
Number of times BBC is called for com.google.javascript.rhino.Node.setChangeTime(I)V: Line 1895: 131
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - true: 6663
Number of times BBC is called for com.google.javascript.rhino.Node.setChangeTime(I)V: Line 1894: 131
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: Line 2166: 215
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: root-Branch: 99476
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - false: 6688
Number of times BBC is called for com.google.javascript.rhino.Node.isScript()Z: I5 Branch 266 IF_ICMPNE L2395 - true: 2179
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.iterator()Ljava/util/Iterator;: Line 1362: 131
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I74 Branch 49 IFNONNULL L425 - true: 98
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 196 LOOKUPSWITCH L1616 Case 38 - true: 3047
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 214 IFNONNULL L1813 - true: 770
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: root-Branch: 44
Number of times BBC is called for com.google.javascript.rhino.Node.isLabel()Z: Line 2343: 7977
Number of times BBC is called for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - false: 147
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - true: 6688
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceFileForTesting(Ljava/lang/String;)V: Line 1099: 131
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I12 Branch 62 IFNULL L576 - false: 5946
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 715: 744
Number of times BBC is called for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - true: 280
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 717: 744
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: Line 344: 54758
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 721: 744
Number of times BBC is called for com.google.javascript.rhino.Node.isName()Z: I5 Branch 255 IF_ICMPNE L2351 - false: 27970
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I12 Branch 62 IFNULL L576 - true: 871
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 723: 744
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceFileForTesting(Ljava/lang/String;)V: Line 1100: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isName()Z: I5 Branch 255 IF_ICMPNE L2351 - true: 1572
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 724: 744
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 24 TABLESWITCH L114 Case 52 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 725: 744
Number of times BBC is called for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: root-Branch: 305
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 24 TABLESWITCH L114 Case 52 - true: 2670
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTree()Ljava/lang/String;: root-Branch: 44
Number of times BBC is called for com.google.javascript.rhino.Node.isBlock()Z: I5 Branch 227 IF_ICMPNE L2239 - true: 44
Number of times BBC is called for com.google.javascript.rhino.Node.isOr()Z: Line 2379: 44
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.getString()Ljava/lang/String;: root-Branch: 44
Number of times BBC is called for com.google.javascript.rhino.Node.areBitFlagsSet(II)Z: I6 Branch 221 IF_ICMPNE L2174 - false: 5765
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 729: 6859
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 196 LOOKUPSWITCH L1616 Case 38 - false: 215
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 15 TABLESWITCH L114 Case 43 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 731: 4984
Number of times BBC is called for com.google.javascript.rhino.Node.isWith()Z: Line 2447: 617
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 734: 4984
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 44
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 735: 4984
Number of times BBC is called for com.google.javascript.rhino.Node.isReturn()Z: I5 Branch 265 IF_ICMPNE L2391 - false: 36305
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 736: 4984
Number of times BBC is called for com.google.javascript.rhino.Node.isBlock()Z: I5 Branch 227 IF_ICMPNE L2239 - false: 14487
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L114 Case 34 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 15 TABLESWITCH L114 Case 43 - true: 3025
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I32 Branch 119 IF_ICMPNE L956 - false: 444
Number of times BBC is called for com.google.javascript.rhino.Node.isReturn()Z: I5 Branch 265 IF_ICMPNE L2391 - true: 1871
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L114 Case 34 - true: 3266
Number of times BBC is called for com.google.javascript.rhino.Node.isNull()Z: I5 Branch 259 IF_ICMPNE L2367 - false: 7701
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 37 IFNONNULL L399 - true: 96
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I12 Branch 118 IFEQ L953 - false: 4
Number of times BBC is called for com.google.javascript.rhino.Node.isParamList()Z: Line 2383: 4545
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I86 Branch 86 IFNULL L685 - false: 22148
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: Line 2202: 8144
Number of times BBC is called for com.google.javascript.rhino.Node.isLabel()Z: I5 Branch 253 IF_ICMPNE L2343 - false: 36774
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - true: 2224
Number of times BBC is called for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - false: 12060
Number of times BBC is called for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - true: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: Line 1616: 215
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: Line 1403: 131
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L114 Case 36 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.isLabel()Z: I5 Branch 253 IF_ICMPNE L2343 - true: 7977
Number of times BBC is called for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: I4 Branch 199 IFNULL L1634 - false: 252
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.<init>(Lcom/google/javascript/rhino/Node;)V: root-Branch: 617
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: I4 Branch 286 IF_ACMPNE L223 - true: 10098
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L114 Case 36 - true: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I62 Branch 189 IF_ICMPNE L1586 - false: 3018
Number of times BBC is called for com.google.javascript.rhino.Node.putBooleanProp(IZ)V: I5 Branch 109 IFEQ L852 - true: 18
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: Line 1299: 20474
Number of times BBC is called for com.google.javascript.rhino.Node.isFunction()Z: I5 Branch 244 IF_ICMPNE L2307 - true: 131
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: I4 Branch 286 IF_ACMPNE L223 - false: 14142
Number of times BBC is called for com.google.javascript.rhino.Node.isObjectLit()Z: I5 Branch 261 IF_ICMPNE L2375 - true: 2969
Number of times BBC is called for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: Line 925: 7291
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I25 Branch 297 IFNONNULL L1867 - true: 724
Number of times BBC is called for com.google.javascript.rhino.Node.isObjectLit()Z: I5 Branch 261 IF_ICMPNE L2375 - false: 10200
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 565: 44
Number of times BBC is called for com.google.javascript.rhino.Node.getDouble()D: I5 Branch 113 IF_ICMPNE L889 - false: 2957
Number of times BBC is called for com.google.javascript.rhino.Node.isTry()Z: I5 Branch 274 IF_ICMPNE L2427 - false: 14066
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 570: 191
Number of times BBC is called for com.google.javascript.rhino.Node.getSortedPropTypes()[I: I33 Branch 112 IFNULL L878 - false: 477
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 568: 251
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I24 Branch 168 IFEQ L1523 - false: 121
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 1 TABLESWITCH L114 Case 29 - false: 2142
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: Line 1577: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.isTry()Z: I5 Branch 274 IF_ICMPNE L2427 - true: 131
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: Line 174: 44
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: Line 173: 44
Number of times BBC is called for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - false: 21456
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I73 Branch 85 IF_ACMPNE L680 - true: 21686
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I73 Branch 85 IF_ACMPNE L680 - false: 892
Number of times BBC is called for com.google.javascript.rhino.Node.isName()Z: Line 2351: 1572
Number of times BBC is called for com.google.javascript.rhino.Node.getJSType()Lcom/google/javascript/rhino/jstype/JSType;: root-Branch: 44
Number of times BBC is called for com.google.javascript.rhino.Node.setLineno(I)V: I9 Branch 137 IF_ICMPNE L1165 - false: 30
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 30 TABLESWITCH L114 Default-Case - true: 2142
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 42 IFNONNULL L404 - true: 19709
Number of times BBC is called for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - true: 44
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I43 Branch 283 IFNE L179 - true: 19188
Number of times BBC is called for com.google.javascript.rhino.Node.isLabelName()Z: I5 Branch 254 IF_ICMPNE L2347 - false: 14585
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I5 Branch 217 IF_ICMPEQ L2026 - true: 14173
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: I9 Branch 155 IFNULL L1430 - true: 611
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I38 Branch 208 IFNONNULL L1727 - true: 247
Number of times BBC is called for com.google.javascript.rhino.Node.isGetProp()Z: Line 2319: 617
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 41 IFNONNULL L403 - true: 76
Number of times BBC is called for com.google.javascript.rhino.Node.getExistingIntProp(I)I: I9 Branch 107 IFNONNULL L838 - true: 7152
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 74 IFNULL L640 - false: 5278
Number of times BBC is called for com.google.javascript.rhino.Node.isFunction()Z: I5 Branch 244 IF_ICMPNE L2307 - false: 868
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1682: 44
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.<init>(Lcom/google/javascript/rhino/Node$AncestorIterable;)V: root-Branch: 131
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: Line 317: 99476
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 74 IFNULL L640 - true: 11156
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1684: 44
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: root-Branch: 44
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 44 IFNONNULL L420 - true: 16062
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I15 Branch 288 IFLE L232 - false: 54
Number of times BBC is called for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 211 IFNULL L1764 - false: 89
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - false: 7725
Number of times BBC is called for com.google.javascript.rhino.Node.isRegExp()Z: I5 Branch 264 IF_ICMPNE L2387 - false: 8568
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I15 Branch 288 IFLE L232 - true: 414
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - true: 7725
Number of times BBC is called for com.google.javascript.rhino.Node.isExprResult()Z: Line 2295: 871
Number of times BBC is called for com.google.javascript.rhino.Node.isIn()Z: I5 Branch 250 IF_ICMPNE L2331 - false: 920
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I150 Branch 180 IFEQ L1553 - true: 40
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 30 TABLESWITCH L114 Default-Case - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.isWhile()Z: Line 2443: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1694: 10284
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 23 TABLESWITCH L114 Case 51 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I4 Branch 293 IFEQ L2202 - true: 8144
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 190 LOOKUPSWITCH L1598 Case 33 - false: 398
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1692: 10284
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1693: 10284
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 190 LOOKUPSWITCH L1598 Case 33 - true: 10916
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 23 TABLESWITCH L114 Case 51 - true: 2143
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1687: 10284
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I4 Branch 293 IFEQ L2202 - false: 37369
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1688: 10284
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1689: 10284
Number of times BBC is called for com.google.javascript.rhino.Node.isDo()Z: Line 2287: 2656
Number of times BBC is called for com.google.javascript.rhino.Node.isDec()Z: Line 2275: 6001
Number of times BBC is called for com.google.javascript.rhino.Node.getSortedPropTypes()[I: I11 Branch 111 IFNULL L873 - false: 467
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I26 Branch 83 IFNONNULL L671 - true: 114
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1019: 12888
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1018: 12888
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1015: 44
Number of times BBC is called for com.google.javascript.rhino.Node.isAdd()Z: Line 2219: 1425
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1017: 149
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 213 IFNONNULL L1809 - true: 19160
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I11 Branch 166 IF_ICMPNE L1517 - false: 42
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1016: 44
Number of times BBC is called for com.google.javascript.rhino.Node.appendStringTree(Ljava/lang/Appendable;)V: Line 1024: 44
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1858: 617
Number of times BBC is called for com.google.javascript.rhino.Node.appendStringTree(Ljava/lang/Appendable;)V: Line 1025: 115
Number of times BBC is called for com.google.javascript.rhino.Node.setChangeTime(I)V: root-Branch: 131
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - true: 44
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I73 Branch 173 IF_ICMPEQ L1533 - false: 2
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - false: 9967
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 354: 44
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: Line 114: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I9 Branch 218 IF_ICMPNE L2026 - false: 7765
Number of times BBC is called for com.google.javascript.rhino.Node.appendStringTree(Ljava/lang/Appendable;)V: root-Branch: 44
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L114 Case 37 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: Line 1319: 99476
Number of times BBC is called for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: Line 1646: 215
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - true: 405
Number of times BBC is called for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: Line 1647: 215
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: I9 Branch 155 IFNULL L1430 - false: 398
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: I8 Branch 61 IFLE L566 - true: 191
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: I8 Branch 61 IFLE L566 - false: 44
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTree()Ljava/lang/String;: Line 1010: 44
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L114 Case 37 - true: 2154
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - false: 6510
Number of times BBC is called for com.google.javascript.rhino.Node.srcrefTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: root-Branch: 305
Number of times BBC is called for com.google.javascript.rhino.Node.isAnd()Z: I5 Branch 223 IF_ICMPNE L2223 - false: 32055
Number of times BBC is called for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: Line 1986: 305
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: Line 1103: 305
Number of times BBC is called for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: Line 1985: 305
Number of times BBC is called for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: Line 1650: 215
Number of times BBC is called for com.google.javascript.rhino.Node.setJSDocInfo(Lcom/google/javascript/rhino/JSDocInfo;)Lcom/google/javascript/rhino/Node;: Line 1888: 131
Number of times BBC is called for com.google.javascript.rhino.Node.setJSDocInfo(Lcom/google/javascript/rhino/JSDocInfo;)Lcom/google/javascript/rhino/Node;: Line 1889: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isNumber()Z: I5 Branch 260 IF_ICMPNE L2371 - true: 2810
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: Line 1104: 305
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: root-Branch: 502
Number of times BBC is called for com.google.javascript.rhino.Node.isNumber()Z: I5 Branch 260 IF_ICMPNE L2371 - false: 3056
Number of times BBC is called for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - true: 44
Number of times BBC is called for com.google.javascript.rhino.Node.hasOneChild()Z: I4 Branch 148 IFNULL L1393 - true: 2142
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I29 Branch 281 IFNE L177 - true: 103
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - false: 6899
Number of times BBC is called for com.google.javascript.rhino.Node.hasOneChild()Z: I4 Branch 148 IFNULL L1393 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToBack(Lcom/google/javascript/rhino/Node;)V: I15 Branch 69 IFNONNULL L608 - true: 13566
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I29 Branch 281 IFNE L177 - false: 402
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - true: 1007
Number of times BBC is called for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1635: 252
Number of times BBC is called for com.google.javascript.rhino.Node.isCase()Z: I5 Branch 230 IF_ICMPNE L2251 - false: 14052
Number of times BBC is called for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1636: 252
Number of times BBC is called for com.google.javascript.rhino.Node.isCase()Z: I5 Branch 230 IF_ICMPNE L2251 - true: 215
Number of times BBC is called for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: I8 Branch 200 IFNULL L1647 - false: 384
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 203 IF_ACMPNE L1682 - false: 44
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I20 Branch 147 IFLE L1334 - true: 116
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: Line 1598: 398
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I25 Branch 297 IFNONNULL L1867 - false: 617
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: I8 Branch 133 IFNONNULL L1104 - false: 305
Number of times BBC is called for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: I8 Branch 200 IFNULL L1647 - true: 215
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I70 Branch 122 IF_ICMPNE L966 - true: 4
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 46 IFNONNULL L422 - true: 15947
Number of times BBC is called for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 79 IFNONNULL L660 - false: 3140
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 203 IF_ACMPNE L1682 - true: 44
Number of times BBC is called for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - false: 40430
Number of times BBC is called for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 79 IFNONNULL L660 - true: 6183
Number of times BBC is called for com.google.javascript.rhino.Node.getSourcePosition()I: Line 1160: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isNumber()Z: Line 2371: 2810
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.getString()Ljava/lang/String;: Line 214: 44
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I48 Branch 121 IF_ICMPEQ L961 - true: 2925
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I27 Branch 187 IF_ICMPNE L1580 - false: 1716
Number of times BBC is called for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I9 Branch 87 IFNONNULL L699 - true: 997
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1978: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isThrow()Z: I5 Branch 272 IF_ICMPNE L2419 - false: 138
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: I8 Branch 133 IFNONNULL L1104 - true: 8318
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I11 Branch 72 IFNONNULL L621 - true: 86
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1974: 131
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1977: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isThrow()Z: I5 Branch 272 IF_ICMPNE L2419 - true: 44
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - true: 56147
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - false: 56147
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 22 TABLESWITCH L114 Case 50 - true: 3383
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I121 Branch 177 IF_ICMPEQ L1544 - false: 7725
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - false: 11191
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 22 TABLESWITCH L114 Case 50 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.isNoSideEffectsCall()Z: Line 2147: 2810
Number of times BBC is called for com.google.javascript.rhino.Node.isScript()Z: Line 2395: 2179
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 40 IFNONNULL L402 - true: 19773
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I40 Branch 170 IF_ICMPEQ L1527 - true: 405
Number of times BBC is called for com.google.javascript.rhino.Node.setType(I)V: Line 531: 502
Number of times BBC is called for com.google.javascript.rhino.Node.setType(I)V: Line 530: 502
Number of times BBC is called for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - true: 1727
Number of times BBC is called for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - false: 27472
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: I8 Branch 135 IFNONNULL L1149 - true: 5289
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 192 LOOKUPSWITCH L1598 Case 42 - false: 398
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I5 Branch 185 IF_ICMPNE L1577 - true: 2019
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: root-Branch: 617
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 192 LOOKUPSWITCH L1598 Case 42 - true: 1687
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I7 Branch 131 IF_ICMPEQ L1029 - true: 44
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I7 Branch 131 IF_ICMPEQ L1029 - false: 206
Number of times BBC is called for com.google.javascript.rhino.Node.getBooleanProp(I)Z: I5 Branch 105 IFEQ L821 - false: 1777
Number of times BBC is called for com.google.javascript.rhino.Node.srcrefTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1801: 305
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I5 Branch 185 IF_ICMPNE L1577 - false: 3020
Number of times BBC is called for com.google.javascript.rhino.Node.isFromExterns()Z: Line 1128: 305
Number of times BBC is called for com.google.javascript.rhino.Node.isFromExterns()Z: Line 1127: 305
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I123 Branch 55 IFNONNULL L491 - true: 39
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 28 TABLESWITCH L114 Case 56 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: Line 1446: 131
Number of times BBC is called for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I29 Branch 60 IFNONNULL L557 - true: 474
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I123 Branch 55 IFNONNULL L491 - false: 91
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 28 TABLESWITCH L114 Case 56 - true: 2553
Number of times BBC is called for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - true: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - false: 23139
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L114 Case 38 - true: 2392
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I173 Branch 183 IFNE L1558 - true: 112
Number of times BBC is called for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: Line 1241: 215
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - true: 7827
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 2 TABLESWITCH L114 Case 30 - true: 2325
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L114 Case 38 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 757: 56147
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: Line 339: 502
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 21 TABLESWITCH L114 Case 49 - true: 3512
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 754: 56147
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 21 TABLESWITCH L114 Case 49 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.isReturn()Z: Line 2391: 1871
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 759: 56147
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 758: 56147
Number of times BBC is called for com.google.javascript.rhino.Node.isDefaultCase()Z: I5 Branch 237 IF_ICMPNE L2279 - false: 10432
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToBack(Lcom/google/javascript/rhino/Node;)V: I4 Branch 68 IFNONNULL L607 - true: 82
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 748: 994
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 753: 56147
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I9 Branch 296 IFNONNULL L1861 - true: 724
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 752: 56147
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 751: 994
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 750: 994
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I146 Branch 56 IF_ACMPEQ L494 - true: 63
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 3 TABLESWITCH L114 Case 31 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: I7 Branch 220 IFNE L2166 - true: 30569
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 739: 131
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I9 Branch 296 IFNONNULL L1861 - false: 617
Number of times BBC is called for com.google.javascript.rhino.Node.isDebugger()Z: Line 2271: 398
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 744: 131
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 742: 131
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1710: 12106
Number of times BBC is called for com.google.javascript.rhino.Node.putIntProp(II)V: I8 Branch 110 IFEQ L857 - true: 18
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1711: 12106
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 36 IFNONNULL L385 - true: 12890
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: Line 1294: 20474
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I20 Branch 34 IFNONNULL L381 - true: 13015
Number of times BBC is called for com.google.javascript.rhino.Node.setQuotedString()V: Line 2188: 398
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: I7 Branch 220 IFNE L2166 - false: 215
Number of times BBC is called for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 660: 3140
Number of times BBC is called for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 662: 3140
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: I8 Branch 135 IFNONNULL L1149 - false: 871
Number of times BBC is called for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 663: 6340
Number of times BBC is called for com.google.javascript.rhino.Node.isIf()Z: I5 Branch 249 IF_ICMPNE L2327 - false: 42221
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I146 Branch 56 IF_ACMPEQ L494 - false: 43986
Number of times BBC is called for com.google.javascript.rhino.Node.isCall()Z: Line 2247: 1425
Number of times BBC is called for com.google.javascript.rhino.Node.isIf()Z: I5 Branch 249 IF_ICMPNE L2327 - true: 1006
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - true: 7422
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 322: 99476
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;)Z: Line 1492: 1425
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - false: 43
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;)V: I20 Branch 32 IFNONNULL L367 - true: 17928
Number of times BBC is called for com.google.javascript.rhino.Node.isComma()Z: I5 Branch 233 IF_ICMPNE L2263 - false: 1006
Number of times BBC is called for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - false: 23757
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I3 Branch 145 IFLT L1332 - false: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 191 LOOKUPSWITCH L1598 Case 38 - true: 2224
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: Line 575: 871
Number of times BBC is called for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - true: 2656
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: Line 574: 871
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - true: 6387
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I3 Branch 145 IFLT L1332 - true: 580
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 191 LOOKUPSWITCH L1598 Case 38 - false: 398
Number of times BBC is called for com.google.javascript.rhino.Node.isVoid()Z: I5 Branch 277 IF_ICMPNE L2439 - false: 4395
Number of times BBC is called for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: Line 912: 1572
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: Line 1430: 398
Number of times BBC is called for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I32 Branch 103 IF_ACMPEQ L804 - false: 14
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: Line 1429: 398
Number of times BBC is called for com.google.javascript.rhino.Node.isIf()Z: Line 2327: 1006
Number of times BBC is called for com.google.javascript.rhino.Node.isCall()Z: I5 Branch 229 IF_ICMPNE L2247 - false: 2544
Number of times BBC is called for com.google.javascript.rhino.Node$SideEffectFlags.areAllFlagsSet()Z: I4 Branch 298 IFNE L2076 - false: 25
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I77 Branch 174 IF_ICMPNE L1533 - false: 6769
Number of times BBC is called for com.google.javascript.rhino.Node.isCatch()Z: Line 2259: 44
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 33 IFNONNULL L379 - true: 16
Number of times BBC is called for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I29 Branch 88 IF_ACMPNE L704 - true: 21481
Number of times BBC is called for com.google.javascript.rhino.Node.isStringKey()Z: I5 Branch 269 IF_ICMPNE L2407 - false: 6648
Number of times BBC is called for com.google.javascript.rhino.Node.isCall()Z: I5 Branch 229 IF_ICMPNE L2247 - true: 1425
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I77 Branch 174 IF_ICMPNE L1533 - true: 2
Number of times BBC is called for com.google.javascript.rhino.Node.isInstanceOf()Z: I5 Branch 252 IF_ICMPNE L2339 - false: 1366
Number of times BBC is called for com.google.javascript.rhino.Node.isInstanceOf()Z: I5 Branch 252 IF_ICMPNE L2339 - true: 215
Number of times BBC is called for com.google.javascript.rhino.Node.isEmpty()Z: I5 Branch 240 IF_ICMPNE L2291 - false: 18417
Number of times BBC is called for com.google.javascript.rhino.Node.setType(I)V: root-Branch: 502
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: Line 1149: 871
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - false: 4419
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - false: 4984
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.isQuotedString()Z: Line 244: 44
Number of times BBC is called for com.google.javascript.rhino.Node.isFunction()Z: Line 2307: 131
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: Line 1148: 871
Number of times BBC is called for com.google.javascript.rhino.Node.isCast()Z: I5 Branch 231 IF_ICMPNE L2255 - false: 1043
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - true: 5242
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I15 Branch 66 IFNONNULL L597 - true: 36457
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 215 IFNULL L1828 - false: 441
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I200 Branch 129 IFNULL L998 - false: 43
Number of times BBC is called for com.google.javascript.rhino.Node.isTrue()Z: I5 Branch 273 IF_ICMPNE L2423 - false: 11393
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 2 TABLESWITCH L114 Case 30 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L114 Case 39 - true: 2600
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 1 TABLESWITCH L114 Case 29 - true: 2019
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: Line 168: 617
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - false: 29445
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: root-Branch: 54758
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: Line 167: 617
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I16 Branch 167 IF_ACMPEQ L1517 - true: 42
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1657: 131
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L114 Case 39 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1658: 131
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I4 Branch 65 IFNONNULL L596 - true: 100
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1661: 131
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1662: 131
Number of times BBC is called for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: Line 1116: 502
Number of times BBC is called for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: Line 1117: 502
Number of times BBC is called for com.google.javascript.rhino.Node.setJSDocInfo(Lcom/google/javascript/rhino/JSDocInfo;)Lcom/google/javascript/rhino/Node;: root-Branch: 131
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1663: 131
Number of times BBC is called for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - false: 5724
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.isQuotedString()Z: root-Branch: 44
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 20 TABLESWITCH L114 Case 48 - true: 2234
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 20 TABLESWITCH L114 Case 48 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: root-Branch: 99476
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 29 TABLESWITCH L114 Case 57 - true: 2379
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 29 TABLESWITCH L114 Case 57 - false: 2019
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - true: 29445
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 43 IFNONNULL L419 - true: 38
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I46 Branch 91 IF_ACMPNE L725 - false: 4874
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: root-Branch: 99476
Number of times BBC is called for com.google.javascript.rhino.Node.extractCharno(I)I: I4 Branch 143 IF_ICMPNE L1221 - false: 30
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I39 Branch 159 IFNONNULL L1455 - false: 14491
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I46 Branch 91 IF_ACMPNE L725 - true: 744
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;)V: I8 Branch 31 IFNONNULL L365 - true: 48
Number of times BBC is called for com.google.javascript.rhino.Node.hasOneChild()Z: Line 1393: 2019
Number of times BBC is called for com.google.javascript.rhino.Node.isThis()Z: Line 2415: 4183
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.<init>(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: root-Branch: 131
Number of times BBC is called for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I5 Branch 116 IF_ICMPEQ L925 - false: 7291
Number of times BBC is called for com.google.javascript.rhino.Node.isFalse()Z: Line 2299: 4183
Number of times BBC is called for com.google.javascript.rhino.Node.getIntProp(I)I: I9 Branch 106 IFNONNULL L830 - true: 165
Number of times BBC is called for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I5 Branch 116 IF_ICMPEQ L925 - true: 8225
Number of times BBC is called in total: 5152581
* Search finished after 605s and 581 generations, 255072 statements, best individual has fitness: 2833.0
* Minimizing test suite
[MASTER] 10:40:51.185 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 853
* Number of covered goals: 811
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 714
* Number of covered goals: 629
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 105
* Number of covered goals: 105
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 89%
* Total number of goals: 530
* Number of covered goals: 470
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 4536
* Number of covered goals: 2190
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 92%
* Total number of goals: 233
* Number of covered goals: 214
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 233
* Number of covered goals: 212
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 82%
* Total number of goals: 714
* Number of covered goals: 589
* Generated 810 tests with total length 10572
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 10:41:56.832 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.67615% of time used, but only 45/810 tests minimized), falling back to using all assertions
[MASTER] 10:42:16.275 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 13%
* Compiling and checking tests
[MASTER] 10:42:24.815 [logback-1] WARN  TimeController - Phase ASSERTION_GENERATION lasted too long, 8 seconds more than allowed.
[MASTER] 10:42:55.941 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_186_1628160175734/com/google/javascript/rhino/Node_186_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_186_1628160175734/com/google/javascript/rhino/Node_186_tmp__ESTest_scaffolding.java]]
[MASTER] 10:42:55.941 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Closure-110/build/classes:subjects/buggy-versions/Closure-110/lib/args4j.jar:subjects/buggy-versions/Closure-110/lib/guava.jar:subjects/buggy-versions/Closure-110/lib/json.jar:subjects/buggy-versions/Closure-110/lib/jsr305.jar:subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:subjects/buggy-versions/Closure-110/build/lib/rhino.jar:subjects/buggy-versions/Closure-110/lib/ant.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 10:42:55.941 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 10:42:55.945 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method contains(com.google.javascript.rhino.Node)
  location: variable iterable0 of type java.lang.Iterable<com.google.javascript.rhino.Node>: 1013
[MASTER] 10:42:55.947 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_186_1628160175734/com/google/javascript/rhino/Node_186_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Aug 05 10:42:55 GMT 2021
4:  */
5: 
6: package com.google.javascript.rhino;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import static org.evosuite.runtime.EvoAssertions.*;
11: import com.google.javascript.rhino.ErrorReporter;
12: import com.google.javascript.rhino.Node;
13: import com.google.javascript.rhino.jstype.JSTypeRegistry;
14: import org.evosuite.runtime.EvoRunner;
15: import org.evosuite.runtime.EvoRunnerParameters;
16: import org.junit.runner.RunWith;
17: 
18: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
19: public class Node_186_tmp__ESTest extends Node_186_tmp__ESTest_scaffolding {
20: 
21:   @Test(timeout = 4000)
22:   public void test0()  throws Throwable  {
23:       Node node0 = Node.newNumber(2948.2558, (-1538), (-1538));
24:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
25:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
26:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
27:       assertEquals(8, Node.FLAG_NO_THROWS);
28:       assertEquals(50, Node.FREE_CALL);
29:       assertEquals(52, Node.LENGTH);
30:       assertEquals(55, Node.INFERRED_FUNCTION);
31:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
32:       assertEquals(39, Node.EMPTY_BLOCK);
33:       assertEquals(15, Node.NO_SIDE_EFFECTS);
34:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
35:       assertEquals(36, Node.QUOTED_PROP);
36:       assertEquals(57, Node.REFLECTED_OBJECT);
37:       assertEquals(4095, Node.COLUMN_MASK);
38:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
39:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
40:       assertEquals(48, Node.DIRECTIVES);
41:       assertEquals(49, Node.DIRECT_EVAL);
42:       assertEquals(37, Node.OPT_ARG_NAME);
43:       assertEquals(47, Node.IS_DISPATCHER);
44:       assertEquals(29, Node.JSDOC_INFO_PROP);
45:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
46:       assertEquals(56, Node.CHANGE_TIME);
47:       assertEquals(2, Node.POST_FLAG);
48:       assertEquals(32, Node.INCRDECR_PROP);
49:       assertEquals(12, Node.COLUMN_BITS);
50:       assertEquals(53, Node.INPUT_ID);
51:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
52:       assertEquals(1, Node.DECR_FLAG);
53:       assertEquals(57, Node.LAST_PROP);
54:       assertEquals(43, Node.IS_CONSTANT_NAME);
55:       assertEquals(54, Node.SLASH_V);
56:       assertEquals(30, Node.VAR_ARGS_NAME);
57:       assertEquals(51, Node.STATIC_SOURCE_FILE);
58:       assertEquals(46, Node.IS_NAMESPACE);
59:       assertEquals(40, Node.ORIGINALNAME_PROP);
60:       assertFalse(node0.isNew());
61:       assertFalse(node0.isVar());
62:       assertFalse(node0.isBlock());
63:       assertFalse(node0.isDo());
64:       assertFalse(node0.isWhile());
65:       assertFalse(node0.isSetterDef());
66:       assertFalse(node0.isAdd());
67:       assertFalse(node0.isAssignAdd());
68:       assertFalse(node0.isLabel());
69:       assertEquals(0, node0.getChildCount());
70:       assertEquals((-1), node0.getSourcePosition());
71:       assertFalse(node0.isParamList());
72:       assertFalse(node0.isLabelName());
73:       assertFalse(node0.isStringKey());
74:       assertFalse(node0.isContinue());
75:       assertFalse(node0.isCast());
76:       assertFalse(node0.isVoid());
77:       assertFalse(node0.isDebugger());
78:       assertFalse(node0.isTrue());
79:       assertFalse(node0.isNot());
80:       assertFalse(node0.isEmpty());
81:       assertFalse(node0.isDefaultCase());
82:       assertFalse(node0.isObjectLit());
83:       assertFalse(node0.isOr());
84:       assertTrue(node0.isNumber());
85:       assertFalse(node0.isDec());
86:       assertFalse(node0.isComma());
87:       assertFalse(node0.hasChildren());
88:       assertFalse(node0.isReturn());
89:       assertFalse(node0.isNull());
90:       assertFalse(node0.isAssign());
91:       assertFalse(node0.isTypeOf());
92:       assertFalse(node0.isDelProp());
93:       assertFalse(node0.isName());
94:       assertFalse(node0.isBreak());
95:       assertFalse(node0.isGetElem());
96:       assertFalse(node0.isCall());
97:       assertFalse(node0.isExprResult());
98:       assertFalse(node0.isSwitch());
99:       assertFalse(node0.isThrow());
100:       assertEquals((-1), node0.getCharno());
101:       assertFalse(node0.isHook());
102:       assertFalse(node0.isCase());
103:       assertFalse(node0.isString());
104:       assertFalse(node0.isGetProp());
105:       assertFalse(node0.isInc());
106:       assertFalse(node0.isAnd());
107:       assertFalse(node0.isFalse());
108:       assertFalse(node0.isArrayLit());
109:       assertFalse(node0.isTry());
110:       assertFalse(node0.isFunction());
111:       assertFalse(node0.isFor());
112:       assertFalse(node0.isGetterDef());
113:       assertFalse(node0.isScript());
114:       assertFalse(node0.hasOneChild());
115:       assertEquals((-1), node0.getLineno());
116:       assertFalse(node0.isIn());
117:       assertFalse(node0.isNE());
118:       assertFalse(node0.isThis());
119:       assertFalse(node0.isWith());
120:       assertEquals(39, node0.getType());
121:       assertFalse(node0.isIf());
122:       assertFalse(node0.isRegExp());
123:       assertFalse(node0.hasMoreThanOneChild());
124:       assertFalse(node0.isCatch());
125:       assertFalse(node0.isInstanceOf());
126:       assertNotNull(node0);
127:       
128:       Node node1 = new Node((-1538), node0, 53, 54);
129:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
130:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
131:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
132:       assertEquals(8, Node.FLAG_NO_THROWS);
133:       assertEquals(50, Node.FREE_CALL);
134:       assertEquals(52, Node.LENGTH);
135:       assertEquals(55, Node.INFERRED_FUNCTION);
136:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
137:       assertEquals(39, Node.EMPTY_BLOCK);
138:       assertEquals(15, Node.NO_SIDE_EFFECTS);
139:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
140:       assertEquals(36, Node.QUOTED_PROP);
141:       assertEquals(57, Node.REFLECTED_OBJECT);
142:       assertEquals(4095, Node.COLUMN_MASK);
143:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
144:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
145:       assertEquals(48, Node.DIRECTIVES);
146:       assertEquals(49, Node.DIRECT_EVAL);
147:       assertEquals(37, Node.OPT_ARG_NAME);
148:       assertEquals(47, Node.IS_DISPATCHER);
149:       assertEquals(29, Node.JSDOC_INFO_PROP);
150:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
151:       assertEquals(56, Node.CHANGE_TIME);
152:       assertEquals(2, Node.POST_FLAG);
153:       assertEquals(32, Node.INCRDECR_PROP);
154:       assertEquals(12, Node.COLUMN_BITS);
155:       assertEquals(53, Node.INPUT_ID);
156:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
157:       assertEquals(1, Node.DECR_FLAG);
158:       assertEquals(57, Node.LAST_PROP);
159:       assertEquals(43, Node.IS_CONSTANT_NAME);
160:       assertEquals(54, Node.SLASH_V);
161:       assertEquals(30, Node.VAR_ARGS_NAME);
162:       assertEquals(51, Node.STATIC_SOURCE_FILE);
163:       assertEquals(46, Node.IS_NAMESPACE);
164:       assertEquals(40, Node.ORIGINALNAME_PROP);
165:       assertEquals(29, Node.JSDOC_INFO_PROP);
166:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
167:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
168:       assertEquals(47, Node.IS_DISPATCHER);
169:       assertEquals(2, Node.POST_FLAG);
170:       assertEquals(53, Node.INPUT_ID);
171:       assertEquals(32, Node.INCRDECR_PROP);
172:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
173:       assertEquals(46, Node.IS_NAMESPACE);
174:       assertEquals(30, Node.VAR_ARGS_NAME);
175:       assertEquals(51, Node.STATIC_SOURCE_FILE);
176:       assertEquals(54, Node.SLASH_V);
177:       assertEquals(43, Node.IS_CONSTANT_NAME);
178:       assertEquals(40, Node.ORIGINALNAME_PROP);
179:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
180:       assertEquals(57, Node.REFLECTED_OBJECT);
181:       assertEquals(50, Node.FREE_CALL);
182:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
183:       assertEquals(8, Node.FLAG_NO_THROWS);
184:       assertEquals(39, Node.EMPTY_BLOCK);
185:       assertEquals(52, Node.LENGTH);
186:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
187:       assertEquals(15, Node.NO_SIDE_EFFECTS);
188:       assertEquals(57, Node.LAST_PROP);
189:       assertEquals(1, Node.DECR_FLAG);
190:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
191:       assertEquals(55, Node.INFERRED_FUNCTION);
192:       assertEquals(4095, Node.COLUMN_MASK);
193:       assertEquals(12, Node.COLUMN_BITS);
194:       assertEquals(36, Node.QUOTED_PROP);
195:       assertEquals(48, Node.DIRECTIVES);
196:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
197:       assertEquals(56, Node.CHANGE_TIME);
198:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
199:       assertEquals(49, Node.DIRECT_EVAL);
200:       assertEquals(37, Node.OPT_ARG_NAME);
201:       assertFalse(node1.equals((Object)node0));
202:       assertFalse(node0.isNew());
203:       assertFalse(node0.isVar());
204:       assertFalse(node0.isBlock());
205:       assertFalse(node0.isDo());
206:       assertFalse(node0.isWhile());
207:       assertFalse(node0.isSetterDef());
208:       assertFalse(node0.isAdd());
209:       assertFalse(node0.isAssignAdd());
210:       assertFalse(node0.isLabel());
211:       assertEquals(0, node0.getChildCount());
212:       assertEquals((-1), node0.getSourcePosition());
213:       assertFalse(node0.isParamList());
214:       assertFalse(node0.isLabelName());
215:       assertFalse(node0.isStringKey());
216:       assertFalse(node0.isContinue());
217:       assertFalse(node0.isCast());
218:       assertFalse(node0.isVoid());
219:       assertFalse(node0.isDebugger());
220:       assertFalse(node0.isTrue());
221:       assertFalse(node0.isNot());
222:       assertFalse(node0.isEmpty());
223:       assertFalse(node0.isDefaultCase());
224:       assertFalse(node0.isObjectLit());
225:       assertFalse(node0.isOr());
226:       assertTrue(node0.isNumber());
227:       assertFalse(node0.isDec());
228:       assertFalse(node0.isComma());
229:       assertFalse(node0.hasChildren());
230:       assertFalse(node0.isReturn());
231:       assertFalse(node0.isNull());
232:       assertFalse(node0.isAssign());
233:       assertFalse(node0.isTypeOf());
234:       assertFalse(node0.isDelProp());
235:       assertFalse(node0.isName());
236:       assertFalse(node0.isBreak());
237:       assertFalse(node0.isGetElem());
238:       assertFalse(node0.isCall());
239:       assertFalse(node0.isExprResult());
240:       assertFalse(node0.isSwitch());
241:       assertFalse(node0.isThrow());
242:       assertEquals((-1), node0.getCharno());
243:       assertFalse(node0.isHook());
244:       assertFalse(node0.isCase());
245:       assertFalse(node0.isString());
246:       assertFalse(node0.isGetProp());
247:       assertFalse(node0.isInc());
248:       assertFalse(node0.isAnd());
249:       assertFalse(node0.isFalse());
250:       assertFalse(node0.isArrayLit());
251:       assertFalse(node0.isTry());
252:       assertFalse(node0.isFunction());
253:       assertFalse(node0.isFor());
254:       assertFalse(node0.isGetterDef());
255:       assertFalse(node0.isScript());
256:       assertFalse(node0.hasOneChild());
257:       assertEquals((-1), node0.getLineno());
258:       assertFalse(node0.isIn());
259:       assertFalse(node0.isNE());
260:       assertFalse(node0.isThis());
261:       assertFalse(node0.isWith());
262:       assertEquals(39, node0.getType());
263:       assertFalse(node0.isIf());
264:       assertFalse(node0.isRegExp());
265:       assertFalse(node0.hasMoreThanOneChild());
266:       assertFalse(node0.isCatch());
267:       assertFalse(node0.isInstanceOf());
268:       assertFalse(node1.isNot());
269:       assertEquals(54, node1.getCharno());
270:       assertFalse(node1.isObjectLit());
271:       assertFalse(node1.isGetProp());
272:       assertFalse(node1.isScript());
273:       assertFalse(node1.isThis());
274:       assertFalse(node1.isComma());
275:       assertFalse(node1.isDec());
276:       assertFalse(node1.isTypeOf());
277:       assertFalse(node1.isAssign());
278:       assertFalse(node1.isOr());
279:       assertFalse(node1.isReturn());
280:       assertFalse(node1.hasMoreThanOneChild());
281:       assertFalse(node1.isWith());
282:       assertFalse(node1.isInstanceOf());
283:       assertFalse(node1.isBreak());
284:       assertFalse(node1.isGetElem());
285:       assertFalse(node1.isExprResult());
286:       assertFalse(node1.isSwitch());
287:       assertFalse(node1.isHook());
288:       assertFalse(node1.isBlock());
289:       assertFalse(node1.isVar());
290:       assertFalse(node1.isDo());
291:       assertFalse(node1.isCase());
292:       assertFalse(node1.isNew());
293:       assertFalse(node1.isAdd());
294:       assertFalse(node1.isParamList());
295:       assertFalse(node1.isNumber());
296:       assertFalse(node1.isGetterDef());
297:       assertFalse(node1.isAssignAdd());
298:       assertFalse(node1.isLabel());
299:       assertFalse(node1.isStringKey());
300:       assertFalse(node1.isArrayLit());
301:       assertFalse(node1.isLabelName());
302:       assertFalse(node1.isDebugger());
303:       assertFalse(node1.isVoid());
304:       assertFalse(node1.isDefaultCase());
305:       assertFalse(node1.isRegExp());
306:       assertFalse(node1.isFunction());
307:       assertFalse(node1.isTrue());
308:       assertFalse(node1.isTry());
309:       assertFalse(node1.isEmpty());
310:       assertFalse(node1.isNE());
311:       assertEquals(217142, node1.getSourcePosition());
312:       assertFalse(node1.isIf());
313:       assertFalse(node1.isDelProp());
314:       assertTrue(node1.hasOneChild());
315:       assertEquals(1, node1.getChildCount());
316:       assertFalse(node1.isFor());
317:       assertFalse(node1.isNull());
318:       assertFalse(node1.isCatch());
319:       assertFalse(node1.isName());
320:       assertTrue(node1.hasChildren());
321:       assertEquals((-1538), node1.getType());
322:       assertFalse(node1.isCall());
323:       assertEquals(53, node1.getLineno());
324:       assertFalse(node1.isWhile());
325:       assertFalse(node1.isIn());
326:       assertFalse(node1.isString());
327:       assertFalse(node1.isInc());
328:       assertFalse(node1.isSetterDef());
329:       assertFalse(node1.isThrow());
330:       assertFalse(node1.isCast());
331:       assertFalse(node1.isContinue());
332:       assertFalse(node1.isAnd());
333:       assertFalse(node1.isFalse());
334:       assertNotNull(node1);
335:       
336:       node1.removeChild(node0);
337:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
338:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
339:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
340:       assertEquals(8, Node.FLAG_NO_THROWS);
341:       assertEquals(50, Node.FREE_CALL);
342:       assertEquals(52, Node.LENGTH);
343:       assertEquals(55, Node.INFERRED_FUNCTION);
344:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
345:       assertEquals(39, Node.EMPTY_BLOCK);
346:       assertEquals(15, Node.NO_SIDE_EFFECTS);
347:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
348:       assertEquals(36, Node.QUOTED_PROP);
349:       assertEquals(57, Node.REFLECTED_OBJECT);
350:       assertEquals(4095, Node.COLUMN_MASK);
351:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
352:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
353:       assertEquals(48, Node.DIRECTIVES);
354:       assertEquals(49, Node.DIRECT_EVAL);
355:       assertEquals(37, Node.OPT_ARG_NAME);
356:       assertEquals(47, Node.IS_DISPATCHER);
357:       assertEquals(29, Node.JSDOC_INFO_PROP);
358:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
359:       assertEquals(56, Node.CHANGE_TIME);
360:       assertEquals(2, Node.POST_FLAG);
361:       assertEquals(32, Node.INCRDECR_PROP);
362:       assertEquals(12, Node.COLUMN_BITS);
363:       assertEquals(53, Node.INPUT_ID);
364:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
365:       assertEquals(1, Node.DECR_FLAG);
366:       assertEquals(57, Node.LAST_PROP);
367:       assertEquals(43, Node.IS_CONSTANT_NAME);
368:       assertEquals(54, Node.SLASH_V);
369:       assertEquals(30, Node.VAR_ARGS_NAME);
370:       assertEquals(51, Node.STATIC_SOURCE_FILE);
371:       assertEquals(46, Node.IS_NAMESPACE);
372:       assertEquals(40, Node.ORIGINALNAME_PROP);
373:       assertEquals(29, Node.JSDOC_INFO_PROP);
374:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
375:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
376:       assertEquals(47, Node.IS_DISPATCHER);
377:       assertEquals(2, Node.POST_FLAG);
378:       assertEquals(53, Node.INPUT_ID);
379:       assertEquals(32, Node.INCRDECR_PROP);
380:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
381:       assertEquals(46, Node.IS_NAMESPACE);
382:       assertEquals(30, Node.VAR_ARGS_NAME);
383:       assertEquals(51, Node.STATIC_SOURCE_FILE);
384:       assertEquals(54, Node.SLASH_V);
385:       assertEquals(43, Node.IS_CONSTANT_NAME);
386:       assertEquals(40, Node.ORIGINALNAME_PROP);
387:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
388:       assertEquals(57, Node.REFLECTED_OBJECT);
389:       assertEquals(50, Node.FREE_CALL);
390:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
391:       assertEquals(8, Node.FLAG_NO_THROWS);
392:       assertEquals(39, Node.EMPTY_BLOCK);
393:       assertEquals(52, Node.LENGTH);
394:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
395:       assertEquals(15, Node.NO_SIDE_EFFECTS);
396:       assertEquals(57, Node.LAST_PROP);
397:       assertEquals(1, Node.DECR_FLAG);
398:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
399:       assertEquals(55, Node.INFERRED_FUNCTION);
400:       assertEquals(4095, Node.COLUMN_MASK);
401:       assertEquals(12, Node.COLUMN_BITS);
402:       assertEquals(36, Node.QUOTED_PROP);
403:       assertEquals(48, Node.DIRECTIVES);
404:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
405:       assertEquals(56, Node.CHANGE_TIME);
406:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
407:       assertEquals(49, Node.DIRECT_EVAL);
408:       assertEquals(37, Node.OPT_ARG_NAME);
409:       assertFalse(node0.equals((Object)node1));
410:       assertFalse(node1.equals((Object)node0));
411:       assertFalse(node0.isNew());
412:       assertFalse(node0.isVar());
413:       assertFalse(node0.isBlock());
414:       assertFalse(node0.isDo());
415:       assertFalse(node0.isWhile());
416:       assertFalse(node0.isSetterDef());
417:       assertFalse(node0.isAdd());
418:       assertFalse(node0.isAssignAdd());
419:       assertFalse(node0.isLabel());
420:       assertEquals(0, node0.getChildCount());
421:       assertEquals((-1), node0.getSourcePosition());
422:       assertFalse(node0.isParamList());
423:       assertFalse(node0.isLabelName());
424:       assertFalse(node0.isStringKey());
425:       assertFalse(node0.isContinue());
426:       assertFalse(node0.isCast());
427:       assertFalse(node0.isVoid());
428:       assertFalse(node0.isDebugger());
429:       assertFalse(node0.isTrue());
430:       assertFalse(node0.isNot());
431:       assertFalse(node0.isEmpty());
432:       assertFalse(node0.isDefaultCase());
433:       assertFalse(node0.isObjectLit());
434:       assertFalse(node0.isOr());
435:       assertTrue(node0.isNumber());
436:       assertFalse(node0.isDec());
437:       assertFalse(node0.isComma());
438:       assertFalse(node0.hasChildren());
439:       assertFalse(node0.isReturn());
440:       assertFalse(node0.isNull());
441:       assertFalse(node0.isAssign());
442:       assertFalse(node0.isTypeOf());
443:       assertFalse(node0.isDelProp());
444:       assertFalse(node0.isName());
445:       assertFalse(node0.isBreak());
446:       assertFalse(node0.isGetElem());
447:       assertFalse(node0.isCall());
448:       assertFalse(node0.isExprResult());
449:       assertFalse(node0.isSwitch());
450:       assertFalse(node0.isThrow());
451:       assertEquals((-1), node0.getCharno());
452:       assertFalse(node0.isHook());
453:       assertFalse(node0.isCase());
454:       assertFalse(node0.isString());
455:       assertFalse(node0.isGetProp());
456:       assertFalse(node0.isInc());
457:       assertFalse(node0.isAnd());
458:       assertFalse(node0.isFalse());
459:       assertFalse(node0.isArrayLit());
460:       assertFalse(node0.isTry());
461:       assertFalse(node0.isFunction());
462:       assertFalse(node0.isFor());
463:       assertFalse(node0.isGetterDef());
464:       assertFalse(node0.isScript());
465:       assertFalse(node0.hasOneChild());
466:       assertEquals((-1), node0.getLineno());
467:       assertFalse(node0.isIn());
468:       assertFalse(node0.isNE());
469:       assertFalse(node0.isThis());
470:       assertFalse(node0.isWith());
471:       assertEquals(39, node0.getType());
472:       assertFalse(node0.isIf());
473:       assertFalse(node0.isRegExp());
474:       assertFalse(node0.hasMoreThanOneChild());
475:       assertFalse(node0.isCatch());
476:       assertFalse(node0.isInstanceOf());
477:       assertFalse(node1.isNot());
478:       assertFalse(node1.hasOneChild());
479:       assertEquals(54, node1.getCharno());
480:       assertFalse(node1.isObjectLit());
481:       assertFalse(node1.isGetProp());
482:       assertFalse(node1.isScript());
483:       assertFalse(node1.isThis());
484:       assertFalse(node1.isComma());
485:       assertFalse(node1.isDec());
486:       assertFalse(node1.isTypeOf());
487:       assertFalse(node1.isAssign());
488:       assertFalse(node1.isOr());
489:       assertFalse(node1.hasChildren());
490:       assertFalse(node1.isReturn());
491:       assertFalse(node1.hasMoreThanOneChild());
492:       assertFalse(node1.isWith());
493:       assertFalse(node1.isInstanceOf());
494:       assertFalse(node1.isBreak());
495:       assertFalse(node1.isGetElem());
496:       assertFalse(node1.isExprResult());
497:       assertFalse(node1.isSwitch());
498:       assertFalse(node1.isHook());
499:       assertFalse(node1.isBlock());
500:       assertFalse(node1.isVar());
501:       assertFalse(node1.isDo());
502:       assertFalse(node1.isCase());
503:       assertFalse(node1.isNew());
504:       assertFalse(node1.isAdd());
505:       assertFalse(node1.isParamList());
506:       assertFalse(node1.isNumber());
507:       assertFalse(node1.isGetterDef());
508:       assertFalse(node1.isAssignAdd());
509:       assertFalse(node1.isLabel());
510:       assertFalse(node1.isStringKey());
511:       assertFalse(node1.isArrayLit());
512:       assertEquals(0, node1.getChildCount());
513:       assertFalse(node1.isLabelName());
514:       assertFalse(node1.isDebugger());
515:       assertFalse(node1.isVoid());
516:       assertFalse(node1.isDefaultCase());
517:       assertFalse(node1.isRegExp());
518:       assertFalse(node1.isFunction());
519:       assertFalse(node1.isTrue());
520:       assertFalse(node1.isTry());
521:       assertFalse(node1.isEmpty());
522:       assertFalse(node1.isNE());
523:       assertEquals(217142, node1.getSourcePosition());
524:       assertFalse(node1.isIf());
525:       assertFalse(node1.isDelProp());
526:       assertFalse(node1.isFor());
527:       assertFalse(node1.isNull());
528:       assertFalse(node1.isCatch());
529:       assertFalse(node1.isName());
530:       assertEquals((-1538), node1.getType());
531:       assertFalse(node1.isCall());
532:       assertEquals(53, node1.getLineno());
533:       assertFalse(node1.isWhile());
534:       assertFalse(node1.isIn());
535:       assertFalse(node1.isString());
536:       assertFalse(node1.isInc());
537:       assertFalse(node1.isSetterDef());
538:       assertFalse(node1.isThrow());
539:       assertFalse(node1.isCast());
540:       assertFalse(node1.isContinue());
541:       assertFalse(node1.isAnd());
542:       assertFalse(node1.isFalse());
543:       
544:       Node node2 = Node.newString(31, "com.google.javascript.rhino.Node$SiblingNodeIterable", (-4023), 1);
545:       assertEquals(15, Node.NO_SIDE_EFFECTS);
546:       assertEquals(57, Node.LAST_PROP);
547:       assertEquals(32, Node.INCRDECR_PROP);
548:       assertEquals(49, Node.DIRECT_EVAL);
549:       assertEquals(1, Node.DECR_FLAG);
550:       assertEquals(52, Node.LENGTH);
551:       assertEquals(46, Node.IS_NAMESPACE);
552:       assertEquals(54, Node.SLASH_V);
553:       assertEquals(51, Node.STATIC_SOURCE_FILE);
554:       assertEquals(57, Node.REFLECTED_OBJECT);
555:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
556:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
557:       assertEquals(56, Node.CHANGE_TIME);
558:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
559:       assertEquals(37, Node.OPT_ARG_NAME);
560:       assertEquals(48, Node.DIRECTIVES);
561:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
562:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
563:       assertEquals(12, Node.COLUMN_BITS);
564:       assertEquals(4095, Node.COLUMN_MASK);
565:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
566:       assertEquals(55, Node.INFERRED_FUNCTION);
567:       assertEquals(43, Node.IS_CONSTANT_NAME);
568:       assertEquals(53, Node.INPUT_ID);
569:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
570:       assertEquals(36, Node.QUOTED_PROP);
571:       assertEquals(8, Node.FLAG_NO_THROWS);
572:       assertEquals(50, Node.FREE_CALL);
573:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
574:       assertEquals(40, Node.ORIGINALNAME_PROP);
575:       assertEquals(29, Node.JSDOC_INFO_PROP);
576:       assertEquals(39, Node.EMPTY_BLOCK);
577:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
578:       assertEquals(47, Node.IS_DISPATCHER);
579:       assertEquals(2, Node.POST_FLAG);
580:       assertEquals(30, Node.VAR_ARGS_NAME);
581:       assertFalse(node2.equals((Object)node0));
582:       assertFalse(node2.equals((Object)node1));
583:       assertFalse(node2.isTypeOf());
584:       assertFalse(node2.isAssignAdd());
585:       assertFalse(node2.isNumber());
586:       assertFalse(node2.isLabelName());
587:       assertEquals((-1), node2.getLineno());
588:       assertFalse(node2.isGetElem());
589:       assertFalse(node2.isOr());
590:       assertEquals((-1), node2.getSourcePosition());
591:       assertTrue(node2.isDelProp());
592:       assertFalse(node2.isDo());
593:       assertFalse(node2.isAdd());
594:       assertFalse(node2.isNew());
595:       assertFalse(node2.isContinue());
596:       assertFalse(node2.isCast());
597:       assertFalse(node2.isLabel());
598:       assertFalse(node2.isVar());
599:       assertFalse(node2.isComma());
600:       assertFalse(node2.isBreak());
601:       assertFalse(node2.isGetProp());
602:       assertFalse(node2.isAnd());
603:       assertFalse(node2.isObjectLit());
604:       assertFalse(node2.isName());
605:       assertFalse(node2.isNot());
606:       assertFalse(node2.isNull());
607:       assertFalse(node2.isDebugger());
608:       assertFalse(node2.isExprResult());
609:       assertFalse(node2.isVoid());
610:       assertFalse(node2.isTrue());
611:       assertFalse(node2.isString());
612:       assertFalse(node2.isCall());
613:       assertFalse(node2.isWhile());
614:       assertFalse(node2.isAssign());
615:       assertFalse(node2.isDec());
616:       assertFalse(node2.isReturn());
617:       assertFalse(node2.hasChildren());
618:       assertFalse(node2.isNE());
619:       assertFalse(node2.isIf());
620:       assertFalse(node2.isEmpty());
621:       assertFalse(node2.isIn());
622:       assertFalse(node2.isGetterDef());
623:       assertFalse(node2.isFunction());
624:       assertFalse(node2.isSwitch());
625:       assertFalse(node2.isDefaultCase());
626:       assertFalse(node2.isArrayLit());
627:       assertFalse(node2.isInc());
628:       assertFalse(node2.isThrow());
629:       assertFalse(node2.isFalse());
630:       assertEquals(0, node2.getChildCount());
631:       assertFalse(node2.isParamList());
632:       assertFalse(node2.isInstanceOf());
633:       assertFalse(node2.isSetterDef());
634:       assertFalse(node2.isStringKey());
635:       assertEquals((-1), node2.getCharno());
636:       assertFalse(node2.isRegExp());
637:       assertFalse(node2.isTry());
638:       assertFalse(node2.hasOneChild());
639:       assertFalse(node2.isScript());
640:       assertFalse(node2.isCase());
641:       assertEquals(31, node2.getType());
642:       assertFalse(node2.isCatch());
643:       assertFalse(node2.hasMoreThanOneChild());
644:       assertFalse(node2.isWith());
645:       assertFalse(node2.isBlock());
646:       assertFalse(node2.isFor());
647:       assertFalse(node2.isThis());
648:       assertFalse(node2.isHook());
649:       assertNotNull(node2);
650:       
651:       boolean boolean0 = node2.isTrue();
652:       assertEquals(15, Node.NO_SIDE_EFFECTS);
653:       assertEquals(57, Node.LAST_PROP);
654:       assertEquals(32, Node.INCRDECR_PROP);
655:       assertEquals(49, Node.DIRECT_EVAL);
656:       assertEquals(1, Node.DECR_FLAG);
657:       assertEquals(52, Node.LENGTH);
658:       assertEquals(46, Node.IS_NAMESPACE);
659:       assertEquals(54, Node.SLASH_V);
660:       assertEquals(51, Node.STATIC_SOURCE_FILE);
661:       assertEquals(57, Node.REFLECTED_OBJECT);
662:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
663:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
664:       assertEquals(56, Node.CHANGE_TIME);
665:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
666:       assertEquals(37, Node.OPT_ARG_NAME);
667:       assertEquals(48, Node.DIRECTIVES);
668:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
669:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
670:       assertEquals(12, Node.COLUMN_BITS);
671:       assertEquals(4095, Node.COLUMN_MASK);
672:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
673:       assertEquals(55, Node.INFERRED_FUNCTION);
674:       assertEquals(43, Node.IS_CONSTANT_NAME);
675:       assertEquals(53, Node.INPUT_ID);
676:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
677:       assertEquals(36, Node.QUOTED_PROP);
678:       assertEquals(8, Node.FLAG_NO_THROWS);
679:       assertEquals(50, Node.FREE_CALL);
680:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
681:       assertEquals(40, Node.ORIGINALNAME_PROP);
682:       assertEquals(29, Node.JSDOC_INFO_PROP);
683:       assertEquals(39, Node.EMPTY_BLOCK);
684:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
685:       assertEquals(47, Node.IS_DISPATCHER);
686:       assertEquals(2, Node.POST_FLAG);
687:       assertEquals(30, Node.VAR_ARGS_NAME);
688:       assertFalse(node2.equals((Object)node0));
689:       assertFalse(node2.equals((Object)node1));
690:       assertFalse(boolean0);
691:       assertFalse(node2.isTypeOf());
692:       assertFalse(node2.isAssignAdd());
693:       assertFalse(node2.isNumber());
694:       assertFalse(node2.isLabelName());
695:       assertEquals((-1), node2.getLineno());
696:       assertFalse(node2.isGetElem());
697:       assertFalse(node2.isOr());
698:       assertEquals((-1), node2.getSourcePosition());
699:       assertTrue(node2.isDelProp());
700:       assertFalse(node2.isDo());
701:       assertFalse(node2.isAdd());
702:       assertFalse(node2.isNew());
703:       assertFalse(node2.isContinue());
704:       assertFalse(node2.isCast());
705:       assertFalse(node2.isLabel());
706:       assertFalse(node2.isVar());
707:       assertFalse(node2.isComma());
708:       assertFalse(node2.isBreak());
709:       assertFalse(node2.isGetProp());
710:       assertFalse(node2.isAnd());
711:       assertFalse(node2.isObjectLit());
712:       assertFalse(node2.isName());
713:       assertFalse(node2.isNot());
714:       assertFalse(node2.isNull());
715:       assertFalse(node2.isDebugger());
716:       assertFalse(node2.isExprResult());
717:       assertFalse(node2.isVoid());
718:       assertFalse(node2.isTrue());
719:       assertFalse(node2.isString());
720:       assertFalse(node2.isCall());
721:       assertFalse(node2.isWhile());
722:       assertFalse(node2.isAssign());
723:       assertFalse(node2.isDec());
724:       assertFalse(node2.isReturn());
725:       assertFalse(node2.hasChildren());
726:       assertFalse(node2.isNE());
727:       assertFalse(node2.isIf());
728:       assertFalse(node2.isEmpty());
729:       assertFalse(node2.isIn());
730:       assertFalse(node2.isGetterDef());
731:       assertFalse(node2.isFunction());
732:       assertFalse(node2.isSwitch());
733:       assertFalse(node2.isDefaultCase());
734:       assertFalse(node2.isArrayLit());
735:       assertFalse(node2.isInc());
736:       assertFalse(node2.isThrow());
737:       assertFalse(node2.isFalse());
738:       assertEquals(0, node2.getChildCount());
739:       assertFalse(node2.isParamList());
740:       assertFalse(node2.isInstanceOf());
741:       assertFalse(node2.isSetterDef());
742:       assertFalse(node2.isStringKey());
743:       assertEquals((-1), node2.getCharno());
744:       assertFalse(node2.isRegExp());
745:       assertFalse(node2.isTry());
746:       assertFalse(node2.hasOneChild());
747:       assertFalse(node2.isScript());
748:       assertFalse(node2.isCase());
749:       assertEquals(31, node2.getType());
750:       assertFalse(node2.isCatch());
751:       assertFalse(node2.hasMoreThanOneChild());
752:       assertFalse(node2.isWith());
753:       assertFalse(node2.isBlock());
754:       assertFalse(node2.isFor());
755:       assertFalse(node2.isThis());
756:       assertFalse(node2.isHook());
757:       
758:       JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
759:       assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
760:       assertNotNull(jSTypeRegistry0);
761:       
762:       boolean boolean1 = node1.isVoid();
763:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
764:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
765:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
766:       assertEquals(8, Node.FLAG_NO_THROWS);
767:       assertEquals(50, Node.FREE_CALL);
768:       assertEquals(52, Node.LENGTH);
769:       assertEquals(55, Node.INFERRED_FUNCTION);
770:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
771:       assertEquals(39, Node.EMPTY_BLOCK);
772:       assertEquals(15, Node.NO_SIDE_EFFECTS);
773:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
774:       assertEquals(36, Node.QUOTED_PROP);
775:       assertEquals(57, Node.REFLECTED_OBJECT);
776:       assertEquals(4095, Node.COLUMN_MASK);
777:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
778:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
779:       assertEquals(48, Node.DIRECTIVES);
780:       assertEquals(49, Node.DIRECT_EVAL);
781:       assertEquals(37, Node.OPT_ARG_NAME);
782:       assertEquals(47, Node.IS_DISPATCHER);
783:       assertEquals(29, Node.JSDOC_INFO_PROP);
784:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
785:       assertEquals(56, Node.CHANGE_TIME);
786:       assertEquals(2, Node.POST_FLAG);
787:       assertEquals(32, Node.INCRDECR_PROP);
788:       assertEquals(12, Node.COLUMN_BITS);
789:       assertEquals(53, Node.INPUT_ID);
790:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
791:       assertEquals(1, Node.DECR_FLAG);
792:       assertEquals(57, Node.LAST_PROP);
793:       assertEquals(43, Node.IS_CONSTANT_NAME);
794:       assertEquals(54, Node.SLASH_V);
795:       assertEquals(30, Node.VAR_ARGS_NAME);
796:       assertEquals(51, Node.STATIC_SOURCE_FILE);
797:       assertEquals(46, Node.IS_NAMESPACE);
798:       assertEquals(40, Node.ORIGINALNAME_PROP);
799:       assertEquals(29, Node.JSDOC_INFO_PROP);
800:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
801:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
802:       assertEquals(47, Node.IS_DISPATCHER);
803:       assertEquals(2, Node.POST_FLAG);
804:       assertEquals(53, Node.INPUT_ID);
805:       assertEquals(32, Node.INCRDECR_PROP);
806:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
807:       assertEquals(46, Node.IS_NAMESPACE);
808:       assertEquals(30, Node.VAR_ARGS_NAME);
809:       assertEquals(51, Node.STATIC_SOURCE_FILE);
810:       assertEquals(54, Node.SLASH_V);
811:       assertEquals(43, Node.IS_CONSTANT_NAME);
812:       assertEquals(40, Node.ORIGINALNAME_PROP);
813:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
814:       assertEquals(57, Node.REFLECTED_OBJECT);
815:       assertEquals(50, Node.FREE_CALL);
816:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
817:       assertEquals(8, Node.FLAG_NO_THROWS);
818:       assertEquals(39, Node.EMPTY_BLOCK);
819:       assertEquals(52, Node.LENGTH);
820:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
821:       assertEquals(15, Node.NO_SIDE_EFFECTS);
822:       assertEquals(57, Node.LAST_PROP);
823:       assertEquals(1, Node.DECR_FLAG);
824:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
825:       assertEquals(55, Node.INFERRED_FUNCTION);
826:       assertEquals(4095, Node.COLUMN_MASK);
827:       assertEquals(12, Node.COLUMN_BITS);
828:       assertEquals(36, Node.QUOTED_PROP);
829:       assertEquals(48, Node.DIRECTIVES);
830:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
831:       assertEquals(56, Node.CHANGE_TIME);
832:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
833:       assertEquals(49, Node.DIRECT_EVAL);
834:       assertEquals(37, Node.OPT_ARG_NAME);
835:       assertFalse(node0.equals((Object)node1));
836:       assertFalse(node0.equals((Object)node2));
837:       assertFalse(node1.equals((Object)node2));
838:       assertFalse(node1.equals((Object)node0));
839:       assertTrue(boolean1 == boolean0);
840:       assertFalse(boolean1);
841:       assertFalse(node0.isNew());
842:       assertFalse(node0.isVar());
843:       assertFalse(node0.isBlock());
844:       assertFalse(node0.isDo());
845:       assertFalse(node0.isWhile());
846:       assertFalse(node0.isSetterDef());
847:       assertFalse(node0.isAdd());
848:       assertFalse(node0.isAssignAdd());
849:       assertFalse(node0.isLabel());
850:       assertEquals(0, node0.getChildCount());
851:       assertEquals((-1), node0.getSourcePosition());
852:       assertFalse(node0.isParamList());
853:       assertFalse(node0.isLabelName());
854:       assertFalse(node0.isStringKey());
855:       assertFalse(node0.isContinue());
856:       assertFalse(node0.isCast());
857:       assertFalse(node0.isVoid());
858:       assertFalse(node0.isDebugger());
859:       assertFalse(node0.isTrue());
860:       assertFalse(node0.isNot());
861:       assertFalse(node0.isEmpty());
862:       assertFalse(node0.isDefaultCase());
863:       assertFalse(node0.isObjectLit());
864:       assertFalse(node0.isOr());
865:       assertTrue(node0.isNumber());
866:       assertFalse(node0.isDec());
867:       assertFalse(node0.isComma());
868:       assertFalse(node0.hasChildren());
869:       assertFalse(node0.isReturn());
870:       assertFalse(node0.isNull());
871:       assertFalse(node0.isAssign());
872:       assertFalse(node0.isTypeOf());
873:       assertFalse(node0.isDelProp());
874:       assertFalse(node0.isName());
875:       assertFalse(node0.isBreak());
876:       assertFalse(node0.isGetElem());
877:       assertFalse(node0.isCall());
878:       assertFalse(node0.isExprResult());
879:       assertFalse(node0.isSwitch());
880:       assertFalse(node0.isThrow());
881:       assertEquals((-1), node0.getCharno());
882:       assertFalse(node0.isHook());
883:       assertFalse(node0.isCase());
884:       assertFalse(node0.isString());
885:       assertFalse(node0.isGetProp());
886:       assertFalse(node0.isInc());
887:       assertFalse(node0.isAnd());
888:       assertFalse(node0.isFalse());
889:       assertFalse(node0.isArrayLit());
890:       assertFalse(node0.isTry());
891:       assertFalse(node0.isFunction());
892:       assertFalse(node0.isFor());
893:       assertFalse(node0.isGetterDef());
894:       assertFalse(node0.isScript());
895:       assertFalse(node0.hasOneChild());
896:       assertEquals((-1), node0.getLineno());
897:       assertFalse(node0.isIn());
898:       assertFalse(node0.isNE());
899:       assertFalse(node0.isThis());
900:       assertFalse(node0.isWith());
901:       assertEquals(39, node0.getType());
902:       assertFalse(node0.isIf());
903:       assertFalse(node0.isRegExp());
904:       assertFalse(node0.hasMoreThanOneChild());
905:       assertFalse(node0.isCatch());
906:       assertFalse(node0.isInstanceOf());
907:       assertFalse(node1.isNot());
908:       assertFalse(node1.hasOneChild());
909:       assertEquals(54, node1.getCharno());
910:       assertFalse(node1.isObjectLit());
911:       assertFalse(node1.isGetProp());
912:       assertFalse(node1.isScript());
913:       assertFalse(node1.isThis());
914:       assertFalse(node1.isComma());
915:       assertFalse(node1.isDec());
916:       assertFalse(node1.isTypeOf());
917:       assertFalse(node1.isAssign());
918:       assertFalse(node1.isOr());
919:       assertFalse(node1.hasChildren());
920:       assertFalse(node1.isReturn());
921:       assertFalse(node1.hasMoreThanOneChild());
922:       assertFalse(node1.isWith());
923:       assertFalse(node1.isInstanceOf());
924:       assertFalse(node1.isBreak());
925:       assertFalse(node1.isGetElem());
926:       assertFalse(node1.isExprResult());
927:       assertFalse(node1.isSwitch());
928:       assertFalse(node1.isHook());
929:       assertFalse(node1.isBlock());
930:       assertFalse(node1.isVar());
931:       assertFalse(node1.isDo());
932:       assertFalse(node1.isCase());
933:       assertFalse(node1.isNew());
934:       assertFalse(node1.isAdd());
935:       assertFalse(node1.isParamList());
936:       assertFalse(node1.isNumber());
937:       assertFalse(node1.isGetterDef());
938:       assertFalse(node1.isAssignAdd());
939:       assertFalse(node1.isLabel());
940:       assertFalse(node1.isStringKey());
941:       assertFalse(node1.isArrayLit());
942:       assertEquals(0, node1.getChildCount());
943:       assertFalse(node1.isLabelName());
944:       assertFalse(node1.isDebugger());
945:       assertFalse(node1.isVoid());
946:       assertFalse(node1.isDefaultCase());
947:       assertFalse(node1.isRegExp());
948:       assertFalse(node1.isFunction());
949:       assertFalse(node1.isTrue());
950:       assertFalse(node1.isTry());
951:       assertFalse(node1.isEmpty());
952:       assertFalse(node1.isNE());
953:       assertEquals(217142, node1.getSourcePosition());
954:       assertFalse(node1.isIf());
955:       assertFalse(node1.isDelProp());
956:       assertFalse(node1.isFor());
957:       assertFalse(node1.isNull());
958:       assertFalse(node1.isCatch());
959:       assertFalse(node1.isName());
960:       assertEquals((-1538), node1.getType());
961:       assertFalse(node1.isCall());
962:       assertEquals(53, node1.getLineno());
963:       assertFalse(node1.isWhile());
964:       assertFalse(node1.isIn());
965:       assertFalse(node1.isString());
966:       assertFalse(node1.isInc());
967:       assertFalse(node1.isSetterDef());
968:       assertFalse(node1.isThrow());
969:       assertFalse(node1.isCast());
970:       assertFalse(node1.isContinue());
971:       assertFalse(node1.isAnd());
972:       assertFalse(node1.isFalse());
973:       
974:       Iterable<Node> iterable0 = node2.children();
975:       assertEquals(15, Node.NO_SIDE_EFFECTS);
976:       assertEquals(57, Node.LAST_PROP);
977:       assertEquals(32, Node.INCRDECR_PROP);
978:       assertEquals(49, Node.DIRECT_EVAL);
979:       assertEquals(1, Node.DECR_FLAG);
980:       assertEquals(52, Node.LENGTH);
981:       assertEquals(46, Node.IS_NAMESPACE);
982:       assertEquals(54, Node.SLASH_V);
983:       assertEquals(51, Node.STATIC_SOURCE_FILE);
984:       assertEquals(57, Node.REFLECTED_OBJECT);
985:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
986:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
987:       assertEquals(56, Node.CHANGE_TIME);
988:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
989:       assertEquals(37, Node.OPT_ARG_NAME);
990:       assertEquals(48, Node.DIRECTIVES);
991:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
992:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
993:       assertEquals(12, Node.COLUMN_BITS);
994:       assertEquals(4095, Node.COLUMN_MASK);
995:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
996:       assertEquals(55, Node.INFERRED_FUNCTION);
997:       assertEquals(43, Node.IS_CONSTANT_NAME);
998:       assertEquals(53, Node.INPUT_ID);
999:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1000:       assertEquals(36, Node.QUOTED_PROP);
1001:       assertEquals(8, Node.FLAG_NO_THROWS);
1002:       assertEquals(50, Node.FREE_CALL);
1003:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1004:       assertEquals(40, Node.ORIGINALNAME_PROP);
1005:       assertEquals(29, Node.JSDOC_INFO_PROP);
1006:       assertEquals(39, Node.EMPTY_BLOCK);
1007:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1008:       assertEquals(47, Node.IS_DISPATCHER);
1009:       assertEquals(2, Node.POST_FLAG);
1010:       assertEquals(30, Node.VAR_ARGS_NAME);
1011:       assertFalse(node2.equals((Object)node0));
1012:       assertFalse(node2.equals((Object)node1));
1013:       assertFalse(iterable0.contains(node0));
1014:       assertFalse(node2.isTypeOf());
1015:       assertFalse(node2.isAssignAdd());
1016:       assertFalse(node2.isNumber());
1017:       assertFalse(node2.isLabelName());
1018:       assertEquals((-1), node2.getLineno());
1019:       assertFalse(node2.isGetElem());
1020:       assertFalse(node2.isOr());
1021:       assertEquals((-1), node2.getSourcePosition());
1022:       assertTrue(node2.isDelProp());
1023:       assertFalse(node2.isDo());
1024:       assertFalse(node2.isAdd());
1025:       assertFalse(node2.isNew());
1026:       assertFalse(node2.isContinue());
1027:       assertFalse(node2.isCast());
1028:       assertFalse(node2.isLabel());
1029:       assertFalse(node2.isVar());
1030:       assertFalse(node2.isComma());
1031:       assertFalse(node2.isBreak());
1032:       assertFalse(node2.isGetProp());
1033:       assertFalse(node2.isAnd());
1034:       assertFalse(node2.isObjectLit());
1035:       assertFalse(node2.isName());
1036:       assertFalse(node2.isNot());
1037:       assertFalse(node2.isNull());
1038:       assertFalse(node2.isDebugger());
1039:       assertFalse(node2.isExprResult());
1040:       assertFalse(node2.isVoid());
1041:       assertFalse(node2.isTrue());
1042:       assertFalse(node2.isString());
1043:       assertFalse(node2.isCall());
1044:       assertFalse(node2.isWhile());
1045:       assertFalse(node2.isAssign());
1046:       assertFalse(node2.isDec());
1047:       assertFalse(node2.isReturn());
1048:       assertFalse(node2.hasChildren());
1049:       assertFalse(node2.isNE());
1050:       assertFalse(node2.isIf());
1051:       assertFalse(node2.isEmpty());
1052:       assertFalse(node2.isIn());
1053:       assertFalse(node2.isGetterDef());
1054:       assertFalse(node2.isFunction());
1055:       assertFalse(node2.isSwitch());
1056:       assertFalse(node2.isDefaultCase());
1057:       assertFalse(node2.isArrayLit());
1058:       assertFalse(node2.isInc());
1059:       assertFalse(node2.isThrow());
1060:       assertFalse(node2.isFalse());
1061:       assertEquals(0, node2.getChildCount());
1062:       assertFalse(node2.isParamList());
1063:       assertFalse(node2.isInstanceOf());
1064:       assertFalse(node2.isSetterDef());
1065:       assertFalse(node2.isStringKey());
1066:       assertEquals((-1), node2.getCharno());
1067:       assertFalse(node2.isRegExp());
1068:       assertFalse(node2.isTry());
1069:       assertFalse(node2.hasOneChild());
1070:       assertFalse(node2.isScript());
1071:       assertFalse(node2.isCase());
1072:       assertEquals(31, node2.getType());
1073:       assertFalse(node2.isCatch());
1074:       assertFalse(node2.hasMoreThanOneChild());
1075:       assertFalse(node2.isWith());
1076:       assertFalse(node2.isBlock());
1077:       assertFalse(node2.isFor());
1078:       assertFalse(node2.isThis());
1079:       assertFalse(node2.isHook());
1080:       assertNotNull(iterable0);
1081:       
1082:       Node node3 = node0.clonePropsFrom(node2);
1083:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1084:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1085:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1086:       assertEquals(8, Node.FLAG_NO_THROWS);
1087:       assertEquals(50, Node.FREE_CALL);
1088:       assertEquals(52, Node.LENGTH);
1089:       assertEquals(55, Node.INFERRED_FUNCTION);
1090:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1091:       assertEquals(39, Node.EMPTY_BLOCK);
1092:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1093:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1094:       assertEquals(36, Node.QUOTED_PROP);
1095:       assertEquals(57, Node.REFLECTED_OBJECT);
1096:       assertEquals(4095, Node.COLUMN_MASK);
1097:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1098:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1099:       assertEquals(48, Node.DIRECTIVES);
1100:       assertEquals(49, Node.DIRECT_EVAL);
1101:       assertEquals(37, Node.OPT_ARG_NAME);
1102:       assertEquals(47, Node.IS_DISPATCHER);
1103:       assertEquals(29, Node.JSDOC_INFO_PROP);
1104:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1105:       assertEquals(56, Node.CHANGE_TIME);
1106:       assertEquals(2, Node.POST_FLAG);
1107:       assertEquals(32, Node.INCRDECR_PROP);
1108:       assertEquals(12, Node.COLUMN_BITS);
1109:       assertEquals(53, Node.INPUT_ID);
1110:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1111:       assertEquals(1, Node.DECR_FLAG);
1112:       assertEquals(57, Node.LAST_PROP);
1113:       assertEquals(43, Node.IS_CONSTANT_NAME);
1114:       assertEquals(54, Node.SLASH_V);
1115:       assertEquals(30, Node.VAR_ARGS_NAME);
1116:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1117:       assertEquals(46, Node.IS_NAMESPACE);
1118:       assertEquals(40, Node.ORIGINALNAME_PROP);
1119:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1120:       assertEquals(57, Node.LAST_PROP);
1121:       assertEquals(32, Node.INCRDECR_PROP);
1122:       assertEquals(49, Node.DIRECT_EVAL);
1123:       assertEquals(1, Node.DECR_FLAG);
1124:       assertEquals(52, Node.LENGTH);
1125:       assertEquals(46, Node.IS_NAMESPACE);
1126:       assertEquals(54, Node.SLASH_V);
1127:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1128:       assertEquals(57, Node.REFLECTED_OBJECT);
1129:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1130:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1131:       assertEquals(56, Node.CHANGE_TIME);
1132:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1133:       assertEquals(37, Node.OPT_ARG_NAME);
1134:       assertEquals(48, Node.DIRECTIVES);
1135:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1136:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1137:       assertEquals(12, Node.COLUMN_BITS);
1138:       assertEquals(4095, Node.COLUMN_MASK);
1139:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1140:       assertEquals(55, Node.INFERRED_FUNCTION);
1141:       assertEquals(43, Node.IS_CONSTANT_NAME);
1142:       assertEquals(53, Node.INPUT_ID);
1143:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1144:       assertEquals(36, Node.QUOTED_PROP);
1145:       assertEquals(8, Node.FLAG_NO_THROWS);
1146:       assertEquals(50, Node.FREE_CALL);
1147:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1148:       assertEquals(40, Node.ORIGINALNAME_PROP);
1149:       assertEquals(29, Node.JSDOC_INFO_PROP);
1150:       assertEquals(39, Node.EMPTY_BLOCK);
1151:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1152:       assertEquals(47, Node.IS_DISPATCHER);
1153:       assertEquals(2, Node.POST_FLAG);
1154:       assertEquals(30, Node.VAR_ARGS_NAME);
1155:       assertEquals(43, Node.IS_CONSTANT_NAME);
1156:       assertEquals(36, Node.QUOTED_PROP);
1157:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1158:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1159:       assertEquals(4095, Node.COLUMN_MASK);
1160:       assertEquals(56, Node.CHANGE_TIME);
1161:       assertEquals(47, Node.IS_DISPATCHER);
1162:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1163:       assertEquals(39, Node.EMPTY_BLOCK);
1164:       assertEquals(29, Node.JSDOC_INFO_PROP);
1165:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1166:       assertEquals(48, Node.DIRECTIVES);
1167:       assertEquals(37, Node.OPT_ARG_NAME);
1168:       assertEquals(57, Node.REFLECTED_OBJECT);
1169:       assertEquals(55, Node.INFERRED_FUNCTION);
1170:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1171:       assertEquals(53, Node.INPUT_ID);
1172:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1173:       assertEquals(52, Node.LENGTH);
1174:       assertEquals(8, Node.FLAG_NO_THROWS);
1175:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1176:       assertEquals(57, Node.LAST_PROP);
1177:       assertEquals(54, Node.SLASH_V);
1178:       assertEquals(1, Node.DECR_FLAG);
1179:       assertEquals(49, Node.DIRECT_EVAL);
1180:       assertEquals(40, Node.ORIGINALNAME_PROP);
1181:       assertEquals(12, Node.COLUMN_BITS);
1182:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1183:       assertEquals(30, Node.VAR_ARGS_NAME);
1184:       assertEquals(2, Node.POST_FLAG);
1185:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1186:       assertEquals(32, Node.INCRDECR_PROP);
1187:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1188:       assertEquals(46, Node.IS_NAMESPACE);
1189:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1190:       assertEquals(50, Node.FREE_CALL);
1191:       assertFalse(node0.equals((Object)node1));
1192:       assertFalse(node0.equals((Object)node2));
1193:       assertFalse(node2.equals((Object)node0));
1194:       assertFalse(node2.equals((Object)node1));
1195:       assertFalse(node3.equals((Object)node2));
1196:       assertFalse(node3.equals((Object)node1));
1197:       assertFalse(node0.isNew());
1198:       assertFalse(node0.isVar());
1199:       assertFalse(node0.isBlock());
1200:       assertFalse(node0.isDo());
1201:       assertFalse(node0.isWhile());
1202:       assertFalse(node0.isSetterDef());
1203:       assertFalse(node0.isAdd());
1204:       assertFalse(node0.isAssignAdd());
1205:       assertFalse(node0.isLabel());
1206:       assertEquals(0, node0.getChildCount());
1207:       assertEquals((-1), node0.getSourcePosition());
1208:       assertFalse(node0.isParamList());
1209:       assertFalse(node0.isLabelName());
1210:       assertFalse(node0.isStringKey());
1211:       assertFalse(node0.isContinue());
1212:       assertFalse(node0.isCast());
1213:       assertFalse(node0.isVoid());
1214:       assertFalse(node0.isDebugger());
1215:       assertFalse(node0.isTrue());
1216:       assertFalse(node0.isNot());
1217:       assertFalse(node0.isEmpty());
1218:       assertFalse(node0.isDefaultCase());
1219:       assertFalse(node0.isObjectLit());
1220:       assertFalse(node0.isOr());
1221:       assertTrue(node0.isNumber());
1222:       assertFalse(node0.isDec());
1223:       assertFalse(node0.isComma());
1224:       assertFalse(node0.hasChildren());
1225:       assertFalse(node0.isReturn());
1226:       assertFalse(node0.isNull());
1227:       assertFalse(node0.isAssign());
1228:       assertFalse(node0.isTypeOf());
1229:       assertFalse(node0.isDelProp());
1230:       assertFalse(node0.isName());
1231:       assertFalse(node0.isBreak());
1232:       assertFalse(node0.isGetElem());
1233:       assertFalse(node0.isCall());
1234:       assertFalse(node0.isExprResult());
1235:       assertFalse(node0.isSwitch());
1236:       assertFalse(node0.isThrow());
1237:       assertEquals((-1), node0.getCharno());
1238:       assertFalse(node0.isHook());
1239:       assertFalse(node0.isCase());
1240:       assertFalse(node0.isString());
1241:       assertFalse(node0.isGetProp());
1242:       assertFalse(node0.isInc());
1243:       assertFalse(node0.isAnd());
1244:       assertFalse(node0.isFalse());
1245:       assertFalse(node0.isArrayLit());
1246:       assertFalse(node0.isTry());
1247:       assertFalse(node0.isFunction());
1248:       assertFalse(node0.isFor());
1249:       assertFalse(node0.isGetterDef());
1250:       assertFalse(node0.isScript());
1251:       assertFalse(node0.hasOneChild());
1252:       assertEquals((-1), node0.getLineno());
1253:       assertFalse(node0.isIn());
1254:       assertFalse(node0.isNE());
1255:       assertFalse(node0.isThis());
1256:       assertFalse(node0.isWith());
1257:       assertEquals(39, node0.getType());
1258:       assertFalse(node0.isIf());
1259:       assertFalse(node0.isRegExp());
1260:       assertFalse(node0.hasMoreThanOneChild());
1261:       assertFalse(node0.isCatch());
1262:       assertFalse(node0.isInstanceOf());
1263:       assertFalse(node2.isTypeOf());
1264:       assertFalse(node2.isAssignAdd());
1265:       assertFalse(node2.isNumber());
1266:       assertFalse(node2.isLabelName());
1267:       assertEquals((-1), node2.getLineno());
1268:       assertFalse(node2.isGetElem());
1269:       assertFalse(node2.isOr());
1270:       assertEquals((-1), node2.getSourcePosition());
1271:       assertTrue(node2.isDelProp());
1272:       assertFalse(node2.isDo());
1273:       assertFalse(node2.isAdd());
1274:       assertFalse(node2.isNew());
1275:       assertFalse(node2.isContinue());
1276:       assertFalse(node2.isCast());
1277:       assertFalse(node2.isLabel());
1278:       assertFalse(node2.isVar());
1279:       assertFalse(node2.isComma());
1280:       assertFalse(node2.isBreak());
1281:       assertFalse(node2.isGetProp());
1282:       assertFalse(node2.isAnd());
1283:       assertFalse(node2.isObjectLit());
1284:       assertFalse(node2.isName());
1285:       assertFalse(node2.isNot());
1286:       assertFalse(node2.isNull());
1287:       assertFalse(node2.isDebugger());
1288:       assertFalse(node2.isExprResult());
1289:       assertFalse(node2.isVoid());
1290:       assertFalse(node2.isTrue());
1291:       assertFalse(node2.isString());
1292:       assertFalse(node2.isCall());
1293:       assertFalse(node2.isWhile());
1294:       assertFalse(node2.isAssign());
1295:       assertFalse(node2.isDec());
1296:       assertFalse(node2.isReturn());
1297:       assertFalse(node2.hasChildren());
1298:       assertFalse(node2.isNE());
1299:       assertFalse(node2.isIf());
1300:       assertFalse(node2.isEmpty());
1301:       assertFalse(node2.isIn());
1302:       assertFalse(node2.isGetterDef());
1303:       assertFalse(node2.isFunction());
1304:       assertFalse(node2.isSwitch());
1305:       assertFalse(node2.isDefaultCase());
1306:       assertFalse(node2.isArrayLit());
1307:       assertFalse(node2.isInc());
1308:       assertFalse(node2.isThrow());
1309:       assertFalse(node2.isFalse());
1310:       assertEquals(0, node2.getChildCount());
1311:       assertFalse(node2.isParamList());
1312:       assertFalse(node2.isInstanceOf());
1313:       assertFalse(node2.isSetterDef());
1314:       assertFalse(node2.isStringKey());
1315:       assertEquals((-1), node2.getCharno());
1316:       assertFalse(node2.isRegExp());
1317:       assertFalse(node2.isTry());
1318:       assertFalse(node2.hasOneChild());
1319:       assertFalse(node2.isScript());
1320:       assertFalse(node2.isCase());
1321:       assertEquals(31, node2.getType());
1322:       assertFalse(node2.isCatch());
1323:       assertFalse(node2.hasMoreThanOneChild());
1324:       assertFalse(node2.isWith());
1325:       assertFalse(node2.isBlock());
1326:       assertFalse(node2.isFor());
1327:       assertFalse(node2.isThis());
1328:       assertFalse(node2.isHook());
1329:       assertFalse(node3.isInstanceOf());
1330:       assertFalse(node3.isGetProp());
1331:       assertFalse(node3.isBreak());
1332:       assertFalse(node3.isWith());
1333:       assertFalse(node3.isFalse());
1334:       assertFalse(node3.isThis());
1335:       assertFalse(node3.isComma());
1336:       assertFalse(node3.isThrow());
1337:       assertFalse(node3.isHook());
1338:       assertFalse(node3.isCast());
1339:       assertFalse(node3.isScript());
1340:       assertFalse(node3.hasOneChild());
1341:       assertFalse(node3.isString());
1342:       assertFalse(node3.isLabelName());
1343:       assertFalse(node3.isNot());
1344:       assertFalse(node3.isAnd());
1345:       assertFalse(node3.isSwitch());
1346:       assertFalse(node3.isObjectLit());
1347:       assertEquals((-1), node3.getSourcePosition());
1348:       assertEquals((-1), node3.getCharno());
1349:       assertEquals((-1), node3.getLineno());
1350:       assertFalse(node3.isIn());
1351:       assertFalse(node3.isCase());
1352:       assertFalse(node3.isFor());
1353:       assertFalse(node3.isContinue());
1354:       assertFalse(node3.hasMoreThanOneChild());
1355:       assertFalse(node3.isBlock());
1356:       assertEquals(39, node3.getType());
1357:       assertFalse(node3.isInc());
1358:       assertFalse(node3.isIf());
1359:       assertFalse(node3.isNE());
1360:       assertEquals(0, node3.getChildCount());
1361:       assertFalse(node3.isSetterDef());
1362:       assertFalse(node3.isCatch());
1363:       assertFalse(node3.isDefaultCase());
1364:       assertFalse(node3.isFunction());
1365:       assertFalse(node3.isRegExp());
1366:       assertFalse(node3.isVar());
1367:       assertFalse(node3.isTry());
1368:       assertFalse(node3.isArrayLit());
1369:       assertFalse(node3.isGetterDef());
1370:       assertFalse(node3.isStringKey());
1371:       assertFalse(node3.isParamList());
1372:       assertFalse(node3.isDebugger());
1373:       assertFalse(node3.isReturn());
1374:       assertTrue(node3.isNumber());
1375:       assertFalse(node3.isOr());
1376:       assertFalse(node3.isAssignAdd());
1377:       assertFalse(node3.isWhile());
1378:       assertFalse(node3.isAssign());
1379:       assertFalse(node3.isDo());
1380:       assertFalse(node3.isTypeOf());
1381:       assertFalse(node3.isDec());
1382:       assertFalse(node3.hasChildren());
1383:       assertFalse(node3.isLabel());
1384:       assertFalse(node3.isAdd());
1385:       assertFalse(node3.isCall());
1386:       assertFalse(node3.isExprResult());
1387:       assertFalse(node3.isVoid());
1388:       assertFalse(node3.isGetElem());
1389:       assertFalse(node3.isNew());
1390:       assertFalse(node3.isDelProp());
1391:       assertFalse(node3.isEmpty());
1392:       assertFalse(node3.isName());
1393:       assertFalse(node3.isTrue());
1394:       assertFalse(node3.isNull());
1395:       assertSame(node0, node3);
1396:       assertSame(node3, node0);
1397:       assertNotNull(node3);
1398:       
1399:       // Undeclared exception!
1400:       try { 
1401:         node2.removeChild(node1);
1402:         fail("Expecting exception: NullPointerException");
1403:       
1404:       } catch(NullPointerException e) {
1405:          //
1406:          // no message in exception (getMessage() returned null)
1407:          //
1408:          verifyException("com.google.javascript.rhino.Node", e);
1409:       }
1410:   }
1411: }
RegularFileObject[/tmp/EvoSuite_186_1628160175734/com/google/javascript/rhino/Node_186_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Aug 05 10:42:55 GMT 2021
5:  */
6: 
7: package com.google.javascript.rhino;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class Node_186_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "com.google.javascript.rhino.Node"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Node_186_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "com.google.common.collect.ArrayListMultimap",
70:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
71:       "com.google.common.collect.ImmutableList$SubList",
72:       "com.google.javascript.rhino.jstype.NoType",
73:       "com.google.javascript.rhino.JSDocInfo$Visibility",
74:       "com.google.common.collect.ListMultimap",
75:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
76:       "com.google.javascript.rhino.jstype.ArrowType",
77:       "com.google.javascript.rhino.SimpleErrorReporter",
78:       "com.google.common.collect.Lists$RandomAccessPartition",
79:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
80:       "com.google.common.collect.Collections2",
81:       "com.google.javascript.rhino.jstype.NumberType",
82:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
83:       "com.google.common.collect.PeekingIterator",
84:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
85:       "com.google.common.collect.RegularImmutableList",
86:       "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
87:       "com.google.javascript.rhino.jstype.StaticScope",
88:       "com.google.javascript.rhino.jstype.InstanceObjectType",
89:       "com.google.common.collect.Lists$TransformingRandomAccessList",
90:       "com.google.javascript.rhino.Node$PropListItem",
91:       "com.google.javascript.rhino.Node$IntPropListItem",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.Maps$KeySet",
94:       "com.google.common.collect.Sets$3",
95:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
96:       "com.google.common.collect.LinkedHashMultimap",
97:       "com.google.javascript.rhino.Node",
98:       "com.google.javascript.rhino.jstype.ObjectType",
99:       "com.google.common.collect.Sets$1",
100:       "com.google.common.collect.ImmutableMapKeySet",
101:       "com.google.javascript.rhino.JSDocInfo$Marker",
102:       "com.google.common.collect.RegularImmutableMap",
103:       "com.google.common.collect.RegularImmutableBiMap",
104:       "com.google.javascript.rhino.Node$NodeMismatch",
105:       "com.google.javascript.rhino.jstype.RecordType",
106:       "com.google.common.collect.SortedMapDifference",
107:       "com.google.javascript.rhino.jstype.ModificationVisitor",
108:       "com.google.javascript.rhino.jstype.PropertyMap$1",
109:       "com.google.common.collect.AbstractMapEntry",
110:       "com.google.javascript.rhino.Node$AncestorIterable$1",
111:       "com.google.common.collect.Iterators$12",
112:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
113:       "com.google.common.collect.Iterators$11",
114:       "com.google.javascript.rhino.jstype.JSType$1",
115:       "com.google.common.collect.EmptyImmutableBiMap",
116:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
117:       "com.google.common.base.Predicate",
118:       "com.google.javascript.rhino.jstype.JSType$2",
119:       "com.google.javascript.rhino.jstype.VoidType",
120:       "com.google.common.base.Joiner",
121:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
122:       "com.google.common.collect.AbstractListMultimap",
123:       "com.google.javascript.rhino.jstype.JSType",
124:       "com.google.common.collect.ImmutableAsList",
125:       "com.google.javascript.rhino.Node$StringNode",
126:       "com.google.javascript.rhino.jstype.ProxyObjectType",
127:       "com.google.common.collect.Sets$SetView",
128:       "com.google.common.collect.RegularImmutableAsList",
129:       "com.google.javascript.rhino.jstype.TemplateType",
130:       "com.google.javascript.rhino.jstype.NamedType",
131:       "com.google.common.collect.Iterators$13",
132:       "com.google.javascript.rhino.InputId",
133:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
134:       "com.google.javascript.rhino.jstype.RelationshipVisitor",
135:       "com.google.common.collect.AbstractMapBasedMultimap",
136:       "com.google.common.collect.Lists$Partition",
137:       "com.google.common.collect.Lists",
138:       "com.google.javascript.rhino.Node$SideEffectFlags",
139:       "com.google.common.collect.UnmodifiableListIterator",
140:       "com.google.javascript.rhino.jstype.NullType",
141:       "com.google.common.collect.Lists$TransformingSequentialList",
142:       "com.google.javascript.rhino.ErrorReporter",
143:       "com.google.javascript.rhino.jstype.UnknownType",
144:       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
145:       "com.google.javascript.rhino.jstype.ValueType",
146:       "com.google.javascript.rhino.jstype.PropertyMap",
147:       "com.google.javascript.rhino.Token",
148:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
149:       "com.google.common.collect.ObjectArrays",
150:       "com.google.javascript.rhino.jstype.StaticSourceFile",
151:       "com.google.javascript.rhino.jstype.BooleanType",
152:       "com.google.javascript.rhino.jstype.NoObjectType",
153:       "com.google.common.collect.AbstractIterator",
154:       "com.google.javascript.rhino.jstype.FunctionBuilder",
155:       "com.google.javascript.rhino.jstype.JSType$TypePair",
156:       "com.google.common.base.Joiner$MapJoiner",
157:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
158:       "com.google.common.collect.ImmutableList$1",
159:       "com.google.common.collect.MapDifference",
160:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
161:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
162:       "com.google.common.collect.Sets$ImprovedAbstractSet",
163:       "com.google.javascript.rhino.jstype.FunctionType",
164:       "com.google.common.base.Preconditions",
165:       "com.google.common.collect.UnmodifiableIterator",
166:       "com.google.javascript.rhino.JSDocInfo",
167:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
168:       "com.google.javascript.rhino.jstype.Property",
169:       "com.google.common.collect.ImmutableMapValues",
170:       "com.google.common.collect.ImmutableEntry",
171:       "com.google.common.base.Joiner$1",
172:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
173:       "com.google.common.base.Joiner$2",
174:       "com.google.common.collect.ImmutableCollection",
175:       "com.google.common.collect.ImmutableEnumMap",
176:       "com.google.javascript.rhino.jstype.TernaryValue",
177:       "com.google.javascript.rhino.Node$AncestorIterable",
178:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
179:       "com.google.common.collect.Lists$RandomAccessListWrapper",
180:       "com.google.common.collect.ImmutableEnumSet",
181:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
182:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
183:       "com.google.javascript.rhino.jstype.EnumElementType",
184:       "com.google.javascript.rhino.jstype.UnionType",
185:       "com.google.common.base.Objects",
186:       "com.google.javascript.rhino.Node$NumberNode",
187:       "com.google.common.collect.SingletonImmutableList",
188:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
189:       "com.google.common.collect.ImmutableCollection$Builder",
190:       "com.google.javascript.rhino.jstype.StaticSlot",
191:       "com.google.common.collect.Iterators$6",
192:       "com.google.common.collect.BiMap",
193:       "com.google.common.collect.Iterators$7",
194:       "com.google.common.collect.AbstractSetMultimap",
195:       "com.google.common.base.Function",
196:       "com.google.common.collect.ImmutableSet",
197:       "com.google.common.collect.Lists$AbstractListWrapper",
198:       "com.google.common.collect.ImmutableMap",
199:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
200:       "com.google.common.collect.AbstractIndexedListIterator",
201:       "com.google.common.collect.Maps$1",
202:       "com.google.javascript.rhino.jstype.EnumType",
203:       "com.google.common.collect.Iterators$1",
204:       "com.google.common.collect.Iterators$2",
205:       "com.google.javascript.rhino.jstype.NamespaceType",
206:       "com.google.common.collect.Iterators$3",
207:       "com.google.common.collect.Sets",
208:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
209:       "com.google.javascript.rhino.Node$ObjectPropListItem",
210:       "com.google.common.collect.Lists$StringAsImmutableList",
211:       "com.google.common.collect.Lists$2",
212:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
213:       "com.google.common.collect.ImmutableList$Builder",
214:       "com.google.common.collect.Lists$1",
215:       "com.google.javascript.rhino.jstype.StaticReference",
216:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
217:       "com.google.common.collect.Multiset",
218:       "com.google.common.collect.AbstractMultimap",
219:       "com.google.common.collect.Multimap",
220:       "com.google.common.collect.Iterators",
221:       "com.google.common.collect.Maps$ImprovedAbstractMap",
222:       "com.google.common.collect.ImmutableBiMap",
223:       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
224:       "com.google.common.collect.ImmutableList",
225:       "com.google.common.collect.SingletonImmutableBiMap",
226:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
227:       "com.google.javascript.rhino.jstype.StringType",
228:       "com.google.javascript.rhino.Node$AbstractPropListItem",
229:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
230:       "com.google.javascript.rhino.jstype.TemplatizedType",
231:       "com.google.javascript.rhino.jstype.Visitor",
232:       "com.google.javascript.rhino.jstype.NoResolvedType",
233:       "com.google.javascript.rhino.jstype.JSTypeNative",
234:       "com.google.javascript.rhino.jstype.AllType",
235:       "com.google.common.collect.Maps",
236:       "com.google.common.collect.SetMultimap",
237:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
238:       "com.google.common.collect.Maps$EntryTransformer",
239:       "com.google.javascript.rhino.JSTypeExpression",
240:       "com.google.common.collect.Iterators$MergingIterator"
241:     );
242:   } 
243: 
244:   private static void resetClasses() {
245:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Node_186_tmp__ESTest_scaffolding.class.getClassLoader()); 
246: 
247:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
248:       "com.google.javascript.rhino.Node",
249:       "com.google.javascript.rhino.Node$NumberNode",
250:       "com.google.javascript.rhino.Node$StringNode",
251:       "com.google.javascript.rhino.Node$AbstractPropListItem",
252:       "com.google.javascript.rhino.Node$ObjectPropListItem",
253:       "com.google.javascript.rhino.Node$IntPropListItem",
254:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
255:       "com.google.javascript.rhino.Node$AncestorIterable",
256:       "com.google.javascript.rhino.Node$NodeMismatch",
257:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
258:       "com.google.javascript.rhino.Node$SideEffectFlags",
259:       "com.google.javascript.rhino.Token",
260:       "com.google.common.base.Preconditions",
261:       "com.google.javascript.rhino.SimpleErrorReporter",
262:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
263:       "com.google.common.base.Joiner",
264:       "com.google.common.base.Joiner$1",
265:       "com.google.common.collect.Collections2",
266:       "com.google.common.base.Joiner$MapJoiner",
267:       "com.google.common.collect.Maps",
268:       "com.google.common.collect.AbstractMultimap",
269:       "com.google.common.collect.AbstractMapBasedMultimap",
270:       "com.google.common.collect.AbstractSetMultimap",
271:       "com.google.common.collect.LinkedHashMultimap",
272:       "com.google.common.collect.AbstractMapEntry",
273:       "com.google.common.collect.ImmutableEntry",
274:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
275:       "com.google.common.collect.AbstractListMultimap",
276:       "com.google.common.collect.ArrayListMultimap",
277:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
278:       "com.google.common.collect.ImmutableCollection",
279:       "com.google.common.collect.RegularImmutableList",
280:       "com.google.common.collect.ObjectArrays",
281:       "com.google.common.collect.ImmutableList",
282:       "com.google.javascript.rhino.jstype.ModificationVisitor",
283:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
284:       "com.google.common.collect.ImmutableCollection$Builder",
285:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
286:       "com.google.common.collect.ImmutableList$Builder",
287:       "com.google.common.collect.UnmodifiableIterator",
288:       "com.google.common.collect.UnmodifiableListIterator",
289:       "com.google.common.collect.Iterators$1",
290:       "com.google.common.collect.Iterators$2",
291:       "com.google.common.collect.Iterators",
292:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
293:       "com.google.javascript.rhino.jstype.JSType$1",
294:       "com.google.javascript.rhino.jstype.JSType",
295:       "com.google.javascript.rhino.jstype.ObjectType",
296:       "com.google.javascript.rhino.jstype.ProxyObjectType",
297:       "com.google.javascript.rhino.jstype.TemplateType",
298:       "com.google.javascript.rhino.jstype.ValueType",
299:       "com.google.javascript.rhino.jstype.BooleanType",
300:       "com.google.javascript.rhino.jstype.NullType",
301:       "com.google.javascript.rhino.jstype.NumberType",
302:       "com.google.javascript.rhino.jstype.StringType",
303:       "com.google.javascript.rhino.jstype.UnknownType",
304:       "com.google.javascript.rhino.jstype.VoidType",
305:       "com.google.javascript.rhino.jstype.AllType",
306:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
307:       "com.google.common.collect.ImmutableMap",
308:       "com.google.common.collect.ImmutableBiMap",
309:       "com.google.common.collect.EmptyImmutableBiMap",
310:       "com.google.javascript.rhino.jstype.PropertyMap$1",
311:       "com.google.javascript.rhino.jstype.PropertyMap",
312:       "com.google.javascript.rhino.jstype.FunctionType",
313:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
314:       "com.google.javascript.rhino.jstype.ArrowType",
315:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
316:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
317:       "com.google.javascript.rhino.jstype.InstanceObjectType",
318:       "com.google.javascript.rhino.jstype.Property",
319:       "com.google.common.collect.Lists",
320:       "com.google.javascript.rhino.jstype.NoObjectType",
321:       "com.google.javascript.rhino.jstype.NoType",
322:       "com.google.javascript.rhino.jstype.NoResolvedType",
323:       "com.google.common.collect.SingletonImmutableList",
324:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
325:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
326:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
327:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
328:       "com.google.javascript.rhino.jstype.UnionType",
329:       "com.google.javascript.rhino.jstype.FunctionBuilder",
330:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
331:       "com.google.common.base.Objects",
332:       "com.google.javascript.rhino.jstype.EnumType",
333:       "com.google.javascript.rhino.jstype.EnumElementType",
334:       "com.google.javascript.rhino.JSDocInfo",
335:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
336:       "com.google.javascript.rhino.Node$AncestorIterable$1",
337:       "com.google.javascript.rhino.jstype.NamedType",
338:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
339:       "com.google.common.collect.Sets",
340:       "com.google.common.collect.AbstractIndexedListIterator",
341:       "com.google.common.collect.Iterators$11",
342:       "com.google.common.collect.Platform",
343:       "com.google.javascript.rhino.jstype.TemplatizedType",
344:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
345:       "com.google.javascript.rhino.InputId",
346:       "com.google.common.collect.AbstractMultimap$Values",
347:       "com.google.common.collect.AbstractMapBasedMultimap$Itr",
348:       "com.google.common.collect.AbstractMapBasedMultimap$1",
349:       "com.google.common.collect.Multimaps$Entries",
350:       "com.google.common.collect.AbstractMultimap$Entries",
351:       "com.google.common.collect.AbstractMapBasedMultimap$2",
352:       "com.google.javascript.rhino.JSTypeExpression",
353:       "com.google.common.collect.Iterators$12",
354:       "com.google.common.collect.Iterables",
355:       "com.google.common.collect.ImmutableSet",
356:       "com.google.common.collect.EmptyImmutableSet",
357:       "com.google.javascript.rhino.jstype.JSType$TypePair",
358:       "com.google.javascript.rhino.jstype.TernaryValue",
359:       "com.google.javascript.rhino.jstype.JSType$2",
360:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
361:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
362:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
363:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
364:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
365:       "com.google.common.collect.ImmutableList$1",
366:       "com.google.common.collect.Sets$ImprovedAbstractSet",
367:       "com.google.common.collect.LinkedHashMultimap$ValueSet",
368:       "com.google.common.collect.Hashing",
369:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet",
370:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedDocumentation",
371:       "com.google.javascript.rhino.JSDocInfo$Marker"
372:     );
373:   }
374: }

[MASTER] 10:42:55.989 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Node node0 = Node.newNumber(2948.2558, (-1538), (-1538));
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(52, Node.LENGTH);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(2, Node.POST_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(53, Node.INPUT_ID);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isBlock());
assertFalse(node0.isDo());
assertFalse(node0.isWhile());
assertFalse(node0.isSetterDef());
assertFalse(node0.isAdd());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isLabel());
assertEquals(0, node0.getChildCount());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isParamList());
assertFalse(node0.isLabelName());
assertFalse(node0.isStringKey());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertFalse(node0.isVoid());
assertFalse(node0.isDebugger());
assertFalse(node0.isTrue());
assertFalse(node0.isNot());
assertFalse(node0.isEmpty());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isObjectLit());
assertFalse(node0.isOr());
assertTrue(node0.isNumber());
assertFalse(node0.isDec());
assertFalse(node0.isComma());
assertFalse(node0.hasChildren());
assertFalse(node0.isReturn());
assertFalse(node0.isNull());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertFalse(node0.isBreak());
assertFalse(node0.isGetElem());
assertFalse(node0.isCall());
assertFalse(node0.isExprResult());
assertFalse(node0.isSwitch());
assertFalse(node0.isThrow());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isHook());
assertFalse(node0.isCase());
assertFalse(node0.isString());
assertFalse(node0.isGetProp());
assertFalse(node0.isInc());
assertFalse(node0.isAnd());
assertFalse(node0.isFalse());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTry());
assertFalse(node0.isFunction());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isScript());
assertFalse(node0.hasOneChild());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIn());
assertFalse(node0.isNE());
assertFalse(node0.isThis());
assertFalse(node0.isWith());
assertEquals(39, node0.getType());
assertFalse(node0.isIf());
assertFalse(node0.isRegExp());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isCatch());
assertFalse(node0.isInstanceOf());
assertNotNull(node0);

Node node1 = new Node((-1538), node0, 53, 54);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(52, Node.LENGTH);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(2, Node.POST_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(53, Node.INPUT_ID);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(52, Node.LENGTH);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(37, Node.OPT_ARG_NAME);
assertFalse(node1.equals((Object)node0));
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isBlock());
assertFalse(node0.isDo());
assertFalse(node0.isWhile());
assertFalse(node0.isSetterDef());
assertFalse(node0.isAdd());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isLabel());
assertEquals(0, node0.getChildCount());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isParamList());
assertFalse(node0.isLabelName());
assertFalse(node0.isStringKey());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertFalse(node0.isVoid());
assertFalse(node0.isDebugger());
assertFalse(node0.isTrue());
assertFalse(node0.isNot());
assertFalse(node0.isEmpty());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isObjectLit());
assertFalse(node0.isOr());
assertTrue(node0.isNumber());
assertFalse(node0.isDec());
assertFalse(node0.isComma());
assertFalse(node0.hasChildren());
assertFalse(node0.isReturn());
assertFalse(node0.isNull());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertFalse(node0.isBreak());
assertFalse(node0.isGetElem());
assertFalse(node0.isCall());
assertFalse(node0.isExprResult());
assertFalse(node0.isSwitch());
assertFalse(node0.isThrow());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isHook());
assertFalse(node0.isCase());
assertFalse(node0.isString());
assertFalse(node0.isGetProp());
assertFalse(node0.isInc());
assertFalse(node0.isAnd());
assertFalse(node0.isFalse());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTry());
assertFalse(node0.isFunction());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isScript());
assertFalse(node0.hasOneChild());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIn());
assertFalse(node0.isNE());
assertFalse(node0.isThis());
assertFalse(node0.isWith());
assertEquals(39, node0.getType());
assertFalse(node0.isIf());
assertFalse(node0.isRegExp());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isCatch());
assertFalse(node0.isInstanceOf());
assertFalse(node1.isNot());
assertEquals(54, node1.getCharno());
assertFalse(node1.isObjectLit());
assertFalse(node1.isGetProp());
assertFalse(node1.isScript());
assertFalse(node1.isThis());
assertFalse(node1.isComma());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isAssign());
assertFalse(node1.isOr());
assertFalse(node1.isReturn());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isWith());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isBreak());
assertFalse(node1.isGetElem());
assertFalse(node1.isExprResult());
assertFalse(node1.isSwitch());
assertFalse(node1.isHook());
assertFalse(node1.isBlock());
assertFalse(node1.isVar());
assertFalse(node1.isDo());
assertFalse(node1.isCase());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isParamList());
assertFalse(node1.isNumber());
assertFalse(node1.isGetterDef());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isLabel());
assertFalse(node1.isStringKey());
assertFalse(node1.isArrayLit());
assertFalse(node1.isLabelName());
assertFalse(node1.isDebugger());
assertFalse(node1.isVoid());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isFunction());
assertFalse(node1.isTrue());
assertFalse(node1.isTry());
assertFalse(node1.isEmpty());
assertFalse(node1.isNE());
assertEquals(217142, node1.getSourcePosition());
assertFalse(node1.isIf());
assertFalse(node1.isDelProp());
assertTrue(node1.hasOneChild());
assertEquals(1, node1.getChildCount());
assertFalse(node1.isFor());
assertFalse(node1.isNull());
assertFalse(node1.isCatch());
assertFalse(node1.isName());
assertTrue(node1.hasChildren());
assertEquals((-1538), node1.getType());
assertFalse(node1.isCall());
assertEquals(53, node1.getLineno());
assertFalse(node1.isWhile());
assertFalse(node1.isIn());
assertFalse(node1.isString());
assertFalse(node1.isInc());
assertFalse(node1.isSetterDef());
assertFalse(node1.isThrow());
assertFalse(node1.isCast());
assertFalse(node1.isContinue());
assertFalse(node1.isAnd());
assertFalse(node1.isFalse());
assertNotNull(node1);

node1.removeChild(node0);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(52, Node.LENGTH);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(2, Node.POST_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(53, Node.INPUT_ID);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(52, Node.LENGTH);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(37, Node.OPT_ARG_NAME);
assertFalse(node0.equals((Object)node1));
assertFalse(node1.equals((Object)node0));
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isBlock());
assertFalse(node0.isDo());
assertFalse(node0.isWhile());
assertFalse(node0.isSetterDef());
assertFalse(node0.isAdd());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isLabel());
assertEquals(0, node0.getChildCount());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isParamList());
assertFalse(node0.isLabelName());
assertFalse(node0.isStringKey());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertFalse(node0.isVoid());
assertFalse(node0.isDebugger());
assertFalse(node0.isTrue());
assertFalse(node0.isNot());
assertFalse(node0.isEmpty());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isObjectLit());
assertFalse(node0.isOr());
assertTrue(node0.isNumber());
assertFalse(node0.isDec());
assertFalse(node0.isComma());
assertFalse(node0.hasChildren());
assertFalse(node0.isReturn());
assertFalse(node0.isNull());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertFalse(node0.isBreak());
assertFalse(node0.isGetElem());
assertFalse(node0.isCall());
assertFalse(node0.isExprResult());
assertFalse(node0.isSwitch());
assertFalse(node0.isThrow());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isHook());
assertFalse(node0.isCase());
assertFalse(node0.isString());
assertFalse(node0.isGetProp());
assertFalse(node0.isInc());
assertFalse(node0.isAnd());
assertFalse(node0.isFalse());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTry());
assertFalse(node0.isFunction());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isScript());
assertFalse(node0.hasOneChild());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIn());
assertFalse(node0.isNE());
assertFalse(node0.isThis());
assertFalse(node0.isWith());
assertEquals(39, node0.getType());
assertFalse(node0.isIf());
assertFalse(node0.isRegExp());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isCatch());
assertFalse(node0.isInstanceOf());
assertFalse(node1.isNot());
assertFalse(node1.hasOneChild());
assertEquals(54, node1.getCharno());
assertFalse(node1.isObjectLit());
assertFalse(node1.isGetProp());
assertFalse(node1.isScript());
assertFalse(node1.isThis());
assertFalse(node1.isComma());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isAssign());
assertFalse(node1.isOr());
assertFalse(node1.hasChildren());
assertFalse(node1.isReturn());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isWith());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isBreak());
assertFalse(node1.isGetElem());
assertFalse(node1.isExprResult());
assertFalse(node1.isSwitch());
assertFalse(node1.isHook());
assertFalse(node1.isBlock());
assertFalse(node1.isVar());
assertFalse(node1.isDo());
assertFalse(node1.isCase());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isParamList());
assertFalse(node1.isNumber());
assertFalse(node1.isGetterDef());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isLabel());
assertFalse(node1.isStringKey());
assertFalse(node1.isArrayLit());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isLabelName());
assertFalse(node1.isDebugger());
assertFalse(node1.isVoid());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isFunction());
assertFalse(node1.isTrue());
assertFalse(node1.isTry());
assertFalse(node1.isEmpty());
assertFalse(node1.isNE());
assertEquals(217142, node1.getSourcePosition());
assertFalse(node1.isIf());
assertFalse(node1.isDelProp());
assertFalse(node1.isFor());
assertFalse(node1.isNull());
assertFalse(node1.isCatch());
assertFalse(node1.isName());
assertEquals((-1538), node1.getType());
assertFalse(node1.isCall());
assertEquals(53, node1.getLineno());
assertFalse(node1.isWhile());
assertFalse(node1.isIn());
assertFalse(node1.isString());
assertFalse(node1.isInc());
assertFalse(node1.isSetterDef());
assertFalse(node1.isThrow());
assertFalse(node1.isCast());
assertFalse(node1.isContinue());
assertFalse(node1.isAnd());
assertFalse(node1.isFalse());

Node node2 = Node.newString(31, "com.google.javascript.rhino.Node$SiblingNodeIterable", (-4023), 1);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(1, Node.DECR_FLAG);
assertEquals(52, Node.LENGTH);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node1));
assertFalse(node2.isTypeOf());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isNumber());
assertFalse(node2.isLabelName());
assertEquals((-1), node2.getLineno());
assertFalse(node2.isGetElem());
assertFalse(node2.isOr());
assertEquals((-1), node2.getSourcePosition());
assertTrue(node2.isDelProp());
assertFalse(node2.isDo());
assertFalse(node2.isAdd());
assertFalse(node2.isNew());
assertFalse(node2.isContinue());
assertFalse(node2.isCast());
assertFalse(node2.isLabel());
assertFalse(node2.isVar());
assertFalse(node2.isComma());
assertFalse(node2.isBreak());
assertFalse(node2.isGetProp());
assertFalse(node2.isAnd());
assertFalse(node2.isObjectLit());
assertFalse(node2.isName());
assertFalse(node2.isNot());
assertFalse(node2.isNull());
assertFalse(node2.isDebugger());
assertFalse(node2.isExprResult());
assertFalse(node2.isVoid());
assertFalse(node2.isTrue());
assertFalse(node2.isString());
assertFalse(node2.isCall());
assertFalse(node2.isWhile());
assertFalse(node2.isAssign());
assertFalse(node2.isDec());
assertFalse(node2.isReturn());
assertFalse(node2.hasChildren());
assertFalse(node2.isNE());
assertFalse(node2.isIf());
assertFalse(node2.isEmpty());
assertFalse(node2.isIn());
assertFalse(node2.isGetterDef());
assertFalse(node2.isFunction());
assertFalse(node2.isSwitch());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isArrayLit());
assertFalse(node2.isInc());
assertFalse(node2.isThrow());
assertFalse(node2.isFalse());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isParamList());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isSetterDef());
assertFalse(node2.isStringKey());
assertEquals((-1), node2.getCharno());
assertFalse(node2.isRegExp());
assertFalse(node2.isTry());
assertFalse(node2.hasOneChild());
assertFalse(node2.isScript());
assertFalse(node2.isCase());
assertEquals(31, node2.getType());
assertFalse(node2.isCatch());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isWith());
assertFalse(node2.isBlock());
assertFalse(node2.isFor());
assertFalse(node2.isThis());
assertFalse(node2.isHook());
assertNotNull(node2);

boolean boolean0 = node2.isTrue();
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(1, Node.DECR_FLAG);
assertEquals(52, Node.LENGTH);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node1));
assertFalse(boolean0);
assertFalse(node2.isTypeOf());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isNumber());
assertFalse(node2.isLabelName());
assertEquals((-1), node2.getLineno());
assertFalse(node2.isGetElem());
assertFalse(node2.isOr());
assertEquals((-1), node2.getSourcePosition());
assertTrue(node2.isDelProp());
assertFalse(node2.isDo());
assertFalse(node2.isAdd());
assertFalse(node2.isNew());
assertFalse(node2.isContinue());
assertFalse(node2.isCast());
assertFalse(node2.isLabel());
assertFalse(node2.isVar());
assertFalse(node2.isComma());
assertFalse(node2.isBreak());
assertFalse(node2.isGetProp());
assertFalse(node2.isAnd());
assertFalse(node2.isObjectLit());
assertFalse(node2.isName());
assertFalse(node2.isNot());
assertFalse(node2.isNull());
assertFalse(node2.isDebugger());
assertFalse(node2.isExprResult());
assertFalse(node2.isVoid());
assertFalse(node2.isTrue());
assertFalse(node2.isString());
assertFalse(node2.isCall());
assertFalse(node2.isWhile());
assertFalse(node2.isAssign());
assertFalse(node2.isDec());
assertFalse(node2.isReturn());
assertFalse(node2.hasChildren());
assertFalse(node2.isNE());
assertFalse(node2.isIf());
assertFalse(node2.isEmpty());
assertFalse(node2.isIn());
assertFalse(node2.isGetterDef());
assertFalse(node2.isFunction());
assertFalse(node2.isSwitch());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isArrayLit());
assertFalse(node2.isInc());
assertFalse(node2.isThrow());
assertFalse(node2.isFalse());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isParamList());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isSetterDef());
assertFalse(node2.isStringKey());
assertEquals((-1), node2.getCharno());
assertFalse(node2.isRegExp());
assertFalse(node2.isTry());
assertFalse(node2.hasOneChild());
assertFalse(node2.isScript());
assertFalse(node2.isCase());
assertEquals(31, node2.getType());
assertFalse(node2.isCatch());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isWith());
assertFalse(node2.isBlock());
assertFalse(node2.isFor());
assertFalse(node2.isThis());
assertFalse(node2.isHook());

JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
assertFalse(jSTypeRegistry0.shouldTolerateUndefinedValues());
assertNotNull(jSTypeRegistry0);

boolean boolean1 = node1.isVoid();
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(52, Node.LENGTH);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(2, Node.POST_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(53, Node.INPUT_ID);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(53, Node.INPUT_ID);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(50, Node.FREE_CALL);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(52, Node.LENGTH);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(37, Node.OPT_ARG_NAME);
assertFalse(node0.equals((Object)node1));
assertFalse(node0.equals((Object)node2));
assertFalse(node1.equals((Object)node2));
assertFalse(node1.equals((Object)node0));
assertTrue(boolean1 == boolean0);
assertFalse(boolean1);
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isBlock());
assertFalse(node0.isDo());
assertFalse(node0.isWhile());
assertFalse(node0.isSetterDef());
assertFalse(node0.isAdd());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isLabel());
assertEquals(0, node0.getChildCount());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isParamList());
assertFalse(node0.isLabelName());
assertFalse(node0.isStringKey());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertFalse(node0.isVoid());
assertFalse(node0.isDebugger());
assertFalse(node0.isTrue());
assertFalse(node0.isNot());
assertFalse(node0.isEmpty());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isObjectLit());
assertFalse(node0.isOr());
assertTrue(node0.isNumber());
assertFalse(node0.isDec());
assertFalse(node0.isComma());
assertFalse(node0.hasChildren());
assertFalse(node0.isReturn());
assertFalse(node0.isNull());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertFalse(node0.isBreak());
assertFalse(node0.isGetElem());
assertFalse(node0.isCall());
assertFalse(node0.isExprResult());
assertFalse(node0.isSwitch());
assertFalse(node0.isThrow());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isHook());
assertFalse(node0.isCase());
assertFalse(node0.isString());
assertFalse(node0.isGetProp());
assertFalse(node0.isInc());
assertFalse(node0.isAnd());
assertFalse(node0.isFalse());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTry());
assertFalse(node0.isFunction());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isScript());
assertFalse(node0.hasOneChild());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIn());
assertFalse(node0.isNE());
assertFalse(node0.isThis());
assertFalse(node0.isWith());
assertEquals(39, node0.getType());
assertFalse(node0.isIf());
assertFalse(node0.isRegExp());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isCatch());
assertFalse(node0.isInstanceOf());
assertFalse(node1.isNot());
assertFalse(node1.hasOneChild());
assertEquals(54, node1.getCharno());
assertFalse(node1.isObjectLit());
assertFalse(node1.isGetProp());
assertFalse(node1.isScript());
assertFalse(node1.isThis());
assertFalse(node1.isComma());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.isAssign());
assertFalse(node1.isOr());
assertFalse(node1.hasChildren());
assertFalse(node1.isReturn());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isWith());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isBreak());
assertFalse(node1.isGetElem());
assertFalse(node1.isExprResult());
assertFalse(node1.isSwitch());
assertFalse(node1.isHook());
assertFalse(node1.isBlock());
assertFalse(node1.isVar());
assertFalse(node1.isDo());
assertFalse(node1.isCase());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isParamList());
assertFalse(node1.isNumber());
assertFalse(node1.isGetterDef());
assertFalse(node1.isAssignAdd());
assertFalse(node1.isLabel());
assertFalse(node1.isStringKey());
assertFalse(node1.isArrayLit());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isLabelName());
assertFalse(node1.isDebugger());
assertFalse(node1.isVoid());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isFunction());
assertFalse(node1.isTrue());
assertFalse(node1.isTry());
assertFalse(node1.isEmpty());
assertFalse(node1.isNE());
assertEquals(217142, node1.getSourcePosition());
assertFalse(node1.isIf());
assertFalse(node1.isDelProp());
assertFalse(node1.isFor());
assertFalse(node1.isNull());
assertFalse(node1.isCatch());
assertFalse(node1.isName());
assertEquals((-1538), node1.getType());
assertFalse(node1.isCall());
assertEquals(53, node1.getLineno());
assertFalse(node1.isWhile());
assertFalse(node1.isIn());
assertFalse(node1.isString());
assertFalse(node1.isInc());
assertFalse(node1.isSetterDef());
assertFalse(node1.isThrow());
assertFalse(node1.isCast());
assertFalse(node1.isContinue());
assertFalse(node1.isAnd());
assertFalse(node1.isFalse());

Iterable<Node> iterable0 = node2.children();
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(1, Node.DECR_FLAG);
assertEquals(52, Node.LENGTH);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node1));
assertFalse(iterable0.contains(node0));
assertFalse(node2.isTypeOf());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isNumber());
assertFalse(node2.isLabelName());
assertEquals((-1), node2.getLineno());
assertFalse(node2.isGetElem());
assertFalse(node2.isOr());
assertEquals((-1), node2.getSourcePosition());
assertTrue(node2.isDelProp());
assertFalse(node2.isDo());
assertFalse(node2.isAdd());
assertFalse(node2.isNew());
assertFalse(node2.isContinue());
assertFalse(node2.isCast());
assertFalse(node2.isLabel());
assertFalse(node2.isVar());
assertFalse(node2.isComma());
assertFalse(node2.isBreak());
assertFalse(node2.isGetProp());
assertFalse(node2.isAnd());
assertFalse(node2.isObjectLit());
assertFalse(node2.isName());
assertFalse(node2.isNot());
assertFalse(node2.isNull());
assertFalse(node2.isDebugger());
assertFalse(node2.isExprResult());
assertFalse(node2.isVoid());
assertFalse(node2.isTrue());
assertFalse(node2.isString());
assertFalse(node2.isCall());
assertFalse(node2.isWhile());
assertFalse(node2.isAssign());
assertFalse(node2.isDec());
assertFalse(node2.isReturn());
assertFalse(node2.hasChildren());
assertFalse(node2.isNE());
assertFalse(node2.isIf());
assertFalse(node2.isEmpty());
assertFalse(node2.isIn());
assertFalse(node2.isGetterDef());
assertFalse(node2.isFunction());
assertFalse(node2.isSwitch());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isArrayLit());
assertFalse(node2.isInc());
assertFalse(node2.isThrow());
assertFalse(node2.isFalse());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isParamList());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isSetterDef());
assertFalse(node2.isStringKey());
assertEquals((-1), node2.getCharno());
assertFalse(node2.isRegExp());
assertFalse(node2.isTry());
assertFalse(node2.hasOneChild());
assertFalse(node2.isScript());
assertFalse(node2.isCase());
assertEquals(31, node2.getType());
assertFalse(node2.isCatch());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isWith());
assertFalse(node2.isBlock());
assertFalse(node2.isFor());
assertFalse(node2.isThis());
assertFalse(node2.isHook());
assertNotNull(iterable0);

Node node3 = node0.clonePropsFrom(node2);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(52, Node.LENGTH);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(2, Node.POST_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(53, Node.INPUT_ID);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(1, Node.DECR_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(1, Node.DECR_FLAG);
assertEquals(52, Node.LENGTH);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(48, Node.DIRECTIVES);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(50, Node.FREE_CALL);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(2, Node.POST_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(53, Node.INPUT_ID);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(1, Node.DECR_FLAG);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertFalse(node0.equals((Object)node1));
assertFalse(node0.equals((Object)node2));
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node1));
assertFalse(node3.equals((Object)node2));
assertFalse(node3.equals((Object)node1));
assertFalse(node0.isNew());
assertFalse(node0.isVar());
assertFalse(node0.isBlock());
assertFalse(node0.isDo());
assertFalse(node0.isWhile());
assertFalse(node0.isSetterDef());
assertFalse(node0.isAdd());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isLabel());
assertEquals(0, node0.getChildCount());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isParamList());
assertFalse(node0.isLabelName());
assertFalse(node0.isStringKey());
assertFalse(node0.isContinue());
assertFalse(node0.isCast());
assertFalse(node0.isVoid());
assertFalse(node0.isDebugger());
assertFalse(node0.isTrue());
assertFalse(node0.isNot());
assertFalse(node0.isEmpty());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isObjectLit());
assertFalse(node0.isOr());
assertTrue(node0.isNumber());
assertFalse(node0.isDec());
assertFalse(node0.isComma());
assertFalse(node0.hasChildren());
assertFalse(node0.isReturn());
assertFalse(node0.isNull());
assertFalse(node0.isAssign());
assertFalse(node0.isTypeOf());
assertFalse(node0.isDelProp());
assertFalse(node0.isName());
assertFalse(node0.isBreak());
assertFalse(node0.isGetElem());
assertFalse(node0.isCall());
assertFalse(node0.isExprResult());
assertFalse(node0.isSwitch());
assertFalse(node0.isThrow());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isHook());
assertFalse(node0.isCase());
assertFalse(node0.isString());
assertFalse(node0.isGetProp());
assertFalse(node0.isInc());
assertFalse(node0.isAnd());
assertFalse(node0.isFalse());
assertFalse(node0.isArrayLit());
assertFalse(node0.isTry());
assertFalse(node0.isFunction());
assertFalse(node0.isFor());
assertFalse(node0.isGetterDef());
assertFalse(node0.isScript());
assertFalse(node0.hasOneChild());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isIn());
assertFalse(node0.isNE());
assertFalse(node0.isThis());
assertFalse(node0.isWith());
assertEquals(39, node0.getType());
assertFalse(node0.isIf());
assertFalse(node0.isRegExp());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isCatch());
assertFalse(node0.isInstanceOf());
assertFalse(node2.isTypeOf());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isNumber());
assertFalse(node2.isLabelName());
assertEquals((-1), node2.getLineno());
assertFalse(node2.isGetElem());
assertFalse(node2.isOr());
assertEquals((-1), node2.getSourcePosition());
assertTrue(node2.isDelProp());
assertFalse(node2.isDo());
assertFalse(node2.isAdd());
assertFalse(node2.isNew());
assertFalse(node2.isContinue());
assertFalse(node2.isCast());
assertFalse(node2.isLabel());
assertFalse(node2.isVar());
assertFalse(node2.isComma());
assertFalse(node2.isBreak());
assertFalse(node2.isGetProp());
assertFalse(node2.isAnd());
assertFalse(node2.isObjectLit());
assertFalse(node2.isName());
assertFalse(node2.isNot());
assertFalse(node2.isNull());
assertFalse(node2.isDebugger());
assertFalse(node2.isExprResult());
assertFalse(node2.isVoid());
assertFalse(node2.isTrue());
assertFalse(node2.isString());
assertFalse(node2.isCall());
assertFalse(node2.isWhile());
assertFalse(node2.isAssign());
assertFalse(node2.isDec());
assertFalse(node2.isReturn());
assertFalse(node2.hasChildren());
assertFalse(node2.isNE());
assertFalse(node2.isIf());
assertFalse(node2.isEmpty());
assertFalse(node2.isIn());
assertFalse(node2.isGetterDef());
assertFalse(node2.isFunction());
assertFalse(node2.isSwitch());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isArrayLit());
assertFalse(node2.isInc());
assertFalse(node2.isThrow());
assertFalse(node2.isFalse());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isParamList());
assertFalse(node2.isInstanceOf());
assertFalse(node2.isSetterDef());
assertFalse(node2.isStringKey());
assertEquals((-1), node2.getCharno());
assertFalse(node2.isRegExp());
assertFalse(node2.isTry());
assertFalse(node2.hasOneChild());
assertFalse(node2.isScript());
assertFalse(node2.isCase());
assertEquals(31, node2.getType());
assertFalse(node2.isCatch());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isWith());
assertFalse(node2.isBlock());
assertFalse(node2.isFor());
assertFalse(node2.isThis());
assertFalse(node2.isHook());
assertFalse(node3.isInstanceOf());
assertFalse(node3.isGetProp());
assertFalse(node3.isBreak());
assertFalse(node3.isWith());
assertFalse(node3.isFalse());
assertFalse(node3.isThis());
assertFalse(node3.isComma());
assertFalse(node3.isThrow());
assertFalse(node3.isHook());
assertFalse(node3.isCast());
assertFalse(node3.isScript());
assertFalse(node3.hasOneChild());
assertFalse(node3.isString());
assertFalse(node3.isLabelName());
assertFalse(node3.isNot());
assertFalse(node3.isAnd());
assertFalse(node3.isSwitch());
assertFalse(node3.isObjectLit());
assertEquals((-1), node3.getSourcePosition());
assertEquals((-1), node3.getCharno());
assertEquals((-1), node3.getLineno());
assertFalse(node3.isIn());
assertFalse(node3.isCase());
assertFalse(node3.isFor());
assertFalse(node3.isContinue());
assertFalse(node3.hasMoreThanOneChild());
assertFalse(node3.isBlock());
assertEquals(39, node3.getType());
assertFalse(node3.isInc());
assertFalse(node3.isIf());
assertFalse(node3.isNE());
assertEquals(0, node3.getChildCount());
assertFalse(node3.isSetterDef());
assertFalse(node3.isCatch());
assertFalse(node3.isDefaultCase());
assertFalse(node3.isFunction());
assertFalse(node3.isRegExp());
assertFalse(node3.isVar());
assertFalse(node3.isTry());
assertFalse(node3.isArrayLit());
assertFalse(node3.isGetterDef());
assertFalse(node3.isStringKey());
assertFalse(node3.isParamList());
assertFalse(node3.isDebugger());
assertFalse(node3.isReturn());
assertTrue(node3.isNumber());
assertFalse(node3.isOr());
assertFalse(node3.isAssignAdd());
assertFalse(node3.isWhile());
assertFalse(node3.isAssign());
assertFalse(node3.isDo());
assertFalse(node3.isTypeOf());
assertFalse(node3.isDec());
assertFalse(node3.hasChildren());
assertFalse(node3.isLabel());
assertFalse(node3.isAdd());
assertFalse(node3.isCall());
assertFalse(node3.isExprResult());
assertFalse(node3.isVoid());
assertFalse(node3.isGetElem());
assertFalse(node3.isNew());
assertFalse(node3.isDelProp());
assertFalse(node3.isEmpty());
assertFalse(node3.isName());
assertFalse(node3.isTrue());
assertFalse(node3.isNull());
assertSame(node0, node3);
assertSame(node3, node0);
assertNotNull(node3);

node2.removeChild(node1);

[MASTER] 10:43:19.928 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:43:20.286 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:43:20.509 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:43:20.708 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:43:21.609 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:43:21.800 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:43:21.996 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'Node_ESTest' to results/Closure-110/com.google.javascript.rhino.Node/BBC-F0-50/tests/17
* Done!

* Computation finished
