* EvoSuite 1.1.1-SNAPSHOT
* Configuration: BBC-F0-50
* Going to generate test cases for class: com.google.javascript.rhino.Node
* Starting Client-0
* Connecting to master process on port 16802
* Analyzing classpath: 
  - subjects/buggy-versions/Closure-110/build/classes
  - subjects/buggy-versions/Closure-110/lib/args4j.jar
  - subjects/buggy-versions/Closure-110/lib/guava.jar
  - subjects/buggy-versions/Closure-110/lib/json.jar
  - subjects/buggy-versions/Closure-110/lib/jsr305.jar
  - subjects/buggy-versions/Closure-110/lib/protobuf-java.jar
  - subjects/buggy-versions/Closure-110/build/lib/rhino.jar
  - subjects/buggy-versions/Closure-110/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.rhino.Node
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 7813
* Using seed 1788076308
* Starting evolution
bbc usage percentage is: 50%
* Initial Number of Goals in DynaMOSA = 5977 / 7813
[MASTER] 10:00:05.956 [logback-2] ERROR TestCluster - Failed to check cache for java.util.LinkedHashSet<E> : Type points to itself
[MASTER] 10:00:07.757 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Iterator<E> : Type points to itself
[MASTER] 10:00:08.545 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was com.google.javascript.rhino.Node.lookupProperty(I)Lcom/google/javascript/rhino/Node$PropListItem;: I12 Branch 98 IF_ICMPEQ L764 - false
[MASTER] 10:00:08.552 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHOD] com.google.javascript.rhino.Node.getProp(I)Ljava/lang/Object;
[MASTER] 10:00:08.552 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was [METHODNOEX] com.google.javascript.rhino.Node.getProp(I)Ljava/lang/Object;
[MASTER] 10:00:08.605 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.google.javascript.rhino.Node.getProp(I)Ljava/lang/Object;: I9 Branch 104 IFNONNULL L814 - false in context: com.google.javascript.rhino.Node:getProp(I)Ljava/lang/Object;
[MASTER] 10:00:08.636 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Branch com.google.javascript.rhino.Node$FileLevelJsDocBuilder.<init>(Lcom/google/javascript/rhino/Node;)V: root-Branch in context: com.google.javascript.rhino.Node$FileLevelJsDocBuilder:<init>(Lcom/google/javascript/rhino/Node;)V
[MASTER] 10:00:11.055 [logback-1] WARN  CoverageArchive - A solution with a timeout/exception result has been added to the archive. The covered goal was Weak Mutation 2434: com.google.javascript.rhino.Node.lookupProperty(I)Lcom/google/javascript/rhino/Node$PropListItem;:764 - ReplaceComparisonOperator == -> >=
[MASTER] 10:00:42.829 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
Number of times BBC is called for com.google.javascript.rhino.Node.setDouble(D)V: I5 Branch 114 IF_ICMPNE L902 - true: 609
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 26 TABLESWITCH L114 Case 54 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1871: 1576
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1870: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.isVar()Z: I5 Branch 276 IF_ICMPNE L2435 - false: 11958
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1872: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.isVar()Z: I5 Branch 276 IF_ICMPNE L2435 - true: 118
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1867: 1576
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1866: 1576
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I12 Branch 280 IFEQ L174 - false: 28
Number of times BBC is called for com.google.javascript.rhino.Node.setDouble(D)V: I5 Branch 114 IF_ICMPNE L902 - false: 8452
Number of times BBC is called for com.google.javascript.rhino.Node.isGetterDef()Z: Line 2311: 1137
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I195 Branch 128 IFEQ L997 - true: 34
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 26 TABLESWITCH L114 Case 54 - true: 5977
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I127 Branch 126 IF_ICMPGE L980 - false: 497
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I44 Branch 171 IF_ICMPNE L1527 - false: 327
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - true: 369
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1861: 1576
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: Line 1860: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.isParamList()Z: I5 Branch 263 IF_ICMPNE L2383 - false: 114
Number of times BBC is called for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 210 IFNONNULL L1747 - true: 5256
Number of times BBC is called for com.google.javascript.rhino.Node.getLastSibling()Lcom/google/javascript/rhino/Node;: I8 Branch 64 IFNULL L589 - false: 3821
Number of times BBC is called for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - false: 7502
Number of times BBC is called for com.google.javascript.rhino.Node.getChildCount()I: I11 Branch 152 IFNULL L1408 - true: 207
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: Line 1365: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.getChildCount()I: I11 Branch 152 IFNULL L1408 - false: 286
Number of times BBC is called for com.google.javascript.rhino.Node.isExprResult()Z: I5 Branch 241 IF_ICMPNE L2295 - true: 290
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 19 TABLESWITCH L114 Case 47 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: Line 1958: 3820
Number of times BBC is called for com.google.javascript.rhino.Node.isThis()Z: I5 Branch 271 IF_ICMPNE L2415 - false: 12184
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I83 Branch 175 IF_ICMPNE L1534 - true: 149
Number of times BBC is called for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: Line 1959: 3820
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;II)V: Line 454: 14
Number of times BBC is called for com.google.javascript.rhino.Node.isGetterDef()Z: I5 Branch 245 IF_ICMPNE L2311 - false: 16235
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I49 Branch 73 IFNONNULL L627 - false: 1082
Number of times BBC is called for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - true: 2564
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;II)V: Line 456: 14
Number of times BBC is called for com.google.javascript.rhino.Node.isGetterDef()Z: I5 Branch 245 IF_ICMPNE L2311 - true: 1137
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;II)V: Line 455: 14
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I83 Branch 175 IF_ICMPNE L1534 - false: 586
Number of times BBC is called for com.google.javascript.rhino.Node.isCase()Z: Line 2251: 609
Number of times BBC is called for com.google.javascript.rhino.Node.isArrayLit()Z: Line 2227: 734
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I45 Branch 164 IFNULL L1483 - true: 269
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I16 Branch 90 IFNONNULL L717 - true: 250
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 89 IFNONNULL L715 - true: 1619
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 161 IFNE L1473 - false: 43
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 48 IFNONNULL L424 - true: 14292
Number of times BBC is called for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I3 Branch 101 IFNONNULL L798 - true: 54
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I21 Branch 82 IFNULL L670 - true: 93
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 19 TABLESWITCH L114 Case 47 - true: 6070
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I21 Branch 82 IFNULL L670 - false: 93
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I16 Branch 167 IF_ACMPEQ L1517 - false: 2067
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 161 IFNE L1473 - true: 143
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I45 Branch 164 IFNULL L1483 - false: 860
Number of times BBC is called for com.google.javascript.rhino.Node.isDebugger()Z: I5 Branch 235 IF_ICMPNE L2271 - true: 1426
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I182 Branch 184 IFNE L1558 - false: 26
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I12 Branch 154 IF_ACMPNE L1417 - true: 403
Number of times BBC is called for com.google.javascript.rhino.Node.mergeLineCharNo(II)I: I15 Branch 141 IFEQ L1197 - false: 34
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I9 Branch 151 IF_ACMPEQ L1403 - true: 1581
Number of times BBC is called for com.google.javascript.rhino.Node.getParent()Lcom/google/javascript/rhino/Node;: Line 1323: 290
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I12 Branch 154 IF_ACMPNE L1417 - false: 564
Number of times BBC is called for com.google.javascript.rhino.Node.isFalse()Z: I5 Branch 242 IF_ICMPNE L2299 - true: 2916
Number of times BBC is called for com.google.javascript.rhino.Node.isSetterDef()Z: I5 Branch 267 IF_ICMPNE L2399 - false: 18238
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I49 Branch 73 IFNONNULL L627 - true: 1176
Number of times BBC is called for com.google.javascript.rhino.Node.isAssign()Z: I5 Branch 225 IF_ICMPNE L2231 - false: 4711
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 38 IFNONNULL L400 - true: 12149
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I8 Branch 156 IFNE L1446 - true: 166
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - false: 369
Number of times BBC is called for com.google.javascript.rhino.Node.isSetterDef()Z: I5 Branch 267 IF_ICMPNE L2399 - true: 4186
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I5 Branch 93 IF_ACMPNE L739 - true: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isFalse()Z: I5 Branch 242 IF_ICMPNE L2299 - false: 3586
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - true: 252
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestors()Lcom/google/javascript/rhino/Node$AncestorIterable;: root-Branch: 497
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 12 TABLESWITCH L114 Case 40 - true: 6116
Number of times BBC is called for com.google.javascript.rhino.Node.isObjectLit()Z: Line 2375: 290
Number of times BBC is called for com.google.javascript.rhino.Node.isAssign()Z: Line 2231: 2564
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 12 TABLESWITCH L114 Case 40 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 195 LOOKUPSWITCH L1616 Case 33 - true: 10203
Number of times BBC is called for com.google.javascript.rhino.Node.isGetElem()Z: I5 Branch 246 IF_ICMPNE L2315 - false: 26473
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 195 LOOKUPSWITCH L1616 Case 33 - false: 2390
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I30 Branch 169 IFNE L1523 - false: 2233
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1356: 497
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I7 Branch 81 IF_ACMPNE L669 - false: 93
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: Line 307: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceFileForTesting(Ljava/lang/String;)V: root-Branch: 118
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: Line 1380: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I17 Branch 94 IFNONNULL L742 - false: 657
Number of times BBC is called for com.google.javascript.rhino.Node.isGetElem()Z: I5 Branch 246 IF_ICMPNE L2315 - true: 1888
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - true: 664
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 5 TABLESWITCH L114 Case 33 - true: 6843
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I17 Branch 63 IF_ACMPNE L577 - true: 1152
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1827: 43
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1826: 43
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I17 Branch 63 IF_ACMPNE L577 - false: 1535
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: Line 1473: 43
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: I12 Branch 201 IFNULL L1658 - true: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I66 Branch 160 IFNULL L1459 - false: 499
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: root-Branch: 497
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 5 TABLESWITCH L114 Case 33 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.isDec()Z: I5 Branch 236 IF_ICMPNE L2275 - false: 8165
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I29 Branch 95 IFNONNULL L744 - false: 12810
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1358: 497
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1357: 497
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: I12 Branch 201 IFNULL L1658 - false: 2446
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1337: 290
Number of times BBC is called for com.google.javascript.rhino.Node.isNew()Z: I5 Branch 257 IF_ICMPNE L2359 - true: 43
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1333: 290
Number of times BBC is called for com.google.javascript.rhino.Node.isAssignAdd()Z: I5 Branch 226 IF_ICMPNE L2235 - false: 10721
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: Line 1332: 290
Number of times BBC is called for com.google.javascript.rhino.Node.isIn()Z: Line 2331: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 642: 339
Number of times BBC is called for com.google.javascript.rhino.Node$AbstractPropListItem.getType()I: Line 281: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isQuotedString()Z: root-Branch: 2390
Number of times BBC is called for com.google.javascript.rhino.Node.isNE()Z: I5 Branch 256 IF_ICMPNE L2355 - true: 2564
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I35 Branch 282 IFNE L179 - false: 13209
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 646: 427
Number of times BBC is called for com.google.javascript.rhino.Node.isFromExterns()Z: I8 Branch 134 IFNONNULL L1128 - true: 1063
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 644: 339
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: Line 1278: 32489
Number of times BBC is called for com.google.javascript.rhino.Node.copyInformationFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 209 IFNONNULL L1743 - true: 6400
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 654: 21703
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 162 IFNONNULL L1480 - true: 7517
Number of times BBC is called for com.google.javascript.rhino.Node.isFromExterns()Z: I8 Branch 134 IFNONNULL L1128 - false: 43
Number of times BBC is called for com.google.javascript.rhino.Node.isNE()Z: I5 Branch 256 IF_ICMPNE L2355 - false: 32320
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I35 Branch 282 IFNE L179 - true: 24
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 653: 21703
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentToShallow(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isGetProp()Z: I5 Branch 247 IF_ICMPNE L2319 - false: 7169
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 193 LOOKUPSWITCH L1598 Default-Case - true: 1888
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - true: 77352
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.isRegExp()Z: Line 2387: 1283
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 162 IFNONNULL L1480 - false: 107
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: I4 Branch 289 IFNONNULL L317 - false: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 18 TABLESWITCH L114 Case 46 - true: 6062
Number of times BBC is called for com.google.javascript.rhino.Node.isCatch()Z: I5 Branch 232 IF_ICMPNE L2259 - true: 609
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 3 TABLESWITCH L114 Case 31 - true: 6523
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I44 Branch 52 IF_ICMPGE L482 - false: 27
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 193 LOOKUPSWITCH L1598 Default-Case - false: 2689
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I8 Branch 287 IFEQ L232 - false: 423
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 27 TABLESWITCH L114 Case 55 - true: 4815
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I8 Branch 287 IFEQ L232 - true: 118
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 18 TABLESWITCH L114 Case 46 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node$AbstractPropListItem.getNext()Lcom/google/javascript/rhino/Node$PropListItem;: Line 286: 118
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I9 Branch 151 IF_ACMPEQ L1403 - false: 2534
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 27 TABLESWITCH L114 Case 55 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.isDebugger()Z: I5 Branch 235 IF_ICMPNE L2271 - false: 28964
Number of times BBC is called for com.google.javascript.rhino.Node.isGetProp()Z: I5 Branch 247 IF_ICMPNE L2319 - true: 2390
Number of times BBC is called for com.google.javascript.rhino.Node.isHook()Z: I5 Branch 248 IF_ICMPNE L2323 - true: 387
Number of times BBC is called for com.google.javascript.rhino.Node.isNot()Z: Line 2363: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I39 Branch 132 IFNULL L1035 - false: 61
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestors()Lcom/google/javascript/rhino/Node$AncestorIterable;: Line 1344: 497
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I4 Branch 99 IFNONNULL L778 - true: 3274
Number of times BBC is called for com.google.javascript.rhino.Node.isHook()Z: I5 Branch 248 IF_ICMPNE L2323 - false: 5116
Number of times BBC is called for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I9 Branch 117 IF_ICMPNE L925 - false: 346
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: I5 Branch 299 IFNULL L1365 - true: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.isNull()Z: Line 2367: 43
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.hasNext()Z: I5 Branch 299 IFNULL L1365 - false: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I4 Branch 99 IFNONNULL L778 - false: 2916
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I44 Branch 52 IF_ICMPGE L482 - true: 61
Number of times BBC is called for com.google.javascript.rhino.Node.isCatch()Z: I5 Branch 232 IF_ICMPNE L2259 - false: 5787
Number of times BBC is called for com.google.javascript.rhino.Node.isVar()Z: Line 2435: 118
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: Line 232: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isInc()Z: Line 2335: 609
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(Lcom/google/javascript/rhino/Node$SideEffectFlags;)V: Line 2036: 10294
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 4 TABLESWITCH L114 Case 32 - true: 6310
Number of times BBC is called for com.google.javascript.rhino.Node.isDelProp()Z: Line 2283: 609
Number of times BBC is called for com.google.javascript.rhino.Node.siblings()Ljava/lang/Iterable;: Line 1258: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 4 TABLESWITCH L114 Case 32 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I170 Branch 182 IFEQ L1558 - true: 75
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 13 TABLESWITCH L114 Case 41 - true: 6097
Number of times BBC is called for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: root-Branch: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isVoid()Z: Line 2439: 2390
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: root-Branch: 43
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I94 Branch 54 IFNONNULL L488 - true: 27
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 13 TABLESWITCH L114 Case 41 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I162 Branch 127 LOOKUPSWITCH L987 Default-Case - true: 497
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I162 Branch 127 LOOKUPSWITCH L987 Default-Case - false: 5743
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - true: 46745
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I133 Branch 178 IF_ICMPNE L1547 - false: 1176
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateArguments()Z: Line 2161: 867
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeTypeAwareEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I35 Branch 163 IFNULL L1480 - false: 269
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.iterator()Ljava/util/Iterator;: I4 Branch 290 IFNE L1278 - false: 32489
Number of times BBC is called for com.google.javascript.rhino.Node.isNew()Z: I5 Branch 257 IF_ICMPNE L2359 - false: 1329
Number of times BBC is called for com.google.javascript.rhino.Node.isGetElem()Z: Line 2315: 1888
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: Line 2211: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I4 Branch 150 IFNULL L1403 - false: 1695
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 157 IFNONNULL L1453 - true: 8839
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentToTyped(Lcom/google/javascript/rhino/Node;)Z: Line 1505: 734
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: Line 1370: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: I4 Branch 150 IFNULL L1403 - true: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isInstanceOf()Z: Line 2339: 734
Number of times BBC is called for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I13 Branch 102 IF_ICMPNE L800 - false: 54
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 17 TABLESWITCH L114 Case 45 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I33 Branch 157 IFNONNULL L1453 - false: 170
Number of times BBC is called for com.google.javascript.rhino.Node.isAnd()Z: Line 2223: 2742
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1271: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I7 Branch 153 IFNULL L1416 - false: 1404
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1270: 1576
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1273: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - true: 609
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1272: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - true: 11432
Number of times BBC is called for com.google.javascript.rhino.Node.isStringKey()Z: Line 2407: 734
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 17 TABLESWITCH L114 Case 45 - true: 6054
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: Line 1274: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 78 IF_ACMPNE L646 - false: 427
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToBack(Lcom/google/javascript/rhino/Node;)V: root-Branch: 3271
Number of times BBC is called for com.google.javascript.rhino.Node.isDelProp()Z: I5 Branch 238 IF_ICMPNE L2283 - false: 3273
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: I7 Branch 153 IFNULL L1416 - true: 1001
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - false: 12069
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I41 Branch 205 IF_ACMPNE L1689 - true: 12685
Number of times BBC is called for com.google.javascript.rhino.Node.isEmpty()Z: Line 2291: 5349
Number of times BBC is called for com.google.javascript.rhino.Node.isBlock()Z: Line 2239: 43
Number of times BBC is called for com.google.javascript.rhino.Node.isArrayLit()Z: I5 Branch 224 IF_ICMPNE L2227 - true: 734
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I7 Branch 75 IF_ACMPNE L640 - false: 347
Number of times BBC is called for com.google.javascript.rhino.Node.isArrayLit()Z: I5 Branch 224 IF_ICMPNE L2227 - false: 4721
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 76 IFNONNULL L642 - true: 1304
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateArguments()Z: I7 Branch 219 IFNE L2161 - true: 9277
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - true: 32489
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I31 Branch 77 IFNONNULL L644 - true: 339
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 76 IFNONNULL L642 - false: 339
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateArguments()Z: I7 Branch 219 IFNE L2161 - false: 867
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: I4 Branch 291 IFNULL L1294 - false: 32489
Number of times BBC is called for com.google.javascript.rhino.Node.isBreak()Z: Line 2243: 2055
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I31 Branch 77 IFNONNULL L644 - false: 418
Number of times BBC is called for com.google.javascript.rhino.Node.isOnlyModifiesThisCall()Z: root-Branch: 3633
Number of times BBC is called for com.google.javascript.rhino.Node.setQuotedString()V: root-Branch: 387
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - false: 46745
Number of times BBC is called for com.google.javascript.rhino.Node.isContinue()Z: I5 Branch 234 IF_ICMPNE L2267 - true: 1001
Number of times BBC is called for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - true: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 197 LOOKUPSWITCH L1616 Default-Case - true: 2390
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: Line 349: 77352
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: I4 Branch 292 IFNONNULL L1299 - true: 32489
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2031: 5079
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.iterator()Ljava/util/Iterator;: root-Branch: 497
Number of times BBC is called for com.google.javascript.rhino.Node.isAdd()Z: I5 Branch 222 IF_ICMPNE L2219 - false: 20815
Number of times BBC is called for com.google.javascript.rhino.Node.getSourcePosition()I: root-Branch: 734
Number of times BBC is called for com.google.javascript.rhino.Node.isFor()Z: I5 Branch 243 IF_ICMPNE L2303 - false: 14370
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceEncodedPosition(I)V: Line 1177: 1001
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceEncodedPosition(I)V: Line 1176: 1001
Number of times BBC is called for com.google.javascript.rhino.Node.isInc()Z: I5 Branch 251 IF_ICMPNE L2335 - true: 609
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentToTyped(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 734
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I42 Branch 67 IFNONNULL L601 - false: 224
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: Line 2032: 5079
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 80 IFNULL L669 - true: 275
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I6 Branch 165 IF_ICMPNE L1517 - false: 24
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I42 Branch 67 IFNONNULL L601 - true: 647
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 781: 2916
Number of times BBC is called for com.google.javascript.rhino.Node.isInc()Z: I5 Branch 251 IF_ICMPNE L2335 - false: 3274
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 778: 2916
Number of times BBC is called for com.google.javascript.rhino.Node.isWith()Z: I5 Branch 279 IF_ICMPNE L2447 - true: 497
Number of times BBC is called for com.google.javascript.rhino.Node.clonePropsFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 780: 2916
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 14 TABLESWITCH L114 Case 42 - true: 6106
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - false: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.setDirectives(Ljava/util/Set;)V: root-Branch: 3820
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I113 Branch 125 IFEQ L978 - true: 75
Number of times BBC is called for com.google.javascript.rhino.Node.isSwitch()Z: Line 2411: 207
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 47 IFNONNULL L423 - true: 48
Number of times BBC is called for com.google.javascript.rhino.Node.isTypeOf()Z: I5 Branch 275 IF_ICMPNE L2431 - true: 6721
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.getIntValue()I: root-Branch: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I6 Branch 71 IFNULL L620 - false: 734
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.next()Lcom/google/javascript/rhino/Node;: I4 Branch 300 IFNE L1370 - true: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I85 Branch 50 IFNONNULL L426 - true: 14180
Number of times BBC is called for com.google.javascript.rhino.Node.getJSDocInfo()Lcom/google/javascript/rhino/JSDocInfo;: Line 1881: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isThrow()Z: Line 2419: 1001
Number of times BBC is called for com.google.javascript.rhino.Node.hasChild(Lcom/google/javascript/rhino/Node;)Z: Line 1416: 1001
Number of times BBC is called for com.google.javascript.rhino.Node.isWith()Z: I5 Branch 279 IF_ICMPNE L2447 - false: 19950
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 197 LOOKUPSWITCH L1616 Default-Case - false: 8571
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 252: 3271
Number of times BBC is called for com.google.javascript.rhino.Node.isTypeOf()Z: I5 Branch 275 IF_ICMPNE L2431 - false: 40332
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: Line 253: 3271
Number of times BBC is called for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I13 Branch 102 IF_ICMPNE L800 - true: 54
Number of times BBC is called for com.google.javascript.rhino.Node.hasOneChild()Z: I9 Branch 149 IF_ACMPNE L1393 - true: 1988
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 14 TABLESWITCH L114 Case 42 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I6 Branch 71 IFNULL L620 - true: 1082
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: Line 1311: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: I5 Branch 115 IF_ICMPNE L912 - true: 43
Number of times BBC is called for com.google.javascript.rhino.Node$AbstractPropListItem.getNext()Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 118
Number of times BBC is called for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - true: 2987
Number of times BBC is called for com.google.javascript.rhino.Node.isString()Z: I5 Branch 268 IF_ICMPNE L2403 - true: 387
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L114 Case 35 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 16 TABLESWITCH L114 Case 44 - true: 6012
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1832: 43
Number of times BBC is called for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: I4 Branch 144 IFNONNULL L1241 - false: 2742
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L114 Case 35 - true: 6179
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 25 TABLESWITCH L114 Case 53 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.isDefaultCase()Z: Line 2279: 609
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 84 IFNULL L676 - true: 375
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 84 IFNULL L676 - false: 83
Number of times BBC is called for com.google.javascript.rhino.Node.isOnlyModifiesArgumentsCall()Z: Line 2135: 290
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 16 TABLESWITCH L114 Case 44 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.isString()Z: I5 Branch 268 IF_ICMPNE L2403 - false: 1293
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 25 TABLESWITCH L114 Case 53 - true: 6015
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: I4 Branch 216 IFNONNULL L1974 - false: 118
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 670: 83
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I27 Branch 207 IFNULL L1724 - false: 197
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: I4 Branch 216 IFNONNULL L1974 - true: 10067
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I43 Branch 120 IFNULL L961 - false: 429
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.remove()V: root-Branch: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;)Z: root-Branch: 118
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I27 Branch 207 IFNULL L1724 - true: 101
Number of times BBC is called for com.google.javascript.rhino.Node.isSetterDef()Z: Line 2399: 4186
Number of times BBC is called for com.google.javascript.rhino.Node.lookupProperty(I)Lcom/google/javascript/rhino/Node$PropListItem;: I8 Branch 97 IFNULL L764 - false: 41
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - false: 4803
Number of times BBC is called for com.google.javascript.rhino.Node.isContinue()Z: I5 Branch 234 IF_ICMPNE L2267 - false: 8683
Number of times BBC is called for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: I5 Branch 115 IF_ICMPNE L912 - false: 4831
Number of times BBC is called for com.google.javascript.rhino.Node.isScript()Z: I5 Branch 266 IF_ICMPNE L2395 - false: 24900
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I37 Branch 188 IFNONNULL L1582 - true: 4803
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: Line 2166: 118
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.hashCode()I: root-Branch: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - false: 4464
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 692: 83
Number of times BBC is called for com.google.javascript.rhino.Node.isScript()Z: I5 Branch 266 IF_ICMPNE L2395 - true: 9561
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable.iterator()Ljava/util/Iterator;: Line 1362: 497
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I18 Branch 51 IFEQ L478 - false: 22
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I74 Branch 49 IFNONNULL L425 - true: 134
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 196 LOOKUPSWITCH L1616 Case 38 - true: 7593
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I19 Branch 214 IFNONNULL L1813 - true: 14209
Number of times BBC is called for com.google.javascript.rhino.Node.isLabel()Z: Line 2343: 3271
Number of times BBC is called for com.google.javascript.rhino.Node.isString()Z: Line 2403: 387
Number of times BBC is called for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - false: 77
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I142 Branch 179 IF_ICMPEQ L1548 - true: 1176
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 675: 83
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceFileForTesting(Ljava/lang/String;)V: Line 1099: 118
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I12 Branch 62 IFNULL L576 - false: 1264
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 676: 83
Number of times BBC is called for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I20 Branch 59 IF_ACMPEQ L555 - true: 2846
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 601: 224
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 604: 224
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: Line 344: 49743
Number of times BBC is called for com.google.javascript.rhino.Node.isName()Z: I5 Branch 255 IF_ICMPNE L2351 - false: 20819
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: I12 Branch 62 IFNULL L576 - true: 118
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceFileForTesting(Ljava/lang/String;)V: Line 1100: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isName()Z: I5 Branch 255 IF_ICMPNE L2351 - true: 43
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 24 TABLESWITCH L114 Case 52 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: root-Branch: 290
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 24 TABLESWITCH L114 Case 52 - true: 3801
Number of times BBC is called for com.google.javascript.rhino.Node.isBlock()Z: I5 Branch 227 IF_ICMPNE L2239 - true: 43
Number of times BBC is called for com.google.javascript.rhino.Node.isOr()Z: Line 2379: 3820
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 729: 4184
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.getString()Ljava/lang/String;: root-Branch: 118
Number of times BBC is called for com.google.javascript.rhino.Node.areBitFlagsSet(II)Z: I6 Branch 221 IF_ICMPNE L2174 - false: 8184
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 598: 224
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I4 Branch 196 LOOKUPSWITCH L1616 Case 38 - false: 2390
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 15 TABLESWITCH L114 Case 43 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 731: 1637
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 597: 224
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 600: 224
Number of times BBC is called for com.google.javascript.rhino.Node.isWith()Z: Line 2447: 497
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: Line 599: 224
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 734: 1637
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: root-Branch: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 735: 1637
Number of times BBC is called for com.google.javascript.rhino.Node.isReturn()Z: I5 Branch 265 IF_ICMPNE L2391 - false: 10953
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 736: 1637
Number of times BBC is called for com.google.javascript.rhino.Node.isBlock()Z: I5 Branch 227 IF_ICMPNE L2239 - false: 2333
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L114 Case 34 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 15 TABLESWITCH L114 Case 43 - true: 5783
Number of times BBC is called for com.google.javascript.rhino.Node.isNull()Z: I5 Branch 259 IF_ICMPNE L2367 - true: 43
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I32 Branch 119 IF_ICMPNE L956 - false: 252
Number of times BBC is called for com.google.javascript.rhino.Node.isReturn()Z: I5 Branch 265 IF_ICMPNE L2391 - true: 2742
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L114 Case 34 - true: 6385
Number of times BBC is called for com.google.javascript.rhino.Node.isNull()Z: I5 Branch 259 IF_ICMPNE L2367 - false: 7212
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 37 IFNONNULL L399 - true: 5
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I12 Branch 118 IFEQ L953 - false: 34
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: Line 1732: 43
Number of times BBC is called for com.google.javascript.rhino.Node.isLocalResultCall()Z: Line 2156: 1283
Number of times BBC is called for com.google.javascript.rhino.Node.getJSDocInfo()Lcom/google/javascript/rhino/JSDocInfo;: root-Branch: 118
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I86 Branch 86 IFNULL L685 - false: 19282
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: Line 2202: 387
Number of times BBC is called for com.google.javascript.rhino.Node.isLabel()Z: I5 Branch 253 IF_ICMPNE L2343 - false: 29259
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - true: 11011
Number of times BBC is called for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - false: 5529
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: Line 1720: 43
Number of times BBC is called for com.google.javascript.rhino.Node.isWhile()Z: I5 Branch 278 IF_ICMPNE L2443 - true: 1426
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: Line 1721: 43
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I86 Branch 86 IFNULL L685 - true: 292
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: Line 1616: 2390
Number of times BBC is called for com.google.javascript.rhino.Node.hasMoreThanOneChild()Z: Line 1403: 118
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L114 Case 36 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.isLabel()Z: I5 Branch 253 IF_ICMPNE L2343 - true: 3271
Number of times BBC is called for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: I4 Branch 199 IFNULL L1634 - false: 135
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.getObjectValue()Ljava/lang/Object;: root-Branch: 118
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.getObjectValue()Ljava/lang/Object;: Line 312: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isQuotedString()Z: Line 2181: 2390
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I39 Branch 159 IFNONNULL L1455 - true: 135
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L114 Case 36 - true: 4803
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I62 Branch 189 IF_ICMPNE L1586 - false: 4559
Number of times BBC is called for com.google.javascript.rhino.Node.putBooleanProp(IZ)V: I5 Branch 109 IFEQ L852 - true: 15
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.next()Lcom/google/javascript/rhino/Node;: Line 1299: 32489
Number of times BBC is called for com.google.javascript.rhino.Node.isFunction()Z: I5 Branch 244 IF_ICMPNE L2307 - true: 387
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setString(Ljava/lang/String;)V: I4 Branch 286 IF_ACMPNE L223 - false: 76
Number of times BBC is called for com.google.javascript.rhino.Node.isObjectLit()Z: I5 Branch 261 IF_ICMPNE L2375 - true: 290
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I25 Branch 297 IFNONNULL L1867 - true: 2397
Number of times BBC is called for com.google.javascript.rhino.Node.isObjectLit()Z: I5 Branch 261 IF_ICMPNE L2375 - false: 17769
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I24 Branch 168 IFEQ L1523 - true: 7
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 565: 118
Number of times BBC is called for com.google.javascript.rhino.Node.getDouble()D: I5 Branch 113 IF_ICMPNE L889 - false: 312
Number of times BBC is called for com.google.javascript.rhino.Node.isTry()Z: I5 Branch 274 IF_ICMPNE L2427 - false: 11640
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 570: 665
Number of times BBC is called for com.google.javascript.rhino.Node.getSortedPropTypes()[I: I33 Branch 112 IFNULL L878 - false: 715
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: Line 568: 153
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 1 TABLESWITCH L114 Case 29 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: Line 1579: 296
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: Line 1577: 4371
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToBack(Lcom/google/javascript/rhino/Node;)V: Line 633: 3271
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToBack(Lcom/google/javascript/rhino/Node;)V: Line 634: 3497
Number of times BBC is called for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: Line 1944: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.isCast()Z: Line 2255: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isNE()Z: Line 2355: 2564
Number of times BBC is called for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - false: 5974
Number of times BBC is called for com.google.javascript.rhino.Node.isName()Z: Line 2351: 43
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I73 Branch 85 IF_ACMPNE L680 - false: 35
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 30 TABLESWITCH L114 Default-Case - true: 4026
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I63 Branch 42 IFNONNULL L404 - true: 12006
Number of times BBC is called for com.google.javascript.rhino.Node.isOr()Z: I5 Branch 262 IF_ICMPNE L2379 - true: 3820
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I43 Branch 283 IFNE L179 - true: 13994
Number of times BBC is called for com.google.javascript.rhino.Node.getExistingIntProp(I)I: I9 Branch 107 IFNONNULL L838 - false: 497
Number of times BBC is called for com.google.javascript.rhino.Node.isLabelName()Z: I5 Branch 254 IF_ICMPNE L2347 - false: 29288
Number of times BBC is called for com.google.javascript.rhino.Node.isRegExp()Z: I5 Branch 264 IF_ICMPNE L2387 - true: 1283
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I5 Branch 217 IF_ICMPEQ L2026 - true: 11329
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: I9 Branch 155 IFNULL L1430 - true: 1125
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I38 Branch 208 IFNONNULL L1727 - true: 96
Number of times BBC is called for com.google.javascript.rhino.Node.isGetProp()Z: Line 2319: 2390
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I52 Branch 41 IFNONNULL L403 - true: 4
Number of times BBC is called for com.google.javascript.rhino.Node.getExistingIntProp(I)I: I9 Branch 107 IFNONNULL L838 - true: 4986
Number of times BBC is called for com.google.javascript.rhino.Node.isLabelName()Z: I5 Branch 254 IF_ICMPNE L2347 - true: 1137
Number of times BBC is called for com.google.javascript.rhino.Node.isFunction()Z: I5 Branch 244 IF_ICMPNE L2307 - false: 2809
Number of times BBC is called for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 211 IFNULL L1764 - true: 2916
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.<init>(Lcom/google/javascript/rhino/Node$AncestorIterable;)V: root-Branch: 497
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I150 Branch 180 IFEQ L1553 - false: 7
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.toString()Ljava/lang/String;: Line 317: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.addChildBefore(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I3 Branch 74 IFNULL L640 - true: 4073
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1684: 8
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.setQuotedString()V: root-Branch: 3271
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I19 Branch 44 IFNONNULL L420 - true: 14437
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I15 Branch 288 IFLE L232 - false: 312
Number of times BBC is called for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 211 IFNULL L1764 - false: 4183
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - false: 4727
Number of times BBC is called for com.google.javascript.rhino.Node.isRegExp()Z: I5 Branch 264 IF_ICMPNE L2387 - false: 1790
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I15 Branch 288 IFLE L232 - true: 981
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I100 Branch 176 IF_ICMPEQ L1537 - true: 437
Number of times BBC is called for com.google.javascript.rhino.Node.isExprResult()Z: Line 2295: 290
Number of times BBC is called for com.google.javascript.rhino.Node.isIn()Z: I5 Branch 250 IF_ICMPNE L2331 - false: 6559
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I43 Branch 283 IFNE L179 - false: 13185
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 30 TABLESWITCH L114 Default-Case - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.isWhile()Z: Line 2443: 1426
Number of times BBC is called for com.google.javascript.rhino.Node.isIn()Z: I5 Branch 250 IF_ICMPNE L2331 - true: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1694: 12069
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 23 TABLESWITCH L114 Case 51 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I4 Branch 293 IFEQ L2202 - true: 387
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 190 LOOKUPSWITCH L1598 Case 33 - false: 1888
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1692: 12069
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1693: 12069
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 190 LOOKUPSWITCH L1598 Case 33 - true: 2527
Number of times BBC is called for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: Line 1943: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 23 TABLESWITCH L114 Case 51 - true: 3668
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1687: 12069
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I4 Branch 293 IFEQ L2202 - false: 25026
Number of times BBC is called for com.google.javascript.rhino.Node.siblings()Ljava/lang/Iterable;: root-Branch: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1688: 12069
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1689: 12069
Number of times BBC is called for com.google.javascript.rhino.Node.isDo()Z: Line 2287: 387
Number of times BBC is called for com.google.javascript.rhino.Node.getSortedPropTypes()[I: I11 Branch 111 IFNULL L873 - false: 709
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I26 Branch 83 IFNONNULL L671 - true: 3
Number of times BBC is called for com.google.javascript.rhino.Node.isTypeOf()Z: Line 2431: 6721
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I11 Branch 166 IF_ICMPNE L1517 - true: 32
Number of times BBC is called for com.google.javascript.rhino.Node.isContinue()Z: Line 2267: 1001
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1019: 9198
Number of times BBC is called for com.google.javascript.rhino.Node$AbstractPropListItem.getType()I: root-Branch: 118
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeImpl()Ljava/lang/String;: Line 1018: 9198
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I73 Branch 173 IF_ICMPEQ L1533 - true: 149
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.<init>(Lcom/google/javascript/rhino/Node;)V: root-Branch: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.isAdd()Z: Line 2219: 118
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoIfMissingFrom(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 213 IFNONNULL L1809 - true: 14457
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I11 Branch 166 IF_ICMPNE L1517 - false: 28
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - true: 8
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I17 Branch 204 IFNULL L1684 - false: 11670
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 354: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.detachChildren()V: I7 Branch 202 IFNULL L1671 - false: 613
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: Line 114: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.setSideEffectFlags(I)V: I9 Branch 218 IF_ICMPNE L2026 - false: 4446
Number of times BBC is called for com.google.javascript.rhino.Node.lookupProperty(I)Lcom/google/javascript/rhino/Node$PropListItem;: I12 Branch 98 IF_ICMPEQ L764 - false: 2
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L114 Case 37 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.getPropListHeadForTesting()Lcom/google/javascript/rhino/Node$PropListItem;: Line 1319: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - true: 327
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: I9 Branch 155 IFNULL L1430 - false: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isAnd()Z: I5 Branch 223 IF_ICMPNE L2223 - true: 2742
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: I8 Branch 61 IFLE L566 - true: 653
Number of times BBC is called for com.google.javascript.rhino.Node.getChildAtIndex(I)Lcom/google/javascript/rhino/Node;: I8 Branch 61 IFLE L566 - false: 118
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L114 Case 37 - true: 4083
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I61 Branch 172 IF_ICMPEQ L1530 - false: 3865
Number of times BBC is called for com.google.javascript.rhino.Node.isAnd()Z: I5 Branch 223 IF_ICMPNE L2223 - false: 10771
Number of times BBC is called for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: Line 1986: 290
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: Line 1103: 118
Number of times BBC is called for com.google.javascript.rhino.Node.setWasEmptyNode(Z)V: Line 1985: 290
Number of times BBC is called for com.google.javascript.rhino.Node.isTrue()Z: Line 2423: 609
Number of times BBC is called for com.google.javascript.rhino.Node.lookupProperty(I)Lcom/google/javascript/rhino/Node$PropListItem;: I12 Branch 98 IF_ICMPEQ L764 - true: 4
Number of times BBC is called for com.google.javascript.rhino.Node.isNumber()Z: I5 Branch 260 IF_ICMPNE L2371 - true: 2564
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: Line 1104: 118
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: root-Branch: 11687
Number of times BBC is called for com.google.javascript.rhino.Node.setDouble(D)V: Line 902: 609
Number of times BBC is called for com.google.javascript.rhino.Node.isNumber()Z: I5 Branch 260 IF_ICMPNE L2371 - false: 2946
Number of times BBC is called for com.google.javascript.rhino.Node.setSourceEncodedPosition(I)V: root-Branch: 1001
Number of times BBC is called for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - true: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.hasOneChild()Z: I4 Branch 148 IFNULL L1393 - true: 289
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I29 Branch 281 IFNE L177 - true: 32
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - false: 1970
Number of times BBC is called for com.google.javascript.rhino.Node.hasOneChild()Z: I4 Branch 148 IFNULL L1393 - false: 207
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I29 Branch 281 IFNE L177 - false: 56
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToBack(Lcom/google/javascript/rhino/Node;)V: I15 Branch 69 IFNONNULL L608 - true: 15676
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I15 Branch 186 IFLE L1579 - true: 1917
Number of times BBC is called for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1635: 135
Number of times BBC is called for com.google.javascript.rhino.Node.isCase()Z: I5 Branch 230 IF_ICMPNE L2251 - false: 5450
Number of times BBC is called for com.google.javascript.rhino.Node.detachFromParent()Lcom/google/javascript/rhino/Node;: Line 1636: 135
Number of times BBC is called for com.google.javascript.rhino.Node.isCase()Z: I5 Branch 230 IF_ICMPNE L2251 - true: 609
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildAfter(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I5 Branch 203 IF_ACMPNE L1682 - false: 8
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I20 Branch 147 IFLE L1334 - true: 1709
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: Line 1598: 1888
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I25 Branch 297 IFNONNULL L1867 - false: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: I8 Branch 133 IFNONNULL L1104 - false: 118
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I35 Branch 158 IFNULL L1453 - false: 135
Number of times BBC is called for com.google.javascript.rhino.Node.removeFirstChild()Lcom/google/javascript/rhino/Node;: I8 Branch 200 IFNULL L1647 - true: 230
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 46 IFNONNULL L422 - true: 14344
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I163 Branch 181 IFNULL L1556 - true: 7
Number of times BBC is called for com.google.javascript.rhino.Node.isNot()Z: I5 Branch 258 IF_ICMPNE L2363 - false: 18296
Number of times BBC is called for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I4 Branch 79 IFNONNULL L660 - true: 2295
Number of times BBC is called for com.google.javascript.rhino.Node.getSourcePosition()I: Line 1160: 734
Number of times BBC is called for com.google.javascript.rhino.Node.isNumber()Z: Line 2371: 2564
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.getString()Ljava/lang/String;: Line 214: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isOnlyModifiesThisCall()Z: Line 2124: 3633
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I163 Branch 181 IFNULL L1556 - false: 7
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I48 Branch 121 IF_ICMPEQ L961 - true: 2082
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I27 Branch 187 IF_ICMPNE L1580 - false: 4803
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I48 Branch 121 IF_ICMPEQ L961 - false: 177
Number of times BBC is called for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I9 Branch 87 IFNONNULL L699 - true: 7721
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1978: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isThrow()Z: I5 Branch 272 IF_ICMPNE L2419 - false: 4220
Number of times BBC is called for com.google.javascript.rhino.Node.wasEmptyNode()Z: root-Branch: 118
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: I11 Branch 72 IFNONNULL L621 - false: 353
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceFileName()Ljava/lang/String;: I8 Branch 133 IFNONNULL L1104 - true: 21301
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1974: 118
Number of times BBC is called for com.google.javascript.rhino.Node.addSuppression(Ljava/lang/String;)V: Line 1977: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isThrow()Z: I5 Branch 272 IF_ICMPNE L2419 - true: 1001
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - true: 45744
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 96 IF_ACMPNE L754 - false: 45744
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 22 TABLESWITCH L114 Case 50 - true: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I121 Branch 177 IF_ICMPEQ L1544 - false: 5536
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I10 Branch 194 IFLE L1600 - false: 5044
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 22 TABLESWITCH L114 Case 50 - false: 3653
Number of times BBC is called for com.google.javascript.rhino.Node.getParent()Lcom/google/javascript/rhino/Node;: root-Branch: 290
Number of times BBC is called for com.google.javascript.rhino.Node.isScript()Z: Line 2395: 9561
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I41 Branch 40 IFNONNULL L402 - true: 12069
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I40 Branch 170 IF_ICMPEQ L1527 - true: 905
Number of times BBC is called for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - true: 207
Number of times BBC is called for com.google.javascript.rhino.Node.isSwitch()Z: I5 Branch 270 IF_ICMPNE L2411 - false: 11570
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: I8 Branch 135 IFNONNULL L1149 - true: 20301
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 192 LOOKUPSWITCH L1598 Case 42 - false: 1888
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I5 Branch 185 IF_ICMPNE L1577 - true: 4371
Number of times BBC is called for com.google.javascript.rhino.Node.isLabelName()Z: Line 2347: 1137
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: root-Branch: 1426
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 192 LOOKUPSWITCH L1598 Case 42 - true: 5337
Number of times BBC is called for com.google.javascript.rhino.Node.toStringTreeHelper(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V: I7 Branch 131 IF_ICMPEQ L1029 - false: 52
Number of times BBC is called for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1762: 2916
Number of times BBC is called for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1763: 2916
Number of times BBC is called for com.google.javascript.rhino.Node.getBooleanProp(I)Z: I5 Branch 105 IFEQ L821 - false: 2605
Number of times BBC is called for com.google.javascript.rhino.Node.getQualifiedName()Ljava/lang/String;: I5 Branch 185 IF_ICMPNE L1577 - false: 5989
Number of times BBC is called for com.google.javascript.rhino.Node.copyInformationFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: Line 1768: 2916
Number of times BBC is called for com.google.javascript.rhino.Node.isFromExterns()Z: Line 1128: 43
Number of times BBC is called for com.google.javascript.rhino.Node.isFromExterns()Z: Line 1127: 43
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 28 TABLESWITCH L114 Case 56 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I123 Branch 55 IFNONNULL L491 - true: 56
Number of times BBC is called for com.google.javascript.rhino.Node.getChildBefore(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I29 Branch 60 IFNONNULL L557 - true: 371
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 28 TABLESWITCH L114 Case 56 - true: 5003
Number of times BBC is called for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - true: 2055
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I123 Branch 55 IFNONNULL L491 - false: 34
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 620: 734
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - false: 13299
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L114 Case 38 - true: 4150
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 622: 353
Number of times BBC is called for com.google.javascript.rhino.Node.setLength(I)V: Line 1137: 387
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I173 Branch 183 IFNE L1558 - true: 4289
Number of times BBC is called for com.google.javascript.rhino.Node.setLength(I)V: Line 1136: 387
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 624: 1082
Number of times BBC is called for com.google.javascript.rhino.Node.children()Ljava/lang/Iterable;: Line 1241: 2742
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 625: 1082
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 626: 1082
Number of times BBC is called for com.google.javascript.rhino.Node.isUnscopedQualifiedName()Z: I10 Branch 198 IFLE L1618 - true: 7593
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 627: 1082
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 2 TABLESWITCH L114 Case 30 - true: 3740
Number of times BBC is called for com.google.javascript.rhino.Node.addChildrenToFront(Lcom/google/javascript/rhino/Node;)V: Line 630: 1082
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L114 Case 38 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I87 Branch 123 IFEQ L970 - true: 75
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 757: 45744
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.getIntValue()I: Line 339: 11687
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 21 TABLESWITCH L114 Case 49 - true: 6719
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 754: 45744
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 21 TABLESWITCH L114 Case 49 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.isReturn()Z: Line 2391: 2742
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 759: 45744
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 758: 45744
Number of times BBC is called for com.google.javascript.rhino.Node.isDefaultCase()Z: I5 Branch 237 IF_ICMPNE L2279 - false: 9438
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToBack(Lcom/google/javascript/rhino/Node;)V: I4 Branch 68 IFNONNULL L607 - true: 415
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 748: 13029
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 753: 45744
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I9 Branch 296 IFNONNULL L1861 - true: 2397
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 752: 45744
Number of times BBC is called for com.google.javascript.rhino.Node.isDefaultCase()Z: I5 Branch 237 IF_ICMPNE L2279 - true: 609
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 751: 13029
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 750: 13029
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 3 TABLESWITCH L114 Case 31 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: I7 Branch 220 IFNE L2166 - true: 20236
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 739: 118
Number of times BBC is called for com.google.javascript.rhino.Node$FileLevelJsDocBuilder.append(Ljava/lang/String;)V: I9 Branch 296 IFNONNULL L1861 - false: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1706: 43
Number of times BBC is called for com.google.javascript.rhino.Node.isDebugger()Z: Line 2271: 1426
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 744: 664
Number of times BBC is called for com.google.javascript.rhino.Node.removeProp(I)V: I13 Branch 100 IF_ACMPEQ L786 - false: 54
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1703: 43
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 742: 369
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1710: 12413
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1709: 43
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1708: 43
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1707: 43
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1713: 43
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1712: 43
Number of times BBC is called for com.google.javascript.rhino.Node.putIntProp(II)V: I8 Branch 110 IFEQ L857 - true: 15
Number of times BBC is called for com.google.javascript.rhino.Node.cloneNode()Lcom/google/javascript/rhino/Node;: Line 1711: 12413
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I44 Branch 36 IFNONNULL L385 - true: 13662
Number of times BBC is called for com.google.javascript.rhino.Node$SiblingNodeIterable.hasNext()Z: Line 1294: 32489
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I20 Branch 34 IFNONNULL L381 - true: 13792
Number of times BBC is called for com.google.javascript.rhino.Node.setQuotedString()V: Line 2188: 387
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I12 Branch 206 IFNULL L1721 - true: 43
Number of times BBC is called for com.google.javascript.rhino.Node.isSyntheticBlock()Z: root-Branch: 734
Number of times BBC is called for com.google.javascript.rhino.Node.mayMutateGlobalStateOrThrow()Z: I7 Branch 220 IFNE L2166 - false: 118
Number of times BBC is called for com.google.javascript.rhino.Node.cloneTree()Lcom/google/javascript/rhino/Node;: I12 Branch 206 IFNULL L1721 - false: 137
Number of times BBC is called for com.google.javascript.rhino.Node.addChildAfter(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: Line 663: 103
Number of times BBC is called for com.google.javascript.rhino.Node.isIf()Z: I5 Branch 249 IF_ICMPNE L2327 - false: 1891
Number of times BBC is called for com.google.javascript.rhino.Node.isSyntheticBlock()Z: Line 1951: 734
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(I[Lcom/google/javascript/rhino/Node;)V: I146 Branch 56 IF_ACMPEQ L494 - false: 26180
Number of times BBC is called for com.google.javascript.rhino.Node.setIsSyntheticBlock(Z)V: root-Branch: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - true: 6185
Number of times BBC is called for com.google.javascript.rhino.Node$ObjectPropListItem.chain(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;: Line 322: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;)Z: Line 1492: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isVoid()Z: I5 Branch 277 IF_ICMPNE L2439 - true: 2390
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I210 Branch 130 IFNULL L1000 - false: 2108
Number of times BBC is called for com.google.javascript.rhino.Node.getProp(I)Ljava/lang/Object;: I9 Branch 104 IFNONNULL L814 - true: 38
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;)V: I20 Branch 32 IFNONNULL L367 - true: 21894
Number of times BBC is called for com.google.javascript.rhino.Node.isComma()Z: I5 Branch 233 IF_ICMPNE L2263 - false: 2015
Number of times BBC is called for com.google.javascript.rhino.Node.isHook()Z: Line 2323: 387
Number of times BBC is called for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - false: 15484
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I3 Branch 145 IFLT L1332 - false: 290
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 191 LOOKUPSWITCH L1598 Case 38 - true: 5044
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: Line 575: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isDo()Z: I5 Branch 239 IF_ICMPNE L2287 - true: 387
Number of times BBC is called for com.google.javascript.rhino.Node.getIndexOfChild(Lcom/google/javascript/rhino/Node;)I: Line 574: 118
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - true: 3820
Number of times BBC is called for com.google.javascript.rhino.Node.getAncestor(I)Lcom/google/javascript/rhino/Node;: I3 Branch 145 IFLT L1332 - true: 2508
Number of times BBC is called for com.google.javascript.rhino.Node.isQualifiedName()Z: I4 Branch 191 LOOKUPSWITCH L1598 Case 38 - false: 1888
Number of times BBC is called for com.google.javascript.rhino.Node.isVoid()Z: I5 Branch 277 IF_ICMPNE L2439 - false: 5267
Number of times BBC is called for com.google.javascript.rhino.Node.getString()Ljava/lang/String;: Line 912: 43
Number of times BBC is called for com.google.javascript.rhino.Node.isStringKey()Z: I5 Branch 269 IF_ICMPNE L2407 - true: 734
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: Line 1430: 118
Number of times BBC is called for com.google.javascript.rhino.Node.removeProp(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;: I32 Branch 103 IF_ACMPEQ L804 - false: 6137
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEquals(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;: Line 1429: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isCall()Z: I5 Branch 229 IF_ICMPNE L2247 - false: 453
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentTo(Lcom/google/javascript/rhino/Node;ZZZ)Z: I77 Branch 174 IF_ICMPNE L1533 - false: 475
Number of times BBC is called for com.google.javascript.rhino.Node.isCatch()Z: Line 2259: 609
Number of times BBC is called for com.google.javascript.rhino.Node.removeChild(Lcom/google/javascript/rhino/Node;)V: I29 Branch 88 IF_ACMPNE L704 - true: 165
Number of times BBC is called for com.google.javascript.rhino.Node.isEquivalentToShallow(Lcom/google/javascript/rhino/Node;)Z: Line 1497: 118
Number of times BBC is called for com.google.javascript.rhino.Node.isStringKey()Z: I5 Branch 269 IF_ICMPNE L2407 - false: 14913
Number of times BBC is called for com.google.javascript.rhino.Node.isEmpty()Z: I5 Branch 240 IF_ICMPNE L2291 - true: 5349
Number of times BBC is called for com.google.javascript.rhino.Node.isInstanceOf()Z: I5 Branch 252 IF_ICMPNE L2339 - false: 6938
Number of times BBC is called for com.google.javascript.rhino.Node.isInstanceOf()Z: I5 Branch 252 IF_ICMPNE L2339 - true: 734
Number of times BBC is called for com.google.javascript.rhino.Node.isEmpty()Z: I5 Branch 240 IF_ICMPNE L2291 - false: 30006
Number of times BBC is called for com.google.javascript.rhino.Node.isLocalResultCall()Z: root-Branch: 1283
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 215 IFNULL L1828 - true: 43
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - false: 20311
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I69 Branch 92 IF_ACMPNE L731 - false: 1637
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.isQuotedString()Z: Line 244: 9946
Number of times BBC is called for com.google.javascript.rhino.Node.isFunction()Z: Line 2307: 387
Number of times BBC is called for com.google.javascript.rhino.Node.isCast()Z: I5 Branch 231 IF_ICMPNE L2255 - false: 23083
Number of times BBC is called for com.google.javascript.rhino.Node.wasEmptyNode()Z: Line 1993: 118
Number of times BBC is called for com.google.javascript.rhino.Node.getSourceOffset()I: I22 Branch 136 IF_ICMPNE L1153 - true: 20311
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I15 Branch 66 IFNONNULL L597 - true: 31715
Number of times BBC is called for com.google.javascript.rhino.Node.isNew()Z: Line 2359: 43
Number of times BBC is called for com.google.javascript.rhino.Node.isCast()Z: I5 Branch 231 IF_ICMPNE L2255 - true: 118
Number of times BBC is called for com.google.javascript.rhino.Node.useSourceInfoIfMissingFromForTree(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;: I14 Branch 215 IFNULL L1828 - false: 129
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I200 Branch 129 IFNULL L998 - false: 2108
Number of times BBC is called for com.google.javascript.rhino.Node.getChildCount()I: Line 1408: 207
Number of times BBC is called for com.google.javascript.rhino.Node.isTrue()Z: I5 Branch 273 IF_ICMPNE L2423 - false: 3397
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 2 TABLESWITCH L114 Case 30 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L114 Case 39 - true: 3830
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I15 Branch 66 IFNONNULL L597 - false: 224
Number of times BBC is called for com.google.javascript.rhino.Node.getChildCount()I: Line 1411: 207
Number of times BBC is called for com.google.javascript.rhino.Node.getExistingIntProp(I)I: Line 837: 497
Number of times BBC is called for com.google.javascript.rhino.Node.addChildToFront(Lcom/google/javascript/rhino/Node;)V: I4 Branch 65 IFNONNULL L596 - false: 214
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 1 TABLESWITCH L114 Case 29 - true: 3653
Number of times BBC is called for com.google.javascript.rhino.Node.getExistingIntProp(I)I: Line 838: 497
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: Line 168: 1426
Number of times BBC is called for com.google.javascript.rhino.Node.isOnlyModifiesArgumentsCall()Z: root-Branch: 290
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - false: 24643
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.getObjectValue()Ljava/lang/Object;: root-Branch: 49743
Number of times BBC is called for com.google.javascript.rhino.Node$NumberNode.setDouble(D)V: Line 167: 1426
Number of times BBC is called for com.google.javascript.rhino.Node.getChildCount()I: Line 1407: 207
Number of times BBC is called for com.google.javascript.rhino.Node.setLength(I)V: root-Branch: 387
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1657: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L114 Case 39 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1658: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1661: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1662: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: Line 1116: 118
Number of times BBC is called for com.google.javascript.rhino.Node.setInputId(Lcom/google/javascript/rhino/InputId;)V: Line 1117: 118
Number of times BBC is called for com.google.javascript.rhino.Node.removeChildren()Lcom/google/javascript/rhino/Node;: Line 1663: 1576
Number of times BBC is called for com.google.javascript.rhino.Node.isBreak()Z: I5 Branch 228 IF_ICMPNE L2243 - false: 6407
Number of times BBC is called for com.google.javascript.rhino.Node$StringNode.isQuotedString()Z: root-Branch: 9946
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 20 TABLESWITCH L114 Case 48 - true: 4096
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 20 TABLESWITCH L114 Case 48 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node$AncestorIterable$1.remove()V: root-Branch: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 29 TABLESWITCH L114 Case 57 - true: 6032
Number of times BBC is called for com.google.javascript.rhino.Node.propToString(I)Ljava/lang/String;: I3 Branch 29 TABLESWITCH L114 Case 57 - false: 3447
Number of times BBC is called for com.google.javascript.rhino.Node.isTrue()Z: I5 Branch 273 IF_ICMPNE L2423 - true: 609
Number of times BBC is called for com.google.javascript.rhino.Node$NodeMismatch.equals(Ljava/lang/Object;)Z: I17 Branch 294 IFEQ L2204 - true: 24643
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I8 Branch 43 IFNONNULL L419 - true: 116
Number of times BBC is called for com.google.javascript.rhino.Node.replaceChild(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V: I46 Branch 91 IF_ACMPNE L725 - false: 1628
Number of times BBC is called for com.google.javascript.rhino.Node$IntPropListItem.toString()Ljava/lang/String;: root-Branch: 77352
Number of times BBC is called for com.google.javascript.rhino.Node.checkTreeEqualsImpl(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;: I39 Branch 159 IFNONNULL L1455 - false: 6613
Number of times BBC is called for com.google.javascript.rhino.Node.toString(Ljava/lang/StringBuilder;ZZZ)V: I97 Branch 124 IF_ICMPEQ L972 - false: 40
Number of times BBC is called for com.google.javascript.rhino.Node.<init>(ILcom/google/javascript/rhino/Node;)V: I8 Branch 31 IFNONNULL L365 - true: 5
Number of times BBC is called for com.google.javascript.rhino.Node.hasOneChild()Z: Line 1393: 207
Number of times BBC is called for com.google.javascript.rhino.Node.hasChildren()Z: I4 Branch 57 IFNULL L534 - true: 219
Number of times BBC is called for com.google.javascript.rhino.Node.isFalse()Z: Line 2299: 2916
Number of times BBC is called for com.google.javascript.rhino.Node.getIntProp(I)I: I9 Branch 106 IFNONNULL L830 - true: 4335
Number of times BBC is called for com.google.javascript.rhino.Node.setString(Ljava/lang/String;)V: I5 Branch 116 IF_ICMPEQ L925 - true: 9011
Number of times BBC is called in total: 5187240
* Search finished after 606s and 452 generations, 220469 statements, best individual has fitness: 2867.0
* Minimizing test suite
[MASTER] 10:11:28.346 [logback-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 93%
* Total number of goals: 853
* Number of covered goals: 794
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 714
* Number of covered goals: 613
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 106
* Number of covered goals: 106
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 88%
* Total number of goals: 530
* Number of covered goals: 465
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 49%
* Total number of goals: 4536
* Number of covered goals: 2215
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 92%
* Total number of goals: 233
* Number of covered goals: 214
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 91%
* Total number of goals: 233
* Number of covered goals: 213
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 80%
* Total number of goals: 714
* Number of covered goals: 571
* Generated 742 tests with total length 10008
* Resulting test suite's coverage: 77% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 10:12:36.387 [logback-1] WARN  SimpleMutationAssertionGenerator - Assertion minimization is taking too long (0.68475% of time used, but only 57/742 tests minimized), falling back to using all assertions
[MASTER] 10:12:55.432 [logback-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
[MASTER] 10:13:03.476 [logback-1] WARN  TimeController - Phase ASSERTION_GENERATION lasted too long, 8 seconds more than allowed.
[MASTER] 10:13:38.041 [logback-2] ERROR JUnitAnalyzer - Compilation failed on compilation units: [RegularFileObject[/tmp/EvoSuite_225_1628158417768/com/google/javascript/rhino/Node_225_tmp__ESTest.java], RegularFileObject[/tmp/EvoSuite_225_1628158417768/com/google/javascript/rhino/Node_225_tmp__ESTest_scaffolding.java]]
[MASTER] 10:13:38.041 [logback-2] ERROR JUnitAnalyzer - Classpath: subjects/buggy-versions/Closure-110/build/classes:subjects/buggy-versions/Closure-110/lib/args4j.jar:subjects/buggy-versions/Closure-110/lib/guava.jar:subjects/buggy-versions/Closure-110/lib/json.jar:subjects/buggy-versions/Closure-110/lib/jsr305.jar:subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:subjects/buggy-versions/Closure-110/build/lib/rhino.jar:subjects/buggy-versions/Closure-110/lib/ant.jar:/experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 10:13:38.041 [logback-2] ERROR JUnitAnalyzer - evosuiteCP: /experiment/tools/evosuite.jar:/experiment/subjects/buggy-versions/Closure-110/build/classes:/experiment/subjects/buggy-versions/Closure-110/lib/args4j.jar:/experiment/subjects/buggy-versions/Closure-110/lib/guava.jar:/experiment/subjects/buggy-versions/Closure-110/lib/json.jar:/experiment/subjects/buggy-versions/Closure-110/lib/jsr305.jar:/experiment/subjects/buggy-versions/Closure-110/lib/protobuf-java.jar:/experiment/subjects/buggy-versions/Closure-110/build/lib/rhino.jar:/experiment/subjects/buggy-versions/Closure-110/lib/ant.jar
[MASTER] 10:13:38.045 [logback-2] ERROR JUnitAnalyzer - Diagnostic: cannot find symbol
  symbol:   method contains(com.google.javascript.rhino.Node)
  location: variable iterable0 of type java.lang.Iterable<com.google.javascript.rhino.Node>: 1983
[MASTER] 10:13:38.047 [logback-2] ERROR JUnitAnalyzer - RegularFileObject[/tmp/EvoSuite_225_1628158417768/com/google/javascript/rhino/Node_225_tmp__ESTest.java]
1: /*
2:  * This file was automatically generated by EvoSuite
3:  * Thu Aug 05 10:13:37 GMT 2021
4:  */
5: 
6: package com.google.javascript.rhino;
7: 
8: import org.junit.Test;
9: import static org.junit.Assert.*;
10: import com.google.javascript.rhino.Node;
11: import org.evosuite.runtime.EvoRunner;
12: import org.evosuite.runtime.EvoRunnerParameters;
13: import org.junit.runner.RunWith;
14: 
15: @RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
16: public class Node_225_tmp__ESTest extends Node_225_tmp__ESTest_scaffolding {
17: 
18:   @Test(timeout = 4000)
19:   public void test0()  throws Throwable  {
20:       Node node0 = Node.newNumber((-1350.135723), (-872), (-1));
21:       assertEquals(29, Node.JSDOC_INFO_PROP);
22:       assertEquals(53, Node.INPUT_ID);
23:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
24:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
25:       assertEquals(2, Node.POST_FLAG);
26:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
27:       assertEquals(47, Node.IS_DISPATCHER);
28:       assertEquals(32, Node.INCRDECR_PROP);
29:       assertEquals(1, Node.DECR_FLAG);
30:       assertEquals(51, Node.STATIC_SOURCE_FILE);
31:       assertEquals(30, Node.VAR_ARGS_NAME);
32:       assertEquals(46, Node.IS_NAMESPACE);
33:       assertEquals(54, Node.SLASH_V);
34:       assertEquals(43, Node.IS_CONSTANT_NAME);
35:       assertEquals(40, Node.ORIGINALNAME_PROP);
36:       assertEquals(57, Node.REFLECTED_OBJECT);
37:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
38:       assertEquals(52, Node.LENGTH);
39:       assertEquals(50, Node.FREE_CALL);
40:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
41:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
42:       assertEquals(39, Node.EMPTY_BLOCK);
43:       assertEquals(15, Node.NO_SIDE_EFFECTS);
44:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
45:       assertEquals(57, Node.LAST_PROP);
46:       assertEquals(55, Node.INFERRED_FUNCTION);
47:       assertEquals(4095, Node.COLUMN_MASK);
48:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
49:       assertEquals(12, Node.COLUMN_BITS);
50:       assertEquals(8, Node.FLAG_NO_THROWS);
51:       assertEquals(48, Node.DIRECTIVES);
52:       assertEquals(37, Node.OPT_ARG_NAME);
53:       assertEquals(36, Node.QUOTED_PROP);
54:       assertEquals(49, Node.DIRECT_EVAL);
55:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
56:       assertEquals(56, Node.CHANGE_TIME);
57:       assertFalse(node0.isGetProp());
58:       assertFalse(node0.isComma());
59:       assertFalse(node0.isThis());
60:       assertFalse(node0.isBreak());
61:       assertFalse(node0.isInstanceOf());
62:       assertFalse(node0.isThrow());
63:       assertFalse(node0.isFalse());
64:       assertFalse(node0.isHook());
65:       assertFalse(node0.isExprResult());
66:       assertFalse(node0.isInc());
67:       assertFalse(node0.isWith());
68:       assertFalse(node0.isGetElem());
69:       assertFalse(node0.isOr());
70:       assertEquals((-1), node0.getLineno());
71:       assertFalse(node0.isLabel());
72:       assertFalse(node0.isGetterDef());
73:       assertFalse(node0.hasMoreThanOneChild());
74:       assertFalse(node0.isFor());
75:       assertFalse(node0.isEmpty());
76:       assertFalse(node0.isDo());
77:       assertEquals(39, node0.getType());
78:       assertFalse(node0.isCase());
79:       assertFalse(node0.hasOneChild());
80:       assertFalse(node0.isAssignAdd());
81:       assertFalse(node0.isTry());
82:       assertEquals((-1), node0.getCharno());
83:       assertFalse(node0.isScript());
84:       assertFalse(node0.isStringKey());
85:       assertFalse(node0.isLabelName());
86:       assertFalse(node0.isArrayLit());
87:       assertFalse(node0.isSwitch());
88:       assertFalse(node0.isParamList());
89:       assertFalse(node0.isSetterDef());
90:       assertEquals(0, node0.getChildCount());
91:       assertFalse(node0.isCatch());
92:       assertFalse(node0.isDefaultCase());
93:       assertFalse(node0.isVar());
94:       assertFalse(node0.isVoid());
95:       assertFalse(node0.isTrue());
96:       assertFalse(node0.isAdd());
97:       assertFalse(node0.isBlock());
98:       assertFalse(node0.isNew());
99:       assertFalse(node0.isRegExp());
100:       assertFalse(node0.isName());
101:       assertFalse(node0.isCall());
102:       assertFalse(node0.isIf());
103:       assertFalse(node0.isDelProp());
104:       assertFalse(node0.isNull());
105:       assertFalse(node0.isNE());
106:       assertFalse(node0.isReturn());
107:       assertTrue(node0.isNumber());
108:       assertEquals((-1), node0.getSourcePosition());
109:       assertFalse(node0.isDec());
110:       assertFalse(node0.isIn());
111:       assertFalse(node0.isTypeOf());
112:       assertFalse(node0.isContinue());
113:       assertFalse(node0.isAssign());
114:       assertFalse(node0.hasChildren());
115:       assertFalse(node0.isWhile());
116:       assertFalse(node0.isFunction());
117:       assertFalse(node0.isDebugger());
118:       assertFalse(node0.isCast());
119:       assertFalse(node0.isString());
120:       assertFalse(node0.isObjectLit());
121:       assertFalse(node0.isNot());
122:       assertFalse(node0.isAnd());
123:       assertNotNull(node0);
124:       
125:       Node node1 = Node.newNumber((double) 2);
126:       assertEquals(1, Node.DECR_FLAG);
127:       assertEquals(30, Node.VAR_ARGS_NAME);
128:       assertEquals(49, Node.DIRECT_EVAL);
129:       assertEquals(32, Node.INCRDECR_PROP);
130:       assertEquals(15, Node.NO_SIDE_EFFECTS);
131:       assertEquals(2, Node.POST_FLAG);
132:       assertEquals(57, Node.LAST_PROP);
133:       assertEquals(47, Node.IS_DISPATCHER);
134:       assertEquals(12, Node.COLUMN_BITS);
135:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
136:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
137:       assertEquals(50, Node.FREE_CALL);
138:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
139:       assertEquals(40, Node.ORIGINALNAME_PROP);
140:       assertEquals(54, Node.SLASH_V);
141:       assertEquals(46, Node.IS_NAMESPACE);
142:       assertEquals(43, Node.IS_CONSTANT_NAME);
143:       assertEquals(51, Node.STATIC_SOURCE_FILE);
144:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
145:       assertEquals(55, Node.INFERRED_FUNCTION);
146:       assertEquals(4095, Node.COLUMN_MASK);
147:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
148:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
149:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
150:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
151:       assertEquals(29, Node.JSDOC_INFO_PROP);
152:       assertEquals(39, Node.EMPTY_BLOCK);
153:       assertEquals(53, Node.INPUT_ID);
154:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
155:       assertEquals(48, Node.DIRECTIVES);
156:       assertEquals(37, Node.OPT_ARG_NAME);
157:       assertEquals(52, Node.LENGTH);
158:       assertEquals(8, Node.FLAG_NO_THROWS);
159:       assertEquals(56, Node.CHANGE_TIME);
160:       assertEquals(36, Node.QUOTED_PROP);
161:       assertEquals(57, Node.REFLECTED_OBJECT);
162:       assertFalse(node1.isCast());
163:       assertFalse(node1.isScript());
164:       assertFalse(node1.hasOneChild());
165:       assertFalse(node1.isGetElem());
166:       assertFalse(node1.isExprResult());
167:       assertFalse(node1.isAssign());
168:       assertFalse(node1.isWith());
169:       assertFalse(node1.isDec());
170:       assertFalse(node1.isTypeOf());
171:       assertFalse(node1.hasChildren());
172:       assertFalse(node1.isOr());
173:       assertFalse(node1.isAssignAdd());
174:       assertEquals((-1), node1.getLineno());
175:       assertFalse(node1.hasMoreThanOneChild());
176:       assertFalse(node1.isInstanceOf());
177:       assertFalse(node1.isBreak());
178:       assertFalse(node1.isCall());
179:       assertFalse(node1.isInc());
180:       assertFalse(node1.isWhile());
181:       assertFalse(node1.isContinue());
182:       assertFalse(node1.isFalse());
183:       assertFalse(node1.isComma());
184:       assertFalse(node1.isThrow());
185:       assertFalse(node1.isReturn());
186:       assertTrue(node1.isNumber());
187:       assertFalse(node1.isGetProp());
188:       assertFalse(node1.isNot());
189:       assertFalse(node1.isString());
190:       assertFalse(node1.isObjectLit());
191:       assertFalse(node1.isDebugger());
192:       assertFalse(node1.isAnd());
193:       assertEquals((-1), node1.getSourcePosition());
194:       assertFalse(node1.isTry());
195:       assertFalse(node1.isVoid());
196:       assertFalse(node1.isFunction());
197:       assertFalse(node1.isArrayLit());
198:       assertFalse(node1.isFor());
199:       assertFalse(node1.isDefaultCase());
200:       assertFalse(node1.isRegExp());
201:       assertFalse(node1.isIn());
202:       assertFalse(node1.isCatch());
203:       assertFalse(node1.isSetterDef());
204:       assertFalse(node1.isEmpty());
205:       assertFalse(node1.isIf());
206:       assertFalse(node1.isDelProp());
207:       assertFalse(node1.isName());
208:       assertFalse(node1.isNE());
209:       assertFalse(node1.isTrue());
210:       assertFalse(node1.isNull());
211:       assertFalse(node1.isNew());
212:       assertFalse(node1.isAdd());
213:       assertFalse(node1.isDo());
214:       assertEquals(39, node1.getType());
215:       assertFalse(node1.isCase());
216:       assertFalse(node1.isVar());
217:       assertFalse(node1.isBlock());
218:       assertFalse(node1.isHook());
219:       assertFalse(node1.isThis());
220:       assertFalse(node1.isLabel());
221:       assertEquals(0, node1.getChildCount());
222:       assertFalse(node1.isLabelName());
223:       assertFalse(node1.isStringKey());
224:       assertFalse(node1.isGetterDef());
225:       assertFalse(node1.isSwitch());
226:       assertFalse(node1.isParamList());
227:       assertEquals((-1), node1.getCharno());
228:       assertNotNull(node1);
229:       assertFalse(node1.equals((Object)node0));
230:       assertNotSame(node1, node0);
231:       
232:       Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16777216);
233:       assertFalse(node_SideEffectFlags0.areAllFlagsSet());
234:       assertEquals(16777216, node_SideEffectFlags0.valueOf());
235:       assertNotNull(node_SideEffectFlags0);
236:       
237:       Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
238:       assertFalse(node_SideEffectFlags0.areAllFlagsSet());
239:       assertEquals(16777216, node_SideEffectFlags0.valueOf());
240:       assertFalse(node_SideEffectFlags1.areAllFlagsSet());
241:       assertEquals(16777216, node_SideEffectFlags1.valueOf());
242:       assertNotNull(node_SideEffectFlags1);
243:       assertSame(node_SideEffectFlags0, node_SideEffectFlags1);
244:       assertSame(node_SideEffectFlags1, node_SideEffectFlags0);
245:       
246:       Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
247:       assertFalse(node_SideEffectFlags0.areAllFlagsSet());
248:       assertEquals(16777216, node_SideEffectFlags0.valueOf());
249:       assertFalse(node_SideEffectFlags1.areAllFlagsSet());
250:       assertEquals(16777216, node_SideEffectFlags1.valueOf());
251:       assertFalse(node_SideEffectFlags2.areAllFlagsSet());
252:       assertEquals(16777216, node_SideEffectFlags2.valueOf());
253:       assertNotNull(node_SideEffectFlags2);
254:       assertSame(node_SideEffectFlags0, node_SideEffectFlags2);
255:       assertSame(node_SideEffectFlags0, node_SideEffectFlags1);
256:       assertSame(node_SideEffectFlags1, node_SideEffectFlags2);
257:       assertSame(node_SideEffectFlags1, node_SideEffectFlags0);
258:       assertSame(node_SideEffectFlags2, node_SideEffectFlags1);
259:       assertSame(node_SideEffectFlags2, node_SideEffectFlags0);
260:       
261:       Node node2 = Node.newString("=OVlF!-[x", 56, 42);
262:       assertEquals(12, Node.COLUMN_BITS);
263:       assertEquals(46, Node.IS_NAMESPACE);
264:       assertEquals(30, Node.VAR_ARGS_NAME);
265:       assertEquals(51, Node.STATIC_SOURCE_FILE);
266:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
267:       assertEquals(15, Node.NO_SIDE_EFFECTS);
268:       assertEquals(47, Node.IS_DISPATCHER);
269:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
270:       assertEquals(57, Node.LAST_PROP);
271:       assertEquals(1, Node.DECR_FLAG);
272:       assertEquals(32, Node.INCRDECR_PROP);
273:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
274:       assertEquals(40, Node.ORIGINALNAME_PROP);
275:       assertEquals(2, Node.POST_FLAG);
276:       assertEquals(50, Node.FREE_CALL);
277:       assertEquals(43, Node.IS_CONSTANT_NAME);
278:       assertEquals(54, Node.SLASH_V);
279:       assertEquals(55, Node.INFERRED_FUNCTION);
280:       assertEquals(4095, Node.COLUMN_MASK);
281:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
282:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
283:       assertEquals(8, Node.FLAG_NO_THROWS);
284:       assertEquals(39, Node.EMPTY_BLOCK);
285:       assertEquals(53, Node.INPUT_ID);
286:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
287:       assertEquals(57, Node.REFLECTED_OBJECT);
288:       assertEquals(29, Node.JSDOC_INFO_PROP);
289:       assertEquals(52, Node.LENGTH);
290:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
291:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
292:       assertEquals(37, Node.OPT_ARG_NAME);
293:       assertEquals(36, Node.QUOTED_PROP);
294:       assertEquals(56, Node.CHANGE_TIME);
295:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
296:       assertEquals(48, Node.DIRECTIVES);
297:       assertEquals(49, Node.DIRECT_EVAL);
298:       assertFalse(node2.isExprResult());
299:       assertFalse(node2.isScript());
300:       assertFalse(node2.isWith());
301:       assertFalse(node2.isNot());
302:       assertFalse(node2.hasOneChild());
303:       assertFalse(node2.isReturn());
304:       assertFalse(node2.isThis());
305:       assertFalse(node2.isDec());
306:       assertFalse(node2.isTypeOf());
307:       assertFalse(node2.isInstanceOf());
308:       assertFalse(node2.hasChildren());
309:       assertFalse(node2.isComma());
310:       assertFalse(node2.hasMoreThanOneChild());
311:       assertFalse(node2.isOr());
312:       assertFalse(node2.isAssign());
313:       assertFalse(node2.isGetElem());
314:       assertFalse(node2.isBreak());
315:       assertFalse(node2.isInc());
316:       assertFalse(node2.isWhile());
317:       assertFalse(node2.isThrow());
318:       assertFalse(node2.isGetProp());
319:       assertEquals(42, node2.getCharno());
320:       assertFalse(node2.isObjectLit());
321:       assertFalse(node2.isFalse());
322:       assertFalse(node2.isAnd());
323:       assertFalse(node2.isContinue());
324:       assertFalse(node2.isCast());
325:       assertFalse(node2.isDebugger());
326:       assertFalse(node2.isTrue());
327:       assertFalse(node2.isFunction());
328:       assertFalse(node2.isRegExp());
329:       assertEquals(40, node2.getType());
330:       assertFalse(node2.isFor());
331:       assertFalse(node2.isEmpty());
332:       assertFalse(node2.isDefaultCase());
333:       assertFalse(node2.isTry());
334:       assertFalse(node2.isSetterDef());
335:       assertFalse(node2.isNE());
336:       assertFalse(node2.isNull());
337:       assertFalse(node2.isIn());
338:       assertEquals(229418, node2.getSourcePosition());
339:       assertFalse(node2.isName());
340:       assertFalse(node2.isCatch());
341:       assertFalse(node2.isCall());
342:       assertFalse(node2.isIf());
343:       assertFalse(node2.isVoid());
344:       assertFalse(node2.isDelProp());
345:       assertTrue(node2.isString());
346:       assertFalse(node2.isNew());
347:       assertFalse(node2.isBlock());
348:       assertFalse(node2.isAdd());
349:       assertFalse(node2.isHook());
350:       assertFalse(node2.isCase());
351:       assertFalse(node2.isVar());
352:       assertFalse(node2.isDo());
353:       assertFalse(node2.isLabel());
354:       assertFalse(node2.isAssignAdd());
355:       assertFalse(node2.isParamList());
356:       assertFalse(node2.isNumber());
357:       assertFalse(node2.isGetterDef());
358:       assertEquals(0, node2.getChildCount());
359:       assertFalse(node2.isStringKey());
360:       assertEquals(56, node2.getLineno());
361:       assertFalse(node2.isArrayLit());
362:       assertFalse(node2.isSwitch());
363:       assertFalse(node2.isLabelName());
364:       assertNotNull(node2);
365:       assertFalse(node2.equals((Object)node1));
366:       assertFalse(node2.equals((Object)node0));
367:       
368:       boolean boolean0 = node2.isVarArgs();
369:       assertEquals(12, Node.COLUMN_BITS);
370:       assertEquals(46, Node.IS_NAMESPACE);
371:       assertEquals(30, Node.VAR_ARGS_NAME);
372:       assertEquals(51, Node.STATIC_SOURCE_FILE);
373:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
374:       assertEquals(15, Node.NO_SIDE_EFFECTS);
375:       assertEquals(47, Node.IS_DISPATCHER);
376:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
377:       assertEquals(57, Node.LAST_PROP);
378:       assertEquals(1, Node.DECR_FLAG);
379:       assertEquals(32, Node.INCRDECR_PROP);
380:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
381:       assertEquals(40, Node.ORIGINALNAME_PROP);
382:       assertEquals(2, Node.POST_FLAG);
383:       assertEquals(50, Node.FREE_CALL);
384:       assertEquals(43, Node.IS_CONSTANT_NAME);
385:       assertEquals(54, Node.SLASH_V);
386:       assertEquals(55, Node.INFERRED_FUNCTION);
387:       assertEquals(4095, Node.COLUMN_MASK);
388:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
389:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
390:       assertEquals(8, Node.FLAG_NO_THROWS);
391:       assertEquals(39, Node.EMPTY_BLOCK);
392:       assertEquals(53, Node.INPUT_ID);
393:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
394:       assertEquals(57, Node.REFLECTED_OBJECT);
395:       assertEquals(29, Node.JSDOC_INFO_PROP);
396:       assertEquals(52, Node.LENGTH);
397:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
398:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
399:       assertEquals(37, Node.OPT_ARG_NAME);
400:       assertEquals(36, Node.QUOTED_PROP);
401:       assertEquals(56, Node.CHANGE_TIME);
402:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
403:       assertEquals(48, Node.DIRECTIVES);
404:       assertEquals(49, Node.DIRECT_EVAL);
405:       assertFalse(boolean0);
406:       assertFalse(node2.isExprResult());
407:       assertFalse(node2.isScript());
408:       assertFalse(node2.isWith());
409:       assertFalse(node2.isNot());
410:       assertFalse(node2.hasOneChild());
411:       assertFalse(node2.isReturn());
412:       assertFalse(node2.isThis());
413:       assertFalse(node2.isDec());
414:       assertFalse(node2.isTypeOf());
415:       assertFalse(node2.isInstanceOf());
416:       assertFalse(node2.hasChildren());
417:       assertFalse(node2.isComma());
418:       assertFalse(node2.hasMoreThanOneChild());
419:       assertFalse(node2.isOr());
420:       assertFalse(node2.isAssign());
421:       assertFalse(node2.isGetElem());
422:       assertFalse(node2.isBreak());
423:       assertFalse(node2.isInc());
424:       assertFalse(node2.isWhile());
425:       assertFalse(node2.isThrow());
426:       assertFalse(node2.isGetProp());
427:       assertEquals(42, node2.getCharno());
428:       assertFalse(node2.isObjectLit());
429:       assertFalse(node2.isFalse());
430:       assertFalse(node2.isAnd());
431:       assertFalse(node2.isContinue());
432:       assertFalse(node2.isCast());
433:       assertFalse(node2.isDebugger());
434:       assertFalse(node2.isTrue());
435:       assertFalse(node2.isFunction());
436:       assertFalse(node2.isRegExp());
437:       assertEquals(40, node2.getType());
438:       assertFalse(node2.isFor());
439:       assertFalse(node2.isEmpty());
440:       assertFalse(node2.isDefaultCase());
441:       assertFalse(node2.isTry());
442:       assertFalse(node2.isSetterDef());
443:       assertFalse(node2.isNE());
444:       assertFalse(node2.isNull());
445:       assertFalse(node2.isIn());
446:       assertEquals(229418, node2.getSourcePosition());
447:       assertFalse(node2.isName());
448:       assertFalse(node2.isCatch());
449:       assertFalse(node2.isCall());
450:       assertFalse(node2.isIf());
451:       assertFalse(node2.isVoid());
452:       assertFalse(node2.isDelProp());
453:       assertTrue(node2.isString());
454:       assertFalse(node2.isNew());
455:       assertFalse(node2.isBlock());
456:       assertFalse(node2.isAdd());
457:       assertFalse(node2.isHook());
458:       assertFalse(node2.isCase());
459:       assertFalse(node2.isVar());
460:       assertFalse(node2.isDo());
461:       assertFalse(node2.isLabel());
462:       assertFalse(node2.isAssignAdd());
463:       assertFalse(node2.isParamList());
464:       assertFalse(node2.isNumber());
465:       assertFalse(node2.isGetterDef());
466:       assertEquals(0, node2.getChildCount());
467:       assertFalse(node2.isStringKey());
468:       assertEquals(56, node2.getLineno());
469:       assertFalse(node2.isArrayLit());
470:       assertFalse(node2.isSwitch());
471:       assertFalse(node2.isLabelName());
472:       assertFalse(node2.equals((Object)node1));
473:       assertFalse(node2.equals((Object)node0));
474:       
475:       boolean boolean1 = node1.mayMutateArguments();
476:       assertEquals(1, Node.DECR_FLAG);
477:       assertEquals(30, Node.VAR_ARGS_NAME);
478:       assertEquals(49, Node.DIRECT_EVAL);
479:       assertEquals(32, Node.INCRDECR_PROP);
480:       assertEquals(15, Node.NO_SIDE_EFFECTS);
481:       assertEquals(2, Node.POST_FLAG);
482:       assertEquals(57, Node.LAST_PROP);
483:       assertEquals(47, Node.IS_DISPATCHER);
484:       assertEquals(12, Node.COLUMN_BITS);
485:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
486:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
487:       assertEquals(50, Node.FREE_CALL);
488:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
489:       assertEquals(40, Node.ORIGINALNAME_PROP);
490:       assertEquals(54, Node.SLASH_V);
491:       assertEquals(46, Node.IS_NAMESPACE);
492:       assertEquals(43, Node.IS_CONSTANT_NAME);
493:       assertEquals(51, Node.STATIC_SOURCE_FILE);
494:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
495:       assertEquals(55, Node.INFERRED_FUNCTION);
496:       assertEquals(4095, Node.COLUMN_MASK);
497:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
498:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
499:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
500:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
501:       assertEquals(29, Node.JSDOC_INFO_PROP);
502:       assertEquals(39, Node.EMPTY_BLOCK);
503:       assertEquals(53, Node.INPUT_ID);
504:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
505:       assertEquals(48, Node.DIRECTIVES);
506:       assertEquals(37, Node.OPT_ARG_NAME);
507:       assertEquals(52, Node.LENGTH);
508:       assertEquals(8, Node.FLAG_NO_THROWS);
509:       assertEquals(56, Node.CHANGE_TIME);
510:       assertEquals(36, Node.QUOTED_PROP);
511:       assertEquals(57, Node.REFLECTED_OBJECT);
512:       assertTrue(boolean1);
513:       assertFalse(node1.isCast());
514:       assertFalse(node1.isScript());
515:       assertFalse(node1.hasOneChild());
516:       assertFalse(node1.isGetElem());
517:       assertFalse(node1.isExprResult());
518:       assertFalse(node1.isAssign());
519:       assertFalse(node1.isWith());
520:       assertFalse(node1.isDec());
521:       assertFalse(node1.isTypeOf());
522:       assertFalse(node1.hasChildren());
523:       assertFalse(node1.isOr());
524:       assertFalse(node1.isAssignAdd());
525:       assertEquals((-1), node1.getLineno());
526:       assertFalse(node1.hasMoreThanOneChild());
527:       assertFalse(node1.isInstanceOf());
528:       assertFalse(node1.isBreak());
529:       assertFalse(node1.isCall());
530:       assertFalse(node1.isInc());
531:       assertFalse(node1.isWhile());
532:       assertFalse(node1.isContinue());
533:       assertFalse(node1.isFalse());
534:       assertFalse(node1.isComma());
535:       assertFalse(node1.isThrow());
536:       assertFalse(node1.isReturn());
537:       assertTrue(node1.isNumber());
538:       assertFalse(node1.isGetProp());
539:       assertFalse(node1.isNot());
540:       assertFalse(node1.isString());
541:       assertFalse(node1.isObjectLit());
542:       assertFalse(node1.isDebugger());
543:       assertFalse(node1.isAnd());
544:       assertEquals((-1), node1.getSourcePosition());
545:       assertFalse(node1.isTry());
546:       assertFalse(node1.isVoid());
547:       assertFalse(node1.isFunction());
548:       assertFalse(node1.isArrayLit());
549:       assertFalse(node1.isFor());
550:       assertFalse(node1.isDefaultCase());
551:       assertFalse(node1.isRegExp());
552:       assertFalse(node1.isIn());
553:       assertFalse(node1.isCatch());
554:       assertFalse(node1.isSetterDef());
555:       assertFalse(node1.isEmpty());
556:       assertFalse(node1.isIf());
557:       assertFalse(node1.isDelProp());
558:       assertFalse(node1.isName());
559:       assertFalse(node1.isNE());
560:       assertFalse(node1.isTrue());
561:       assertFalse(node1.isNull());
562:       assertFalse(node1.isNew());
563:       assertFalse(node1.isAdd());
564:       assertFalse(node1.isDo());
565:       assertEquals(39, node1.getType());
566:       assertFalse(node1.isCase());
567:       assertFalse(node1.isVar());
568:       assertFalse(node1.isBlock());
569:       assertFalse(node1.isHook());
570:       assertFalse(node1.isThis());
571:       assertFalse(node1.isLabel());
572:       assertEquals(0, node1.getChildCount());
573:       assertFalse(node1.isLabelName());
574:       assertFalse(node1.isStringKey());
575:       assertFalse(node1.isGetterDef());
576:       assertFalse(node1.isSwitch());
577:       assertFalse(node1.isParamList());
578:       assertEquals((-1), node1.getCharno());
579:       assertFalse(node1.equals((Object)node2));
580:       assertFalse(node1.equals((Object)node0));
581:       assertFalse(boolean1 == boolean0);
582:       assertNotSame(node1, node0);
583:       
584:       Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
585:       assertEquals(12, Node.COLUMN_BITS);
586:       assertEquals(46, Node.IS_NAMESPACE);
587:       assertEquals(30, Node.VAR_ARGS_NAME);
588:       assertEquals(51, Node.STATIC_SOURCE_FILE);
589:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
590:       assertEquals(15, Node.NO_SIDE_EFFECTS);
591:       assertEquals(47, Node.IS_DISPATCHER);
592:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
593:       assertEquals(57, Node.LAST_PROP);
594:       assertEquals(1, Node.DECR_FLAG);
595:       assertEquals(32, Node.INCRDECR_PROP);
596:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
597:       assertEquals(40, Node.ORIGINALNAME_PROP);
598:       assertEquals(2, Node.POST_FLAG);
599:       assertEquals(50, Node.FREE_CALL);
600:       assertEquals(43, Node.IS_CONSTANT_NAME);
601:       assertEquals(54, Node.SLASH_V);
602:       assertEquals(55, Node.INFERRED_FUNCTION);
603:       assertEquals(4095, Node.COLUMN_MASK);
604:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
605:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
606:       assertEquals(8, Node.FLAG_NO_THROWS);
607:       assertEquals(39, Node.EMPTY_BLOCK);
608:       assertEquals(53, Node.INPUT_ID);
609:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
610:       assertEquals(57, Node.REFLECTED_OBJECT);
611:       assertEquals(29, Node.JSDOC_INFO_PROP);
612:       assertEquals(52, Node.LENGTH);
613:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
614:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
615:       assertEquals(37, Node.OPT_ARG_NAME);
616:       assertEquals(36, Node.QUOTED_PROP);
617:       assertEquals(56, Node.CHANGE_TIME);
618:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
619:       assertEquals(48, Node.DIRECTIVES);
620:       assertEquals(49, Node.DIRECT_EVAL);
621:       assertFalse(node2.isExprResult());
622:       assertFalse(node2.isScript());
623:       assertFalse(node2.isWith());
624:       assertFalse(node2.isNot());
625:       assertFalse(node2.hasOneChild());
626:       assertFalse(node2.isReturn());
627:       assertFalse(node2.isThis());
628:       assertFalse(node2.isDec());
629:       assertFalse(node2.isTypeOf());
630:       assertFalse(node2.isInstanceOf());
631:       assertFalse(node2.hasChildren());
632:       assertFalse(node2.isComma());
633:       assertFalse(node2.hasMoreThanOneChild());
634:       assertFalse(node2.isOr());
635:       assertFalse(node2.isAssign());
636:       assertFalse(node2.isGetElem());
637:       assertFalse(node2.isBreak());
638:       assertFalse(node2.isInc());
639:       assertFalse(node2.isWhile());
640:       assertFalse(node2.isThrow());
641:       assertFalse(node2.isGetProp());
642:       assertEquals(42, node2.getCharno());
643:       assertFalse(node2.isObjectLit());
644:       assertFalse(node2.isFalse());
645:       assertFalse(node2.isAnd());
646:       assertFalse(node2.isContinue());
647:       assertFalse(node2.isCast());
648:       assertFalse(node2.isDebugger());
649:       assertFalse(node2.isTrue());
650:       assertFalse(node2.isFunction());
651:       assertFalse(node2.isRegExp());
652:       assertEquals(40, node2.getType());
653:       assertFalse(node2.isFor());
654:       assertFalse(node2.isEmpty());
655:       assertFalse(node2.isDefaultCase());
656:       assertFalse(node2.isTry());
657:       assertFalse(node2.isSetterDef());
658:       assertFalse(node2.isNE());
659:       assertFalse(node2.isNull());
660:       assertFalse(node2.isIn());
661:       assertEquals(229418, node2.getSourcePosition());
662:       assertFalse(node2.isName());
663:       assertFalse(node2.isCatch());
664:       assertFalse(node2.isCall());
665:       assertFalse(node2.isIf());
666:       assertFalse(node2.isVoid());
667:       assertFalse(node2.isDelProp());
668:       assertTrue(node2.isString());
669:       assertFalse(node2.isNew());
670:       assertFalse(node2.isBlock());
671:       assertFalse(node2.isAdd());
672:       assertFalse(node2.isHook());
673:       assertFalse(node2.isCase());
674:       assertFalse(node2.isVar());
675:       assertFalse(node2.isDo());
676:       assertFalse(node2.isLabel());
677:       assertFalse(node2.isAssignAdd());
678:       assertFalse(node2.isParamList());
679:       assertFalse(node2.isNumber());
680:       assertFalse(node2.isGetterDef());
681:       assertEquals(0, node2.getChildCount());
682:       assertFalse(node2.isStringKey());
683:       assertEquals(56, node2.getLineno());
684:       assertFalse(node2.isArrayLit());
685:       assertFalse(node2.isSwitch());
686:       assertFalse(node2.isLabelName());
687:       assertNotNull(node_FileLevelJsDocBuilder0);
688:       assertFalse(node2.equals((Object)node1));
689:       assertFalse(node2.equals((Object)node0));
690:       
691:       boolean boolean2 = node0.hasChildren();
692:       assertEquals(29, Node.JSDOC_INFO_PROP);
693:       assertEquals(53, Node.INPUT_ID);
694:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
695:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
696:       assertEquals(2, Node.POST_FLAG);
697:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
698:       assertEquals(47, Node.IS_DISPATCHER);
699:       assertEquals(32, Node.INCRDECR_PROP);
700:       assertEquals(1, Node.DECR_FLAG);
701:       assertEquals(51, Node.STATIC_SOURCE_FILE);
702:       assertEquals(30, Node.VAR_ARGS_NAME);
703:       assertEquals(46, Node.IS_NAMESPACE);
704:       assertEquals(54, Node.SLASH_V);
705:       assertEquals(43, Node.IS_CONSTANT_NAME);
706:       assertEquals(40, Node.ORIGINALNAME_PROP);
707:       assertEquals(57, Node.REFLECTED_OBJECT);
708:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
709:       assertEquals(52, Node.LENGTH);
710:       assertEquals(50, Node.FREE_CALL);
711:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
712:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
713:       assertEquals(39, Node.EMPTY_BLOCK);
714:       assertEquals(15, Node.NO_SIDE_EFFECTS);
715:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
716:       assertEquals(57, Node.LAST_PROP);
717:       assertEquals(55, Node.INFERRED_FUNCTION);
718:       assertEquals(4095, Node.COLUMN_MASK);
719:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
720:       assertEquals(12, Node.COLUMN_BITS);
721:       assertEquals(8, Node.FLAG_NO_THROWS);
722:       assertEquals(48, Node.DIRECTIVES);
723:       assertEquals(37, Node.OPT_ARG_NAME);
724:       assertEquals(36, Node.QUOTED_PROP);
725:       assertEquals(49, Node.DIRECT_EVAL);
726:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
727:       assertEquals(56, Node.CHANGE_TIME);
728:       assertFalse(boolean2);
729:       assertFalse(node0.isGetProp());
730:       assertFalse(node0.isComma());
731:       assertFalse(node0.isThis());
732:       assertFalse(node0.isBreak());
733:       assertFalse(node0.isInstanceOf());
734:       assertFalse(node0.isThrow());
735:       assertFalse(node0.isFalse());
736:       assertFalse(node0.isHook());
737:       assertFalse(node0.isExprResult());
738:       assertFalse(node0.isInc());
739:       assertFalse(node0.isWith());
740:       assertFalse(node0.isGetElem());
741:       assertFalse(node0.isOr());
742:       assertEquals((-1), node0.getLineno());
743:       assertFalse(node0.isLabel());
744:       assertFalse(node0.isGetterDef());
745:       assertFalse(node0.hasMoreThanOneChild());
746:       assertFalse(node0.isFor());
747:       assertFalse(node0.isEmpty());
748:       assertFalse(node0.isDo());
749:       assertEquals(39, node0.getType());
750:       assertFalse(node0.isCase());
751:       assertFalse(node0.hasOneChild());
752:       assertFalse(node0.isAssignAdd());
753:       assertFalse(node0.isTry());
754:       assertEquals((-1), node0.getCharno());
755:       assertFalse(node0.isScript());
756:       assertFalse(node0.isStringKey());
757:       assertFalse(node0.isLabelName());
758:       assertFalse(node0.isArrayLit());
759:       assertFalse(node0.isSwitch());
760:       assertFalse(node0.isParamList());
761:       assertFalse(node0.isSetterDef());
762:       assertEquals(0, node0.getChildCount());
763:       assertFalse(node0.isCatch());
764:       assertFalse(node0.isDefaultCase());
765:       assertFalse(node0.isVar());
766:       assertFalse(node0.isVoid());
767:       assertFalse(node0.isTrue());
768:       assertFalse(node0.isAdd());
769:       assertFalse(node0.isBlock());
770:       assertFalse(node0.isNew());
771:       assertFalse(node0.isRegExp());
772:       assertFalse(node0.isName());
773:       assertFalse(node0.isCall());
774:       assertFalse(node0.isIf());
775:       assertFalse(node0.isDelProp());
776:       assertFalse(node0.isNull());
777:       assertFalse(node0.isNE());
778:       assertFalse(node0.isReturn());
779:       assertTrue(node0.isNumber());
780:       assertEquals((-1), node0.getSourcePosition());
781:       assertFalse(node0.isDec());
782:       assertFalse(node0.isIn());
783:       assertFalse(node0.isTypeOf());
784:       assertFalse(node0.isContinue());
785:       assertFalse(node0.isAssign());
786:       assertFalse(node0.hasChildren());
787:       assertFalse(node0.isWhile());
788:       assertFalse(node0.isFunction());
789:       assertFalse(node0.isDebugger());
790:       assertFalse(node0.isCast());
791:       assertFalse(node0.isString());
792:       assertFalse(node0.isObjectLit());
793:       assertFalse(node0.isNot());
794:       assertFalse(node0.isAnd());
795:       assertFalse(node0.equals((Object)node2));
796:       assertFalse(node0.equals((Object)node1));
797:       assertTrue(boolean2 == boolean0);
798:       assertFalse(boolean2 == boolean1);
799:       assertNotSame(node0, node1);
800:       
801:       boolean boolean3 = node0.isNoSideEffectsCall();
802:       assertEquals(29, Node.JSDOC_INFO_PROP);
803:       assertEquals(53, Node.INPUT_ID);
804:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
805:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
806:       assertEquals(2, Node.POST_FLAG);
807:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
808:       assertEquals(47, Node.IS_DISPATCHER);
809:       assertEquals(32, Node.INCRDECR_PROP);
810:       assertEquals(1, Node.DECR_FLAG);
811:       assertEquals(51, Node.STATIC_SOURCE_FILE);
812:       assertEquals(30, Node.VAR_ARGS_NAME);
813:       assertEquals(46, Node.IS_NAMESPACE);
814:       assertEquals(54, Node.SLASH_V);
815:       assertEquals(43, Node.IS_CONSTANT_NAME);
816:       assertEquals(40, Node.ORIGINALNAME_PROP);
817:       assertEquals(57, Node.REFLECTED_OBJECT);
818:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
819:       assertEquals(52, Node.LENGTH);
820:       assertEquals(50, Node.FREE_CALL);
821:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
822:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
823:       assertEquals(39, Node.EMPTY_BLOCK);
824:       assertEquals(15, Node.NO_SIDE_EFFECTS);
825:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
826:       assertEquals(57, Node.LAST_PROP);
827:       assertEquals(55, Node.INFERRED_FUNCTION);
828:       assertEquals(4095, Node.COLUMN_MASK);
829:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
830:       assertEquals(12, Node.COLUMN_BITS);
831:       assertEquals(8, Node.FLAG_NO_THROWS);
832:       assertEquals(48, Node.DIRECTIVES);
833:       assertEquals(37, Node.OPT_ARG_NAME);
834:       assertEquals(36, Node.QUOTED_PROP);
835:       assertEquals(49, Node.DIRECT_EVAL);
836:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
837:       assertEquals(56, Node.CHANGE_TIME);
838:       assertFalse(boolean3);
839:       assertFalse(node0.isGetProp());
840:       assertFalse(node0.isComma());
841:       assertFalse(node0.isThis());
842:       assertFalse(node0.isBreak());
843:       assertFalse(node0.isInstanceOf());
844:       assertFalse(node0.isThrow());
845:       assertFalse(node0.isFalse());
846:       assertFalse(node0.isHook());
847:       assertFalse(node0.isExprResult());
848:       assertFalse(node0.isInc());
849:       assertFalse(node0.isWith());
850:       assertFalse(node0.isGetElem());
851:       assertFalse(node0.isOr());
852:       assertEquals((-1), node0.getLineno());
853:       assertFalse(node0.isLabel());
854:       assertFalse(node0.isGetterDef());
855:       assertFalse(node0.hasMoreThanOneChild());
856:       assertFalse(node0.isFor());
857:       assertFalse(node0.isEmpty());
858:       assertFalse(node0.isDo());
859:       assertEquals(39, node0.getType());
860:       assertFalse(node0.isCase());
861:       assertFalse(node0.hasOneChild());
862:       assertFalse(node0.isAssignAdd());
863:       assertFalse(node0.isTry());
864:       assertEquals((-1), node0.getCharno());
865:       assertFalse(node0.isScript());
866:       assertFalse(node0.isStringKey());
867:       assertFalse(node0.isLabelName());
868:       assertFalse(node0.isArrayLit());
869:       assertFalse(node0.isSwitch());
870:       assertFalse(node0.isParamList());
871:       assertFalse(node0.isSetterDef());
872:       assertEquals(0, node0.getChildCount());
873:       assertFalse(node0.isCatch());
874:       assertFalse(node0.isDefaultCase());
875:       assertFalse(node0.isVar());
876:       assertFalse(node0.isVoid());
877:       assertFalse(node0.isTrue());
878:       assertFalse(node0.isAdd());
879:       assertFalse(node0.isBlock());
880:       assertFalse(node0.isNew());
881:       assertFalse(node0.isRegExp());
882:       assertFalse(node0.isName());
883:       assertFalse(node0.isCall());
884:       assertFalse(node0.isIf());
885:       assertFalse(node0.isDelProp());
886:       assertFalse(node0.isNull());
887:       assertFalse(node0.isNE());
888:       assertFalse(node0.isReturn());
889:       assertTrue(node0.isNumber());
890:       assertEquals((-1), node0.getSourcePosition());
891:       assertFalse(node0.isDec());
892:       assertFalse(node0.isIn());
893:       assertFalse(node0.isTypeOf());
894:       assertFalse(node0.isContinue());
895:       assertFalse(node0.isAssign());
896:       assertFalse(node0.hasChildren());
897:       assertFalse(node0.isWhile());
898:       assertFalse(node0.isFunction());
899:       assertFalse(node0.isDebugger());
900:       assertFalse(node0.isCast());
901:       assertFalse(node0.isString());
902:       assertFalse(node0.isObjectLit());
903:       assertFalse(node0.isNot());
904:       assertFalse(node0.isAnd());
905:       assertFalse(node0.equals((Object)node2));
906:       assertFalse(node0.equals((Object)node1));
907:       assertTrue(boolean3 == boolean0);
908:       assertTrue(boolean3 == boolean2);
909:       assertFalse(boolean3 == boolean1);
910:       assertNotSame(node0, node1);
911:       
912:       boolean boolean4 = node1.isAssignAdd();
913:       assertEquals(1, Node.DECR_FLAG);
914:       assertEquals(30, Node.VAR_ARGS_NAME);
915:       assertEquals(49, Node.DIRECT_EVAL);
916:       assertEquals(32, Node.INCRDECR_PROP);
917:       assertEquals(15, Node.NO_SIDE_EFFECTS);
918:       assertEquals(2, Node.POST_FLAG);
919:       assertEquals(57, Node.LAST_PROP);
920:       assertEquals(47, Node.IS_DISPATCHER);
921:       assertEquals(12, Node.COLUMN_BITS);
922:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
923:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
924:       assertEquals(50, Node.FREE_CALL);
925:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
926:       assertEquals(40, Node.ORIGINALNAME_PROP);
927:       assertEquals(54, Node.SLASH_V);
928:       assertEquals(46, Node.IS_NAMESPACE);
929:       assertEquals(43, Node.IS_CONSTANT_NAME);
930:       assertEquals(51, Node.STATIC_SOURCE_FILE);
931:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
932:       assertEquals(55, Node.INFERRED_FUNCTION);
933:       assertEquals(4095, Node.COLUMN_MASK);
934:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
935:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
936:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
937:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
938:       assertEquals(29, Node.JSDOC_INFO_PROP);
939:       assertEquals(39, Node.EMPTY_BLOCK);
940:       assertEquals(53, Node.INPUT_ID);
941:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
942:       assertEquals(48, Node.DIRECTIVES);
943:       assertEquals(37, Node.OPT_ARG_NAME);
944:       assertEquals(52, Node.LENGTH);
945:       assertEquals(8, Node.FLAG_NO_THROWS);
946:       assertEquals(56, Node.CHANGE_TIME);
947:       assertEquals(36, Node.QUOTED_PROP);
948:       assertEquals(57, Node.REFLECTED_OBJECT);
949:       assertFalse(boolean4);
950:       assertFalse(node1.isCast());
951:       assertFalse(node1.isScript());
952:       assertFalse(node1.hasOneChild());
953:       assertFalse(node1.isGetElem());
954:       assertFalse(node1.isExprResult());
955:       assertFalse(node1.isAssign());
956:       assertFalse(node1.isWith());
957:       assertFalse(node1.isDec());
958:       assertFalse(node1.isTypeOf());
959:       assertFalse(node1.hasChildren());
960:       assertFalse(node1.isOr());
961:       assertFalse(node1.isAssignAdd());
962:       assertEquals((-1), node1.getLineno());
963:       assertFalse(node1.hasMoreThanOneChild());
964:       assertFalse(node1.isInstanceOf());
965:       assertFalse(node1.isBreak());
966:       assertFalse(node1.isCall());
967:       assertFalse(node1.isInc());
968:       assertFalse(node1.isWhile());
969:       assertFalse(node1.isContinue());
970:       assertFalse(node1.isFalse());
971:       assertFalse(node1.isComma());
972:       assertFalse(node1.isThrow());
973:       assertFalse(node1.isReturn());
974:       assertTrue(node1.isNumber());
975:       assertFalse(node1.isGetProp());
976:       assertFalse(node1.isNot());
977:       assertFalse(node1.isString());
978:       assertFalse(node1.isObjectLit());
979:       assertFalse(node1.isDebugger());
980:       assertFalse(node1.isAnd());
981:       assertEquals((-1), node1.getSourcePosition());
982:       assertFalse(node1.isTry());
983:       assertFalse(node1.isVoid());
984:       assertFalse(node1.isFunction());
985:       assertFalse(node1.isArrayLit());
986:       assertFalse(node1.isFor());
987:       assertFalse(node1.isDefaultCase());
988:       assertFalse(node1.isRegExp());
989:       assertFalse(node1.isIn());
990:       assertFalse(node1.isCatch());
991:       assertFalse(node1.isSetterDef());
992:       assertFalse(node1.isEmpty());
993:       assertFalse(node1.isIf());
994:       assertFalse(node1.isDelProp());
995:       assertFalse(node1.isName());
996:       assertFalse(node1.isNE());
997:       assertFalse(node1.isTrue());
998:       assertFalse(node1.isNull());
999:       assertFalse(node1.isNew());
1000:       assertFalse(node1.isAdd());
1001:       assertFalse(node1.isDo());
1002:       assertEquals(39, node1.getType());
1003:       assertFalse(node1.isCase());
1004:       assertFalse(node1.isVar());
1005:       assertFalse(node1.isBlock());
1006:       assertFalse(node1.isHook());
1007:       assertFalse(node1.isThis());
1008:       assertFalse(node1.isLabel());
1009:       assertEquals(0, node1.getChildCount());
1010:       assertFalse(node1.isLabelName());
1011:       assertFalse(node1.isStringKey());
1012:       assertFalse(node1.isGetterDef());
1013:       assertFalse(node1.isSwitch());
1014:       assertFalse(node1.isParamList());
1015:       assertEquals((-1), node1.getCharno());
1016:       assertFalse(node1.equals((Object)node2));
1017:       assertFalse(node1.equals((Object)node0));
1018:       assertTrue(boolean4 == boolean3);
1019:       assertTrue(boolean4 == boolean2);
1020:       assertTrue(boolean4 == boolean0);
1021:       assertFalse(boolean4 == boolean1);
1022:       assertNotSame(node1, node0);
1023:       
1024:       Node node3 = new Node((-2050), node1, node2, node1);
1025:       assertEquals(1, Node.DECR_FLAG);
1026:       assertEquals(30, Node.VAR_ARGS_NAME);
1027:       assertEquals(49, Node.DIRECT_EVAL);
1028:       assertEquals(32, Node.INCRDECR_PROP);
1029:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1030:       assertEquals(2, Node.POST_FLAG);
1031:       assertEquals(57, Node.LAST_PROP);
1032:       assertEquals(47, Node.IS_DISPATCHER);
1033:       assertEquals(12, Node.COLUMN_BITS);
1034:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1035:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1036:       assertEquals(50, Node.FREE_CALL);
1037:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1038:       assertEquals(40, Node.ORIGINALNAME_PROP);
1039:       assertEquals(54, Node.SLASH_V);
1040:       assertEquals(46, Node.IS_NAMESPACE);
1041:       assertEquals(43, Node.IS_CONSTANT_NAME);
1042:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1043:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1044:       assertEquals(55, Node.INFERRED_FUNCTION);
1045:       assertEquals(4095, Node.COLUMN_MASK);
1046:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1047:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1048:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1049:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1050:       assertEquals(29, Node.JSDOC_INFO_PROP);
1051:       assertEquals(39, Node.EMPTY_BLOCK);
1052:       assertEquals(53, Node.INPUT_ID);
1053:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1054:       assertEquals(48, Node.DIRECTIVES);
1055:       assertEquals(37, Node.OPT_ARG_NAME);
1056:       assertEquals(52, Node.LENGTH);
1057:       assertEquals(8, Node.FLAG_NO_THROWS);
1058:       assertEquals(56, Node.CHANGE_TIME);
1059:       assertEquals(36, Node.QUOTED_PROP);
1060:       assertEquals(57, Node.REFLECTED_OBJECT);
1061:       assertEquals(12, Node.COLUMN_BITS);
1062:       assertEquals(46, Node.IS_NAMESPACE);
1063:       assertEquals(30, Node.VAR_ARGS_NAME);
1064:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1065:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1066:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1067:       assertEquals(47, Node.IS_DISPATCHER);
1068:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1069:       assertEquals(57, Node.LAST_PROP);
1070:       assertEquals(1, Node.DECR_FLAG);
1071:       assertEquals(32, Node.INCRDECR_PROP);
1072:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1073:       assertEquals(40, Node.ORIGINALNAME_PROP);
1074:       assertEquals(2, Node.POST_FLAG);
1075:       assertEquals(50, Node.FREE_CALL);
1076:       assertEquals(43, Node.IS_CONSTANT_NAME);
1077:       assertEquals(54, Node.SLASH_V);
1078:       assertEquals(55, Node.INFERRED_FUNCTION);
1079:       assertEquals(4095, Node.COLUMN_MASK);
1080:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1081:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1082:       assertEquals(8, Node.FLAG_NO_THROWS);
1083:       assertEquals(39, Node.EMPTY_BLOCK);
1084:       assertEquals(53, Node.INPUT_ID);
1085:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1086:       assertEquals(57, Node.REFLECTED_OBJECT);
1087:       assertEquals(29, Node.JSDOC_INFO_PROP);
1088:       assertEquals(52, Node.LENGTH);
1089:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1090:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1091:       assertEquals(37, Node.OPT_ARG_NAME);
1092:       assertEquals(36, Node.QUOTED_PROP);
1093:       assertEquals(56, Node.CHANGE_TIME);
1094:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1095:       assertEquals(48, Node.DIRECTIVES);
1096:       assertEquals(49, Node.DIRECT_EVAL);
1097:       assertEquals(43, Node.IS_CONSTANT_NAME);
1098:       assertEquals(36, Node.QUOTED_PROP);
1099:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1100:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1101:       assertEquals(4095, Node.COLUMN_MASK);
1102:       assertEquals(48, Node.DIRECTIVES);
1103:       assertEquals(56, Node.CHANGE_TIME);
1104:       assertEquals(39, Node.EMPTY_BLOCK);
1105:       assertEquals(47, Node.IS_DISPATCHER);
1106:       assertEquals(29, Node.JSDOC_INFO_PROP);
1107:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1108:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1109:       assertEquals(8, Node.FLAG_NO_THROWS);
1110:       assertEquals(2, Node.POST_FLAG);
1111:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1112:       assertEquals(55, Node.INFERRED_FUNCTION);
1113:       assertEquals(53, Node.INPUT_ID);
1114:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1115:       assertEquals(57, Node.LAST_PROP);
1116:       assertEquals(54, Node.SLASH_V);
1117:       assertEquals(52, Node.LENGTH);
1118:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1119:       assertEquals(30, Node.VAR_ARGS_NAME);
1120:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1121:       assertEquals(57, Node.REFLECTED_OBJECT);
1122:       assertEquals(40, Node.ORIGINALNAME_PROP);
1123:       assertEquals(46, Node.IS_NAMESPACE);
1124:       assertEquals(37, Node.OPT_ARG_NAME);
1125:       assertEquals(49, Node.DIRECT_EVAL);
1126:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1127:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1128:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1129:       assertEquals(50, Node.FREE_CALL);
1130:       assertEquals(12, Node.COLUMN_BITS);
1131:       assertEquals(32, Node.INCRDECR_PROP);
1132:       assertEquals(1, Node.DECR_FLAG);
1133:       assertFalse(node1.isCast());
1134:       assertFalse(node1.isScript());
1135:       assertFalse(node1.hasOneChild());
1136:       assertFalse(node1.isGetElem());
1137:       assertFalse(node1.isExprResult());
1138:       assertFalse(node1.isAssign());
1139:       assertFalse(node1.isWith());
1140:       assertFalse(node1.isDec());
1141:       assertFalse(node1.isTypeOf());
1142:       assertFalse(node1.hasChildren());
1143:       assertFalse(node1.isOr());
1144:       assertFalse(node1.isAssignAdd());
1145:       assertEquals((-1), node1.getLineno());
1146:       assertFalse(node1.hasMoreThanOneChild());
1147:       assertFalse(node1.isInstanceOf());
1148:       assertFalse(node1.isBreak());
1149:       assertFalse(node1.isCall());
1150:       assertFalse(node1.isInc());
1151:       assertFalse(node1.isWhile());
1152:       assertFalse(node1.isContinue());
1153:       assertFalse(node1.isFalse());
1154:       assertFalse(node1.isComma());
1155:       assertFalse(node1.isThrow());
1156:       assertFalse(node1.isReturn());
1157:       assertTrue(node1.isNumber());
1158:       assertFalse(node1.isGetProp());
1159:       assertFalse(node1.isNot());
1160:       assertFalse(node1.isString());
1161:       assertFalse(node1.isObjectLit());
1162:       assertFalse(node1.isDebugger());
1163:       assertFalse(node1.isAnd());
1164:       assertEquals((-1), node1.getSourcePosition());
1165:       assertFalse(node1.isTry());
1166:       assertFalse(node1.isVoid());
1167:       assertFalse(node1.isFunction());
1168:       assertFalse(node1.isArrayLit());
1169:       assertFalse(node1.isFor());
1170:       assertFalse(node1.isDefaultCase());
1171:       assertFalse(node1.isRegExp());
1172:       assertFalse(node1.isIn());
1173:       assertFalse(node1.isCatch());
1174:       assertFalse(node1.isSetterDef());
1175:       assertFalse(node1.isEmpty());
1176:       assertFalse(node1.isIf());
1177:       assertFalse(node1.isDelProp());
1178:       assertFalse(node1.isName());
1179:       assertFalse(node1.isNE());
1180:       assertFalse(node1.isTrue());
1181:       assertFalse(node1.isNull());
1182:       assertFalse(node1.isNew());
1183:       assertFalse(node1.isAdd());
1184:       assertFalse(node1.isDo());
1185:       assertEquals(39, node1.getType());
1186:       assertFalse(node1.isCase());
1187:       assertFalse(node1.isVar());
1188:       assertFalse(node1.isBlock());
1189:       assertFalse(node1.isHook());
1190:       assertFalse(node1.isThis());
1191:       assertFalse(node1.isLabel());
1192:       assertEquals(0, node1.getChildCount());
1193:       assertFalse(node1.isLabelName());
1194:       assertFalse(node1.isStringKey());
1195:       assertFalse(node1.isGetterDef());
1196:       assertFalse(node1.isSwitch());
1197:       assertFalse(node1.isParamList());
1198:       assertEquals((-1), node1.getCharno());
1199:       assertFalse(node2.isExprResult());
1200:       assertFalse(node2.isScript());
1201:       assertFalse(node2.isWith());
1202:       assertFalse(node2.isNot());
1203:       assertFalse(node2.hasOneChild());
1204:       assertFalse(node2.isReturn());
1205:       assertFalse(node2.isThis());
1206:       assertFalse(node2.isDec());
1207:       assertFalse(node2.isTypeOf());
1208:       assertFalse(node2.isInstanceOf());
1209:       assertFalse(node2.hasChildren());
1210:       assertFalse(node2.isComma());
1211:       assertFalse(node2.hasMoreThanOneChild());
1212:       assertFalse(node2.isOr());
1213:       assertFalse(node2.isAssign());
1214:       assertFalse(node2.isGetElem());
1215:       assertFalse(node2.isBreak());
1216:       assertFalse(node2.isInc());
1217:       assertFalse(node2.isWhile());
1218:       assertFalse(node2.isThrow());
1219:       assertFalse(node2.isGetProp());
1220:       assertEquals(42, node2.getCharno());
1221:       assertFalse(node2.isObjectLit());
1222:       assertFalse(node2.isFalse());
1223:       assertFalse(node2.isAnd());
1224:       assertFalse(node2.isContinue());
1225:       assertFalse(node2.isCast());
1226:       assertFalse(node2.isDebugger());
1227:       assertFalse(node2.isTrue());
1228:       assertFalse(node2.isFunction());
1229:       assertFalse(node2.isRegExp());
1230:       assertEquals(40, node2.getType());
1231:       assertFalse(node2.isFor());
1232:       assertFalse(node2.isEmpty());
1233:       assertFalse(node2.isDefaultCase());
1234:       assertFalse(node2.isTry());
1235:       assertFalse(node2.isSetterDef());
1236:       assertFalse(node2.isNE());
1237:       assertFalse(node2.isNull());
1238:       assertFalse(node2.isIn());
1239:       assertEquals(229418, node2.getSourcePosition());
1240:       assertFalse(node2.isName());
1241:       assertFalse(node2.isCatch());
1242:       assertFalse(node2.isCall());
1243:       assertFalse(node2.isIf());
1244:       assertFalse(node2.isVoid());
1245:       assertFalse(node2.isDelProp());
1246:       assertTrue(node2.isString());
1247:       assertFalse(node2.isNew());
1248:       assertFalse(node2.isBlock());
1249:       assertFalse(node2.isAdd());
1250:       assertFalse(node2.isHook());
1251:       assertFalse(node2.isCase());
1252:       assertFalse(node2.isVar());
1253:       assertFalse(node2.isDo());
1254:       assertFalse(node2.isLabel());
1255:       assertFalse(node2.isAssignAdd());
1256:       assertFalse(node2.isParamList());
1257:       assertFalse(node2.isNumber());
1258:       assertFalse(node2.isGetterDef());
1259:       assertEquals(0, node2.getChildCount());
1260:       assertFalse(node2.isStringKey());
1261:       assertEquals(56, node2.getLineno());
1262:       assertFalse(node2.isArrayLit());
1263:       assertFalse(node2.isSwitch());
1264:       assertFalse(node2.isLabelName());
1265:       assertFalse(node3.isCall());
1266:       assertFalse(node3.isVar());
1267:       assertFalse(node3.isStringKey());
1268:       assertFalse(node3.isParamList());
1269:       assertFalse(node3.isNull());
1270:       assertEquals((-2050), node3.getType());
1271:       assertFalse(node3.isName());
1272:       assertFalse(node3.hasMoreThanOneChild());
1273:       assertFalse(node3.isCatch());
1274:       assertFalse(node3.isReturn());
1275:       assertFalse(node3.isRegExp());
1276:       assertFalse(node3.isBlock());
1277:       assertFalse(node3.isWhile());
1278:       assertFalse(node3.isTry());
1279:       assertFalse(node3.isGetElem());
1280:       assertFalse(node3.isEmpty());
1281:       assertFalse(node3.isGetterDef());
1282:       assertTrue(node3.hasOneChild());
1283:       assertFalse(node3.isNumber());
1284:       assertFalse(node3.isTypeOf());
1285:       assertFalse(node3.isAssign());
1286:       assertFalse(node3.isDec());
1287:       assertFalse(node3.isVoid());
1288:       assertFalse(node3.isTrue());
1289:       assertFalse(node3.isExprResult());
1290:       assertFalse(node3.isDelProp());
1291:       assertFalse(node3.isArrayLit());
1292:       assertFalse(node3.isLabelName());
1293:       assertFalse(node3.isLabel());
1294:       assertFalse(node3.isOr());
1295:       assertFalse(node3.isAdd());
1296:       assertFalse(node3.isDefaultCase());
1297:       assertFalse(node3.isAssignAdd());
1298:       assertFalse(node3.isNew());
1299:       assertFalse(node3.isDo());
1300:       assertFalse(node3.isFalse());
1301:       assertFalse(node3.isThrow());
1302:       assertFalse(node3.isHook());
1303:       assertFalse(node3.isComma());
1304:       assertEquals((-1), node3.getCharno());
1305:       assertFalse(node3.isSwitch());
1306:       assertFalse(node3.isBreak());
1307:       assertFalse(node3.isAnd());
1308:       assertFalse(node3.isObjectLit());
1309:       assertFalse(node3.isInstanceOf());
1310:       assertFalse(node3.isString());
1311:       assertEquals(1, node3.getChildCount());
1312:       assertFalse(node3.isWith());
1313:       assertFalse(node3.isNot());
1314:       assertFalse(node3.isGetProp());
1315:       assertFalse(node3.isThis());
1316:       assertFalse(node3.isScript());
1317:       assertFalse(node3.isCase());
1318:       assertFalse(node3.isFor());
1319:       assertFalse(node3.isCast());
1320:       assertEquals((-1), node3.getSourcePosition());
1321:       assertFalse(node3.isFunction());
1322:       assertFalse(node3.isDebugger());
1323:       assertTrue(node3.hasChildren());
1324:       assertFalse(node3.isNE());
1325:       assertFalse(node3.isIf());
1326:       assertEquals((-1), node3.getLineno());
1327:       assertFalse(node3.isContinue());
1328:       assertFalse(node3.isIn());
1329:       assertFalse(node3.isInc());
1330:       assertFalse(node3.isSetterDef());
1331:       assertNotNull(node3);
1332:       assertFalse(node1.equals((Object)node2));
1333:       assertFalse(node1.equals((Object)node0));
1334:       assertFalse(node2.equals((Object)node1));
1335:       assertFalse(node2.equals((Object)node0));
1336:       assertFalse(node3.equals((Object)node1));
1337:       assertFalse(node3.equals((Object)node2));
1338:       assertFalse(node3.equals((Object)node0));
1339:       
1340:       node3.addChildBefore(node0, node1);
1341:       assertEquals(29, Node.JSDOC_INFO_PROP);
1342:       assertEquals(53, Node.INPUT_ID);
1343:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1344:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1345:       assertEquals(2, Node.POST_FLAG);
1346:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1347:       assertEquals(47, Node.IS_DISPATCHER);
1348:       assertEquals(32, Node.INCRDECR_PROP);
1349:       assertEquals(1, Node.DECR_FLAG);
1350:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1351:       assertEquals(30, Node.VAR_ARGS_NAME);
1352:       assertEquals(46, Node.IS_NAMESPACE);
1353:       assertEquals(54, Node.SLASH_V);
1354:       assertEquals(43, Node.IS_CONSTANT_NAME);
1355:       assertEquals(40, Node.ORIGINALNAME_PROP);
1356:       assertEquals(57, Node.REFLECTED_OBJECT);
1357:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1358:       assertEquals(52, Node.LENGTH);
1359:       assertEquals(50, Node.FREE_CALL);
1360:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1361:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1362:       assertEquals(39, Node.EMPTY_BLOCK);
1363:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1364:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1365:       assertEquals(57, Node.LAST_PROP);
1366:       assertEquals(55, Node.INFERRED_FUNCTION);
1367:       assertEquals(4095, Node.COLUMN_MASK);
1368:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1369:       assertEquals(12, Node.COLUMN_BITS);
1370:       assertEquals(8, Node.FLAG_NO_THROWS);
1371:       assertEquals(48, Node.DIRECTIVES);
1372:       assertEquals(37, Node.OPT_ARG_NAME);
1373:       assertEquals(36, Node.QUOTED_PROP);
1374:       assertEquals(49, Node.DIRECT_EVAL);
1375:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1376:       assertEquals(56, Node.CHANGE_TIME);
1377:       assertEquals(1, Node.DECR_FLAG);
1378:       assertEquals(30, Node.VAR_ARGS_NAME);
1379:       assertEquals(49, Node.DIRECT_EVAL);
1380:       assertEquals(32, Node.INCRDECR_PROP);
1381:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1382:       assertEquals(2, Node.POST_FLAG);
1383:       assertEquals(57, Node.LAST_PROP);
1384:       assertEquals(47, Node.IS_DISPATCHER);
1385:       assertEquals(12, Node.COLUMN_BITS);
1386:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1387:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1388:       assertEquals(50, Node.FREE_CALL);
1389:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1390:       assertEquals(40, Node.ORIGINALNAME_PROP);
1391:       assertEquals(54, Node.SLASH_V);
1392:       assertEquals(46, Node.IS_NAMESPACE);
1393:       assertEquals(43, Node.IS_CONSTANT_NAME);
1394:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1395:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1396:       assertEquals(55, Node.INFERRED_FUNCTION);
1397:       assertEquals(4095, Node.COLUMN_MASK);
1398:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1399:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1400:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1401:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1402:       assertEquals(29, Node.JSDOC_INFO_PROP);
1403:       assertEquals(39, Node.EMPTY_BLOCK);
1404:       assertEquals(53, Node.INPUT_ID);
1405:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1406:       assertEquals(48, Node.DIRECTIVES);
1407:       assertEquals(37, Node.OPT_ARG_NAME);
1408:       assertEquals(52, Node.LENGTH);
1409:       assertEquals(8, Node.FLAG_NO_THROWS);
1410:       assertEquals(56, Node.CHANGE_TIME);
1411:       assertEquals(36, Node.QUOTED_PROP);
1412:       assertEquals(57, Node.REFLECTED_OBJECT);
1413:       assertEquals(12, Node.COLUMN_BITS);
1414:       assertEquals(46, Node.IS_NAMESPACE);
1415:       assertEquals(30, Node.VAR_ARGS_NAME);
1416:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1417:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1418:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1419:       assertEquals(47, Node.IS_DISPATCHER);
1420:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1421:       assertEquals(57, Node.LAST_PROP);
1422:       assertEquals(1, Node.DECR_FLAG);
1423:       assertEquals(32, Node.INCRDECR_PROP);
1424:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1425:       assertEquals(40, Node.ORIGINALNAME_PROP);
1426:       assertEquals(2, Node.POST_FLAG);
1427:       assertEquals(50, Node.FREE_CALL);
1428:       assertEquals(43, Node.IS_CONSTANT_NAME);
1429:       assertEquals(54, Node.SLASH_V);
1430:       assertEquals(55, Node.INFERRED_FUNCTION);
1431:       assertEquals(4095, Node.COLUMN_MASK);
1432:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1433:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1434:       assertEquals(8, Node.FLAG_NO_THROWS);
1435:       assertEquals(39, Node.EMPTY_BLOCK);
1436:       assertEquals(53, Node.INPUT_ID);
1437:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1438:       assertEquals(57, Node.REFLECTED_OBJECT);
1439:       assertEquals(29, Node.JSDOC_INFO_PROP);
1440:       assertEquals(52, Node.LENGTH);
1441:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1442:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1443:       assertEquals(37, Node.OPT_ARG_NAME);
1444:       assertEquals(36, Node.QUOTED_PROP);
1445:       assertEquals(56, Node.CHANGE_TIME);
1446:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1447:       assertEquals(48, Node.DIRECTIVES);
1448:       assertEquals(49, Node.DIRECT_EVAL);
1449:       assertEquals(43, Node.IS_CONSTANT_NAME);
1450:       assertEquals(36, Node.QUOTED_PROP);
1451:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1452:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1453:       assertEquals(4095, Node.COLUMN_MASK);
1454:       assertEquals(48, Node.DIRECTIVES);
1455:       assertEquals(56, Node.CHANGE_TIME);
1456:       assertEquals(39, Node.EMPTY_BLOCK);
1457:       assertEquals(47, Node.IS_DISPATCHER);
1458:       assertEquals(29, Node.JSDOC_INFO_PROP);
1459:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1460:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1461:       assertEquals(8, Node.FLAG_NO_THROWS);
1462:       assertEquals(2, Node.POST_FLAG);
1463:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1464:       assertEquals(55, Node.INFERRED_FUNCTION);
1465:       assertEquals(53, Node.INPUT_ID);
1466:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1467:       assertEquals(57, Node.LAST_PROP);
1468:       assertEquals(54, Node.SLASH_V);
1469:       assertEquals(52, Node.LENGTH);
1470:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1471:       assertEquals(30, Node.VAR_ARGS_NAME);
1472:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1473:       assertEquals(57, Node.REFLECTED_OBJECT);
1474:       assertEquals(40, Node.ORIGINALNAME_PROP);
1475:       assertEquals(46, Node.IS_NAMESPACE);
1476:       assertEquals(37, Node.OPT_ARG_NAME);
1477:       assertEquals(49, Node.DIRECT_EVAL);
1478:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1479:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1480:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1481:       assertEquals(50, Node.FREE_CALL);
1482:       assertEquals(12, Node.COLUMN_BITS);
1483:       assertEquals(32, Node.INCRDECR_PROP);
1484:       assertEquals(1, Node.DECR_FLAG);
1485:       assertFalse(node0.isGetProp());
1486:       assertFalse(node0.isComma());
1487:       assertFalse(node0.isThis());
1488:       assertFalse(node0.isBreak());
1489:       assertFalse(node0.isInstanceOf());
1490:       assertFalse(node0.isThrow());
1491:       assertFalse(node0.isFalse());
1492:       assertFalse(node0.isHook());
1493:       assertFalse(node0.isExprResult());
1494:       assertFalse(node0.isInc());
1495:       assertFalse(node0.isWith());
1496:       assertFalse(node0.isGetElem());
1497:       assertFalse(node0.isOr());
1498:       assertEquals((-1), node0.getLineno());
1499:       assertFalse(node0.isLabel());
1500:       assertFalse(node0.isGetterDef());
1501:       assertFalse(node0.hasMoreThanOneChild());
1502:       assertFalse(node0.isFor());
1503:       assertFalse(node0.isEmpty());
1504:       assertFalse(node0.isDo());
1505:       assertEquals(39, node0.getType());
1506:       assertFalse(node0.isCase());
1507:       assertFalse(node0.hasOneChild());
1508:       assertFalse(node0.isAssignAdd());
1509:       assertFalse(node0.isTry());
1510:       assertEquals((-1), node0.getCharno());
1511:       assertFalse(node0.isScript());
1512:       assertFalse(node0.isStringKey());
1513:       assertFalse(node0.isLabelName());
1514:       assertFalse(node0.isArrayLit());
1515:       assertFalse(node0.isSwitch());
1516:       assertFalse(node0.isParamList());
1517:       assertFalse(node0.isSetterDef());
1518:       assertEquals(0, node0.getChildCount());
1519:       assertFalse(node0.isCatch());
1520:       assertFalse(node0.isDefaultCase());
1521:       assertFalse(node0.isVar());
1522:       assertFalse(node0.isVoid());
1523:       assertFalse(node0.isTrue());
1524:       assertFalse(node0.isAdd());
1525:       assertFalse(node0.isBlock());
1526:       assertFalse(node0.isNew());
1527:       assertFalse(node0.isRegExp());
1528:       assertFalse(node0.isName());
1529:       assertFalse(node0.isCall());
1530:       assertFalse(node0.isIf());
1531:       assertFalse(node0.isDelProp());
1532:       assertFalse(node0.isNull());
1533:       assertFalse(node0.isNE());
1534:       assertFalse(node0.isReturn());
1535:       assertTrue(node0.isNumber());
1536:       assertEquals((-1), node0.getSourcePosition());
1537:       assertFalse(node0.isDec());
1538:       assertFalse(node0.isIn());
1539:       assertFalse(node0.isTypeOf());
1540:       assertFalse(node0.isContinue());
1541:       assertFalse(node0.isAssign());
1542:       assertFalse(node0.hasChildren());
1543:       assertFalse(node0.isWhile());
1544:       assertFalse(node0.isFunction());
1545:       assertFalse(node0.isDebugger());
1546:       assertFalse(node0.isCast());
1547:       assertFalse(node0.isString());
1548:       assertFalse(node0.isObjectLit());
1549:       assertFalse(node0.isNot());
1550:       assertFalse(node0.isAnd());
1551:       assertFalse(node1.isCast());
1552:       assertFalse(node1.isScript());
1553:       assertFalse(node1.hasOneChild());
1554:       assertFalse(node1.isGetElem());
1555:       assertFalse(node1.isExprResult());
1556:       assertFalse(node1.isAssign());
1557:       assertFalse(node1.isWith());
1558:       assertFalse(node1.isDec());
1559:       assertFalse(node1.isTypeOf());
1560:       assertFalse(node1.hasChildren());
1561:       assertFalse(node1.isOr());
1562:       assertFalse(node1.isAssignAdd());
1563:       assertEquals((-1), node1.getLineno());
1564:       assertFalse(node1.hasMoreThanOneChild());
1565:       assertFalse(node1.isInstanceOf());
1566:       assertFalse(node1.isBreak());
1567:       assertFalse(node1.isCall());
1568:       assertFalse(node1.isInc());
1569:       assertFalse(node1.isWhile());
1570:       assertFalse(node1.isContinue());
1571:       assertFalse(node1.isFalse());
1572:       assertFalse(node1.isComma());
1573:       assertFalse(node1.isThrow());
1574:       assertFalse(node1.isReturn());
1575:       assertTrue(node1.isNumber());
1576:       assertFalse(node1.isGetProp());
1577:       assertFalse(node1.isNot());
1578:       assertFalse(node1.isString());
1579:       assertFalse(node1.isObjectLit());
1580:       assertFalse(node1.isDebugger());
1581:       assertFalse(node1.isAnd());
1582:       assertEquals((-1), node1.getSourcePosition());
1583:       assertFalse(node1.isTry());
1584:       assertFalse(node1.isVoid());
1585:       assertFalse(node1.isFunction());
1586:       assertFalse(node1.isArrayLit());
1587:       assertFalse(node1.isFor());
1588:       assertFalse(node1.isDefaultCase());
1589:       assertFalse(node1.isRegExp());
1590:       assertFalse(node1.isIn());
1591:       assertFalse(node1.isCatch());
1592:       assertFalse(node1.isSetterDef());
1593:       assertFalse(node1.isEmpty());
1594:       assertFalse(node1.isIf());
1595:       assertFalse(node1.isDelProp());
1596:       assertFalse(node1.isName());
1597:       assertFalse(node1.isNE());
1598:       assertFalse(node1.isTrue());
1599:       assertFalse(node1.isNull());
1600:       assertFalse(node1.isNew());
1601:       assertFalse(node1.isAdd());
1602:       assertFalse(node1.isDo());
1603:       assertEquals(39, node1.getType());
1604:       assertFalse(node1.isCase());
1605:       assertFalse(node1.isVar());
1606:       assertFalse(node1.isBlock());
1607:       assertFalse(node1.isHook());
1608:       assertFalse(node1.isThis());
1609:       assertFalse(node1.isLabel());
1610:       assertEquals(0, node1.getChildCount());
1611:       assertFalse(node1.isLabelName());
1612:       assertFalse(node1.isStringKey());
1613:       assertFalse(node1.isGetterDef());
1614:       assertFalse(node1.isSwitch());
1615:       assertFalse(node1.isParamList());
1616:       assertEquals((-1), node1.getCharno());
1617:       assertFalse(node2.isExprResult());
1618:       assertFalse(node2.isScript());
1619:       assertFalse(node2.isWith());
1620:       assertFalse(node2.isNot());
1621:       assertFalse(node2.hasOneChild());
1622:       assertFalse(node2.isReturn());
1623:       assertFalse(node2.isThis());
1624:       assertFalse(node2.isDec());
1625:       assertFalse(node2.isTypeOf());
1626:       assertFalse(node2.isInstanceOf());
1627:       assertFalse(node2.hasChildren());
1628:       assertFalse(node2.isComma());
1629:       assertFalse(node2.hasMoreThanOneChild());
1630:       assertFalse(node2.isOr());
1631:       assertFalse(node2.isAssign());
1632:       assertFalse(node2.isGetElem());
1633:       assertFalse(node2.isBreak());
1634:       assertFalse(node2.isInc());
1635:       assertFalse(node2.isWhile());
1636:       assertFalse(node2.isThrow());
1637:       assertFalse(node2.isGetProp());
1638:       assertEquals(42, node2.getCharno());
1639:       assertFalse(node2.isObjectLit());
1640:       assertFalse(node2.isFalse());
1641:       assertFalse(node2.isAnd());
1642:       assertFalse(node2.isContinue());
1643:       assertFalse(node2.isCast());
1644:       assertFalse(node2.isDebugger());
1645:       assertFalse(node2.isTrue());
1646:       assertFalse(node2.isFunction());
1647:       assertFalse(node2.isRegExp());
1648:       assertEquals(40, node2.getType());
1649:       assertFalse(node2.isFor());
1650:       assertFalse(node2.isEmpty());
1651:       assertFalse(node2.isDefaultCase());
1652:       assertFalse(node2.isTry());
1653:       assertFalse(node2.isSetterDef());
1654:       assertFalse(node2.isNE());
1655:       assertFalse(node2.isNull());
1656:       assertFalse(node2.isIn());
1657:       assertEquals(229418, node2.getSourcePosition());
1658:       assertFalse(node2.isName());
1659:       assertFalse(node2.isCatch());
1660:       assertFalse(node2.isCall());
1661:       assertFalse(node2.isIf());
1662:       assertFalse(node2.isVoid());
1663:       assertFalse(node2.isDelProp());
1664:       assertTrue(node2.isString());
1665:       assertFalse(node2.isNew());
1666:       assertFalse(node2.isBlock());
1667:       assertFalse(node2.isAdd());
1668:       assertFalse(node2.isHook());
1669:       assertFalse(node2.isCase());
1670:       assertFalse(node2.isVar());
1671:       assertFalse(node2.isDo());
1672:       assertFalse(node2.isLabel());
1673:       assertFalse(node2.isAssignAdd());
1674:       assertFalse(node2.isParamList());
1675:       assertFalse(node2.isNumber());
1676:       assertFalse(node2.isGetterDef());
1677:       assertEquals(0, node2.getChildCount());
1678:       assertFalse(node2.isStringKey());
1679:       assertEquals(56, node2.getLineno());
1680:       assertFalse(node2.isArrayLit());
1681:       assertFalse(node2.isSwitch());
1682:       assertFalse(node2.isLabelName());
1683:       assertFalse(node3.isCall());
1684:       assertFalse(node3.isVar());
1685:       assertFalse(node3.isStringKey());
1686:       assertFalse(node3.isParamList());
1687:       assertFalse(node3.isNull());
1688:       assertEquals((-2050), node3.getType());
1689:       assertFalse(node3.isName());
1690:       assertFalse(node3.isCatch());
1691:       assertFalse(node3.isReturn());
1692:       assertFalse(node3.isRegExp());
1693:       assertFalse(node3.isBlock());
1694:       assertFalse(node3.isWhile());
1695:       assertFalse(node3.isTry());
1696:       assertFalse(node3.isGetElem());
1697:       assertFalse(node3.isEmpty());
1698:       assertFalse(node3.isGetterDef());
1699:       assertFalse(node3.isNumber());
1700:       assertFalse(node3.isTypeOf());
1701:       assertFalse(node3.isAssign());
1702:       assertFalse(node3.isDec());
1703:       assertFalse(node3.isVoid());
1704:       assertFalse(node3.isTrue());
1705:       assertFalse(node3.isExprResult());
1706:       assertFalse(node3.isDelProp());
1707:       assertFalse(node3.isArrayLit());
1708:       assertFalse(node3.isLabelName());
1709:       assertFalse(node3.isLabel());
1710:       assertFalse(node3.isOr());
1711:       assertFalse(node3.isAdd());
1712:       assertFalse(node3.isDefaultCase());
1713:       assertFalse(node3.isAssignAdd());
1714:       assertFalse(node3.isNew());
1715:       assertFalse(node3.isDo());
1716:       assertFalse(node3.isFalse());
1717:       assertFalse(node3.isThrow());
1718:       assertFalse(node3.isHook());
1719:       assertFalse(node3.isComma());
1720:       assertEquals((-1), node3.getCharno());
1721:       assertFalse(node3.isSwitch());
1722:       assertFalse(node3.isBreak());
1723:       assertTrue(node3.hasMoreThanOneChild());
1724:       assertFalse(node3.isAnd());
1725:       assertFalse(node3.isObjectLit());
1726:       assertFalse(node3.isInstanceOf());
1727:       assertFalse(node3.isString());
1728:       assertFalse(node3.isWith());
1729:       assertFalse(node3.isNot());
1730:       assertFalse(node3.isGetProp());
1731:       assertFalse(node3.isThis());
1732:       assertFalse(node3.isScript());
1733:       assertFalse(node3.isCase());
1734:       assertFalse(node3.hasOneChild());
1735:       assertFalse(node3.isFor());
1736:       assertFalse(node3.isCast());
1737:       assertEquals((-1), node3.getSourcePosition());
1738:       assertFalse(node3.isFunction());
1739:       assertFalse(node3.isDebugger());
1740:       assertTrue(node3.hasChildren());
1741:       assertFalse(node3.isNE());
1742:       assertFalse(node3.isIf());
1743:       assertEquals((-1), node3.getLineno());
1744:       assertFalse(node3.isContinue());
1745:       assertEquals(2, node3.getChildCount());
1746:       assertFalse(node3.isIn());
1747:       assertFalse(node3.isInc());
1748:       assertFalse(node3.isSetterDef());
1749:       assertFalse(node0.equals((Object)node2));
1750:       assertFalse(node0.equals((Object)node1));
1751:       assertFalse(node0.equals((Object)node3));
1752:       assertFalse(node1.equals((Object)node3));
1753:       assertFalse(node1.equals((Object)node2));
1754:       assertFalse(node1.equals((Object)node0));
1755:       assertFalse(node2.equals((Object)node1));
1756:       assertFalse(node2.equals((Object)node0));
1757:       assertFalse(node2.equals((Object)node3));
1758:       assertFalse(node3.equals((Object)node1));
1759:       assertFalse(node3.equals((Object)node2));
1760:       assertFalse(node3.equals((Object)node0));
1761:       assertNotSame(node0, node1);
1762:       assertNotSame(node1, node0);
1763:       
1764:       Node node4 = Node.newNumber(1.2, (-2050), 41);
1765:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1766:       assertEquals(43, Node.IS_CONSTANT_NAME);
1767:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1768:       assertEquals(53, Node.INPUT_ID);
1769:       assertEquals(39, Node.EMPTY_BLOCK);
1770:       assertEquals(36, Node.QUOTED_PROP);
1771:       assertEquals(55, Node.INFERRED_FUNCTION);
1772:       assertEquals(8, Node.FLAG_NO_THROWS);
1773:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1774:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1775:       assertEquals(56, Node.CHANGE_TIME);
1776:       assertEquals(57, Node.REFLECTED_OBJECT);
1777:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1778:       assertEquals(48, Node.DIRECTIVES);
1779:       assertEquals(37, Node.OPT_ARG_NAME);
1780:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1781:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1782:       assertEquals(4095, Node.COLUMN_MASK);
1783:       assertEquals(1, Node.DECR_FLAG);
1784:       assertEquals(49, Node.DIRECT_EVAL);
1785:       assertEquals(30, Node.VAR_ARGS_NAME);
1786:       assertEquals(12, Node.COLUMN_BITS);
1787:       assertEquals(32, Node.INCRDECR_PROP);
1788:       assertEquals(46, Node.IS_NAMESPACE);
1789:       assertEquals(57, Node.LAST_PROP);
1790:       assertEquals(54, Node.SLASH_V);
1791:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1792:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1793:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1794:       assertEquals(52, Node.LENGTH);
1795:       assertEquals(29, Node.JSDOC_INFO_PROP);
1796:       assertEquals(50, Node.FREE_CALL);
1797:       assertEquals(40, Node.ORIGINALNAME_PROP);
1798:       assertEquals(47, Node.IS_DISPATCHER);
1799:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1800:       assertEquals(2, Node.POST_FLAG);
1801:       assertFalse(node4.isAdd());
1802:       assertFalse(node4.isNew());
1803:       assertFalse(node4.isBlock());
1804:       assertFalse(node4.isVar());
1805:       assertFalse(node4.isStringKey());
1806:       assertFalse(node4.isName());
1807:       assertFalse(node4.isDo());
1808:       assertFalse(node4.isNull());
1809:       assertFalse(node4.isSetterDef());
1810:       assertEquals(0, node4.getChildCount());
1811:       assertFalse(node4.isLabel());
1812:       assertFalse(node4.isParamList());
1813:       assertFalse(node4.isAssignAdd());
1814:       assertFalse(node4.isLabelName());
1815:       assertFalse(node4.isFunction());
1816:       assertFalse(node4.isCast());
1817:       assertFalse(node4.isContinue());
1818:       assertFalse(node4.isTry());
1819:       assertFalse(node4.isArrayLit());
1820:       assertFalse(node4.hasOneChild());
1821:       assertFalse(node4.isGetterDef());
1822:       assertFalse(node4.isScript());
1823:       assertEquals((-1), node4.getLineno());
1824:       assertFalse(node4.isThis());
1825:       assertFalse(node4.isNE());
1826:       assertFalse(node4.isIf());
1827:       assertFalse(node4.isFor());
1828:       assertEquals(39, node4.getType());
1829:       assertFalse(node4.isCatch());
1830:       assertFalse(node4.isRegExp());
1831:       assertFalse(node4.isInstanceOf());
1832:       assertFalse(node4.isWith());
1833:       assertFalse(node4.hasMoreThanOneChild());
1834:       assertFalse(node4.isHook());
1835:       assertEquals((-1), node4.getCharno());
1836:       assertFalse(node4.isThrow());
1837:       assertFalse(node4.isSwitch());
1838:       assertFalse(node4.isString());
1839:       assertFalse(node4.isCase());
1840:       assertFalse(node4.isInc());
1841:       assertFalse(node4.isIn());
1842:       assertFalse(node4.isAnd());
1843:       assertFalse(node4.isFalse());
1844:       assertFalse(node4.isTrue());
1845:       assertFalse(node4.isVoid());
1846:       assertFalse(node4.isDefaultCase());
1847:       assertFalse(node4.isEmpty());
1848:       assertFalse(node4.isNot());
1849:       assertEquals((-1), node4.getSourcePosition());
1850:       assertFalse(node4.isDebugger());
1851:       assertFalse(node4.isObjectLit());
1852:       assertFalse(node4.isReturn());
1853:       assertTrue(node4.isNumber());
1854:       assertFalse(node4.isOr());
1855:       assertFalse(node4.isGetProp());
1856:       assertFalse(node4.isDelProp());
1857:       assertFalse(node4.isWhile());
1858:       assertFalse(node4.isAssign());
1859:       assertFalse(node4.isDec());
1860:       assertFalse(node4.isGetElem());
1861:       assertFalse(node4.isBreak());
1862:       assertFalse(node4.hasChildren());
1863:       assertFalse(node4.isCall());
1864:       assertFalse(node4.isComma());
1865:       assertFalse(node4.isExprResult());
1866:       assertFalse(node4.isTypeOf());
1867:       assertNotNull(node4);
1868:       assertFalse(node4.equals((Object)node0));
1869:       assertFalse(node4.equals((Object)node3));
1870:       assertFalse(node4.equals((Object)node1));
1871:       assertFalse(node4.equals((Object)node2));
1872:       assertNotSame(node4, node0);
1873:       assertNotSame(node4, node1);
1874:       
1875:       Iterable<Node> iterable0 = node2.children();
1876:       assertEquals(12, Node.COLUMN_BITS);
1877:       assertEquals(46, Node.IS_NAMESPACE);
1878:       assertEquals(30, Node.VAR_ARGS_NAME);
1879:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1880:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1881:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1882:       assertEquals(47, Node.IS_DISPATCHER);
1883:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1884:       assertEquals(57, Node.LAST_PROP);
1885:       assertEquals(1, Node.DECR_FLAG);
1886:       assertEquals(32, Node.INCRDECR_PROP);
1887:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1888:       assertEquals(40, Node.ORIGINALNAME_PROP);
1889:       assertEquals(2, Node.POST_FLAG);
1890:       assertEquals(50, Node.FREE_CALL);
1891:       assertEquals(43, Node.IS_CONSTANT_NAME);
1892:       assertEquals(54, Node.SLASH_V);
1893:       assertEquals(55, Node.INFERRED_FUNCTION);
1894:       assertEquals(4095, Node.COLUMN_MASK);
1895:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
1896:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
1897:       assertEquals(8, Node.FLAG_NO_THROWS);
1898:       assertEquals(39, Node.EMPTY_BLOCK);
1899:       assertEquals(53, Node.INPUT_ID);
1900:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
1901:       assertEquals(57, Node.REFLECTED_OBJECT);
1902:       assertEquals(29, Node.JSDOC_INFO_PROP);
1903:       assertEquals(52, Node.LENGTH);
1904:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
1905:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
1906:       assertEquals(37, Node.OPT_ARG_NAME);
1907:       assertEquals(36, Node.QUOTED_PROP);
1908:       assertEquals(56, Node.CHANGE_TIME);
1909:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
1910:       assertEquals(48, Node.DIRECTIVES);
1911:       assertEquals(49, Node.DIRECT_EVAL);
1912:       assertFalse(node2.isExprResult());
1913:       assertFalse(node2.isScript());
1914:       assertFalse(node2.isWith());
1915:       assertFalse(node2.isNot());
1916:       assertFalse(node2.hasOneChild());
1917:       assertFalse(node2.isReturn());
1918:       assertFalse(node2.isThis());
1919:       assertFalse(node2.isDec());
1920:       assertFalse(node2.isTypeOf());
1921:       assertFalse(node2.isInstanceOf());
1922:       assertFalse(node2.hasChildren());
1923:       assertFalse(node2.isComma());
1924:       assertFalse(node2.hasMoreThanOneChild());
1925:       assertFalse(node2.isOr());
1926:       assertFalse(node2.isAssign());
1927:       assertFalse(node2.isGetElem());
1928:       assertFalse(node2.isBreak());
1929:       assertFalse(node2.isInc());
1930:       assertFalse(node2.isWhile());
1931:       assertFalse(node2.isThrow());
1932:       assertFalse(node2.isGetProp());
1933:       assertEquals(42, node2.getCharno());
1934:       assertFalse(node2.isObjectLit());
1935:       assertFalse(node2.isFalse());
1936:       assertFalse(node2.isAnd());
1937:       assertFalse(node2.isContinue());
1938:       assertFalse(node2.isCast());
1939:       assertFalse(node2.isDebugger());
1940:       assertFalse(node2.isTrue());
1941:       assertFalse(node2.isFunction());
1942:       assertFalse(node2.isRegExp());
1943:       assertEquals(40, node2.getType());
1944:       assertFalse(node2.isFor());
1945:       assertFalse(node2.isEmpty());
1946:       assertFalse(node2.isDefaultCase());
1947:       assertFalse(node2.isTry());
1948:       assertFalse(node2.isSetterDef());
1949:       assertFalse(node2.isNE());
1950:       assertFalse(node2.isNull());
1951:       assertFalse(node2.isIn());
1952:       assertEquals(229418, node2.getSourcePosition());
1953:       assertFalse(node2.isName());
1954:       assertFalse(node2.isCatch());
1955:       assertFalse(node2.isCall());
1956:       assertFalse(node2.isIf());
1957:       assertFalse(node2.isVoid());
1958:       assertFalse(node2.isDelProp());
1959:       assertTrue(node2.isString());
1960:       assertFalse(node2.isNew());
1961:       assertFalse(node2.isBlock());
1962:       assertFalse(node2.isAdd());
1963:       assertFalse(node2.isHook());
1964:       assertFalse(node2.isCase());
1965:       assertFalse(node2.isVar());
1966:       assertFalse(node2.isDo());
1967:       assertFalse(node2.isLabel());
1968:       assertFalse(node2.isAssignAdd());
1969:       assertFalse(node2.isParamList());
1970:       assertFalse(node2.isNumber());
1971:       assertFalse(node2.isGetterDef());
1972:       assertEquals(0, node2.getChildCount());
1973:       assertFalse(node2.isStringKey());
1974:       assertEquals(56, node2.getLineno());
1975:       assertFalse(node2.isArrayLit());
1976:       assertFalse(node2.isSwitch());
1977:       assertFalse(node2.isLabelName());
1978:       assertNotNull(iterable0);
1979:       assertFalse(node2.equals((Object)node1));
1980:       assertFalse(node2.equals((Object)node0));
1981:       assertFalse(node2.equals((Object)node3));
1982:       assertFalse(node2.equals((Object)node4));
1983:       assertFalse(iterable0.contains(node0));
1984:       
1985:       boolean boolean5 = node2.isNull();
1986:       assertEquals(12, Node.COLUMN_BITS);
1987:       assertEquals(46, Node.IS_NAMESPACE);
1988:       assertEquals(30, Node.VAR_ARGS_NAME);
1989:       assertEquals(51, Node.STATIC_SOURCE_FILE);
1990:       assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
1991:       assertEquals(15, Node.NO_SIDE_EFFECTS);
1992:       assertEquals(47, Node.IS_DISPATCHER);
1993:       assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
1994:       assertEquals(57, Node.LAST_PROP);
1995:       assertEquals(1, Node.DECR_FLAG);
1996:       assertEquals(32, Node.INCRDECR_PROP);
1997:       assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
1998:       assertEquals(40, Node.ORIGINALNAME_PROP);
1999:       assertEquals(2, Node.POST_FLAG);
2000:       assertEquals(50, Node.FREE_CALL);
2001:       assertEquals(43, Node.IS_CONSTANT_NAME);
2002:       assertEquals(54, Node.SLASH_V);
2003:       assertEquals(55, Node.INFERRED_FUNCTION);
2004:       assertEquals(4095, Node.COLUMN_MASK);
2005:       assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
2006:       assertEquals(42, Node.SIDE_EFFECT_FLAGS);
2007:       assertEquals(8, Node.FLAG_NO_THROWS);
2008:       assertEquals(39, Node.EMPTY_BLOCK);
2009:       assertEquals(53, Node.INPUT_ID);
2010:       assertEquals(0, Node.SIDE_EFFECTS_ALL);
2011:       assertEquals(57, Node.REFLECTED_OBJECT);
2012:       assertEquals(29, Node.JSDOC_INFO_PROP);
2013:       assertEquals(52, Node.LENGTH);
2014:       assertEquals(4095, Node.MAX_COLUMN_NUMBER);
2015:       assertEquals(16, Node.FLAG_LOCAL_RESULTS);
2016:       assertEquals(37, Node.OPT_ARG_NAME);
2017:       assertEquals(36, Node.QUOTED_PROP);
2018:       assertEquals(56, Node.CHANGE_TIME);
2019:       assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
2020:       assertEquals(48, Node.DIRECTIVES);
2021:       assertEquals(49, Node.DIRECT_EVAL);
2022:       assertFalse(boolean5);
2023:       assertFalse(node2.isExprResult());
2024:       assertFalse(node2.isScript());
2025:       assertFalse(node2.isWith());
2026:       assertFalse(node2.isNot());
2027:       assertFalse(node2.hasOneChild());
2028:       assertFalse(node2.isReturn());
2029:       assertFalse(node2.isThis());
2030:       assertFalse(node2.isDec());
2031:       assertFalse(node2.isTypeOf());
2032:       assertFalse(node2.isInstanceOf());
2033:       assertFalse(node2.hasChildren());
2034:       assertFalse(node2.isComma());
2035:       assertFalse(node2.hasMoreThanOneChild());
2036:       assertFalse(node2.isOr());
2037:       assertFalse(node2.isAssign());
2038:       assertFalse(node2.isGetElem());
2039:       assertFalse(node2.isBreak());
2040:       assertFalse(node2.isInc());
2041:       assertFalse(node2.isWhile());
2042:       assertFalse(node2.isThrow());
2043:       assertFalse(node2.isGetProp());
2044:       assertEquals(42, node2.getCharno());
2045:       assertFalse(node2.isObjectLit());
2046:       assertFalse(node2.isFalse());
2047:       assertFalse(node2.isAnd());
2048:       assertFalse(node2.isContinue());
2049:       assertFalse(node2.isCast());
2050:       assertFalse(node2.isDebugger());
2051:       assertFalse(node2.isTrue());
2052:       assertFalse(node2.isFunction());
2053:       assertFalse(node2.isRegExp());
2054:       assertEquals(40, node2.getType());
2055:       assertFalse(node2.isFor());
2056:       assertFalse(node2.isEmpty());
2057:       assertFalse(node2.isDefaultCase());
2058:       assertFalse(node2.isTry());
2059:       assertFalse(node2.isSetterDef());
2060:       assertFalse(node2.isNE());
2061:       assertFalse(node2.isNull());
2062:       assertFalse(node2.isIn());
2063:       assertEquals(229418, node2.getSourcePosition());
2064:       assertFalse(node2.isName());
2065:       assertFalse(node2.isCatch());
2066:       assertFalse(node2.isCall());
2067:       assertFalse(node2.isIf());
2068:       assertFalse(node2.isVoid());
2069:       assertFalse(node2.isDelProp());
2070:       assertTrue(node2.isString());
2071:       assertFalse(node2.isNew());
2072:       assertFalse(node2.isBlock());
2073:       assertFalse(node2.isAdd());
2074:       assertFalse(node2.isHook());
2075:       assertFalse(node2.isCase());
2076:       assertFalse(node2.isVar());
2077:       assertFalse(node2.isDo());
2078:       assertFalse(node2.isLabel());
2079:       assertFalse(node2.isAssignAdd());
2080:       assertFalse(node2.isParamList());
2081:       assertFalse(node2.isNumber());
2082:       assertFalse(node2.isGetterDef());
2083:       assertEquals(0, node2.getChildCount());
2084:       assertFalse(node2.isStringKey());
2085:       assertEquals(56, node2.getLineno());
2086:       assertFalse(node2.isArrayLit());
2087:       assertFalse(node2.isSwitch());
2088:       assertFalse(node2.isLabelName());
2089:       assertTrue(boolean5 == boolean4);
2090:       assertTrue(boolean5 == boolean3);
2091:       assertFalse(boolean5 == boolean1);
2092:       assertTrue(boolean5 == boolean0);
2093:       assertTrue(boolean5 == boolean2);
2094:       assertFalse(node2.equals((Object)node1));
2095:       assertFalse(node2.equals((Object)node0));
2096:       assertFalse(node2.equals((Object)node3));
2097:       assertFalse(node2.equals((Object)node4));
2098:   }
2099: }
RegularFileObject[/tmp/EvoSuite_225_1628158417768/com/google/javascript/rhino/Node_225_tmp__ESTest.java]
1: /**
2:  * Scaffolding file used to store all the setups needed to run 
3:  * tests automatically generated by EvoSuite
4:  * Thu Aug 05 10:13:38 GMT 2021
5:  */
6: 
7: package com.google.javascript.rhino;
8: 
9: import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
10: import org.junit.BeforeClass;
11: import org.junit.Before;
12: import org.junit.After;
13: import org.evosuite.runtime.sandbox.Sandbox;
14: import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;
15: 
16: @EvoSuiteClassExclude
17: public class Node_225_tmp__ESTest_scaffolding {
18: 
19:   @org.junit.Rule 
20:   public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();
21: 
22:   private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);
23: 
24: 
25:   @BeforeClass 
26:   public static void initEvoSuiteFramework() { 
27:     org.evosuite.runtime.RuntimeSettings.className = "com.google.javascript.rhino.Node"; 
28:     org.evosuite.runtime.GuiSupport.initialize(); 
29:     org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
30:     org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
31:     org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
32:     org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
33:     org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
34:     org.evosuite.runtime.classhandling.JDKClassResetter.init();
35:     setSystemProperties();
36:     initializeClasses();
37:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
38:   } 
39: 
40:   @Before 
41:   public void initTestCase(){ 
42:     threadStopper.storeCurrentThreads();
43:     threadStopper.startRecordingTime();
44:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
45:     org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
46:     org.evosuite.runtime.GuiSupport.setHeadless(); 
47:     org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
48:     org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
49:   } 
50: 
51:   @After 
52:   public void doneWithTestCase(){ 
53:     threadStopper.killAndJoinClientThreads();
54:     org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
55:     org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
56:     resetClasses(); 
57:     org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
58:     org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
59:     org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
60:   } 
61: 
62:   public static void setSystemProperties() {
63:  
64:     /*No java.lang.System property to set*/
65:   }
66: 
67:   private static void initializeClasses() {
68:     org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Node_225_tmp__ESTest_scaffolding.class.getClassLoader() ,
69:       "com.google.common.collect.ArrayListMultimap",
70:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
71:       "com.google.common.collect.ImmutableList$SubList",
72:       "com.google.javascript.rhino.jstype.NoType",
73:       "com.google.javascript.rhino.JSDocInfo$Visibility",
74:       "com.google.common.collect.ListMultimap",
75:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
76:       "com.google.javascript.rhino.jstype.ArrowType",
77:       "com.google.javascript.rhino.SimpleErrorReporter",
78:       "com.google.common.collect.Lists$RandomAccessPartition",
79:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
80:       "com.google.common.collect.Collections2",
81:       "com.google.javascript.rhino.jstype.NumberType",
82:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
83:       "com.google.common.collect.PeekingIterator",
84:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
85:       "com.google.common.collect.RegularImmutableList",
86:       "com.google.common.collect.LinkedHashMultimap$ValueSetLink",
87:       "com.google.javascript.rhino.jstype.StaticScope",
88:       "com.google.javascript.rhino.jstype.InstanceObjectType",
89:       "com.google.common.collect.Lists$TransformingRandomAccessList",
90:       "com.google.javascript.rhino.Node$PropListItem",
91:       "com.google.javascript.rhino.Node$IntPropListItem",
92:       "com.google.common.collect.Sets$2",
93:       "com.google.common.collect.Maps$KeySet",
94:       "com.google.common.collect.Sets$3",
95:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
96:       "com.google.common.collect.LinkedHashMultimap",
97:       "com.google.javascript.rhino.Node",
98:       "com.google.javascript.rhino.jstype.ObjectType",
99:       "com.google.common.collect.Sets$1",
100:       "com.google.common.collect.ImmutableMapKeySet",
101:       "com.google.javascript.rhino.JSDocInfo$Marker",
102:       "com.google.common.collect.RegularImmutableMap",
103:       "com.google.common.collect.RegularImmutableBiMap",
104:       "com.google.javascript.rhino.Node$NodeMismatch",
105:       "com.google.javascript.rhino.jstype.RecordType",
106:       "com.google.common.collect.SortedMapDifference",
107:       "com.google.javascript.rhino.jstype.ModificationVisitor",
108:       "com.google.javascript.rhino.jstype.PropertyMap$1",
109:       "com.google.common.collect.AbstractMapEntry",
110:       "com.google.javascript.rhino.Node$AncestorIterable$1",
111:       "com.google.common.collect.Iterators$12",
112:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
113:       "com.google.common.collect.Iterators$11",
114:       "com.google.javascript.rhino.jstype.JSType$1",
115:       "com.google.common.collect.EmptyImmutableBiMap",
116:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
117:       "com.google.common.base.Predicate",
118:       "com.google.javascript.rhino.jstype.JSType$2",
119:       "com.google.javascript.rhino.jstype.VoidType",
120:       "com.google.common.base.Joiner",
121:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
122:       "com.google.common.collect.AbstractListMultimap",
123:       "com.google.common.collect.Iterables",
124:       "com.google.javascript.rhino.jstype.JSType",
125:       "com.google.common.collect.ImmutableAsList",
126:       "com.google.javascript.rhino.Node$StringNode",
127:       "com.google.javascript.rhino.jstype.ProxyObjectType",
128:       "com.google.common.collect.Sets$SetView",
129:       "com.google.common.collect.RegularImmutableAsList",
130:       "com.google.javascript.rhino.jstype.TemplateType",
131:       "com.google.javascript.rhino.jstype.NamedType",
132:       "com.google.common.collect.Iterators$13",
133:       "com.google.javascript.rhino.InputId",
134:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
135:       "com.google.javascript.rhino.jstype.RelationshipVisitor",
136:       "com.google.common.collect.AbstractMapBasedMultimap",
137:       "com.google.common.collect.Lists$Partition",
138:       "com.google.common.collect.Lists",
139:       "com.google.javascript.rhino.Node$SideEffectFlags",
140:       "com.google.common.collect.UnmodifiableListIterator",
141:       "com.google.javascript.rhino.jstype.NullType",
142:       "com.google.common.collect.Lists$TransformingSequentialList",
143:       "com.google.javascript.rhino.ErrorReporter",
144:       "com.google.javascript.rhino.jstype.UnknownType",
145:       "com.google.common.collect.AbstractMapBasedMultimap$AsMap",
146:       "com.google.javascript.rhino.jstype.ValueType",
147:       "com.google.javascript.rhino.jstype.PropertyMap",
148:       "com.google.javascript.rhino.Token",
149:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
150:       "com.google.common.collect.ObjectArrays",
151:       "com.google.javascript.rhino.jstype.StaticSourceFile",
152:       "com.google.javascript.rhino.jstype.BooleanType",
153:       "com.google.javascript.rhino.jstype.NoObjectType",
154:       "com.google.common.collect.AbstractIterator",
155:       "com.google.javascript.rhino.jstype.FunctionBuilder",
156:       "com.google.javascript.rhino.jstype.JSType$TypePair",
157:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
158:       "com.google.common.base.Joiner$MapJoiner",
159:       "com.google.common.collect.ImmutableList$1",
160:       "com.google.common.collect.MapDifference",
161:       "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
162:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
163:       "com.google.common.collect.Sets$ImprovedAbstractSet",
164:       "com.google.javascript.rhino.jstype.FunctionType",
165:       "com.google.common.base.Preconditions",
166:       "com.google.common.collect.UnmodifiableIterator",
167:       "com.google.javascript.rhino.JSDocInfo",
168:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
169:       "com.google.javascript.rhino.jstype.Property",
170:       "com.google.common.collect.ImmutableMapValues",
171:       "com.google.common.collect.ImmutableEntry",
172:       "com.google.common.base.Joiner$1",
173:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
174:       "com.google.common.base.Joiner$2",
175:       "com.google.common.collect.ImmutableCollection",
176:       "com.google.common.collect.ImmutableEnumMap",
177:       "com.google.javascript.rhino.jstype.TernaryValue",
178:       "com.google.javascript.rhino.Node$AncestorIterable",
179:       "com.google.common.collect.AbstractMapBasedMultimap$KeySet",
180:       "com.google.common.collect.Lists$RandomAccessListWrapper",
181:       "com.google.common.collect.ImmutableEnumSet",
182:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
183:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
184:       "com.google.javascript.rhino.jstype.EnumElementType",
185:       "com.google.javascript.rhino.jstype.UnionType",
186:       "com.google.common.base.Objects",
187:       "com.google.javascript.rhino.Node$NumberNode",
188:       "com.google.common.collect.SingletonImmutableList",
189:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
190:       "com.google.common.collect.ImmutableCollection$Builder",
191:       "com.google.javascript.rhino.jstype.StaticSlot",
192:       "com.google.common.collect.Iterators$6",
193:       "com.google.common.collect.BiMap",
194:       "com.google.common.collect.Iterators$7",
195:       "com.google.common.collect.AbstractSetMultimap",
196:       "com.google.common.base.Function",
197:       "com.google.common.collect.ImmutableSet",
198:       "com.google.common.collect.Lists$AbstractListWrapper",
199:       "com.google.common.collect.ImmutableMap",
200:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
201:       "com.google.common.collect.AbstractIndexedListIterator",
202:       "com.google.common.collect.Maps$1",
203:       "com.google.javascript.rhino.jstype.EnumType",
204:       "com.google.common.collect.Iterators$1",
205:       "com.google.common.collect.Iterators$2",
206:       "com.google.javascript.rhino.jstype.NamespaceType",
207:       "com.google.common.collect.Iterators$3",
208:       "com.google.common.collect.Sets",
209:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
210:       "com.google.javascript.rhino.Node$ObjectPropListItem",
211:       "com.google.common.collect.Lists$StringAsImmutableList",
212:       "com.google.common.collect.Lists$2",
213:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
214:       "com.google.common.collect.ImmutableList$Builder",
215:       "com.google.common.collect.Lists$1",
216:       "com.google.javascript.rhino.jstype.StaticReference",
217:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
218:       "com.google.common.collect.Multiset",
219:       "com.google.common.collect.AbstractMultimap",
220:       "com.google.common.collect.Multimap",
221:       "com.google.common.collect.Iterators",
222:       "com.google.common.collect.Maps$ImprovedAbstractMap",
223:       "com.google.common.collect.ImmutableBiMap",
224:       "com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap",
225:       "com.google.common.collect.ImmutableList",
226:       "com.google.common.collect.SingletonImmutableBiMap",
227:       "com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet",
228:       "com.google.javascript.rhino.jstype.StringType",
229:       "com.google.javascript.rhino.Node$AbstractPropListItem",
230:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
231:       "com.google.javascript.rhino.jstype.TemplatizedType",
232:       "com.google.javascript.rhino.jstype.Visitor",
233:       "com.google.javascript.rhino.jstype.NoResolvedType",
234:       "com.google.javascript.rhino.jstype.JSTypeNative",
235:       "com.google.javascript.rhino.jstype.AllType",
236:       "com.google.common.collect.Maps",
237:       "com.google.common.collect.SetMultimap",
238:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
239:       "com.google.common.collect.Maps$EntryTransformer",
240:       "com.google.javascript.rhino.JSTypeExpression",
241:       "com.google.common.collect.Iterators$MergingIterator"
242:     );
243:   } 
244: 
245:   private static void resetClasses() {
246:     org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Node_225_tmp__ESTest_scaffolding.class.getClassLoader()); 
247: 
248:     org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
249:       "com.google.javascript.rhino.Node",
250:       "com.google.javascript.rhino.Node$NumberNode",
251:       "com.google.javascript.rhino.Node$StringNode",
252:       "com.google.javascript.rhino.Node$AbstractPropListItem",
253:       "com.google.javascript.rhino.Node$ObjectPropListItem",
254:       "com.google.javascript.rhino.Node$IntPropListItem",
255:       "com.google.javascript.rhino.Node$SiblingNodeIterable",
256:       "com.google.javascript.rhino.Node$AncestorIterable",
257:       "com.google.javascript.rhino.Node$NodeMismatch",
258:       "com.google.javascript.rhino.Node$FileLevelJsDocBuilder",
259:       "com.google.javascript.rhino.Node$SideEffectFlags",
260:       "com.google.common.base.Preconditions",
261:       "com.google.javascript.rhino.Token",
262:       "com.google.javascript.rhino.SimpleErrorReporter",
263:       "com.google.javascript.rhino.jstype.JSTypeRegistry",
264:       "com.google.common.base.Joiner",
265:       "com.google.common.base.Joiner$1",
266:       "com.google.common.collect.Collections2",
267:       "com.google.common.base.Joiner$MapJoiner",
268:       "com.google.common.collect.Maps",
269:       "com.google.common.collect.AbstractMultimap",
270:       "com.google.common.collect.AbstractMapBasedMultimap",
271:       "com.google.common.collect.AbstractSetMultimap",
272:       "com.google.common.collect.LinkedHashMultimap",
273:       "com.google.common.collect.AbstractMapEntry",
274:       "com.google.common.collect.ImmutableEntry",
275:       "com.google.common.collect.LinkedHashMultimap$ValueEntry",
276:       "com.google.common.collect.AbstractListMultimap",
277:       "com.google.common.collect.ArrayListMultimap",
278:       "com.google.javascript.rhino.jstype.TemplateTypeMap",
279:       "com.google.common.collect.ImmutableCollection",
280:       "com.google.common.collect.RegularImmutableList",
281:       "com.google.common.collect.ObjectArrays",
282:       "com.google.common.collect.ImmutableList",
283:       "com.google.javascript.rhino.jstype.ModificationVisitor",
284:       "com.google.javascript.rhino.jstype.TemplateTypeMapReplacer",
285:       "com.google.common.collect.ImmutableCollection$Builder",
286:       "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
287:       "com.google.common.collect.ImmutableList$Builder",
288:       "com.google.common.collect.UnmodifiableIterator",
289:       "com.google.common.collect.UnmodifiableListIterator",
290:       "com.google.common.collect.Iterators$1",
291:       "com.google.common.collect.Iterators$2",
292:       "com.google.common.collect.Iterators",
293:       "com.google.javascript.rhino.jstype.CanCastToVisitor",
294:       "com.google.javascript.rhino.jstype.JSType$1",
295:       "com.google.javascript.rhino.jstype.JSType",
296:       "com.google.javascript.rhino.jstype.ObjectType",
297:       "com.google.javascript.rhino.jstype.ProxyObjectType",
298:       "com.google.javascript.rhino.jstype.TemplateType",
299:       "com.google.javascript.rhino.jstype.ValueType",
300:       "com.google.javascript.rhino.jstype.BooleanType",
301:       "com.google.javascript.rhino.jstype.NullType",
302:       "com.google.javascript.rhino.jstype.NumberType",
303:       "com.google.javascript.rhino.jstype.StringType",
304:       "com.google.javascript.rhino.jstype.UnknownType",
305:       "com.google.javascript.rhino.jstype.VoidType",
306:       "com.google.javascript.rhino.jstype.AllType",
307:       "com.google.javascript.rhino.jstype.PrototypeObjectType",
308:       "com.google.common.collect.ImmutableMap",
309:       "com.google.common.collect.ImmutableBiMap",
310:       "com.google.common.collect.EmptyImmutableBiMap",
311:       "com.google.javascript.rhino.jstype.PropertyMap$1",
312:       "com.google.javascript.rhino.jstype.PropertyMap",
313:       "com.google.javascript.rhino.jstype.FunctionType",
314:       "com.google.javascript.rhino.jstype.FunctionParamBuilder",
315:       "com.google.javascript.rhino.jstype.ArrowType",
316:       "com.google.javascript.rhino.jstype.FunctionType$Kind",
317:       "com.google.javascript.rhino.jstype.FunctionType$PropAccess",
318:       "com.google.javascript.rhino.jstype.InstanceObjectType",
319:       "com.google.javascript.rhino.jstype.Property",
320:       "com.google.common.collect.Lists",
321:       "com.google.javascript.rhino.jstype.NoObjectType",
322:       "com.google.javascript.rhino.jstype.NoType",
323:       "com.google.javascript.rhino.jstype.NoResolvedType",
324:       "com.google.common.collect.SingletonImmutableList",
325:       "com.google.javascript.rhino.jstype.ErrorFunctionType",
326:       "com.google.javascript.rhino.jstype.UnionTypeBuilder",
327:       "com.google.javascript.rhino.jstype.EquivalenceMethod",
328:       "com.google.javascript.rhino.jstype.TemplateTypeMap$EquivalenceMatch",
329:       "com.google.javascript.rhino.jstype.UnionType",
330:       "com.google.javascript.rhino.jstype.FunctionBuilder",
331:       "com.google.javascript.rhino.jstype.JSTypeRegistry$1",
332:       "com.google.javascript.rhino.jstype.EnumType",
333:       "com.google.javascript.rhino.jstype.EnumElementType",
334:       "com.google.javascript.rhino.JSDocInfo",
335:       "com.google.javascript.rhino.JSDocInfo$LazilyInitializedInfo",
336:       "com.google.javascript.rhino.jstype.SimpleSourceFile",
337:       "com.google.common.base.Objects",
338:       "com.google.common.collect.ImmutableList$ReverseImmutableList",
339:       "com.google.common.collect.Iterables",
340:       "com.google.javascript.rhino.InputId",
341:       "com.google.common.collect.Sets",
342:       "com.google.javascript.rhino.Node$AncestorIterable$1",
343:       "com.google.common.collect.AbstractIndexedListIterator",
344:       "com.google.common.collect.Iterators$11",
345:       "com.google.javascript.rhino.jstype.TemplatizedType",
346:       "com.google.common.collect.ImmutableList$1",
347:       "com.google.javascript.rhino.jstype.NamedType",
348:       "com.google.common.collect.AbstractMultimap$Values",
349:       "com.google.common.collect.AbstractMapBasedMultimap$Itr",
350:       "com.google.common.collect.AbstractMapBasedMultimap$1",
351:       "com.google.common.collect.Multimaps$Entries",
352:       "com.google.common.collect.AbstractMultimap$Entries",
353:       "com.google.common.collect.AbstractMapBasedMultimap$2",
354:       "com.google.javascript.rhino.JSDocInfo$Visibility",
355:       "com.google.javascript.rhino.jstype.TernaryValue",
356:       "com.google.common.collect.ImmutableSet",
357:       "com.google.common.collect.EmptyImmutableSet",
358:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection",
359:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedList",
360:       "com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList",
361:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator",
362:       "com.google.javascript.rhino.JSTypeExpression",
363:       "com.google.javascript.rhino.jstype.BooleanLiteralSet",
364:       "com.google.javascript.rhino.jstype.JSType$2",
365:       "com.google.javascript.rhino.jstype.JSType$TypePair",
366:       "com.google.common.collect.Sets$ImprovedAbstractSet",
367:       "com.google.common.collect.LinkedHashMultimap$ValueSet",
368:       "com.google.common.collect.Hashing",
369:       "com.google.common.collect.AbstractMapBasedMultimap$WrappedSet"
370:     );
371:   }
372: }

[MASTER] 10:13:38.150 [logback-2] ERROR JUnitAnalyzer - Failed to compile test case:
Node node0 = Node.newNumber((-1350.135723), (-872), (-1));
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(50, Node.FREE_CALL);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(56, Node.CHANGE_TIME);
assertFalse(node0.isGetProp());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isBreak());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isThrow());
assertFalse(node0.isFalse());
assertFalse(node0.isHook());
assertFalse(node0.isExprResult());
assertFalse(node0.isInc());
assertFalse(node0.isWith());
assertFalse(node0.isGetElem());
assertFalse(node0.isOr());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isLabel());
assertFalse(node0.isGetterDef());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isFor());
assertFalse(node0.isEmpty());
assertFalse(node0.isDo());
assertEquals(39, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.hasOneChild());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isTry());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isScript());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabelName());
assertFalse(node0.isArrayLit());
assertFalse(node0.isSwitch());
assertFalse(node0.isParamList());
assertFalse(node0.isSetterDef());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isCatch());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isVoid());
assertFalse(node0.isTrue());
assertFalse(node0.isAdd());
assertFalse(node0.isBlock());
assertFalse(node0.isNew());
assertFalse(node0.isRegExp());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isIf());
assertFalse(node0.isDelProp());
assertFalse(node0.isNull());
assertFalse(node0.isNE());
assertFalse(node0.isReturn());
assertTrue(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isDec());
assertFalse(node0.isIn());
assertFalse(node0.isTypeOf());
assertFalse(node0.isContinue());
assertFalse(node0.isAssign());
assertFalse(node0.hasChildren());
assertFalse(node0.isWhile());
assertFalse(node0.isFunction());
assertFalse(node0.isDebugger());
assertFalse(node0.isCast());
assertFalse(node0.isString());
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isAnd());
assertNotNull(node0);

Node node1 = Node.newNumber((double) 2);
assertEquals(1, Node.DECR_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(2, Node.POST_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertFalse(node1.isCast());
assertFalse(node1.isScript());
assertFalse(node1.hasOneChild());
assertFalse(node1.isGetElem());
assertFalse(node1.isExprResult());
assertFalse(node1.isAssign());
assertFalse(node1.isWith());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.hasChildren());
assertFalse(node1.isOr());
assertFalse(node1.isAssignAdd());
assertEquals((-1), node1.getLineno());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isBreak());
assertFalse(node1.isCall());
assertFalse(node1.isInc());
assertFalse(node1.isWhile());
assertFalse(node1.isContinue());
assertFalse(node1.isFalse());
assertFalse(node1.isComma());
assertFalse(node1.isThrow());
assertFalse(node1.isReturn());
assertTrue(node1.isNumber());
assertFalse(node1.isGetProp());
assertFalse(node1.isNot());
assertFalse(node1.isString());
assertFalse(node1.isObjectLit());
assertFalse(node1.isDebugger());
assertFalse(node1.isAnd());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isTry());
assertFalse(node1.isVoid());
assertFalse(node1.isFunction());
assertFalse(node1.isArrayLit());
assertFalse(node1.isFor());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isIn());
assertFalse(node1.isCatch());
assertFalse(node1.isSetterDef());
assertFalse(node1.isEmpty());
assertFalse(node1.isIf());
assertFalse(node1.isDelProp());
assertFalse(node1.isName());
assertFalse(node1.isNE());
assertFalse(node1.isTrue());
assertFalse(node1.isNull());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isDo());
assertEquals(39, node1.getType());
assertFalse(node1.isCase());
assertFalse(node1.isVar());
assertFalse(node1.isBlock());
assertFalse(node1.isHook());
assertFalse(node1.isThis());
assertFalse(node1.isLabel());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isLabelName());
assertFalse(node1.isStringKey());
assertFalse(node1.isGetterDef());
assertFalse(node1.isSwitch());
assertFalse(node1.isParamList());
assertEquals((-1), node1.getCharno());
assertNotNull(node1);
assertFalse(node1.equals((Object)node0));
assertNotSame(node1, node0);

Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16777216);
assertFalse(node_SideEffectFlags0.areAllFlagsSet());
assertEquals(16777216, node_SideEffectFlags0.valueOf());
assertNotNull(node_SideEffectFlags0);

Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
assertFalse(node_SideEffectFlags0.areAllFlagsSet());
assertEquals(16777216, node_SideEffectFlags0.valueOf());
assertFalse(node_SideEffectFlags1.areAllFlagsSet());
assertEquals(16777216, node_SideEffectFlags1.valueOf());
assertNotNull(node_SideEffectFlags1);
assertSame(node_SideEffectFlags0, node_SideEffectFlags1);
assertSame(node_SideEffectFlags1, node_SideEffectFlags0);

Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
assertFalse(node_SideEffectFlags0.areAllFlagsSet());
assertEquals(16777216, node_SideEffectFlags0.valueOf());
assertFalse(node_SideEffectFlags1.areAllFlagsSet());
assertEquals(16777216, node_SideEffectFlags1.valueOf());
assertFalse(node_SideEffectFlags2.areAllFlagsSet());
assertEquals(16777216, node_SideEffectFlags2.valueOf());
assertNotNull(node_SideEffectFlags2);
assertSame(node_SideEffectFlags0, node_SideEffectFlags2);
assertSame(node_SideEffectFlags0, node_SideEffectFlags1);
assertSame(node_SideEffectFlags1, node_SideEffectFlags2);
assertSame(node_SideEffectFlags1, node_SideEffectFlags0);
assertSame(node_SideEffectFlags2, node_SideEffectFlags1);
assertSame(node_SideEffectFlags2, node_SideEffectFlags0);

Node node2 = Node.newString("=OVlF!-[x", 56, 42);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(49, Node.DIRECT_EVAL);
assertFalse(node2.isExprResult());
assertFalse(node2.isScript());
assertFalse(node2.isWith());
assertFalse(node2.isNot());
assertFalse(node2.hasOneChild());
assertFalse(node2.isReturn());
assertFalse(node2.isThis());
assertFalse(node2.isDec());
assertFalse(node2.isTypeOf());
assertFalse(node2.isInstanceOf());
assertFalse(node2.hasChildren());
assertFalse(node2.isComma());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isOr());
assertFalse(node2.isAssign());
assertFalse(node2.isGetElem());
assertFalse(node2.isBreak());
assertFalse(node2.isInc());
assertFalse(node2.isWhile());
assertFalse(node2.isThrow());
assertFalse(node2.isGetProp());
assertEquals(42, node2.getCharno());
assertFalse(node2.isObjectLit());
assertFalse(node2.isFalse());
assertFalse(node2.isAnd());
assertFalse(node2.isContinue());
assertFalse(node2.isCast());
assertFalse(node2.isDebugger());
assertFalse(node2.isTrue());
assertFalse(node2.isFunction());
assertFalse(node2.isRegExp());
assertEquals(40, node2.getType());
assertFalse(node2.isFor());
assertFalse(node2.isEmpty());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isTry());
assertFalse(node2.isSetterDef());
assertFalse(node2.isNE());
assertFalse(node2.isNull());
assertFalse(node2.isIn());
assertEquals(229418, node2.getSourcePosition());
assertFalse(node2.isName());
assertFalse(node2.isCatch());
assertFalse(node2.isCall());
assertFalse(node2.isIf());
assertFalse(node2.isVoid());
assertFalse(node2.isDelProp());
assertTrue(node2.isString());
assertFalse(node2.isNew());
assertFalse(node2.isBlock());
assertFalse(node2.isAdd());
assertFalse(node2.isHook());
assertFalse(node2.isCase());
assertFalse(node2.isVar());
assertFalse(node2.isDo());
assertFalse(node2.isLabel());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isParamList());
assertFalse(node2.isNumber());
assertFalse(node2.isGetterDef());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isStringKey());
assertEquals(56, node2.getLineno());
assertFalse(node2.isArrayLit());
assertFalse(node2.isSwitch());
assertFalse(node2.isLabelName());
assertNotNull(node2);
assertFalse(node2.equals((Object)node1));
assertFalse(node2.equals((Object)node0));

boolean boolean0 = node2.isVarArgs();
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(49, Node.DIRECT_EVAL);
assertFalse(boolean0);
assertFalse(node2.isExprResult());
assertFalse(node2.isScript());
assertFalse(node2.isWith());
assertFalse(node2.isNot());
assertFalse(node2.hasOneChild());
assertFalse(node2.isReturn());
assertFalse(node2.isThis());
assertFalse(node2.isDec());
assertFalse(node2.isTypeOf());
assertFalse(node2.isInstanceOf());
assertFalse(node2.hasChildren());
assertFalse(node2.isComma());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isOr());
assertFalse(node2.isAssign());
assertFalse(node2.isGetElem());
assertFalse(node2.isBreak());
assertFalse(node2.isInc());
assertFalse(node2.isWhile());
assertFalse(node2.isThrow());
assertFalse(node2.isGetProp());
assertEquals(42, node2.getCharno());
assertFalse(node2.isObjectLit());
assertFalse(node2.isFalse());
assertFalse(node2.isAnd());
assertFalse(node2.isContinue());
assertFalse(node2.isCast());
assertFalse(node2.isDebugger());
assertFalse(node2.isTrue());
assertFalse(node2.isFunction());
assertFalse(node2.isRegExp());
assertEquals(40, node2.getType());
assertFalse(node2.isFor());
assertFalse(node2.isEmpty());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isTry());
assertFalse(node2.isSetterDef());
assertFalse(node2.isNE());
assertFalse(node2.isNull());
assertFalse(node2.isIn());
assertEquals(229418, node2.getSourcePosition());
assertFalse(node2.isName());
assertFalse(node2.isCatch());
assertFalse(node2.isCall());
assertFalse(node2.isIf());
assertFalse(node2.isVoid());
assertFalse(node2.isDelProp());
assertTrue(node2.isString());
assertFalse(node2.isNew());
assertFalse(node2.isBlock());
assertFalse(node2.isAdd());
assertFalse(node2.isHook());
assertFalse(node2.isCase());
assertFalse(node2.isVar());
assertFalse(node2.isDo());
assertFalse(node2.isLabel());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isParamList());
assertFalse(node2.isNumber());
assertFalse(node2.isGetterDef());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isStringKey());
assertEquals(56, node2.getLineno());
assertFalse(node2.isArrayLit());
assertFalse(node2.isSwitch());
assertFalse(node2.isLabelName());
assertFalse(node2.equals((Object)node1));
assertFalse(node2.equals((Object)node0));

boolean boolean1 = node1.mayMutateArguments();
assertEquals(1, Node.DECR_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(2, Node.POST_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertTrue(boolean1);
assertFalse(node1.isCast());
assertFalse(node1.isScript());
assertFalse(node1.hasOneChild());
assertFalse(node1.isGetElem());
assertFalse(node1.isExprResult());
assertFalse(node1.isAssign());
assertFalse(node1.isWith());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.hasChildren());
assertFalse(node1.isOr());
assertFalse(node1.isAssignAdd());
assertEquals((-1), node1.getLineno());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isBreak());
assertFalse(node1.isCall());
assertFalse(node1.isInc());
assertFalse(node1.isWhile());
assertFalse(node1.isContinue());
assertFalse(node1.isFalse());
assertFalse(node1.isComma());
assertFalse(node1.isThrow());
assertFalse(node1.isReturn());
assertTrue(node1.isNumber());
assertFalse(node1.isGetProp());
assertFalse(node1.isNot());
assertFalse(node1.isString());
assertFalse(node1.isObjectLit());
assertFalse(node1.isDebugger());
assertFalse(node1.isAnd());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isTry());
assertFalse(node1.isVoid());
assertFalse(node1.isFunction());
assertFalse(node1.isArrayLit());
assertFalse(node1.isFor());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isIn());
assertFalse(node1.isCatch());
assertFalse(node1.isSetterDef());
assertFalse(node1.isEmpty());
assertFalse(node1.isIf());
assertFalse(node1.isDelProp());
assertFalse(node1.isName());
assertFalse(node1.isNE());
assertFalse(node1.isTrue());
assertFalse(node1.isNull());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isDo());
assertEquals(39, node1.getType());
assertFalse(node1.isCase());
assertFalse(node1.isVar());
assertFalse(node1.isBlock());
assertFalse(node1.isHook());
assertFalse(node1.isThis());
assertFalse(node1.isLabel());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isLabelName());
assertFalse(node1.isStringKey());
assertFalse(node1.isGetterDef());
assertFalse(node1.isSwitch());
assertFalse(node1.isParamList());
assertEquals((-1), node1.getCharno());
assertFalse(node1.equals((Object)node2));
assertFalse(node1.equals((Object)node0));
assertFalse(boolean1 == boolean0);
assertNotSame(node1, node0);

Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(49, Node.DIRECT_EVAL);
assertFalse(node2.isExprResult());
assertFalse(node2.isScript());
assertFalse(node2.isWith());
assertFalse(node2.isNot());
assertFalse(node2.hasOneChild());
assertFalse(node2.isReturn());
assertFalse(node2.isThis());
assertFalse(node2.isDec());
assertFalse(node2.isTypeOf());
assertFalse(node2.isInstanceOf());
assertFalse(node2.hasChildren());
assertFalse(node2.isComma());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isOr());
assertFalse(node2.isAssign());
assertFalse(node2.isGetElem());
assertFalse(node2.isBreak());
assertFalse(node2.isInc());
assertFalse(node2.isWhile());
assertFalse(node2.isThrow());
assertFalse(node2.isGetProp());
assertEquals(42, node2.getCharno());
assertFalse(node2.isObjectLit());
assertFalse(node2.isFalse());
assertFalse(node2.isAnd());
assertFalse(node2.isContinue());
assertFalse(node2.isCast());
assertFalse(node2.isDebugger());
assertFalse(node2.isTrue());
assertFalse(node2.isFunction());
assertFalse(node2.isRegExp());
assertEquals(40, node2.getType());
assertFalse(node2.isFor());
assertFalse(node2.isEmpty());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isTry());
assertFalse(node2.isSetterDef());
assertFalse(node2.isNE());
assertFalse(node2.isNull());
assertFalse(node2.isIn());
assertEquals(229418, node2.getSourcePosition());
assertFalse(node2.isName());
assertFalse(node2.isCatch());
assertFalse(node2.isCall());
assertFalse(node2.isIf());
assertFalse(node2.isVoid());
assertFalse(node2.isDelProp());
assertTrue(node2.isString());
assertFalse(node2.isNew());
assertFalse(node2.isBlock());
assertFalse(node2.isAdd());
assertFalse(node2.isHook());
assertFalse(node2.isCase());
assertFalse(node2.isVar());
assertFalse(node2.isDo());
assertFalse(node2.isLabel());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isParamList());
assertFalse(node2.isNumber());
assertFalse(node2.isGetterDef());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isStringKey());
assertEquals(56, node2.getLineno());
assertFalse(node2.isArrayLit());
assertFalse(node2.isSwitch());
assertFalse(node2.isLabelName());
assertNotNull(node_FileLevelJsDocBuilder0);
assertFalse(node2.equals((Object)node1));
assertFalse(node2.equals((Object)node0));

boolean boolean2 = node0.hasChildren();
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(50, Node.FREE_CALL);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(56, Node.CHANGE_TIME);
assertFalse(boolean2);
assertFalse(node0.isGetProp());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isBreak());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isThrow());
assertFalse(node0.isFalse());
assertFalse(node0.isHook());
assertFalse(node0.isExprResult());
assertFalse(node0.isInc());
assertFalse(node0.isWith());
assertFalse(node0.isGetElem());
assertFalse(node0.isOr());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isLabel());
assertFalse(node0.isGetterDef());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isFor());
assertFalse(node0.isEmpty());
assertFalse(node0.isDo());
assertEquals(39, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.hasOneChild());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isTry());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isScript());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabelName());
assertFalse(node0.isArrayLit());
assertFalse(node0.isSwitch());
assertFalse(node0.isParamList());
assertFalse(node0.isSetterDef());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isCatch());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isVoid());
assertFalse(node0.isTrue());
assertFalse(node0.isAdd());
assertFalse(node0.isBlock());
assertFalse(node0.isNew());
assertFalse(node0.isRegExp());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isIf());
assertFalse(node0.isDelProp());
assertFalse(node0.isNull());
assertFalse(node0.isNE());
assertFalse(node0.isReturn());
assertTrue(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isDec());
assertFalse(node0.isIn());
assertFalse(node0.isTypeOf());
assertFalse(node0.isContinue());
assertFalse(node0.isAssign());
assertFalse(node0.hasChildren());
assertFalse(node0.isWhile());
assertFalse(node0.isFunction());
assertFalse(node0.isDebugger());
assertFalse(node0.isCast());
assertFalse(node0.isString());
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isAnd());
assertFalse(node0.equals((Object)node2));
assertFalse(node0.equals((Object)node1));
assertTrue(boolean2 == boolean0);
assertFalse(boolean2 == boolean1);
assertNotSame(node0, node1);

boolean boolean3 = node0.isNoSideEffectsCall();
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(50, Node.FREE_CALL);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(56, Node.CHANGE_TIME);
assertFalse(boolean3);
assertFalse(node0.isGetProp());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isBreak());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isThrow());
assertFalse(node0.isFalse());
assertFalse(node0.isHook());
assertFalse(node0.isExprResult());
assertFalse(node0.isInc());
assertFalse(node0.isWith());
assertFalse(node0.isGetElem());
assertFalse(node0.isOr());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isLabel());
assertFalse(node0.isGetterDef());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isFor());
assertFalse(node0.isEmpty());
assertFalse(node0.isDo());
assertEquals(39, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.hasOneChild());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isTry());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isScript());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabelName());
assertFalse(node0.isArrayLit());
assertFalse(node0.isSwitch());
assertFalse(node0.isParamList());
assertFalse(node0.isSetterDef());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isCatch());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isVoid());
assertFalse(node0.isTrue());
assertFalse(node0.isAdd());
assertFalse(node0.isBlock());
assertFalse(node0.isNew());
assertFalse(node0.isRegExp());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isIf());
assertFalse(node0.isDelProp());
assertFalse(node0.isNull());
assertFalse(node0.isNE());
assertFalse(node0.isReturn());
assertTrue(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isDec());
assertFalse(node0.isIn());
assertFalse(node0.isTypeOf());
assertFalse(node0.isContinue());
assertFalse(node0.isAssign());
assertFalse(node0.hasChildren());
assertFalse(node0.isWhile());
assertFalse(node0.isFunction());
assertFalse(node0.isDebugger());
assertFalse(node0.isCast());
assertFalse(node0.isString());
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isAnd());
assertFalse(node0.equals((Object)node2));
assertFalse(node0.equals((Object)node1));
assertTrue(boolean3 == boolean0);
assertTrue(boolean3 == boolean2);
assertFalse(boolean3 == boolean1);
assertNotSame(node0, node1);

boolean boolean4 = node1.isAssignAdd();
assertEquals(1, Node.DECR_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(2, Node.POST_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertFalse(boolean4);
assertFalse(node1.isCast());
assertFalse(node1.isScript());
assertFalse(node1.hasOneChild());
assertFalse(node1.isGetElem());
assertFalse(node1.isExprResult());
assertFalse(node1.isAssign());
assertFalse(node1.isWith());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.hasChildren());
assertFalse(node1.isOr());
assertFalse(node1.isAssignAdd());
assertEquals((-1), node1.getLineno());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isBreak());
assertFalse(node1.isCall());
assertFalse(node1.isInc());
assertFalse(node1.isWhile());
assertFalse(node1.isContinue());
assertFalse(node1.isFalse());
assertFalse(node1.isComma());
assertFalse(node1.isThrow());
assertFalse(node1.isReturn());
assertTrue(node1.isNumber());
assertFalse(node1.isGetProp());
assertFalse(node1.isNot());
assertFalse(node1.isString());
assertFalse(node1.isObjectLit());
assertFalse(node1.isDebugger());
assertFalse(node1.isAnd());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isTry());
assertFalse(node1.isVoid());
assertFalse(node1.isFunction());
assertFalse(node1.isArrayLit());
assertFalse(node1.isFor());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isIn());
assertFalse(node1.isCatch());
assertFalse(node1.isSetterDef());
assertFalse(node1.isEmpty());
assertFalse(node1.isIf());
assertFalse(node1.isDelProp());
assertFalse(node1.isName());
assertFalse(node1.isNE());
assertFalse(node1.isTrue());
assertFalse(node1.isNull());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isDo());
assertEquals(39, node1.getType());
assertFalse(node1.isCase());
assertFalse(node1.isVar());
assertFalse(node1.isBlock());
assertFalse(node1.isHook());
assertFalse(node1.isThis());
assertFalse(node1.isLabel());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isLabelName());
assertFalse(node1.isStringKey());
assertFalse(node1.isGetterDef());
assertFalse(node1.isSwitch());
assertFalse(node1.isParamList());
assertEquals((-1), node1.getCharno());
assertFalse(node1.equals((Object)node2));
assertFalse(node1.equals((Object)node0));
assertTrue(boolean4 == boolean3);
assertTrue(boolean4 == boolean2);
assertTrue(boolean4 == boolean0);
assertFalse(boolean4 == boolean1);
assertNotSame(node1, node0);

Node node3 = new Node((-2050), node1, node2, node1);
assertEquals(1, Node.DECR_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(2, Node.POST_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(2, Node.POST_FLAG);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(53, Node.INPUT_ID);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(1, Node.DECR_FLAG);
assertFalse(node1.isCast());
assertFalse(node1.isScript());
assertFalse(node1.hasOneChild());
assertFalse(node1.isGetElem());
assertFalse(node1.isExprResult());
assertFalse(node1.isAssign());
assertFalse(node1.isWith());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.hasChildren());
assertFalse(node1.isOr());
assertFalse(node1.isAssignAdd());
assertEquals((-1), node1.getLineno());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isBreak());
assertFalse(node1.isCall());
assertFalse(node1.isInc());
assertFalse(node1.isWhile());
assertFalse(node1.isContinue());
assertFalse(node1.isFalse());
assertFalse(node1.isComma());
assertFalse(node1.isThrow());
assertFalse(node1.isReturn());
assertTrue(node1.isNumber());
assertFalse(node1.isGetProp());
assertFalse(node1.isNot());
assertFalse(node1.isString());
assertFalse(node1.isObjectLit());
assertFalse(node1.isDebugger());
assertFalse(node1.isAnd());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isTry());
assertFalse(node1.isVoid());
assertFalse(node1.isFunction());
assertFalse(node1.isArrayLit());
assertFalse(node1.isFor());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isIn());
assertFalse(node1.isCatch());
assertFalse(node1.isSetterDef());
assertFalse(node1.isEmpty());
assertFalse(node1.isIf());
assertFalse(node1.isDelProp());
assertFalse(node1.isName());
assertFalse(node1.isNE());
assertFalse(node1.isTrue());
assertFalse(node1.isNull());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isDo());
assertEquals(39, node1.getType());
assertFalse(node1.isCase());
assertFalse(node1.isVar());
assertFalse(node1.isBlock());
assertFalse(node1.isHook());
assertFalse(node1.isThis());
assertFalse(node1.isLabel());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isLabelName());
assertFalse(node1.isStringKey());
assertFalse(node1.isGetterDef());
assertFalse(node1.isSwitch());
assertFalse(node1.isParamList());
assertEquals((-1), node1.getCharno());
assertFalse(node2.isExprResult());
assertFalse(node2.isScript());
assertFalse(node2.isWith());
assertFalse(node2.isNot());
assertFalse(node2.hasOneChild());
assertFalse(node2.isReturn());
assertFalse(node2.isThis());
assertFalse(node2.isDec());
assertFalse(node2.isTypeOf());
assertFalse(node2.isInstanceOf());
assertFalse(node2.hasChildren());
assertFalse(node2.isComma());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isOr());
assertFalse(node2.isAssign());
assertFalse(node2.isGetElem());
assertFalse(node2.isBreak());
assertFalse(node2.isInc());
assertFalse(node2.isWhile());
assertFalse(node2.isThrow());
assertFalse(node2.isGetProp());
assertEquals(42, node2.getCharno());
assertFalse(node2.isObjectLit());
assertFalse(node2.isFalse());
assertFalse(node2.isAnd());
assertFalse(node2.isContinue());
assertFalse(node2.isCast());
assertFalse(node2.isDebugger());
assertFalse(node2.isTrue());
assertFalse(node2.isFunction());
assertFalse(node2.isRegExp());
assertEquals(40, node2.getType());
assertFalse(node2.isFor());
assertFalse(node2.isEmpty());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isTry());
assertFalse(node2.isSetterDef());
assertFalse(node2.isNE());
assertFalse(node2.isNull());
assertFalse(node2.isIn());
assertEquals(229418, node2.getSourcePosition());
assertFalse(node2.isName());
assertFalse(node2.isCatch());
assertFalse(node2.isCall());
assertFalse(node2.isIf());
assertFalse(node2.isVoid());
assertFalse(node2.isDelProp());
assertTrue(node2.isString());
assertFalse(node2.isNew());
assertFalse(node2.isBlock());
assertFalse(node2.isAdd());
assertFalse(node2.isHook());
assertFalse(node2.isCase());
assertFalse(node2.isVar());
assertFalse(node2.isDo());
assertFalse(node2.isLabel());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isParamList());
assertFalse(node2.isNumber());
assertFalse(node2.isGetterDef());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isStringKey());
assertEquals(56, node2.getLineno());
assertFalse(node2.isArrayLit());
assertFalse(node2.isSwitch());
assertFalse(node2.isLabelName());
assertFalse(node3.isCall());
assertFalse(node3.isVar());
assertFalse(node3.isStringKey());
assertFalse(node3.isParamList());
assertFalse(node3.isNull());
assertEquals((-2050), node3.getType());
assertFalse(node3.isName());
assertFalse(node3.hasMoreThanOneChild());
assertFalse(node3.isCatch());
assertFalse(node3.isReturn());
assertFalse(node3.isRegExp());
assertFalse(node3.isBlock());
assertFalse(node3.isWhile());
assertFalse(node3.isTry());
assertFalse(node3.isGetElem());
assertFalse(node3.isEmpty());
assertFalse(node3.isGetterDef());
assertTrue(node3.hasOneChild());
assertFalse(node3.isNumber());
assertFalse(node3.isTypeOf());
assertFalse(node3.isAssign());
assertFalse(node3.isDec());
assertFalse(node3.isVoid());
assertFalse(node3.isTrue());
assertFalse(node3.isExprResult());
assertFalse(node3.isDelProp());
assertFalse(node3.isArrayLit());
assertFalse(node3.isLabelName());
assertFalse(node3.isLabel());
assertFalse(node3.isOr());
assertFalse(node3.isAdd());
assertFalse(node3.isDefaultCase());
assertFalse(node3.isAssignAdd());
assertFalse(node3.isNew());
assertFalse(node3.isDo());
assertFalse(node3.isFalse());
assertFalse(node3.isThrow());
assertFalse(node3.isHook());
assertFalse(node3.isComma());
assertEquals((-1), node3.getCharno());
assertFalse(node3.isSwitch());
assertFalse(node3.isBreak());
assertFalse(node3.isAnd());
assertFalse(node3.isObjectLit());
assertFalse(node3.isInstanceOf());
assertFalse(node3.isString());
assertEquals(1, node3.getChildCount());
assertFalse(node3.isWith());
assertFalse(node3.isNot());
assertFalse(node3.isGetProp());
assertFalse(node3.isThis());
assertFalse(node3.isScript());
assertFalse(node3.isCase());
assertFalse(node3.isFor());
assertFalse(node3.isCast());
assertEquals((-1), node3.getSourcePosition());
assertFalse(node3.isFunction());
assertFalse(node3.isDebugger());
assertTrue(node3.hasChildren());
assertFalse(node3.isNE());
assertFalse(node3.isIf());
assertEquals((-1), node3.getLineno());
assertFalse(node3.isContinue());
assertFalse(node3.isIn());
assertFalse(node3.isInc());
assertFalse(node3.isSetterDef());
assertNotNull(node3);
assertFalse(node1.equals((Object)node2));
assertFalse(node1.equals((Object)node0));
assertFalse(node2.equals((Object)node1));
assertFalse(node2.equals((Object)node0));
assertFalse(node3.equals((Object)node1));
assertFalse(node3.equals((Object)node2));
assertFalse(node3.equals((Object)node0));

node3.addChildBefore(node0, node1);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(53, Node.INPUT_ID);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(2, Node.POST_FLAG);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(54, Node.SLASH_V);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(52, Node.LENGTH);
assertEquals(50, Node.FREE_CALL);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(1, Node.DECR_FLAG);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(2, Node.POST_FLAG);
assertEquals(57, Node.LAST_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(52, Node.LENGTH);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(2, Node.POST_FLAG);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(53, Node.INPUT_ID);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(57, Node.LAST_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(52, Node.LENGTH);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(50, Node.FREE_CALL);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(1, Node.DECR_FLAG);
assertFalse(node0.isGetProp());
assertFalse(node0.isComma());
assertFalse(node0.isThis());
assertFalse(node0.isBreak());
assertFalse(node0.isInstanceOf());
assertFalse(node0.isThrow());
assertFalse(node0.isFalse());
assertFalse(node0.isHook());
assertFalse(node0.isExprResult());
assertFalse(node0.isInc());
assertFalse(node0.isWith());
assertFalse(node0.isGetElem());
assertFalse(node0.isOr());
assertEquals((-1), node0.getLineno());
assertFalse(node0.isLabel());
assertFalse(node0.isGetterDef());
assertFalse(node0.hasMoreThanOneChild());
assertFalse(node0.isFor());
assertFalse(node0.isEmpty());
assertFalse(node0.isDo());
assertEquals(39, node0.getType());
assertFalse(node0.isCase());
assertFalse(node0.hasOneChild());
assertFalse(node0.isAssignAdd());
assertFalse(node0.isTry());
assertEquals((-1), node0.getCharno());
assertFalse(node0.isScript());
assertFalse(node0.isStringKey());
assertFalse(node0.isLabelName());
assertFalse(node0.isArrayLit());
assertFalse(node0.isSwitch());
assertFalse(node0.isParamList());
assertFalse(node0.isSetterDef());
assertEquals(0, node0.getChildCount());
assertFalse(node0.isCatch());
assertFalse(node0.isDefaultCase());
assertFalse(node0.isVar());
assertFalse(node0.isVoid());
assertFalse(node0.isTrue());
assertFalse(node0.isAdd());
assertFalse(node0.isBlock());
assertFalse(node0.isNew());
assertFalse(node0.isRegExp());
assertFalse(node0.isName());
assertFalse(node0.isCall());
assertFalse(node0.isIf());
assertFalse(node0.isDelProp());
assertFalse(node0.isNull());
assertFalse(node0.isNE());
assertFalse(node0.isReturn());
assertTrue(node0.isNumber());
assertEquals((-1), node0.getSourcePosition());
assertFalse(node0.isDec());
assertFalse(node0.isIn());
assertFalse(node0.isTypeOf());
assertFalse(node0.isContinue());
assertFalse(node0.isAssign());
assertFalse(node0.hasChildren());
assertFalse(node0.isWhile());
assertFalse(node0.isFunction());
assertFalse(node0.isDebugger());
assertFalse(node0.isCast());
assertFalse(node0.isString());
assertFalse(node0.isObjectLit());
assertFalse(node0.isNot());
assertFalse(node0.isAnd());
assertFalse(node1.isCast());
assertFalse(node1.isScript());
assertFalse(node1.hasOneChild());
assertFalse(node1.isGetElem());
assertFalse(node1.isExprResult());
assertFalse(node1.isAssign());
assertFalse(node1.isWith());
assertFalse(node1.isDec());
assertFalse(node1.isTypeOf());
assertFalse(node1.hasChildren());
assertFalse(node1.isOr());
assertFalse(node1.isAssignAdd());
assertEquals((-1), node1.getLineno());
assertFalse(node1.hasMoreThanOneChild());
assertFalse(node1.isInstanceOf());
assertFalse(node1.isBreak());
assertFalse(node1.isCall());
assertFalse(node1.isInc());
assertFalse(node1.isWhile());
assertFalse(node1.isContinue());
assertFalse(node1.isFalse());
assertFalse(node1.isComma());
assertFalse(node1.isThrow());
assertFalse(node1.isReturn());
assertTrue(node1.isNumber());
assertFalse(node1.isGetProp());
assertFalse(node1.isNot());
assertFalse(node1.isString());
assertFalse(node1.isObjectLit());
assertFalse(node1.isDebugger());
assertFalse(node1.isAnd());
assertEquals((-1), node1.getSourcePosition());
assertFalse(node1.isTry());
assertFalse(node1.isVoid());
assertFalse(node1.isFunction());
assertFalse(node1.isArrayLit());
assertFalse(node1.isFor());
assertFalse(node1.isDefaultCase());
assertFalse(node1.isRegExp());
assertFalse(node1.isIn());
assertFalse(node1.isCatch());
assertFalse(node1.isSetterDef());
assertFalse(node1.isEmpty());
assertFalse(node1.isIf());
assertFalse(node1.isDelProp());
assertFalse(node1.isName());
assertFalse(node1.isNE());
assertFalse(node1.isTrue());
assertFalse(node1.isNull());
assertFalse(node1.isNew());
assertFalse(node1.isAdd());
assertFalse(node1.isDo());
assertEquals(39, node1.getType());
assertFalse(node1.isCase());
assertFalse(node1.isVar());
assertFalse(node1.isBlock());
assertFalse(node1.isHook());
assertFalse(node1.isThis());
assertFalse(node1.isLabel());
assertEquals(0, node1.getChildCount());
assertFalse(node1.isLabelName());
assertFalse(node1.isStringKey());
assertFalse(node1.isGetterDef());
assertFalse(node1.isSwitch());
assertFalse(node1.isParamList());
assertEquals((-1), node1.getCharno());
assertFalse(node2.isExprResult());
assertFalse(node2.isScript());
assertFalse(node2.isWith());
assertFalse(node2.isNot());
assertFalse(node2.hasOneChild());
assertFalse(node2.isReturn());
assertFalse(node2.isThis());
assertFalse(node2.isDec());
assertFalse(node2.isTypeOf());
assertFalse(node2.isInstanceOf());
assertFalse(node2.hasChildren());
assertFalse(node2.isComma());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isOr());
assertFalse(node2.isAssign());
assertFalse(node2.isGetElem());
assertFalse(node2.isBreak());
assertFalse(node2.isInc());
assertFalse(node2.isWhile());
assertFalse(node2.isThrow());
assertFalse(node2.isGetProp());
assertEquals(42, node2.getCharno());
assertFalse(node2.isObjectLit());
assertFalse(node2.isFalse());
assertFalse(node2.isAnd());
assertFalse(node2.isContinue());
assertFalse(node2.isCast());
assertFalse(node2.isDebugger());
assertFalse(node2.isTrue());
assertFalse(node2.isFunction());
assertFalse(node2.isRegExp());
assertEquals(40, node2.getType());
assertFalse(node2.isFor());
assertFalse(node2.isEmpty());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isTry());
assertFalse(node2.isSetterDef());
assertFalse(node2.isNE());
assertFalse(node2.isNull());
assertFalse(node2.isIn());
assertEquals(229418, node2.getSourcePosition());
assertFalse(node2.isName());
assertFalse(node2.isCatch());
assertFalse(node2.isCall());
assertFalse(node2.isIf());
assertFalse(node2.isVoid());
assertFalse(node2.isDelProp());
assertTrue(node2.isString());
assertFalse(node2.isNew());
assertFalse(node2.isBlock());
assertFalse(node2.isAdd());
assertFalse(node2.isHook());
assertFalse(node2.isCase());
assertFalse(node2.isVar());
assertFalse(node2.isDo());
assertFalse(node2.isLabel());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isParamList());
assertFalse(node2.isNumber());
assertFalse(node2.isGetterDef());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isStringKey());
assertEquals(56, node2.getLineno());
assertFalse(node2.isArrayLit());
assertFalse(node2.isSwitch());
assertFalse(node2.isLabelName());
assertFalse(node3.isCall());
assertFalse(node3.isVar());
assertFalse(node3.isStringKey());
assertFalse(node3.isParamList());
assertFalse(node3.isNull());
assertEquals((-2050), node3.getType());
assertFalse(node3.isName());
assertFalse(node3.isCatch());
assertFalse(node3.isReturn());
assertFalse(node3.isRegExp());
assertFalse(node3.isBlock());
assertFalse(node3.isWhile());
assertFalse(node3.isTry());
assertFalse(node3.isGetElem());
assertFalse(node3.isEmpty());
assertFalse(node3.isGetterDef());
assertFalse(node3.isNumber());
assertFalse(node3.isTypeOf());
assertFalse(node3.isAssign());
assertFalse(node3.isDec());
assertFalse(node3.isVoid());
assertFalse(node3.isTrue());
assertFalse(node3.isExprResult());
assertFalse(node3.isDelProp());
assertFalse(node3.isArrayLit());
assertFalse(node3.isLabelName());
assertFalse(node3.isLabel());
assertFalse(node3.isOr());
assertFalse(node3.isAdd());
assertFalse(node3.isDefaultCase());
assertFalse(node3.isAssignAdd());
assertFalse(node3.isNew());
assertFalse(node3.isDo());
assertFalse(node3.isFalse());
assertFalse(node3.isThrow());
assertFalse(node3.isHook());
assertFalse(node3.isComma());
assertEquals((-1), node3.getCharno());
assertFalse(node3.isSwitch());
assertFalse(node3.isBreak());
assertTrue(node3.hasMoreThanOneChild());
assertFalse(node3.isAnd());
assertFalse(node3.isObjectLit());
assertFalse(node3.isInstanceOf());
assertFalse(node3.isString());
assertFalse(node3.isWith());
assertFalse(node3.isNot());
assertFalse(node3.isGetProp());
assertFalse(node3.isThis());
assertFalse(node3.isScript());
assertFalse(node3.isCase());
assertFalse(node3.hasOneChild());
assertFalse(node3.isFor());
assertFalse(node3.isCast());
assertEquals((-1), node3.getSourcePosition());
assertFalse(node3.isFunction());
assertFalse(node3.isDebugger());
assertTrue(node3.hasChildren());
assertFalse(node3.isNE());
assertFalse(node3.isIf());
assertEquals((-1), node3.getLineno());
assertFalse(node3.isContinue());
assertEquals(2, node3.getChildCount());
assertFalse(node3.isIn());
assertFalse(node3.isInc());
assertFalse(node3.isSetterDef());
assertFalse(node0.equals((Object)node2));
assertFalse(node0.equals((Object)node1));
assertFalse(node0.equals((Object)node3));
assertFalse(node1.equals((Object)node3));
assertFalse(node1.equals((Object)node2));
assertFalse(node1.equals((Object)node0));
assertFalse(node2.equals((Object)node1));
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node3));
assertFalse(node3.equals((Object)node1));
assertFalse(node3.equals((Object)node2));
assertFalse(node3.equals((Object)node0));
assertNotSame(node0, node1);
assertNotSame(node1, node0);

Node node4 = Node.newNumber(1.2, (-2050), 41);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(53, Node.INPUT_ID);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(48, Node.DIRECTIVES);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.DECR_FLAG);
assertEquals(49, Node.DIRECT_EVAL);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(12, Node.COLUMN_BITS);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(57, Node.LAST_PROP);
assertEquals(54, Node.SLASH_V);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(52, Node.LENGTH);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(50, Node.FREE_CALL);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(2, Node.POST_FLAG);
assertFalse(node4.isAdd());
assertFalse(node4.isNew());
assertFalse(node4.isBlock());
assertFalse(node4.isVar());
assertFalse(node4.isStringKey());
assertFalse(node4.isName());
assertFalse(node4.isDo());
assertFalse(node4.isNull());
assertFalse(node4.isSetterDef());
assertEquals(0, node4.getChildCount());
assertFalse(node4.isLabel());
assertFalse(node4.isParamList());
assertFalse(node4.isAssignAdd());
assertFalse(node4.isLabelName());
assertFalse(node4.isFunction());
assertFalse(node4.isCast());
assertFalse(node4.isContinue());
assertFalse(node4.isTry());
assertFalse(node4.isArrayLit());
assertFalse(node4.hasOneChild());
assertFalse(node4.isGetterDef());
assertFalse(node4.isScript());
assertEquals((-1), node4.getLineno());
assertFalse(node4.isThis());
assertFalse(node4.isNE());
assertFalse(node4.isIf());
assertFalse(node4.isFor());
assertEquals(39, node4.getType());
assertFalse(node4.isCatch());
assertFalse(node4.isRegExp());
assertFalse(node4.isInstanceOf());
assertFalse(node4.isWith());
assertFalse(node4.hasMoreThanOneChild());
assertFalse(node4.isHook());
assertEquals((-1), node4.getCharno());
assertFalse(node4.isThrow());
assertFalse(node4.isSwitch());
assertFalse(node4.isString());
assertFalse(node4.isCase());
assertFalse(node4.isInc());
assertFalse(node4.isIn());
assertFalse(node4.isAnd());
assertFalse(node4.isFalse());
assertFalse(node4.isTrue());
assertFalse(node4.isVoid());
assertFalse(node4.isDefaultCase());
assertFalse(node4.isEmpty());
assertFalse(node4.isNot());
assertEquals((-1), node4.getSourcePosition());
assertFalse(node4.isDebugger());
assertFalse(node4.isObjectLit());
assertFalse(node4.isReturn());
assertTrue(node4.isNumber());
assertFalse(node4.isOr());
assertFalse(node4.isGetProp());
assertFalse(node4.isDelProp());
assertFalse(node4.isWhile());
assertFalse(node4.isAssign());
assertFalse(node4.isDec());
assertFalse(node4.isGetElem());
assertFalse(node4.isBreak());
assertFalse(node4.hasChildren());
assertFalse(node4.isCall());
assertFalse(node4.isComma());
assertFalse(node4.isExprResult());
assertFalse(node4.isTypeOf());
assertNotNull(node4);
assertFalse(node4.equals((Object)node0));
assertFalse(node4.equals((Object)node3));
assertFalse(node4.equals((Object)node1));
assertFalse(node4.equals((Object)node2));
assertNotSame(node4, node0);
assertNotSame(node4, node1);

Iterable<Node> iterable0 = node2.children();
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(49, Node.DIRECT_EVAL);
assertFalse(node2.isExprResult());
assertFalse(node2.isScript());
assertFalse(node2.isWith());
assertFalse(node2.isNot());
assertFalse(node2.hasOneChild());
assertFalse(node2.isReturn());
assertFalse(node2.isThis());
assertFalse(node2.isDec());
assertFalse(node2.isTypeOf());
assertFalse(node2.isInstanceOf());
assertFalse(node2.hasChildren());
assertFalse(node2.isComma());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isOr());
assertFalse(node2.isAssign());
assertFalse(node2.isGetElem());
assertFalse(node2.isBreak());
assertFalse(node2.isInc());
assertFalse(node2.isWhile());
assertFalse(node2.isThrow());
assertFalse(node2.isGetProp());
assertEquals(42, node2.getCharno());
assertFalse(node2.isObjectLit());
assertFalse(node2.isFalse());
assertFalse(node2.isAnd());
assertFalse(node2.isContinue());
assertFalse(node2.isCast());
assertFalse(node2.isDebugger());
assertFalse(node2.isTrue());
assertFalse(node2.isFunction());
assertFalse(node2.isRegExp());
assertEquals(40, node2.getType());
assertFalse(node2.isFor());
assertFalse(node2.isEmpty());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isTry());
assertFalse(node2.isSetterDef());
assertFalse(node2.isNE());
assertFalse(node2.isNull());
assertFalse(node2.isIn());
assertEquals(229418, node2.getSourcePosition());
assertFalse(node2.isName());
assertFalse(node2.isCatch());
assertFalse(node2.isCall());
assertFalse(node2.isIf());
assertFalse(node2.isVoid());
assertFalse(node2.isDelProp());
assertTrue(node2.isString());
assertFalse(node2.isNew());
assertFalse(node2.isBlock());
assertFalse(node2.isAdd());
assertFalse(node2.isHook());
assertFalse(node2.isCase());
assertFalse(node2.isVar());
assertFalse(node2.isDo());
assertFalse(node2.isLabel());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isParamList());
assertFalse(node2.isNumber());
assertFalse(node2.isGetterDef());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isStringKey());
assertEquals(56, node2.getLineno());
assertFalse(node2.isArrayLit());
assertFalse(node2.isSwitch());
assertFalse(node2.isLabelName());
assertNotNull(iterable0);
assertFalse(node2.equals((Object)node1));
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node3));
assertFalse(node2.equals((Object)node4));
assertFalse(iterable0.contains(node0));

boolean boolean5 = node2.isNull();
assertEquals(12, Node.COLUMN_BITS);
assertEquals(46, Node.IS_NAMESPACE);
assertEquals(30, Node.VAR_ARGS_NAME);
assertEquals(51, Node.STATIC_SOURCE_FILE);
assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
assertEquals(15, Node.NO_SIDE_EFFECTS);
assertEquals(47, Node.IS_DISPATCHER);
assertEquals(38, Node.SYNTHETIC_BLOCK_PROP);
assertEquals(57, Node.LAST_PROP);
assertEquals(1, Node.DECR_FLAG);
assertEquals(32, Node.INCRDECR_PROP);
assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
assertEquals(40, Node.ORIGINALNAME_PROP);
assertEquals(2, Node.POST_FLAG);
assertEquals(50, Node.FREE_CALL);
assertEquals(43, Node.IS_CONSTANT_NAME);
assertEquals(54, Node.SLASH_V);
assertEquals(55, Node.INFERRED_FUNCTION);
assertEquals(4095, Node.COLUMN_MASK);
assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
assertEquals(42, Node.SIDE_EFFECT_FLAGS);
assertEquals(8, Node.FLAG_NO_THROWS);
assertEquals(39, Node.EMPTY_BLOCK);
assertEquals(53, Node.INPUT_ID);
assertEquals(0, Node.SIDE_EFFECTS_ALL);
assertEquals(57, Node.REFLECTED_OBJECT);
assertEquals(29, Node.JSDOC_INFO_PROP);
assertEquals(52, Node.LENGTH);
assertEquals(4095, Node.MAX_COLUMN_NUMBER);
assertEquals(16, Node.FLAG_LOCAL_RESULTS);
assertEquals(37, Node.OPT_ARG_NAME);
assertEquals(36, Node.QUOTED_PROP);
assertEquals(56, Node.CHANGE_TIME);
assertEquals(31, Node.SIDE_EFFECTS_FLAGS_MASK);
assertEquals(48, Node.DIRECTIVES);
assertEquals(49, Node.DIRECT_EVAL);
assertFalse(boolean5);
assertFalse(node2.isExprResult());
assertFalse(node2.isScript());
assertFalse(node2.isWith());
assertFalse(node2.isNot());
assertFalse(node2.hasOneChild());
assertFalse(node2.isReturn());
assertFalse(node2.isThis());
assertFalse(node2.isDec());
assertFalse(node2.isTypeOf());
assertFalse(node2.isInstanceOf());
assertFalse(node2.hasChildren());
assertFalse(node2.isComma());
assertFalse(node2.hasMoreThanOneChild());
assertFalse(node2.isOr());
assertFalse(node2.isAssign());
assertFalse(node2.isGetElem());
assertFalse(node2.isBreak());
assertFalse(node2.isInc());
assertFalse(node2.isWhile());
assertFalse(node2.isThrow());
assertFalse(node2.isGetProp());
assertEquals(42, node2.getCharno());
assertFalse(node2.isObjectLit());
assertFalse(node2.isFalse());
assertFalse(node2.isAnd());
assertFalse(node2.isContinue());
assertFalse(node2.isCast());
assertFalse(node2.isDebugger());
assertFalse(node2.isTrue());
assertFalse(node2.isFunction());
assertFalse(node2.isRegExp());
assertEquals(40, node2.getType());
assertFalse(node2.isFor());
assertFalse(node2.isEmpty());
assertFalse(node2.isDefaultCase());
assertFalse(node2.isTry());
assertFalse(node2.isSetterDef());
assertFalse(node2.isNE());
assertFalse(node2.isNull());
assertFalse(node2.isIn());
assertEquals(229418, node2.getSourcePosition());
assertFalse(node2.isName());
assertFalse(node2.isCatch());
assertFalse(node2.isCall());
assertFalse(node2.isIf());
assertFalse(node2.isVoid());
assertFalse(node2.isDelProp());
assertTrue(node2.isString());
assertFalse(node2.isNew());
assertFalse(node2.isBlock());
assertFalse(node2.isAdd());
assertFalse(node2.isHook());
assertFalse(node2.isCase());
assertFalse(node2.isVar());
assertFalse(node2.isDo());
assertFalse(node2.isLabel());
assertFalse(node2.isAssignAdd());
assertFalse(node2.isParamList());
assertFalse(node2.isNumber());
assertFalse(node2.isGetterDef());
assertEquals(0, node2.getChildCount());
assertFalse(node2.isStringKey());
assertEquals(56, node2.getLineno());
assertFalse(node2.isArrayLit());
assertFalse(node2.isSwitch());
assertFalse(node2.isLabelName());
assertTrue(boolean5 == boolean4);
assertTrue(boolean5 == boolean3);
assertFalse(boolean5 == boolean1);
assertTrue(boolean5 == boolean0);
assertTrue(boolean5 == boolean2);
assertFalse(node2.equals((Object)node1));
assertFalse(node2.equals((Object)node0));
assertFalse(node2.equals((Object)node3));
assertFalse(node2.equals((Object)node4));


[MASTER] 10:13:54.240 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:54.584 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:54.868 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:55.084 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:55.289 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:55.545 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:55.785 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:56.033 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:56.218 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:56.448 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:56.699 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:56.914 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:57.158 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:57.434 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:57.650 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:57.868 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:58.063 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:58.253 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:59.390 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:59.687 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:13:59.888 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:14:00.101 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:14:00.362 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
[MASTER] 10:14:00.625 [logback-1] WARN  JUnitAnalyzer - EvoSuite problem: tests set up a security manager, but they do not remove it after execution
* Writing tests to file
* Writing JUnit test case 'Node_ESTest' to results/Closure-110/com.google.javascript.rhino.Node/BBC-F0-50/tests/7
* Done!

* Computation finished
