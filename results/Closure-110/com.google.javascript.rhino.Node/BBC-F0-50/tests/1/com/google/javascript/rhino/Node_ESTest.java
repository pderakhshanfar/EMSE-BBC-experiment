/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 05 09:51:27 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplatizedType;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FilterOutputStream;
import java.io.OutputStreamWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(52);
      node0.isGetProp();
      Node node1 = new Node(30, node0, node0, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isEquivalentTo(node1, false, false, false);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node(0, 0, (-1614));
      Node node1 = Node.newString("`+)AQ5*k),", 2473, 85);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.isInstanceOf();
      node2.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = Node.newNumber((-1157.087));
      node0.getJSType();
      Node node1 = new Node((-3476), 8233, 8);
      node1.getInputId();
      node1.addSuppression("Not declared as a constructor");
      node1.isUnscopedQualifiedName();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Named type with empty name component");
      Node node2 = new Node(56, node0, node0, node0, node1);
      node0.addChildToFront(node2);
      node2.setType(1);
      node2.putProp(56, node0);
      node1.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node2.getChangeTime();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = Node.newString("V^`v+-=l0~0t^");
      node0.isLocalResultCall();
      node0.isOr();
      Node node1 = new Node(4, node0, node0, node0, 4095, 57);
      node1.cloneTree();
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = new Node(51, 0, 0);
      node0.getDirectives();
      node0.isInstanceOf();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node node0 = new Node(112, 112, 112);
      node0.toStringTree();
      Node node1 = Node.newString(12, "DEFAULT_CASE 112\n", 31, 42);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node(42);
      node0.getSideEffectFlags();
      Node node1 = new Node(431, (-2460), 4095);
      node1.copyInformationFromForTree(node0);
      node1.setLineno(46);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newString("sf-]dDOSUh?K;|?9m=");
      Node node1 = new Node(49, node0, node0, node0, 57, 30);
      Node node2 = node1.srcref(node0);
      Locale locale0 = Locale.ROOT;
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(53);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got THROW
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(37, node0, node0, node0, 15, 0);
      Node node2 = node1.srcref(node0);
      node1.isDec();
      node2.isEquivalentToTyped(node1);
      node0.getLength();
      node1.isEquivalentTo(node2, true, true, false);
      node1.addChildBefore(node2, node0);
      // Undeclared exception!
      node2.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = new Node(125, 125, 114);
      node0.mayMutateArguments();
      Node node1 = Node.newNumber((double) 43);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = new Node(159, 159, 159);
      Node node1 = new Node(31, node0, node0, node0, node0);
      node1.isEquivalentToTyped(node0);
      node1.isTrue();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(113, 113, 113);
      Node node1 = new Node(113, node0, node0, node0, (-4075), 113);
      node1.isOnlyModifiesArgumentsCall();
      node1.getJSDocInfo();
      Node node2 = node1.srcrefTree(node0);
      node2.srcrefTree(node1);
      node1.isWith();
      node0.isFor();
      node1.children();
      node0.toString(false, false, false);
      node0.getSourceFileName();
      node0.getParent();
      Node.newNumber(1073.07148, 126, 101);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = new Node(63, 63, 63);
      Node node1 = new Node(15, node0, node0, node0, node0);
      Node node2 = Node.newString(592, " Y~aqu*#{(r{eRFa3rT", 31, (-1028));
      node2.isNE();
      node0.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = Node.newString(51, "j", 125, 54);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(118, node0, node0, node0, node0, 101, 118);
      node1.isNE();
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = new Node(39);
      node0.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(13);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[9];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseAllType();
      jSTypeArray0[0] = jSType0;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.isSwitch();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("f", node1, jSTypeArray0[0]);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.getOwnPropertyJSDocInfo((String) null);
      node0.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(102, 102, 1160);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = new Node(110);
      node0.isUnscopedQualifiedName();
      node0.isLabel();
      node0.isCase();
      node0.getDirectives();
      Node node1 = Node.newString((-3544), "(L?s1eSOo%=f!k%#g:", 324, 53);
      node1.setOptionalArg(true);
      node0.isEquivalentToShallow(node1);
      node0.isAssign();
      Node node2 = new Node((-3544), node0, 52, 943);
      Node.newString(39, ":`eZ(;\"I2V", 43, 54);
      InputId inputId0 = new InputId(":`eZ(;\"I2V");
      Node.newString("(L?s1eSOo%=f!k%#g:", (-1233), 4220);
      Node node3 = node2.removeFirstChild();
      node3.isTry();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = new Node(242);
      Node node1 = Node.newString("hUL(JIuEzW{Ka^*eRD");
      node1.isEquivalentTo(node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.setSourceEncodedPosition(43);
      node0.type = 41;
      Node node3 = new Node((-828), node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "hUL(JIuEzW{Ka^*eRD");
      Node node4 = node3.copyInformationFromForTree(node0);
      node0.clonePropsFrom(node1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        node4.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -828
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      node0.isAssign();
      node0.isOptionalArg();
      Node node1 = new Node(30, node0, node0, node0, node0);
      node1.getFirstChild();
      node1.setSideEffectFlags(1121);
      node0.getJSType();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(38, "");
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(51, 0, 0);
      Node node1 = new Node(54, node0);
      node0.isEquivalentToShallow(node1);
      node0.setLineno(46);
      node0.getIntProp(33);
      Node node2 = new Node(33, (-1734), 29);
      node0.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = new Node(125, 125, (-1065));
      node0.toStringTree();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = Node.newString(125, "t~~Gq*K+b[ P", 125, 125);
      node0.isEmpty();
      Node.extractCharno(0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(147, "3z;aY2");
      Node node1 = new Node(31);
      Node node2 = new Node((-806), node0, node1);
      node0.addChildrenToBack(node2);
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(63, nodeArray0);
      Node node1 = node0.getAncestor(0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ARRAYLIT 0 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(37, node0, node0, node0, 29, 0);
      Node node2 = node1.srcref(node0);
      node0.addChildrenToBack(node2);
      node1.getSideEffectFlags();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.49431079562));
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      Node node1 = new Node(52, node0, node0, node0, node0);
      node1.type = 37;
      node1.setSideEffectFlags(42);
      node1.useSourceInfoFromForTree(node0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Irp~v~GNs1R%twd~");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      node1.appendStringTree(mockPrintWriter0);
      node1.isArrayLit();
      node1.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node node1 = new Node(50, node0);
      Node node2 = new Node(15);
      node1.addChildBefore(node2, node0);
      node1.getIndexOfChild(node0);
      node2.isEquivalentTo(node1, true, true, false);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = new Node(147);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(63, 63, 63);
      node0.isDec();
      node0.isObjectLit();
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      node0.getDirectives();
      node0.toStringTree();
      Node node1 = new Node(63, node0, node0);
      Object object0 = new Object();
      node0.getChildAtIndex(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.isLocalResultCall();
      node2.getFirstChild();
      node2.mayMutateGlobalStateOrThrow();
      node2.getChildBefore((Node) null);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = Node.newNumber((double) 124);
      Node node1 = new Node(124, node0, node0);
      Node node2 = new Node(124, node1);
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)105;
      byteArray0[2] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node((byte)2);
      Node node1 = new Node(40, node0, node0, node0, node0, 3308, (byte)105);
      Node node2 = node1.cloneNode();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(116);
      Node node1 = Node.newNumber((double) 39);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.srcrefTree(node0);
      node0.addChildrenToBack(node1);
      node0.isEquivalentTo(node0, true, true, true);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = new Node(63, 63, 63);
      Node node1 = new Node(15, node0, node0, node0, node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node1.addChildrenToBack(node1);
      node0.isNot();
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node(153);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeRegistry0.getType("0^\"@joRHtCutC6Hk");
      jSTypeArray0[0] = null;
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) null, (List<JSType>) immutableList0);
      jSTypeArray0[1] = (JSType) functionType0;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.useSourceInfoFrom(node1);
      Node node2 = new Node(158);
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      Node node1 = new Node(0, node0, node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(63, nodeArray0);
      Node node1 = node0.getAncestor(0);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(64);
      Node node1 = new Node(29);
      Node node2 = node0.copyInformationFrom(node1);
      node2.useSourceInfoIfMissingFrom(node1);
      node0.getBooleanProp(108);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      node0.isFor();
      Node node1 = new Node(46, node0, 1, 47);
      Node node2 = node0.copyInformationFrom(node1);
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(3471);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = new Node(1697);
      Node node1 = Node.newString(728, "LPG<", 0, 147);
      node0.srcrefTree(node1);
      node0.isAssignAdd();
      node0.isWith();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(57);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 57
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(41, 37, 45);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtU'x+!ln");
      Node node1 = new Node(16, node0, node0, node0, node0, 39, 43);
      node1.putIntProp(50, 403);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // GT 39 [free_call: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = new Node(116);
      Node node1 = Node.newNumber((double) 39);
      node0.addChildrenToBack(node1);
      node0.isEquivalentTo(node0, true, true, true);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      Node node1 = new Node(43, 31, (-1765));
      node1.useSourceInfoFrom(node0);
      node0.isEquivalentTo(node1, true, true, false);
      node1.isFunction();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(33, "g8efmI$j/J<CB*2");
      node0.isGetProp();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(63, 63, 63);
      Node node1 = new Node(74, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node node2 = node0.detachFromParent();
      node0.addChildToBack(node2);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = Node.newString((-242), "/xt^", 74, (-242));
      node0.isBlock();
      Node node1 = new Node(47, node0, node0, node0, 55, 29);
      node0.getAncestor(1);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = new Node(85, 0, 85);
      node0.getBooleanProp(1357);
      Node node1 = new Node(85, 50, 4);
      node1.useSourceInfoFromForTree(node0);
      node0.isEquivalentTo(node1, true, true, false);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1005, nodeArray0);
      node0.isWith();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "g8efmI$j/J<CB*2");
      Node node1 = new Node(19, 2451, 2451);
      node0.clonePropsFrom(node1);
      node0.children();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtU'A+!ln");
      node0.setLength(2);
      node0.checkTreeEqualsImpl(node0);
      Node node1 = Node.newString(38, ">*`ZtU'A+!ln");
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString("com.goog8_.jav<script.rhino.N de$ObjectPropList`tea");
      node0.isName();
      node0.getProp(4095);
      Node node1 = new Node(41);
      Node node2 = new Node((-155), node0, node1, node1, 32, 32);
      node1.useSourceInfoFrom(node0);
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseStringType();
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(110, node0, node0, 1, 1724);
      Node node2 = new Node(110, node1);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node2, jSTypeArray0[0]);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      enumType1.isNumberObjectType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.getJSDocInfo();
      node2.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newString(148, "s*u{o`9?.A=\u0006SE2?< ");
      Node node1 = new Node(12, node0);
      Node node2 = new Node(93, node1, 1, 4095);
      node2.cloneNode();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K5,iBlsCRN<");
      node0.isEquivalentTo(node2, true, false, true);
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = new Node(50, 105, 76);
      Node node1 = new Node((-5237), node0, node0, 49, 77);
      Node node2 = new Node(50, node1);
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = new Node(64, 1141, 749);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(118);
      node0.getStaticSourceFile();
      Node node1 = new Node(56, node0, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node.newString(57, "zZ*!JmJ!Fq~ht8y", 78, 55);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newNumber((-1156.296937608372));
      Node[] nodeArray0 = new Node[13];
      nodeArray0[0] = node0;
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = Node.newString("2L3tYo[");
      Node node2 = new Node(4095, node0, node1, 52, 75);
      node0.isInstanceOf();
      node0.isNoSideEffectsCall();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isEquivalentTo(node0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{u<?H\"x2HJ(|Y|");
      Node node1 = Node.newString("MOD");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'KljhlT1M-Bp>H|q$1");
      Node node0 = new Node(154);
      node0.addSuppression("|1:V2>|a7Q17");
      node0.setSourceFileForTesting(">RDP 6[:r");
      node0.isStringKey();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = new Node(51, 108, 51);
      Node node1 = Node.newString("STRING N59:d\n", 2, 45);
      node0.copyInformationFromForTree(node1);
      node0.isInstanceOf();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newNumber((-753.8594221878333));
      Node node1 = new Node(46, node0, 42, 1033);
      node1.putIntProp(57, 147);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SHNE 42 [reflected_object: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.cloneTree();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "L5fD.");
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.mayMutateArguments();
      node1.useSourceInfoFrom(node0);
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = new Node((-2483));
      Node node1 = new Node(32, node0, node0);
      node0.detachFromParent();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isSwitch();
      Node.extractCharno(53);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(108);
      node0.isVarArgs();
      nodeArray0[0] = node0;
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      int int0 = 33;
      Node node0 = Node.newString(33, "com.google.javascript.rhino.jstype.NumberType");
      node0.toStringTree();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node0.isQuotedString();
      Node node1 = Node.newString("GaTo\"NXa", 40, (-1284));
      node0.isStringKey();
      node0.setChangeTime(2);
      node1.getSideEffectFlags();
      node0.getChangeTime();
      node0.setSourceEncodedPosition(31);
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(49);
      Node node1 = new Node(2445, node0);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node0.copyInformationFromForTree(node2);
      node3.setWasEmptyNode(false);
      node1.isEquivalentTo(node0);
      node1.isVarArgs();
      try { 
        node0.setString(";5J!6hF<T\u0003");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THROW is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = Node.newNumber((double) 38, 417, 1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.copyInformationFromForTree(node2);
      node2.toString(false, false, false);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = Node.newString((-3227), "hxm^", 74, (-3227));
      node0.isBlock();
      Node node1 = new Node(37, node0, node0, node0, node0, 4095, 36);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.checkTreeEqualsImpl(node1);
      node0.isIn();
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(108);
      nodeArray0[0] = node0;
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = node0.useSourceInfoFrom(node0);
      node1.getSourceFileName();
      node0.setSourceFileForTesting("(L?s1eSOo%=f!k%#g:");
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // IF [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newNumber((double) 105, 105, 105);
      node0.getSourceFileName();
      Node node1 = new Node(105, node0, node0, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isDefaultCase();
      node0.mayMutateArguments();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(".negate()", 152, 152);
      Node.newString(".negate()");
      node0.putIntProp(45, 152);
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 45
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = new Node(88);
      node0.toStringTree();
      Node node1 = new Node(49, (-1650), (-1571));
      node1.cloneNode();
      node0.getAncestor(54);
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newNumber((double) 2382);
      nodeArray0[0] = node0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TreeSet<JSType> treeSet0 = new TreeSet<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) treeSet0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      nodeArray0[1] = node1;
      Node node2 = new Node(169, nodeArray0, 54, 210);
      node2.getSourceOffset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(115);
      node_SideEffectFlags0.setAllFlags();
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getQualifiedName();
      Node.newString("Object#Key", 43, 0);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node2.getNext();
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(148, 148, 148);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(50, nodeArray0);
      Node node1 = new Node(32, node0, node0, node0);
      Node.mergeLineCharNo(50, 53);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = new Node(108, 1990, 108);
      Node node1 = new Node(108, node0, node0);
      node1.setLength(56);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = Node.newNumber(55.0);
      node1.srcref(node2);
      Node.newString(2318, ".");
      node1.isQualifiedName();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(65536, node0, node0, 54, 921);
      Node node2 = new Node(15);
      node1.isEmpty();
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      node3.detachFromParent();
      node3.addChildrenToFront(node0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(108);
      nodeArray0[0] = node0;
      Node node1 = new Node(108, nodeArray0, 47, 2);
      node1.removeChildren();
      node1.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(29);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newString((-242), "/xt^", 86, (-242));
      node0.isBlock();
      Node node1 = new Node(47, node0, node0, node0, 55, 29);
      node1.srcrefTree(node0);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(113);
      Node node1 = new Node((-2046), node0, 580, 39);
      node0.copyInformationFromForTree(node1);
      node0.setLineno(113);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9", 152, 152);
      Node.newString("com.google.common.base.CharMatcher$9");
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      node0.putIntProp(49, 4095);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING com.google.common.base.CharMatcher$9 152 [direct_eval: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node[] nodeArray0 = new Node[6];
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(467058);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 467058
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(116, 8, 122);
      node0.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = new Node(118, (-390), (-390));
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = new Node(76, 76, 76);
      Node node1 = node0.useSourceInfoFrom(node0);
      Node node2 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch");
      Node node3 = new Node(30, node2, node1, 8, 862);
      Node node4 = Node.newNumber((-1470.4), 767, (-1894));
      node3.copyInformationFrom(node4);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node5 = new Node(4167);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(21);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString("JI", (-243), (-243));
      node0.getString();
      node0.isVarArgs();
      Node node1 = new Node(40, node0, node0, node0, 37, 57);
      node0.detachFromParent();
      node1.isEquivalentTo(node0, true, true, true);
      node0.checkTreeEqualsImpl(node1);
      node0.getBooleanProp(8388608);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(37, node0, node0, node0, 29, 0);
      Node node2 = node1.srcref(node0);
      node1.isDec();
      node1.isEquivalentTo(node0, false, false, false);
      node1.isOnlyModifiesArgumentsCall();
      node2.isGetterDef();
      node2.addChildrenAfter(node1, node0);
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setLength(3852);
      node0.isBreak();
      node0.checkTreeEqualsImpl(node0);
      node0.getBooleanProp(2097152);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = new Node(63, 63, 63);
      node0.isDec();
      node0.isObjectLit();
      node0.isEquivalentToShallow(node0);
      node0.getQualifiedName();
      node0.getDirectives();
      node0.toStringTree();
      Node node1 = new Node(63, node0, node0);
      Object object0 = new Object();
      node0.getChildAtIndex(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.getFirstChild();
      node2.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = new Node(61);
      Node node1 = new Node(119, node0, node0, node0);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(1451);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 1451
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node(153);
      node0.setIsSyntheticBlock(false);
      Node node1 = new Node(153, node0, node0, node0);
      node1.isObjectLit();
      Node node2 = node0.setJSDocInfo((JSDocInfo) null);
      node2.isAssignAdd();
      Node.mergeLineCharNo(4, 32);
      Node node3 = node0.cloneTree();
      node3.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = Node.newString("(L?s1eSOo%=f!k%#g:");
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.setDirectives(hashSet0);
      node0.setOptionalArg(true);
      node0.toStringTree();
      node1.isSyntheticBlock();
      Node node2 = node0.srcrefTree(node1);
      node2.setDirectives(hashSet0);
      node0.isFalse();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(108);
      nodeArray0[0] = node0;
      Node node1 = new Node(29, node0, node0, node0, node0, 1909, 39);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      node0.cloneTree();
      node0.isSwitch();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = new Node(76, 76, 76);
      Node node1 = node0.useSourceInfoFrom(node0);
      node0.hasChildren();
      Node node2 = new Node(273, node1, node1, 54, 48);
      Node node3 = new Node(0, 54, 2);
      node2.addChildBefore(node3, node0);
      node3.isGetElem();
      node3.getNext();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch");
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      node0.putIntProp(32, 3661);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING com.google.javascript.rhino.Node$NodeMismatch [incrdecr: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(30, 54, 962);
      Node node1 = new Node(30, node0, 1582, 4);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = new Node(30, node1, node1, node1, 1, 0);
      InputId inputId0 = new InputId((String) null);
      node2.setInputId(inputId0);
      Node node3 = node2.removeChildren();
      node3.setWasEmptyNode(true);
      // Undeclared exception!
      try { 
        node3.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      nodeArray0[0] = node0;
      Node node1 = Node.newString(56, "STRING N59:d\n", (-2197), (-3857));
      nodeArray0[1] = node1;
      Node node2 = new Node((-2777), nodeArray0);
      node0.isVarArgs();
      node0.putIntProp(47, (-2197));
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [is_dispatcher: com.google.javascript.rhino.Node$IntPropListItem@0000000339] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(114);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(63, nodeArray0);
      Node node1 = new Node(63, node0);
      node1.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      Node node1 = Node.newNumber((-4.0), 119, (-3182));
      node0.isEquivalentTo(node1, true, false, false);
      node0.isAssignAdd();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(63, nodeArray0);
      Node node1 = new Node(421992, node0);
      Node node2 = new Node(0, node1, node1, 55, 57);
      node1.getParent();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newNumber((-1743.0));
      Node node1 = new Node((-2350), node0, node0, node0, node0);
      Node node2 = new Node(120, node1, node1);
      node2.isEmpty();
      Node node3 = new Node(50, node2);
      Node.newString(1073741824, "m3ssing pro: ", 2, (-1663));
      Node node4 = node2.detachFromParent();
      node4.getAncestor(1017);
      Node node5 = Node.newNumber((-1883.5435492));
      Node node6 = null;
      try {
        node6 = new Node(16, node5, node1, node1, 115, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[5];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType.toMaybeTemplateType((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, (Node) null);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) functionType0, (Map<TemplateType, JSType>) hashMap0);
      JSType jSType0 = modificationVisitor0.caseTemplatizedType(templatizedType0);
      jSTypeArray0[0] = jSType0;
      FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) templatizedType0, jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType1;
      JSType jSType1 = modificationVisitor0.caseAllType();
      jSTypeArray0[2] = jSType1;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType jSType2 = jSTypeRegistry1.createOptionalNullableType(jSTypeArray0[2]);
      FunctionType functionType2 = jSTypeRegistry0.createFunctionType(jSType2, (Node) null);
      jSTypeArray0[3] = (JSType) functionType2;
      // Undeclared exception!
      try { 
        modificationVisitor0.caseFunctionType(functionType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = new Node(148);
      node0.setChangeTime(0);
      Node node1 = node0.getLastSibling();
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newString("p*`ZtUA+!6w+");
      node0.isInstanceOf();
      node0.isComma();
      Node node1 = Node.newString(32, "p*`ZtUA+!6w+");
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      // Undeclared exception!
      try { 
        node1.appendStringTree(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isDelProp();
      node0.isEquivalentTo(node0);
      node0.setLineno(103);
      Node node1 = Node.newNumber((double) 4095, 32, 55);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node.newString(">*`ZtU'A+!ln");
      Node node0 = new Node(33, 220, 4095);
      // Undeclared exception!
      try { 
        node0.isQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = new Node(153);
      node0.getQualifiedName();
      Node node1 = new Node(2534, node0, node0, node0, 4095, 0);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      node0.getStaticSourceFile();
      Node node1 = new Node(117, node0, 36, 40);
      node0.isVoid();
      node0.isAnd();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = Node.newString("{7/U8");
      node0.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      node0.isIn();
      Node node1 = new Node(39, node0, node0);
      Node node2 = node0.srcrefTree(node1);
      node0.hasMoreThanOneChild();
      node0.mayMutateArguments();
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(17);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 17
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = new Node(113);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isInstanceOf();
      node0.getInputId();
      node0.isEquivalentTo(node0, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(29, node0, node0, node0, node0);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(63, nodeArray0);
      Node[] nodeArray1 = new Node[1];
      nodeArray1[0] = node0;
      Node node1 = new Node(4, nodeArray1, (-1123), 1016);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString(105, "QAt!wh(s>mA[FB?X)");
      Node node1 = new Node(52, node0, node0, 2, 29);
      node0.getQualifiedName();
      Node node2 = node1.copyInformationFrom(node0);
      node1.srcref(node0);
      node1.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newString("wX[zq!q");
      Node node1 = new Node(37, node0, node0, node0, 15, 0);
      node1.isDec();
      Node node2 = new Node((-4268), node1);
      node2.removeFirstChild();
      Node.newString(30, "wX[zq!q", 117, 1205);
      Node.newString(12, "wX[zq!q");
      // Undeclared exception!
      try { 
        node2.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = new Node(148);
      InputId inputId0 = new InputId("Sc ");
      node0.putProp(148, inputId0);
      node0.isStringKey();
      Node node1 = new Node(31, node0, node0, node0);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(120, 120, 120);
      node0.getStaticSourceFile();
      Node node1 = new Node(117, node0, 36, 40);
      node1.cloneNode();
      node1.isFor();
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = new Node(153);
      node0.isStringKey();
      Node node1 = new Node((-3987), node0, node0, 4680, 37);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = new Node(51, 51, 65);
      node0.isIf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newString("Object#Key", 36, 119);
      node0.copyInformationFrom(node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newNumber((-3238.9047540914025), 36, 36);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      node0.setWasEmptyNode(true);
      node0.isNot();
      node0.isVarArgs();
      node0.getStaticSourceFile();
      node0.getDouble();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getBooleanProp(36);
      node0.isFromExterns();
      node0.isGetterDef();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(15, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = node2.srcref(node0);
      node3.setOptionalArg(true);
      node2.isOptionalArg();
      node1.removeChild(node2);
      Node node4 = node2.useSourceInfoFromForTree(node0);
      node4.addSuppression((String) null);
      node1.isSwitch();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node.newString("wX[zEq!q");
      Node node0 = new Node(37, (-1100), (-1));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(47, nodeArray0, 48, 2);
      Node node2 = node0.clonePropsFrom(node1);
      node2.isEquivalentTo(node0, true, false, true);
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(55);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = new Node(92);
      Node node1 = new Node(57, 468, 56);
      node0.addChildAfter(node1, (Node) null);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      node0.getStaticSourceFile();
      Node node1 = new Node(117, node0, 36, 40);
      Node.newString(37, "[p%xVVbw{:g7Nr#r{", 49, 46);
      node0.isNE();
      Node node2 = node0.getParent();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(16, node0, node0, node0, node0, 555, 29);
      node0.addChildToFront(node1);
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newString("E!|OgG");
      Node node1 = new Node(118, node0, node0, 53, 92);
      Node node2 = node1.srcref(node0);
      node2.isInstanceOf();
      node2.isEquivalentToTyped(node1);
      Node.newNumber((double) 15, (-730), 0);
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newString(148, "s*u{o`9?.A=\u0006SE2?< ");
      node0.setChangeTime(0);
      Node node1 = node0.getLastSibling();
      node1.setQuotedString();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isHook();
      node0.children();
      node0.getInputId();
      node0.cloneTree();
      node0.isEquivalentTo(node0, false, false, false);
      node0.isOnlyModifiesArgumentsCall();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = new Node((-4), (-4), (-4));
      node0.removeProp((-4));
      node0.isStringKey();
      JSTypeNative jSTypeNative0 = JSTypeNative.REFERENCE_ERROR_FUNCTION_TYPE;
      node0.putProp((-4), jSTypeNative0);
      Node node1 = new Node(47, node0, node0, node0, 5047, (-876));
      node1.isFromExterns();
      node1.children();
      node1.isExprResult();
      node1.isRegExp();
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newNumber(4095.0);
      Node node1 = new Node(52, node0, node0, node0, node0);
      node1.isEmpty();
      Node node2 = new Node(2, node1);
      Node.newString((-440), "m3ssing pro: ", 36, 306654253);
      Node node3 = node0.detachFromParent();
      node3.getDouble();
      node3.getAncestor(8);
      node0.addChildrenAfter(node3, (Node) null);
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = new Node((-2456));
      Node node1 = new Node(32, node0, node0);
      node1.isUnscopedQualifiedName();
      node0.isNot();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = new Node((-4), (-4), (-4));
      node0.isStringKey();
      Node node1 = new Node(39, node0, 54, 30);
      Node node2 = node1.srcrefTree(node0);
      // Undeclared exception!
      try { 
        node2.setDouble(2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(63, nodeArray0);
      Node node1 = new Node(52);
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isHook();
      node0.getInputId();
      node0.isEquivalentTo(node0, false, false, false);
      node0.isOnlyModifiesArgumentsCall();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newString("m^[WCcBb~j:");
      Node node1 = Node.newString(52, "m^[WCcBb~j:");
      Node node2 = new Node(8, node0, node0, node1, (-107), 37);
      node1.isDec();
      node0.isEquivalentToTyped(node1);
      node1.setVarArgs(true);
      int int0 = Node.MAX_COLUMN_NUMBER;
      node1.toString(false, false, false);
      // Undeclared exception!
      try { 
        node2.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = Node.newString((-215), "'", (-215), (-215));
      Node node1 = new Node(32, node0, node0, 8, 1);
      node1.addChildrenToBack(node1);
      node0.isEmpty();
      node0.setQuotedString();
      node0.isEquivalentTo(node1, false, false, true);
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newString("JI", (-243), 30);
      node0.addSuppression("JI");
      node0.getString();
      Node node1 = new Node(102, (-3986), (-243));
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = Node.newNumber(4095.0);
      Node node1 = new Node(52, node0, node0, node0, node0);
      node1.isEmpty();
      Node node2 = Node.newString(48, "m3ssing pro: ");
      Node node3 = new Node(2, node1);
      Node node4 = Node.newString((-440), "m3ssing pro: ", 36, 306654253);
      node1.useSourceInfoFrom(node2);
      node1.toStringTree();
      node4.setQuotedString();
      node3.isGetterDef();
      // Undeclared exception!
      try { 
        node4.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -440
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      Node node1 = new Node(31, node0, node0, 2, (-647));
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.hasChildren();
      Node.newString("C5vV:F$%X\"'G4#Zx");
      Node node3 = node2.detachFromParent();
      Node node4 = new Node((-1), node2);
      node4.getAncestor(16777216);
      Node node5 = new Node(29);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node3, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(37, node0, node0, node0, 29, 0);
      Node node2 = node1.srcref(node0);
      node1.isDec();
      node2.isEquivalentToTyped(node1);
      int int0 = Node.NO_SIDE_EFFECTS;
      node1.toString(false, false, false);
      node1.addChildBefore(node2, node0);
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node2);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtU'A+!ln");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<]3CS\" i_hX");
      node0.setLength(2);
      Node node1 = Node.newString("<]3CS\" i_hX", 54, 1);
      node1.putIntProp(43, 4095);
      node0.isOptionalArg();
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      node1.putIntProp(54, 1);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING <]3CS\" i_hX 54 [is_constant_name: com.google.javascript.rhino.Node$IntPropListItem@0000000004] [slash_v: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.49431079562));
      Node node1 = new Node(51, 55, 1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = node1.clonePropsFrom(node0);
      node2.isEquivalentTo(node1, true, true, false);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(42, node0, node0, 30, 1);
      node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = new Node(116);
      node0.putBooleanProp((-1356), true);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      int int0 = 115;
      Node node0 = new Node(115);
      Node[] nodeArray0 = new Node[8];
      Node node1 = Node.newNumber(1087.5958455971);
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      node0.useSourceInfoIfMissingFrom(node0);
      Node node2 = null;
      try {
        node2 = new Node(2878, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      InputId inputId0 = new InputId("ERROR_FUNCTION_TYPE");
      node0.setInputId(inputId0);
      Node node1 = Node.newString(57, "}>q(BCr{~,&kCKwR");
      node0.getQualifiedName();
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9", 152, 152);
      node0.getBooleanProp(46);
      Node node1 = node0.cloneNode();
      node1.isOptionalArg();
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      node0.putIntProp(46, 4095);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING com.google.common.base.CharMatcher$9 152 [is_namespace: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(154, 3266, 49);
      node0.getJSDocInfo();
      Node node1 = node0.cloneNode();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(50);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 50
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newString(";@LxD1Z_");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.isStringKey();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      Node node3 = new Node(51, node1, 1489, 0);
      node1.isSyntheticBlock();
      node0.isEquivalentTo(node3, false, false, false);
      node1.isRegExp();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2300), 2048, 2048);
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node1 = new Node(4, 29, 53);
      node1.setDirectives(set0);
      node1.setSourceEncodedPosition(52);
      node1.cloneNode();
      node1.children();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = new Node(113, 113, 113);
      node0.isHook();
      InputId inputId0 = new InputId("Unknown class name");
      node0.isEquivalentTo(node0, false, false, false);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newString("Unknown class name");
      Node node2 = node0.copyInformationFrom(node1);
      node2.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = new Node(133);
      node0.setLineno(133);
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = Node.newNumber((double) 94, 70, 94);
      Node node1 = new Node(44);
      node1.useSourceInfoFromForTree(node0);
      Node node2 = new Node(94, node0, node1, node1, node1, 1, 5760);
      node2.useSourceInfoIfMissingFromForTree(node1);
      node2.getAncestors();
      node0.clonePropsFrom(node1);
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = new Node(133);
      node0.setChangeTime(926);
      node0.setLineno(133);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      Node node1 = new Node(31, node0, node0, 2, (-647));
      node0.useSourceInfoFrom(node1);
      node1.hasChildren();
      Node node2 = Node.newString(38, "inferred");
      node2.getQualifiedName();
      node1.cloneTree();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = new Node(150, 150, 150);
      Node node1 = new Node(49, node0);
      node1.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      Node node1 = new Node(31, node0, node0, 2, (-647));
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.isAdd();
      node0.cloneTree();
      Node node3 = null;
      try {
        node3 = new Node(36, node1, node2, node0, 32, 16384);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node(63, 63, 63);
      Node node1 = node0.cloneNode();
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(37, node0, node0, node0, 15, 0);
      Node node2 = node1.srcref(node0);
      node1.isDec();
      node2.isEquivalentToTyped(node1);
      node0.getLength();
      node1.toString(false, false, false);
      node1.addChildBefore(node2, node0);
      // Undeclared exception!
      node2.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = new Node(2490, 2490, 2490);
      node0.isUnscopedQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(93, nodeArray0, (-2861), (-3641));
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = new Node(3898, 0, 3898);
      Node node1 = new Node(38, node0, node0, 3898, 0);
      node1.useSourceInfoFrom(node0);
      node0.hasChildren();
      Node.newString(61, "pBK/0i:");
      // Undeclared exception!
      try { 
        node1.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9");
      Node node1 = new Node(40, (-2556), 30);
      Node node2 = node1.clonePropsFrom(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isQualifiedName();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = new Node((-4), (-4), (-4));
      node0.isStringKey();
      Node node1 = new Node(40);
      node0.isSyntheticBlock();
      node1.isEquivalentTo(node1, false, false, false);
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      node0.toStringTree();
      node0.isThis();
      node0.isInstanceOf();
      Node node1 = new Node(29, node0);
      // Undeclared exception!
      try { 
        node1.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((double) (-1636));
      node0.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = new Node((-15), (-15), (-15));
      node0.isStringKey();
      Node node1 = new Node(39, node0, 54, 30);
      node0.isSyntheticBlock();
      node1.isEquivalentTo(node1, false, false, false);
      node0.isVarArgs();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9");
      Node node1 = new Node(152, (-2556), 30);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = node1.clonePropsFrom(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.isLabelName();
      node2.isDebugger();
      node2.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9");
      Node node1 = new Node(152, (-2556), 30);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = node1.clonePropsFrom(node0);
      Node node3 = node2.srcrefTree(node0);
      node3.useSourceInfoIfMissingFromForTree(node1);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node1.isLabelName();
      node1.toStringTree();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEBUGGER is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node1 = new Node(1802, node0, 3242, 198);
      node1.siblings();
      node1.isDefaultCase();
      node0.useSourceInfoIfMissingFrom(node1);
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = new Node((-4), (-4), (-4));
      node0.isStringKey();
      Node node1 = new Node(39, node0, 54, 30);
      Node node2 = node1.srcrefTree(node0);
      node2.isUnscopedQualifiedName();
      node0.isSyntheticBlock();
      node1.isEquivalentTo(node1, false, false, false);
      node0.isVarArgs();
      node1.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = new Node(43, node0, node0, node0, 30, 57);
      node0.useSourceInfoFrom(node1);
      node1.hasChildren();
      Node node2 = Node.newString(38, "inferred");
      Node.newNumber((double) 46, 303, 96);
      node0.isIn();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = new Node(113, 113, 113);
      Node node1 = Node.newNumber(0.0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.setIsSyntheticBlock(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.newString(85, "=&X-2Y", 53, 37);
      Node.newString("m3ssing pro: ");
      // Undeclared exception!
      try { 
        node2.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9", 152, 152);
      node0.type = (-1514);
      InputId inputId0 = new InputId("Unknown class name");
      Node node1 = Node.newNumber((double) 0, (-3073), 57);
      node0.isEquivalentTo(node1, false, false, false);
      node1.isOnlyModifiesArgumentsCall();
      node1.getDouble();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newString("N59:d");
      node0.isComma();
      Node node1 = Node.newString(32, ".A$XymXN:{?pt?.");
      node1.isLabel();
      node0.isDelProp();
      node1.addSuppression("Db");
      Node node2 = new Node(51, node0, node1, node1, 1018, (-1174));
      node1.isAdd();
      node2.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9");
      Node node1 = new Node(154, (-2556), 30);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isLabelName();
      node1.toStringTree();
      node1.addChildrenToBack(node2);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      node0.isAssign();
      node0.isAnd();
      node0.setType(110);
      Node node1 = new Node(30, node0, node0, node0, node0);
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = new Node(101);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "node is not a child");
      node0.putBooleanProp((-2013), false);
      node0.getDirectives();
      node0.isAnd();
      node0.toString(true, false, true);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.3));
      node0.detachChildren();
      Node node1 = new Node((-2012), 32, 57);
      Node node2 = new Node(152, node1, node0, node1, node1, 34, 52);
      node2.removeChildren();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = Node.newString("26");
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(38, 101, 116);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = node1.clonePropsFrom(node0);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.isLabelName();
      node2.toStringTree();
      // Undeclared exception!
      try { 
        node1.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 101 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = new Node(63, 63, 63);
      node0.isObjectLit();
      node0.getDirectives();
      Node node1 = new Node(36, node0, node0);
      node1.wasEmptyNode();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = new Node(92);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node1 = new Node(38, node0, node0);
      node1.cloneTree();
      Node node2 = null;
      try {
        node2 = new Node(79, node0, node0, node0, (-2334), 1189);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newString("(L?s1eSOo%=f!k%#g:");
      HashSet<String> hashSet0 = new HashSet<String>();
      Node node1 = Node.newString(29, "(L?s1eSOo%=f!k%#g:", 52, 38);
      node1.setDirectives(hashSet0);
      node1.isEquivalentToShallow(node0);
      node1.getDirectives();
      node1.isQualifiedName();
      node1.getAncestors();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = new Node(117);
      Node node1 = new Node((-647), node0, 0, 50);
      node0.useSourceInfoFrom(node1);
      node1.hasChildren();
      Node node2 = Node.newString(38, "Xinferred");
      node2.getQualifiedName();
      node1.isVarArgs();
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9");
      Node node1 = new Node(152, (-2556), 30);
      node1.isCast();
      node1.cloneNode();
      Node node2 = node1.clonePropsFrom(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node1.isLabelName();
      node1.toStringTree();
      node0.isQualifiedName();
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = new Node(100);
      Node node1 = node0.cloneNode();
      node1.isOptionalArg();
      node1.getChangeTime();
      Node node2 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags");
      node2.detachChildren();
      node2.putIntProp(256, 55);
      node0.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 256
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newString((-243), "/xt^", 98, (-243));
      node0.isVarArgs();
      Node node1 = new Node(47, node0, node0, node0, 55, 29);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.setVarArgs(true);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node1.isStringKey();
      // Undeclared exception!
      try { 
        node2.getAncestor((-5423));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = new Node(100);
      node0.hasOneChild();
      node0.putBooleanProp(100, false);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isAnd();
      Node node1 = new Node(2, node0, node0, node0, node0, 12, 50);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = new Node(98, 98, 98);
      node0.toStringTree();
      node0.getSourceOffset();
      Node node1 = Node.newString("HOOK 98\n", 783, (-423));
      node0.useSourceInfoIfMissingFrom(node1);
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newString("N59:d");
      node0.toStringTree();
      Node node1 = Node.newString(33, "N59:d");
      // Undeclared exception!
      try { 
        node1.getQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newString("b[:");
      Node node1 = new Node(118, node0, (-1741), 57);
      node1.isLocalResultCall();
      node0.isAssign();
      node0.getAncestors();
      node1.isVar();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // VAR is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "eiJ u)g");
      Node node0 = Node.newString((-243), "/xt^", (-243), (-243));
      node0.isVarArgs();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isObjectLit();
      Node node1 = new Node(43, 36, 4730);
      Node node2 = new Node(51, node0, node1);
      node2.cloneNode();
      // Undeclared exception!
      try { 
        node0.addChildAfter(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtU'A+!ln");
      node0.isLabel();
      node0.setLength(54);
      Node node1 = Node.newString("<]3CS\"Ui_hX", 54, 1);
      node1.children();
      node1.isQuotedString();
      node0.getLength();
      node1.isDebugger();
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newString("(L?s1eSOo%=f!k%#g:");
      HashSet<String> hashSet0 = new HashSet<String>();
      Node node1 = Node.newString(29, "(L?s1eSOo%=f!k%#g:", 52, 38);
      node1.setDirectives(hashSet0);
      node1.toStringTree();
      node0.isEmpty();
      node1.isInstanceOf();
      Node node2 = Node.newString(30, "V$");
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9", 152, 152);
      node0.getBooleanProp(40);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = node0.cloneNode();
      node1.isOptionalArg();
      node1.getChangeTime();
      node0.putIntProp(40, 1282);
      node1.isOnlyModifiesArgumentsCall();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING com.google.common.base.CharMatcher$9 152 [originalname: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newNumber(4095.0);
      Node node1 = new Node(52, node0, node0, node0, node0);
      node0.isSyntheticBlock();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node0.isScript();
      node3.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = new Node(114);
      node0.toStringTree();
      node0.isFor();
      node0.setChangeTime(35);
      node0.isLabelName();
      Node node1 = node0.getLastSibling();
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.3));
      node0.detachChildren();
      Node node1 = new Node(4, node0, node0, node0, node0, 38, (-252));
      Node node2 = node1.srcref(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(3195);
      node0.isLabel();
      node2.getJsDocBuilderForNode();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.setSourceFileForTesting("46");
      // Undeclared exception!
      try { 
        node0.getSourceOffset();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number 0
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.isLabelName();
      node0.getLastSibling();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = new Node(114);
      node0.toStringTree();
      node0.isQualifiedName();
      node0.isFor();
      Node node1 = Node.newString("RSH", 79, (-1117));
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = new Node(100);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(53, node1, 5553, 53);
      node2.isSyntheticBlock();
      Node.newNumber(46.255306559671396, 36, (-601));
      Object object0 = new Object();
      node0.getFirstChild();
      node2.setVarArgs(false);
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = Node.newString("C", (-243), 30);
      node0.addSuppression("C");
      node0.getString();
      node0.hasChildren();
      node0.isComma();
      node0.isTry();
      Node node1 = Node.newString(1, "C");
      Node node2 = Node.newString(" 2W'F#ayF2,Q%G\"", 39, 55);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch0.equals(node_NodeMismatch0);
      Node.mergeLineCharNo(50, 38);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = new Node(117);
      Node node1 = new Node(117, node0, 54, 57);
      Iterable<Node> iterable0 = new ArrayList<Node>(4095);
      node1.isDefaultCase();
      Node node2 = node0.cloneTree();
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      node0.getJsDocBuilderForNode();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.isEquivalentToShallow(node0);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = Node.newString("2L3tYo[");
      Node node2 = new Node(4095, node0, node1, 52, 153);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node3 = Node.newString("2L3tYo[", 3, 308);
      node2.replaceChild(node0, node3);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node(92);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node1 = new Node(38, node0, node0);
      Node node2 = new Node(42, node1, 126, 4095);
      // Undeclared exception!
      try { 
        node1.setString("new child has existing sibling");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString("O;");
      Node node1 = new Node(155, (-1655), 2868);
      node1.isCast();
      Node node2 = node0.clonePropsFrom(node1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.isLabelName();
      node0.toStringTree();
      node1.isQualifiedName();
      node0.getJsDocBuilderForNode();
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(43, node0, node0, node0, node0, 1007, 94);
      Node node2 = node1.srcref(node0);
      node1.setOptionalArg(true);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(16);
      node2.isLabel();
      node0.getJsDocBuilderForNode();
      node2.isNot();
      Node node3 = null;
      try {
        node3 = new Node((-3), node0, node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = new Node(117);
      Node node1 = new Node(117, node0, 54, 57);
      Node node2 = node1.removeChildren();
      Node node3 = new Node(36, node1, node1, 0, 1);
      node2.setLineno(118);
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      String string0 = ")9:BrMMTc:t";
      Node node0 = Node.newString((-1603), ")9:BrMMTc:t", 154, (-243));
      Node node1 = new Node((-2043), node0, node0, 556, 16);
      Node node2 = new Node((-243), node1, node1, node1);
      Node node3 = new Node(105, node2);
      // Undeclared exception!
      try { 
        node3.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -243
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isNull();
      node0.putIntProp(83, 83);
      node0.isTry();
      Node node1 = new Node(42, 4095, 15);
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString(148, "s*u{ho`9?.A=\u0006SE2?< ");
      node0.setChangeTime(4095);
      node0.setQuotedString();
      node0.getChangeTime();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      Node node1 = null;
      try {
        node1 = new Node(37, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = new Node(100);
      node0.hasOneChild();
      node0.putBooleanProp(100, false);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isAssignAdd();
      node0.isOr();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node1 = new Node(117, node0, node0);
      node1.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isContinue();
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(98);
      node0.isOnlyModifiesThisCall();
      node0.isEmpty();
      node0.getLength();
      node0.setSourceFileForTesting(" : ");
      node0.wasEmptyNode();
      node0.isGetterDef();
      Node node1 = new Node((-450), node0, node0, 50, 2479);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.3));
      node0.detachChildren();
      node0.mayMutateArguments();
      node0.getSideEffectFlags();
      Node node1 = Node.newString("Error");
      node1.type = 37;
      node1.setSideEffectFlags(42);
      node1.isOr();
      int int0 = Node.COLUMN_BITS;
      int int1 = Node.COLUMN_MASK;
      node1.getChangeTime();
      node1.checkTreeEquals(node0);
      node0.isNull();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node1.setSideEffectFlags(node_SideEffectFlags2);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(117);
      node0.siblings();
      Node node1 = new Node(9, 112, 512);
      node1.isCast();
      Node node2 = node0.clonePropsFrom(node1);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.isLabelName();
      node1.toStringTree();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newString(35, "/ox,t^", 35, (-248));
      node0.toStringTree();
      Node node1 = new Node(47, node0, node0, node0, 55, 31);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isCatch();
      node1.isNE();
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newString("first new child has existing sibling");
      Node node1 = new Node(38, node0, node0, node0, node0, 53, 38);
      node1.isWhile();
      Node node2 = node1.srcref(node0);
      node0.isEquivalentTo(node1, false, true, false);
      node1.wasEmptyNode();
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newNumber((double) 105, 105, 105);
      Node node1 = new Node(105, node0, node0, node0);
      node1.copyInformationFrom(node0);
      node1.checkTreeEquals(node0);
      node1.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(91);
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node1 = Node.newString(46, "<`");
      node0.isComma();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isAnd();
      Node node2 = new Node(40, node0, node0, node0, node0);
      node0.isFromExterns();
      node0.children();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(39);
      node2.isExprResult();
      node1.isRegExp();
      Node node3 = node0.getParent();
      node1.srcref(node3);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtUA+!ln");
      node0.isInstanceOf();
      node0.isComma();
      Node node1 = Node.newString(32, ">*`ZtUA+!ln");
      node0.setChangeTime(2);
      Node node2 = new Node(31, node0, node1, node1, node0, 29, 54);
      node2.putBooleanProp(4095, true);
      node1.isLabelName();
      node1.getLastSibling();
      node0.setQuotedString();
      node2.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = new Node(64);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(54, node1, (-1634), 0);
      node0.isSyntheticBlock();
      Node node3 = new Node(32, 43, 54);
      Object object0 = new Object();
      node0.getFirstChild();
      node3.setVarArgs(false);
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = new Node((-1169));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = new Node((-513899810), node0, 120, 42);
      Node.newNumber((-586.59233054), 29, 8);
      Object object0 = new Object();
      node1.getFirstChild();
      Node node2 = new Node(154, node1, 18, 47);
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newNumber(47.0);
      Node node1 = new Node(52, node0, node0, node0, node0);
      node0.isSyntheticBlock();
      node0.useSourceInfoIfMissingFromForTree(node1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.setIsSyntheticBlock(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.newString((-440), "missing prop: ", 36, (-1352));
      Node.newString("missing prop: ");
      Node node2 = node0.detachFromParent();
      node2.getAncestor(8);
      node0.addChildrenAfter(node2, (Node) null);
      // Undeclared exception!
      try { 
        node0.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(117);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(91, node0, node0, 2, (-647));
      Node node2 = node0.useSourceInfoFrom(node1);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.createObjectType("", node0, (ObjectType) null);
      node0.isComma();
      Node node3 = Node.newString(38, "inferred");
      node3.getAncestor(50);
      node3.getQualifiedName();
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = new Node(113);
      node0.setSourceEncodedPosition((-417));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isSetterDef();
      InputId inputId0 = new InputId("com.google.common.base.SmallCharMatcher");
      node0.setInputId(inputId0);
      node0.isEquivalentTo(node0, false, false, false);
      node0.toStringTree();
      node0.isQualifiedName();
      node0.isFor();
      node0.getStaticSourceFile();
      Node node1 = new Node(54, node0, node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9");
      node0.setSourceFileForTesting("com.google.common.base.CharMatcher$9");
      node0.getSourceOffset();
      node0.getAncestors();
      Node node1 = Node.newString("com.google.common.base.CharMatcher$9");
      node0.copyInformationFrom(node1);
      node1.getJSType();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      Node node1 = new Node(117, node0, 54, 57);
      node1.isRegExp();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = Node.newString((-1435), "UNKNOWN_TYPE", 204, 3600);
      Node node3 = Node.newString("");
      Node node4 = node0.detachFromParent();
      node2.getAncestor(12);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node4, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9");
      Node node1 = new Node(43);
      node1.isCast();
      Node node2 = node1.clonePropsFrom(node0);
      node1.useSourceInfoFromForTree(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node1.isLabelName();
      node1.toStringTree();
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newString("b[:");
      Node node1 = new Node(117, node0, (-1741), 57);
      node1.isLocalResultCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
      node0.isAssign();
      node_SideEffectFlags0.valueOf();
      node0.getAncestors();
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newString((-243), "/ox,t^", 98, (-243));
      node0.isEmpty();
      Node node1 = new Node(51, node0, 1, 50);
      node1.mayMutateArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.setJSDocInfo(jSDocInfo0);
      node1.putIntProp(309, 2);
      node0.isEquivalentToTyped(node1);
      Node node2 = null;
      try {
        node2 = new Node(47, node0, node0, node0, 55, 29);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9", 152, 152);
      node0.getBooleanProp(44);
      node0.wasEmptyNode();
      Node node1 = node0.cloneNode();
      node1.isOptionalArg();
      node1.getChangeTime();
      node1.setSourceEncodedPosition(152);
      node0.putIntProp(44, 1282);
      node0.isAdd();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 44
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = new Node(2, node0, node0, node0, node0, 1, 12);
      node1.getInputId();
      node0.setInputId((InputId) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.setDirectives(hashSet0);
      Node node2 = new Node(39, 68, 55);
      node2.isLocalResultCall();
      node2.isReturn();
      node1.replaceChild(node0, node2);
      node1.isFromExterns();
      node0.isDo();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9");
      Node node1 = new Node(122, (-2556), 30);
      node1.isCast();
      Node node2 = node1.clonePropsFrom(node0);
      node2.checkTreeEqualsImpl(node1);
      node1.isLabelName();
      node1.toStringTree();
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = new Node((-722));
      Node node1 = new Node((-1035), node0, node0, node0, node0);
      Node node2 = node1.removeFirstChild();
      Node node3 = node1.srcref(node0);
      node3.siblings();
      node3.getJSDocInfo();
      node2.siblings();
      node2.addChildToFront(node0);
      node1.isDelProp();
      node1.isSwitch();
      node1.wasEmptyNode();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isWith();
      node2.isStringKey();
      Node.newString(36, "com.google.common.base.CharMatcher$NegatedMatcher");
      node1.isQuotedString();
      // Undeclared exception!
      try { 
        node3.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isStringKey();
      node0.setChangeTime(2837);
      node0.putBooleanProp(1, true);
      node0.isLabelName();
      Node node1 = node0.getLastSibling();
      node1.setOptionalArg(true);
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newString("`=KKiPYL3VFERvn");
      Node node1 = Node.newString(125, "=9PH?", 39, 36);
      node0.isString();
      node0.isIn();
      node1.isEmpty();
      // Undeclared exception!
      try { 
        node1.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9");
      Node node1 = new Node(39, 40, 47);
      node1.isCast();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7wL-V!<60APKk\"u");
      Node node2 = node1.clonePropsFrom(node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.isLabelName();
      node0.toStringTree();
      node0.setSourceEncodedPosition(30);
      Node node3 = new Node(57);
      node3.isObjectLit();
      node3.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtUA+!ln");
      Node node1 = Node.newString(32, ">*`ZtUA+!ln");
      node0.getDirectives();
      node0.putIntProp(37, 42);
      node0.isOnlyModifiesThisCall();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.isSetterDef();
      Node node2 = new Node(31, node1, node1, node1, node0);
      node1.getQualifiedName();
      node2.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = new Node(98);
      node0.toStringTree();
      node0.hasMoreThanOneChild();
      node0.isAssignAdd();
      node0.isString();
      node0.getJSDocInfo();
      node0.isDo();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = new Node(130, 86, (-856));
      node0.getJSDocInfo();
      Node node1 = new Node(38, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isExprResult();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.2568504450483));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node node1 = new Node(52, (-26), 98);
      node0.isCast();
      node1.getQualifiedName();
      node0.isGetProp();
      node0.setDouble(55);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = new Node(52, 31, 47);
      Node node3 = node2.setJSDocInfo(jSDocInfo0);
      node2.isInc();
      node2.copyInformationFromForTree(node0);
      // Undeclared exception!
      try { 
        node3.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newString((-243), "/ox,t^", 98, (-243));
      node0.isEmpty();
      Node node1 = new Node(47, node0, node0, node0, 55, 29);
      Node node2 = node1.cloneNode();
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node0.useSourceInfoFrom(node2);
      node1.isNew();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -243
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newString(130, "s*u{o`9?.A=\u0006SE2?< ");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)60;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.putIntProp(55, 42);
      Node node1 = Node.newString("s*u{o`9?.A=\u0006SE2?< ");
      Node node2 = new Node(5274, node1, node0, node0, 31, 637);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node3 = node2.removeChildAfter(node1);
      node3.getString();
      Node node4 = new Node(57, 55, (-1788));
      Node.NodeMismatch node_NodeMismatch0 = node4.checkTreeEqualsImpl(node2);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("s*u{o`9?.A=\u0006SE2?< ", true);
      node_NodeMismatch0.equals(simpleSourceFile0);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtU'A+!ln");
      node0.isLabel();
      node0.isLocalResultCall();
      Node.newString(">*`ZtU'A+!ln");
      Node node1 = new Node(54, node0, node0);
      node0.setLength((-461));
      Node node2 = Node.newString("<]3CS\" i_hX", 54, 1);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = new Node((-1200), node1, node1, 49, 46);
      Node node4 = Node.newString(38, "com.google.javascript.rhino.Node$AncestorIterable$1");
      node4.isQualifiedName();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      node0.getJsDocBuilderForNode();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.isEquivalentToShallow(node0);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = Node.newString("2L3tYo[");
      Node node2 = new Node(4095, node0, node1, (-3441), 153);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node3 = new Node(37);
      node2.replaceChildAfter(node0, node3);
      node1.copyInformationFromForTree(node0);
      node3.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newNumber(47.0);
      Node node1 = new Node(52, node0, node0, node0, node0);
      node0.isSyntheticBlock();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node3 = Node.newString("missing prop: ");
      Node.newString(30, "missing prop: ");
      node1.cloneNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node3.isWith();
      node2.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = Node.newNumber(47.0);
      Node node1 = new Node(52, node0, node0, node0, node0);
      node1.srcref(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(15);
      node0.getSideEffectFlags();
      node0.isLabel();
      Node.newNumber((double) 4095, 47, 5760);
      node1.isDelProp();
      String string0 = "com.google.common.base.SmallCharMatcher";
      Node node2 = Node.newString("com.google.common.base.SmallCharMatcher", 39, 36);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newNumber(604.46187);
      Node node1 = new Node(40, node0, node0, node0, node0);
      node1.isSyntheticBlock();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node3 = Node.newString("b['Myt!Y[NSD1i-/HO");
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node2.isUnscopedQualifiedName();
      Node node4 = new Node(8, node3, node1);
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newString(83, "(L?s1eSOo%=f!k%#g:", 44, 1151);
      node0.children();
      Node node1 = new Node(105, node0, node0, node0, 32, 105);
      node0.setWasEmptyNode(true);
      node1.getAncestor(13);
      node0.checkTreeEquals(node1);
      node1.cloneNode();
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = new Node(55);
      node0.isHook();
      Node node1 = Node.newString(51, "$VUEe");
      node1.isIn();
      node1.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = new Node(98);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(57, node1, 64, 25);
      Node node3 = new Node((-1832), node2, node2, (-474), 31);
      node3.isSyntheticBlock();
      Node node4 = Node.newNumber((double) 31, 2, 52);
      Node node5 = node3.getFirstChild();
      node5.setVarArgs(true);
      node4.isVoid();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.WHITESPACE");
      Node node1 = Node.newString(125, "CharMatcher.WHITESPACE", 51, 4);
      Node node2 = new Node(148, 65549, 39);
      node2.isComma();
      node1.isAdd();
      node0.isNoSideEffectsCall();
      node2.useSourceInfoFromForTree(node0);
      // Undeclared exception!
      try { 
        Node.newString(25, (String) null, 524288, 15);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = new Node(92);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node1 = new Node(38, node0, node0);
      node1.copyInformationFromForTree(node0);
      // Undeclared exception!
      try { 
        node1.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = Node.newString(153, "?:9+kV2h=H\"/v{");
      node0.setChangeTime(153);
      node0.putBooleanProp(397, false);
      node0.isLabelName();
      Node node1 = node0.getLastSibling();
      node1.setQuotedString();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(62, nodeArray0, (-2068), 48);
      node2.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = new Node(126);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isAnd();
      Node node1 = new Node(9, node0, node0, 4095, 47);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = new Node(51);
      Node node4 = null;
      try {
        node4 = new Node(382, node2, node0, node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = Node.newString("<`", 91, 91);
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node1 = new Node(51, node0, node0, node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wX[z4q!q");
      Node node2 = node1.srcref(node0);
      node0.isComma();
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isAnd();
      node1.useSourceInfoFrom(node2);
      Node node3 = null;
      try {
        node3 = new Node(40, node2, node0, node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isStringKey();
      Node node1 = new Node(11);
      Node node2 = node0.cloneNode();
      node2.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = new Node(0, node0, node0);
      node1.isHook();
      node0.isOnlyModifiesArgumentsCall();
      node0.addSuppression("hT,e");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.isAssignAdd();
      node1.isStringKey();
      Node node2 = new Node(8, node1);
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(86, 306, 306);
      node0.isAssign();
      node0.isAnd();
      Node node1 = null;
      try {
        node1 = new Node(692274, node0, node0, (Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = node0.cloneNode();
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = Node.newString(1380, "ea~O4H-4", 1380, 1380);
      Node node1 = Node.newNumber((double) 53);
      node1.isEquivalentTo(node0, false, false, true);
      Node node2 = new Node(26, node0, 55, 1049);
      node2.setIsSyntheticBlock(true);
      node2.isEquivalentTo(node0, false, true, false);
      Node node3 = node2.getLastSibling();
      node3.isOnlyModifiesArgumentsCall();
      node1.isUnscopedQualifiedName();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = new Node(2, node0, node0, node0, node0, 1, 12);
      node1.getInputId();
      Node node2 = new Node(537, 39, 2);
      node0.isComma();
      node1.isExprResult();
      Node node3 = node1.removeChildren();
      node3.isIn();
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newString(114, "vy", 114, 114);
      Node node1 = new Node(42, node0, node0, node0, 0, (-1430));
      node1.useSourceInfoFromForTree(node0);
      Node node2 = node0.clonePropsFrom(node1);
      node1.toStringTree();
      node0.addChildrenToBack(node1);
      node1.isTry();
      node2.isDo();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newString("(L?s1eSOo%=f!k%#g:");
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.getAncestor(0);
      String string0 = "InC#J]";
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "InC#J]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isStringKey();
      Node node1 = Node.newString(12, "46", 30, 15);
      node1.getSourceOffset();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node2 = Node.newString(40, "46", 16, 155);
      Node node3 = new Node(32, node2, node0);
      // Undeclared exception!
      try { 
        node3.getChildBefore(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = new Node(37);
      Node node1 = node0.cloneNode();
      node1.cloneTree();
      node1.addChildToFront(node0);
      node1.siblings();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = new Node(37);
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newString(132, "quoted");
      node0.setQuotedString();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtUA+!ln");
      Node node1 = Node.newString(32, ">*`ZtUA+!ln");
      node0.getDirectives();
      node0.putIntProp(37, 42);
      node0.isOnlyModifiesThisCall();
      node1.isSetterDef();
      node0.getIntProp(37);
      Node node2 = new Node(31, node1, node1, node1, node0);
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(2, node0, 70, 132);
      node0.clonePropsFrom(node1);
      node0.isHook();
      node0.isOnlyModifiesArgumentsCall();
      node0.addSuppression("hT,e");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isAssignAdd();
      node0.isStringKey();
      node0.getJSDocInfo();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9");
      Node node1 = new Node(152, (-2540), 30);
      node1.isCast();
      Node node2 = node1.clonePropsFrom(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node1.isIn();
      node1.toStringTree();
      Node node3 = new Node(4095);
      node3.isObjectLit();
      node0.isInstanceOf();
      node2.isEmpty();
      node1.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = new Node(100);
      node0.hasOneChild();
      node0.putBooleanProp(100, false);
      Node node1 = new Node(52, node0, node0, node0, node0);
      node0.setCharno(100);
      node1.isFromExterns();
      node0.children();
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isExprResult();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(117, node0, (-1741), 57);
      node1.isLocalResultCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isLabelName();
      node1.toStringTree();
      Node node2 = node1.getLastSibling();
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(37, nodeArray0, 152, 120);
      Node node1 = new Node(152, node0, node0);
      node0.copyInformationFromForTree(node1);
      node1.isQuotedString();
      Node node2 = null;
      try {
        node2 = new Node(64, node0, node0, node0, 12, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(117, node0, 36, 40);
      node0.isSyntheticBlock();
      node1.isFor();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.setIsSyntheticBlock(true);
      node0.getJSDocInfo();
      node0.isAnd();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      node0.isSetterDef();
      Node node1 = new Node(1860, node0);
      node0.addChildrenToBack(node1);
      node0.isLocalResultCall();
      node0.isObjectLit();
      node0.isTry();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = new Node(115);
      node0.cloneNode();
      node0.addChildToFront(node0);
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = new Node(63, 63, 63);
      Node node1 = new Node((-2795), node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      node0.hasOneChild();
      node0.isObjectLit();
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(36);
      node0.isContinue();
      node0.isReturn();
      node0.isName();
      node0.isRegExp();
      node2.srcrefTree(node3);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.isTrue();
      node0.isSwitch();
      Node node1 = new Node(1, node0, node0);
      node1.removeFirstChild();
      Node node2 = new Node(48, node1, node0, node0);
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = new Node((-1316));
      Node node1 = Node.newNumber((double) 56);
      node1.getChangeTime();
      node0.setSourceEncodedPosition(39);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isEquivalentTo(node0, false, false, false);
      node0.setCharno((-1316));
      node0.copyInformationFrom(node2);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      node0.isAssign();
      node0.isAnd();
      Node node1 = new Node(30, node0, node0, node0, node0);
      node1.getFirstChild();
      node1.setSideEffectFlags(1121);
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.putProp(56, (Object) null);
      node0.isDebugger();
      node0.isTrue();
      node0.isSwitch();
      Node node1 = new Node(1, node0, node0);
      node1.removeChildren();
      node1.isIn();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newNumber(47.0);
      Node node1 = new Node(52, node0, node0, node0, node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isSyntheticBlock();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node3 = Node.newString("missing prop: ");
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node1.isLabelName();
      node3.toStringTree();
      node1.getLastSibling();
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.isTrue();
      node0.isSwitch();
      Node node1 = new Node(1, node0, node0);
      Node node2 = node1.removeFirstChild();
      node2.getNext();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.3));
      node0.detachChildren();
      node0.mayMutateArguments();
      node0.getSideEffectFlags();
      Node node1 = new Node(31, node0, node0, node0);
      node1.clonePropsFrom(node0);
      node1.type = 37;
      node1.setSideEffectFlags(42);
      node0.isEquivalentTo(node1, false, false, false);
      node0.getSourceOffset();
      node0.getIntProp(4095);
      node0.isLabel();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.isHook();
      node0.isOnlyModifiesArgumentsCall();
      node0.addSuppression("hT,<");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "hT,<");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.cloneTree();
      node0.isAssignAdd();
      node0.isStringKey();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = new Node(85);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(96, node1, (-143), 1947);
      node0.isSyntheticBlock();
      Node.newNumber(1221.99888135051, 5, 309);
      Object object0 = new Object();
      node0.getFirstChild();
      node1.setVarArgs(false);
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9");
      node0.setSourceFileForTesting("com.google.common.base.CharMatcher$9");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getSourceOffset();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isExprResult();
      node0.toStringTree();
      Node node1 = new Node((-1), node0, node0);
      node1.getQualifiedName();
      node0.isWith();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node(32);
      node0.isFor();
      Node node1 = Node.newString(16, "k$E+2G#L");
      node1.getDirectives();
      Node node2 = new Node(49, 46, 55);
      node2.putIntProp(36, 31);
      node0.isOnlyModifiesThisCall();
      node0.isQualifiedName();
      node2.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(117, node1, 36, 40);
      node1.isSyntheticBlock();
      Node node3 = Node.newNumber((double) 120, 56, 53);
      Object object0 = new Object();
      node2.getFirstChild();
      node1.copyInformationFrom(node2);
      node3.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.putBooleanProp(0, true);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.isFalse();
      Node node1 = Node.newNumber((double) 47);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node node2 = new Node(1, node1, node0);
      node2.getBooleanProp(2381);
      // Undeclared exception!
      try { 
        node0.replaceChild(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9");
      node0.setSourceFileForTesting("com.google.common.base.CharMatcher$9");
      node0.setIsSyntheticBlock(true);
      node0.getInputId();
      node0.isSyntheticBlock();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Object object0 = new Object();
      node0.isFromExterns();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = new Node(63, 63, 63);
      node0.hasOneChild();
      node0.isObjectLit();
      node0.isEquivalentToShallow(node0);
      node0.getDirectives();
      Node node1 = Node.newNumber((double) 49, 0, 2);
      Node node2 = new Node(1023, node0, node0, node1, node0);
      node2.getQualifiedName();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newString(111, "vy", 111, 111);
      Node node1 = new Node(42, node0, node0, node0, 0, (-1430));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "|}tas)");
      Node node2 = node0.clonePropsFrom(node1);
      node1.toStringTree();
      Node node3 = node2.getAncestor(1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node3.isWith();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString(148, "s*u{o`9?.A=\u0006SE2?< ");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.putIntProp((byte)40, 2534);
      node0.putIntProp(55, (-1293));
      Node node1 = Node.newString(36, "com.google.common.base.SmallCharMatcher", 15, 55);
      node0.isFromExterns();
      // Undeclared exception!
      try { 
        node1.useSourceInfoIfMissingFromForTree(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(117, node0, (-1741), 57);
      node1.isLocalResultCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node1);
      node0.isAssign();
      node_SideEffectFlags0.valueOf();
      node0.getAncestors();
      node1.isVar();
      node0.isGetProp();
      Node node2 = Node.newNumber((double) 47);
      Node.newString(125, "");
      node2.getDouble();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = new Node(32);
      Node node1 = Node.newString(155, ">*`ZtU'A+!ln", 40, 3067);
      Node node2 = node0.srcref(node1);
      Node node3 = new Node(30);
      node2.isEquivalentToShallow(node0);
      Node node4 = new Node((-1040), node0, node2, node3, node3);
      node0.getSideEffectFlags();
      node4.isLocalResultCall();
      Node node5 = new Node(16, node1, 23, 1102);
      node5.putBooleanProp(30, false);
      node2.isNew();
      node5.isParamList();
      node0.addChildToBack(node4);
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(102, "", 117, 862);
      Node node1 = new Node(12, node0, node0, node0, 117, (-339));
      Node node2 = node0.clonePropsFrom(node1);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.isNull();
      node0.clonePropsFrom(node1);
      node2.isIn();
      Node node3 = new Node(4, (-994), 53);
      Node node4 = null;
      try {
        node4 = new Node(0, node0, node2, node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newString("go.uLP9EQ");
      node0.setSourceFileForTesting((String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getSourceOffset();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isExprResult();
      node0.toStringTree();
      Node node1 = new Node(49, node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      Node node2 = null;
      try {
        node2 = new Node(39, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      node0.isAssign();
      Node node1 = Node.newNumber((double) 32, 102, 56);
      node0.useSourceInfoFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node3 = new Node(12, node2, 35, (-2445));
      Node node4 = node0.cloneTree();
      try { 
        node4.setString("?");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // COMMA 102 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.putProp(56, (Object) null);
      node0.isDebugger();
      node0.isTrue();
      node0.isOnlyModifiesThisCall();
      Object object0 = new Object();
      node0.isBreak();
      Node node1 = Node.newString("V_-Wk'RKKK3i$");
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node(33, 12, 33);
      Node node1 = new Node((-984), node0, node0, node0, node0);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("com.google.common.base.CharMatcher$9");
      Node node1 = new Node(114, node0, node0, 49, 2833);
      node0.isEquivalentToShallow(node1);
      Node node2 = node1.clonePropsFrom(node0);
      node1.getJsDocBuilderForNode();
      node2.setIsSyntheticBlock(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = node0.cloneNode();
      node3.isNE();
      node2.getAncestor(48);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = new Node(40, node0, node0, node0, node0, 40, 4095);
      node1.srcref(node0);
      node1.putBooleanProp(2, true);
      HashSet<String> hashSet0 = new HashSet<String>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(3984);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(43, node1, 849, 1795);
      node1.isSyntheticBlock();
      Node node3 = Node.newNumber(4095.0, (-1277), (-1277));
      Object object0 = new Object();
      node3.getFirstChild();
      node3.setVarArgs(true);
      node1.isVoid();
      node2.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      node0.isAssign();
      Node node1 = Node.newNumber((double) 32, 102, 56);
      node0.useSourceInfoFrom(node1);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(2, nodeArray0);
      node0.isIn();
      node2.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = new Node(128, 128, 128);
      node0.getSourceFileName();
      node0.putProp(42, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      node0.isTrue();
      node0.isAssignAdd();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(42);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtUA+!ln");
      node0.isInstanceOf();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(32, node0, node0);
      Node node2 = new Node(37, node1, node1, node1, 43, (-1263));
      node1.clonePropsFrom(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isIn();
      node2.toStringTree();
      node1.isObjectLit();
      node1.isInstanceOf();
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CALL is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = new Node((-1), (-1), (-1));
      Node node1 = new Node(44, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node2.isUnscopedQualifiedName();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newString(148, "s*u{o`9?.A=\u0006SE2?< ");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.putIntProp(55, (-1293));
      Node node1 = Node.newString(36, "com.google.common.base.SmallCharMatcher", 15, 55);
      Node node2 = Node.newString("s*u{o`9?.A=\u0006SE2?< ");
      Node node3 = new Node(5274, node2, node0, node1, 31, 637);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node4 = node3.removeChildAfter(node2);
      node4.isGetProp();
      node1.getString();
      Node.newString("X}iiE.H!MlwD!Nd9}");
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = new Node(63, 63, 63);
      Node node1 = new Node((-2795), node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.hasOneChild();
      node0.isObjectLit();
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(36);
      node0.isContinue();
      node0.isReturn();
      node0.isName();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = new Node(153);
      node0.isHook();
      node0.isOnlyModifiesArgumentsCall();
      node0.addSuppression("hT,e");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isComma();
      Node node1 = node0.cloneNode();
      node1.addChildToFront(node0);
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newNumber(47.0);
      Node node1 = new Node(52, node0, node0, node0, node0);
      node0.isSyntheticBlock();
      node0.useSourceInfoIfMissingFromForTree(node1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = Node.newString("missing prop: ");
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.isUnscopedQualifiedName();
      Node node3 = new Node(38, node2, node1);
      node2.getString();
      node0.isAdd();
      node2.isNoSideEffectsCall();
      Node node4 = node1.useSourceInfoFromForTree(node2);
      node4.checkTreeEqualsImpl(node1);
      Object object0 = new Object();
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newNumber(604.46187, 318, 31);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = node0.cloneTree();
      node0.getQualifiedName();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isNew();
      node0.isContinue();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isOptionalArg();
      Node node2 = node1.srcrefTree(node0);
      node2.isOnlyModifiesThisCall();
      node1.isQuotedString();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.removeChildren();
      node0.isInc();
      node1.isVoid();
      node2.isUnscopedQualifiedName();
      node1.isLocalResultCall();
      Node.newString(2, "incrdecr", (-66), 103);
      node1.isAdd();
      node0.getJsDocBuilderForNode();
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.NUMBER_OBJECT_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeRegistry0.createFunctionType(jSType0, true, jSTypeArray0);
      JSType[] jSTypeArray1 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray1);
      node0.isLabel();
      node0.isLocalResultCall();
      Node node1 = Node.newString(2, "Object#Element");
      Node node2 = Node.newString("unknown");
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.isUnscopedQualifiedName();
      Node node3 = new Node(38, node2, node0);
      node2.getString();
      node1.isAdd();
      node1.isNoSideEffectsCall();
      Node node4 = node3.useSourceInfoFromForTree(node1);
      node0.checkTreeEqualsImpl(node4);
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = Node.newString(155, ">*`ZtU'A+!ln", 40, 3067);
      Node node2 = node0.srcref(node1);
      Node node3 = new Node(30);
      node2.getDirectives();
      node2.isEquivalentToShallow(node0);
      Node node4 = new Node((-1040), node0, node2, node3, node3);
      node2.getProp(1539);
      node3.isBreak();
      int int0 = 42;
      // Undeclared exception!
      try { 
        node2.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.3));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.detachChildren();
      node0.mayMutateArguments();
      node0.getSideEffectFlags();
      Node node1 = Node.newString("Eror");
      node1.type = 37;
      node1.setSideEffectFlags(42);
      Node node2 = Node.newString(39, "O!Wg`fckML&a");
      Node node3 = Node.newString("com.google.common.base.Predicates$AndPredicate", 37, 32);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node3.hasMoreThanOneChild();
      node1.isEquivalentTo(node2, true, false, true);
      node2.getString();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newString("?}ror");
      Node node1 = new Node(52, node0);
      Node node2 = Node.newString("wX[z4q!q", 2771, 116);
      Node node3 = new Node(30, node1, node1, node2, (-61), 126);
      node3.srcref(node2);
      node3.isSetterDef();
      Node node4 = Node.newNumber((-3194.028), 47, (-61));
      node3.useSourceInfoFrom(node4);
      Node.newString(54, "$VUEe");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("wX[z4q!q", node2, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = new Node(98);
      node0.toStringTree();
      node0.setCharno(1);
      ImmutableList.of();
      node0.setIsSyntheticBlock(true);
      node0.getInputId();
      node0.toStringTree();
      node0.isSyntheticBlock();
      Node node1 = new Node(29, node0);
      node0.useSourceInfoFrom(node1);
      Node node2 = Node.newNumber((double) 2);
      node2.isFromExterns();
      node0.hasMoreThanOneChild();
      node2.isAssignAdd();
      Node.newNumber((double) 57);
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(38, "/ox,t^", 98, (-243));
      Node node1 = new Node(47, node0, node0, node0, 55, 1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.copyInformationFromForTree(node0);
      node0.isNull();
      node1.isIn();
      node1.isGetProp();
      try { 
        node1.setDouble((-888.7191431295));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // REGEXP is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(37);
      node0.useSourceInfoFromForTree(node1);
      node0.isHook();
      node0.isOnlyModifiesArgumentsCall();
      node0.addSuppression("hT,e");
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.2568504450483));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node node1 = new Node(52, (-26), 98);
      node0.isCast();
      node1.getQualifiedName();
      node0.isGetProp();
      node0.setDouble(55);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = new Node(52, 31, 47);
      node2.isInc();
      node2.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = new Node(4406);
      Node node1 = new Node(31, node0, node0, node0);
      int int0 = Node.FREE_CALL;
      node1.getQualifiedName();
      node1.getInputId();
      Node node2 = node1.copyInformationFrom(node0);
      node0.setInputId((InputId) null);
      node2.getQualifiedName();
      node2.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isDefaultCase();
      node1.isExprResult();
      node1.toStringTree();
      node1.isOnlyModifiesArgumentsCall();
      node1.isGetterDef();
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = new Node(103, 119, 103);
      Node node1 = Node.newNumber((double) 42, 4, 122);
      Node node2 = new Node(30, node0, node0, node0, node1);
      node2.cloneTree();
      Node node3 = Node.newString(4095, "-");
      Node.newString("msg.jsdoc.function.varargs", 43, 3761);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.checkTreeEqualsImpl(node2);
      node2.toStringTree();
      node3.getJSDocInfo();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = new Node(98, 98, 98);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "String node not created with Node.newString");
      Node node1 = new Node(1, node0, node0, node0, node0, 56, 4095);
      node0.useSourceInfoIfMissingFromForTree(node1);
      InputId inputId0 = new InputId("QTPImqG");
      inputId0.toString();
      node0.setInputId(inputId0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node.newString("QTPImqG");
      try { 
        node0.setDouble(53);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // HOOK 56 [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(43, nodeArray0);
      Node node1 = new Node(36, node0, node0, 29, 54);
      node1.isFor();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node0.setIsSyntheticBlock(false);
      node0.getJSDocInfo();
      node1.isAnd();
      node0.isDo();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = new Node(44);
      Node node1 = node0.srcref(node0);
      Node node2 = new Node(8);
      node0.getDirectives();
      node2.addChildToFront(node0);
      node0.isEquivalentToShallow(node2);
      Node node3 = null;
      try {
        node3 = new Node(47, node1, node0, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = new Node(55, 55, 55);
      node0.isSetterDef();
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(42, node0, 4114, 31);
      Node node2 = node1.removeChildren();
      node2.isIn();
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "46");
      Node.mergeLineCharNo((-169), 12288);
      Node.extractLineno((-1));
      Node node0 = new Node((-1), (-169), 304);
      node0.getLength();
      node0.isLocalResultCall();
      node0.toString();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-108);
      byteArray0[1] = (byte) (-103);
      byteArray0[2] = (byte) (-121);
      byteArray0[3] = (byte)26;
      byteArray0[4] = (byte) (-102);
      byteArray0[5] = (byte) (-97);
      byteArray0[6] = (byte)126;
      byteArray0[7] = (byte) (-126);
      byteArray0[8] = (byte)9;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.getProp(304);
      node0.setSourceEncodedPositionForTree((-169));
      node0.getAncestors();
      node0.setLength((-1));
      node0.isOptionalArg();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isOnlyModifiesThisCall();
      node0.getLength();
      Node node2 = node1.srcref(node0);
      node2.isObjectLit();
      Node node3 = node1.cloneTree();
      // Undeclared exception!
      try { 
        node3.setSideEffectFlags(31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got ERROR
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = Node.newNumber(4817.776715, 461845907, 461845907);
      node0.getDirectives();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isLocalResultCall();
      node0.getBooleanProp(461845907);
      node0.children();
      node0.isLocalResultCall();
      node0.isGetProp();
      Node node1 = node0.cloneTree();
      node0.getBooleanProp(39);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "46");
      node0.isGetProp();
      node1.wasEmptyNode();
      node0.isBreak();
      node1.useSourceInfoFromForTree(node0);
      node1.wasEmptyNode();
      Node node2 = new Node(116, node0, node0, node0, (-398), 86);
      node2.setLineno(4095);
      node2.isSyntheticBlock();
      Node node3 = node0.srcrefTree(node2);
      node0.isAssign();
      node3.isGetterDef();
      node1.isNot();
      Node node4 = node2.copyInformationFrom(node3);
      node1.isScript();
      node4.isComma();
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = new Node(40);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isDefaultCase();
      node0.isExprResult();
      node0.toStringTree();
      Node node1 = new Node(86, node0, node0);
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString(148, "s*u{o`9?.A=\u0006SE2?< ");
      node0.putIntProp(55, (-1293));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = node0.cloneTree();
      Node.newString(2771, "s*u{o`9?.A=\u0006SE2?< ");
      Node.newString((-261), "s*u{o`9?.A=\u0006SE2?< ");
      try { 
        node1.setDouble(2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SETTER_DEF s*u{o`9?.A=\u0006SE2?<  [inferred: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newNumber(47.0);
      node0.setVarArgs(true);
      node0.isSyntheticBlock();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        node0.setString("missing prop: ");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 47.0 [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtUA+!ln");
      node0.isInstanceOf();
      node0.isLocalResultCall();
      node0.isDec();
      Node.newString(32, ">*`ZtUA+!ln");
      node0.putIntProp(37, 42);
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(32, "    ", 154, 54);
      node1.addChildToFront(node0);
      Node node2 = new Node(38);
      node2.isName();
      node2.toString();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      String string0 = "46";
      Node node0 = new Node(0, 0, 0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      int int0 = 102;
      Node node2 = new Node(455, node0, node1, 57, 4);
      Node node3 = null;
      try {
        node3 = new Node(88, node1, node0, node2, node0, (-854), 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.3));
      node0.detachChildren();
      node0.mayMutateArguments();
      node0.getSideEffectFlags();
      Node node1 = Node.newString("Error");
      node1.type = 37;
      node1.setSideEffectFlags(42);
      node0.isEquivalentTo(node1, false, false, false);
      node0.getSourceOffset();
      node0.getIntProp(4095);
      node1.getSideEffectFlags();
      node0.isLabel();
      Node node2 = Node.newNumber((double) 37, (-638), 122);
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      node0.getJsDocBuilderForNode();
      node0.putBooleanProp(0, true);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.isEquivalentToShallow(node0);
      node0.getProp((-3158));
      node0.getInputId();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node node1 = Node.newString(4, "'", 2, 57);
      node0.isBreak();
      node1.isReturn();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = node0.cloneTree();
      node0.detachChildren();
      Node node2 = new Node(52);
      Node node3 = node0.copyInformationFrom(node2);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = Node.newString("CharMatcher.WHITESPACE", 105, 0);
      Node node1 = Node.newString(125, "CharMatcher.WHITESPACE", 51, 2903);
      node1.addChildToFront(node0);
      Node node2 = new Node(39);
      node2.srcref(node0);
      node1.isName();
      node2.isAnd();
      node2.isContinue();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(47, node0, node0);
      Node node2 = new Node(117, node1, (-1741), 52);
      node1.isBreak();
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node2);
      node0.isAssign();
      node_SideEffectFlags0.valueOf();
      node0.getAncestors();
      node2.isVar();
      node2.isGetProp();
      Node node3 = node2.removeFirstChild();
      node1.getNext();
      node3.isAnd();
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = new Node(524288, 524288, 524288);
      node0.putProp(4, "com.google.common.base.CharMatcher$9");
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node0.isTrue();
      Object object0 = new Object();
      node0.isInc();
      // Undeclared exception!
      try { 
        node0.getBooleanProp(4);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      node0.isLocalResultCall();
      Node node1 = Node.newString(2, "wX[z4q!q", 51, 506);
      Node node2 = new Node(8388608);
      Node node3 = new Node(8388608, node0, node1, node2, 90, (-1));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayDeque<JSType> arrayDeque0 = new ArrayDeque<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) arrayDeque0);
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node5 = node0.clonePropsFrom(node4);
      node0.checkTreeTypeAwareEqualsImpl(node5);
      node2.isIn();
      node2.isGetterDef();
      node5.toStringTree();
      node0.isObjectLit();
      node3.isInstanceOf();
      try { 
        node4.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = new Node(103, 119, 103);
      node0.isOr();
      node0.isUnscopedQualifiedName();
      node0.isSetterDef();
      Node node1 = new Node(4095, 43, (-2404));
      Node node2 = new Node(38, node1, node1, node0, 46, 1017);
      node2.isComma();
      node0.isExprResult();
      node2.removeChildren();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newNumber((double) 105, 105, (-2787));
      Node node1 = new Node(105, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-34));
      node_SideEffectFlags0.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isWith();
      node0.getJSDocInfo();
      node0.isComma();
      node0.isExprResult();
      node0.isWith();
      Node node1 = node0.getLastSibling();
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = new Node(98, 98, 98);
      Node node1 = new Node(1, node0, node0, node0, node0, 56, 63);
      InputId inputId0 = new InputId("QImqG");
      node0.setInputId(inputId0);
      node0.siblings();
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.setDirectives(hashSet0);
      node0.setOptionalArg(false);
      node0.toStringTree();
      node1.isAnd();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = new Node(63, 63, 63);
      node0.isDec();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = node0.cloneTree();
      node0.detachChildren();
      Node node2 = node1.copyInformationFrom(node0);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isWith();
      node0.getJSDocInfo();
      node0.isComma();
      node0.isExprResult();
      node0.isReturn();
      node0.isGetProp();
      node0.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newString(148, "s*u{o`9?.A=\u0006SE2?< ");
      node0.setChangeTime(4095);
      node0.isLabelName();
      node0.toStringTree();
      Node node1 = node0.getLastSibling();
      node1.setQuotedString();
      node1.isOnlyModifiesArgumentsCall();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SETTER_DEF s*u{o`9?.A=\u0006SE2?<  [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000003] [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = Node.newString("CharMatcher.WHITESPACE", 105, 0);
      node0.isLabelName();
      node0.toStringTree();
      Node node1 = new Node(40, node0, node0, node0);
      Node node2 = node1.getLastSibling();
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = new Node(4406, 4406, 4406);
      Node node1 = new Node(12, node0, node0, node0, node0, 54, 57);
      int int0 = Node.SLASH_V;
      node1.getQualifiedName();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node2 = new Node(49, node1, node1);
      node2.copyInformationFrom(node0);
      node0.setVarArgs(true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node2.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString("is_constant_name", (-2577), 1959);
      Node node1 = new Node((-2577), node0, node0, node0, node0);
      node1.removeChild(node0);
      node1.setSourceEncodedPositionForTree(47);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = new Node(4095, node1, node1, node0);
      node0.setVarArgs(false);
      Node node3 = node2.setJSDocInfo((JSDocInfo) null);
      node3.isEquivalentToTyped(node0);
      node1.getIntProp((-3627));
      Node node4 = Node.newString(21, "is_constant_name");
      node2.isLabelName();
      node4.setLength((-659));
      node1.getDirectives();
      // Undeclared exception!
      try { 
        node4.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(35, "/ox,t^", 35, (-243));
      Node node1 = new Node(47, node0, node0, node0, 55, 31);
      node0.getStaticSourceFile();
      node1.addChildrenToBack(node1);
      node1.isTry();
      node1.isDo();
      node1.clonePropsFrom(node0);
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = Node.newString(43, "", 4, 16384);
      Node node3 = new Node(4, node0, node1, node1, (-1733), 113);
      Node node4 = node3.clonePropsFrom(node0);
      node4.toStringTree();
      node0.addChildrenToBack(node4);
      node2.isTry();
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = new Node(98);
      node0.toStringTree();
      Node.newString(1, "HOOK\n");
      Node node1 = Node.newString("=`=TQL'80&z04");
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node2 = new Node(38, node1, node1);
      // Undeclared exception!
      try { 
        node2.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = new Node(39, 39, 3000);
      node0.isAssign();
      Node node1 = Node.newNumber((-318.6703777106698), 29, 1755);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      Node node3 = Node.newString(47, "~i6Ul,");
      nodeArray0[4] = node3;
      nodeArray0[5] = node1;
      nodeArray0[6] = node2;
      nodeArray0[7] = node0;
      nodeArray0[8] = node0;
      Node node4 = null;
      try {
        node4 = new Node(6127, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(120);
      node0.putBooleanProp(120, false);
      Node node1 = new Node(49, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node2.toStringTree();
      node0.addChildrenToBack(node2);
      node0.isTry();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isGetElem();
      Node node1 = new Node(35, node0, (-20), 48);
      Node node2 = node1.cloneTree();
      Node node3 = Node.newString("<)nap4d-/WNm");
      node3.setString("Np575");
      node0.isQuotedString();
      node2.isDebugger();
      node1.setVarArgs(false);
      Node node4 = new Node(15, node1, node1, node1, 39, 16);
      node4.getCharno();
      Node.newNumber(47.0, 41, 42);
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isLocalResultCall();
      Node node1 = Node.newString(15, "c&u");
      Node node2 = Node.newString("com.gogle.common.collect ImmutableL\"st");
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.isUnscopedQualifiedName();
      Node node3 = new Node(0, node0, node2);
      node1.getString();
      node1.isAdd();
      node0.isNoSideEffectsCall();
      Node node4 = node0.useSourceInfoFromForTree(node1);
      node4.checkTreeEqualsImpl(node2);
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = new Node(4406, 4406, 4406);
      Node node1 = new Node(12, node0, node0, node0, node0, 54, 57);
      node1.getSourceOffset();
      node1.getQualifiedName();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node2 = new Node(49, node1, node1);
      node0.setVarArgs(true);
      node2.isThrow();
      // Undeclared exception!
      try { 
        Node.newString(30, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(105, node0, node0, node0, node0, 49, 37);
      Node node2 = node1.srcref(node0);
      node1.copyInformationFromForTree(node0);
      node2.setLength(123);
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> [length: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = new Node(40, node0, node0, node0);
      Node node2 = node1.cloneTree();
      node0.detachChildren();
      Node node3 = new Node(52);
      Node node4 = node1.copyInformationFrom(node3);
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(117, node1, 36, 40);
      node2.isBreak();
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(116);
      node1.isContinue();
      node1.getSideEffectFlags();
      node2.isGetProp();
      node0.isCatch();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%s (%s) must be less than size (%s)");
      Node node0 = Node.newString("Y-F,F;l<:I", (-360), (-360));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Stack<TemplateType> stack0 = new Stack<TemplateType>();
      jSTypeRegistry0.setTemplateTypeNames(stack0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node2 = new Node((-360), node0, node0, node0, node1, 56, 46);
      jSTypeRegistry0.isForwardDeclaredType("Y-F,F;l<:I");
      node1.isNoSideEffectsCall();
      node2.children();
      node1.isParamList();
      Node.newNumber((double) 48, 309, 55);
      Node.newNumber((double) 2, 48, (-1));
      node2.removeChild(node0);
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage0("Object#Key");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property Object#Key
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtUA+!ln");
      node0.isInstanceOf();
      Node node1 = Node.newString(49, ">*`ZtUA+!ln");
      Node node2 = new Node((-60), node0, node1, node1);
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = new Node((-2145627080), 40, 51);
      Node node4 = node3.cloneTree();
      node1.detachChildren();
      Node node5 = node1.copyInformationFrom(node4);
      node5.toString(true, false, false);
      Node node6 = new Node(38, 42, 32768);
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(117, node1, 36, 40);
      node2.isBreak();
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(116);
      node1.isContinue();
      node1.getSideEffectFlags();
      node1.isLabel();
      node1.isNot();
      node1.children();
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = new Node((-1741));
      node0.hasOneChild();
      node0.putBooleanProp((-1741), false);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isGetElem();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = node0.cloneTree();
      node0.detachChildren();
      node1.copyInformationFrom(node0);
      Node node2 = Node.newString("com.google.javascript.rhino.jstype.PrototypeObjectType");
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = new Node(100);
      Node node1 = Node.newNumber((double) 53, 56, 40);
      node0.copyInformationFromForTree(node1);
      node0.hasOneChild();
      node0.putBooleanProp(100, false);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isName();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(120);
      Node node1 = new Node((-615), node0, node0, node0, 2, 8);
      node0.clonePropsFrom(node1);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -615
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = new Node(108);
      Node node1 = new Node(42, node0, node0, node0, 0, 50);
      Node node2 = node0.clonePropsFrom(node1);
      node1.toStringTree();
      node0.addChildrenToBack(node1);
      node1.isTry();
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[j");
      Node node0 = new Node((-2662));
      Node node1 = Node.newNumber((-361.47841074286083));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node2 = new Node(12, node0, node1, node0, node0);
      node2.setChangeTime(4095);
      node1.setVarArgs(true);
      node0.setType(52);
      node1.isEquivalentTo(node2, false, false, true);
      Node node3 = node0.clonePropsFrom(node1);
      node3.cloneTree();
      String string0 = "Nm2k";
      int int0 = (-1);
      node0.srcrefTree(node1);
      node3.getSourceFileName();
      node2.getAncestor(30);
      // Undeclared exception!
      try { 
        node3.clonePropsFrom(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.putIntProp(2, 46);
      Node node2 = new Node(1, node0, node1, node1);
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = node1.cloneTree();
      node2.detachChildren();
      Node node4 = node2.copyInformationFrom(node3);
      Node node5 = Node.newString("22");
      // Undeclared exception!
      try { 
        node5.removeChildAfter(node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(117, node1, 36, 40);
      node2.isBreak();
      node1.isSyntheticBlock();
      Node node3 = Node.newNumber((double) 120, 56, 1929);
      node3.useSourceInfoFrom(node0);
      node2.isTrue();
      Object object0 = new Object();
      node1.isName();
      node2.getFirstChild();
      node1.isVoid();
      node2.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      node0.getJsDocBuilderForNode();
      node0.putBooleanProp(0, true);
      node0.isFalse();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.isEquivalentToShallow(node0);
      node0.toString(false, false, false);
      node0.getProp((-3158));
      node0.getInputId();
      node0.isDec();
      node0.setInputId((InputId) null);
      Node node1 = Node.newString("2.3@Yo~");
      Node node2 = new Node(46, node0, node1, (-3441), 153);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = new Node(37);
      node3.clonePropsFrom(node0);
      node2.replaceChildAfter(node0, node3);
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtUA+!ln");
      node0.isSwitch();
      node0.isLocalResultCall();
      Node node1 = new Node(77, node0, node0, node0);
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = node1.cloneTree();
      node1.detachChildren();
      node1.copyInformationFrom(node2);
      Node node3 = Node.newString("?#LR.5Nw6q5");
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(35, "/ox,t^", 35, (-243));
      Node node1 = new Node(47, node0, node0, node0, 55, 31);
      node1.toStringTree();
      node1.addChildrenToBack(node1);
      node1.isTry();
      node1.isDo();
      node0.isNull();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isWith();
      node0.getJSDocInfo();
      node0.isComma();
      node0.getSideEffectFlags();
      Node node1 = new Node(38, node0, 52, 620);
      Node.newNumber((-3194.028), 38, 40);
      ArrayDeque<Node> arrayDeque0 = new ArrayDeque<Node>();
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.isNew();
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = Node.newString("The new child node has siblings.");
      Node node1 = Node.newString(31, "'tcg4");
      Node node2 = node0.srcref(node1);
      node0.setString("'tcg4");
      node1.siblings();
      node2.isGetterDef();
      node1.isVoid();
      node1.isCall();
      node1.isAssignAdd();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = Node.newNumber(47.0);
      Node node1 = new Node(52, node0, node0, node0, node0);
      node0.isSyntheticBlock();
      node0.useSourceInfoIfMissingFromForTree(node1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.setIsSyntheticBlock(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.newString((-440), "missing prop: ", 36, (-1352));
      Node.newString("missing prop: ");
      Node node2 = node0.detachFromParent();
      node2.getAncestor(8);
      node0.addChildrenAfter(node2, (Node) null);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(1501, 1501, 1501);
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.getChangeTime();
      node0.getSourceOffset();
      Object object0 = new Object();
      Node node1 = new Node(43, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.isOr();
      node0.isUnscopedQualifiedName();
      node0.isSetterDef();
      Node.extractLineno(38);
      Node node1 = Node.newNumber((double) 31);
      node1.isLocalResultCall();
      node1.mayMutateArguments();
      node0.isReturn();
      node1.setOptionalArg(false);
      node0.isFromExterns();
      Node node2 = Node.newNumber((double) 1, 46, 1272);
      ArrayDeque<Node> arrayDeque0 = new ArrayDeque<Node>();
      Node node3 = node0.useSourceInfoFrom(node1);
      node3.isNew();
      node3.isLabel();
      node0.isBreak();
      node2.toStringTree();
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2382, 169, 98);
      Node.extractLineno(32);
      node0.isTrue();
      Node node1 = new Node(112, node0);
      node0.setChangeTime(2382);
      node0.isObjectLit();
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.siblings();
      Node node3 = null;
      try {
        node3 = new Node(38, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isWith();
      node0.isReturn();
      Node node1 = new Node(2274, node0, 1463, 0);
      node0.cloneTree();
      try { 
        node0.setString(";=");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LABEL is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning((String) null, (String) null, (-1568), (-1568));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node((-5946));
      Node node1 = new Node((-5946), node0, node0, node0);
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(1, node0, node0, node0);
      Node node2 = new Node(120, (-36), (-277));
      Node node3 = new Node(31, node1, 1378, (-511));
      Node.newNumber((-993.05294277315), 53, 46);
      ArrayDeque<Node> arrayDeque0 = new ArrayDeque<Node>();
      node3.useSourceInfoFrom(node1);
      node2.isNew();
      node3.isLabel();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(35, "/ox,t^", 98, (-243));
      Node node1 = new Node(47, node0, node0, node0, 55, 154);
      Node node2 = node1.clonePropsFrom(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.isNull();
      node2.isIn();
      node0.isGetterDef();
      node0.toStringTree();
      node1.isOnlyModifiesArgumentsCall();
      node1.isInstanceOf();
      node2.getCharno();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(35, "/ox,t^", 98, (-243));
      Node node1 = new Node(47, node0, node0, node0, 55, 154);
      Node node2 = node1.clonePropsFrom(node0);
      node1.toStringTree();
      node2.addChildrenToBack(node1);
      node2.isTry();
      node1.isDo();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(86, 86, 86);
      node0.isGetElem();
      node0.getBooleanProp(86);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getProp(86);
      node0.isOr();
      Node node1 = Node.newString(112, ", ...");
      node0.setSourceEncodedPositionForTree(1054);
      node1.getString();
      node1.setOptionalArg(false);
      node1.isFromExterns();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtU'A+!ln");
      node0.isLabel();
      node0.isLocalResultCall();
      Node node1 = Node.newString(32, ">*`ZtU'A+!ln");
      Node node2 = Node.newString("com.gogle.common.collect ImmutableL\"st");
      node1.getDirectives();
      node1.isUnscopedQualifiedName();
      Node node3 = new Node(47, node0, node1);
      node1.getString();
      node1.isAdd();
      node1.isAssignAdd();
      node0.isNoSideEffectsCall();
      Node node4 = node3.useSourceInfoFromForTree(node1);
      node4.checkTreeEqualsImpl(node3);
      node2.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = new Node(35);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 46);
      Node node2 = node1.srcref(node0);
      Node node3 = new Node(8);
      node0.getDirectives();
      node0.isEquivalentToShallow(node3);
      Node node4 = new Node(47, node2, node0, node2, node0);
      node2.getSourceOffset();
      node0.getSideEffectFlags();
      Node node5 = new Node(23, node4, 12, 54);
      node0.toString(false, false, false);
      InputId inputId0 = new InputId("The existing child node of the parent should not be null.");
      node0.copyInformationFrom(node3);
      node1.setInputId(inputId0);
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(35, "/ox,t^", 98, (-243));
      Node node1 = new Node(47, node0, node0, node0, 55, 154);
      Node node2 = node1.clonePropsFrom(node0);
      node1.toStringTree();
      node2.addChildrenToBack(node1);
      node2.isTry();
      node1.isBlock();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node4 = new Node(1, node3);
      node4.isAssign();
      node4.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = new Node(4406, 4406, 4406);
      Node node1 = new Node(12, node0, node0, node0, node0, 54, 57);
      node1.getSourceOffset();
      node1.getQualifiedName();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node2 = new Node(42, node1, node1);
      node0.detachFromParent();
      node0.setVarArgs(true);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isAssign();
      node0.isFor();
      Node node1 = Node.newString(30, "infe9ed");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.useSourceInfoFrom(node1);
      Node node2 = Node.newString(39, "originalname");
      node1.setString("originalname");
      node2.isTrue();
      Object object0 = new Object();
      node1.isGetProp();
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(111, "", 111, 111);
      Node node1 = new Node(42, node0, node0, node0, 0, (-1430));
      Node node2 = node0.clonePropsFrom(node1);
      node1.toStringTree();
      node0.addChildrenToBack(node1);
      node0.isNoSideEffectsCall();
      node1.getQualifiedName();
      node1.isTry();
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = new Node(21);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(38, 25, 123);
      node0.isDefaultCase();
      node2.isExprResult();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node2;
      nodeArray0[4] = node2;
      nodeArray0[5] = node1;
      nodeArray0[6] = node0;
      Node node3 = null;
      try {
        node3 = new Node(21, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = new Node((-8));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node((-3640), node0, node0, 767, 3297);
      node1.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(89, 4095, 37);
      node1.isDefaultCase();
      node2.isExprResult();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      Node node3 = Node.newString((-2572), "X#mqjf$oovJD^|y]Cq!");
      nodeArray0[4] = node3;
      Node node4 = null;
      try {
        node4 = new Node(1182, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node(35);
      node0.children();
      Node node1 = node0.srcref(node0);
      int int0 = Node.DECR_FLAG;
      node1.getAncestor(21);
      node1.isDebugger();
      node0.getDirectives();
      node1.isEquivalentToShallow(node0);
      node0.isVar();
      node1.toStringTree();
      Node.newString("W<2F(`");
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2382, 169, 98);
      node0.setCharno(2382);
      ImmutableList.of();
      node0.setIsSyntheticBlock(true);
      node0.getInputId();
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.isFalse();
      node0.hasMoreThanOneChild();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = Node.newString(83, "(L?s1eSOo%=f!k%#g:", 44, 1151);
      Node node1 = new Node(105, node0, node0, node0, 32, 105);
      node1.getAncestor(13);
      node0.checkTreeEquals(node1);
      node1.cloneNode();
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(37, node0, node0, node0, 15, 0);
      Node node2 = node1.srcref(node0);
      node1.isDec();
      node2.children();
      node2.isEquivalentToTyped(node1);
      Node node3 = new Node(50, node1, (-799), 15);
      Node node4 = node0.cloneTree();
      Node node5 = Node.newString("wX[zEq!q");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      node3.setJSType(jSType0);
      Node node6 = new Node(53, node4, node5, 38, 40);
      node6.srcrefTree(node3);
      node0.setVarArgs(false);
      node1.isFromExterns();
      node5.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isWith();
      node0.getJSDocInfo();
      node0.isComma();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.isIn();
      node0.getProp(48);
      node0.isNew();
      node0.isLabel();
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newNumber((double) 2382);
      nodeArray0[0] = node0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TreeSet<JSType> treeSet0 = new TreeSet<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) treeSet0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      nodeArray0[1] = node1;
      Node node2 = new Node(169, nodeArray0, 54, 210);
      node2.getSourceOffset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(115);
      node_SideEffectFlags0.setAllFlags();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getInputId();
      node0.getQualifiedName();
      Node.newString("Object#Key", 43, 0);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node2.getNext();
      node2.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.WITESPACE");
      Node node1 = new Node((-1128), node0, node0);
      Node node2 = new Node(42, node1);
      node2.isReturn();
      node2.copyInformationFromForTree(node1);
      node2.getProp(57);
      Node node3 = null;
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1128
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.JSDocInfo$Marker");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node((-4996), node0, 4095, 102);
      node1.useSourceInfoIfMissingFrom(node0);
      Node node2 = new Node((-4996), node1, node1, node1);
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(38);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2382, 169, 98);
      node0.wasEmptyNode();
      node0.getDirectives();
      Node node1 = new Node(43, node0, node0, node0, 41, 8);
      node1.clonePropsFrom(node0);
      node0.toStringTree();
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = new Node(148);
      node0.setChangeTime(4095);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isLabelName();
      node0.toStringTree();
      node0.toStringTree();
      Node node1 = new Node(57, node0);
      node1.copyInformationFrom(node0);
      Node node2 = null;
      try {
        node2 = new Node(57, node0, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(105, node0, node0, node0, node0, 38, 37);
      Node node2 = node1.srcref(node0);
      node2.clonePropsFrom(node1);
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = new Node(117);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(6, node0, node0, node0, node0);
      Node node2 = node0.srcref(node1);
      node0.isDebugger();
      node2.siblings();
      Node.newNumber((double) 4095, (-5946), 6);
      node1.useSourceInfoFrom(node2);
      Node node3 = Node.newString(37, "$VUEe");
      node0.isIn();
      Node node4 = new Node(4095, node1, node3, node1);
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(111, "", 111, 111);
      node0.toString(false, false, true);
      InputId inputId0 = new InputId(";=");
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = new Node(4406);
      Node node1 = new Node(4406, node0, node0, node0, node0);
      node1.getSourceOffset();
      node0.detachFromParent();
      node1.getQualifiedName();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node2 = new Node(42, node1, node1);
      Node node3 = node1.getLastSibling();
      Node node4 = new Node(48, 39, 43);
      node3.useSourceInfoIfMissingFromForTree(node4);
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newString("E!QHM=@", 3869, 52);
      node0.isAdd();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = Node.newString(148, "s*u{o`9?.A=\u0006SE2?< ");
      node0.isUnscopedQualifiedName();
      node0.isSetterDef();
      Node.extractLineno(118);
      node0.isLocalResultCall();
      node0.isReturn();
      node0.setOptionalArg(false);
      node0.isFromExterns();
      node0.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.setOptionalArg(false);
      node0.isFromExterns();
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(37, node0, node0, node0, 15, 0);
      Node node2 = node1.srcref(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      Node node3 = new Node(1550, 57, 108);
      // Undeclared exception!
      try { 
        node3.addChildAfter(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = Node.newString(148, "%k.n!/g<");
      node0.setChangeTime(54);
      node0.isLabelName();
      node0.toStringTree();
      Node node1 = node0.getLastSibling();
      node1.setQuotedString();
      node0.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        node0.getProp(36);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2033));
      node0.isAdd();
      node0.isEquivalentToTyped(node0);
      node0.isEquivalentToTyped(node0);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("g'f9wVS;:~");
      node0.addSuppression("IUl9Sa\"");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      node0.putProp(31, templateType0);
      node0.setChangeTime((-1190));
      Node node1 = new Node(48, node0);
      node1.isEquivalentToTyped(node0);
      node0.copyInformationFromForTree(node1);
      node0.getProp(111);
      Node node2 = null;
      node0.getString();
      node0.srcrefTree(node1);
      node0.getIndexOfChild((Node) null);
      node1.getAncestor(29);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isName();
      node0.isParamList();
      node0.isDefaultCase();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 31
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = new Node(119);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      Node node1 = new Node(2, node0, node0, node0, (-2116), 52);
      node0.srcrefTree(node1);
      node0.getSourceFileName();
      node0.putProp(42, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isTry();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 50, 50);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = new Node(42, node0, node1, node0, 32, 4095);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      node3.isIn();
      ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isSyntheticBlock();
      node2.isSyntheticBlock();
      node3.setLength(1);
      node1.isNew();
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      String string0 = "\n\nTre2:\n";
      Node node0 = Node.newString("\n\nTre2:\n");
      Node node1 = Node.newString(31, "'tcg4");
      Node node2 = node0.srcref(node1);
      node1.siblings();
      Node node3 = new Node(32);
      node3.useSourceInfoFrom(node2);
      Node.newNumber((-1156.1433865769427), 47, 40);
      int int0 = 712;
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(92);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got DELPROP
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(4095, node1, node0, node1, node1, 48, 29);
      node0.isBreak();
      node2.isSyntheticBlock();
      Node node3 = Node.newNumber((double) 51, 52, 1);
      node0.useSourceInfoFrom(node1);
      Node.newString(36, "n\"ihj8}PDW)?k,svJ");
      node1.isIn();
      Node node4 = new Node(53, node3, node2, node2);
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = new Node(155);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.putProp(31, jSDocInfo0);
      node0.isQuotedString();
      node0.getAncestors();
      node0.removeProp(31);
      node0.toString(false, false, false);
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.WHITESPACE");
      Node node1 = new Node((-1128), node0, node0);
      Node node2 = Node.newNumber((double) 40, 49, 128);
      node2.isQuotedString();
      Node node3 = node1.useSourceInfoFrom(node0);
      Node.newString((-2710), "is_dispatcher");
      node3.isIn();
      Node node4 = null;
      try {
        node4 = new Node(116, node3, node3, node0, node3, 47, (-1473));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2382, 169, 98);
      node0.setCharno(2382);
      node0.setSourceFileForTesting("=!3Q{RT[w=0?4#");
      node0.getDirectives();
      Node node1 = new Node(4, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(4095, node1);
      node2.isWith();
      node2.removeFirstChild();
      Node node3 = Node.newNumber((double) 56);
      node3.isNE();
      node3.isBlock();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = new Node(103);
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node1 = new Node(37, node0, node0, node0);
      Node node2 = node1.srcref(node0);
      node2.srcrefTree(node0);
      node0.isDebugger();
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isAnd();
      node1.isAssign();
      int int0 = 2;
      Node node3 = null;
      try {
        node3 = new Node((-1000), node2, node0, node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.2568504450483));
      node0.detachChildren();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Error");
      node0.getSideEffectFlags();
      Node node1 = new Node(42, node0, node0, node0, 41, 132);
      Node node2 = node1.clonePropsFrom(node0);
      node2.toStringTree();
      node1.addChildrenToBack(node2);
      node0.isTry();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node1.getAncestor(4095);
      Node node3 = null;
      try {
        node3 = new Node(29, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(29, node0, node0, node0, node0, 39, 47);
      node0.srcref(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wX[zEq!q");
      node1.isDebugger();
      node1.siblings();
      node1.isNumber();
      node1.isTry();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = Node.newString("CharMatcher.WHITESPACE", 105, 0);
      Node node1 = Node.newString(125, "CharMatcher.WHITESPACE", 51, 2903);
      node1.isFor();
      node0.isGetterDef();
      node1.isVoid();
      node1.isCall();
      node1.isAssignAdd();
      node0.addChildrenToFront(node1);
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      String string0 = "#oS\\QbAygz";
      Node node0 = Node.newString("#oSQbAygz");
      Node.newString((-1802), ";=");
      Node node1 = Node.newString(93, "'tcg4");
      node1.srcref(node0);
      node1.siblings();
      Node node2 = new Node(64);
      node2.useSourceInfoFrom(node0);
      Node node3 = Node.newNumber((-1494.68822876011), 30, 2454);
      // Undeclared exception!
      try { 
        node3.setSideEffectFlags(36);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.2568504450483));
      node0.detachChildren();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Error");
      node0.getSideEffectFlags();
      Node node1 = Node.newString("Error");
      node1.type = 37;
      Node node2 = new Node(48, node1, node0, node1, node1);
      Node node3 = new Node(114, node2, 1, 118);
      node3.isNoSideEffectsCall();
      node2.setCharno(15);
      node2.isFromExterns();
      node2.children();
      Node node4 = node2.useSourceInfoFrom(node1);
      node4.setChangeTime(43);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node4.isExprResult();
      node0.isRegExp();
      node4.addChildToFront(node3);
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = new Node(80, 80, 80);
      node0.isSetterDef();
      node0.isParamList();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.2568504450483), 153, 760);
      Node node1 = Node.newString((-1372), "not a StringNode", 1, 31);
      Node node2 = node0.srcref(node1);
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags((-1049));
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node3 = new Node(8, node0, node0, node2, node1, 46, 43);
      node3.hasChildren();
      node2.isReturn();
      node2.isTry();
      Node node4 = node3.useSourceInfoFromForTree(node1);
      Node.newString("-1FF n<52X &[");
      node4.getCharno();
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isSwitch();
      Node node1 = Node.newString("first new child has existing sibling");
      node1.getSourceOffset();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(54, nodeArray0);
      node2.isReturn();
      node0.isTry();
      node0.useSourceInfoFromForTree(node1);
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(160, 160, 160);
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.getChangeTime();
      String string0 = "hTe";
      Node node1 = new Node(55, node0, node0);
      node1.isDefaultCase();
      node0.isExprResult();
      Node[] nodeArray0 = new Node[6];
      Node node2 = null;
      try {
        node2 = new Node(130, node0, node0, node1, 57, 100);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      String string0 = "wX[z4q!q";
      Node node0 = Node.newString("wX[z4q!q", 1610, (-1735));
      node0.setChangeTime(492);
      Node node1 = new Node(37, node0, node0, 524288, (-3400));
      Node.newString("com.google.javascript.rhino.JSDocInfo$StringPosition", 39, 40);
      Node node2 = node1.useSourceInfoFrom(node0);
      int int0 = 126;
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("wX[z4q!q", node2, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(120, (-36), (-277));
      node0.isDefaultCase();
      node1.isExprResult();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node((-791), nodeArray0);
      node3.getIndexOfChild(node2);
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = Node.newString("CharMatcher.WHITESPACE", 105, 0);
      node0.isLocalResultCall();
      node0.siblings();
      node0.toStringTree();
      node0.getJSDocInfo();
      node0.isAnd();
      node0.isDefaultCase();
      node0.getSideEffectFlags();
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = new Node(98);
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      LinkedList<Node> linkedList1 = new LinkedList<Node>();
      node_SideEffectFlags0.clearAllFlags();
      node0.isHook();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtUA+!ln");
      node0.isAnd();
      node0.isLocalResultCall();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = Node.newString(32, ">*`ZtUA+!ln");
      Node node2 = Node.newString("com.google.common.collect.ImmutableList");
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isEquivalentToShallow(node2);
      node1.isAssign();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = node2.getAncestors();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isVar();
      node1.isScript();
      node2.isOptionalArg();
      Node node3 = new Node((-4096), node2, node1, 49, 2);
      node1.isTypeOf();
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      node0.isRegExp();
      node0.isGetProp();
      int int0 = Node.DECR_FLAG;
      node0.isDebugger();
      node0.getDirectives();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(57, nodeArray0);
      node0.isEquivalentToShallow(node1);
      node0.isTry();
      node0.toStringTree();
      Node node2 = node0.getLastSibling();
      node0.isSyntheticBlock();
      node2.setLength(0);
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2026));
      node0.isAdd();
      node0.isEquivalentToTyped(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isEquivalentToTyped(node0);
      ImmutableList.of();
      node0.setIsSyntheticBlock(true);
      node0.getInputId();
      node0.toStringTree();
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(120, (-36), (-277));
      node0.isBreak();
      node2.isSyntheticBlock();
      node1.setLength((-536));
      Node.newString("new child has existing sibling", (-1389), 2291);
      node0.isTry();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2382, 169, 98);
      node0.setCharno(2382);
      node0.setSourceFileForTesting("=!3Q{RT[w=0?4#");
      node0.isQualifiedName();
      Node.newString(54, "=!3Q{RT[w=0?4#", 47, 51);
      node0.getStaticSourceFile();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 2382.0 169 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = new Node(4406, 4406, 4406);
      Node node1 = new Node(4406, node0, node0, node0, node0);
      Node node2 = Node.newString((-2207), "Should not happen\n", 57, 31);
      String string0 = "\\hp]N1G{j?r\\u";
      InputId inputId0 = new InputId(string0);
      node2.setInputId(inputId0);
      node2.isName();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      LinkedList<FunctionType> linkedList0 = new LinkedList<FunctionType>();
      Iterator<FunctionType> iterator0 = linkedList0.descendingIterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node3.isOptionalArg();
      node1.isAnd();
      node2.isDelProp();
      Node node4 = null;
      try {
        node4 = new Node(37, node0, node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = new Node(55, 55, 55);
      node0.isSetterDef();
      node0.hasChild(node0);
      node0.isFor();
      Node node1 = Node.newString((-3977), "|mSMmP9%9v&Iyd");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = Node.newString(55, "46");
      node3.setQuotedString();
      node2.setString("46");
      Node node4 = new Node(1160, 31, 36);
      node2.isTrue();
      Object object0 = new Object();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber((-929.0));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node1 = new Node(305, node0, 54, 2);
      node1.setLength(52);
      node1.isAssignAdd();
      node0.setDouble(29);
      node1.useSourceInfoFrom(node0);
      Node node2 = new Node(98);
      node2.getInputId();
      node0.setInputId((InputId) null);
      node0.getInputId();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<JSType> vector0 = new Vector<JSType>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node1 = new Node(267, node0, node0, node0, node0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, node0);
      templateType0.clearCachedValues();
      functionType0.getParameters();
      jSTypeRegistry0.createOptionalType(functionType0);
      simpleErrorReporter0.warning("Not declared as a constructor", "^z63Oa?Lo5n8", 0, 0);
      node1.isOnlyModifiesArgumentsCall();
      node0.setCharno(56);
      node0.getJSDocInfo();
      Node node2 = Node.newNumber(185.0, 12, (-1485));
      node2.setStaticSourceFile((StaticSourceFile) null);
      node1.replaceChild(node0, node2);
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.WHITESPACE");
      Node node1 = new Node((-1128), node0, node0);
      node0.isWhile();
      node0.getQualifiedName();
      Node node2 = node1.getChildBefore((Node) null);
      Node.newNumber((double) 30);
      node2.getCharno();
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2382, 169, 98);
      node0.setCharno(2382);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(4, nodeArray0, 86, 56);
      node1.useSourceInfoFrom(node0);
      Node.newNumber((double) 49, 1364, 1962);
      Node node2 = Node.newString(16, "$V#UEe");
      node2.isIn();
      Node node3 = new Node((-2627));
      // Undeclared exception!
      try { 
        node3.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2627
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.2568504450483));
      node0.detachChildren();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Error");
      node0.getSideEffectFlags();
      Node node1 = new Node(42, node0, node0, node0, 41, 132);
      Node node2 = node1.clonePropsFrom(node0);
      node2.toStringTree();
      node1.addChildrenToBack(node2);
      node0.isTry();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node3 = null;
      try {
        node3 = new Node(29, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = Node.newString("CharMatcher.WHITESPACE", 105, 0);
      Node node1 = Node.newString(125, "CharMatcher.WHITESPACE", 51, 2903);
      node1.isFor();
      node0.isGetterDef();
      node1.isVoid();
      node0.addSuppression(";=");
      node0.isSyntheticBlock();
      Node node2 = new Node(43, node1, node1, node0, node0);
      node2.isFalse();
      node0.hasMoreThanOneChild();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.putProp(56, (Object) null);
      node0.isDebugger();
      node0.isTrue();
      node0.isSwitch();
      node0.getInputId();
      node0.setLength(103);
      node0.isDec();
      node0.setInputId((InputId) null);
      Node node1 = Node.newString("2.3@Yo~");
      Node node2 = new Node((-170), node1, node0, 43, 38);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) vector0);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = new Node(4406, 4406, 4406);
      Node node1 = new Node(4406, node0, node0, node0, node0);
      Node node2 = Node.newString((-2207), "Should not happen\n", 57, 31);
      String string0 = "\\hp]N1G{j?r\\u";
      InputId inputId0 = new InputId(string0);
      node2.setInputId(inputId0);
      node2.isName();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      LinkedList<FunctionType> linkedList0 = new LinkedList<FunctionType>();
      Iterator<FunctionType> iterator0 = linkedList0.descendingIterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Object object0 = new Object();
      node1.isInc();
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      node0.isEquivalentToShallow(node0);
      node0.isObjectLit();
      node0.isEquivalentTo(node0, false, true, false);
      node0.isContinue();
      node0.getSideEffectFlags();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = new Node(1, node0, node0, node0, node0, 56, 63);
      node0.addChildToFront(node1);
      InputId inputId0 = new InputId("QImqG");
      node0.setInputId(inputId0);
      node0.siblings();
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.setDirectives(hashSet0);
      node0.setOptionalArg(true);
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2300), 2048, 2048);
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node1 = new Node((-2300), node0, 40, (-2662));
      node1.setDirectives(set0);
      node1.setSourceEncodedPosition(52);
      node1.cloneNode();
      node1.children();
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = new Node(103);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 46);
      Node node2 = node1.srcref(node0);
      Node node3 = new Node(8);
      node0.getDirectives();
      node0.isEquivalentToShallow(node3);
      Node node4 = new Node(47, node2, node0, node2, node0);
      node2.getSourceOffset();
      Node node5 = node3.cloneNode();
      node1.getJSDocInfo();
      Node node6 = Node.newNumber((-489.0), (-2145627080), 323);
      node2.setStaticSourceFile((StaticSourceFile) null);
      // Undeclared exception!
      try { 
        node4.replaceChild(node6, node5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = new Node(98);
      node0.setOptionalArg(true);
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.isFalse();
      node0.hasMoreThanOneChild();
      node0.isAssignAdd();
      Node node1 = node0.cloneNode();
      node1.getBooleanProp((-2385));
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      String string0 = "s";
      Node node0 = Node.newString("s", 110, (-1236));
      Node node1 = new Node(108, node0, node0, node0, node0);
      Node node2 = new Node((-1584), node1);
      node0.removeChildren();
      Node node3 = new Node(108, node2, node2, node2, node2);
      node3.isIf();
      node2.removeFirstChild();
      node0.getBooleanProp(32);
      Node node4 = new Node(51, 0, 4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node4.cloneTree();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      // Undeclared exception!
      try { 
        node4.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got IN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      node1.getDouble();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      Node node2 = null;
      try {
        node2 = new Node(111, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2026));
      node0.isAdd();
      node0.isEquivalentToTyped(node0);
      node0.isEquivalentToTyped(node0);
      ImmutableList.of();
      node0.setIsSyntheticBlock(true);
      node0.getInputId();
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      node0.isNull();
      node0.isGetProp();
      try { 
        node0.setDouble((-1156.1433865769427));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING 46 [synthetic: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = new Node(140, 140, 140);
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.getChangeTime();
      node0.addSuppression("hTe");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.setCharno((-1052));
      jSTypeRegistry0.createObjectType(";=", node0, (ObjectType) null);
      node0.isComma();
      Node node1 = node0.getAncestor(0);
      node1.isString();
      node1.isGetterDef();
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 140
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      String string0 = "s";
      Node node0 = Node.newString("s", 110, (-1236));
      Node node1 = new Node(108, node0, node0, node0, node0);
      Node node2 = new Node((-1584), node1);
      node0.removeChildren();
      Node node3 = new Node(108, node2, node2, node2, node2);
      node3.isIf();
      Node node4 = node2.removeFirstChild();
      node0.getBooleanProp(32);
      // Undeclared exception!
      try { 
        node4.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = new Node((-480));
      node0.isQualifiedName();
      Node node1 = node0.cloneNode();
      node1.setSourceFileForTesting("9;kI2zCYcN6U");
      node1.removeProp(31);
      node0.isBreak();
      node0.isQualifiedName();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals("Y[HVl");
      Node node2 = node0.cloneNode();
      Node node3 = Node.newString("com.google.common.base.Predicates$InstanceOfPredicate");
      node3.getStaticSourceFile();
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = Node.newString((-2427), "", 0, 47);
      node0.children();
      Node node2 = Node.newString(39, "wX[zEq!q", (-2911), 16);
      Node node3 = new Node((-941), node1, node2, node0, 36, (-2273));
      Node node4 = node3.srcref(node1);
      node2.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node2.hasChildren();
      node4.isReturn();
      node3.isQuotedString();
      node0.isFunction();
      // Undeclared exception!
      try { 
        node4.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -941
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = Node.newString("(L?s1eSOo%=f!k%#g:");
      Node node2 = new Node(1, node1, 44, 2020);
      node0.isWhile();
      node2.isEquivalentToShallow(node1);
      node1.isThis();
      node0.toStringTree();
      Node node3 = new Node(100, node0, 103, 2);
      Node node4 = node3.getLastSibling();
      node4.isSyntheticBlock();
      node0.isFalse();
      node4.hasMoreThanOneChild();
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = Node.newString("C", (-243), 30);
      node0.isEquivalentToShallow(node0);
      node0.addSuppression("C");
      node0.getString();
      node0.hasChildren();
      node0.isReturn();
      node0.isTry();
      Node node1 = Node.newString(136, "C");
      Node node2 = Node.newString("]#gPP7g*", 4, 55);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node2);
      Node.NodeMismatch node_NodeMismatch1 = node0.checkTreeEqualsImpl(node1);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString(110, "unexpected prop id ", (-5946), 110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = new Node(12, node0, node0, 38, 56);
      Node node3 = node0.srcrefTree(node1);
      node2.isDebugger();
      node3.getDirectives();
      node3.isTry();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node4 = new Node(126, node2);
      Node node5 = Node.newString(46, "unexpected prop id ", 1283, 51);
      node5.isGetElem();
      Node node6 = node4.useSourceInfoIfMissingFromForTree(node5);
      node2.hasChildren();
      Node.newString(2, "unexpected prop id ");
      jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node5.isEmpty();
      node1.useSourceInfoFrom(node6);
      node0.isGetterDef();
      node6.isAdd();
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = node0.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      node0.isAnd();
      node0.isAssign();
      Node node2 = new Node(42, node0, node1, node0, node0);
      Node node3 = null;
      try {
        node3 = new Node(39, node0, 31, 32);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-817), (-817));
      node0.setSourceFileForTesting("BITXOR");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(113, node0, (-1925), 505);
      node1.isWhile();
      Node node2 = Node.newNumber((-685.8181336104833));
      node2.isEquivalentToShallow(node0);
      node0.isThis();
      node0.toStringTree();
      node0.getLastSibling();
      Node node3 = new Node(53, node1);
      node3.isSyntheticBlock();
      node1.isFalse();
      node0.hasMoreThanOneChild();
      node1.isCast();
      node0.isSyntheticBlock();
      node3.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = Node.newString("(L?s1eSOo%=f!k%#g:");
      node0.setOptionalArg(true);
      node0.toStringTree();
      node1.setLength(51);
      node1.isFalse();
      Node node2 = new Node(31, node1, node1, node0, 36, 8);
      node2.hasMoreThanOneChild();
      node2.isAssignAdd();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      node0.isSetterDef();
      node0.isObjectLit();
      node0.isEquivalentToShallow(node0);
      node0.isThis();
      node0.toStringTree();
      Node node1 = node0.getLastSibling();
      node1.isSyntheticBlock();
      node1.srcrefTree(node0);
      node0.isFalse();
      node1.hasMoreThanOneChild();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = Node.newNumber((-2218.43));
      node0.getBooleanProp(597);
      node0.isLocalResultCall();
      node0.isArrayLit();
      Node node1 = Node.newNumber((double) 47);
      node1.getIndexOfChild(node0);
      node0.isEquivalentToShallow(node1);
      node0.isThis();
      node1.toStringTree();
      node0.getLastSibling();
      node0.isSyntheticBlock();
      node0.isFalse();
      node1.hasMoreThanOneChild();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = Node.newString("(L?s1eSOo%=f!k%#g:");
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.setDirectives(hashSet0);
      node0.setOptionalArg(true);
      node0.toStringTree();
      node1.isSyntheticBlock();
      node0.isFalse();
      node1.hasMoreThanOneChild();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = new Node(63);
      node0.isSetterDef();
      node0.isObjectLit();
      node0.isArrayLit();
      node0.isUnscopedQualifiedName();
      node0.isSetterDef();
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      HashSet<FunctionType> hashSet0 = null;
      try {
        hashSet0 = new HashSet<FunctionType>((-4603), 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal initial capacity: -4603
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wX[zEq!q");
      Node node0 = Node.newString(158, "s*u{o`9?.A=\u0006SE2?< ");
      node0.putIntProp(55, (-1293));
      Node node1 = new Node(47, node0, node0, node0, node0);
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = node1.cloneTree();
      node2.detachChildren();
      node2.copyInformationFrom(node0);
      Node.newString("hP#,3Jf^qnr@9");
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = new Node(55, 55, 55);
      node0.isSetterDef();
      node0.hasChild(node0);
      node0.setSourceFileForTesting("BITXOR");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getSourceOffset();
      node0.getSideEffectFlags();
      Node node1 = new Node(51, node0);
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = new Node(140, 140, 140);
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.getChangeTime();
      node0.addSuppression("hTe");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.createObjectType(";=", node0, (ObjectType) null);
      node0.isComma();
      Node node1 = node0.getAncestor(0);
      node0.isIn();
      node1.isGetterDef();
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 140
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = Node.newNumber((double) 132, (-4996), (-70));
      node0.getStaticSourceFile();
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isTrue();
      node0.setCharno((-70));
      int int0 = Node.VAR_ARGS_NAME;
      node0.isSwitch();
      node0.getDouble();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(31, nodeArray0, 54, 13);
      node0.checkTreeEquals(node1);
      Node node2 = Node.newString("D[T3 ^J", 39, 101);
      node2.isTry();
      node0.isOptionalArg();
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      // Undeclared exception!
      try { 
        node0.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = new Node(169, 2382, 2382);
      node0.isQualifiedName();
      node0.setCharno(2382);
      node0.setSourceFileForTesting("=!3Q{RT[w=0?4#");
      node0.getDirectives();
      Node.extractLineno(33);
      Node node1 = Node.newString(41, ".RGqcMZSg@uJd?F<");
      node0.copyInformationFromForTree(node1);
      node0.isTrue();
      Node node2 = new Node(50, node0);
      node2.setChangeTime(49);
      node2.isThrow();
      node0.isObjectLit();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 50, 50);
      node0.children();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isAssign();
      node0.getJsDocBuilderForNode();
      node0.mayMutateArguments();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(86, node0, node0, node0);
      node1.isThrow();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = new Node(31);
      Node node2 = node1.srcref(node0);
      // Undeclared exception!
      try { 
        node2.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isFalse();
      Node node1 = Node.newString(4095, "HQ_j");
      Node.newString("UNKNOWN");
      node0.getDirectives();
      Node node2 = Node.newString("46", (-1), 155);
      Node node3 = new Node(39, node1, node2);
      int int0 = Node.DIRECT_EVAL;
      // Undeclared exception!
      try { 
        node3.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.putBooleanProp(0, true);
      node0.isLabel();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isFalse();
      Node[] nodeArray0 = new Node[1];
      Node node1 = Node.newString("com.google.common.collect.ImmutableList");
      nodeArray0[0] = node0;
      node0.children();
      Node node2 = new Node(2549, node0, node0, (-481), (-421));
      Node node3 = node0.useSourceInfoFrom(node2);
      Node node4 = Node.newNumber((-3194.028), 1373, 30);
      node1.setSourceFileForTesting("com.google.common.collect.ImmutableList");
      node0.isEquivalentTo(node4);
      node1.isGetElem();
      node2.getProp(2004);
      Node node5 = new Node((-1826), node1, 4095, 2);
      node3.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node4.getChildAtIndex(154);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.2568504450483));
      node0.detachChildren();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Error");
      node0.getSideEffectFlags();
      Node node1 = Node.newString("Error");
      node1.type = 37;
      node1.setSideEffectFlags(42);
      node0.isEquivalentTo(node1, true, true, true);
      node0.getSourceOffset();
      node0.getIntProp(4095);
      node1.getChangeTime();
      node1.checkTreeEquals(node0);
      node1.isFalse();
      node1.isCall();
      node0.putBooleanProp(4987, false);
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = new Node(103);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 46);
      Node node2 = node0.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      node1.setIsSyntheticBlock(true);
      node0.isEquivalentToShallow(node2);
      Node node3 = new Node(47, node0, node0, node0, node0);
      node1.getSourceOffset();
      node2.cloneNode();
      node0.getSideEffectFlags();
      Node node4 = new Node(23, node3, 4096, 54);
      Node.newNumber((-1850.0), 57, (-926));
      node0.children();
      node1.useSourceInfoFrom(node1);
      Node node5 = null;
      try {
        node5 = new Node(8, node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = new Node(4406, 4406, 4406);
      Node node1 = new Node(4406, node0, node0, node0, node0);
      Node node2 = Node.newString((-2207), "Should not happen\n", 57, 31);
      String string0 = "\\hp]N1G{j?r\\u";
      InputId inputId0 = new InputId(string0);
      Node node3 = node1.srcrefTree(node0);
      node0.isDebugger();
      Node node4 = Node.newNumber((-1.0), 148, 330);
      node4.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      boolean boolean0 = false;
      Node.newNumber((double) 2);
      Node node5 = new Node(2, node1, node4);
      int int0 = (-868);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node6 = null;
      try {
        node6 = new Node(2, node4, node2, node3, 311, 39);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = Node.newNumber((-253.14272), 117, 117);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setChangeTime(3571);
      node0.isSyntheticBlock();
      node0.isLabelName();
      node0.toStringTree();
      Node node1 = node0.getLastSibling();
      node0.getIndexOfChild(node1);
      node0.getExistingIntProp(56);
      node0.srcrefTree(node1);
      node1.isScript();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = new Node((-704));
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node1 = Node.newString(53, "", 49, 52);
      node0.srcref(node1);
      Node node2 = null;
      // Undeclared exception!
      try { 
        node1.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = Node.newNumber((double) 132, (-4996), (-70));
      node0.getStaticSourceFile();
      node0.children();
      node0.setLineno(1146);
      node0.getLength();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.detachChildren();
      node0.isGetterDef();
      Node node1 = new Node(15, node0, node0, node0);
      Node node2 = Node.newString(1771, "!#", 53, 413);
      node2.isEquivalentTo(node0);
      node0.isScript();
      node2.isIf();
      Node node3 = null;
      try {
        node3 = new Node(4, node0, node1, node0, 2263, 40);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(34, 34, (-519));
      node0.isQuotedString();
      node0.siblings();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(310, node0, 1, 35);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.getJSDocInfo();
      node0.addChildToBack(node1);
      String string0 = "[@j<=ygL]j\"bhqwd/";
      try { 
        node1.setString("[@j<=ygL]j\"bhqwd/");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // COLON 1 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      node0.isSetterDef();
      node0.isObjectLit();
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(42, node0, 4114, 31);
      node1.isWhile();
      node1.isEquivalentToShallow(node0);
      node1.isThis();
      node0.toStringTree();
      Node node2 = node0.getLastSibling();
      node2.addSuppression(";=");
      node2.isSyntheticBlock();
      node1.isFalse();
      node2.hasMoreThanOneChild();
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      int int0 = 169;
      Node node0 = new Node(169);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node0);
      node0.isAssign();
      node0.setOptionalArg(false);
      node0.isFromExterns();
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 169
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      node0.isSetterDef();
      node0.isObjectLit();
      Node node1 = new Node(30, 119, 15);
      node1.putIntProp(897, 12);
      Node node2 = new Node(37, node1, node0, node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "P:6,o+*");
      Node node3 = node0.cloneTree();
      node3.detachChildren();
      Node node4 = node1.copyInformationFrom(node3);
      Node.newString("3)SEst{$TPtO*_2<");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Stack<JSType> stack0 = new Stack<JSType>();
      node4.getStaticSourceFile();
      Node.newNumber(0.0);
      node3.getNext();
      node2.getBooleanProp(2309);
      Object object0 = new Object();
      node4.isInc();
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(105, node0, node0, node0, node0, 51, 37);
      Node node2 = node1.srcref(node0);
      node2.isSetterDef();
      node2.children();
      node2.isEquivalentToTyped(node1);
      node0.setLineno(110);
      node0.getLength();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node2.detachChildren();
      node2.isGetterDef();
      Node node3 = new Node(46, node2, node0, node2);
      Node.newString((-340), "!#");
      node3.isIn();
      Node node4 = new Node((-999));
      node3.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(37, node0, node0, node0, 15, 0);
      Node node2 = node1.srcref(node0);
      node2.isSetterDef();
      node2.children();
      node2.isEquivalentToTyped(node1);
      node0.setLineno(110);
      node0.getLength();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node2.detachChildren();
      node2.isGetterDef();
      Node node3 = new Node(46, node2, node0, node2);
      Node.newString(30, "!#", (-855), (-1088));
      ArrayList<FunctionType> arrayList0 = new ArrayList<FunctionType>();
      ListIterator<FunctionType> listIterator0 = arrayList0.listIterator();
      ImmutableList.copyOf((Iterator<? extends JSType>) listIterator0);
      node3.isThis();
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(37, node0, node0, node0, 15, 0);
      Node node2 = node1.srcref(node0);
      node2.isSetterDef();
      node2.children();
      node2.isEquivalentToTyped(node1);
      node0.setLineno(110);
      node0.getLength();
      node1.toString(false, false, true);
      node1.addChildBefore(node2, node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.isWhile();
      node2.getDirectives();
      node0.children();
      Node node3 = null;
      try {
        node3 = new Node(52, node1, node0, 46, 54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<FunctionType> linkedList0 = new LinkedList<FunctionType>();
      Iterator<FunctionType> iterator0 = linkedList0.descendingIterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node2.isEquivalentTo(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      int int0 = Node.SIDE_EFFECTS_ALL;
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node1);
      node_AncestorIterable1.iterator();
      node1.detachChildren();
      node1.getBooleanProp(46);
      node0.isScript();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEC 103 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = Node.newString("46", 0, 0);
      Node node1 = Node.newString(130, "TRY");
      node1.getString();
      node0.hasChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      int int0 = Node.FLAG_NO_THROWS;
      int int1 = Node.CHANGE_TIME;
      node1.isAdd();
      node1.getJsDocBuilderForNode();
      node1.isVar();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = Node.newString("46", 0, 0);
      node0.isStringKey();
      Node node1 = Node.newString(55, "TRY", (-783), 48);
      Node node2 = new Node(111, 57, 15);
      node2.isBreak();
      node1.isLocalResultCall();
      node2.isCase();
      node2.isReturn();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = Node.newNumber((-2578.2568504450483));
      node0.detachChildren();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Error");
      node0.getSideEffectFlags();
      Node node1 = Node.newString("Error");
      node1.type = 37;
      node1.setSideEffectFlags(42);
      node0.isEquivalentTo(node1, true, true, true);
      node0.getSourceOffset();
      node0.getIntProp(4095);
      node1.getChangeTime();
      node1.checkTreeEquals(node0);
      Node.newString(2, "p>KT#ld", 38, 301);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      int int0 = Node.SIDE_EFFECTS_ALL;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node0.detachChildren();
      node0.getDirectives();
      Node.extractLineno((-231));
      node0.isTrue();
      Node node2 = new Node((-1319), node0);
      node2.removeFirstChild();
      node2.isThrow();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.putProp(42, (Object) null);
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString(30, "z}.JJ5)3", 32, 2822);
      Node node2 = node0.srcref(node1);
      node0.srcrefTree(node2);
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEC 32 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = new Node(98);
      Node node1 = Node.newString("(L?s1eSOo%=f!k%#g:");
      node0.setOptionalArg(true);
      node0.toStringTree();
      node1.isSyntheticBlock();
      node0.isFalse();
      node1.hasMoreThanOneChild();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = Node.newString(51, "0Cr8D|DhepCI.:fV7t", (-4096), 55);
      Node node3 = node1.srcref(node0);
      Node node4 = node0.srcrefTree(node1);
      node2.isComma();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      node4.hasChildren();
      node3.isReturn();
      node0.isTry();
      node4.isFunction();
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = new Node(0);
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node1 = Node.newString(16, "\n\nSubtree2: ", 15, 103);
      Node node2 = node0.srcref(node1);
      Node node3 = node2.srcrefTree(node0);
      node2.isDebugger();
      node3.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node3.isEquivalentToShallow(node0);
      node1.isAssign();
      Node node4 = new Node(46, node0, node3, node0, node1);
      Node node5 = new Node(503, node4, 4, 1442);
      Node node6 = Node.newNumber(2543.210638, 2147483645, 79);
      node0.children();
      node0.useSourceInfoFrom(node6);
      node2.setChangeTime(43);
      node_SideEffectFlags0.clearAllFlags();
      node5.isHook();
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = Node.newString(111, "", 111, 111);
      node0.getInputId();
      node0.isWhile();
      Node.newNumber((double) 4095, 49, 4095);
      Node node1 = new Node(50, node0, 29, 2);
      node0.getInputId();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.setLength(2);
      node0.isFalse();
      node1.hasMoreThanOneChild();
      node2.isInc();
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = Node.newString("46", 0, 0);
      node0.isStringKey();
      Node node1 = new Node(924, node0, 15, 4417);
      node1.getSourceFileName();
      node1.getStaticSourceFile();
      node1.isWhile();
      node0.isEquivalentToShallow(node1);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.isLabelName();
      node0.toString(true, false, false);
      node0.getInputId();
      node1.setInputId((InputId) null);
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      int int0 = Node.FLAG_NO_THROWS;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "pr%!*97~J");
      Node node0 = new Node(105, 105, 105);
      Node node1 = Node.newString("(L?s1eSOo%=f!k%#g:");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("(L?s1eSOo%=f!k%#g:", "com.google.common.collect.Lists$TransformingRandomAccessList", 1697, 4);
      node1.isComma();
      node0.isLabelName();
      node0.toStringTree();
      node0.getLastSibling();
      Node node2 = Node.newString("n>=yY$Q*0Mk!", 55, 1);
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newString(111, "", 111, 111);
      InputId inputId0 = new InputId("");
      node0.isStringKey();
      Node node1 = Node.newString(102, "", 36, 100);
      node1.isBreak();
      node0.isGetterDef();
      MockFileWriter mockFileWriter0 = new MockFileWriter("inferred", false);
      node0.appendStringTree(mockFileWriter0);
      node0.putIntProp(42, 2);
      node1.isCatch();
      node1.getCharno();
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, (-1392), 9);
      node1.putIntProp(50, 1341);
      node1.setLineno((-1100));
      node0.addChildToBack(node1);
      node0.isGetterDef();
      node1.isIn();
      node1.getType();
      Node node2 = node0.getLastSibling();
      node2.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = Node.newString(110, "unexpected prop id ", (-5946), 110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = new Node(33, 110, (-1681));
      node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = Node.newNumber(2778.0);
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = new Node((-798), (-2787), (-2787));
      Node node1 = new Node(105, node0, node0, node0);
      node1.removeChild(node0);
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(77, node0, node0, node0, 32, 108);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isWhile();
      Node node3 = Node.newNumber((double) 51, 16, 8);
      Node node4 = new Node(47);
      node4.getDirectives();
      Node node5 = new Node(49, node4, (-1111), 57);
      node4.getInputId();
      node0.setLength(105);
      node5.isDec();
      node3.setInputId((InputId) null);
      Node.newString("<C,#p]5h+wT\"B\u0003^0");
      Object object0 = new Object();
      node3.isInc();
      // Undeclared exception!
      try { 
        node2.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.putProp(42, (Object) null);
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isTrue();
      Node.newString(" QiSbPZeC");
      Node.newNumber(0.0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Iterable<? extends JSType>) immutableList0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(57, node0, node0);
      node1.getInputId();
      node0.toString(true, true, true);
      node1.isDelProp();
      node1.isOptionalArg();
      Node node2 = Node.newNumber((double) 57);
      node1.getIndexOfChild(node0);
      Node node3 = null;
      try {
        node3 = new Node(30, node0, node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = Node.newNumber((-2218.43));
      node0.getBooleanProp(597);
      Node node1 = Node.newNumber((double) 51, 8192, 4114);
      node1.isWhile();
      node0.getDirectives();
      Node.extractLineno(48);
      node0.isTrue();
      Node node2 = new Node((-1558), node1);
      node1.hasMoreThanOneChild();
      node0.isReturn();
      Node node3 = new Node(15, node2);
      // Undeclared exception!
      try { 
        node3.removeChild(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(43, nodeArray0);
      Node node1 = Node.newNumber(704.47558325015);
      node1.isLabelName();
      node0.isDo();
      node1.isHook();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = Node.newString("C", (-243), 0);
      node0.hasMoreThanOneChild();
      node0.addSuppression("C");
      node0.getString();
      node0.hasChildren();
      node0.isTry();
      Node node1 = Node.newString(127, "C");
      node1.isAssign();
      Node node2 = Node.newString("C", 36, (-2009));
      Node node3 = new Node(40, node2, node2, 3164, 2342);
      node2.isFromExterns();
      node3.toStringTree();
      node3.isOptionalArg();
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      node3.getType();
      node0.addSuppression("STRING 3164\n    STRING C\n");
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node node0 = Node.newString("C", (-243), 30);
      node0.addSuppression("C");
      node0.addSuppression("hT,e");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isAssignAdd();
      node0.isStringKey();
      node0.isNull();
      node0.isIn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isExprResult();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = new Node(4406);
      node0.isSwitch();
      node0.getSourceOffset();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(57, 39, 93);
      Node node2 = node1.getLastSibling();
      node2.isNot();
      Node node3 = Node.newNumber(44.33426, 63, (-3972));
      node3.getProp(12);
      node2.isBlock();
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isFromExterns();
      node0.isDelProp();
      node0.toString();
      node0.setDouble((-4177.23826));
      Node.newNumber(224.6706085330457, 1317, 32);
      Node node1 = Node.newNumber((-1155.6957975086816));
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      Node node1 = Node.newString(":B:)U,bNs3F'cd?");
      node0.getLength();
      int int0 = Node.CHANGE_TIME;
      node1.isNot();
      node0.getProp(152);
      node0.getProp(12);
      node0.isNumber();
      Node node2 = Node.newNumber((double) 4095);
      // Undeclared exception!
      try { 
        node0.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = Node.newString("46", 0, 0);
      node0.isStringKey();
      Node node1 = new Node(924, node0, 15, 4417);
      node1.getSourceFileName();
      node1.getStaticSourceFile();
      node1.isWhile();
      node0.isEquivalentToShallow(node1);
      node0.isLabelName();
      node0.toString(true, false, false);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      InputId inputId0 = new InputId("BosU$<D4WiG[Sv'");
      node0.getInputId();
      node1.setInputId((InputId) null);
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString(": ");
      Node node2 = new Node(57, node0, node1);
      node0.toString(false, true, true);
      Node.newNumber(0.0, 717, 16);
      node0.getBooleanProp(54);
      node0.isScript();
      node0.getString();
      node2.isLabelName();
      node2.hasChild(node1);
      node2.isParamList();
      node0.setLineno(57);
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = Node.newString("C", (-243), 0);
      node0.hasMoreThanOneChild();
      node0.addSuppression("C");
      node0.getString();
      node0.hasChildren();
      node0.isReturn();
      node0.isTry();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString("C", (-2060), Integer.MIN_VALUE);
      node1.isFunction();
      node0.putIntProp(108, 0);
      node0.toString(false, false, false);
      node1.isCall();
      node1.putBooleanProp(1144, true);
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wX[zEq!q");
      Node node0 = Node.newString(148, "s*u{o`9?.A=\u0006SE2?< ");
      node0.putIntProp(55, (-1293));
      Node node1 = new Node(148, node0, node0, node0);
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = node1.cloneTree();
      node2.detachChildren();
      node2.copyInformationFrom(node0);
      Node.newString("hP#,3Jf^qnr@9");
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(43, nodeArray0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      int int0 = 1693;
      Node node1 = Node.newString(1, "gkH: t'CJ_n/':wV", 1693, 36);
      node0.isBreak();
      node0.isFunction();
      node0.putIntProp((-1), 113);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        node1.toString(false, false, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = new Node(4406, 4406, 4406);
      Node node1 = new Node(4406, node0, node0, node0, node0);
      node1.getSourceOffset();
      node1.getQualifiedName();
      node0.getDirectives();
      Node node2 = new Node(42, node1, node1);
      int int0 = Node.FLAG_NO_THROWS;
      node1.removeFirstChild();
      int int1 = Node.CHANGE_TIME;
      node2.isTry();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = new Node(120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      int int0 = Node.POST_FLAG;
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node0.detachChildren();
      node1.getBooleanProp(2);
      Node.newNumber((-86.15));
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}HQ&");
      Node node0 = Node.newString(1030, ";=");
      node0.isAssignAdd();
      node0.isLabel();
      node0.getType();
      node0.isGetElem();
      node0.isEmpty();
      Node node1 = new Node(30, node0, node0, node0, 1030, 49);
      node1.type = 32;
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = Node.newString("46", 0, 0);
      node0.isStringKey();
      node0.isStringKey();
      Node node1 = Node.newString(12, "46", 30, 15);
      node1.isBreak();
      node0.isFunction();
      node0.putIntProp(49, 38);
      node1.isOnlyModifiesThisCall();
      Object object0 = new Object();
      node0.isNoSideEffectsCall();
      node0.isTypeOf();
      node0.getParent();
      Object object1 = new Object();
      node0.getChildAtIndex(0);
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      Node node1 = Node.newString(":B:)U,bNs3F'cd?");
      node0.getLength();
      int int0 = Node.CHANGE_TIME;
      node1.isNot();
      node0.getProp(152);
      node1.setVarArgs(false);
      node1.isTrue();
      Object object0 = new Object();
      node0.isInc();
      node1.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      JSType jSType1 = jSTypeRegistry0.createOptionalType(jSType0);
      node0.setJSType(jSType1);
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2382, 169, 98);
      node0.isQualifiedName();
      node0.setCharno(2382);
      node0.setSourceFileForTesting("=!3Q{RTB[w=0?4#");
      node0.isQualifiedName();
      Node.newString("=!3Q{RTB[w=0?4#", 15, 2382);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 2382.0 169 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-817), 118);
      node0.setSourceFileForTesting("BITXOR");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getSourceOffset();
      node0.getSideEffectFlags();
      int int0 = (-2716);
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "U^LS%zjdbsKF+DM");
      Node node0 = new Node(103);
      Node node1 = Node.newString(1628, "wX[zEq!q", (-2569), 712);
      Node node2 = new Node(50, node0, node0, node0, 4095, 49);
      node2.isLabel();
      node1.isFor();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 50, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      node3.isIn();
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node5 = new Node(49, 116, (-2550));
      node5.isOnlyModifiesThisCall();
      node0.isTrue();
      node1.isNE();
      Node node6 = new Node(152, node4, node4);
      node1.isOnlyModifiesThisCall();
      Object object0 = new Object();
      node1.isTypeOf();
      node4.getParent();
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = new Node(83);
      Node node1 = new Node(1204518, node0, 12, 4095);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isEquivalentToShallow(node0);
      node0.isAssign();
      node0.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = new Node(98);
      String string0 = "(L?s1eSOo%=f!k%#g:";
      Node node1 = new Node(4, node0, node0, node0, 98, 34);
      Node node2 = node0.clonePropsFrom(node1);
      node1.isWhile();
      Node.newNumber((-1.0), 4, 31);
      node1.getDirectives();
      Node node3 = null;
      try {
        node3 = new Node(77, node2, (-736), 52);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isSwitch();
      node0.getSourceOffset();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(54, nodeArray0);
      node0.srcref(node1);
      Node node2 = new Node((-983), 1, 55);
      node1.getLastSibling();
      node0.isNot();
      node1.getProp((-1601));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -983
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      node0.isSetterDef();
      node0.isObjectLit();
      Node node1 = new Node((-5335), 0, 105);
      node0.isEquivalentTo(node1, false, true, true);
      Node node2 = new Node(38, node0, 48, 55);
      node0.isWhile();
      node1.isEquivalentToShallow(node2);
      node1.isLabelName();
      node2.toStringTree();
      Node node3 = node2.getLastSibling();
      node3.addSuppression("\u04F9\u05BE\u05EA\u05F4\u06FF\u077F\u0E7F\u20AF\u213A\uFDFF\uFEFF\uFFDC");
      node3.isOptionalArg();
      Iterator<JSType> iterator0 = (Iterator<JSType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      node0.isFalse();
      Node node4 = new Node(4114, node3);
      // Undeclared exception!
      try { 
        node4.getChildAtIndex(56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isSwitch();
      node0.getSourceOffset();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(54, nodeArray0);
      Node node2 = new Node((-983), 1, 55);
      Node node3 = node1.getLastSibling();
      node0.isNot();
      node1.getProp((-1601));
      node3.isBlock();
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = Node.newString(110, "unexpected prop id ", (-5946), 110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.toString(false, false, true);
      node0.getProp((-5946));
      node0.getInputId();
      node0.setLength(110);
      node0.isDec();
      node0.setInputId((InputId) null);
      Node node1 = Node.newString(";=");
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      Vector<JSType> vector0 = new Vector<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node2 = new Node(16, node1);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = Node.newString("?}ror");
      node1.isEquivalentToShallow(node0);
      node1.toString(false, true, false);
      node0.getProp(29);
      node1.getInputId();
      node1.setLength(52);
      node1.isDec();
      node1.setInputId((InputId) null);
      Node.newString(";=");
      Node node2 = new Node(8, node1, node0, 30, 94);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Stack<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node2.copyInformationFromForTree(node0);
      Node.newString(63, "@4>bfw:v~'");
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newNumber((double) 105, (-798), (-2787));
      Node node1 = new Node(105, node0, node0, node0);
      node1.isFalse();
      node1.isFunction();
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      node0.isSetterDef();
      node0.isObjectLit();
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(42, node0, 4114, (-919));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.mayMutateGlobalStateOrThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.addChildToBack(node1);
      node2.isGetterDef();
      node1.isRegExp();
      node1.addChildrenToFront(node2);
      node2.isThis();
      // Undeclared exception!
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = Node.newString("C", (-232), (-232));
      node0.isVar();
      node0.addSuppression("C");
      node0.isNoSideEffectsCall();
      node0.getString();
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(105, node0, node0, node0, node0, 51, 37);
      Node node2 = node1.srcref(node0);
      node2.isSetterDef();
      node2.children();
      node2.isEquivalentToTyped(node1);
      node0.setLineno(110);
      node0.getLength();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node2.detachChildren();
      node2.isGetterDef();
      Node node3 = new Node(46, node2, node0, node2);
      Node node4 = Node.newString(30, "!#", (-855), (-1088));
      node3.isEquivalentTo(node4);
      node3.isScript();
      node1.isIf();
      node2.isTrue();
      Object object0 = new Object();
      node0.isInc();
      try { 
        node4.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEW !# is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = Node.newString(111, "", 111, 111);
      InputId inputId0 = new InputId("");
      Node node1 = new Node(46, 1, 1073);
      node0.setSourceEncodedPositionForTree((-895));
      node0.putIntProp(1108, 4095);
      node0.setLineno(57);
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = new Node((-827), 112, 46);
      node0.addChildToBack(node2);
      node2.isGetterDef();
      node2.getType();
      Node node3 = new Node(57, (-1455), 111);
      Node node4 = node1.getLastSibling();
      node2.isNot();
      node0.getProp(0);
      node4.isBlock();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.isNull();
      Node node1 = Node.newNumber((-3068.588), 8, (-2908));
      Node node2 = new Node(46, node0, node1, node0, 2, 1041);
      node2.clonePropsFrom(node0);
      node2.isWhile();
      Node node3 = Node.newNumber((-1.0), 132, 635);
      node1.getDirectives();
      Node node4 = new Node(78, node3, (-41), 22);
      Node node5 = new Node((-1803), node2, node4, node4);
      node5.getInputId();
      node3.setLength(1);
      Node node6 = new Node((-2247), node5, 55, 79);
      node6.isDec();
      node3.setInputId((InputId) null);
      Node node7 = Node.newString("2.3@Yo~");
      // Undeclared exception!
      try { 
        node7.replaceChildAfter(node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = new Node(140);
      node0.isUnscopedQualifiedName();
      node0.isLabel();
      node0.isCase();
      node0.getDirectives();
      Node node1 = Node.newString((-3544), "(L?s1eSOo%=f!k%#g:", 324, 53);
      node0.isEquivalentToShallow(node1);
      node0.isAssign();
      Node node2 = new Node((-3544), node0, 52, 943);
      Node.newString(39, ":`eZ(;\"I2V", 43, 54);
      InputId inputId0 = new InputId(":`eZ(;\"I2V");
      Node.newString("(L?s1eSOo%=f!k%#g:", (-1233), 4220);
      Node node3 = node2.removeFirstChild();
      node3.isTry();
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = new Node(98);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("n>=yY$Q*0Mk!", "(L?s1eSOo%=f!k%#g:", 36, 0);
      node0.isSetterDef();
      Node.extractLineno(114);
      node0.isTrue();
      node0.isLocalResultCall();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(1793, nodeArray0, 30, 1);
      node1.isCase();
      node0.isReturn();
      node0.isGetProp();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3777), (-3777));
      node0.isNull();
      Node node1 = new Node(306, 149, 55);
      node1.setSourceEncodedPositionForTree(990);
      node0.putIntProp((-1), 57);
      node1.setLineno(154);
      node0.mayMutateGlobalStateOrThrow();
      node0.addChildToBack(node1);
      node0.isGetterDef();
      node1.getType();
      Node node2 = node0.getLastSibling();
      node2.putBooleanProp(56, true);
      node0.isNot();
      Node node3 = new Node(1, node0, node2, node0);
      node3.getProp(543);
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.isNull();
      Node node1 = new Node(51, (-1038), 37);
      node0.setSourceEncodedPositionForTree(147);
      node0.putIntProp(4095, 38);
      node1.setLineno((-1392));
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = new Node(1508, (-5335), 112);
      node0.addChildToBack(node2);
      node2.isGetterDef();
      node2.getType();
      Node node3 = new Node(47, 16, 64);
      Node node4 = node3.getLastSibling();
      node4.isNot();
      node0.getProp(54);
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = new Node(98);
      Node node1 = Node.newNumber((-1.0));
      Node node2 = node0.copyInformationFrom(node1);
      node2.getChangeTime();
      Node node3 = Node.newString("(L?s1eSOo%=f!k%#g:");
      node0.setOptionalArg(false);
      node0.isFromExterns();
      node0.toStringTree();
      node3.isSyntheticBlock();
      node0.isFalse();
      node3.hasMoreThanOneChild();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString(":B:)U,bNs3F'cd?");
      node1.isEquivalentToShallow(node0);
      node0.toString(true, true, false);
      node1.getProp((-2558));
      node1.getInputId();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.javascript.rhino.Node$IntPropListItem", true);
      Node node3 = new Node(40);
      node3.putProp(2, (Object) null);
      node0.isOnlyModifiesThisCall();
      node1.detachChildren();
      node3.isGetterDef();
      node2.isScript();
      node0.getString();
      Node node4 = new Node(26, node3, 16, 2);
      node4.getProp(809);
      node2.isAnd();
      node1.isDelProp();
      node1.toString(true, true, true);
      node2.isBlock();
      try { 
        node4.setString(":B:)U,bNs3F'cd?");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NOT 16 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      int int0 = 27591;
      Node node0 = null;
      Node node1 = Node.newString(5425, "46", 5425, 1548);
      Node.newString((-3415), "46", 5425, 36);
      // Undeclared exception!
      try { 
        node1.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = new Node(98);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("n>=yY$Q*0Mk!", "(L?s1eSOo%=f!k%#g:", 36, 0);
      node0.isComma();
      node0.isLabelName();
      node0.toStringTree();
      node0.getLastSibling();
      Node.newString("&VaX;PaMwo", 375, (-3065));
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isOnlyModifiesThisCall();
      node0.isOr();
      node0.isUnscopedQualifiedName();
      node0.isSetterDef();
      Node.extractLineno(1685);
      node0.isTrue();
      node0.isLocalResultCall();
      node0.isCase();
      node0.isReturn();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      node0.getJsDocBuilderForNode();
      node0.putBooleanProp(0, true);
      node0.isLabel();
      node0.isFalse();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.isEquivalentToShallow(node0);
      node0.toString(false, false, false);
      node0.getProp((-3158));
      node0.getInputId();
      node0.setLength(0);
      node0.isDec();
      node0.setInputId((InputId) null);
      Node node1 = Node.newString("2.3@Yo~");
      Node node2 = new Node(46, node0, node1, (-3415), 153);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node2.replaceChildAfter(node0, node3);
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = new Node(92);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "prev is not a child of this node.");
      Node node1 = Node.newNumber((double) 39);
      node0.addChildrenToBack(node1);
      node0.isEquivalentTo(node0, true, true, true);
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(105, node0, node0, node0, node0, 51, 37);
      Node node2 = node1.srcref(node0);
      node2.isSetterDef();
      node2.children();
      node2.isEquivalentToTyped(node1);
      node0.setLineno(110);
      node0.getLength();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Node node3 = Node.newString(36, "xOfd", 48, 103);
      node2.addChildToBack(node3);
      node3.isFor();
      node1.isGetterDef();
      node3.isVoid();
      Node node4 = null;
      try {
        node4 = new Node(38, node0, node0, node3, node2, 2, (-1327));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      node0.isObjectLit();
      Node node1 = new Node(42, node0, 4114, (-897));
      node1.isWhile();
      node1.isEquivalentToShallow(node0);
      node1.isHook();
      Node.newNumber(0.0, 2440, 16);
      node1.children();
      node0.setChangeTime(148);
      node1.isComma();
      node0.isLabelName();
      node0.toStringTree();
      Node node2 = node0.getLastSibling();
      Node.newString("PARAM_LIST 83 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000005]\n", (-784), 2824);
      node2.removeFirstChild();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = new Node(140, 140, 140);
      node0.isUnscopedQualifiedName();
      node0.isLabel();
      node0.getChangeTime();
      node0.isDebugger();
      node0.getDirectives();
      Node node1 = Node.newString((-3544), "(L?s1eSOo%=f!k%#g:", 324, 53);
      node0.addChildToFront(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node1);
      node0.isAssign();
      Node node2 = new Node((-3544), node0, 52, 943);
      Node.newString(39, ":meZ(;\"IV", 43, 54);
      InputId inputId0 = new InputId(":meZ(;\"IV");
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(49, nodeArray0, 3808, (-4463));
      Node node4 = new Node(4096, node2, node3);
      node2.isFalse();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString(":B:)U,bNs3F'cd?");
      node1.isEquivalentToShallow(node0);
      node1.getProp((-2558));
      node1.getInputId();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.javascript.rhino.Node$IntPropListItem", true);
      Node node3 = new Node(40);
      node1.detachChildren();
      node3.isGetterDef();
      node2.isScript();
      node0.getString();
      Node node4 = new Node(26, node3, 16, 2);
      node4.getProp(809);
      node1.isDelProp();
      // Undeclared exception!
      try { 
        node3.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = Node.newString("C", (-243), 0);
      node0.hasMoreThanOneChild();
      node0.addSuppression("C");
      node0.getString();
      node0.hasChildren();
      node0.isReturn();
      node0.isTry();
      Node node1 = Node.newString(127, "C");
      node1.isAssign();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(14);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node0.detachChildren();
      node1.isThrow();
      node0.isScript();
      node1.getString();
      node1.isNot();
      node1.getProp(39);
      node1.isWith();
      Node node2 = new Node(4095, node0, node1);
      node0.isAnd();
      Node.newString("C");
      Node node3 = Node.newNumber((-3109.135));
      node3.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = new Node(4406, 4406, 4406);
      Node node1 = new Node(4406, node0, node0, node0, node0);
      Node node2 = Node.newString((-2207), "Should not happen\n", 57, 31);
      String string0 = "\\hp]N1G{j?r\\u";
      InputId inputId0 = new InputId(string0);
      node2.setInputId(inputId0);
      node2.isName();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      LinkedList<FunctionType> linkedList0 = new LinkedList<FunctionType>();
      Iterator<FunctionType> iterator0 = linkedList0.descendingIterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node3.isOptionalArg();
      Node node4 = new Node(38, node1, node2, 1, 1788);
      node4.isTypeOf();
      node3.isFunction();
      node4.clonePropsFrom(node3);
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = new Node(98);
      Node node1 = Node.newString("(L?s1eSOo%=f!k%#g:");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("(L?s1eSOo%=f!k%#g:", "com.google.common.collect.Lists$TransformingRandomAccessList", 1697, 4);
      node1.isComma();
      node0.isLabelName();
      node0.toStringTree();
      node0.getLastSibling();
      Node node2 = Node.newString("n>=yY$Q*0Mk!", 55, 1);
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = Node.newString(111, "", 111, 111);
      InputId inputId0 = new InputId("");
      Node node1 = new Node(42, node0, node0, node0, (-798), (-1430));
      Node node2 = node0.clonePropsFrom(node1);
      node0.isWhile();
      Node.newNumber((double) 4095, 49, 4095);
      node2.getDirectives();
      Node.extractLineno(46);
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      String string0 = "unexpected prop id ";
      Node node0 = Node.newString(110, "unexpected prop id ", (-5946), 110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.setLineno(48);
      node1.addChildToBack(node0);
      node1.isFor();
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node3 = new Node((-1525), node1);
      node2.isGetElem();
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
      try { 
        node4.setDouble((-380.35));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1525
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node3.setLineno(55);
      node_SideEffectFlags3.clearSideEffectFlags();
      node2.getLength();
      Node node4 = new Node(0, node0, node1, node3, node2);
      Node node5 = node4.cloneNode();
      node5.getSideEffectFlags();
      Node node6 = null;
      try {
        node6 = new Node((-3058), node1, (-879), 41);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = new Node(103);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setIsSyntheticBlock(false);
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags2.valueOf();
      node3.detachChildren();
      Node node4 = new Node(37, node2, node1, node1, node3, 46, 43);
      node0.hasChild(node4);
      node1.isExprResult();
      node3.getString();
      node2.isNot();
      node4.getProp(0);
      node1.isDebugger();
      node1.isAnd();
      node4.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Object object0 = new Object();
      Node node0 = Node.newString("", 64, (-919));
      node0.setQuotedString();
      node0.getChildAtIndex((-210));
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = new Node(103);
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node1 = new Node(39, node0, 132, 30);
      node0.isWhile();
      node1.isEquivalentToShallow(node0);
      node1.isLabelName();
      node0.toStringTree();
      Node node2 = node0.getLastSibling();
      node2.addSuppression("");
      node0.isOptionalArg();
      ImmutableList<FunctionType> immutableList0 = ImmutableList.of();
      ImmutableList<FunctionType> immutableList1 = immutableList0.asList();
      LinkedList<FunctionType> linkedList1 = new LinkedList<FunctionType>(immutableList1);
      Iterator<FunctionType> iterator0 = linkedList1.descendingIterator();
      ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      node1.isFalse();
      Node.newString("DEC\n", 32, 31);
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2026));
      node0.isBreak();
      node0.isAdd();
      Node node1 = new Node(37, node0, node0, node0);
      node1.isEquivalentToTyped(node0);
      node1.isWhile();
      node0.isEquivalentToShallow(node1);
      node1.isLabelName();
      node0.toStringTree();
      Node node2 = node1.getLastSibling();
      node0.addSuppression("STRING 46\n");
      node2.isOptionalArg();
      LinkedList<FunctionType> linkedList0 = new LinkedList<FunctionType>();
      Iterator<FunctionType> iterator0 = linkedList0.descendingIterator();
      ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      node1.isFalse();
      Node node3 = new Node(48, node1);
      node3.getCharno();
      node3.isAnd();
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = Node.newNumber((double) 132, (-4996), (-70));
      node0.getStaticSourceFile();
      node0.getLength();
      node0.wasEmptyNode();
      Node node1 = new Node(132, node0, 46, 504);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.toString();
      node1.isQualifiedName();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node node0 = new Node(140, 140, 140);
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.getChangeTime();
      node0.addSuppression("hTe");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      Charset charset0 = Charset.defaultCharset();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(filterOutputStream0, charset0);
      // Undeclared exception!
      try { 
        node0.appendStringTree(outputStreamWriter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 140
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = Node.newString(".-X}c4^4PUrZ>", 8, 1818);
      node0.isStringKey();
      node0.isStringKey();
      Node node1 = Node.newString(92, ".-X}c4^4PUrZ>", 56, 935);
      node1.isBreak();
      node0.isFunction();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isOnlyModifiesThisCall();
      node0.isTrue();
      node2.isNE();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(56, nodeArray0);
      Node node4 = new Node(1204518, node0, node3);
      node3.isOnlyModifiesThisCall();
      Object object0 = new Object();
      node4.isTypeOf();
      node0.getParent();
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        node3.getChildAtIndex(3457);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = Node.newString("CharMatcher.WHITESPACE", 105, 0);
      node0.isBreak();
      node0.isAdd();
      Node node1 = Node.newString(125, "CharMatcher.WHITESPACE", 51, 2903);
      node1.addChildToBack(node0);
      node1.isFor();
      node0.isGetterDef();
      node0.isIn();
      Node node2 = new Node(302, node1, 56, 2903);
      node2.isVoid();
      node1.isOnlyModifiesArgumentsCall();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      Node.extractLineno(153);
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = new Node(98);
      Node node1 = Node.newString("(L?s1eSOo%=f!k%#g:");
      Node node2 = node0.srcref(node1);
      node2.isSetterDef();
      Node.extractLineno((-1084));
      node1.isTrue();
      node2.isLocalResultCall();
      node2.isReturn();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(105, node0, node0, node0, node0, 38, 37);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(dataOutputStream0);
      Charset charset0 = Charset.defaultCharset();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(filterOutputStream0, charset0);
      node0.appendStringTree(outputStreamWriter0);
      node0.setOptionalArg(false);
      node1.isFromExterns();
      node0.toStringTree();
      node1.isSyntheticBlock();
      node1.isFalse();
      node1.hasMoreThanOneChild();
      node1.isAssignAdd();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node.newString("");
      Node node0 = Node.newString("", 38, (-1248));
      Node node1 = Node.newString(1073741823, "(L?s1eSOo%=f!k%#g:", (-4234), 41);
      Node node2 = new Node(8, 110, (-3951));
      node1.isBreak();
      node1.isFunction();
      node0.toString(false, true, false);
      node2.isCall();
      node0.putBooleanProp(40, false);
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isSwitch();
      Node node1 = Node.newString("first new child has existing sibling");
      node1.getSourceOffset();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(54, nodeArray0);
      node2.setOptionalArg(false);
      node0.isTrue();
      Object object0 = new Object();
      node0.isInc();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = new Node(140, 140, 140);
      node0.isUnscopedQualifiedName();
      node0.isLabel();
      node0.getChangeTime();
      node0.addSuppression(";=");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ObjectType objectType0 = null;
      Node node1 = Node.newString(".", 31, 4);
      node1.setQuotedString();
      Node node2 = new Node(30, node1, node0, node1);
      Node node3 = null;
      // Undeclared exception!
      try { 
        node2.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(105, node0, node0, node0, node0, 51, 37);
      Node node2 = node1.srcref(node0);
      node2.isSetterDef();
      node2.children();
      Node node3 = Node.newString(40, "46", (-4786), 52);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node4 = node3.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node3);
      Node node5 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node4.isEquivalentTo(node2);
      Node node6 = new Node(46, node4, 154, (-635));
      node2.isEquivalentToShallow(node0);
      node4.getInputId();
      node5.setLength(31);
      node1.isDec();
      node1.setInputId((InputId) null);
      Node node7 = Node.newString("J^F*");
      node7.copyInformationFromForTree(node4);
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node1 = new Node(64, node0);
      Node node2 = Node.newString((-4236), "46", 52, 8);
      Node node3 = new Node((-502), node1, node2, 38, 54);
      node3.hasChild(node1);
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      Node node1 = Node.newString(49, "A!.3m}", 52, 8);
      Node node2 = new Node(29, node0, 1, 42);
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node node0 = Node.newString(0, "46");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
      jSDocInfo0.documentBlock("46");
      Node node2 = new Node(31, node0, 37, 37);
      node0.getProp(36);
      node1.getInputId();
      jSDocInfo0.setExpose(true);
      node1.setLength(53);
      node0.isDec();
      node1.setInputId((InputId) null);
      Node.newString("(L?s1eSOo%=f!k%#g:");
      Node node3 = node2.removeFirstChild();
      node3.isParamList();
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node0 = Node.newString(103, "n_P9NBp`k");
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString("u1&u48_wFAM,w|bS*");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isEquivalentTo(node0);
      Node node3 = new Node((-97), node2, 47, 53);
      node3.isEquivalentToShallow(node0);
      node0.getInputId();
      node0.setLength(30);
      node1.isDec();
      node0.setInputId((InputId) null);
      Node.newString("(L?s1eSOo%=f!k%#g:");
      node3.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node.newNumber((double) 18);
      Node node0 = Node.newString(":B:)U,bNs3F'cd?");
      // Undeclared exception!
      try { 
        node0.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = node0.srcref(node0);
      Node node2 = node1.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node2.setLineno(55);
      node_SideEffectFlags3.clearSideEffectFlags();
      node1.getLength();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node2.detachChildren();
      node0.isGetterDef();
      node2.isScript();
      node0.getString();
      node0.isNot();
      node0.getProp((-349));
      node1.isNull();
      node1.isAnd();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      node0.isSetterDef();
      node0.isObjectLit();
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(42, node0, 4114, (-897));
      node1.isWhile();
      node1.isEquivalentToShallow(node0);
      node1.isHook();
      Node node2 = Node.newNumber(0.0, 2440, 16);
      node1.children();
      node0.setChangeTime(148);
      node2.isNE();
      Node node3 = new Node(16, (-872), 32);
      Node node4 = Node.newString(54, "$[Q&h_%q", 15, 49);
      node4.isAnd();
      node2.isGetProp();
      Node.extractLineno(47);
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = new Node(4406, 4406, 4406);
      Node node1 = new Node(4406, node0, node0, node0, node0);
      node1.getSourceOffset();
      node1.getQualifiedName();
      node1.getDirectives();
      Node node2 = new Node(42, node1, node1);
      node0.setVarArgs(true);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.WHITESPACE");
      Node node1 = null;
      try {
        node1 = new Node((-1128), node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      node0.isSetterDef();
      node0.isObjectLit();
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(42, node0, 4114, (-919));
      node1.isWhile();
      node1.isEquivalentToShallow(node0);
      node1.isLabelName();
      node1.cloneNode();
      try { 
        node1.setString("(L?s1eSOo%=f!k%#g:");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THIS is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = new Node(103);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.toString(false, false, true);
      Node node1 = Node.newNumber(0.0, 1, 29);
      node0.isWhile();
      Node node2 = Node.newNumber(0.7, (-957), 125);
      node2.getDirectives();
      Node.extractLineno(30);
      node1.isTrue();
      node2.setSourceEncodedPositionForTree(4981);
      node0.isFunction();
      node1.getLineno();
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = Node.newString("46", 408, 1667);
      Node node1 = null;
      node0.getString();
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = Node.newString(83, "(L?s1eSOo%=f!k%#g:", 44, 1151);
      Node node1 = new Node(105, node0, node0, node0, 32, 105);
      node0.checkTreeEquals(node1);
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = Node.newString(">*`ZtUA+!ln");
      node0.isInstanceOf();
      node0.isLocalResultCall();
      node0.isFor();
      Node node1 = Node.newString(32, ">*`ZtUA+!ln");
      node0.isWhile();
      node0.toString();
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.cloneNode();
      node1.setString("(L?s1eSOo%=f!k%#g:");
      node0.isGetProp();
      node2.isInstanceOf();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(15, 1, 29);
      Node node2 = new Node(1, node1, node1);
      node0.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getString();
      node1.srcrefTree(node0);
      simpleErrorReporter0.warning("0\u0660\u06F0\u07C0\u0966\u09E6\u0A66\u0AE6\u0B66\u0BE6\u0C66\u0CE6\u0D66\u0E50\u0ED0\u0F20\u1040\u1090\u17E0\u1810\u1946\u19D0\u1B50\u1BB0\u1C40\u1C50\uA620\uA8D0\uA900\uAA50\uFF10", "n>=yY$Q*0Mk!", 56, 2850);
      node0.isComma();
      node1.setSourceEncodedPositionForTree(31);
      Node node3 = new Node(4095, node0, node2);
      node3.isFunction();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionTypeWithNewThisType((FunctionType) null, (ObjectType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      Node node1 = Node.newString(49, "A!.3m}", 52, 8);
      Node node2 = new Node(2605, node1, node1, 40, 120);
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setJaggerProvide(true);
      Node node0 = Node.newString("(L?s1eSOo%=f!k%#g:");
      jSDocInfo0.getParameterNames();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.putIntProp(55, 2199);
      node1.isDec();
      node1.isAssignAdd();
      node0.isCast();
      Node node2 = new Node((-723), node0, node0, node1, node0);
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString(":B:)U,bNs3F'cd?");
      node1.isEquivalentToShallow(node0);
      node0.toString(true, true, false);
      node1.getProp((-2558));
      node1.getInputId();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.javascript.rhino.Node$IntPropListItem", true);
      Node node3 = new Node(40);
      node3.putProp(2, (Object) null);
      node1.detachChildren();
      node3.isGetterDef();
      node2.isScript();
      node0.getString();
      node0.getLength();
      node3.useSourceInfoFrom(node0);
      Node node4 = new Node(26, node3, 16, 2);
      node4.getProp(809);
      node3.isWith();
      node2.isAnd();
      node1.isDelProp();
      node2.isBlock();
      node3.removeChildren();
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString(":B:)U,bNs3F'cd?");
      node1.isEquivalentToShallow(node0);
      node0.toString(true, true, false);
      node1.getProp((-2558));
      node1.getInputId();
      node0.isSetterDef();
      Node.extractLineno(4406);
      node2.isTrue();
      node2.isLocalResultCall();
      node0.isCase();
      node0.isReturn();
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = new Node(140, 140, 140);
      node0.isUnscopedQualifiedName();
      node0.isLabel();
      node0.getChangeTime();
      node0.addSuppression(";=");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeRegistry0.createObjectType(";=", node0, (ObjectType) null);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry1.getObjectElementKey();
      ImmutableList.of(templateType0);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) templateType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isSwitch();
      node0.isLabel();
      node0.isFalse();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isSetterDef();
      node0.children();
      Node node1 = Node.newNumber((-1155.6957975086816));
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = Node.newNumber((double) 40, 83, (-263));
      Node node4 = Node.newString(55, "$VALUES");
      node0.isIn();
      node0.addChildToBack(node2);
      Node node5 = new Node(5125);
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeTypeAwareEqualsImpl(node3);
      Node node6 = new Node(2147483645, node3, node1, node4, node1);
      node_NodeMismatch0.equals(node6);
      // Undeclared exception!
      try { 
        node0.addChildToFront(node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4406, 4406, 45);
      node0.setSourceEncodedPositionForTree(89);
      node0.isFunction();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setJaggerProvide(true);
      Node node0 = Node.newString("(L?s1eSOo%=f!k%#g:");
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("f[\"jC:TvaTR7XS5<", true);
      jSDocInfo0.getParameterNames();
      jSDocInfo0.setExpose(true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Iterator<JSType> iterator0 = (Iterator<JSType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      Node node1 = node0.cloneTree();
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node2.isFalse();
      node0.getLength();
      node0.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2026));
      node0.isBreak();
      node0.isAdd();
      Node node1 = Node.newString("46");
      node0.isIn();
      node1.checkTreeEquals(node0);
      node1.getInputId();
      node0.isQuotedString();
      Node node2 = Node.newString(2, "46");
      node1.getJSDocInfo();
      Node node3 = Node.newString("46", 4095, 57);
      Node node4 = new Node((-963), node0, node1, node2, node3);
      node2.getIndexOfChild(node4);
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      String string0 = "";
      Node node0 = Node.newString("");
      Node node1 = new Node(49, node0, node0);
      node1.getInputId();
      node0.removeFirstChild();
      node0.removeChildren();
      // Undeclared exception!
      try { 
        node0.addChildBefore((Node) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      Node node0 = Node.newString("", (-1825), (-1825));
      Node.newNumber((-2964.031378498), 3114, (-859));
      node0.setSourceEncodedPositionForTree((-1281));
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(33);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      node0.isSetterDef();
      node0.isObjectLit();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(4095, (-2754), 46);
      node0.isEquivalentTo(node2);
      Node node3 = Node.newString(";=");
      node3.isEquivalentToShallow(node0);
      node3.toString(true, true, true);
      node2.getProp(656);
      node1.getInputId();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("f[\"jC:TvaTR7XS5<", false);
      node1.putProp(55, node0);
      node1.setType(30);
      node3.setChangeTime(56);
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node node0 = new Node(1315, 1315, 1);
      node0.isSetterDef();
      Node node1 = new Node(1, node0, 33, 1);
      node1.isObjectLit();
      node0.isEquivalentTo(node1, false, false, true);
      Node node2 = new Node(8199, node1, 39, 4095);
      Node node3 = null;
      try {
        node3 = new Node(31, node0, node0, node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node node0 = Node.newString(1557, "iky%Y*KUB", 1557, 1557);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getType();
      jSDocInfo0.addImplementedInterface((JSTypeExpression) null);
      jSDocInfo0.setExport(true);
      node0.setJSDocInfo(jSDocInfo0);
      node0.putIntProp(44, 941);
      node0.isDec();
      node0.isAssignAdd();
      node0.isCast();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = Node.newString(111, "", 111, 111);
      InputId inputId0 = new InputId("");
      Node node1 = new Node(42, node0, node0, node0, (-798), (-1430));
      Node.newString(39, "");
      node0.addChildrenToBack(node1);
      node1.getBooleanProp(1148);
      node0.setString("");
      node0.getChangeTime();
      node1.children();
      // Undeclared exception!
      try { 
        node1.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = Node.newString("C", (-243), 0);
      node0.hasMoreThanOneChild();
      node0.addSuppression("C");
      node0.isNoSideEffectsCall();
      node0.getString();
      node0.hasChildren();
      node0.isReturn();
      node0.isTry();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = new Node(36, node0);
      node1.isGetElem();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      try { 
        node3.setDouble((-1.0));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING C [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node node0 = new Node(2997);
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node1 = Node.newString(45, ".U;3-(JC|E}OS");
      Node node2 = node0.srcref(node1);
      Node node3 = node1.srcrefTree(node2);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isAnd();
      node0.isAssign();
      Node node4 = new Node((-526), node0, node3, node3, node1);
      Node node5 = new Node(57, node4, 1125, 27591);
      Node node6 = Node.newNumber((double) 38, 116, 38);
      node3.isFromExterns();
      node0.children();
      node6.useSourceInfoFrom(node0);
      node5.setChangeTime(8233);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node3.isHook();
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2026));
      node0.isBreak();
      node0.isAdd();
      Node node1 = Node.newString(42, "46", (-2439), (-2026));
      node0.isIn();
      node1.checkTreeEquals(node0);
      node1.getInputId();
      node0.isQuotedString();
      Node node2 = Node.newString(2, "46");
      node1.getJSDocInfo();
      Node node3 = Node.newString("46", 102, 57);
      node3.getSourceFileName();
      Node node4 = new Node((-963), node0, node1, node2, node3);
      node2.getIndexOfChild(node4);
      node3.isNew();
      node0.isDefaultCase();
      node4.checkTreeTypeAwareEqualsImpl(node3);
      node4.isNew();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = new Node(138);
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node1 = Node.newString(46, "W<`");
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isAnd();
      node1.isAssign();
      Node node4 = new Node(47, node1, node1, node0, 12, 50);
      Node node5 = new Node(2, node4, 4096, 54);
      Node node6 = node4.useSourceInfoFrom(node3);
      Node.newNumber((-2578.2568504450483), 100, (-232));
      node6.setSourceFileForTesting("7LjS");
      node2.isGetElem();
      Node node7 = new Node(38, node5, 47, 46);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createTemplatizedType((ObjectType) null, immutableList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.TemplatizedType", e);
      }
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      String string0 = "C";
      Node node0 = Node.newString("C", (-232), 0);
      node0.isVar();
      node0.addSuppression("C");
      node0.isNoSideEffectsCall();
      node0.getString();
      node0.hasChildren();
      node0.isReturn();
      node0.isTry();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isGetElem();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.getJSDocInfo();
      try { 
        node3.setDouble((-1.0));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING C [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, (-1392), 0);
      node1.setSourceEncodedPositionForTree(1);
      node1.putIntProp(0, 1341);
      node1.setLineno((-1100));
      node0.addChildToBack(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Comparator<JSType> comparator0 = (Comparator<JSType>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeSet<JSType> treeSet0 = new TreeSet<JSType>(comparator0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) treeSet0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      node0.isSetterDef();
      node0.isObjectLit();
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(42, node0, 4114, (-919));
      node1.isWhile();
      node1.isEquivalentToShallow(node0);
      node1.isLabelName();
      node0.toStringTree();
      node0.getLastSibling();
      node1.isOptionalArg();
      Node node2 = node0.cloneTree();
      node2.isFalse();
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = new Node(103);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      node0.getProp(108);
      InputId inputId0 = new InputId("");
      node0.putIntProp(1911, 1911);
      Node node1 = new Node(86, node0, node0, 1274, 1);
      Node node2 = null;
      try {
        node2 = new Node(46, node1, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newNumber((double) 0);
      Node node1 = Node.newString(":B:)U,bNs3F'cd?");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node1.toString();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node0.siblings();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.areAllFlagsSet();
      node1.addChildToBack(node0);
      node1.isGetterDef();
      node0.isArrayLit();
      node0.addChildrenToFront(node1);
      node0.isThis();
      // Undeclared exception!
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2026));
      node0.isBreak();
      node0.isAdd();
      Node node1 = Node.newString(42, "46", (-2439), (-2026));
      node1.isEquivalentToTyped(node0);
      node0.isEquivalentToTyped(node1);
      ImmutableList.of();
      node0.getInputId();
      node0.setSourceFileForTesting("=!3Q{RTB[w=0?4#");
      node1.isQualifiedName();
      Node.newString("46", 55, (-2180));
      Node.newString("=!3Q{RTB[w=0?4#");
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      int int0 = (-915);
      String string0 = "PoVl";
      Node node0 = Node.newString(2997, "PoVl");
      Node node1 = new Node(2997, node0, node0, 47, 49);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node node0 = Node.newString(110, "unexpected prop id ", (-5946), 110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = node0.srcref(node1);
      Node node3 = node0.srcrefTree(node1);
      node2.isDebugger();
      node3.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node3.getSourceFileName();
      node1.isEquivalentToShallow(node2);
      node2.isAssign();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node3.detachChildren();
      node3.isThrow();
      node1.isScript();
      Node node4 = Node.newNumber((double) 36);
      node4.isNot();
      node1.getProp((-2436));
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node3, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = new Node(103);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      Node node4 = new Node((-1000), node2, node0, node2, node0);
      Node node5 = new Node(2, node4, 4096, 54);
      Node node6 = Node.newNumber((-1850.0), 57, (-926));
      node0.children();
      node2.useSourceInfoFrom(node1);
      node0.useSourceInfoIfMissingFromForTree(node3);
      node4.setChangeTime(4095);
      node4.isNull();
      Node node7 = new Node(4466, (-2180), (-1627));
      node7.isAnd();
      node6.isGetProp();
      Node.newString(54, "W<2F(`", 46, 2422);
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(5`rYEwryFz6TZ", 294, 294);
      node0.isAssign();
      node0.getAncestor(120);
      Node node1 = new Node(29, node0, 620, 0);
      node0.isWhile();
      node0.isEquivalentToShallow(node1);
      node1.isLabelName();
      node1.toString(false, true, false);
      InputId inputId0 = new InputId("synthetic");
      inputId0.toString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("(L?s1eSOo%=f!k%#g:");
      node_FileLevelJsDocBuilder0.append("setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      node_FileLevelJsDocBuilder0.append("(L?s1eSOo%=f!k%#g:");
      Node.newString("InputId: synthetic");
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(5`rYEwryFz6TZ", 294, 294);
      node0.isAssign();
      node0.isStringKey();
      Node node1 = Node.newString(54, "gs(5`rYEwryFz6TZ", (-2671), 16);
      node0.isBreak();
      node1.isFunction();
      // Undeclared exception!
      try { 
        node1.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 54
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = Node.newString(294, "jsdoc_info", 154, 114);
      Node node1 = Node.newString("Wwik0Fxz**", 53, 53);
      Node node2 = new Node(2, node0, node1);
      Node node3 = node0.detachFromParent();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Wwik0Fxz**", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node.newNumber((double) 51);
      // Undeclared exception!
      try { 
        node3.removeChild(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString("");
      Node node1 = new Node(49, node0, node0);
      node1.getInputId();
      node0.toString(false, false, true);
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString(": ");
      Node node2 = new Node(57, node0, node1);
      node2.getInputId();
      node0.toString(false, true, true);
      Node node3 = Node.newNumber(0.0, 717, 16);
      node3.isWhile();
      node3.getDirectives();
      Node.extractLineno(868);
      node1.isTrue();
      Node node4 = new Node(52, node2);
      node2.isCase();
      node4.isReturn();
      node0.isArrayLit();
      node4.hasChildren();
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node node0 = Node.newString("");
      Iterable<Node> iterable0 = new ArrayDeque<Node>(36);
      node0.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4096);
      node0.getProp(147);
      InputId inputId0 = new InputId("");
      node0.putIntProp(15, 36);
      Node node1 = new Node((-3063), node0, node0, node0);
      node1.setLineno(2383);
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node node0 = Node.newString("C", (-232), 0);
      node0.isVar();
      node0.addSuppression("C");
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString("46");
      node0.getProp(15);
      Node node2 = new Node(989, node0, node0, node1, 56, 4095);
      node2.getInputId();
      node2.setType((-1));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      Node node3 = new Node(49);
      Node node4 = null;
      try {
        node4 = new Node((-1356), (Node) null, node3, 2382, 115);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = new Node(103);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      Node node1 = Node.newString(16, "W<2F(`", 54, 63);
      node0.isAssignAdd();
      Node node2 = new Node(54, node0, 1, 2);
      node0.getDirectives();
      node0.getLength();
      node1.children();
      node1.getQualifiedName();
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node node0 = new Node(103);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isAssign();
      Node node1 = Node.newString(",<]64AMC&tM_M3NyW%8");
      node1.isFunction();
      node0.mayMutateArguments();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(2357, 2357, (-3158));
      node0.removeFirstChild();
      Node node1 = new Node((-1708), node0, node0);
      Node node2 = new Node((-2150), node1);
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node node0 = Node.newString((-1936), "input_id", (-1296), 44);
      Node node1 = new Node(4095, node0, node0, 122, 31);
      node1.isParamList();
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString(110, "unexpected prop id ", (-5946), 110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = node0.srcref(node1);
      Node node3 = node0.srcrefTree(node1);
      node0.setSourceEncodedPosition((-622));
      node2.isDebugger();
      node3.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isEquivalentToShallow(node2);
      node2.isAssign();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node3.detachChildren();
      node3.isThrow();
      node1.isScript();
      node2.getString();
      Node node4 = Node.newNumber((double) 36);
      node4.isNot();
      node1.getProp((-2436));
      node3.isWith();
      Node node5 = new Node(36, node4, node3);
      node1.isAnd();
      node0.isOnlyModifiesArgumentsCall();
      node3.isGetProp();
      // Undeclared exception!
      try { 
        node4.removeChildAfter(node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isSetterDef();
      node0.isObjectLit();
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(42, node0, 4114, (-919));
      Node node2 = new Node(1204518, node1, 12, 4095);
      Node node3 = Node.newNumber((double) 43, 12, 35);
      try { 
        node3.setString(" *QMs^N_R`9");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 43.0 12 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = new Node(103);
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node1 = new Node(36, 50, 4095);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      Node node4 = new Node((-1000), node2, node0, node2, node0);
      Node node5 = new Node(2, node4, 4096, 54);
      Node node6 = Node.newNumber((-1850.0), 57, (-926));
      node6.toString(false, false, false);
      node0.children();
      node2.useSourceInfoFrom(node1);
      node4.setChangeTime(4095);
      node_SideEffectFlags0.clearAllFlags();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.setLineno(294);
      node_SideEffectFlags2.clearSideEffectFlags();
      node0.getLength();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags6.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.detachChildren();
      node0.isThrow();
      node0.isScript();
      node0.getString();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isArrayLit();
      node2.getSourcePosition();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1519
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.addSuppression("{");
      node0.isOnlyModifiesThisCall();
      node0.isGetElem();
      node0.isGetterDef();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Node node1 = new Node(38, (-3430), 1);
      node0.isIn();
      Node node2 = new Node(108, node0, node1);
      Node node3 = node2.getLastSibling();
      Node node4 = node2.useSourceInfoIfMissingFromForTree(node0);
      node3.isArrayLit();
      node4.getType();
      node2.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = new Node(103);
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isTrue();
      Object object0 = new Object();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      Node node0 = new Node((-2026));
      node0.isBreak();
      node0.isAdd();
      Node node1 = Node.newString(42, "46", (-2439), (-2026));
      node0.isEquivalentToTyped(node1);
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2026
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2026));
      node0.isBreak();
      node0.isAdd();
      Node node1 = Node.newString(42, "46", (-2439), (-2026));
      node1.isEquivalentToTyped(node0);
      node0.isEquivalentToTyped(node1);
      ImmutableList.of();
      node0.getInputId();
      node0.isNumber();
      Node node2 = Node.newString((-862048943), ">>S|(}X");
      node2.isOnlyModifiesArgumentsCall();
      node2.isDec();
      node0.setString("6K[!3YI+6#5\"y <VP+_");
      Object object0 = new Object();
      node2.useSourceInfoFrom(node0);
      Node node3 = Node.newString("*+");
      node3.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      Node node0 = Node.newString("46", 0, 0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setJaggerProvide(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
      Node.newString("(L?s1eSOo%=f!k%#g:");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      node0.toString(true, true, true);
      node0.getProp(32);
      node1.getInputId();
      jSDocInfo0.setExpose(true);
      Node node2 = new Node(48);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node2;
      nodeArray0[1] = node0;
      Node node3 = new Node(52, nodeArray0);
      node3.setLength(1048576);
      node1.setType(2864);
      node0.isDec();
      InputId inputId0 = new InputId("UM0?>!$");
      node3.setChangeTime(46);
      Node node4 = Node.newString("SJc.K%~_%%M3+ ~5`}i");
      node4.setInputId((InputId) null);
      node3.useSourceInfoIfMissingFromForTree(node4);
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = Node.newString("CharMatcher.WHITESPACE", 105, 0);
      node0.isAdd();
      node0.getSourceOffset();
      node0.getDirectives();
      Node[] nodeArray0 = new Node[2];
      Node node1 = new Node(147, node0, node0, 4, 2903);
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = null;
      try {
        node2 = new Node(38, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      Node node0 = Node.newString(111, "", 111, 111);
      InputId inputId0 = new InputId("");
      node0.setInputId(inputId0);
      node0.isName();
      node0.setCharno(1341);
      node0.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isOptionalArg();
      Node node1 = new Node(63, node0, node0, 4, 55);
      node1.isTypeOf();
      node1.getParent();
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      int int0 = (-799);
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString((-799), "", 36, (-1));
      Node node1 = new Node(12, node0, (-448), 874);
      node1.isEquivalentToTyped(node0);
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -799
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.valueOf();
      ImmutableList.of();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Iterator<JSType> iterator0 = (Iterator<JSType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node4.isOnlyModifiesThisCall();
      node2.isTrue();
      Node node5 = new Node(47);
      node5.isNE();
      Node node6 = new Node(31, node2, node4);
      node2.isOnlyModifiesThisCall();
      Object object0 = new Object();
      node5.isTypeOf();
      node0.getParent();
      Object object1 = new Object();
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString(110, "unexpected prop id ", (-5946), 110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.setLineno(48);
      node1.addChildToBack(node0);
      node1.isFor();
      node0.isGetterDef();
      node1.isIn();
      node0.getType();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseNoObjectType();
      JSType[] jSTypeArray1 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray1);
      Node node3 = node2.getLastSibling();
      Node node4 = new Node(1296, node1, node3, node3, 32, 39);
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      Node node0 = new Node(36, 36, 36);
      node0.isSetterDef();
      node0.isObjectLit();
      node0.getBooleanProp((-1782));
      Node.extractCharno(266);
      ImmutableList.of();
      Node node1 = new Node((-480), 43, 152);
      node1.isTrue();
      Object object0 = new Object();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.addSuppression("{");
      node0.isOnlyModifiesThisCall();
      node0.isGetElem();
      node0.isGetterDef();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeSet<JSType> treeSet0 = new TreeSet<JSType>(comparator0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) treeSet0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.copyInformationFrom(node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      String string0 = "null";
      Node node0 = Node.newString(36, "null", 36, 36);
      Node node1 = new Node(36, node0, node0, node0, node0, 2157, 16);
      int int0 = 2;
      node0.setChangeTime(37);
      Node node2 = new Node(1466, node1, 2, 968);
      node2.addSuppression("null");
      node2.copyInformationFrom(node0);
      int int1 = (-1261);
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      Node node0 = Node.newNumber((-2571.3947532779493), (-3834), (-3834));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, (-1392), 0);
      node1.setSourceEncodedPositionForTree(1);
      node1.putIntProp(0, 1339);
      node1.setLineno((-1100));
      node0.addChildToBack(node1);
      node0.isGetterDef();
      node1.isIn();
      Node node2 = new Node(294, 8, 421938);
      node1.isIn();
      Node node3 = node2.getLastSibling();
      node1.useSourceInfoIfMissingFromForTree(node3);
      node2.isContinue();
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node node0 = Node.newString(111, "", 111, 111);
      InputId inputId0 = new InputId("");
      node0.setInputId(inputId0);
      node0.isName();
      node0.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = new Node(32);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType((String) null, node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      Node node0 = Node.newString(111, "", 111, 111);
      InputId inputId0 = new InputId("");
      Node node1 = new Node(42, node0, node0, node0, (-798), (-1430));
      Node node2 = node0.clonePropsFrom(node1);
      node0.addChildrenToBack(node1);
      node1.getBooleanProp(1148);
      Node.extractCharno((-1385));
      ImmutableList.of();
      Node node3 = Node.newNumber((-1913.0), 37, 52);
      node0.children();
      Node node4 = node1.useSourceInfoFrom(node3);
      node4.setChangeTime((-2021402971));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node node0 = new Node(103);
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node1.getDirectives();
      node2.addChildToFront(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      int int0 = 2;
      Node node4 = null;
      try {
        node4 = new Node((-1000), node2, node0, node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      Node node0 = Node.newString("946");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING 946 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, (-1392), 0);
      node1.setSourceEncodedPositionForTree(1);
      node1.putIntProp(0, 1341);
      node1.setLineno((-1100));
      node0.addChildToBack(node1);
      node0.isGetterDef();
      node1.isIn();
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.isOnlyModifiesThisCall();
      node2.isTrue();
      node1.isNE();
      Node node3 = null;
      try {
        node3 = new Node(15, node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isSwitch();
      Node node1 = Node.newString("first new child has existing sibling");
      node0.isNoSideEffectsCall();
      node1.getSourceOffset();
      node0.getDirectives();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(54, nodeArray0);
      node2.setOptionalArg(true);
      node1.isFromExterns();
      node0.toStringTree();
      node0.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      node2.srcrefTree(node0);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isContinue();
      Node node3 = new Node((-1002), node2, node0, node2, node0);
      node2.getProp(52);
      Node node4 = new Node((-18), node3, 4096, 54);
      node0.children();
      node2.isThrow();
      node2.getChildCount();
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      Node node0 = Node.newString(110, "unexpected prop id ", (-5946), 110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = node0.srcref(node1);
      Node node3 = node0.srcrefTree(node1);
      node2.isDebugger();
      node3.getDirectives();
      node1.isEquivalentToShallow(node2);
      Node node4 = new Node(4, node3, 3018, 110);
      node0.getDirectives();
      Node node5 = null;
      try {
        node5 = new Node(29, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      Node node0 = new Node(103);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      Node node4 = new Node((-1000), node2, node0, node2, node0);
      Node node5 = new Node(2, node4, 2, 54);
      node0.isOptionalArg();
      Node node6 = null;
      try {
        node6 = new Node(1664, node1, node1, (-5006), 152);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      Node node0 = new Node(103);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node2 = node0.srcrefTree(node1);
      node1.isDebugger();
      node2.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isEquivalentToShallow(node0);
      Node node3 = Node.newNumber((double) 52, 48, 346);
      node3.isAssign();
      Node node4 = new Node(52, node3, node0, node2, node3);
      Node node5 = null;
      try {
        node5 = new Node(30, node2, 2, 31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node1.isName();
      Node node4 = new Node(110, node1, 57, 15);
      node4.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(103);
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      Node node0 = new Node(103);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      Node.newString(16, "W<2F(`", 54, 63);
      node0.isNew();
      Node node1 = new Node(54, node0, 1, 2);
      node1.setIsSyntheticBlock(true);
      Node node2 = Node.newString("W<2F(`", 3139, 42);
      node2.isCast();
      node1.isAdd();
      Node node3 = Node.newString("W<2F(`", 2, 12);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags7.setThrows();
      node0.setLineno(294);
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.getLength();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags7.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      JSType[] jSTypeArray0 = new JSType[0];
      node0.isThrow();
      node0.isScript();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags8.clearAllFlags();
      ImmutableList.of();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      int int0 = 294;
      Node node0 = Node.newString(103, "gs(u5`rYEwryFz6TZ", 103, 132);
      node0.isAssign();
      // Undeclared exception!
      try { 
        node0.getAncestor((-290));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(105, node0, node0, node0, node0, 51, 37);
      Node node2 = node1.srcref(node0);
      node2.isSetterDef();
      node2.children();
      node2.useSourceInfoFrom(node1);
      Node node3 = Node.newNumber(1241.270543002789, 42, 2);
      String string0 = "$VALUES";
      Node node4 = Node.newString(50, "$VALUES");
      node4.isIn();
      node0.children();
      node3.removeChildren();
      // Undeclared exception!
      try { 
        node2.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test680()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString("");
      Node node1 = new Node(49, node0, node0);
      node1.getInputId();
      node0.toString(false, false, true);
      node0.isWhile();
      node1.getDirectives();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test681()  throws Throwable  {
      Node node0 = new Node(103);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      Node node4 = new Node((-1000), node2, node0, node2, node0);
      Node node5 = new Node(2, node4, 4096, 54);
      Node node6 = Node.newNumber((-1850.0), 57, (-926));
      node0.children();
      node2.useSourceInfoFrom(node1);
      node4.setChangeTime(4095);
      node4.isNull();
      Node node7 = new Node(4466, (-2180), (-1627));
      node7.isAnd();
      node6.isGetProp();
  }

  @Test(timeout = 4000)
  public void test682()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2026));
      node0.isBreak();
      node0.isAdd();
      Node node1 = Node.newString(42, "46", (-2439), (-2026));
      node0.isEquivalentToTyped(node1);
      node1.checkTreeEquals(node0);
      node1.getInputId();
      node1.isNumber();
      Node node2 = Node.newString(2, "46");
      node0.isOnlyModifiesArgumentsCall();
      node0.addChildrenToBack(node2);
      node2.isDec();
      node0.setString("46");
      Object object0 = new Object();
      Node node3 = new Node(1, 42, 63);
      node0.isScript();
      node0.getString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test683()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags7.setThrows();
      node0.setLineno(294);
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.getLength();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags7.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isCast();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("QMARK");
  }

  @Test(timeout = 4000)
  public void test684()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node3.useSourceInfoFrom(node1);
      Node.newNumber((double) 46, 38, 57);
      Node node4 = Node.newString(86, "W<2F(`");
      node0.isIn();
      node3.addChildToBack(node1);
      Node node5 = new Node(2);
      Node.NodeMismatch node_NodeMismatch0 = node3.checkTreeTypeAwareEqualsImpl(node4);
      JSTypeNative jSTypeNative0 = JSTypeNative.GREATEST_FUNCTION_TYPE;
      node_NodeMismatch0.equals(jSTypeNative0);
  }

  @Test(timeout = 4000)
  public void test685()  throws Throwable  {
      Node node0 = new Node(105, 53, 105);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString("wX[zEq!q");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      int int0 = Node.POST_FLAG;
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node_AncestorIterable0.iterator();
      Node node3 = new Node(8, 57, (-1412));
      node3.detachChildren();
      node1.isThrow();
      node1.isScript();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> 53 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test686()  throws Throwable  {
      Node node0 = Node.newString(111, "", 111, 111);
      InputId inputId0 = new InputId("");
      Node node1 = new Node(42, node0, node0, node0, (-798), (-1430));
      node0.clonePropsFrom(node1);
      node0.addChildrenToBack(node1);
      node1.getBooleanProp(1148);
      Node.extractCharno((-1385));
      ImmutableList.of();
      Node node2 = new Node(46, (-1218), 12);
      node2.isTrue();
      Object object0 = new Object();
      node2.isInc();
  }

  @Test(timeout = 4000)
  public void test687()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString(":B:)U,bNs3F'cd?");
      node1.isEquivalentToShallow(node0);
      node0.toString(true, true, false);
      node1.getProp((-2558));
      node1.getInputId();
      Node node3 = new Node(40);
      // Undeclared exception!
      try { 
        node1.addChildAfter((Node) null, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test688()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = Node.newString("CharMatcher.WHITESPACE", 105, 0);
      node0.isBreak();
      node0.isAdd();
      Node node1 = Node.newString(125, "CharMatcher.WHITESPACE", 51, 2903);
      Node node2 = new Node(40, node0, 262144, 51);
      node2.isEquivalentToTyped(node1);
      node0.checkTreeEquals(node2);
      node2.getInputId();
      node0.isQuotedString();
      Node node3 = Node.newString((-316), "j(T i>!AY");
      node1.isOnlyModifiesArgumentsCall();
      node0.addChildrenToBack(node3);
      node3.isDec();
      // Undeclared exception!
      try { 
        node2.setString("Node tree inequality:\nTree1:\nSTRING CharMatcher.WHITESPACE 105\n\n\nTree2:\nSTRING 262144\n    STRING CharMatcher.WHITESPACE 105\n\n\nSubtree1: STRING CharMatcher.WHITESPACE 105\n\n\nSubtree2: STRING 262144\n    STRING CharMatcher.WHITESPACE 105\n");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test689()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      node0.isAssign();
      node0.getAncestor(120);
      Node node1 = new Node(29, node0, 620, 0);
      node0.isWhile();
      node0.isEquivalentToShallow(node1);
      node1.isLabelName();
      node1.toString(false, true, false);
      InputId inputId0 = new InputId("synthetic");
      inputId0.toString();
      node1.setInputId(inputId0);
  }

  @Test(timeout = 4000)
  public void test690()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber(0.0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString(":B:)U,bNs3F'cd?");
      node1.isEquivalentToShallow(node0);
      node0.toString(true, true, false);
      node1.getProp((-2558));
      node1.getInputId();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.javascript.rhino.Node$IntPropListItem", true);
      Node node3 = new Node(40);
      node3.putProp(2, (Object) null);
      node1.detachChildren();
      node3.isGetterDef();
      node2.isScript();
      node0.getString();
      Node node4 = new Node(26, node3, 16, 2);
      node4.getProp(809);
      node3.isWith();
      node2.isAnd();
      node1.isDelProp();
      node2.isBlock();
  }

  @Test(timeout = 4000)
  public void test691()  throws Throwable  {
      Node node0 = Node.newString("46", 0, 0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setJaggerProvide(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString("(L?s1eSOo%=f!k%#g:");
      node2.isEquivalentToShallow(node1);
      node0.toString(false, false, false);
      node0.getProp(36);
      node1.getInputId();
      jSDocInfo0.setExpose(true);
      node1.setLength(53);
      node1.toStringTree();
      node1.getLastSibling();
      node2.setChangeTime(30);
  }

  @Test(timeout = 4000)
  public void test692()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node3.setLineno(55);
      node_SideEffectFlags3.clearSideEffectFlags();
      node2.getLength();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node3.detachChildren();
      node0.isGetterDef();
      node3.isScript();
      node1.getString();
      node1.isNot();
      node0.getProp((-349));
      node2.isNull();
      node2.isAnd();
      node3.isGetProp();
  }

  @Test(timeout = 4000)
  public void test693()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      Node node0 = Node.newString("W[TOU\"", 310, 64);
      node0.isStringKey();
      node0.isDefaultCase();
      node0.isFunction();
      node0.toString(false, false, true);
      node0.isCall();
      node0.putBooleanProp(87855567, false);
      Node node1 = Node.newNumber((double) 1, 346, 38);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test694()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node2.hasChildren();
      node3.isReturn();
      node2.isTry();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test695()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setJaggerProvide(false);
      Node node0 = new Node(111);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
      String string0 = "(L?s1eSOo%=f!k%#g:";
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test696()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node3);
      Node node4 = new Node((-1002), node2, node0, node2, node0);
      node2.getProp(52);
      Node node5 = new Node(2, node4, 4096, 54);
      node2.isDec();
      Node.newNumber((double) 52);
      InputId inputId0 = new InputId("W<2F(`");
      node1.setInputId(inputId0);
      node4.isQualifiedName();
      node0.isFalse();
      node5.cloneNode();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test697()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(105, node0, node0, node0, node0, 51, 37);
      Node node2 = node1.srcref(node0);
      node2.isSetterDef();
      node2.children();
      node2.useSourceInfoFrom(node1);
      Node.newNumber(1241.270543002789, 42, 2);
      String string0 = "$VALUES";
      Node node3 = Node.newString(50, "$VALUES");
      node3.isIn();
      // Undeclared exception!
      try { 
        node2.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test698()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString("");
      Node node1 = new Node(49, node0, node0);
      node1.getInputId();
      node0.toString(false, false, true);
      node0.isWhile();
      node1.getDirectives();
      Node.extractLineno(39);
      node0.isTrue();
      Node node2 = new Node(39, node1);
      node2.isCase();
      node0.isReturn();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test699()  throws Throwable  {
      Node node0 = Node.newString("is_constant_name", (-2577), 1959);
      Node node1 = new Node((-2577), node0, node0, node0, node0);
      node1.removeChild(node0);
      node1.setSourceEncodedPositionForTree(47);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = new Node(1959, node1);
      node0.setVarArgs(false);
      Node node3 = node2.setJSDocInfo((JSDocInfo) null);
      node3.isEquivalentToTyped(node0);
      node1.getIntProp((-3627));
      Node node4 = Node.newString(21, "is_constant_name");
      node2.isLabelName();
      node4.setLength((-659));
      node1.getDirectives();
      // Undeclared exception!
      try { 
        node4.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test700()  throws Throwable  {
      Node node0 = new Node((-1242));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[7];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) objectType0;
      EnumType enumType0 = jSTypeRegistry0.createEnumType(".YXIC XyWAZ", node0, objectType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.findPropertyType("Not declared as a constructor");
      jSTypeArray0[1] = null;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      jSTypeArray0[2] = jSType0;
      ObjectType objectType1 = jSTypeRegistry0.createObjectType("Not declared as a constructor", node0, (ObjectType) enumType1);
      jSTypeArray0[3] = (JSType) objectType1;
      JSType[] jSTypeArray1 = new JSType[2];
      jSTypeArray1[0] = jSType0;
      jSTypeArray1[1] = (JSType) objectType0;
      JSType jSType1 = jSTypeRegistry0.createUnionType(jSTypeArray1);
      jSTypeArray0[4] = jSType1;
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[5];
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.EVAL_ERROR_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      jSTypeNativeArray0[2] = jSTypeNative0;
      jSTypeNativeArray0[3] = jSTypeNative0;
      jSTypeNativeArray0[4] = jSTypeNative0;
      JSType jSType2 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      jSTypeArray0[5] = jSType2;
      EnumElementType enumElementType2 = enumType0.getElementsType();
      jSTypeArray0[6] = (JSType) enumElementType2;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = new Node((-1242), node0, node1);
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test701()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2026));
      node0.isBreak();
      node0.isAdd();
      Node node1 = Node.newString(42, "46", (-2439), (-2026));
      node0.isEquivalentToTyped(node1);
      node1.checkTreeEquals(node0);
      node1.getInputId();
      Node node2 = Node.newString(2, "46");
      node1.getJSDocInfo();
      Node node3 = Node.newString("46", 102, 57);
      Node node4 = new Node((-963), node0, node1, node2, node3);
      Node.newString(30, "S%");
      node4.setLineno(57);
      node2.isAnd();
      node0.isString();
      node3.isEmpty();
  }

  @Test(timeout = 4000)
  public void test702()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString("");
      Node node1 = new Node(49, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags5.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags6.setThrows();
      node_SideEffectFlags8.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags9 = node_SideEffectFlags5.setThrows();
      node1.setLineno(31);
      node_SideEffectFlags8.clearSideEffectFlags();
      node0.getLength();
      node_SideEffectFlags8.setMutatesArguments();
      node_SideEffectFlags9.setMutatesArguments();
      node_SideEffectFlags7.clearSideEffectFlags();
      node_SideEffectFlags0.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node_AncestorIterable0.iterator();
      node1.detachChildren();
      node1.isGetterDef();
      node0.isVarArgs();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THROW 31 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test703()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2026));
      node0.isBreak();
      node0.isAdd();
      Node node1 = Node.newString(42, "46", (-2439), (-2026));
      node0.isEquivalentToTyped(node1);
      node1.checkTreeEquals(node0);
      node1.getInputId();
      node0.isQuotedString();
      Node node2 = Node.newString(2, "46");
      node0.isOnlyModifiesArgumentsCall();
      node0.addChildrenToBack(node2);
      node2.isDec();
      node0.setString("46");
      Object object0 = new Object();
      node2.isGetterDef();
      node1.isIn();
      node1.getType();
      node2.getLastSibling();
      Node node3 = null;
      try {
        node3 = new Node(38, node2, node1, node0, 30, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test704()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setJaggerProvide(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString("");
      node2.isEquivalentToShallow(node1);
      node0.toString(false, false, false);
      node0.getProp(39);
      node1.getInputId();
      jSDocInfo0.setExpose(true);
      Node node3 = new Node(38);
      node3.setLength(49);
      node3.setType(57);
      node2.isDec();
      InputId inputId0 = new InputId("(L?s1eSOo%=f!k%#g:");
      node3.setChangeTime(1014);
      node0.setInputId(inputId0);
      node3.isFalse();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test705()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      node0.isSetterDef();
      node0.isObjectLit();
      node0.isEquivalentTo(node0, false, false, false);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test706()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node3.setLineno(55);
      node_SideEffectFlags3.clearSideEffectFlags();
      node2.getLength();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node3.detachChildren();
      node3.hasChild(node2);
      node2.isExprResult();
      node1.getString();
      node1.isNot();
      node0.getProp((-349));
      node3.isDebugger();
      node2.isAnd();
      node3.isGetProp();
  }

  @Test(timeout = 4000)
  public void test707()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      Node node0 = Node.newString("W[TOU\"", 310, 64);
      node0.isStringKey();
      node0.isDefaultCase();
      node0.isFunction();
      node0.toString(false, false, true);
      node0.isCall();
      node0.putBooleanProp(87855567, false);
  }

  @Test(timeout = 4000)
  public void test708()  throws Throwable  {
      Node node0 = Node.newString("");
      boolean boolean0 = false;
      Node node1 = new Node(2, node0);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test709()  throws Throwable  {
      Node node0 = Node.newString(111, "", 111, 111);
      InputId inputId0 = new InputId("");
      node0.setInputId(inputId0);
      node0.isName();
      node0.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isOptionalArg();
      Node node1 = new Node(63, node0, node0, 4, 55);
      node1.isTypeOf();
      node1.getParent();
      Object object0 = new Object();
  }

  @Test(timeout = 4000)
  public void test710()  throws Throwable  {
      Node.extractLineno(105);
      Node node0 = Node.newString("wX[zEq!q");
      Node node1 = new Node(105, node0, node0, node0, node0, 38, 37);
      Node node2 = node1.srcref(node0);
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test711()  throws Throwable  {
      Node node0 = Node.newString(111, "", 111, 111);
      InputId inputId0 = new InputId("");
      node0.setInputId(inputId0);
      node0.isName();
      node0.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test712()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1073741823);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newNumber(0.0, (-1666), 1073741823);
      Node node1 = new Node((-1666), node0, node0, node0, node0, 43, 31);
      boolean boolean0 = true;
      node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
      try { 
        node1.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1666
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test713()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2026));
      node0.isBreak();
      node0.isAdd();
      Node node1 = Node.newString(42, "46", 53, (-2026));
      node1.checkTreeEquals(node0);
      node1.getInputId();
      node0.isQuotedString();
      node1.wasEmptyNode();
      node0.putProp(29, "46");
      node1.isFromExterns();
      node0.toStringTree();
      Node node2 = Node.newString("");
      Node node3 = new Node(2918, node2, node1, 56, 47);
      node3.getLastSibling();
      node0.setChangeTime(30);
  }

  @Test(timeout = 4000)
  public void test714()  throws Throwable  {
      Node node0 = Node.newString("46");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setJaggerProvide(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString("46");
      node2.isGetterDef();
      node0.toString(false, false, false);
      Object object0 = new Object();
      node1.getInputId();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("f[\"jC:TvaTR7XS5<", false);
      node0.putProp(2, simpleSourceFile0);
      node1.detachChildren();
      node2.isGetterDef();
      node2.isScript();
      node0.getString();
      jSDocInfo0.documentThrows((JSTypeExpression) null, "f[\"jC:TvaTR7XS5<");
      node1.getProp(15);
      node2.isTrue();
      node1.isAnd();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test715()  throws Throwable  {
      Node node0 = new Node((-3529), (-3529), (-3529));
      Node node1 = new Node(48, node0, node0, node0, 2292, 55);
      Node node2 = node0.clonePropsFrom(node1);
      Node.newString(4, "vSmFZ", 30, 1);
      node2.mayMutateArguments();
      node2.addChildrenToBack(node1);
      // Undeclared exception!
      try { 
        node2.setSourceEncodedPositionForTree(46);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test716()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isThis();
      node0.isNoSideEffectsCall();
      node0.isEquivalentTo(node0, true, false, false);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test717()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node3.setLineno(55);
      node_SideEffectFlags3.clearSideEffectFlags();
      node2.getLength();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node3.detachChildren();
      node0.isGetterDef();
      node3.isScript();
      node1.getString();
      node1.isNot();
      node0.getProp((-349));
      node2.isNull();
      node2.isAnd();
      node3.isGetProp();
  }

  @Test(timeout = 4000)
  public void test718()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      Node node1 = Node.newString("b", 4095, 1655);
      Node node2 = new Node(227, node1, node0);
      Node node3 = node0.detachFromParent();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("(L?s1eSOo%=f!k%#g:", false);
      node3.setStaticSourceFile(simpleSourceFile0);
      Node node4 = Node.newNumber((-185.9184404077573));
      // Undeclared exception!
      try { 
        node1.removeChild(node4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test719()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      node0.getJsDocBuilderForNode();
      node0.putBooleanProp(0, true);
      node0.isLabel();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isFalse();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.isEquivalentToShallow(node0);
      node0.toString(false, false, false);
      node0.getProp((-3158));
      node0.getInputId();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("NUMBER -1155.6957975086816", true);
      Node node1 = new Node(1, node0, node0, 1, 4);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FunctionType functionType0 = null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionTypeWithNewReturnType((FunctionType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test720()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, (-1392), 0);
      node1.setSourceEncodedPositionForTree(1);
      node1.putIntProp(0, 1341);
      node1.setLineno((-1100));
      node0.addChildToBack(node1);
      node0.isGetterDef();
      node1.isIn();
      node1.setType(1);
      Node node2 = Node.newNumber((double) 38, (-916), 159);
      node0.isDec();
      InputId inputId0 = new InputId("(L?s1eSOo%=f!k%#g:");
      node2.setInputId(inputId0);
      node2.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-487));
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test721()  throws Throwable  {
      Node node0 = Node.newString("46");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setJaggerProvide(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(51, node1, node1);
      node0.getInputId();
      node2.toString(true, true, false);
      node1.isWhile();
      node1.getDirectives();
      Node node3 = Node.newString(305, ".Om:Fq6|", (-1255), 29);
      jSDocInfo0.setDefine(true);
      node3.children();
      Node node4 = node2.useSourceInfoFrom(node1);
      node4.checkTreeEqualsImpl(node1);
      Node node5 = Node.newNumber(394.698, 53, 40);
      Node node6 = new Node(37, node3, 49, 32);
      // Undeclared exception!
      try { 
        node4.getChildBefore(node5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test722()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 279, 279);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags6.setThrows();
      node0.putIntProp((-926), 279);
      node0.setLineno(305);
      Node node1 = new Node(46, node0, node0, node0, 1, 30);
      node0.addChildToBack(node1);
      node0.isFor();
      Node node2 = new Node((-696), 4, 4095);
      node2.isScript();
      node0.getString();
      node2.useSourceInfoIfMissingFromForTree(node0);
      node0.isString();
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test723()  throws Throwable  {
      Node node0 = new Node(103);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      Node node4 = new Node((-1000), node2, node0, node2, node0);
      Node node5 = new Node(2, node4, 4096, 54);
      Node.newNumber((-1850.0), 57, (-926));
      node0.children();
      node2.useSourceInfoFrom(node1);
      node4.setChangeTime(4095);
      node_SideEffectFlags0.clearAllFlags();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test724()  throws Throwable  {
      Node node0 = new Node(107);
      Iterable<Node> iterable0 = new Stack<Node>();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = new Node(29);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      Node node4 = new Node(4037, node2, node0, node2, node0);
      node3.cloneNode();
      Node node5 = new Node(2, node4, 4096, 54);
      Node.newNumber((-1850.0), 57, (-926));
      node0.children();
      Node node6 = null;
      try {
        node6 = new Node(39, node1, node5, node0, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test725()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("", (-919), (-919));
      node0.setOptionalArg(true);
      Node node1 = new Node(967, node0, (-3376), (-140));
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = Node.newString((-3301), "", 344, 42);
      node0.isEquivalentTo(node2, true, true, true);
      node0.setLength(1378);
      node0.isFunction();
      node0.isInc();
      Node node3 = Node.newString(1, "");
      node3.getAncestors();
      Node node4 = Node.newString("", 40, 91);
      node4.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node3.setDouble(0.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test726()  throws Throwable  {
      Node node0 = new Node(2321, 2321, 2321);
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test727()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setIsSyntheticBlock(false);
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test728()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      node2.getDirectives();
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.valueOf();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node4 = new Node(36, nodeArray0);
      node4.setLineno(57);
      node3.getDirectives();
      Node node5 = Node.newNumber((double) 2);
      node5.setOptionalArg(false);
      node4.isFromExterns();
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test729()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2026));
      node0.isBreak();
      node0.isAdd();
      Node node1 = Node.newString(42, "46", (-2439), (-2026));
      node0.isEquivalentToTyped(node1);
      node1.checkTreeEquals(node0);
      node1.getInputId();
      node1.getProp(33);
      node0.getInputId();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("m\"Q>", false);
      node0.putProp(38, (Object) null);
      node0.setType(54);
      node0.isDec();
      node0.setInputId((InputId) null);
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test730()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node1.detachChildren();
      node3.isThrow();
      node1.isScript();
      node0.getString();
      node2.isNot();
      node1.getProp(1440);
      node3.isWith();
      Node node4 = Node.newString((-1836), "W<2F(`");
      node4.setLineno(46);
      node4.isAnd();
      node2.isString();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test731()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node3.setLineno(55);
      node_SideEffectFlags3.clearSideEffectFlags();
      node2.getLength();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node3.detachChildren();
      node0.isGetterDef();
      node3.isScript();
      node1.getString();
      node1.isNot();
      node0.getProp((-349));
      node2.isNull();
      node2.isAnd();
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test732()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, (-1392), 0);
      node1.setSourceEncodedPositionForTree(1);
      node1.setChangeTime((-1392));
      node1.putIntProp(0, 1341);
      node1.setLineno((-1100));
      node0.addChildToBack(node1);
      node0.isQualifiedName();
      node0.isLocalResultCall();
      Node node2 = new Node(584, node0, 23, 4);
      node2.isLocalResultCall();
      node0.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        node1.setDouble(47);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test733()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      // Undeclared exception!
      try { 
        node1.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test734()  throws Throwable  {
      Node node0 = new Node(103);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      Node node1 = Node.newString(16, "W<2F(`", 54, 63);
      node0.isAssignAdd();
      Node node2 = new Node(54, node0, 1, 306);
      node0.getDirectives();
      node1.children();
      Node.newString("W<2F(`");
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test735()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      String string0 = "(L?s1eOof!k%#g:";
      Node node3 = Node.newString("(L?s1eOof!k%#g:");
      node_SideEffectFlags0.clearAllFlags();
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node((-59), nodeArray0, 57, 47);
      Node node5 = new Node(124, node4, node1, node2, node4, 101, (-232));
      node0.getIntProp(52);
      Node node6 = null;
      try {
        node6 = new Node((-1332), node3, node1, 32, 29);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test736()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags7.setThrows();
      node0.setLineno(294);
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.getLength();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags7.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType[] jSTypeArray0 = new JSType[0];
      node0.isThrow();
      node0.isScript();
      node0.getString();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test737()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.toString();
      Node node1 = new Node(664, node0, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node1.isIn();
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test738()  throws Throwable  {
      Node node0 = Node.newString("46", 103, (-2026));
      node0.isBreak();
      node0.isAdd();
      Node node1 = Node.newString(42, "46", (-2439), (-2026));
      node0.isEquivalentToTyped(node1);
      node1.checkTreeEquals(node0);
      node1.getInputId();
      node0.isQuotedString();
      Node node2 = Node.newString(2, "46");
      node1.getJSDocInfo();
      Node node3 = Node.newString("46", 102, 57);
      node3.getSourceFileName();
      Node node4 = new Node((-963), node0, node1, node2, node3);
      node2.getIndexOfChild(node4);
      node3.isNew();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test739()  throws Throwable  {
      int int0 = 41;
      Node node0 = null;
      try {
        node0 = new Node(44, (Node) null, (Node) null, (Node) null, 57, 57);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test740()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("", (-232), 51);
      Node node1 = new Node((-232), node0, node0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test741()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      Node node4 = new Node((-1002), node2, node0, node2, node0);
      Node node5 = new Node(2, node4, 4096, 54);
      node0.children();
      node3.isFunction();
      node2.getChildCount();
      node5.srcref(node4);
  }

  @Test(timeout = 4000)
  public void test742()  throws Throwable  {
      Node node0 = Node.newString("46");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setJaggerProvide(false);
      Node node1 = new Node(53, node0, 55, 4);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString("(L?s1eSOo%=f!k%#g:");
      node2.isEquivalentToShallow(node1);
      node0.toString(false, false, false);
      node0.getProp(36);
      node1.getInputId();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node_AncestorIterable0.iterator();
      node1.detachChildren();
      node1.isGetterDef();
      node0.isScript();
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test743()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node1.detachChildren();
      node3.isThrow();
      node1.isScript();
      node0.getString();
      node2.isNot();
      node1.getProp(57);
      node3.isWith();
      Node node4 = new Node((-1423), node3, node2);
      node4.isAnd();
      node3.isSyntheticBlock();
      node2.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test744()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.newString("(L?s1eOof!k%#g:");
      node1.isEquivalentToShallow(node3);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        node3.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test745()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isSwitch();
      node0.isNoSideEffectsCall();
      node0.isEquivalentTo(node0, true, false, true);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test746()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isSwitch();
      Node node1 = Node.newString("first new child has existing sibling");
      node0.isNoSideEffectsCall();
      node1.getSourceOffset();
      node0.getDirectives();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(54, nodeArray0);
      node2.setOptionalArg(true);
      node0.isIn();
      Node node3 = new Node(15, 18, 77);
      node1.isIn();
      node0.getLastSibling();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node3.isArrayLit();
      node2.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test747()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setJaggerProvide(true);
      Node node0 = Node.newString("(L?s1eSOo%=f!k%#g:");
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("f[\"jC:TvaTR7XS5<", true);
      jSDocInfo0.getParameterNames();
      jSDocInfo0.setExpose(true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Iterator<JSType> iterator0 = (Iterator<JSType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      node0.setChangeTime(232);
      Node node1 = node0.getLastSibling();
      node1.getJSType();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test748()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newString(37, "rb t!8", 16, 32);
      InputId inputId0 = new InputId("**");
      Node node2 = new Node(622, node1, node0, node0, 39, 2694);
      Node.newString(154, "rb t!8");
      node1.addChildrenToBack(node2);
      node0.getBooleanProp(1);
      Node.extractCharno(660);
      ImmutableList.of();
      node2.setChangeTime(57);
      Node node3 = node2.getLastSibling();
      node1.getJSType();
      node3.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test749()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = Node.newNumber((double) 232);
      node0.setChangeTime(232);
      node0.getLastSibling();
      node0.getJSType();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test750()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString("");
      Node node1 = new Node(49, node0, node0);
      node1.getInputId();
      node0.toString(false, false, true);
      node0.isWhile();
      node1.getDirectives();
      node0.children();
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = Node.newNumber((double) 49, 2, 2);
      Node node4 = new Node(15, node3, 1, 57);
      // Undeclared exception!
      try { 
        node4.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test751()  throws Throwable  {
      Node node0 = Node.newNumber((-4933.0), (-1936), (-1708));
      Node node1 = Node.newString("w[U?M4FWJBHK47b#K");
      node1.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -4933.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test752()  throws Throwable  {
      String string0 = "46";
      Node node0 = Node.newString((-4042), "46");
      Node node1 = new Node((-4042), node0, node0, 56, 4095);
      Node node2 = Node.newString(4618, "(L?s1eSOo%=f!k%#g:");
      node2.putProp(2390, "46");
      Node node3 = null;
      try {
        node3 = new Node(302, node1, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test753()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, (-1392), 0);
      node1.putIntProp(0, 1341);
      node1.setLineno((-1100));
      node0.addChildToBack(node1);
      node1.isIn();
      node0.getType();
      node0.getLastSibling();
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Object object0 = new Object();
      immutableList0.lastIndexOf(object0);
      ImmutableList<JSType> immutableList1 = immutableList0.reverse();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList1);
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test754()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      Iterable<Node> iterable0 = new LinkedHashSet<Node>();
      Node node1 = Node.newString(16, "W<2F(`", 54, 63);
      node0.isAssignAdd();
      Node node2 = new Node(54, node0, 1, 306);
      node0.getDirectives();
      node1.children();
      node2.useSourceInfoFrom(node0);
      Node.newNumber((-1783.6948709568514), 1378, 256);
      Node node3 = new Node(46, node1, 55, 2);
      node3.getChildBefore(node1);
  }

  @Test(timeout = 4000)
  public void test755()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString(110, "unexpected prop id ", (-5946), 110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = node0.srcref(node1);
      Node node3 = node0.srcrefTree(node1);
      node2.isDebugger();
      node3.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isEquivalentToShallow(node2);
      node2.isAssign();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node3.detachChildren();
      node3.isThrow();
      node1.isScript();
      node2.getString();
      Node node4 = Node.newNumber((double) 36);
      node4.isNot();
      node1.getProp((-2436));
      node3.isWith();
      Node node5 = new Node(36, node4, node3);
      node1.isAnd();
      node0.isOnlyModifiesArgumentsCall();
      node3.isGetProp();
      // Undeclared exception!
      try { 
        node4.removeChildAfter(node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test756()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, (-1392), 0);
      node1.setSourceEncodedPositionForTree(1);
      node1.putIntProp(0, 1341);
      node1.setLineno((-1100));
      node0.addChildToBack(node1);
      node0.isGetterDef();
      node1.isIn();
      Node node2 = new Node(294, 8, 421938);
      node1.isIn();
      Node node3 = node2.getLastSibling();
      node1.useSourceInfoIfMissingFromForTree(node3);
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test757()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node3.setLineno(55);
      node_SideEffectFlags3.clearSideEffectFlags();
      node2.getLength();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node3.detachChildren();
      node0.isGetterDef();
      node3.isScript();
      node1.getString();
      node1.isNot();
      node0.getProp((-349));
      node1.isWith();
      node2.isAnd();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test758()  throws Throwable  {
      Node node0 = new Node(103);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setIsSyntheticBlock(true);
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      Node node4 = new Node((-1002), node2, node0, node2, node0);
      node3.cloneNode();
      node0.getSideEffectFlags();
      Node node5 = new Node(23, node4, 4096, 54);
      Node.newNumber((-1850.0), 57, (-926));
      node0.children();
      node2.useSourceInfoFrom(node1);
      node4.setChangeTime(4095);
  }

  @Test(timeout = 4000)
  public void test759()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags7.setThrows();
      node0.setLineno(294);
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.getLength();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags7.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.detachChildren();
      node0.isThrow();
      node0.isScript();
      node0.getString();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test760()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Object object0 = new Object();
      node0.putProp((-1314), object0);
      Node node1 = Node.newString("missing prop: ", 2622, 512);
      node1.isIf();
      node1.isDefaultCase();
      node0.isFunction();
      // Undeclared exception!
      try { 
        node0.toString(true, true, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id -1314
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test761()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-232), nodeArray0, 31, 112);
      Node node1 = new Node(37, node0, node0, node0, node0, 52, 39);
      node1.getIntProp(122);
      node1.isFromExterns();
      Node node2 = null;
      try {
        node2 = new Node(4095, node1, node0, node0, 122, 46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test762()  throws Throwable  {
      Node node0 = Node.newString("S", (-232), 0);
      node0.isVar();
      node0.addSuppression("S");
      node0.isNoSideEffectsCall();
      node0.getString();
      node0.isOnlyModifiesThisCall();
      node0.isReturn();
      node0.isTry();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isGetElem();
      node0.useSourceInfoIfMissingFromForTree(node1);
      // Undeclared exception!
      try { 
        node2.clonePropsFrom(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test763()  throws Throwable  {
      Node node0 = Node.newNumber(462.04113169);
      Node node1 = Node.newString(38, "com.google.javascript.rhino.Node", 31, 1031);
      node1.isHook();
      Node node2 = new Node(311, node0, 722, 47);
      node0.isWhile();
      node0.isEquivalentToShallow(node2);
      node1.isLabelName();
      node1.toStringTree();
      Node node3 = node2.getLastSibling();
      node3.removeChildren();
      node0.setChangeTime(112);
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test764()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node3.setLineno(55);
      node_SideEffectFlags3.clearSideEffectFlags();
      node2.getLength();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node3.detachChildren();
      node0.isGetterDef();
      node3.isScript();
      node1.getString();
      node1.isNot();
      node0.getProp((-349));
      node1.isWith();
      node2.isAnd();
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test765()  throws Throwable  {
      Node node0 = new Node(103);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      Node node4 = new Node((-1000), node2, node0, node2, node0);
      node3.cloneNode();
      Node node5 = new Node(2, node4, 4096, 54);
      Node node6 = Node.newNumber((-1850.0), 57, (-926));
      node0.children();
      Node node7 = node2.useSourceInfoFrom(node1);
      node4.setChangeTime(4095);
      node6.useSourceInfoFromForTree(node7);
      node7.isWhile();
  }

  @Test(timeout = 4000)
  public void test766()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags7.setThrows();
      node0.setLineno(294);
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.getLength();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags7.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.detachChildren();
      node0.isThrow();
      node0.isScript();
      node0.getString();
      node0.isNot();
      node0.getProp(0);
      node1.isWith();
      node1.isAnd();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test767()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 279, 279);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags6.setThrows();
      node0.putIntProp((-926), 279);
      node0.setLineno(305);
      Node node1 = new Node(46, node0, node0, node0, 1, 30);
      node0.addChildToBack(node1);
      node0.isFor();
      Node node2 = new Node((-696), 4, 5760);
      node2.isIn();
      Node node3 = node2.getLastSibling();
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node2);
      node4.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test768()  throws Throwable  {
      int int0 = (-4270);
      Node[] nodeArray0 = new Node[1];
      Node node0 = null;
      try {
        node0 = new Node((-4270), nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test769()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags6.setThrows();
      node0.putIntProp((-926), 294);
      node0.setLineno(305);
      Node node1 = new Node(46, node0, node0, node0, 26, 30);
      node0.addChildToBack(node1);
      node0.isGetterDef();
      Node node2 = new Node((-696), 4, 5760);
      node2.isIn();
      node1.getType();
      Node node3 = node2.getLastSibling();
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node2);
      node4.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test770()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, (-1392), 0);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node1;
      Node node2 = null;
      try {
        node2 = new Node(11, nodeArray0, 54, 53);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test771()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags7.setThrows();
      node0.setLineno(294);
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.getLength();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags7.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.detachChildren();
      node0.isThrow();
      node0.isScript();
      node0.getString();
      node0.isNot();
      node1.getType();
      Node node2 = node1.getLastSibling();
      node2.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test772()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      node0.getJsDocBuilderForNode();
      boolean boolean0 = true;
      node0.putBooleanProp(0, true);
      node0.isLabel();
      Iterable<Node> iterable0 = new LinkedHashSet<Node>();
      node0.isFalse();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(2, nodeArray0, 42, 48);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test773()  throws Throwable  {
      Node node0 = Node.newNumber(462.04113169);
      Node node1 = Node.newString(38, "com.google.javascript.rhino.Node", 31, 1031);
      node1.isAssign();
      Node node2 = new Node(311, node0, 722, 47);
      node0.isWhile();
      node0.isEquivalentToShallow(node2);
      node1.isLabelName();
      node1.toStringTree();
      node2.getLastSibling();
      node0.setChangeTime(112);
  }

  @Test(timeout = 4000)
  public void test774()  throws Throwable  {
      Node node0 = Node.newString("^SmF Z", (-3529), (-3529));
      Node node1 = new Node(48, node0, node0, node0, 2292, 55);
      Node node2 = node0.clonePropsFrom(node1);
      Node.newNumber((double) 8, (-1509), 0);
      node2.mayMutateArguments();
      Node node3 = null;
      try {
        node3 = new Node(52, node2, 37, 15);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test775()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      String string0 = "(L?s1eSOo%=f!k%#g:";
      Node node0 = Node.newString(0, "(L?s1eSOo%=f!k%#g:", (-1), (-799));
      node0.isAssignAdd();
      Node node1 = Node.newString("(L?s1eSOo%=f!k%#g:", 43, 52);
      node1.addChildrenToBack(node0);
      node1.getParent();
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test776()  throws Throwable  {
      Node node0 = new Node(83);
      node0.isSwitch();
      Node node1 = Node.newString("first new child has existing sibling");
      node0.isNoSideEffectsCall();
      node1.getSourceOffset();
      node0.isEquivalentTo(node1, true, false, true);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test777()  throws Throwable  {
      Node node0 = Node.newNumber(1861.7178005707442, 2382, 169);
      boolean boolean0 = false;
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        node0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test778()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[5];
      JSTypeNative jSTypeNative0 = JSTypeNative.REGEXP_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[0] = jSType0;
      JSTypeNative jSTypeNative1 = JSTypeNative.OBJECT_TYPE;
      JSType jSType1 = jSTypeRegistry0.getNativeType(jSTypeNative1);
      jSTypeArray0[1] = jSType1;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType2 = modificationVisitor0.caseVoidType();
      jSTypeArray0[2] = jSType2;
      Node node0 = Node.newString(1777, "Named type with empty name component", (-610), 0);
      node0.setLineno((-875));
      EnumType enumType0 = jSTypeRegistry0.createEnumType("expectedValuesPerKey must be >= 0 but was %s", node0, jSType1);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getRootNode();
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test779()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.wasEmptyNode();
      Node node1 = new Node(0, (-1392), 0);
      node1.setSourceEncodedPositionForTree(1);
      node1.putIntProp(0, 1341);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) null, false, jSTypeArray0);
      jSTypeRegistry0.createConstructorType((JSType) functionType0, jSTypeArray0);
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test780()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, (-1392), (-1748));
      node1.setSourceEncodedPositionForTree(1);
      node1.putIntProp(0, 1341);
      node1.setLineno((-1100));
      node0.addChildToBack(node1);
      node0.isGetterDef();
      node1.isIn();
      node0.getType();
      Node node2 = node0.getLastSibling();
      Node node3 = node2.srcrefTree(node1);
      node3.getChangeTime();
      Node node4 = node2.useSourceInfoIfMissingFromForTree(node1);
      node4.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test781()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node3.setLineno(55);
      node_SideEffectFlags3.clearSideEffectFlags();
      node2.getLength();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node3.detachChildren();
      node0.isGetterDef();
      node3.isScript();
      node1.getString();
      node1.isNot();
      node0.getProp((-349));
      node1.isWith();
      node2.isAnd();
      Node.mergeLineCharNo(53, 2372);
  }

  @Test(timeout = 4000)
  public void test782()  throws Throwable  {
      int int0 = (-3529);
      Node node0 = Node.newString("^SmF Z", (-3529), (-3529));
      Node node1 = new Node(48, node0, node0, node0, 2292, 55);
      Node node2 = node0.clonePropsFrom(node1);
      Node.newNumber((double) 8, (-1509), 0);
      node2.mayMutateArguments();
      node2.addChildrenToBack(node1);
      // Undeclared exception!
      try { 
        node2.setSourceEncodedPositionForTree(46);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test783()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      node0.getJsDocBuilderForNode();
      node0.putBooleanProp(0, true);
      node0.isAssign();
      node0.children();
      node0.isFalse();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(2, nodeArray0, 42, 30);
      node1.removeChildren();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test784()  throws Throwable  {
      String string0 = "C";
      Node node0 = Node.newString("C", (-232), 0);
      node0.isBreak();
      node0.addSuppression("\"");
      node0.isNoSideEffectsCall();
      node0.getString();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(26);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 26
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test785()  throws Throwable  {
      int int0 = (-3529);
      Node node0 = Node.newString("^SmF Z", (-3529), (-3529));
      Node node1 = new Node(48, node0, node0, node0, 2292, 55);
      Node node2 = node0.clonePropsFrom(node1);
      Node.newNumber((double) 8, (-1509), 0);
      node2.addChildrenToBack(node1);
      // Undeclared exception!
      try { 
        node2.setSourceEncodedPositionForTree(46);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test786()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      Node node4 = new Node((-1002), node2, node0, node2, node0);
      node3.cloneNode();
      Node node5 = new Node(2, node4, 4096, 54);
      Node.newNumber((-1850.0), 57, (-926));
      node0.children();
      node2.useSourceInfoFrom(node1);
      node4.setChangeTime(4095);
  }

  @Test(timeout = 4000)
  public void test787()  throws Throwable  {
      int int0 = 38;
      Node node0 = Node.newNumber(462.04113169);
      Node node1 = new Node(55, node0, node0, node0, node0);
      node1.removeProp(43);
      node0.isUnscopedQualifiedName();
      node0.isEquivalentTo(node1);
      node0.checkTreeEqualsImpl(node1);
      String string0 = "1G";
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test788()  throws Throwable  {
      Node node0 = Node.newString(";u<bv.");
      node0.toStringTree();
      node0.setLength(42);
      node0.getQualifiedName();
      node0.getChangeTime();
      node0.setQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(792);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      Node node1 = Node.newString(";u<bv.", 42, (-2810));
      // Undeclared exception!
      try { 
        node1.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test789()  throws Throwable  {
      Node node0 = Node.newString("C", (-232), 0);
      node0.isVar();
      node0.addSuppression("C");
      node0.isNoSideEffectsCall();
      node0.getString();
      node0.hasChildren();
      node0.isReturn();
      node0.isTry();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.useSourceInfoFrom(node1);
      node1.isGetElem();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      try { 
        node2.setDouble((-1.0));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING C [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test790()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      String string0 = "(L?s1eSOo%=f!k%#g:";
      Node node0 = Node.newString(0, "(L?s1eSOo%=f!k%#g:", (-1), (-799));
      node0.isAssignAdd();
      Node node1 = new Node(286, node0, 46, 37);
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test791()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString("");
      Node node1 = new Node(49, node0, node0);
      node1.getInputId();
      node0.toString(true, true, true);
      Node node2 = Node.newString("C", (-2276), 1556);
      Node node3 = null;
      try {
        node3 = new Node(1219, node2, node1, node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test792()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      node0.getJsDocBuilderForNode();
      node0.putBooleanProp(0, true);
      node0.isAssign();
      node0.children();
      node0.isFalse();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(2, nodeArray0, 42, 48);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test793()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString(0, "(L?s1eSOo%=f!k%#g:", (-1), (-799));
      node0.isAssignAdd();
      Node node1 = new Node(286, node0, 46, 37);
      node1.getDirectives();
      node0.children();
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.newNumber((double) 55, 97, 46);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test794()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[5];
      JSTypeNative jSTypeNative0 = JSTypeNative.REGEXP_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[0] = jSType0;
      JSTypeNative jSTypeNative1 = JSTypeNative.OBJECT_TYPE;
      JSType jSType1 = jSTypeRegistry0.getNativeType(jSTypeNative1);
      jSTypeArray0[1] = jSType1;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType2 = modificationVisitor0.caseVoidType();
      jSTypeArray0[2] = jSType2;
      jSType1.matchesNumberContext();
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType1, false, jSTypeArray0);
      jSTypeArray0[3] = (JSType) functionType0;
      FunctionType functionType1 = jSTypeRegistry0.createConstructorType((JSType) functionType0, jSTypeArray0);
      jSTypeArray0[4] = (JSType) functionType1;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test795()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      node0.isAssign();
      Node node1 = new Node(29, node0, 620, 0);
      node0.isWhile();
      node0.isEquivalentToShallow(node1);
      node1.isLabelName();
      node1.toString(false, true, false);
      InputId inputId0 = new InputId("synthetic");
      inputId0.toString();
      node1.setInputId(inputId0);
  }

  @Test(timeout = 4000)
  public void test796()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags7.setThrows();
      node0.setLineno(294);
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.getLength();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags7.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.detachChildren();
      node0.isThrow();
      node0.isScript();
      node0.getString();
      node0.isNot();
      node0.getProp(0);
      node1.isWith();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test797()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node3);
      node1.isAssign();
      Node node4 = new Node((-1002), node2, node0, node2, node0);
      Node node5 = new Node(2, node4, 4096, 54);
      node0.children();
      node2.useSourceInfoFrom(node1);
      // Undeclared exception!
      try { 
        node5.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test798()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      node0.isAssign();
      Node node1 = new Node(29, node0, 620, 0);
      node1.getSourceFileName();
      node1.getStaticSourceFile();
      node0.isWhile();
      node0.isEquivalentToShallow(node1);
      node0.isLabelName();
      // Undeclared exception!
      try { 
        node0.toString(true, true, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1519
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test799()  throws Throwable  {
      Node node0 = Node.newNumber(462.04113169);
      Node node1 = Node.newString(38, "com.google.javascript.rhino.Node", 31, 1031);
      node1.isAssign();
      Node node2 = new Node(311, node0, 722, 47);
      node0.isWhile();
      node0.isEquivalentToShallow(node2);
      node1.isLabelName();
      node1.toString(false, false, false);
      InputId inputId0 = new InputId("_S*L-Y|1yK[Xf");
      node0.setInputId(inputId0);
  }

  @Test(timeout = 4000)
  public void test800()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.Predicates$InstanceOfPredicate");
      node0.wasEmptyNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test801()  throws Throwable  {
      Node.newString(0, "46", 0, 2261);
      Node node0 = null;
      try {
        node0 = new Node(32, (Node) null, 42, 53);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test802()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      Node node1 = new Node(29, node0, 620, 0);
      node1.isOnlyModifiesThisCall();
      node0.isWhile();
      node1.getSourceOffset();
      node0.isEquivalentToShallow(node1);
      node0.isLabelName();
      // Undeclared exception!
      try { 
        node0.toString(true, true, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1519
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test803()  throws Throwable  {
      Node node0 = new Node(1519, 294, 1519);
      node0.isAssign();
      Node node1 = new Node(29, node0, 620, 0);
      node1.children();
      Node node2 = node0.useSourceInfoFrom(node1);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test804()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, (-1392), 0);
      node1.setSourceEncodedPositionForTree(1);
      node1.putIntProp(0, 1341);
      node1.setLineno((-1100));
      node0.addChildToBack(node1);
      node0.isGetterDef();
      node1.isIn();
      node0.getType();
      Node node2 = node0.getLastSibling();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      assertEquals((-1), node1.getSourcePosition());
      assertEquals((-1), node0.getLineno());
      
      node3.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test805()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, (-1392), 0);
      node1.setSourceEncodedPositionForTree(1);
      node1.putIntProp(0, 1341);
      node1.setLineno((-1100));
      node0.addChildToBack(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType jSType0 = node1.getJSType();
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("tn%m", node1, jSType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test806()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node node0 = Node.newString("new child has existing parent", (-2768), (-59));
      node0.setVarArgs(false);
      node0.isDefaultCase();
      node0.setWasEmptyNode(true);
      node0.setChangeTime(1104);
  }

  @Test(timeout = 4000)
  public void test807()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      node0.isAssign();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test808()  throws Throwable  {
      Node node0 = Node.newString(";=", 0, 0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setJaggerProvide(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString("(L?s1eSOo%=f!k%#g:");
      node2.isEquivalentToShallow(node1);
      node0.toString(false, false, false);
      node0.getProp(36);
      node1.getInputId();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("f[\"jC:TvaTR7XS5<", false);
      node0.putProp(2, simpleSourceFile0);
      jSDocInfo0.setExpose(true);
      node0.siblings();
      node1.setLength((-2208));
      node0.setType(127);
      node0.isDec();
      node0.setInputId((InputId) null);
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test809()  throws Throwable  {
      Node node0 = Node.newNumber((-2574.7503411298394), (-3834), (-3834));
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, (-1392), 0);
      node1.setSourceEncodedPositionForTree(1);
      node1.putIntProp(0, 1341);
      node1.setLineno((-1100));
      node0.addChildToBack(node1);
      node0.isQualifiedName();
      node0.isLocalResultCall();
      Node node2 = new Node(584, node0, 23, 4);
      node2.isLocalResultCall();
      node0.isOnlyModifiesArgumentsCall();
      node1.addChildrenToBack(node2);
      node1.isDec();
      String string0 = "sX/eL(iw";
      // Undeclared exception!
      try { 
        node2.setString("sX/eL(iw");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 584
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test810()  throws Throwable  {
      Node node0 = new Node(51, 51, 51);
      Node node1 = new Node(51, node0, node0, node0, (-526), (-5593));
      node1.isFunction();
      node1.isOnlyModifiesThisCall();
      node0.isSwitch();
      node0.getSourceFileName();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // IN 51 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test811()  throws Throwable  {
      Node node0 = Node.newNumber((-253.14272), 117, 117);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.getBooleanProp(117);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test812()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1073741823);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newNumber(0.0, (-1666), 1073741823);
      Node node1 = new Node((-1666), node0, node0, node0, node0, 43, 31);
      boolean boolean0 = true;
      Node node2 = null;
      // Undeclared exception!
      try { 
        node1.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1666
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test813()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      node0.isAssign();
      Node node1 = new Node(29, node0, 620, 0);
      node0.isWhile();
      node0.isEquivalentToShallow(node1);
      node0.isLabelName();
      // Undeclared exception!
      try { 
        node0.toString(true, true, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1519
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test814()  throws Throwable  {
      Node node0 = Node.newString("46", 0, 0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setJaggerProvide(false);
      node0.isEquivalentTo(node0);
      Node node1 = Node.newString("(L?s1eSOo%=f!k%#g:");
      node1.isEquivalentToShallow(node0);
      node0.toString(false, false, false);
      node0.getProp(36);
      node0.getInputId();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("f[\"jC:TvaTR7XS5<", false);
      node0.putProp(2, simpleSourceFile0);
      jSDocInfo0.setExpose(false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Iterator<JSType> iterator0 = (Iterator<JSType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      node0.setLength(112);
      node0.setType(56);
      node0.isDec();
      node1.setInputId((InputId) null);
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test815()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      node0.isAssign();
      Node node1 = new Node(29, node0, 620, 0);
      node1.children();
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isEquivalentToTyped(node2);
      node2.type = (-2208);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test816()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber((double) (-3456), 0, 0);
      Node node1 = Node.newString("/", 75, 54);
      Node node2 = new Node(48, node0, node0, node1, node0, 227, 49);
      node1.getSourcePosition();
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 48
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test817()  throws Throwable  {
      Node node0 = Node.newNumber((-4933.0), (-1936), (-1708));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags5.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      Node node1 = Node.newString("W[TOU\"", (-219), 274);
      node1.setVarArgs(false);
      node0.isStringKey();
      node0.isDefaultCase();
      node1.isFunction();
      node1.toString(false, true, false);
  }

  @Test(timeout = 4000)
  public void test818()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(0, node0, node0, node0, node0, (-1225), 49);
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test819()  throws Throwable  {
      int int0 = 65535;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node1 = new Node(65535, node0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      node1.setLineno(29);
      Node node2 = null;
      try {
        node2 = new Node(52, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test820()  throws Throwable  {
      Node node0 = new Node((-1271));
      node0.putBooleanProp((-1271), true);
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test821()  throws Throwable  {
      Node.mergeLineCharNo(0, (-799));
      Node node0 = Node.newString("");
      Node node1 = new Node(49, node0, node0);
      node1.getInputId();
      node0.toString(true, true, true);
      node0.addChildrenToBack(node1);
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test822()  throws Throwable  {
      Node node0 = new Node(120);
      Object object0 = new Object();
      node0.putProp((-1314), object0);
      // Undeclared exception!
      try { 
        node0.getIntProp((-1314));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test823()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[5];
      JSTypeNative jSTypeNative0 = JSTypeNative.REGEXP_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[0] = jSType0;
      JSTypeNative jSTypeNative1 = JSTypeNative.OBJECT_TYPE;
      JSType jSType1 = jSTypeRegistry0.getNativeType(jSTypeNative1);
      jSTypeArray0[1] = jSType1;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType2 = modificationVisitor0.caseVoidType();
      jSTypeArray0[2] = jSType2;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType1, false, jSTypeArray0);
      jSTypeArray0[3] = (JSType) functionType0;
      FunctionType functionType1 = jSTypeRegistry0.createConstructorType((JSType) functionType0, jSTypeArray0);
      jSTypeArray0[4] = (JSType) functionType1;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test824()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString(0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test825()  throws Throwable  {
      Node node0 = Node.newString("46", 0, 0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setJaggerProvide(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString("(L?s1eSOo%=f!k%#g:");
      node2.isEquivalentToShallow(node1);
      node0.toString(false, false, false);
      node0.getProp(36);
      node1.getInputId();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("f[\"jC:TvaTR7XS5<", false);
      node0.putProp(2, simpleSourceFile0);
      jSDocInfo0.setExpose(true);
      node1.setLength((-2208));
      node0.setType(127);
      node0.isDec();
      node0.setInputId((InputId) null);
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test826()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[5];
      Node node0 = null;
      try {
        node0 = new Node(44, nodeArray0, (-1455), 1624);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test827()  throws Throwable  {
      int int0 = 1191;
      Node[] nodeArray0 = new Node[7];
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[2];
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(1050, (Node) null, (Node) null, (Node) null, (Node) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test828()  throws Throwable  {
      int int0 = (-1025);
      Node[] nodeArray0 = new Node[7];
      Node node0 = new Node((-1025));
      Node node1 = new Node((-1025), node0, node0, node0);
      nodeArray0[0] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType jSType0 = null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("Duplicate record field ", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test829()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-4270), nodeArray0);
      String string0 = "com.google.common.base.Predicates$InstanceOfPredicate";
      node0.setVarArgs(true);
      node0.addSuppression("com.google.common.base.Predicates$InstanceOfPredicate");
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-4270));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -4270
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test830()  throws Throwable  {
      int int0 = 0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[4];
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      JSType jSType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs(objectType0, (JSType) objectType0, (List<JSType>) immutableList0);
      jSTypeArray0[0] = jSType0;
      int int1 = 116;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test831()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(0, (Node) null, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test832()  throws Throwable  {
      Node node0 = Node.newNumber((-4933.0), (-1936), (-1708));
      Node.newString(36, "w[U?M4FWJBHK47b#K");
      node0.isInc();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -4933.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test833()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 0, (-3456));
      Node node1 = new Node(0, node0, node0, node0, node0, (-1225), 49);
      node1.getSourcePosition();
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test834()  throws Throwable  {
      Node node0 = Node.newNumber((-1155.6957975086816));
      node0.getJsDocBuilderForNode();
      node0.putBooleanProp(0, true);
      node0.isAssign();
      Iterable<Node> iterable0 = node0.children();
      node0.isFalse();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      node0.putProp(1620, iterable0);
      Node node1 = null;
      try {
        node1 = new Node(39, nodeArray0, 0, 93);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test835()  throws Throwable  {
      int int0 = 38;
      Node node0 = Node.newNumber(462.04113169);
      Node node1 = new Node(55, node0, node0, node0, node0);
      node1.removeProp(43);
      node0.isUnscopedQualifiedName();
      node0.isEquivalentTo(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.setSourceFileForTesting("1G");
      int int1 = 126;
      int int2 = 0;
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 55
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test836()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString((String) null, 130, 2321);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test837()  throws Throwable  {
      Node node0 = Node.newNumber((-1299.554451), 0, (-383));
      Node node1 = new Node(4095, node0, node0, node0, node0);
      node0.isEquivalentTo(node1);
      assertEquals(4095, node1.getType());
      assertEquals(39, node0.getType());
      assertEquals((-1), node0.getCharno());
  }

  @Test(timeout = 4000)
  public void test838()  throws Throwable  {
      int int0 = (-2608);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-2608), (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test839()  throws Throwable  {
      Node node0 = Node.newString(1519, "gs(u5`rYEwryFz6TZ", 294, 294);
      node0.isAssign();
      Node node1 = new Node(29, node0, 620, 0);
      node1.children();
      Node node2 = node0.useSourceInfoFrom(node1);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test840()  throws Throwable  {
      Node node0 = Node.newString(50, "W<2F(`", 103, 50);
      node0.children();
      Node node1 = Node.newString(1, "W<2F(`", 42, 1534);
      Node node2 = node1.srcref(node0);
      Node node3 = node2.srcrefTree(node0);
      node0.isDebugger();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node3.setLineno(55);
      node_SideEffectFlags3.clearSideEffectFlags();
      node2.getLength();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.valueOf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node3.detachChildren();
      node1.isThrow();
      node3.isScript();
      node1.getString();
      node1.isNot();
      node0.getProp((-349));
      node1.isWith();
      node2.isAnd();
      assertEquals(225330, node1.getSourcePosition());
      assertEquals(50, node0.getCharno());
  }

  @Test(timeout = 4000)
  public void test841()  throws Throwable  {
      Node node0 = Node.newString(1592, "ba");
      Node node1 = new Node(1592, node0, 153, (-4372));
      Node node2 = null;
      try {
        node2 = new Node(1592, node1, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test842()  throws Throwable  {
      Node node0 = new Node(51, 51, 51);
      Node node1 = new Node(51, node0, node0, node0, (-526), (-5593));
      node1.isFunction();
      node1.isOnlyModifiesThisCall();
      node0.isSwitch();
      node1.putBooleanProp((-569), true);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags((-3231));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got IN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test843()  throws Throwable  {
      int int0 = 122;
      Node node0 = null;
      try {
        node0 = new Node(550, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test844()  throws Throwable  {
      Node node0 = Node.newNumber((-253.14272), 117, 117);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test845()  throws Throwable  {
      int int0 = 0;
      int int1 = 420;
      Node node0 = Node.newNumber((double) 0, 0, 420);
      Node node1 = new Node(0, node0, node0, node0, 1, 0);
      Node node2 = Node.newString("com.google.common.base.Predicates$NotPredicate");
      Node node3 = null;
      try {
        node3 = new Node(52, node0, node0, node1, node2, 2, 3401);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test846()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1073741823);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newNumber(0.0, (-1666), 1073741823);
      Node node1 = new Node((-1666), node0, node0, node0, node0, 43, 31);
      boolean boolean0 = true;
      Node node2 = null;
      // Undeclared exception!
      try { 
        node1.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test847()  throws Throwable  {
      Node node0 = Node.newString(";u<bv.");
      node0.toStringTree();
      node0.setLength(42);
      node0.getQualifiedName();
      node0.getChangeTime();
      node0.setQuotedString();
      Node.newString(31, ";u<bv.", 15, 403);
      node0.getSourceFileName();
      node0.getString();
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test848()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      assertEquals(31, node_SideEffectFlags3.valueOf());
      
      Node node0 = Node.newString("new child has existing parent", (-2768), (-59));
      node0.setVarArgs(false);
      node0.isFromExterns();
      node0.isDefaultCase();
      node0.isFunction();
      String string0 = node0.toString(true, false, false);
      assertEquals("STRING new child has existing parent", string0);
  }

  @Test(timeout = 4000)
  public void test849()  throws Throwable  {
      Node node0 = Node.newString("C", (-232), 0);
      node0.isVar();
      node0.addSuppression("C");
      node0.isNoSideEffectsCall();
      node0.getString();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(26);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 26
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test850()  throws Throwable  {
      Node.newNumber(0.0, (-2373), 108);
      int int0 = (-4096);
      // Undeclared exception!
      try { 
        Node.newString((-1571), (String) null, 0, (-2373));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test851()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      String string0 = "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder";
      Node.newString("m9");
      JSType.toMaybeTemplateType((JSType) null);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Unknown class name");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test852()  throws Throwable  {
      Node node0 = Node.newString("X<)&");
      node0.putProp(118, "X<)&");
      assertEquals((-1), node0.getSourcePosition());
      assertEquals(40, node0.getType());
  }
}
