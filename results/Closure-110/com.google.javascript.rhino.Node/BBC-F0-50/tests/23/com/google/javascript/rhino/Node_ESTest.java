/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 03 13:08:54 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import java.io.FilterOutputStream;
import java.io.OutputStreamWriter;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node.extractCharno(1290);
      String string0 = "&$";
      Node node0 = Node.newString(1290, "&$");
      Node node1 = Node.newString("&$");
      node0.addChildAfter(node1, node1);
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node(1124, 1124, 2606);
      Node node1 = node0.cloneNode();
      node1.putIntProp(11, 12);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("!^");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString("'obb,6(A", (-3011), 37);
      Node node3 = node0.cloneTree();
      node1.setOptionalArg(false);
      Node node4 = node1.cloneTree();
      node4.getSourceOffset();
      Node.newString(40, "T2C&78#U|!T");
      node4.siblings();
      node3.addChildrenToFront(node1);
      node3.isIf();
      node4.isIf();
      Node node5 = node2.detachFromParent();
      node5.clonePropsFrom(node1);
      node3.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int int0 = 0;
      Node.newString((String) null, 0, 0);
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int int0 = 4010;
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(4010, (Node) null, (Node) null, 4010, 4010);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString(524288, "");
      Node node1 = new Node(524288, node0, node0);
      node1.type = 37;
      node1.replaceChildAfter(node0, node0);
      Node node2 = new Node(int0, node1, node1, node0, node0);
      // Undeclared exception!
      try { 
        node2.isSyntheticBlock();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      int int0 = 38;
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 38);
      nodeArray0[0] = node0;
      Node node1 = new Node(38, nodeArray0);
      Node node2 = null;
      try {
        node2 = new Node(38, node1, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.areAllFlagsSet();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_NUMBER_STRING;
      jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      String string0 = "4b6?YdXt&<Yi:";
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newString(71, "prev is not a child of this node.", 71, 880);
      node0.isOnlyModifiesThisCall();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = new Node(0);
      int int0 = 0;
      String string0 = null;
      Node.newString((String) null, 4, 0);
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getProp(37);
      node0.isQualifiedName();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = new Node(571, 0, 0);
      Node node1 = new Node(0, node0);
      node1.getJsDocBuilderForNode();
      Node node2 = node1.detachFromParent();
      node0.srcref(node2);
      node1.isDelProp();
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int int0 = 1561;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      String string0 = "com.google.common.collect.RegularImmutableAsList";
      Node node0 = Node.newString((-1134), "com.google.common.collect.RegularImmutableAsList");
      Node node1 = new Node(0, (Node) null, (Node) null, node0, 65536, 2464);
      jSDocInfo0.setOriginalCommentPosition(node1.LAST_PROP);
      int int1 = (-3563);
      Node node2 = new Node(int0, node1, node1, int1, node0.OPT_ARG_NAME);
      // Undeclared exception!
      try { 
        node2.mayMutateArguments();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newNumber((-920.714), (-549), (-549));
      node0.detachFromParent();
      double double0 = 4985.55;
      // Undeclared exception!
      try { 
        Node.newNumber(double0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = (-2330);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2330));
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      int int1 = node_SideEffectFlags1.valueOf();
      int int2 = 2245;
      Node node0 = Node.newString((-2330), "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      node_SideEffectFlags1.clearAllFlags();
      Node node1 = new Node(25, nodeArray0, 13, 4095);
      int int3 = (-3680);
      Node node2 = new Node(int0, node0, node0, node1, node0.MAX_COLUMN_NUMBER, int3);
      Node node3 = null;
      try {
        node3 = new Node(int1, node2, nodeArray0[0], node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newString((String) null);
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(3378);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setThrows();
      Node node0 = Node.newNumber(0.0);
      node0.getExistingIntProp(3378);
      node0.setQuotedString();
      // Undeclared exception!
      try { 
        node0.isIn();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 3378
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = 0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.areAllFlagsSet();
      node_SideEffectFlags3.setReturnsTainted();
      int int1 = (-1829);
      Node node0 = null;
      Node node1 = new Node(1594, (Node) null, (Node) null, (Node) null);
      int int2 = 640;
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, (-404), (-1604));
      node0.setSourceEncodedPositionForTree(0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-404));
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = new Node(39, node0);
      Node node2 = new Node(389, node0, node1, node1, node0);
      node0.clonePropsFrom(node2);
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.isCase();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1754, (-4485), 1754);
      node0.setSourceEncodedPositionForTree(0);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(1754, node0, node0, node0);
      node0.isQuotedString();
      node1.isOptionalArg();
      node1.setCharno((-129));
      node1.isDefaultCase();
      node0.getSourceOffset();
      node1.copyInformationFrom(node0);
      node0.getChangeTime();
      node0.isGetterDef();
      Node node2 = node1.cloneNode();
      node0.getExistingIntProp(3856);
      node2.wasEmptyNode();
      Node node3 = node2.removeChildren();
      String string0 = "com.google.javascript.rhino.jstype.FunctionType";
      node3.setString(string0);
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 3856
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-911), nodeArray0);
      node0.mayMutateArguments();
      node0.setSourceEncodedPosition((-911));
      node0.getSourceOffset();
      node0.getBooleanProp((-911));
      node0.isReturn();
      node0.isIn();
      node0.getJSDocInfo();
      node0.isThrow();
      node0.isDec();
      node0.type = (-911);
      node0.isFromExterns();
      node0.setOptionalArg(true);
      node0.siblings();
      node0.wasEmptyNode();
      node0.setString("#aB8,\"0n%K7R");
      node0.siblings();
      node0.isContinue();
      // Undeclared exception!
      try { 
        node0.isNE();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -911
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      Node node1 = new Node(53, node0, node0);
      Node node2 = new Node(4, node0, node1, node0, node0, 461845907, 37);
      node0.addChildAfter(node1, node2);
      // Undeclared exception!
      try { 
        node0.isFalse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = Node.newNumber(0.0, 51, 57);
      node5.addChildrenToFront(node6);
      node0.isIf();
      node6.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node3.isEmpty();
      node3.addChildToFront(node2);
      node6.isNoSideEffectsCall();
      node5.setSourceEncodedPositionForTree(38);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = Node.newNumber((double) 297, 297, 297);
      Node node1 = new Node(297, node0, node0);
      node1.putBooleanProp((-1053), true);
      Node node2 = new Node(297, node1, node0, node0, node0);
      int int0 = 0;
      String string0 = "";
      // Undeclared exception!
      try { 
        Node.newString(int0, string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      int int0 = (-770);
      Node node0 = new Node((-770), (Node[]) null);
      int int1 = 105;
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      Node node1 = new Node(92, node0, node0, node0);
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      Node node1 = new Node(0, node0, node0, node0, node0, 110, 47);
      node1.getSourceOffset();
      node1.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node1.setDirectives(treeSet0);
      Node node2 = new Node(0, node1, 2048, (-1450));
      node2.getDirectives();
      node2.setSourceFileForTesting(",:EK&hO]p");
      node1.isRegExp();
      node2.isFalse();
      node1.getJSDocInfo();
      node2.isEmpty();
      node1.putIntProp(105, 30);
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2143);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = Node.newNumber(0.0, 2143, 2143);
      Node node1 = Node.newString(37, "URIError");
      node0.replaceChildAfter(node1, node1);
      node0.mayMutateGlobalStateOrThrow();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      String string0 = null;
      Node node0 = Node.newString(0, (String) null, 495, 0);
      Node node1 = node0.cloneTree();
      // Undeclared exception!
      try { 
        node1.getJSDocInfo();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node(485);
      node0.removeChildAfter((Node) null);
      String string0 = "";
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newString(256, (String) null);
      node0.getDouble();
      // Undeclared exception!
      try { 
        node0.isArrayLit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = Node.newString(0, "", 5760, (-765));
      Node node1 = new Node(0, node0, node0, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node1.removeChildAfter(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags2.setMutatesArguments();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = Node.newString("unexpected prop id ", 0, (-109));
      Node node1 = new Node((-109), node0);
      Node node2 = new Node((-109), node1, node0, 4, 18);
      node1.getJSDocInfo();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node0.children();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = Node.newNumber((double) 47, (-461), 38);
      node1.putBooleanProp(57, true);
      node0.addChildrenAfter(node1, node1);
      String string0 = "!1q2Ps=L<2/-X2X!";
      String string1 = "o_LL^JjkN('rCKB~l";
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = "incrdecr";
      Node node0 = Node.newString("incrdecr");
      Node node1 = Node.newNumber((double) 8);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newNumber(0.5, 2891, 5760);
      Node node1 = new Node(2891, node0, node0, node0, 5760, 52);
      node1.addChildAfter(node0, node0);
      int int0 = 154;
      node0.setLineno(int0);
      // Undeclared exception!
      try { 
        node1.getBooleanProp(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseStringType();
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.setCharno(0);
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isLabelName();
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      templateType0.unboxesTo();
      Node node2 = new Node((-893), node0, node0, node0, node0, 38, 3385);
      node0.clonePropsFrom(node2);
      Node.newNumber((-1190.713));
      node0.getNext();
      node2.isGetterDef();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter.getMessage0("Unknown class name");
      linkedList0.add(jSType0);
      jSTypeRegistry0.createFunctionType((ObjectType) templateType0, jSType0, (List<JSType>) linkedList0);
      // Undeclared exception!
      try { 
        node1.isGetterDef();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property Unknown class name
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = Node.newNumber((-631.0815686078341), 8199, Integer.MAX_VALUE);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node1 = new Node(0, node0, node0, 51, 15);
      nodeArray0[6] = node1;
      nodeArray0[7] = node0;
      Node node2 = new Node(48, nodeArray0, 0, 0);
      node0.addChildAfter(node2, nodeArray0[3]);
      node0.isLocalResultCall();
      node0.hasChildren();
      node0.getString();
      node0.setQuotedString();
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 8233;
      Node[] nodeArray0 = new Node[4];
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      ImmutableList<JSType> immutableList1 = immutableList0.asList();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      nodeArray0[0] = node0;
      Node node1 = Node.newNumber((double) 37);
      Node node2 = new Node(65535, node0, node0, node0, node1);
      nodeArray0[1] = node2;
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList1);
      nodeArray0[2] = node3;
      Node node4 = Node.newString(12, "Object#Key", 51, 0);
      nodeArray0[3] = node4;
      Node node5 = new Node(8233, nodeArray0, 629, 57);
      int int1 = 1310;
      Node node6 = new Node(int0, node5, node1, nodeArray0[0], node3, node2.LENGTH, int1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1754, (-4485), 1754);
      node0.setSourceEncodedPositionForTree(0);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(1754, node0, node0, node0);
      node0.isQuotedString();
      node1.isOptionalArg();
      node1.setCharno((-129));
      node1.isDefaultCase();
      node0.getSourceOffset();
      Node node2 = node1.copyInformationFrom(node0);
      node1.isEquivalentTo(node2, false, true, false);
      node0.getChangeTime();
      node0.isGetterDef();
      Node node3 = node1.cloneNode();
      node0.getExistingIntProp(3856);
      node3.wasEmptyNode();
      Node node4 = node3.removeChildren();
      String string0 = "com.google.javascript.rhino.jstype.FunctionType";
      node4.setString(string0);
      node3.getString();
      // Undeclared exception!
      try { 
        node4.addChildrenToFront(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 3856
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = Node.newString("", (-2262), 2147479552);
      Node node1 = new Node(16, node0, node0, node0, node0, 49, 52);
      node1.getSourceOffset();
      node1.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      Node node2 = new Node((-5350), node0, 112, 15);
      String string0 = ",:EK&hO]p";
      node1.getDirectives();
      node2.setSourceFileForTesting(string0);
      node1.isRegExp();
      node1.isFalse();
      node0.getJSDocInfo();
      node2.isEmpty();
      // Undeclared exception!
      try { 
        node2.getType();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("M8lrTnL%");
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1i7Qw9`syp(8b8I", 40, 42);
      Node node3 = node0.cloneTree();
      node2.setOptionalArg(false);
      Node node4 = node3.cloneTree();
      node2.getSourceOffset();
      Node node5 = Node.newString(50, "el/Cjzv/:oJA");
      node5.siblings();
      node1.addChildrenToFront(node4);
      node1.isIf();
      node2.isIf();
      Node node6 = node3.detachFromParent();
      node6.clonePropsFrom(node0);
      node4.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      Node node1 = new Node(92, node0, node0, node0);
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      Node node1 = new Node(4095, 57, 46);
      node0.isBlock();
      node1.isEquivalentTo(node0, false, false, false);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1754, (-4485), 1754);
      node0.setSourceEncodedPositionForTree(0);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(1754, node0, node0, node0);
      node0.isQuotedString();
      node1.isOptionalArg();
      node1.setCharno((-129));
      node0.isContinue();
      node0.getSourceOffset();
      node1.copyInformationFrom(node0);
      node0.getChangeTime();
      node0.isGetterDef();
      Node node2 = node1.cloneNode();
      node0.getExistingIntProp(3856);
      node2.wasEmptyNode();
      Node node3 = node2.removeChildren();
      String string0 = "com.google.javascript.rhino.jstype.FunctionType";
      node3.setString(string0);
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 3856
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1754, (-4485), 1754);
      node0.setSourceEncodedPositionForTree(1754);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(30, node0, node0, node0);
      node1.isQuotedString();
      node0.isOptionalArg();
      node0.setCharno(4095);
      node1.isDefaultCase();
      Node node2 = new Node((-2884), node1, 46, 30);
      node2.getSourceOffset();
      Node node3 = node1.copyInformationFrom(node0);
      node3.getChangeTime();
      node3.isGetterDef();
      node2.cloneNode();
      node1.getExistingIntProp(51);
      node3.wasEmptyNode();
      node2.removeChildren();
      String string0 = "com.google.javascript.rhino.jstype.FunctionType";
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(571, 0, 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-361));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.newString(71, "B>6_yzE{*F.)sRiN2i2", 52, (-558));
      Node node1 = new Node(36, node0, node0, 29, 42);
      Node node2 = new Node(112, node0, node1);
      node2.isOnlyModifiesThisCall();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newString(117, "prev is not a child of this node.", 880, 2346);
      Node node1 = new Node(71, node0, node0, node0, node0);
      node1.isSwitch();
      node0.isCatch();
      Node node2 = node0.getChildAtIndex(48);
      node1.isStringKey();
      node2.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = new Node(110);
      Node node1 = new Node(147, node0, node0, (-471), 48);
      node1.isOnlyModifiesArgumentsCall();
      Node.extractCharno(718);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isSyntheticBlock();
      node1.children();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType jSType0 = null;
      TemplateType templateType0 = JSType.toMaybeTemplateType((JSType) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
      immutableList0.parallelStream();
      templateType0.unboxesTo();
      // Undeclared exception!
      try { 
        templateType0.getTypesUnderShallowEquality(jSType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = Node.newNumber((-631.0815686078341), 8199, Integer.MAX_VALUE);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node1 = new Node(0, node0, node0, 51, 15);
      nodeArray0[6] = node1;
      nodeArray0[7] = node0;
      Node node2 = new Node(77, node0, node0, node0);
      nodeArray0[0].isBlock();
      nodeArray0[6].isLabel();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      Node node1 = new Node(92, node0, node0, node0);
      node1.hasChildren();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      int int0 = (-4355);
      Node[] nodeArray0 = new Node[9];
      Node node0 = Node.newNumber((double) (-4355));
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -4355.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newNumber((-631.0815686078341), 8199, Integer.MAX_VALUE);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node(0, nodeArray0[5], node0, 51, 15);
      nodeArray0[6] = node1;
      nodeArray0[7] = node0;
      int int0 = 0;
      int int1 = 0;
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = new Node(435);
      node0.getSourceOffset();
      node0.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      Node node1 = new Node(31, node0, 4095, 39);
      node1.getDirectives();
      node0.setSourceFileForTesting(",:EK&hO]p");
      node0.isRegExp();
      node0.isFalse();
      Node node2 = new Node(40, node1);
      node2.getJSDocInfo();
      node2.isStringKey();
      node1.isDelProp();
      Node.newNumber(1754.0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("M8lrTnL%");
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1i7Qw9`syp(8b8I", 40, 42);
      Node node3 = node0.cloneTree();
      node2.setOptionalArg(false);
      Node node4 = node3.cloneTree();
      node2.getSourceOffset();
      Node node5 = Node.newString(50, "el/Cjzv/:oJA");
      node5.siblings();
      node1.addChildrenToFront(node4);
      node1.isIf();
      node2.isIf();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.isEmpty();
      node3.addChildToFront(node0);
      node4.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newString(117, "prev is not a child of this node.", 880, 2346);
      Node node1 = new Node(92, node0, node0, node0, node0);
      node0.isLocalResultCall();
      node0.isCatch();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isSyntheticBlock();
      node1.children();
      Node node2 = Node.newString("ggrgGZ(NoJ");
      Node node3 = new Node((-91), node2, node2, node2);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node2;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node3;
      nodeArray0[5] = node3;
      nodeArray0[6] = node1;
      Node node4 = new Node((-172), nodeArray0, 42, 1);
      node4.isDebugger();
      nodeArray0[6].isEquivalentToShallow(nodeArray0[4]);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags5.clearAllFlags();
      Node node0 = Node.newString(880, "prev is not a child of this node.", (-2583), 880);
      node0.isOnlyModifiesThisCall();
      node0.isInc();
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(48, node0, node0, 31, 40);
      node1.isFor();
      node1.isEquivalentTo(node0);
      node0.getDouble();
      String string0 = "new:";
      try { 
        node0.setString(string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[9];
      JSTypeNative jSTypeNative0 = JSTypeNative.NULL_VOID;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType0, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      JSType jSType1 = jSTypeRegistry0.getType("Not declared as a constructor");
      jSTypeArray0[1] = null;
      Vector<TemplateType> vector0 = new Vector<TemplateType>(0, 300);
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterable<? extends TemplateType>) vector0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Iterable<? extends JSType>) immutableList0);
      TemplateTypeMap templateTypeMap0 = jSTypeRegistry0.createTemplateTypeMap(immutableList0, immutableList1);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, templateTypeMap0);
      JSType jSType2 = templateTypeMapReplacer0.caseNumberType();
      jSTypeArray0[2] = jSType2;
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) functionType0, immutableList1);
      jSTypeArray0[3] = (JSType) templatizedType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Unknown class name", node0, jSType1);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      // Undeclared exception!
      try { 
        enumElementType0.getOwnerFunction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setQuotedString();
      // Undeclared exception!
      try { 
        node0.isIn();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      Node node1 = new Node(0, node0, node0, node0, node0, 110, 47);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.newString(52, "com.google.javascript.rhino.Node$StringNode", 71, 147);
      node1.isOnlyModifiesThisCall();
      node_SideEffectFlags2.clearSideEffectFlags();
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("M8lrTnL%");
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1i7Qw9`syp(8b8I", 40, 42);
      Node node3 = node0.cloneTree();
      node2.setOptionalArg(false);
      Node node4 = node3.cloneTree();
      node2.getSourceOffset();
      node1.siblings();
      node1.addChildrenToFront(node4);
      node1.isIf();
      node0.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.isEmpty();
      node3.addChildToFront(node0);
      node4.isNoSideEffectsCall();
      node3.detachChildren();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags6.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags9 = node_SideEffectFlags8.setMutatesArguments();
      node_SideEffectFlags7.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags10 = node_SideEffectFlags9.clearAllFlags();
      node_SideEffectFlags10.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags5.clearAllFlags();
      Node node0 = Node.newString((-2583), "prev is not a child of this node.", 1815, 309);
      node0.isOnlyModifiesThisCall();
      node0.isInc();
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      Node node1 = new Node(55, node0, node0, node0, 690, (-536870912));
      node1.getParent();
      Node node2 = new Node(43, (Node) null, node1, (Node) null, 8388608, 779);
      node0.removeChild(node2);
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1754, (-4485), 1754);
      node0.setSourceEncodedPositionForTree(0);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(1754, node0, node0, node0);
      node0.isQuotedString();
      node1.isOptionalArg();
      node1.setCharno((-129));
      InputId inputId0 = new InputId("");
      node1.setInputId(inputId0);
      node1.isDefaultCase();
      node0.getSourceOffset();
      Node node2 = node1.copyInformationFrom(node0);
      node1.isEquivalentTo(node2, false, true, false);
      node0.getChangeTime();
      node0.isGetterDef();
      Node node3 = node1.cloneNode();
      node0.getExistingIntProp(3856);
      node3.wasEmptyNode();
      Node node4 = node3.removeChildren();
      String string0 = "com.google.javascript.rhino.jstype.FunctionType";
      node4.setString(string0);
      node3.getString();
      node4.addChildrenToFront(node1);
      // Undeclared exception!
      try { 
        node3.isUnscopedQualifiedName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 3856
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setAllFlags();
      Node node0 = new Node(435);
      node0.getSourceOffset();
      node0.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      Node node1 = new Node(31, node0, 4095, 39);
      node1.getDirectives();
      node0.setSourceFileForTesting(",:EK&hO]p");
      node_SideEffectFlags0.setAllFlags();
      node1.cloneTree();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(1073741823);
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node0.isCase();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = "o_LL^JjkN('rCKB~l";
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.error("", "", 5760, (-562));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("", 1665, 5760);
      node0.setSideEffectFlags(node_SideEffectFlags0);
      node0.isInc();
      node0.isFromExterns();
      String string1 = "com.google.javascript.rhino.Node$NumberNode";
      node0.setSourceFileForTesting(string1);
      // Undeclared exception!
      try { 
        node0.mayMutateArguments();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isSyntheticBlock();
      node1.children();
      Node node2 = Node.newString("ggrgGZ(NoJ");
      Node node3 = new Node((-91), node2, node2, node2);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node2;
      nodeArray0[1] = node0;
      node2.setSourceFileForTesting("o4U");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("empty_block");
      node_FileLevelJsDocBuilder0.append("empty_block");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder1.append("ggrgGZ(NoJ");
      Node.newString(39, "", 147, 1321);
      node0.isOnlyModifiesThisCall();
      node2.isInc();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags5.clearAllFlags();
      Node node0 = Node.newString("@Q67D,??KH/Mi.4~Xx:");
      Node node1 = new Node((-1360), node0, node0, node0);
      Node node2 = new Node(2167, node1, node0, node0, 29, 47);
      Node node3 = new Node(node1.JSDOC_INFO_PROP, node0);
      node3.hasChildren();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      node0.getStaticSourceFile();
      node0.getDirectives();
      Node node1 = Node.newString("#o-T+}d%=S", 47, 2146260010);
      node1.isRegExp();
      node1.isFalse();
      node0.isLocalResultCall();
      node0.getJSDocInfo();
      node0.isEmpty();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1754);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags6.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags7.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags8.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node0 = new Node(1754, 8199, 880);
      node0.isName();
      node0.isInc();
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(110);
      node0.children();
      Node node1 = new Node(147, node0, node0, (-471), 48);
      node1.useSourceInfoFrom(node0);
      node1.isOnlyModifiesArgumentsCall();
      Node.extractCharno(718);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newString((-5209), "StringNode: str is null");
      node0.type = 698;
      Node node1 = new Node(71, node0, node0, node0, 48, 2);
      node1.isQualifiedName();
      node1.toString();
      node1.getDouble();
      boolean boolean0 = false;
      node1.putBooleanProp(node0.FLAG_LOCAL_RESULTS, boolean0);
      node1.getLength();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 71
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      Node node1 = new Node(0, node0, node0, node0, node0, 110, 47);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node2 = Node.newString(52, "com.google.javascript.rhino.Node$StringNode", 71, 147);
      node2.getString();
      node1.isOnlyModifiesThisCall();
      node2.isGetterDef();
      node2.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      node0.getDirectives();
      node0.setSourceFileForTesting("");
      node0.isRegExp();
      node0.isFalse();
      node0.getJSDocInfo();
      node0.isEmpty();
      node0.putIntProp((-4968), 112);
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1754);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags6.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags7.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags8.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node0 = new Node(1754, 8199, 880);
      node0.isName();
      node0.isInc();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isLabelName();
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      JSType jSType0 = templateType0.unboxesTo();
      Node node1 = new Node(0, node0, node0, node0, node0, (-2016), 31);
      node1.clonePropsFrom(node0);
      Node node2 = Node.newNumber((double) 16);
      node2.getNext();
      node2.isGetterDef();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter.getMessage0("ay");
      linkedList0.add((JSType) templateType0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionType((ObjectType) templateType0, jSType0, (List<JSType>) arrayList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property ay
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseStringType();
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.setCharno(0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.setNoCompile(false);
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = Node.newString("Not declared as a constructor");
      Node node3 = new Node(85, node2, node0, node1);
      node0.hasChildren();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString(4, "The new child node has siblings.");
      node1.getDirectives();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node.newString(1, "", (-294), 3012);
      InputId inputId0 = new InputId("com.google.javascript.rhino.jstype.PropertyMap$1");
      node0.setInputId(inputId0);
      node0.getChangeTime();
      node1.setSideEffectFlags((Node.SideEffectFlags) null);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1754, (-4485), 1754);
      node0.setSourceEncodedPositionForTree(1754);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(30, node0, node0, node0);
      node1.isQuotedString();
      node1.isOptionalArg();
      node0.setCharno(4095);
      node1.isDefaultCase();
      Node node2 = new Node(55, node1);
      node2.getSourceOffset();
      Node node3 = node1.copyInformationFrom(node0);
      Node node4 = new Node(42, node3);
      node1.getExistingIntProp(node3.STATIC_SOURCE_FILE);
      node3.wasEmptyNode();
      // Undeclared exception!
      try { 
        node2.removeChildren();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newNumber(1.2, 154, 4);
      node0.getAncestors();
      Node node1 = Node.newString("3y3W_ex", 43, 37);
      node1.removeFirstChild();
      Node node2 = node0.cloneTree();
      Node.newNumber(0.0);
      node0.hasOneChild();
      node0.getInputId();
      node1.isCatch();
      node2.isCase();
      Node node3 = node2.getChildAtIndex(1026);
      double double0 = (-2601.54143);
      Node node4 = Node.newNumber(double0, node3.ORIGINALNAME_PROP, node3.QUOTED_PROP);
      node2.addChildToFront(node4);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node((-4337), (-786), 98);
      node0.putBooleanProp(2346, true);
      node0.isQualifiedName();
      node0.getIntProp((-786));
      node0.isFor();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("r~\\=%.KfQDghvXT1.", node0, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      String string0 = "z.QLl3(I!rLZf";
      JSDocInfo jSDocInfo0 = enumElementType0.getOwnPropertyJSDocInfo(string0);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.Node$StringNode";
      Node node0 = Node.newString("com.google.common.collect.ImmutableSet", 245, 245);
      Node node1 = new Node((-633), node0, (Node) null, node0, node0, 43, 39);
      int int0 = 111;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.setThrows();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      Node node1 = new Node(0, node0, node0, node0, node0, 110, 47);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node1.getString();
      node1.isOnlyModifiesThisCall();
      node1.isGetterDef();
      node1.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-4355));
      InputId inputId0 = new InputId("");
      node0.getChangeTime();
      node0.setInputId(inputId0);
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = new Node((-4337), (-786), 98);
      node0.putBooleanProp(2346, true);
      node0.isQualifiedName();
      node0.getIntProp((-786));
      node0.isFor();
      Node node1 = new Node((-825), node0, node0, node0, 53, 55);
      Node node2 = node0.getParent();
      node0.removeChild(node2);
      int int0 = 4;
      int int1 = 3631;
      int int2 = (-679);
      Node node3 = new Node(int0, int1, int2);
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags5.clearAllFlags();
      Node node0 = new Node(40, (Node[]) null, 42, 0);
      node0.isDebugger();
      int int0 = 8388608;
      String string0 = "A&++>I7DA";
      // Undeclared exception!
      try { 
        Node.newString(int0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags5.clearAllFlags();
      Node node0 = Node.newString(880, "prev is not a child of this node.", (-2583), 880);
      node0.isOnlyModifiesThisCall();
      node0.isInc();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node.newNumber((double) 92, (-461), (-461));
      Node node0 = Node.newString((-24), "side_effect_flags", (-536870912), 48);
      node0.putBooleanProp(57, false);
      Node node1 = null;
      Node node2 = new Node(1, node0, node0, (Node) null);
      node2.addChildrenAfter(node1, node1);
      String string0 = null;
      Node.newString(string0);
      int int0 = (-3500);
      Node node3 = new Node(int0, node0, node2, node1);
      // Undeclared exception!
      try { 
        node3.isBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      Node node1 = new Node(0, node0, node0, node0, node0, 110, 47);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.newString(52, "com.google.javascript.rhino.Node$StringNode", 71, 147);
      node_SideEffectFlags2.clearSideEffectFlags();
      node0.isBreak();
      node1.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(110, node0, node0, node0, node0, 8, 110);
      node0.getSourceOffset();
      node0.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node1.setDirectives(treeSet0);
      Node node2 = new Node(1, node1, 152, 2547);
      node2.addChildrenToBack(node0);
      node0.getDirectives();
      String string0 = "com.google.javascript.rhino.Node$NumberNode";
      node2.setSourceFileForTesting(string0);
      node2.isRegExp();
      // Undeclared exception!
      try { 
        node0.isFalse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1754);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags6.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags7.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags8.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      Node node0 = Node.newNumber((double) 1754);
      Node node1 = Node.newString(155, "com.google.common.base.CharMatcher$RangesMatcher");
      node0.addChildrenToBack(node1);
      node0.getDirectives();
      Node.newString("'", 32, 47);
      node1.setSourceFileForTesting("_>+Z_G|)ib");
      node0.isRegExp();
      node1.isFalse();
      node1.getJSDocInfo();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      Node node1 = new Node(0, node0, node0, node0, node0, 110, 47);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node2 = Node.newString(52, "com.google.javascript.rhino.Node$StringNode", 71, 147);
      node1.isOnlyModifiesThisCall();
      node2.setVarArgs(false);
      node1.isEmpty();
      node2.addChildToFront(node0);
      node1.isNoSideEffectsCall();
      int int0 = 1703;
      node0.setSourceEncodedPositionForTree(int0);
      node1.getCharno();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node3.setType(1369);
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = Node.newNumber(0.0, 51, 57);
      node5.addChildrenToFront(node6);
      node0.isIf();
      node6.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node5.getIndexOfChild(node3);
      node2.children();
      node3.copyInformationFromForTree(node4);
      node3.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      Node node0 = Node.newString(880, "prev is not a child of this node.", 880, 2346);
      Node node1 = new Node(71, node0, node0, node0, node0);
      node1.isSwitch();
      node0.isCatch();
      node1.isStringKey();
      node0.getJSDocInfo();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isLabelName();
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      JSType jSType0 = templateType0.unboxesTo();
      node0.clonePropsFrom(node0);
      Node node1 = Node.newNumber((double) 16);
      node1.getNext();
      node1.isGetterDef();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter.getMessage0("ay");
      linkedList0.add((JSType) templateType0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionType((ObjectType) templateType0, jSType0, (List<JSType>) arrayList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property ay
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = new Node(435);
      node0.getSourceOffset();
      node0.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      Node node1 = new Node(31, node0, 4095, 39);
      node1.getDirectives();
      node0.isRegExp();
      node0.setJSType((JSType) null);
      node0.isFalse();
      Node node2 = new Node(40, node1);
      node2.isStringKey();
      node1.isDelProp();
      Node.newNumber(1754.0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.setVarArgs(true);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      node0.setDirectives(set0);
      Node node1 = new Node(15, node0, 108, 2015);
      node1.getDirectives();
      node1.setSourceFileForTesting("");
      node0.isRegExp();
      node0.isFalse();
      Node node2 = new Node(373, node1);
      node0.getJSDocInfo();
      node0.isStringKey();
      node1.isDelProp();
      Node.newNumber((-1.0));
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("M8lrTnL%");
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1i7Qw9`syp(8b8I", 40, 42);
      Node node3 = node0.cloneTree();
      node2.setOptionalArg(false);
      Node node4 = node3.cloneTree();
      node2.getSourceOffset();
      node1.siblings();
      node1.addChildrenToFront(node4);
      node4.checkTreeTypeAwareEqualsImpl(node1);
      node2.setString("M8lrTnL%");
      boolean boolean0 = node1.isBreak();
      node1.setDouble(40);
      boolean boolean1 = true;
      node4.isEquivalentTo(node3, boolean0, boolean0, boolean1);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString(" is not a string node");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.getString();
      node0.isNew();
      Node node1 = new Node(57, node0, 38, 124);
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node3.setType(1369);
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = Node.newNumber(0.0, 51, 57);
      node5.addChildrenToFront(node6);
      node6.getBooleanProp(55);
      node0.isIf();
      node6.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node5.getIndexOfChild(node3);
      node2.children();
      node0.hasOneChild();
      node1.checkTreeTypeAwareEqualsImpl(node5);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(4095, node0, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 47);
      Node node4 = Node.newString("", 382, 4009);
      node4.setVarArgs(true);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node1.setDirectives(treeSet0);
      Node node5 = new Node((-975), node3, 522, 46);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node6 = new Node(52, 55, 38);
      node5.isName();
      node2.isInc();
      node5.isStringKey();
      node1.getJSType();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(11, 205);
      Node node1 = new Node(57, node0, node0, node0, node0, 124, 57);
      node0.getSourceOffset();
      Node node2 = node0.cloneTree();
      node0.setOptionalArg(false);
      Node node3 = node2.cloneTree();
      node3.setType(37);
      node3.getString();
      String string0 = "IsEqualTo(";
      jSTypeRegistry0.isForwardDeclaredType(string0);
      SimpleErrorReporter.getMessage(jSTypeRegistry0.OBJECT_INDEX_TEMPLATE, jSTypeArray0);
      // Undeclared exception!
      try { 
        node1.getSourceOffset();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 11
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newString("", 302, 83);
      Node node1 = new Node(302, node0, node0, node0);
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = new Node((-4355));
      node0.getSideEffectFlags();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = Node.newNumber(0.0, 37, 29);
      node1.getString();
      node0.isNew();
      Node node2 = null;
      int int0 = 29;
      Node node3 = new Node(node0.DIRECTIVES, node2, int0, node1.OPT_ARG_NAME);
      // Undeclared exception!
      try { 
        node1.checkTreeTypeAwareEqualsImpl(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 37 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1754);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags6.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags7.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags8.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      Node node0 = Node.newNumber((double) 1754);
      Node node1 = Node.newString(155, "com.google.common.base.CharMatcher$RangesMatcher");
      node0.addChildrenToBack(node1);
      node0.getDirectives();
      node1.setSourceFileForTesting("_>+Z_G|)ib");
      node0.isRegExp();
      node1.isFalse();
      node1.hasOneChild();
      node0.checkTreeTypeAwareEqualsImpl((Node) null);
      node1.removeChildAfter(node0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node3.setType(1369);
      node2.getString();
      int int0 = Node.QUOTED_PROP;
      node2.siblings();
      Node node6 = Node.newNumber(0.0, 51, 57);
      node5.addChildrenToFront(node6);
      node6.getBooleanProp(55);
      node0.isIf();
      node0.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node5.getIndexOfChild(node3);
      node2.children();
      node0.hasOneChild();
      node1.checkTreeTypeAwareEqualsImpl(node5);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      node0.getParent();
      node0.removeChild((Node) null);
      int int0 = (-1468);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      Node node0 = Node.newString(880, "prev is not a child of this node.", 880, 2346);
      Node node1 = new Node(71, node0, node0, node0, node0);
      node1.isSwitch();
      node0.isCatch();
      node1.isDo();
      node0.getJSDocInfo();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node3.setType(1369);
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = new Node((-2594), node5, (-745), 2075);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node7 = new Node((-1521), 30, 15);
      node2.isName();
      node5.isInc();
      node3.isStringKey();
      node5.isAssign();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(11, (-2019));
      Node node1 = new Node(57, node0, node0, node0, node0, 124, 57);
      node0.getSourceOffset();
      Node node2 = Node.newString("5wDCr", 46, 48);
      node2.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node2.setDirectives(treeSet0);
      Node node3 = Node.newNumber((double) 54, 15, 39);
      node3.addChildrenToFront(node2);
      node0.getBooleanProp((-812));
      node2.isIf();
      node0.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node2.getIndexOfChild(node0);
      node1.children();
      node1.hasOneChild();
      node1.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node.newString(1234, "Object#Element", 1234, 44);
      jSTypeRegistry0.getTypesWithProperty("already specified useForNull");
      Node node1 = Node.newNumber((double) 1, 81, 1851);
      node0.isVar();
      node1.isInc();
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      Node node1 = new Node(92, node0, node0, node0);
      node1.checkTreeEqualsImpl(node0);
      node1.hasChildren();
      node1.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 33);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("M8lrTnL%");
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node2 = new Node(2, node0, node0, 38, 0);
      node2.isOnlyModifiesArgumentsCall();
      Node.extractCharno((-1764));
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      int int0 = (-2449);
      Node node5 = new Node((-2449), node4, node2, node1, (Node) null);
      int int1 = 38;
      Node node6 = new Node(int1, node4, node5, node1, node2.LENGTH, node3.STATIC_SOURCE_FILE);
      node1.getParent();
      node6.removeChild(node4);
      int int2 = 113;
      int int3 = 33;
      Node node7 = null;
      try {
        node7 = new Node(int0, int2, int3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 33);
      node0.addSuppression("");
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      Node node1 = new Node(0, node0, node0, node0, node0, 110, 47);
      Node node2 = Node.newString(52, "com.google.javascript.rhino.Node$StringNode", 71, 147);
      node2.getString();
      node1.isOnlyModifiesThisCall();
      node2.isGetterDef();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      node3.isUnscopedQualifiedName();
      node1.getAncestor(1597);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      node0.getDirectives();
      node0.setSourceFileForTesting("");
      node0.isRegExp();
      node0.isFalse();
      node0.getJSDocInfo();
      node0.isEmpty();
      node0.getQualifiedName();
      node0.setSideEffectFlags((-558));
      int int0 = (-4968);
      int int1 = 112;
      // Undeclared exception!
      try { 
        node0.putIntProp(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newString("\u0007f]fHYd]u9^<N");
      Node node1 = Node.newString(2, "\u0007f]fHYd]u9^<N", 2189, 13);
      node0.replaceChild(node1, node1);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newString(0, "", 5760, (-765));
      Node node1 = new Node(0, node0, node0, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Node node2 = Node.newString("", 9, 47);
      Node node3 = new Node(37, node2, node2, node0);
      int int0 = 119;
      Node node4 = new Node(int0, node1);
      node4.isDebugger();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      node0.getDirectives();
      node0.setSourceFileForTesting("");
      node0.isRegExp();
      node0.isFalse();
      node0.getJSDocInfo();
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node node1 = new Node(154, 32, 48);
      node1.isName();
      node0.isInc();
      node1.isStringKey();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      node0.getDirectives();
      node0.setSourceFileForTesting("");
      node0.isFalse();
      node0.getJSDocInfo();
      node0.isEmpty();
      node0.putIntProp((-4968), 112);
      node0.isCall();
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newNumber((double) 112, 53, 42);
      node0.addChildrenToFront(node1);
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = new Node((-3514));
      int int0 = 48;
      Node node1 = Node.newNumber((-1.0));
      node1.setLength(50);
      node0.addChildBefore(node1, node1);
      int int1 = 11;
      Node node2 = null;
      try {
        node2 = new Node(int0, node0, node0, int1, node0.DIRECT_EVAL);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 102, 125);
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getProp(37);
      node0.isAssignAdd();
      node0.isAnd();
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.error("", "y< c-m2VwLo/6]l", 1665, (-182));
      simpleErrorReporter0.error("", "", 5760, (-562));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-562));
      Node node0 = Node.newString(1665, "", 44, 533);
      node0.getString();
      node0.isNew();
      Node node1 = new Node(54, node0, 30, 3144);
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("mUIiDD\")&y764", 30, 44);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("z(_S}wCb");
      Node node1 = Node.newString("mUIiDD\")&y764");
      node1.addChildrenToBack(node0);
      Node node2 = Node.newString("mUIiDD\")&y764", (-5260), 811);
      Node node3 = node0.cloneTree();
      boolean boolean0 = false;
      boolean boolean1 = false;
      node2.setOptionalArg(false);
      Node node4 = node0.cloneTree();
      node0.getSourceOffset();
      node1.siblings();
      node2.addChildrenToFront(node1);
      node4.checkTreeTypeAwareEqualsImpl(node2);
      node2.setString("CharMatcher.forPredicate(");
      node4.isBreak();
      node2.setDouble(576.7549316721082);
      boolean boolean2 = true;
      node2.isEquivalentTo(node0, boolean0, boolean2, boolean1);
      node0.isGetProp();
      node4.getIndexOfChild(node3);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(30, node0, node0, 37, 12);
      node0.isStringKey();
      node0.isEquivalentTo(node1);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEW 37 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node3.setType(1369);
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = Node.newNumber(0.0, 51, 57);
      node5.addChildrenToFront(node6);
      node0.isIf();
      node6.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node5.getIndexOfChild(node3);
      node2.children();
      node5.setIsSyntheticBlock(true);
      node3.isEquivalentToShallow(node4);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      node0.getDirectives();
      node0.setSourceFileForTesting("");
      Node node1 = Node.newString("-a5@", 57, 3097);
      node0.addChildToFront(node1);
      node0.isFalse();
      node0.getJSDocInfo();
      node0.putIntProp((-4968), 112);
      node0.isCall();
      node0.isOnlyModifiesThisCall();
      Node node2 = Node.newNumber((double) 112, 53, 42);
      node2.addChildToBack(node0);
      node0.addChildrenToFront(node2);
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = new Node(435);
      node0.getSourceOffset();
      node0.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      Node node1 = new Node(31, node0, 4095, 39);
      node1.getDirectives();
      node0.setSourceFileForTesting(",:EK&hO]p");
      node0.isRegExp();
      node0.isFalse();
      Node node2 = new Node(40, node1);
      node2.getJSDocInfo();
      node2.isStringKey();
      node1.isDelProp();
      Node.newNumber(1754.0);
      node0.toString(false, false, false);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = new Node(2075, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node3.setType(1369);
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = Node.newNumber(0.0, 51, 57);
      node5.addChildrenToFront(node6);
      node0.isIf();
      node6.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node5.getIndexOfChild(node3);
      node2.children();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setWasEmptyNode(false);
      node0.getProp(37);
      Node node1 = new Node(38, node0, node0, node0);
      node0.useSourceInfoFrom(node1);
      node0.isAssignAdd();
      node0.isAnd();
      node0.isParamList();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("M8lrTnL%");
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node.newString(1646, "com.google.javascript.rhino.Node$StringNode", 52, 101);
      Node node2 = new Node(861);
      node2.replaceChild(node0, node1);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      Node node0 = new Node(71);
      Node node1 = new Node(71, node0, node0, node0, node0);
      node1.isSwitch();
      node0.isWith();
      node1.isDo();
      node0.getJSDocInfo();
      node1.isWith();
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.areAllFlagsSet();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node node0 = Node.newNumber((double) 0);
      node0.setString(".Lo@e|+t6T?12_M");
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = Node.newString("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setCharno((-129));
      node0.isContinue();
      node0.getSourceOffset();
      Node node1 = new Node(4095, node0, node0, node0, node0, (-1384), 15);
      Node node2 = node1.copyInformationFrom(node0);
      node0.getChangeTime();
      node2.isGetterDef();
      Node node3 = node2.cloneNode();
      node3.getExistingIntProp(116);
      node2.wasEmptyNode();
      node3.removeChildren();
      String string0 = "J_mIo";
      node2.setString(string0);
      // Undeclared exception!
      try { 
        node3.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 116
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      InputId inputId0 = new InputId("");
      Node node0 = new Node(40, 154, 154);
      node0.getChangeTime();
      node0.setInputId(inputId0);
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isLabelName();
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      templateType0.unboxesTo();
      Node node1 = new Node(47, node0, node0, node0, node0, 2132, 38);
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = Node.newNumber(4350.49097);
      node3.getNext();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = Node.newString(2995, "Named type with empty name component", (-1270), 22);
      Node node5 = Node.newString(16, "");
      Node node6 = new Node((-1122), node1, node4, node5, node2);
      node6.isOnlyModifiesThisCall();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      ImmutableList.of("", "", "Object#Key", "The new child node already has a parent.", "TOP_LEVEL_PROTOTYPE", "Object#Key");
      Node node1 = Node.newString(1234, "Object#Element", 1234, 44);
      jSTypeRegistry0.getTypesWithProperty("already specified useForNull");
      Node node2 = Node.newNumber((double) 1, 81, 1851);
      node0.isVar();
      node1.isFromExterns();
      node2.getChildAtIndex((-647));
      node1.isStringKey();
      node2.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = Node.newString(1234, "Object#Element", 1234, 44);
      node1.removeChildren();
      node0.setString("com.google.javascript.rhino.jstype.FunctionType");
      int int0 = 887;
      Node node2 = new Node(int0);
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = Node.newString("@");
      node0.getProp(37);
      node0.isAssignAdd();
      node0.hasMoreThanOneChild();
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = Node.newString(4, "");
      Node node1 = new Node(48, node0, node0, 114, 52);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node0 = new Node(0, 1561, 0);
      Node node1 = Node.newString((-1134), "com.google.common.collect.RegularImmutableAsList");
      Node node2 = new Node(0, node0, node0, node1, 65536, 2464);
      jSDocInfo0.setOriginalCommentPosition(57);
      Node node3 = new Node(1561, node2, node2, (-3563), 37);
      node3.mayMutateArguments();
      Node.newString(12, "com.google.common.collect.RegularImmutableAsList", 2329, 524288);
      node3.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      Node node4 = node2.getLastChild();
      node4.isQualifiedName();
      node0.isIn();
      node3.isCast();
      Node node5 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node3.hasChild(node5);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newString((-1790), "");
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      node0.getJsDocBuilderForNode();
      node0.setSourceFileForTesting("u@Bi];Q?~&?N^B:O");
      Node node1 = null;
      node0.replaceChildAfter((Node) null, (Node) null);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isVarArgs();
      // Undeclared exception!
      try { 
        node0.getSideEffectFlags();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newString("\u0007f]fHYd]u9^<N");
      node0.isOptionalArg();
      node0.isTrue();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1493);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node node0 = Node.newNumber(0.0);
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      Node node1 = new Node(38, node0, node0, node0);
      node1.getSideEffectFlags();
      node1.isDebugger();
      node1.addChildToBack(node0);
      // Undeclared exception!
      try { 
        node0.addSuppression(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      Node node1 = new Node(92, node0, node0, node0);
      InputId inputId0 = new InputId("");
      node0.getChangeTime();
      node0.getInputId();
      node1.setInputId((InputId) null);
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-4355));
      node0.getProp(147);
      Node node1 = new Node((-1891), node0, node0, node0);
      node1.useSourceInfoFrom(node0);
      node0.isAnd();
      Node node2 = Node.newString("    ");
      node2.isParamList();
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-4355));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node2 = new Node(42, node1, node1, 4, (-2599));
      node2.isStringKey();
      Node node3 = new Node(12, node2, node0);
      node3.isEquivalentTo(node2);
      node0.getDouble();
      node3.setString("Object#Key");
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      InputId inputId0 = new InputId("%n~()'1%J!SBn@U0n");
      int int0 = 8;
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newNumber((double) 8, 8, 8);
      nodeArray0[0] = node0;
      Node node1 = new Node((-20), node0);
      nodeArray0[1] = node1;
      Node node2 = Node.newString(15, "");
      nodeArray0[2] = node2;
      Node node3 = jSTypeRegistry1.createParameters((List<JSType>) immutableList0);
      nodeArray0[3] = node3;
      node1.clonePropsFrom(node1);
      Node node4 = new Node(571, nodeArray0);
      int int1 = 53;
      Node node5 = new Node(int0, node4, node4, node2, int1, node4.SIDE_EFFECT_FLAGS);
      node5.getChangeTime();
      // Undeclared exception!
      try { 
        nodeArray0[0].setInputId(inputId0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = new Node(39, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node3.setType(1369);
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = new Node((-2594), node5, (-745), 2075);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node7 = new Node((-1521), 30, 15);
      node2.isName();
      node5.isInc();
      node3.isStringKey();
      node5.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = Node.newNumber(0.0, 51, 57);
      node5.addChildrenToFront(node6);
      node0.isIf();
      node6.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node3.isEmpty();
      node3.addChildToFront(node2);
      node0.getJSDocInfo();
      node1.isArrayLit();
      node6.isNew();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getProp(37);
      node0.isQualifiedName();
      node0.toString();
      node0.isOr();
      node0.isNull();
      Node.mergeLineCharNo((-1496), 4095);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node1.setWasEmptyNode(false);
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = Node.newNumber(0.0, 51, 57);
      node5.addChildrenToFront(node6);
      node0.isIf();
      node6.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node3.isEmpty();
      node3.addChildToFront(node2);
      node6.isNoSideEffectsCall();
      node5.setSourceEncodedPositionForTree(38);
      node0.getChildAtIndex(310);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      int int0 = (-899);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-899), (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newString(117, "prev is not a child of this node.", 880, 2346);
      Node node1 = new Node(71, node0, node0, node0, node0);
      node0.isOnlyModifiesArgumentsCall();
      node0.isCatch();
      node1.removeChild(node0);
      Node node2 = node0.getChildAtIndex(48);
      node1.isStringKey();
      node2.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isQualifiedName();
      node0.toString();
      node0.isOr();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newString(92, "#o-T+}d%=S");
      Node node1 = new Node(92, node0, node0, node0);
      node1.checkTreeEqualsImpl(node0);
      node0.hasChildren();
      Node node2 = new Node(30, 31, 4);
      node1.isThrow();
      node1.setString((String) null);
      node0.isNoSideEffectsCall();
      Node node3 = new Node(node1.LENGTH);
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1754);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags6.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags7.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags8.setThrows();
      node_SideEffectFlags8.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      Node node0 = Node.newNumber((double) 1754);
      Node node1 = Node.newString(155, "com.google.common.base.CharMatcher$RangesMatcher");
      node0.addChildrenToBack(node1);
      node0.getDirectives();
      node1.setSourceFileForTesting("_>+Z_G|)ib");
      node0.isRegExp();
      node1.isFalse();
      node1.getJSDocInfo();
      node1.isEmpty();
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 38);
      nodeArray0[0] = node0;
      Node node1 = new Node(38, nodeArray0);
      node0.siblings();
      node0.addChildrenToFront(node1);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.setString("prototype");
      node0.isBreak();
      // Undeclared exception!
      try { 
        node0.setDouble(node1.IS_NAMESPACE);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(11, 205);
      Node node1 = new Node(57, node0, node0, node0, node0, 124, 57);
      node0.getSourceOffset();
      Node node2 = Node.newString("5wDCr", 46, 48);
      node2.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node2.setDirectives(treeSet0);
      Node node3 = new Node((-1), node2, 36, 49);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node1.putIntProp(3235, 4);
      node2.isCall();
      node0.putProp(3235, node3);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1754);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags6.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags7.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags8.setThrows();
      node_SideEffectFlags8.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      Node node0 = Node.newNumber((double) 1754);
      Node node1 = Node.newString(155, "com.google.common.base.CharMatcher$RangesMatcher");
      node0.addChildrenToBack(node1);
      node0.getDirectives();
      node0.getDouble();
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(30, node0, node0, 37, 12);
      node0.isStringKey();
      node0.isEquivalentTo(node1);
      node1.setSourceFileForTesting("source_file");
      node0.isRegExp();
      node1.isFalse();
      node1.getJSDocInfo();
      node1.isEmpty();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      Node node1 = new Node(92, node0, node0, node0);
      node1.isNoSideEffectsCall();
      Node node2 = new Node(42);
      node1.isEquivalentTo(node2, false, false, false);
      node2.isOptionalArg();
      Node node3 = new Node(56, node1, node1, node1, node2);
      node3.isTrue();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 102, 125);
      Node node1 = new Node(461845907, node0, node0);
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(11, (-2019));
      Node node1 = new Node(57, node0, node0, node0, node0, 124, 57);
      node0.getSourceOffset();
      Node node2 = Node.newString("5wDCr", 46, 48);
      node2.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node2.setDirectives(treeSet0);
      Node node3 = Node.newNumber((double) 54, 15, 39);
      node3.addChildrenToFront(node2);
      node0.getBooleanProp((-812));
      node2.isIf();
      node0.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node2.getIndexOfChild(node0);
      node1.children();
      node1.hasOneChild();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node3.checkTreeEqualsImpl(node2);
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1i7Qw9`syp(8b8I", 40, 42);
      Node node3 = node0.cloneTree();
      node2.setOptionalArg(false);
      Node node4 = node3.cloneTree();
      node2.getSourceOffset();
      node1.siblings();
      node1.addChildrenToFront(node4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node node5 = new Node(43, (-1715), (-174));
      node4.isName();
      node0.isInc();
      node0.isStringKey();
      node3.isGetProp();
      node5.isName();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = new Node(39, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node3.setType(1369);
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = new Node((-2594), node5, (-745), 2075);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node0.checkTreeTypeAwareEqualsImpl(node6);
      node4.setString("Li");
      node3.isBreak();
      node6.setDouble(32);
      boolean boolean0 = true;
      boolean boolean1 = true;
      node2.isEquivalentTo(node6, boolean0, boolean0, boolean1);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1754, (-4485), 1754);
      node0.setSourceEncodedPositionForTree(1754);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(30, node0, node0, node0);
      node1.isQuotedString();
      node0.isOptionalArg();
      node0.setCharno(4095);
      node1.isDefaultCase();
      Node node2 = Node.newString("5wDCr", (-2002), 47);
      node1.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      Node node3 = Node.newNumber((double) 55, 321, 88);
      node1.addChildrenToFront(node2);
      node1.getBooleanProp(31);
      node1.isIf();
      node0.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      node3.isCast();
      node0.getParent();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(11, (-2019));
      Node node1 = new Node(47, 8, 56);
      node0.getSourceOffset();
      Node node2 = new Node(0, node0, 880, 50);
      node2.getSourceOffset();
      Node node3 = node0.copyInformationFrom(node2);
      node3.cloneNode();
      node0.getExistingIntProp(47);
      node0.wasEmptyNode();
      Node node4 = Node.newString(node3.FLAG_ARGUMENTS_UNMODIFIED, jSTypeRegistry0.OBJECT_ELEMENT_TEMPLATE);
      node4.removeChildren();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      // Undeclared exception!
      try { 
        node2.setDirectives(treeSet0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 47
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = Node.newString(92, "#o-T+}d%=S");
      Node node1 = new Node(92, node0, node0, node0);
      node1.checkTreeEqualsImpl(node0);
      node0.hasChildren();
      Node node2 = new Node(30, 31, 4);
      node0.setQuotedString();
      node1.isThrow();
      node1.isAssignAdd();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = new Node(3);
      Node node1 = new Node(887, node0, node0, node0, node0, 718, 55);
      node1.removeFirstChild();
      node1.getIntProp(24);
      node1.detachChildren();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = new Node(42);
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1754, (-4485), 1754);
      node0.setSourceEncodedPositionForTree(1754);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(30, node0, node0, node0);
      node1.isQuotedString();
      node0.isOptionalArg();
      node0.setCharno(4095);
      node1.isDefaultCase();
      node1.getSourceOffset();
      Node node2 = node1.copyInformationFrom(node0);
      node1.cloneNode();
      node1.getExistingIntProp(51);
      node2.wasEmptyNode();
      node0.removeChildren();
      TreeSet<String> treeSet0 = null;
      try {
        treeSet0 = new TreeSet<String>();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 51
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1i7Qw9`syp(8b8I", 40, 42);
      Node node3 = node0.cloneTree();
      node2.setOptionalArg(false);
      Node node4 = node3.cloneTree();
      node2.getSourceOffset();
      node1.siblings();
      node1.addChildrenToFront(node4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(8);
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node3.getIndexOfChild(node2);
      node3.children();
      node2.hasOneChild();
      Node node5 = Node.newNumber(1.0, (-1377), 55);
      node5.checkTreeTypeAwareEqualsImpl(node2);
      node1.checkTreeEqualsImpl(node3);
      node1.isNE();
      node4.isIf();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newString("\u0007f]fHYd]u9^<N");
      node0.isOptionalArg();
      node0.isTrue();
      node0.isEquivalentTo((Node) null, false, false, true);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 38);
      nodeArray0[0] = node0;
      Node node1 = new Node(50, nodeArray0, (-1715), 20);
      node0.setType(46);
      node0.getSourceOffset();
      node0.siblings();
      Node node2 = Node.newNumber((double) 1, 146, 4095);
      Node node3 = Node.newString("");
      node2.addChildrenToFront(node3);
      node3.isIf();
      node0.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node1.getIndexOfChild(node0);
      node1.children();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.Node$StringNode";
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      Node node1 = new Node(0, node0, node0, node0, node0, 110, 47);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.checkTreeEquals(node0);
      int int0 = 71;
      Node node3 = Node.newString(node1.LENGTH, string0, int0, node1.POST_FLAG);
      node3.isGetterDef();
      // Undeclared exception!
      try { 
        node3.useSourceInfoIfMissingFromForTree(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(57, node0, node0, node0, node0, 124, 57);
      node0.getSourceOffset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      node1.isIn();
      node0.isCast();
      Node.newString("4#0r[G%7xmbuY|");
      Node.newNumber((double) 16, 46, 1);
      Node.newNumber(1754.0, 0, 37);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newString(112, "", 708, 2048);
      node0.isGetElem();
      Node node1 = Node.newString("\n\nSubtree1: ", 4095, (-880));
      node0.replaceChildAfter(node1, node1);
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newString("\u0007f]fHYd]u9^<N");
      Node node1 = new Node(4095, node0, node0, node0, 46, 30);
      node0.addChildrenToBack(node1);
      String string0 = ".1iC7Qw9`sypx8b8I";
      Node node2 = Node.newString(".1iC7Qw9`sypx8b8I", 55, (-2451));
      Node node3 = node2.cloneTree();
      node3.setOptionalArg(false);
      Node node4 = node1.cloneTree();
      node2.getSourceOffset();
      node1.siblings();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node4);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newString("^");
      node0.isNot();
      node0.srcrefTree((Node) null);
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = Node.newNumber((double) 47, (-461), 38);
      int int0 = 38;
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      Node node2 = new Node((-461), nodeArray0, 2, 0);
      nodeArray0[5] = node2;
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((double) 38);
      nodeArray0[0] = node0;
      Node node1 = new Node(35, 2048, 16);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.putBooleanProp(52, false);
      node1.addChildrenAfter(node2, node0);
      node1.isEquivalentToTyped(node0);
      nodeArray0[0].isOr();
      node2.isNull();
      String string0 = "Should not happen\n";
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isLabelName();
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      templateType0.unboxesTo();
      Node node1 = new Node(47, node0, node0, node0, node0, 42, 38);
      node0.clonePropsFrom(node1);
      Node node2 = Node.newString(2166, "FHiyL_ CV:B", 35, 42);
      node1.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      node2.isQualifiedName();
      node1.isIn();
      node0.isEmpty();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = Node.newString("The new child node has siblings.");
      Node node1 = new Node((-1496), node0, node0, node0);
      node0.checkTreeEquals(node1);
      node0.isAssignAdd();
      // Undeclared exception!
      try { 
        node0.hasMoreThanOneChild();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1496
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(11, (-2019));
      Node node1 = new Node(57, node0, node0, node0, node0, 124, 57);
      node0.isAssignAdd();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      Node node0 = Node.newString(880, "prev is not a child of this node.");
      node0.setOptionalArg(true);
      Node node1 = node0.cloneTree();
      node1.getSourceOffset();
      node0.siblings();
      Node node2 = new Node(32, (-1470), (-653));
      node2.addChildrenToFront(node1);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.setString("Not(");
      node0.isBreak();
      node2.setDouble(48);
      node1.isCast();
      node2.isVarArgs();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newString("The new child node has siblings.");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setAllFlags();
      node0.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setThrows();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setReturnsTainted();
      node_SideEffectFlags7.setMutatesArguments();
      Node node1 = Node.newNumber((double) 30);
      node1.setSideEffectFlags(node_SideEffectFlags3);
      // Undeclared exception!
      try { 
        node0.getJSDocInfo();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(12, node0, node0, node0, node0, 42, (-539));
      node0.removeFirstChild();
      Node node2 = new Node((-745), 8202, 0);
      node2.detachChildren();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(11, 205);
      Node node1 = new Node(57, node0, node0, node0, node0, 124, 57);
      node0.getSourceOffset();
      Node node2 = Node.newString("5wDCr", 46, 48);
      node2.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node2.setDirectives(treeSet0);
      Node node3 = Node.newString(47, ".h(", 43, 16);
      Node node4 = Node.newNumber((double) 51, 55, 32);
      node1.replaceChild(node4, node3);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = new Node(46, node2, 1, 31);
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node3.setType(1369);
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = new Node((-2594), node5, (-745), 2075);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node7 = new Node((-1521), 30, 15);
      node3.isAssignAdd();
      node5.isInc();
      node3.isStringKey();
      node5.isAssign();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1754);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags6.clearAllFlags();
      node_SideEffectFlags6.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags7.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags8.setThrows();
      node_SideEffectFlags8.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      Node node0 = Node.newNumber((double) 1754);
      Node node1 = Node.newString(155, "com.google.common.base.CharMatcher$RangesMatcher");
      node0.addChildrenToBack(node1);
      node1.isCatch();
      node0.isDo();
      node0.getJSDocInfo();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.copyInformationFromForTree(node0);
      node0.putBooleanProp(57, true);
      node0.addChildrenAfter(node0, node0);
      node0.isEquivalentToTyped(node0);
      // Undeclared exception!
      try { 
        node0.isOr();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newString("The new child node has siblings.");
      node0.addChildToBack((Node) null);
      int int0 = (-1496);
      Node node1 = null;
      try {
        node1 = new Node(int0, node0, node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = new Node(39, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node3.setType(1369);
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = new Node((-2594), node5, (-745), 2075);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node7 = new Node((-1521), 30, 15);
      node2.isName();
      node5.isInc();
      node3.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1113, nodeArray0, 1113, 1113);
      node0.siblings();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.setDisposedParameter("jsdoc_info");
      jSDocInfo0.getAssociatedNode();
      jSDocInfo0.documentReturn("`:4T~");
      Node node1 = node0.getChildBefore((Node) null);
      node0.setString("jsdoc_info");
      node0.isTypeOf();
      node0.isUnscopedQualifiedName();
      int int0 = (-258);
      // Undeclared exception!
      try { 
        node1.setSourceEncodedPosition(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1113
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newString(1627, "", 1627, 130);
      node0.isQualifiedName();
      node0.putBooleanProp(105, true);
      node0.isAnd();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newString(32, "prev is not a child of this node.");
      Node node1 = new Node(1700, node0, (-278), 880);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node.newNumber(457.1841986884974, 36, 1155);
      node0.isVoid();
      node2.removeFirstChild();
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newString(92, "#o-T+}d%=S");
      Node node1 = new Node(92, node0, node0, node0);
      node1.checkTreeEqualsImpl(node0);
      node0.hasChildren();
      Node node2 = new Node(30, 31, 4);
      node0.setQuotedString();
      node1.isThrow();
      node1.isAssignAdd();
      node2.isArrayLit();
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(11, (-2019));
      Node node1 = new Node(57, node0, node0, node0, node0, 124, 57);
      node0.getSourceOffset();
      Node node2 = Node.newString("5wDCr", 46, 48);
      node2.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node2.setDirectives(treeSet0);
      Node node3 = Node.newNumber((double) 54, 15, 39);
      node3.addChildrenToFront(node2);
      node0.getBooleanProp((-812));
      node2.isIf();
      node0.isString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node node4 = new Node(2, 40, (-618));
      node1.isInc();
      node4.isStringKey();
      node3.isGetProp();
      node3.isName();
      node4.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newString(92, "#o-T+}d%=S");
      node0.checkTreeEqualsImpl(node0);
      node0.hasChildren();
      Node node1 = new Node(30, 31, 4);
      node0.isThrow();
      node1.isNew();
      node0.isIf();
      node0.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node0.isCast();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1113, nodeArray0, 1113, 1113);
      String string0 = "jsdoc_info";
      node0.siblings();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.setDisposedParameter("jsdoc_info");
      jSDocInfo0.documentReturn("`:4T~");
      node0.getChildBefore(node0);
      node0.setString(string0);
      node0.isTypeOf();
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(51, (-2019));
      Node node1 = new Node(57, node0, node0, node0, node0, 124, 57);
      node0.getSourceOffset();
      int int0 = 37;
      Node node2 = null;
      try {
        node2 = new Node(int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString("\u0007f]fHYd]u9^<N");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node0.isObjectLit();
      node0.isQuotedString();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType.toMaybeTemplateType((JSType) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.addChildrenAfter(node1, node1);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(11, (-2019));
      node0.getSourceOffset();
      Node node1 = Node.newString("5wDCr", 46, 48);
      node1.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node1.setDirectives(treeSet0);
      Node node2 = Node.newNumber((double) 54, 15, 39);
      node2.addChildrenToFront(node1);
      node2.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.isIf();
      node0.isString();
      node0.isThrow();
      node0.isAssignAdd();
      node0.isArrayLit();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = new Node(39, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node3.setType(1369);
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = new Node((-2594), node5, (-745), 2075);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node4.getDirectives();
      Node node7 = new Node((-1521), 30, 15);
      node2.isName();
      node5.isInc();
      node7.isWhile();
      Node node8 = Node.newNumber(0.0);
      node3.isEquivalentToTyped(node8);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = new Node(0);
      int int0 = (-539);
      node0.addChildAfter((Node) null, (Node) null);
      Node node1 = new Node(node0.COLUMN_BITS, node0, node0, node0, node0, node0.SIDE_EFFECT_FLAGS, int0);
      // Undeclared exception!
      try { 
        node0.removeFirstChild();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = Node.newString(112, "", 708, 2048);
      node0.isGetElem();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node.newString(1234, "Object#Element", 1234, 44);
      jSTypeRegistry0.getTypesWithProperty("already specified useForNull");
      Node node1 = Node.newNumber((double) 1, 81, 1851);
      node0.isVar();
      node0.isSyntheticBlock();
      node1.useSourceInfoFrom(node0);
      node0.setChangeTime(32);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(108);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node node0 = new Node(108, 108, 37);
      node0.setSourceFileForTesting((String) null);
      Node node1 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1iC7Qw9`sypx8b8I", 30, 51);
      Node node3 = node2.cloneTree();
      node3.setOptionalArg(true);
      node1.isOnlyModifiesArgumentsCall();
      Node node4 = node0.cloneTree();
      node2.getSourceOffset();
      node2.siblings();
      node1.addChildrenToFront(node4);
      Node node5 = new Node(16, node3);
      node1.checkTreeTypeAwareEqualsImpl(node5);
      node4.setString(".1iC7Qw9`sypx8b8I");
      node2.isBreak();
      double double0 = (-813.7146);
      node4.setDouble(double0);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = new Node(42);
      node0.putProp(42, (Object) null);
      Node node1 = new Node(8, (-1918), (-1289));
      node1.removeChildren();
      node1.getJSDocInfo();
      node0.isBreak();
      node0.getAncestor(4095);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString((-1165), "", 571, 1314);
      node0.setSourceEncodedPositionForTree(2556);
      node0.removeProp(1588);
      Node node1 = new Node(57, node0, node0, 393, (-257));
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = node2.copyInformationFromForTree(node1);
      int int0 = 365;
      Node node4 = new Node(42, node2, node3, node0, node3);
      Node node5 = node1.srcrefTree(node4);
      node3.getJSDocInfo();
      Node node6 = new Node(node0.DIRECT_EVAL, node0, node0, node0, node0.IS_CONSTANT_NAME, int0);
      node6.copyInformationFrom(node5);
      node0.getLength();
      node6.children();
      int int1 = 152;
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.mayMutateGlobalStateOrThrow();
      node0.isNoSideEffectsCall();
      node0.useSourceInfoIfMissingFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = new Node(46, node2, 1, 31);
      node0.setOptionalArg(false);
      node4.cloneTree();
      node3.isEquivalentTo(node2);
      node2.getDouble();
      String string0 = ">0c$J#(";
      node0.setString(string0);
      int int0 = 9;
      int int1 = (-1211);
      Node node5 = new Node(node1.COLUMN_BITS, int0, int1);
      node5.isBreak();
      // Undeclared exception!
      try { 
        node5.isNull();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING M8lrTnL% is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node0 = new Node(0, 1561, 0);
      Node node1 = Node.newString((-1134), "com.google.common.collect.RegularImmutableAsList");
      Node node2 = new Node(0, node0, node0, node1, 65536, 2464);
      jSDocInfo0.setOriginalCommentPosition(57);
      Node node3 = new Node(1561, node2, node2, (-3563), 37);
      node0.toStringTree();
      node0.getProp(node1.SYNTHETIC_BLOCK_PROP);
      node2.isQualifiedName();
      node2.toString();
      node0.isOr();
      node1.isNull();
      node0.isObjectLit();
      // Undeclared exception!
      try { 
        node2.isQualifiedName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = new Node(3);
      node0.isNot();
      node0.srcrefTree((Node) null);
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = new Node(46, node2, 1, 31);
      node0.setOptionalArg(false);
      Node node5 = node4.cloneTree();
      node3.setType(1369);
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = new Node((-2594), node5, (-745), 2075);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node7 = new Node((-1521), 30, 15);
      node1.isBlock();
      node6.addSuppression("M8lrTnL%");
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(12, node0, node0, node0, node0, 42, (-539));
      node0.removeFirstChild();
      node1.srcrefTree(node0);
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newNumber(1754.0, (-2530), 1139);
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(36, node0, 30, 8);
      node0.addChildToBack(node1);
      Node node2 = Node.newNumber((double) 4, 51, (-1715));
      node2.getJSDocInfo();
      node0.isEmpty();
      node1.isReturn();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(108);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags6.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node node0 = Node.newString(122, "");
      Node node1 = Node.newString("", 103, 50);
      node0.isRegExp();
      node0.isFalse();
      node0.isEmpty();
      node1.getLineno();
      node0.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1754);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags6.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags7.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags8.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      Node node0 = Node.newNumber((double) 1754);
      Node node1 = Node.newString(43, "com.google.common.base.CharMatcher$RangesMatcher");
      node0.addChildrenToBack(node1);
      node0.getDirectives();
      node1.setSourceFileForTesting("_>+Z_G|)ib");
      node0.isRegExp();
      node1.isFalse();
      node1.hasOneChild();
      node0.checkTreeTypeAwareEqualsImpl((Node) null);
      node1.removeChildAfter(node0);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.mayMutateArguments();
      Node node1 = Node.newString(55, "", 2955, 1704);
      node0.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node2 = new Node(53, node1, node1, node0);
      node2.replaceChild(node1, node1);
      node2.isBlock();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = Node.newString((-2514), "", 46, 46);
      node0.isParamList();
      node0.getChildCount();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(49, node0, 2, 30);
      node1.setSourceEncodedPosition(120);
      node1.srcrefTree(node0);
      node0.isEquivalentTo(node1, false, true, false);
      node0.checkTreeEquals(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.getSourceOffset();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.setReturnsTainted();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2514
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newNumber(1754.0, (-456), 1139);
      node0.isUnscopedQualifiedName();
      node0.setDouble(1139);
      node0.addSuppression("a/UoL93I0noC&pBWO");
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newNumber(1754.0, (-456), 1139);
      node0.isUnscopedQualifiedName();
      String string0 = "a/UoL93I0noC&pBWO";
      Node node1 = new Node(43, node0, 39, 4592);
      node1.addChildBefore(node0, node0);
      node0.srcref(node1);
      node0.addSuppression(string0);
      int int0 = 48;
      // Undeclared exception!
      try { 
        Node.newString(string0, int0, node0.STATIC_SOURCE_FILE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isLabelName();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry1.getObjectIndexKey();
      templateType0.unboxesTo();
      Node node1 = new Node((-1521), node0, node0, node0, node0, 57, 16);
      Node node2 = node1.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(147);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node2.setSideEffectFlags(node_SideEffectFlags2);
      int int0 = 43;
      node0.getChildAtIndex(int0);
      // Undeclared exception!
      try { 
        node1.getJSDocInfo();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1521
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newString(92, "#o-T+}d%=S");
      Node node1 = Node.newString("#o-T+}d%=S");
      node1.checkTreeEqualsImpl(node0);
      node0.hasChildren();
      Node node2 = new Node(30, 31, 4);
      node0.setQuotedString();
      node2.isArrayLit();
      node1.isAssignAdd();
      node2.hasMoreThanOneChild();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = Node.newNumber((double) 47, (-461), 38);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.putBooleanProp(57, true);
      node1.isUnscopedQualifiedName();
      node1.addSuppression("Object#Key");
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1754);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags6.clearAllFlags();
      node_SideEffectFlags6.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags7.setAllFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags8.setReturnsTainted();
      node_SideEffectFlags8.setThrows();
      node_SideEffectFlags8.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      Node node0 = Node.newNumber((double) 1754);
      Node node1 = Node.newString(155, "co6.google.common.base.CharMatcher$YangesMatoh}r");
      node0.addChildrenToBack(node1);
      node1.setInputId((InputId) null);
      node1.getString();
      node1.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newString("^");
      node0.isComma();
      Node node1 = new Node(102, 1579, 50);
      node1.detachChildren();
      Node.newString((String) null, 38, 40);
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = Node.newString("5wDCr", 26, 47);
      node1.setVarArgs(true);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      Node node2 = Node.newNumber(1754.0, 1609, 115);
      node2.addChildrenToFront(node1);
      node0.getBooleanProp(4095);
      node0.isIf();
      node1.isString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(1);
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node3 = new Node((-1621), 54, 111);
      node0.isInc();
      node1.isNumber();
      node3.isGetProp();
      node3.isName();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString("^");
      node0.isNot();
      Node node1 = new Node(102, 1579, 50);
      node1.detachChildren();
      node0.isAssignAdd();
      node0.hasMoreThanOneChild();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      int int0 = 11;
      int int1 = 105;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node0 = new Node(11, (Node) null, (Node) null, (Node) null, (Node) null);
      int int2 = 306654252;
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1910));
      Node node1 = new Node((-1910), node0, node0);
      node0.getJsDocBuilderForNode();
      node1.setWasEmptyNode(true);
      node1.getProp(16);
      node1.getChangeTime();
      node0.putBooleanProp(92, true);
      node0.isOptionalArg();
      node1.isTrue();
      node1.getChangeTime();
      node1.setLineno(4095);
      Node node2 = node0.cloneNode();
      node2.getChangeTime();
      node0.putIntProp(56, 38);
      node2.isFromExterns();
      node1.isExprResult();
      node0.isVar();
      node0.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1434, 1434);
      node0.getLineno();
      node0.isQuotedString();
      Node node1 = new Node(55, node0, node0, node0);
      node0.addChildrenToFront(node1);
      node0.mayMutateGlobalStateOrThrow();
      node1.isAssign();
      Locale locale0 = Locale.ITALY;
      Locale.setDefault(locale0);
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node1.setDirectives(set0);
      int int0 = (-2489);
      node1.getAncestor((-2489));
      node0.hasMoreThanOneChild();
      // Undeclared exception!
      try { 
        node0.isTry();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node.extractLineno(256);
      Node node0 = Node.newString("MHA~Z^(Vd(MjV*:J9Y", 256, 2259);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1754, (-4485), 1754);
      node0.setSourceEncodedPositionForTree(1754);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(30, node0, node0, node0);
      node1.isQuotedString();
      node0.isOptionalArg();
      node0.setCharno(4095);
      node1.isDefaultCase();
      Node node2 = new Node((-2884), node1, 46, 30);
      node2.getSourceOffset();
      Node node3 = node1.copyInformationFrom(node0);
      node3.setSourceEncodedPosition(35);
      node1.copyInformationFromForTree(node2);
      node2.cloneNode();
      node1.getExistingIntProp(51);
      node3.wasEmptyNode();
      node2.removeChildren();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      // Undeclared exception!
      try { 
        node0.setDirectives(treeSet0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 51
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newNumber(1754.0, (-2530), 1139);
      Node node1 = new Node(36, node0, 30, 8);
      node0.addChildToBack(node1);
      Node node2 = Node.newNumber((double) 4, 51, 2);
      node0.isEmpty();
      node1.isReturn();
      node0.isVoid();
      node2.isThis();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      int int0 = 94;
      Node node0 = new Node(94);
      node0.addChildToFront((Node) null);
      Node node1 = null;
      try {
        node1 = new Node(int0, node0, node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newString(92, "#o-T+}d%=S");
      Node node1 = new Node(92, node0, node0, node0);
      node1.checkTreeEqualsImpl(node0);
      node0.hasChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node node2 = Node.newNumber(1024.2);
      node2.useSourceInfoFromForTree(node0);
      Node node3 = Node.newString(47, "9Io$j~");
      node0.addChildrenToBack(node1);
      node3.isCatch();
      node1.setSourceEncodedPosition(56);
      node1.isDo();
      node2.getJSDocInfo();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newString(92, "#o-T+}d%=S");
      node0.checkTreeEqualsImpl(node0);
      node0.hasChildren();
      Node node1 = new Node(30, 31, 4);
      node0.isThrow();
      node1.isNew();
      node0.isIf();
      node0.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node0.isCast();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = new Node(94);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags5.setReturnsTainted();
      node0.isQualifiedName();
      node0.siblings();
      node0.addChildrenToFront((Node) null);
      Node node1 = new Node(node0.CHANGE_TIME, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      String string0 = "VR;";
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.getBooleanProp(39);
      node0.isReturn();
      node0.isIn();
      node0.getJSDocInfo();
      node0.isThrow();
      node0.isDec();
      node0.isFromExterns();
      node0.setOptionalArg(true);
      node0.siblings();
      node0.wasEmptyNode();
      node0.setString("{sS$$+=/\">{Fsvmrh");
      node0.siblings();
      node0.isContinue();
      // Undeclared exception!
      try { 
        node0.isNE();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000337] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = Node.newString("\u0007f]fHYd]u9^<N");
      node0.isOptionalArg();
      node0.isCase();
      Node node1 = Node.newString(47, "\u0007f]fHYd]u9^<N", 48, (-2316));
      node1.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      Node node2 = Node.newString("\u0007f]fHYd]u9^<N");
      node2.isQualifiedName();
      node2.isIn();
      node1.isEmpty();
      node2.isLabelName();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      int int0 = Node.DECR_FLAG;
      Node node0 = new Node((-992), 256, 17);
      node0.isInc();
      Node node1 = new Node(386, node0, node0, node0, node0);
      node1.isNumber();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(16, nodeArray0);
      node2.isGetProp();
      node2.setVarArgs(false);
      node0.isName();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1i7Qw9`syp(8b8I", 40, 42);
      Node node3 = node0.cloneTree();
      node2.setOptionalArg(false);
      Node node4 = node3.cloneTree();
      node2.getSourceOffset();
      node1.siblings();
      node1.addChildrenToFront(node4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setAllFlags();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(8);
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node3.getIndexOfChild(node2);
      node0.useSourceInfoIfMissingFromForTree(node2);
      Node node5 = new Node(123, node0, node3);
      node5.isUnscopedQualifiedName();
      node2.getAncestor(20);
      node2.srcref(node4);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1754, (-4485), 1754);
      node0.setSourceEncodedPositionForTree(1754);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(30, node0, node0, node0);
      node1.isQuotedString();
      node0.isOptionalArg();
      node0.setCharno(4095);
      node1.isDefaultCase();
      Node node2 = new Node(1045, node1, 143, 274);
      node0.isQualifiedName();
      node1.isIn();
      node2.isCast();
      Node.newString("second new child has existing sibling");
      node1.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newNumber(1754.0, 1579, 112);
      node0.isUnscopedQualifiedName();
      node0.isQuotedString();
      Node node1 = new Node(0, node0, (-1438), 1);
      Node node2 = Node.newNumber(2467.847199);
      node1.addChildBefore(node2, node0);
      node0.srcref(node2);
      node0.addSuppression("The new child node has siblings.");
      Node.newString("a/UoL93I0noC&pBWO", 54, 205);
      node1.setQuotedString();
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(108);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node node0 = new Node(108, 108, 37);
      node0.setSourceFileForTesting((String) null);
      Node node1 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1iC7Qw9`sypx8b8I", 30, 51);
      Node node3 = node2.cloneTree();
      node3.setOptionalArg(true);
      node1.isOnlyModifiesArgumentsCall();
      Node node4 = node0.cloneTree();
      node2.getSourceOffset();
      node2.siblings();
      node1.addChildrenToFront(node4);
      Node node5 = new Node(16, node3);
      node1.checkTreeTypeAwareEqualsImpl(node5);
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(11, 205);
      Node node1 = new Node(57, node0, node0, node0, node0, 124, 57);
      Node node2 = Node.newString("5wDCr", 46, 48);
      node2.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node2.setDirectives(treeSet0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(93);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node node3 = new Node((-1400), 2048, (-2066));
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      node2.isName();
      node3.useSourceInfoFromForTree(node1);
      Node.newString("Object#Key");
      node2.hasChild(node3);
      node3.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString("prev is not a child of this node.");
      Node node1 = new Node(31);
      node0.addChildToFront(node1);
      node0.getProp(39);
      node0.isQualifiedName();
      node0.removeFirstChild();
      node0.getIntProp(305);
      node1.detachChildren();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1434, 1434);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setWasEmptyNode(true);
      node0.getProp(1434);
      node0.getChangeTime();
      node0.isTrue();
      node0.getChangeTime();
      node0.setLineno(1434);
      Node node1 = node0.cloneNode();
      node1.getChangeTime();
      node0.putIntProp(30, 1);
      node0.isExprResult();
      Node node2 = Node.newString(3, "new child has existing parent");
      node2.isVar();
      node1.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1921));
      Node node1 = new Node((-1921), node0, node0);
      int int0 = node1.getLineno();
      node0.isQuotedString();
      Node node2 = new Node(101, node0, 63, (-1));
      int int1 = 153;
      node0.putIntProp(node2.IS_CONSTANT_NAME, int1);
      Node node3 = null;
      try {
        node3 = new Node(int0, node2, node2, node0, node2, node1.OPT_ARG_NAME, node0.NO_SIDE_EFFECTS);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newString((-1149), "", 571, 1314);
      node0.setSourceEncodedPositionForTree(2556);
      node0.removeProp(1588);
      node0.isNE();
      Node node1 = new Node(108, node0, node0, node0, 1910, 3061);
      node1.isLocalResultCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.getJSDocInfo();
      node0.isEmpty();
      node1.isLabelName();
      node1.setSideEffectFlags(1910);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      String string0 = "C57'&!+C";
      Node node0 = Node.newString((-210), "C57'&!+C", (-210), (-210));
      Node node1 = null;
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      boolean boolean0 = true;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream1, boolean0);
      node0.appendStringTree(mockPrintWriter0);
      // Undeclared exception!
      try { 
        node0.srcrefTree(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -210
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = new Node(94);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(154);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node0.getProp(47);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = new Node(38);
      node1.isQualifiedName();
      int int0 = (-2031);
      Node node2 = new Node(int0);
      int int1 = (-167);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(30, node0);
      node0.mayMutateGlobalStateOrThrow();
      node1.isDebugger();
      node1.addSuppression("Object#Element");
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newString("\u0007f]fHYd]u9^<N");
      node0.isOptionalArg();
      node0.isCase();
      Node node1 = Node.newString(47, "\u0007f]fHYd]u9^<N", 48, (-2316));
      node1.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      Node node2 = Node.newString("\u0007f]fHYd]u9^<N");
      node2.isQualifiedName();
      node2.isIn();
      node1.isEmpty();
      node2.isLabelName();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = new Node(3);
      Node node1 = new Node(887, node0, node0, node0, node0, 718, 55);
      node0.siblings();
      node1.isContinue();
      node0.isNE();
      node0.isDo();
      node1.isFunction();
      node0.getBooleanProp(4095);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType.cast((JSType) null);
      jSTypeRegistry0.unregisterPropertyOnType("Not declared as a type name", (JSType) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node3 = new Node(node1.DIRECT_EVAL, node1, node0, node2, node1, node0.SIDE_EFFECT_FLAGS, node1.SIDE_EFFECTS_FLAGS_MASK);
      Node node4 = new Node(node3.QUOTED_PROP, node0, node1);
      // Undeclared exception!
      try { 
        node3.checkTreeTypeAwareEqualsImpl(node4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(113, nodeArray0, 113, 113);
      Node node1 = new Node(122, node0, node0, node0, node0, 39, 379);
      node1.isIn();
      node0.isCast();
      Node.newString("second new child has existing sibling");
      node0.hasChild(node1);
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = new Node(39, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node1.isFromExterns();
      Node node5 = node4.cloneTree();
      node3.setType(1369);
      node2.getString();
      node1.getSourceOffset();
      node2.siblings();
      Node node6 = new Node((-2594), node5, (-745), 2075);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node7 = Node.newString(1222, "M8lrTnL%", 305, 48);
      Node node8 = new Node(39, node3, node0, node1, node7);
      node1.isOnlyModifiesArgumentsCall();
      node5.isCatch();
      node3.isInc();
      node7.isNumber();
      node5.isExprResult();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = new Node(46, (-2449), (-2449));
      Node node1 = new Node(91, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = new Node(47);
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = new Node(46, node2, 1, 31);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node2.toString(true, true, true);
      node_SideEffectFlags4.setMutatesArguments();
      Node.newNumber((double) 55);
      node3.setString("dw.V0 $\b");
      node3.isVarArgs();
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = new Node(3);
      Node node1 = new Node(31, node0, node0, node0, node0, 36, 31);
      node1.setIsSyntheticBlock(false);
      node1.removeChildren();
      node0.removeChildAfter(node1);
      String string0 = "=_?^Fh^uuu)L";
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newString("#o-T+}d%=S");
      Node node1 = new Node(92, node0, node0, node0);
      node1.checkTreeEquals(node0);
      node1.checkTreeEqualsImpl(node0);
      node1.hasChildren();
      node1.removeChildAfter(node0);
      node0.isQuotedString();
      // Undeclared exception!
      try { 
        node0.isNoSideEffectsCall();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newString("^");
      node0.putIntProp(64, 153);
      int int0 = Node.INFERRED_FUNCTION;
      Node node1 = Node.newString("R05jf#bJpUFl@", 56, 54);
      node0.setVarArgs(false);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node1.setDirectives(treeSet0);
      node1.getSourceFileName();
      Node node2 = Node.newNumber((double) 4, 36, (-976));
      node1.addChildrenToFront(node2);
      node1.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node1.isIf();
      node1.isString();
      node2.isThrow();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(50, nodeArray0);
      node3.isAssignAdd();
      node3.isArrayLit();
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(130, node0, node0, node0);
      node1.checkTreeEqualsImpl((Node) null);
      node1.hasChildren();
      Node node2 = node0.removeChildAfter(node1);
      // Undeclared exception!
      try { 
        node2.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = Node.newString("5wDCr", 26, 47);
      node1.setVarArgs(true);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      Node node2 = Node.newNumber(1754.0, 1609, 115);
      node2.addChildrenToFront(node1);
      node0.getBooleanProp(4095);
      node0.isIf();
      node1.isString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      node0.setString("Object#Key");
      node0.removeFirstChild();
      int int0 = 36;
      node0.getIntProp(int0);
      Node node3 = Node.newString(jSTypeRegistry0.OBJECT_INDEX_TEMPLATE);
      node3.detachChildren();
      // Undeclared exception!
      try { 
        node3.isExprResult();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [directives: com.google.javascript.rhino.Node$ObjectPropListItem@0000000339] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newString(92, "#o-T+}d%=S");
      node0.checkTreeEqualsImpl(node0);
      node0.hasChildren();
      Node node1 = new Node(30, 31, 4);
      node0.isTry();
      node0.isIf();
      Node node2 = Node.newNumber((double) 47, 2075, 64);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node2);
      node1.checkTreeEqualsImpl(node0);
      node0.isNE();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = new Node(20, 20, 20);
      node0.getQualifiedName();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = new Node(47);
      Node node3 = node0.cloneTree();
      Node node4 = node3.cloneTree();
      node2.getSourceOffset();
      node1.siblings();
      node1.addChildrenToFront(node4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(8);
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node3.getIndexOfChild(node2);
      node2.hasOneChild();
      Node node5 = Node.newNumber(1.0, (-1377), 55);
      node5.checkTreeTypeAwareEqualsImpl(node2);
      node1.checkTreeEqualsImpl(node3);
      node1.isNE();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node.newNumber((double) 92, (-461), (-461));
      Node node0 = Node.newString((-24), "side_effect_flags", (-536870912), 48);
      node0.putBooleanProp(57, false);
      Node node1 = null;
      node0.addChildrenAfter((Node) null, (Node) null);
      node0.isUnscopedQualifiedName();
      String string0 = null;
      Node.newString(string0);
      int int0 = (-3500);
      Node node2 = new Node(int0, node0, node0, node1);
      // Undeclared exception!
      try { 
        node2.isBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString("CharMatcher.and(");
      boolean boolean0 = false;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = jSDocInfo0.getAssociatedNode();
      node0.addChildrenToBack((Node) null);
      String string0 = "";
      // Undeclared exception!
      try { 
        Node.newString(string0, node1.STATIC_SOURCE_FILE, node0.LENGTH);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(30, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.isUnscopedQualifiedName();
      node1.isDebugger();
      node0.isVoid();
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(39, "#o-T+}d%=S");
      Node node1 = new Node(8, node0, node0, node0);
      node1.checkTreeEqualsImpl(node0);
      node1.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node node2 = Node.newNumber((double) 50);
      Node node3 = node1.useSourceInfoFromForTree(node2);
      Node node4 = Node.newString(0, "9Io$j~");
      node4.addChildrenToBack(node1);
      node2.isCatch();
      Node.newString(307, "");
      node3.isVar();
      node1.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1434, 1434);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setWasEmptyNode(true);
      node0.getProp(1434);
      node0.getChangeTime();
      node0.isTrue();
      node0.getChangeTime();
      node0.setLineno(1434);
      Node node1 = node0.cloneNode();
      node1.isCast();
      Node node2 = Node.newString("");
      node1.wasEmptyNode();
      node1.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1434, 1434);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setWasEmptyNode(true);
      node0.getChangeTime();
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(2, "=A;39#[gZdo:ai0b", 15, 115);
      node0.setString("??");
      node1.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = new Node(39, (-2449), (-2449));
      Node node1 = new Node(2075, node0);
      node1.getQualifiedName();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node3 = Node.newString("M8lrTnL%", 43, 57);
      Node node4 = node2.cloneTree();
      node2.isNE();
      node4.isFunction();
      node4.getBooleanProp(54);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      node0.checkTreeEquals(node3);
      ObjectType objectType0 = ObjectType.cast(jSType0);
      jSTypeRegistry0.unregisterPropertyOnType(objectType0.UNKNOWN_NAME, objectType0);
      node3.isInc();
      node3.getLength();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newString(92, "#o-T+}d%=S");
      node0.checkTreeEqualsImpl(node0);
      node0.hasChildren();
      Node node1 = new Node(30, 31, 4);
      node0.isThrow();
      node1.isNew();
      node1.isOnlyModifiesThisCall();
      Node node2 = Node.newString(15, "=A;39#[gZdo:ai0b", 4, 1544);
      node2.setString((String) null);
      node1.isVarArgs();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1i7Qw9`syp(8b8I", 40, 42);
      Node node3 = node0.cloneTree();
      Node node4 = node3.cloneTree();
      node2.getSourceOffset();
      node1.siblings();
      node1.addChildrenToFront(node4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node2.setOptionalArg(false);
      Node node5 = node1.cloneTree();
      node3.isEquivalentTo(node0);
      node5.getDouble();
      String string0 = "";
      node2.setString(string0);
      int int0 = (-2004);
      int int1 = (-3213);
      Node node6 = null;
      try {
        node6 = new Node(int0, int1, node1.FLAG_NO_THROWS);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING com.google.javascript.rhino.Node$StringNode is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("M8lrTnL%");
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1iC7Qw9`sypx8b8I", 40, 42);
      Node node3 = node0.cloneTree();
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      node1.appendStringTree(stringBuffer0);
      node2.setOptionalArg(false);
      Node node4 = node3.cloneTree();
      node2.getSourceOffset();
      node1.siblings();
      node1.addChildrenToFront(node4);
      node1.removeFirstChild();
      node4.checkTreeTypeAwareEqualsImpl(node1);
      node2.setString("M8lrTnL%");
      node1.isBreak();
      node1.setDouble(40);
      node3.isCast();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.areAllFlagsSet();
      node_SideEffectFlags3.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.getBooleanProp(0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      nodeArray0[1] = node1;
      Node node2 = new Node(0, nodeArray0, 43, 33);
      node2.checkTreeEquals(node1);
      ObjectType.cast(jSType0);
      String string0 = "@w}q,$7c";
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1754);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = new Node(1754);
      node0.isQualifiedName();
      node0.isIn();
      Node node1 = Node.newNumber((double) 2, 26, 14);
      node1.isCast();
      Node node2 = Node.newString("");
      node2.wasEmptyNode();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newString(92, "#o-T+}d%=S");
      node0.checkTreeEqualsImpl(node0);
      node0.hasChildren();
      Node node1 = new Node(30, 31, 4);
      node0.isThrow();
      node1.isNew();
      Node node2 = node1.cloneTree();
      node1.getSourceOffset();
      node1.siblings();
      node2.addChildrenToFront(node0);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.setString("#o-T+}d%=S");
      String string0 = "XGxql";
      // Undeclared exception!
      try { 
        Node.newString(node2.LENGTH, string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEW 31 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = Node.newString("#Z)pg0mt+");
      Node node1 = new Node(4095, (-580), 1754);
      node1.detachChildren();
      Node node2 = new Node(4095, node0, 1746, 0);
      node0.isIn();
      node2.isCast();
      node0.isLabelName();
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = new Node(47);
      Node node3 = node0.cloneTree();
      Node node4 = node3.cloneTree();
      node2.getSourceOffset();
      node1.siblings();
      node1.addChildrenToFront(node4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.newNumber(1754.0);
      Node node5 = new Node(148, node3, 2245, 639);
      node1.replaceChildAfter(node4, node5);
      node2.checkTreeTypeAwareEqualsImpl(node5);
      node4.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isLabelName();
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      templateType0.unboxesTo();
      Node node1 = new Node(47, node0, node0, node0, node0, 42, 38);
      Node node2 = node0.clonePropsFrom(node1);
      node1.addChildrenAfter(node2, (Node) null);
      // Undeclared exception!
      try { 
        node1.isUnscopedQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(113, "%<oFC+@V31pB_", 113, 512);
      node0.siblings();
      node0.isContinue();
      node0.isNE();
      node0.isFunction();
      node0.getBooleanProp(512);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      Node node1 = null;
      node0.checkTreeEquals((Node) null);
      ObjectType.cast(jSType0);
      String string0 = "x";
      // Undeclared exception!
      try { 
        jSTypeRegistry0.unregisterPropertyOnType(string0, jSType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newNumber(1754.0, 1434, 1434);
      node0.getLineno();
      node0.isQuotedString();
      Node node1 = new Node(55, node0, node0, node0);
      node0.addChildrenToFront(node1);
      node0.mayMutateGlobalStateOrThrow();
      node1.isAssign();
      Locale locale0 = Locale.ITALY;
      Locale.setDefault(locale0);
      node0.getDirectives();
      node1.setDirectives((Set<String>) null);
      Node node2 = node1.getAncestor(42);
      Node node3 = new Node(53, node0, node1, node2, node2, 2, 0);
      Node node4 = new Node(node2.FLAG_GLOBAL_STATE_UNMODIFIED);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node4);
      // Undeclared exception!
      try { 
        node2.checkTreeEqualsImpl(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = Node.newString("^");
      Node node1 = new Node(102, 1579, 50);
      Node node2 = Node.newString("^", 2, 8);
      Node node3 = new Node(38, node0, node2, node2, node2, 43, 2126);
      Node node4 = new Node(26, (-1354), (-192));
      Node node5 = Node.newString("^");
      Node node6 = node4.clonePropsFrom(node5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node0.getChildAtIndex(1);
      node0.isTrue();
      node6.useSourceInfoFrom(node2);
      node6.isDo();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newString("^");
      Node node1 = new Node(38);
      node0.addChildToFront(node1);
      node1.isLocalResultCall();
      node0.isLabelName();
      node1.useSourceInfoFromForTree(node0);
      node1.getDirectives();
      node1.isTypeOf();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1434, 1434);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setWasEmptyNode(true);
      node0.getProp(1434);
      node0.getChangeTime();
      node0.getChangeTime();
      node0.setLineno(1434);
      Node node1 = node0.cloneNode();
      node1.getChangeTime();
      node0.putIntProp(30, 1);
      node0.setString("??");
      node1.isVarArgs();
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = Node.newString(92, "#o-T+}d%=S");
      node0.checkTreeEqualsImpl(node0);
      node0.hasChildren();
      Node node1 = new Node(30, 31, 4);
      node0.isThrow();
      node1.isNew();
      Node node2 = new Node(48, node0, node1, 54, 1429);
      node0.isFor();
      node0.isThrow();
      node1.isAssignAdd();
      node2.hasMoreThanOneChild();
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node.newString("^");
      Node node0 = new Node(46, 1564, 50);
      node0.detachChildren();
      node0.isEmpty();
      node0.isCast();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      String string0 = " [";
      Node node0 = Node.newString(48, " [", 48, (-1));
      node0.setString(" [");
      Node node1 = null;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte) (-56);
      byteArray0[3] = (byte)32;
      byteArray0[4] = (byte)68;
      byteArray0[5] = (byte) (-40);
      byteArray0[6] = (byte)119;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.getLength();
      node0.isEquivalentTo((Node) null, false, true, true);
      boolean boolean0 = false;
      boolean boolean1 = true;
      boolean boolean2 = true;
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      node0.isEquivalentTo(node1, boolean0, boolean1, boolean2);
      node0.isAssign();
      node0.isVar();
      node0.getJSDocInfo();
      Node node2 = node0.clonePropsFrom(node1);
      node2.getString();
      // Undeclared exception!
      try { 
        node2.isNew();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString("^");
      Node node1 = new Node(102, 1579, 50);
      node1.detachChildren();
      Node node2 = new Node(37, node1, 4095, 2270);
      node1.isFor();
      node2.getQualifiedName();
      node0.isThrow();
      node1.isAssignAdd();
      node2.hasMoreThanOneChild();
      node2.isCall();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newString(92, "#o-T+}d%=S");
      node0.checkTreeEqualsImpl(node0);
      node0.hasChildren();
      node0.setQuotedString();
      node0.setDouble((-2768.03027));
      node0.isThrow();
      node0.isAssignAdd();
      String string0 = "ADD";
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1754);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags6.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags7.setThrows();
      node_SideEffectFlags7.setMutatesThis();
      Node node0 = null;
      Node node1 = new Node(4043, (Node) null, 4043, 1754);
      node1.isThrow();
      // Undeclared exception!
      try { 
        node1.isAssignAdd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = new Node((-4572));
      node0.isLocalResultCall();
      Node node1 = Node.newString("K'&C-'", 83, 153);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newNumber((-574.5529));
      node0.setLineno(2130);
      node0.isInc();
      node0.getSourcePosition();
      node0.isTry();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.areAllFlagsSet();
      node_SideEffectFlags3.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.getBooleanProp(0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      nodeArray0[1] = node1;
      node0.checkTreeEquals(node1);
      ObjectType.cast((JSType) null);
      node0.isAdd();
      jSTypeRegistry1.unregisterPropertyOnType("@w}q,$7c", (JSType) null);
      node0.isInc();
      node1.getLength();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newString(38, "R2GDX}");
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = Node.newNumber(1754.0, 1579, 112);
      node0.isUnscopedQualifiedName();
      node0.isQuotedString();
      Node node1 = new Node(0, node0, (-1447), 1);
      Node.newNumber(2467.847199);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      Node node2 = new Node(15, (-729), 43);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isName();
      Node.newString(31, "");
      node0.isInc();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node3 = new Node(1, nodeArray0, 2, 1);
      node3.isObjectLit();
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = new Node(47);
      Node node3 = node2.cloneTree();
      node2.getSourceOffset();
      node1.siblings();
      node1.addChildrenToFront(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(8);
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node1.getIndexOfChild(node2);
      node2.hasOneChild();
      Node node4 = Node.newNumber(1.0, (-1377), 55);
      node4.checkTreeTypeAwareEqualsImpl(node2);
      node1.checkTreeEqualsImpl(node2);
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newString("^");
      Node node1 = new Node(102, 1579, 50);
      node1.detachChildren();
      Node node2 = new Node(37, node1, 4095, 2270);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(11);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node2.copyInformationFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node2.getIndexOfChild(node1);
      node2.hasOneChild();
      Node.newNumber(3270.0, 1, 15);
      Node node3 = Node.newNumber((double) 4095, 36, 120);
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node1.checkTreeEqualsImpl(node0);
      node2.isNE();
      node3.isEmpty();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags((-2316));
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags6.clearAllFlags();
      Node node0 = Node.newString(113, "E\r{[u:CE9N7q!", (-1943), 113);
      Node node1 = new Node(54, node0, node0, node0, node0);
      node1.isOnlyModifiesArgumentsCall();
      node1.isThis();
      node1.isInc();
      node0.isNumber();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)42;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node((-1614));
      node0.wasEmptyNode();
      Node node1 = new Node((-1614), node0, node0, node0, node0, 4972, 2);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      node1.mayMutateArguments();
      node0.setSourceFileForTesting("T& B)P[lwgP0B7TR");
      node0.mayMutateGlobalStateOrThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      node0.setJSType(templateType0);
      node0.removeChildren();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "T& B)P[lwgP0B7TR");
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = new Node(130, node1, 1, 2766);
      node0.addChildBefore(node1, node3);
      node1.getLength();
      node3.removeFirstChild();
      node2.children();
      int int0 = (-1500);
      Node node4 = new Node(int0, node1.FREE_CALL, node0.VAR_ARGS_NAME);
      node2.addChildrenAfter(node4, node0);
      node3.getDouble();
      node0.replaceChild(node3, node2);
      node3.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1434, 1434);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setWasEmptyNode(true);
      node0.getProp(1434);
      node0.getChangeTime();
      node0.getChangeTime();
      node0.setLineno(1434);
      Node node1 = node0.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.getIndexOfChild(node1);
      node0.hasOneChild();
      Node node2 = Node.newNumber(1126.98382041443, 50, 4095);
      Node node3 = Node.newString("uuku");
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node3.checkTreeEqualsImpl(node1);
      node2.checkTreeEqualsImpl(node1);
      node3.isNE();
      node1.isEmpty();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newString((-1165), "", 1314, 1314);
      node0.isThrow();
      Node node1 = new Node(45, 16, 54);
      node0.isNew();
      Node node2 = new Node(56, node0, node1, node0, node0);
      node2.isIf();
      node2.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2783));
      node1.isCast();
      Node node3 = new Node(8, node1, 39, 151608);
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-49));
      Node node1 = new Node(57, node0, node0, node0, node0, 48, 4);
      Node node2 = node1.srcref(node0);
      Node node3 = Node.newString("", 38, 31);
      node2.setQuotedString();
      node3.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newNumber(1754.0, 1579, 112);
      node0.isUnscopedQualifiedName();
      node0.isQuotedString();
      Node node1 = new Node(0, node0, 43, 1);
      Node node2 = Node.newNumber(2467.847199);
      node1.addChildBefore(node2, node0);
      node0.srcref(node2);
      Node.newString("a/UoL93I0noC&pBWO", 54, 277);
      Node.newNumber(614.2, 47, 39);
      Node node3 = Node.newString(250, "com.google.javascript.rhino.Node$SideEffectFlags", 2, 37);
      node3.isWhile();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = Node.newNumber(1754.0, 1434, 1434);
      node0.getLineno();
      node0.isQuotedString();
      Node node1 = new Node(4095, 48, 56);
      node0.addChildrenToFront(node1);
      node0.mayMutateGlobalStateOrThrow();
      node1.isAssign();
      Locale locale0 = Locale.ITALY;
      Locale.setDefault(locale0);
      node0.getDirectives();
      node1.setDirectives((Set<String>) null);
      Node node2 = node1.getAncestor(42);
      Node node3 = new Node(53, node0, node1, (Node) null, (Node) null, 2, 0);
      Node node4 = new Node(node2.FLAG_GLOBAL_STATE_UNMODIFIED);
      Node.NodeMismatch node_NodeMismatch0 = null;
      try {
        node_NodeMismatch0 = new Node.NodeMismatch(node0, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.putIntProp(11, 205);
      Node node1 = new Node(57, node0, node0, node0, node0, 124, 57);
      node0.setChangeTime(12);
      Node node2 = new Node(16, node1, node1, node1);
      node1.isBlock();
      node0.isParamList();
      node2.siblings();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newString(92, "#o-T+}d%=S");
      Node node1 = new Node(92, node0, node0, node0);
      node1.checkTreeEqualsImpl(node0);
      node1.isSwitch();
      node0.isFunction();
      node1.getBooleanProp((-1002));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = new Node(37);
      node0.checkTreeEquals(node2);
      ObjectType.cast((JSType) null);
      jSTypeRegistry0.unregisterPropertyOnType("com.google.common.collect.ImmutableEnumSet", (JSType) null);
      node1.isInc();
      node1.getLength();
      Node.AncestorIterable node_AncestorIterable0 = node2.getAncestors();
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1i7Qw9`syp(8b8I", 40, 42);
      Node node3 = node0.cloneTree();
      node3.cloneTree();
      node2.getSourceOffset();
      node2.isFunction();
      node1.getBooleanProp(951);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.checkTreeEquals(node3);
      ObjectType.cast((JSType) null);
      jSTypeRegistry0.unregisterPropertyOnType("com.google.javascript.rhino.Node$StringNode", (JSType) null);
      node1.isInc();
      Node node4 = Node.newNumber(3535.15307);
      Node node5 = new Node(2562, node4, 55, (-1195));
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = new Node(42);
      Node node1 = new Node(42, node0, node0, 15, 32);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node2 = node1.cloneNode();
      node1.addChildrenToFront(node0);
      node0.getSourceOffset();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.detachFromParent();
      // Undeclared exception!
      try { 
        node2.getChildCount();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.extractCharno(4);
      String string0 = "";
      Node node0 = Node.newString("", 40, 4);
      Node node1 = null;
      node0.addChildBefore((Node) null, (Node) null);
      node0.isLocalResultCall();
      // Undeclared exception!
      try { 
        node0.isEmpty();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = new Node(3);
      Node node1 = new Node(887, node0, node0, node0, node0, 718, 55);
      node0.siblings();
      node1.isContinue();
      node0.isNE();
      Node node2 = Node.newNumber((double) 50);
      Node node3 = node0.useSourceInfoFromForTree(node2);
      node3.isGetElem();
      node2.setQuotedString();
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1434, 1434);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setOptionalArg(false);
      node0.getAncestors();
      node0.setWasEmptyNode(true);
      node0.getChangeTime();
      node0.isOnlyModifiesThisCall();
      node0.isNE();
      node0.isEmpty();
      node0.isLabelName();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newString((-1165), "", 571, 1314);
      node0.setSourceEncodedPositionForTree(2556);
      node0.isFalse();
      Node node1 = new Node(108, node0, node0, node0, 301, 3061);
      node0.isLocalResultCall();
      node0.getJSDocInfo();
      node0.setSourceFileForTesting("");
      node0.setString("");
      node1.isDec();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newNumber(0.0, 57, (-465));
      Node node1 = new Node(117, node0);
      Node node2 = node1.srcrefTree(node0);
      Node node3 = node0.useSourceInfoFromForTree(node2);
      node1.isDebugger();
      node0.isGetterDef();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node2.setSideEffectFlags(node_SideEffectFlags2);
      boolean boolean1 = false;
      node1.toString(boolean0, boolean1, boolean1);
      node3.isDo();
      int int0 = (-621);
      Node.mergeLineCharNo(node0.STATIC_SOURCE_FILE, int0);
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newString("unexpected prop id ", 0, (-109));
      Node node1 = new Node((-109), node0, node0, 4, 18);
      node0.getJSDocInfo();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node0.children();
      node0.toString();
      node1.getBooleanProp(38);
      node0.getProp(0);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newString("^");
      node0.isNot();
      Node node1 = new Node(37, 4, 8);
      node0.detachChildren();
      node1.isAssignAdd();
      node1.hasMoreThanOneChild();
      node1.isHook();
      node1.getSourceFileName();
      node1.mayMutateArguments();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(3191);
      node0.addChildToFront(node1);
      node1.isLocalResultCall();
      node0.isLabelName();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node1.getDirectives();
      node2.isTypeOf();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      int int0 = 1475;
      Node node0 = Node.newString(1475, "Da`o6", 108, 108);
      node0.getIntProp((-1382));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node0.isSyntheticBlock();
      node0.getQualifiedName();
      node0.isComma();
      Node node1 = Node.newString((String) null, 15, 1);
      node1.isUnscopedQualifiedName();
      int int1 = (-2955);
      Node node2 = Node.newNumber((double) node1.STATIC_SOURCE_FILE, int1, int0);
      node1.isGetElem();
      int int2 = 2;
      Node.newNumber((double) node0.INPUT_ID, int2, node1.DIRECTIVES);
      Node.extractLineno(node0.NO_SIDE_EFFECTS);
      node2.getInputId();
      // Undeclared exception!
      try { 
        node2.getIntProp(node1.MAX_COLUMN_NUMBER);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newNumber(56.0, 381, 94);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setWasEmptyNode(false);
      node0.getChangeTime();
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(38, "=A;39#[gZdo:ai0b", 381, 2261);
      node0.isGetElem();
      node0.isFunction();
      node1.isVar();
      node1.isName();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newNumber(1199.1990863738, 1434, 33);
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(40, node0, node0, node0, node0, 36, 47);
      node1.siblings();
      node0.isContinue();
      node0.isNE();
      Node node2 = Node.newNumber((double) 57);
      Node node3 = new Node(32, node2);
      Node node4 = node3.useSourceInfoFromForTree(node0);
      Node node5 = Node.newString((-1295), "F");
      node3.isCatch();
      Node node6 = Node.newString(108, "Or=4,1}jm?${uk>:7");
      Node.newString(33, ";`39f&vpwPI\"e[");
      node0.isVar();
      node2.isLocalResultCall();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node4;
      nodeArray0[2] = node0;
      nodeArray0[3] = node6;
      nodeArray0[4] = node5;
      Node node7 = new Node((-1195), nodeArray0);
      node2.checkTreeEqualsImpl(node7);
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1579);
      node0.isUnscopedQualifiedName();
      node0.isQuotedString();
      Node node1 = new Node(0, node0, 43, 1);
      node1.copyInformationFromForTree(node0);
      Node node2 = Node.newNumber(2467.847199);
      node2.setChangeTime(3061);
      node1.addChildBefore(node2, node0);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 57, (-465));
      Node node1 = new Node((-2789), node0, node0, node0, node0, 54, 52);
      node0.clonePropsFrom(node1);
      node1.addChildrenAfter(node0, node0);
      node0.isUnscopedQualifiedName();
      String string0 = ";>;iU+~xu%+qC3|";
      Node node2 = Node.newString(string0);
      Node.newNumber((double) node2.DIRECT_EVAL);
      int int0 = 50;
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m=`eq*\"rj?sYoO CK");
      Node node0 = Node.newNumber(0.0, 29, 117);
      Node node1 = new Node(32, node0);
      Node node2 = Node.newString("CharMatcher.ANY");
      Node node3 = node1.srcrefTree(node2);
      Node node4 = node0.useSourceInfoFromForTree(node3);
      node4.isDebugger();
      boolean boolean0 = node3.isGetterDef();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      node1.setSideEffectFlags(node_SideEffectFlags2);
      boolean boolean1 = false;
      node4.toString(boolean0, boolean1, boolean1);
      int int0 = (-2236);
      int int1 = (-787);
      Node.mergeLineCharNo(int0, int1);
      // Undeclared exception!
      try { 
        node3.getExistingIntProp(node4.OPT_ARG_NAME);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got TYPEOF
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      String string0 = "comparator";
      Node node0 = Node.newString((-1967), "comparator");
      node0.putIntProp(0, 0);
      node0.type = 1600;
      node0.setWasEmptyNode(true);
      node0.setString("comparator");
      node0.toString(true, true, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      ObjectType objectType0 = null;
      String string1 = "b3^K3C`@";
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node.mergeLineCharNo(2338, 2338);
      int int0 = 132;
      int int1 = 375;
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((double) 2338);
      Node node1 = new Node(9578786, node0, node0, node0);
      nodeArray0[0] = node1;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
      ImmutableList<JSType> immutableList1 = immutableList0.reverse();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      nodeArray0[1] = node2;
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m=`eq*\"rj?sYoO CK");
      Node node0 = Node.newString((-983), "com.google.javascript.rhino.jstype.JSType$2");
      Node node1 = Node.newNumber((double) 38);
      Node node2 = new Node(36, node0, node1, (-347), 47);
      node2.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node node1 = Node.newString(40, "tnDg}I<mzT&?Pzw*Md", 300, 57);
      Node node2 = new Node(52, node0);
      Node node3 = Node.newString("", 12, 37);
      node2.setIsSyntheticBlock(false);
      node3.setString("");
      node0.isVarArgs();
      node1.checkTreeEquals(node0);
      node1.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.Node$StringNode";
      Node node0 = new Node(33, 33, 305);
      Node node1 = new Node((-2449), node0);
      node0.getQualifiedName();
      String string1 = "M8lrTnL%";
      node0.setSourceFileForTesting(string0);
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.newString(56, "/X33:~kxl&r|Orc6sfR", 56, 57);
      Node node1 = new Node(4, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newNumber((-1796.1));
      node2.isEmpty();
      node1.isReturn();
      Node node3 = new Node((-505));
      node3.isVoid();
      Node node4 = Node.newString(52, "/X33:~kxl&r|Orc6sfR", 47, 42);
      node4.isThis();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = Node.newNumber((double) 113, 108, 113);
      node0.setLineno((-2689));
      node0.isInc();
      node0.getSourcePosition();
      node0.isFromExterns();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newNumber((double) 29, 571, 326);
      Node node1 = null;
      Node node2 = new Node(31, (Node) null);
      String string0 = "";
      Node node3 = Node.newString(string0);
      Node node4 = node0.srcrefTree(node1);
      node3.useSourceInfoFromForTree(node0);
      // Undeclared exception!
      try { 
        node4.isDebugger();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(108);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node node0 = new Node(108, 108, 37);
      node0.setSourceFileForTesting((String) null);
      Node node1 = Node.newString("M8lrTnL%");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1iC7Qw9`sypx8b8I", 30, 51);
      Node node3 = node2.cloneTree();
      node3.setOptionalArg(true);
      node1.isOnlyModifiesArgumentsCall();
      Node node4 = node0.cloneTree();
      node2.getSourceOffset();
      node2.siblings();
      node1.addChildrenToFront(node4);
      Node node5 = new Node(16, node3);
      node1.checkTreeTypeAwareEqualsImpl(node5);
      node0.isOr();
      node4.setString(".1iC7Qw9`sypx8b8I");
      node2.isBreak();
      double double0 = (-813.7146);
      node4.setDouble(double0);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.getQualifiedName();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(".1i7Qw9`syp(8b8I", 40, 42);
      Node node3 = node0.cloneTree();
      node2.setOptionalArg(false);
      Node node4 = node3.cloneTree();
      node2.getSourceOffset();
      node1.siblings();
      node1.addChildrenToFront(node4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setAllFlags();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(8);
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node3.getIndexOfChild(node2);
      node0.useSourceInfoIfMissingFromForTree(node2);
      Node node5 = new Node(123, node0, node3);
      node5.type = 31;
      node5.isUnscopedQualifiedName();
      node2.getAncestor(20);
      node2.srcref(node4);
      node1.getCharno();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isNot();
      Node.newString("", 47, 4095);
      Node node1 = new Node(38, node0, 11, (-1400));
      node1.setOptionalArg(false);
      Node node2 = node1.cloneTree();
      node0.setType(908);
      node2.getString();
      node2.getSourceOffset();
      node2.isThrow();
      node2.isLabelName();
      // Undeclared exception!
      try { 
        node1.hasMoreThanOneChild();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(108);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node node0 = new Node(108, 108, 37);
      String string0 = null;
      node0.isNE();
      Node node1 = Node.newNumber((-861.967185));
      node0.useSourceInfoFromForTree(node1);
      Node node2 = Node.newString(42, (String) null);
      node2.isCatch();
      Node.newString(node2.IS_CONSTANT_NAME, string0);
      int int0 = (-4481);
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newString((-1165), "", 571, 1314);
      node0.setSourceEncodedPositionForTree(2556);
      node0.isFalse();
      Node node1 = new Node(108, node0, node0, node0, 301, 3061);
      node0.isLocalResultCall();
      node0.getJSDocInfo();
      node0.isEmpty();
      node0.isInc();
      node1.isNumber();
      Node.newString("di4Gr.Q TlKDrE", 4095, 4054);
      node1.isAnd();
      node1.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newString("prev is not a child of this node.");
      Node node1 = Node.newString("prev is not a child of this node.");
      node0.getProp(32);
      Node node2 = new Node(31, node1, 32, 26);
      Node node3 = Node.newString("prev is not a child of this node.", 43, 57);
      node3.setVarArgs(true);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node3.setDirectives(treeSet0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      Node node4 = new Node(47, (-1225), 43);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isName();
      Node node5 = Node.newString((-2228), "Object#Key");
      node5.isInc();
      node5.isObjectLit();
      node2.copyInformationFrom(node4);
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = Node.newString((-1165), "", 571, 1305);
      node0.setSourceEncodedPositionForTree(2556);
      node0.isFalse();
      Node node1 = new Node(108, node0, node0, node0, 301, 3061);
      node0.isLocalResultCall();
      node0.getJSDocInfo();
      node0.isEmpty();
      node1.isLabelName();
      node0.getInputId();
      node1.isIf();
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newString(720, "s6y^{'ew");
      node0.getDouble();
      boolean boolean0 = true;
      JSDocInfo jSDocInfo0 = null;
      try {
        jSDocInfo0 = new JSDocInfo(boolean0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 720
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = Node.newString("Object#Key");
      node0.putIntProp(11, 205);
      Node node1 = new Node(57, node0, node0, node0, node0, 124, 57);
      node0.clonePropsFrom(node1);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("");
      Node node2 = new Node(42, node0, (-747), (-1851));
      node2.getProp((-747));
      Node node3 = new Node(15, node2, 30, 3061);
      node0.isQualifiedName();
      node1.isIn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isNoSideEffectsCall();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node4.isCast();
      node2.removeChildren();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) node3);
      Predicate<Object> predicate1 = predicate0.negate();
      arrayList0.removeIf(predicate1);
      simpleErrorReporter0.error((String) null, (String) null, 13, 37);
      Node.newString("tnDg}I<mzT&?Pzw*Md");
      node4.wasEmptyNode();
      node4.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newString((-1165), "", 571, 1314);
      node0.setSourceEncodedPositionForTree(2556);
      node0.isFalse();
      node0.isOnlyModifiesThisCall();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(3873);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.getIndexOfChild(node1);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = new Node(4, node0, node0);
      node1.isUnscopedQualifiedName();
      node2.getAncestor(4);
      Node node4 = node3.srcref(node1);
      node1.getCharno();
      node4.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags5.clearAllFlags();
      Node node0 = new Node(113);
      node0.getSourceFileName();
      node0.isSwitch();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      int int0 = Node.DECR_FLAG;
      Node node0 = new Node((-992), 256, 17);
      Node node1 = new Node(386, node0, node0, node0, node0);
      node1.isNumber();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(16, nodeArray0);
      node2.isGetProp();
      node2.setVarArgs(false);
      node0.isName();
      node2.getFirstChild();
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newString((-1165), "", 571, 1314);
      node0.setSourceEncodedPositionForTree(2556);
      node0.isFalse();
      Node node1 = new Node(108, node0, node0, node0, 301, 3061);
      node0.isLocalResultCall();
      node0.getJSDocInfo();
      node0.isEmpty();
      Node node2 = node1.cloneNode();
      node2.setWasEmptyNode(false);
      node0.isInc();
      node1.isNumber();
      node1.isAnd();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m=`eq*\"rj?sYoO CK");
      Node node0 = Node.newNumber(0.0, 29, 117);
      Node node1 = new Node(32, node0);
      node_SideEffectFlags1.areAllFlagsSet();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      Node node2 = node1.cloneTree();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node3 = new Node(4095, node1, node2, 38, 38);
      node3.checkTreeEqualsImpl(node2);
      Node node4 = Node.newNumber(5211.799272752);
      node4.isNoSideEffectsCall();
      node3.isCall();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 20);
      node0.setSourceFileForTesting("M8lrTnL%");
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      node0.setDirectives((Set<String>) null);
      Node node2 = Node.newNumber((double) 46, 32, 4095);
      node0.addChildrenToFront(node2);
      StaticSourceFile staticSourceFile0 = node0.getStaticSourceFile();
      node2.setStaticSourceFile(staticSourceFile0);
      node1.isIf();
      Node node3 = new Node((-528));
      node3.isString();
      node1.isThrow();
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(4095, nodeArray0);
      node4.isAssignAdd();
      node4.addSuppression("M8lrTnL%");
      node4.isArrayLit();
      node3.isNew();
      node1.isWhile();
      node0.isCase();
      node1.addChildToFront(node4);
      node2.isRegExp();
      Node.newString(47, "com.google.javascript.rhino.Node$StringNode");
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      int int0 = (-1400);
      Node node0 = new Node((-1400));
      Node node1 = new Node(33, node0, node0, node0);
      node1.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      String string0 = "STRING_OBJECT_TYPE";
      JSType jSType0 = null;
      node1.checkTreeEquals(node0);
      SimpleErrorReporter simpleErrorReporter0 = null;
      try {
        simpleErrorReporter0 = new SimpleErrorReporter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1400
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = Node.newString("^");
      Node node1 = new Node(102, 1579, 50);
      Node node2 = Node.newNumber((double) 4095, 54, 38);
      Node node3 = new Node(52, node2);
      Node node4 = node1.srcrefTree(node3);
      node4.isQuotedString();
      node3.useSourceInfoFromForTree(node2);
      Node node5 = Node.newNumber((-2809.56522), 29, 114);
      node5.isDebugger();
      Node node6 = new Node(57, node0, 130, 434);
      node5.isCast();
      node2.isLabelName();
      node6.isScript();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newString(42, "HTwt=~~*,/R,7;'[f", 16777216, 40);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEmpty();
      node0.isReturn();
      node0.isVoid();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newString(124, "R'Z3?n", (-1354), 0);
      node0.setSourceEncodedPositionForTree((-999));
      node0.isFalse();
      Node node1 = new Node(2340, node0, node0, node0, 8, 30);
      node1.isLocalResultCall();
      node0.getJSDocInfo();
      node0.isRegExp();
      node1.getJSDocInfo();
      node0.isEmpty();
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(94);
      Node node1 = new Node(2, node0, (-3423), 47);
      node0.wasEmptyNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      Node node2 = new Node(56, 56, 154);
      node0.getSourceOffset();
      node2.isInc();
      node1.isStringKey();
      node1.isGetProp();
      node2.isNew();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newString("^");
      Node node1 = new Node(102, 1579, 50);
      Node.newString("^", 2, 8);
      Node.newString(42, "^");
      Node node2 = Node.newString(1, "^");
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = new Node(54, node3, node2, 40, 46);
      Node node5 = Node.newNumber((double) 46);
      node5.isVar();
      Node.newString(16, "BwQu#GB7?DNfRjE(", 12, 4095);
      Node.newNumber((double) 9, 393, 571);
      node3.isAdd();
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newString((-1165), "", 571, 1314);
      node0.isThrow();
      Node node1 = new Node(122, 31, 45);
      node1.isNew();
      node0.isIf();
      node0.isString();
      Node node2 = new Node(782);
      Node node3 = new Node(155, node1, node2, node1, node0);
      Node node4 = node3.getAncestor(0);
      node4.isSwitch();
      node1.isSyntheticBlock();
      node3.isAssign();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node node0 = new Node(113, 113, 113);
      node0.setSourceFileForTesting("");
      Node node1 = node0.cloneTree();
      node1.isOr();
      node1.setString("ehOv_Jo$)H0X{8,!I9");
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newString("prev is not a child of this node.");
      Node node1 = Node.newString("prev is not a child of this node.");
      node0.getProp(32);
      Node node2 = new Node(31, node1, 32, 26);
      node2.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      Node node3 = new Node(54, 40, 2198);
      node2.getSourceOffset();
      node1.isInc();
      Node node4 = new Node(4095, node0, node3);
      node4.isUnscopedQualifiedName();
      node2.getAncestor(4095);
      node4.srcref(node1);
      Node node5 = Node.newNumber(1076.0, 137, 46);
      node5.getCharno();
      Node node6 = Node.newNumber((double) 56);
      node2.srcrefTree(node6);
      node6.toStringTree();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newString("^");
      Node node1 = new Node(102, 1579, 50);
      node1.detachChildren();
      Node node2 = new Node(37, node1, 4095, 2270);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.toString(false, true, true);
      node0.isIn();
      node2.isCast();
      node1.isLabelName();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = new Node(512, 512, (-2209));
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((double) 117, 57, (-457));
      Node node1 = new Node(40, node0, 54, 55);
      Node node2 = node1.srcrefTree(node0);
      node0.useSourceInfoFromForTree(node2);
      node1.isDebugger();
      node2.isLocalResultCall();
      Node node3 = new Node(49, node1, 0, 8);
      node1.isLabelName();
      node2.isLabel();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString(95, "#o-T+}d%=S");
      Node node1 = new Node(39, 1776, 40);
      Node node2 = new Node((-921), node1, 774, 117);
      node1.isIn();
      node2.removeFirstChild();
      node1.isCast();
      node2.isLabelName();
      node1.isScript();
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newString((-1165), "", 571, 571);
      node0.setSourceEncodedPositionForTree(2556);
      Node node1 = new Node(55, node0);
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(1223, node0, node2, 4095, (-2456));
      node3.isDebugger();
      int int0 = 2672;
      Node node4 = new Node(node1.INPUT_ID, node3, node2.POST_FLAG, int0);
      node3.isCast();
      node4.isLabelName();
      // Undeclared exception!
      try { 
        node0.isParamList();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node[] nodeArray0 = new Node[8];
      Node node0 = Node.newString("");
      nodeArray0[0] = node0;
      Node node1 = new Node(1153, node0, node0);
      nodeArray0[1] = node1;
      Node node2 = new Node(1, node1, node1);
      nodeArray0[2] = node2;
      Node node3 = new Node(49);
      nodeArray0[3] = node3;
      Node node4 = Node.newNumber(1.0);
      node3.removeProp(111);
      nodeArray0[4] = node4;
      node1.getChangeTime();
      Node node5 = new Node(236, 38, 40);
      nodeArray0[5] = node5;
      node4.toString(false, false, false);
      Node node6 = Node.newString(36, "", 2567, 1);
      nodeArray0[6] = node6;
      Node node7 = new Node(55, node6, 2776, 1415);
      nodeArray0[7] = node7;
      Node node8 = new Node(2118, nodeArray0);
      node8.isBlock();
      nodeArray0[0].isInstanceOf();
      String string0 = "";
      nodeArray0[5].addSuppression(string0);
      node2.isVar();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode", 33, 33);
      node0.getQualifiedName();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newString(39, "tnDg}I<mzT&?Pzw*Md", 4095, 40);
      Node node3 = node0.cloneTree();
      node2.setOptionalArg(false);
      Node node4 = node3.cloneTree();
      Node node5 = Node.newString("tnDg}I<mzT&?Pzw*Md", (-2040109463), 100);
      Node node6 = node0.cloneTree();
      node3.getAncestors();
      node4.setOptionalArg(false);
      Node node7 = node4.cloneTree();
      node1.getSourceOffset();
      node6.siblings();
      node7.addChildrenToFront(node5);
      node2.checkTreeTypeAwareEqualsImpl(node4);
      node1.isBreak();
      node2.setDouble((-2215.82344411522));
      node5.isCast();
  }
}
