/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 01 14:19:06 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplatizedType;
import java.io.File;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.nio.charset.IllegalCharsetNameException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Map;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(43, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node2 = new Node(117, 93, 12);
      node2.useSourceInfoFrom(node0);
      node2.isVoid();
      node1.isArrayLit();
      Node node3 = Node.newNumber((-579.42612984), 12, (-95));
      node0.checkTreeEqualsImpl(node3);
      node3.isQualifiedName();
      node1.addChildBefore(node3, node0);
      node3.isThrow();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType jSType0 = null;
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createDefaultObjectUnion((JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node.newString("");
      Node node0 = Node.newString(4095, ":]:ht~Pt`Bu`ZkI");
      Node node1 = Node.newString(":]:ht~Pt`Bu`ZkI", 50, 39);
      node1.putProp(51, node0);
      Node node2 = Node.newNumber((double) 30);
      node1.checkTreeEquals(node2);
      Node node3 = new Node(42, node2);
      node3.isArrayLit();
      Object object0 = new Object();
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = new Node(124);
      node0.setChangeTime(124);
      node0.isOnlyModifiesArgumentsCall();
      node0.putBooleanProp(53, true);
      node0.setLineno(124);
      node0.isParamList();
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString(".qEL", (-811), 0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.setLength((-811));
      node0.setCharno(29);
      node0.isNoSideEffectsCall();
      node0.setLength(124);
      node0.setCharno(53);
      node0.isAssign();
      node0.isAssign();
      node0.getType();
      node0.isCast();
      node2.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("*>PTsg", 29, 1);
      node1.setVarArgs(false);
      node0.isIf();
      node0.setSourceFileForTesting("R");
      Node node2 = new Node(111, node0, node1, node0, node0);
      node2.isOnlyModifiesThisCall();
      node1.toString(false, false, false);
      Node.newString(8, "zo");
      // Undeclared exception!
      try { 
        node2.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = Node.newString("f&");
      Node node1 = Node.newString("R5", 29, 1);
      node0.putIntProp(54, 32);
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.isCase();
      node0.isLocalResultCall();
      node1.isAssignAdd();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(false);
      node0.getQualifiedName();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      Node node1 = new Node(53, node0, node0, node0, 48, 57);
      Node node2 = node1.cloneNode();
      Node node3 = new Node(0);
      Node node4 = new Node(1697, node2, node3);
      node4.addChildrenAfter(node1, node2);
      node1.replaceChild(node0, node4);
      node3.removeProp(48);
      Node.extractCharno(16);
      Node node5 = Node.newNumber((double) 12);
      node5.isCase();
      try { 
        node0.setDouble(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LABEL_NAME 153 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(false);
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isCatch();
      node0.removeProp(31);
      node0.getJSDocInfo();
      node0.getProp(57);
      node1.isAdd();
      Node node2 = new Node(57, node0, node1);
      Node.NodeMismatch node_NodeMismatch1 = new Node.NodeMismatch(node0, node1);
      Node.NodeMismatch node_NodeMismatch2 = node2.checkTreeTypeAwareEqualsImpl(node0);
      node_NodeMismatch2.equals(node_NodeMismatch0);
      node0.detachFromParent();
      node1.isBlock();
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newString("*>PTsg");
      Node node1 = Node.newString("*>PTsg");
      Node node2 = new Node(40, node0);
      Node.newNumber(0.7, 32, 51);
      String string0 = "#Sbly!QggQZO-2$P";
      Node node3 = node2.useSourceInfoFromForTree(node1);
      Node.newString(3246, "#Sbly!QggQZO-2$P", 112, 1);
      int int0 = (-1130);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node2;
      nodeArray0[1] = node3;
      nodeArray0[2] = node0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte) (-31);
      byteArray0[3] = (byte) (-85);
      byteArray0[4] = (byte)69;
      byteArray0[5] = (byte)108;
      byteArray0[6] = (byte) (-40);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("", 147, 147);
      Node node1 = new Node(147, node0);
      Node node2 = new Node(4095);
      nodeArray0[0] = node1;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node2.isBlock();
      node1.useSourceInfoIfMissingFromForTree(node2);
      node1.isAdd();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node1.isVoid();
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newString("", 133, 133);
      Node node1 = new Node(133, node0);
      node0.isFunction();
      node1.isEmpty();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(120);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(120, node0, node0, node0, node0);
      node0.isVarArgs();
      node0.setChangeTime(1);
      String string0 = "*>PTsg";
      node0.addSuppression("*>PTsg");
      node0.getLength();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*>PTsg");
      node1.removeFirstChild();
      node1.putIntProp(46, (-1277));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        node0.setDouble(15);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CATCH [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("*>PTsg", 29, 1);
      node1.setVarArgs(false);
      node0.isIf();
      node0.setSourceFileForTesting("R");
      Node node2 = new Node(111, node0, node1, node0, node0);
      node1.toString(false, false, false);
      node2.isBreak();
      node2.isGetProp();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isReturn();
      Node node1 = node0.cloneTree();
      node0.cloneNode();
      node0.isWhile();
      node0.addSuppression("");
      node1.isParamList();
      node0.setVarArgs(false);
      node1.isAnd();
      node0.isLabelName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[0];
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      node1.setJSType(jSType0);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEFAULT_CASE : None is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("", 147, 147);
      Node node1 = new Node(147, node0);
      Node node2 = new Node(4095);
      nodeArray0[0] = node1;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node2.isBlock();
      node1.isAdd();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isDelProp();
      node1.isSwitch();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node0.isThrow();
      node1.isGetProp();
      // Undeclared exception!
      try { 
        node1.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(124);
      node0.setChangeTime(124);
      Node.newString(53, "WHILE", 102, 15);
      node0.isCatch();
      node0.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setSuppressions((Set<String>) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = new Node(524288, 6, (-3682));
      node0.isVar();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("WHILE", true);
      node1.setStaticSourceFile(simpleSourceFile0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = new Node(4, (-1150), 47);
      node0.setChangeTime(47);
      Node node1 = Node.newString(1, "en]VRuop0Ml]!l(S6\"", 36, 47);
      node1.isNE();
      Node node2 = new Node(2620, node1, node0, node1);
      node0.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newString("", 147, 147);
      Node node1 = new Node(43, node0);
      node1.setVarArgs(false);
      Node node2 = node1.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node2.isFalse();
      node0.isStringKey();
      node1.isDo();
      node0.isQualifiedName();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = Node.newString((-1981), "&<Z", (-1981), (-1981));
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      node1.copyInformationFrom(node0);
      node1.isNew();
      node0.isAssign();
      node0.isVoid();
      node1.isQualifiedName();
      node1.getBooleanProp(49);
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = Node.newString("SCRIPT");
      node0.isTry();
      Node node1 = new Node(39, node0, 8, 0);
      node0.isEquivalentToShallow(node1);
      node0.isFor();
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newNumber((double) 51, 51, 51);
      Node node1 = new Node(45, node0, node0, node0, 32, 2);
      node0.addChildrenToFront(node1);
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.removeFirstChild();
      node_SideEffectFlags0.setAllFlags();
      node0.isLabelName();
      node0.isCast();
      node1.isNoSideEffectsCall();
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = Node.newString("", 8, 8);
      Node node1 = new Node(111, node0);
      Node node2 = node1.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node2.isFalse();
      node2.useSourceInfoFromForTree(node0);
      node1.isStringKey();
      node2.isDo();
      node2.isQualifiedName();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = Node.newString("z", (-1719), (-1981));
      Node node1 = new Node(93, 4, 100);
      Node node2 = new Node(2, node1);
      Node node3 = node1.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.isFalse();
      node1.isStringKey();
      node0.isDo();
      node3.isQualifiedName();
      Node node4 = Node.newString((-2910), "source_file", 14, (-101));
      node4.isIf();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(16, (-1150), 47);
      node0.setChangeTime(2);
      Node node1 = Node.newString(89, "en]VRuop0!l]!x(S6\"", 4095, (-1));
      node1.isFunction();
      node1.putBooleanProp(47, true);
      node1.isCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isFor();
      node0.getChangeTime();
      node1.isLocalResultCall();
      node1.isSyntheticBlock();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(30, "~:l,X^");
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      node_SideEffectFlags1.setThrows();
      node0.setSideEffectFlags(node_SideEffectFlags0);
      node0.isVar();
      Node node1 = Node.newString("*q<pv'C>K>| V'ZFn", 15, 37);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = new Node(5117, (-2198), 112);
      Node node1 = Node.newNumber(2.0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node node2 = new Node(1305, node1);
      node2.setLineno(405);
      node0.setVarArgs(true);
      Node node3 = new Node(3054, node0, 1, 4);
      node1.getQualifiedName();
      node0.getType();
      node0.cloneNode();
      node2.getJsDocBuilderForNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node4.isDec();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newString("", 8, 8);
      Node node1 = new Node(30, node0, node0, 1, 52);
      Node node2 = node1.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node2.isFalse();
      node2.isFor();
      node2.isDo();
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newNumber((double) 51, 51, 51);
      Node node1 = new Node(45, node0, node0, node0, (-1280), 2);
      node0.addChildrenToFront(node1);
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = new Node(43);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.isArrayLit();
      Object object0 = new Object();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isCatch();
      Node node1 = node0.cloneTree();
      node0.isWhile();
      node0.addSuppression("");
      node1.isParamList();
      node0.setVarArgs(false);
      node1.isAnd();
      node0.isLabelName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[0];
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      node1.setJSType(jSType0);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEFAULT_CASE : None is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newString("&<Z", (-1981), (-1981));
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      node1.isNew();
      node0.isAssign();
      node0.isVoid();
      node1.isQualifiedName();
      Node node2 = node1.cloneTree();
      node1.toString();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = Node.newString("", 147, 147);
      Node node1 = new Node(43, node0);
      Node node2 = Node.newString("", (-1207), 55);
      Node node3 = node1.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node2.isFalse();
      node1.isFor();
      node3.isDo();
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(46, nodeArray0);
      node4.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(18, "~:l,X^");
      node0.getQualifiedName();
      Node node1 = new Node((-1751), node0, node0, 12, 8);
      node0.addChildrenToBack(node1);
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      node_SideEffectFlags0.setReturnsTainted();
      Node.newString("~:l,X^", 42, 40);
      node0.putIntProp((-4825), 662);
      node0.getAncestor(51);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = Node.newString("", 8, 8);
      Node node1 = new Node(111, node0);
      Node node2 = node1.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node2.isFalse();
      node1.isStringKey();
      node2.isDo();
      node2.isQualifiedName();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0@!:AV 6N-Z8xIf,=");
      Node node0 = Node.newString("SCRIPT");
      Node node1 = new Node(39, node0, 8, 0);
      node0.isEquivalentToShallow(node1);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isNoSideEffectsCall();
      Node node1 = node0.cloneNode();
      Node node2 = Node.newNumber((double) 4095);
      node2.getJsDocBuilderForNode();
      node2.isDec();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // AND 101 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = Node.newString(112, "", 112, 1754);
      node0.isCatch();
      Node node1 = node0.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setSuppressions((Set<String>) null);
      node1.getQualifiedName();
      node1.getQualifiedName();
      node1.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = new Node((-718));
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isArrayLit();
      Object object0 = new Object();
      Node node3 = new Node((-3266), node0, node2, node1, 2718, 12);
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString((-1958), "", (-1958), (-1958));
      node0.getLineno();
      Node node1 = new Node(52, node0, node0, node0);
      Node node2 = Node.newNumber((double) 3);
      node2.isGetElem();
      node2.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node2.toStringTree();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = Node.newNumber((double) 51, 51, 51);
      Node node1 = new Node(45, node0, node0, node0, (-1280), 2);
      node0.addChildrenToFront(node1);
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node0.setLength(64);
      node1.hasChild(node0);
      node1.isVarArgs();
      node1.isTrue();
      node1.isIf();
      node1.getAncestor(108);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node((-537), (-537), 256);
      Node node1 = Node.newNumber(2.0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setLineno((-427));
      node0.setVarArgs(true);
      Node node2 = new Node(32, node0, 1236, 12);
      node2.getQualifiedName();
      node2.getType();
      Node node3 = node2.cloneNode();
      node0.getJsDocBuilderForNode();
      node1.isDec();
      node3.getParent();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = Node.newString("", (-1998), (-1998));
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags0.valueOf();
      Node node1 = Node.newString("VOID");
      node1.isThis();
      Node node2 = new Node(124, node0, node0, node1);
      node2.copyInformationFrom(node0);
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newString("", 133, 133);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(133, node0);
      Node node2 = node1.cloneNode();
      node1.isGetElem();
      node0.addChildToFront(node1);
      node2.setCharno(3790);
      Object object0 = new Object();
      Node node3 = node1.cloneTree();
      node1.setSideEffectFlags(node3.FLAG_GLOBAL_STATE_UNMODIFIED);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = Node.newNumber((double) 51, 51, 51);
      Node node1 = new Node(45, node0, node0, node0, (-1280), 2);
      node0.addChildrenToFront(node1);
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node0.setLength(64);
      node1.hasChild(node0);
      node1.isVarArgs();
      node0.isVarArgs();
      // Undeclared exception!
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString((-1403), "-");
      node0.addSuppression("-");
      node0.getJsDocBuilderForNode();
      Node node1 = new Node((-3278));
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setLength(108);
      node0.hasChild(node1);
      Node node2 = new Node(55, 32, 857);
      Node node3 = new Node(49, node2, 32, 31);
      node3.isVarArgs();
      node3.isThrow();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = new Node(4, (-1150), 47);
      node0.setChangeTime(47);
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = new Node(117);
      Node node2 = new Node(4, node0, node1, node1, node0, 57, 724);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isArrayLit();
      Object object0 = new Object();
      node2.cloneTree();
      Node.newNumber((double) 32, 2, 1743);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = Node.newString("*>PTsg");
      Node node1 = new Node(103, node0, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node node2 = new Node(115, node1);
      Node node3 = node2.srcref(node1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node3.checkTreeTypeAwareEqualsImpl(node2);
      Node.extractCharno((-249));
      Node.newString(942, "A(!@-T!Xt|geU/eCk");
      node2.isAssign();
      node0.isAssignAdd();
      node1.checkTreeEquals(node0);
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = Node.newNumber((double) 133);
      Node node1 = new Node(64, node0, node0, node0, 48, 4);
      node1.cloneNode();
      Node node2 = new Node(2);
      Node node3 = new Node(39, node1, node2);
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = Node.newString("", 8, 8);
      Node node1 = new Node(117, node0);
      Node node2 = node1.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node2.isFalse();
      node2.isFor();
      node2.isDo();
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = Node.newString("", (-2011), (-2011));
      node0.isNoSideEffectsCall();
      Node node1 = new Node((-2011), node0, node0, node0, node0, (-3789), 49);
      node1.isFunction();
      node0.putBooleanProp(718, false);
      node0.isParamList();
      node1.isNoSideEffectsCall();
      node1.setLength(40);
      node0.setCharno(38);
      node1.isCatch();
      node0.getSourceOffset();
      node1.removeProp(3654);
      node1.getJSDocInfo();
      node0.getProp((-2011));
      node0.isAdd();
      Node node2 = new Node((-2011), node1, node1);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node_NodeMismatch0.equals(simpleSourceFile0);
      node1.detachFromParent();
      Node node3 = null;
      try {
        node3 = new Node(770, (Node[]) null, 110, 2125871);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newString("", 147, 147);
      Node node1 = new Node(43, node0);
      node1.setVarArgs(false);
      node1.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = new Node(53);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node2.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isArrayLit();
      Node node3 = new Node(224, node1, node2, node1, node2, 15, 4095);
      node3.getJSDocInfo();
      node0.isQualifiedName();
      node1.useSourceInfoFromForTree(node0);
      Node.newString("");
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber((double) (-1681), (-1681), 14);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node1 = new Node((-1681), node0, 34, 3757);
      node1.setSourceEncodedPosition(42);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">R");
      node0.isEquivalentTo(node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = Node.newString((-1600), "iup~bNrI)k{)^Up");
      node2.setChangeTime((-1681));
      Node.newString(" wPWwn49jq", 418, 215);
      // Undeclared exception!
      try { 
        node2.appendStringTree((Appendable) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1600
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newString("fk");
      Node node1 = new Node(32, node0);
      Node node2 = node1.srcref(node0);
      node0.putIntProp(101, 43);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node2);
      node_NodeMismatch0.equals("KUH$T");
      node0.isCase();
      node1.isAssignAdd();
      node0.isScript();
      node2.isNull();
      // Undeclared exception!
      try { 
        node0.setDouble((-1605.33));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 101
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString("quoted", 16777216, 133);
      node0.isFromExterns();
      node0.getSourceFileName();
      node0.getQualifiedName();
      node0.setCharno(2807);
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newString(30, "?", 255, (-594));
      Node node1 = Node.newString(56, "R(@%c9&MC[nMd", (-3117), (-91));
      node1.isComma();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.setQuotedString();
      node0.isDefaultCase();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.putIntProp((-710), 1961);
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newNumber(Double.POSITIVE_INFINITY, 51, (-370));
      node0.isVarArgs();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node1 = new Node(42, 112, 52);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isVoid();
      node1.isArrayLit();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.checkTreeEqualsImpl(node0);
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        node2.addChildBefore(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.cloneNode();
      Node node1 = new Node(0);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node.newString("");
      Node node0 = Node.newString(105, ":]:ht~Pt`Bu`ZkI");
      Node node1 = Node.newString(":]:ht~Pt`Bu`ZkI", 50, 39);
      node1.isSyntheticBlock();
      node1.putProp(51, node0);
      Node node2 = Node.newNumber((double) 30);
      node1.checkTreeEquals(node2);
      node1.isVoid();
      node2.toString(true, false, false);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter((Node) null, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newNumber((-2520.0));
      node0.isCall();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setLineno(108);
      node0.setVarArgs(false);
      node0.getQualifiedName();
      node0.getType();
      node0.isWith();
      Node node1 = new Node(87, 4095, 1);
      Node node2 = Node.newNumber((double) 37);
      node2.isDebugger();
      Node node3 = Node.newNumber((-100.918573172));
      node2.isEquivalentTo(node3, true, false, false);
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newString((-1393), "+x>(rq<D#`MS");
      node0.addSuppression("+x>(rq<D#`MS");
      Node node1 = new Node(15, node0, node0, node0);
      Node node2 = new Node((-1021), node1, 8, (-3626));
      node0.getQualifiedName();
      node0.getType();
      node2.isWith();
      Node node3 = new Node(4095, 29, 8);
      node0.removeProp(26);
      Node.extractCharno(0);
      Node node4 = null;
      try {
        node4 = new Node(1139, node1, node3, node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node(124);
      node0.setChangeTime(124);
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString(2, "zo", 1821, 56);
      node1.isFunction();
      node1.putBooleanProp(53, false);
      node1.isParamList();
      node1.isNoSideEffectsCall();
      node1.setLength((-811));
      node1.setCharno(29);
      node0.isCatch();
      node0.getSourceOffset();
      node0.useSourceInfoIfMissingFrom(node1);
      node1.removeProp(770);
      node1.getJSDocInfo();
      node1.getProp(53);
      node1.isAdd();
      Node node2 = new Node(1821, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node2);
      node_NodeMismatch0.equals(node1);
      Node node3 = node0.detachFromParent();
      node3.isBlock();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("*>PTsg", 29, 1);
      node1.setVarArgs(false);
      node0.isIf();
      node0.setSourceFileForTesting("R");
      Node node2 = new Node(111, node0, node1, node0, node0);
      node1.toString(true, false, false);
      node2.isBreak();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newString("*>PTsg");
      Node node1 = new Node(103, node0, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node node2 = new Node(115, node1);
      Node node3 = node2.srcref(node1);
      node1.putIntProp(35, (-1550));
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node2);
      InputId inputId0 = new InputId("*>PTsg");
      node_NodeMismatch0.equals(inputId0);
      node3.isCase();
      node3.isAssignAdd();
      node3.isScript();
      node0.isExprResult();
      try { 
        node0.setDouble(43);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING *>PTsg is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = new Node((-556), (-556), 256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = Node.newString("Boolean", (-2553), 43);
      node1.setVarArgs(false);
      node1.isIf();
      node1.setSourceFileForTesting("~:l,X^");
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = new Node(35, node1, node1, node0, node1);
      // Undeclared exception!
      try { 
        node0.toString(true, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -556
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newString("lkLST[G97?~>u<h!|B");
      node0.checkTreeEquals(node0);
      Node node1 = Node.newNumber((double) 0, 30, 46);
      node1.isVarArgs();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node2 = new Node(122, 51, 52);
      Node node3 = node2.useSourceInfoFrom(node0);
      node2.isVoid();
      node2.isArrayLit();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.isQualifiedName();
      node0.useSourceInfoFromForTree(node3);
      // Undeclared exception!
      try { 
        node3.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = new Node(124);
      node0.setChangeTime(124);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      Node node1 = Node.newString("{mS4");
      nodeArray0[1] = node1;
      Node node2 = new Node(47, nodeArray0, 30, 50);
      node0.srcrefTree(node2);
      node0.isNoSideEffectsCall();
      Node node3 = Node.newString(2, "zo", 1821, 56);
      node3.isFunction();
      node3.isParamList();
      node0.mayMutateArguments();
      // Undeclared exception!
      try { 
        node3.toString(true, false, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString("'R5");
      Node node1 = new Node(40, node0, node0, node0, node0);
      node1.checkTreeEquals(node0);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node1.isFunction();
      Node node2 = Node.newNumber((double) 15, (-1021), 122);
      Node node3 = Node.newString("#vapNg#.-'lj", 31, 39);
      node3.isOptionalArg();
      node0.isUnscopedQualifiedName();
      Node node4 = node1.useSourceInfoFrom(node2);
      node4.isEquivalentToShallow(node2);
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newString("f Zx.w#_", (-1981), 3820);
      node0.setVarArgs(false);
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = new Node(50);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node0.hasChild(node1);
      Node node2 = new Node(4095, node1, 8, (-612));
      node1.isVarArgs();
      Node node3 = Node.newString("Not(");
      node3.isThrow();
      node2.isUnscopedQualifiedName();
      Node node4 = node2.useSourceInfoFrom(node3);
      node4.removeChildren();
      node1.isEquivalentToShallow(node0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = Node.newString("'R5");
      Node node1 = new Node(40, node0, node0, node0, node0);
      node1.checkTreeEquals(node0);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node1.isFunction();
      Node node2 = new Node(130, 50, (-612));
      Node.newString("Node tree inequality:\nTree1:\nSTRING\n    STRING 'R5\n\n\nTree2:\nSTRING 'R5\n\n\nSubtree1: STRING\n    STRING 'R5\n\n\nSubtree2: STRING 'R5\n");
      Node node3 = new Node((-1285), 56, 52);
      node1.isEquivalentToShallow(node2);
      node2.isExprResult();
      node3.getIntProp((-630));
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = Node.newString((-1979), "=", (-1979), 900);
      Node node1 = new Node(46, 900, 38);
      node0.isNE();
      node1.isFunction();
      Node node2 = new Node(8, node1, node0);
      node1.isEquivalentTo(node0, false, false, false);
      node1.isTrue();
      node2.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = new Node((-1406), (-1406), (-1406));
      Node node1 = Node.newString(123, "z", 40, 1111);
      node1.setLineno(30);
      node1.isNE();
      node1.isFunction();
      node0.putBooleanProp(25, true);
      node0.isObjectLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      jSTypeRegistry0.hasNamespace((String) null);
      node0.isGetProp();
      node1.isStringKey();
      Node node2 = Node.newString("?");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      node0.getInputId();
      node0.isDebugger();
      node2.isParamList();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = new Node(4, (-1150), 47);
      node0.setChangeTime(47);
      Node node1 = Node.newString(89, "en]VRuop0!l]!x(S6\"", 4095, (-1));
      node1.isFunction();
      node1.putBooleanProp(47, true);
      node1.isParamList();
      node0.isNoSideEffectsCall();
      node0.setLength((-1150));
      node1.setCharno(32);
      node1.isCatch();
      node0.getSourceOffset();
      node0.removeProp(3058);
      node0.getJSDocInfo();
      node0.getProp(39);
      node0.isReturn();
      node1.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = new Node(101, 101, 101);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isFunction();
      node0.isHook();
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter1, true);
      node1.isDebugger();
      node0.isEquivalentTo(node1, false, false, true);
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = Node.newString("klM", (-811), (-811));
      Node node1 = new Node((-811), node0, node0, 2097152, 57);
      Node node2 = node1.removeFirstChild();
      node2.isOptionalArg();
      node1.getChildCount();
      node2.getInputId();
      Node node3 = Node.newString("klM", 32, (-1399));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      // Undeclared exception!
      try { 
        node3.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = Node.newString(32, "<a[x63+-UA<nFj[;co", 32, 32);
      Node.newString("MNhz!a|j$[do!cE");
      node0.isQuotedString();
      node0.isOnlyModifiesArgumentsCall();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newString("", 133, 133);
      Node node1 = new Node(133, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isIf();
      node1.setJSType((JSType) null);
      node0.isNE();
      node0.isAssign();
      node0.getType();
      node0.isVoid();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newString("", (-1998), (-1998));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.valueOf();
      Node node1 = new Node(32, node0, node0, node0, node0);
      node1.isDelProp();
      node0.isTypeOf();
      node1.removeProp(38);
      node1.isThis();
      Node node2 = new Node(42, node1, node1, node1, node1);
      node1.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(51, 51, 51);
      node0.isVarArgs();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node1 = new Node(51, 35, 15);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isVoid();
      Node node3 = Node.newNumber(0.7);
      node3.isArrayLit();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.isQualifiedName();
      node3.useSourceInfoFromForTree(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("com.google.common.collect.LinkedHashMultimap$ValueEntry", node3, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = new Node(21);
      Node node1 = new Node(31, node0, node0, node0, node0, 4095, 911);
      node0.addChildrenToBack(node1);
      InputId inputId0 = new InputId((String) null);
      inputId0.toString();
      node1.setInputId(inputId0);
      node1.addSuppression("com.google.common.collect.Lists$TransformingRandomAccessList");
      node1.putIntProp(57, 46);
      node1.toString(true, true, true);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = new Node(4, (-1150), 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(4095, node0, 12, 30);
      node0.getJSType();
      node0.isFunction();
      node0.setLength((-509));
      node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(32, 30, (-1021));
      node1.getJSType();
      node1.isFunction();
      node2.children();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags((-38));
      node_SideEffectFlags1.setAllFlags();
      node0.isArrayLit();
      node_SideEffectFlags1.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = new Node(124);
      node0.setChangeTime(124);
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString(36, "zo", 1821, 56);
      node1.isFunction();
      node1.putBooleanProp(53, false);
      node1.isParamList();
      node1.isNoSideEffectsCall();
      node1.setLength((-811));
      node1.setCharno(29);
      node0.isCatch();
      node0.getSourceOffset();
      node1.removeProp(770);
      node1.getJSDocInfo();
      node1.getProp(53);
      node1.isAdd();
      node0.isDebugger();
      node1.isParamList();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-71);
      byteArray0[1] = (byte) (-59);
      byteArray0[2] = (byte)88;
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte)126;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%y:+'nH_o\"oYfh3");
      byteArray0[5] = (byte)33;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[6] = (byte)54;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node((byte)33, (-402), (byte)12);
      Node node1 = new Node((byte)54, node0, 16, 51);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.detachFromParent();
      node_NodeMismatch0.equals(node0);
      node1.wasEmptyNode();
      // Undeclared exception!
      try { 
        node1.toString(true, true, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 54
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("", (-1978), (-1978));
      node0.setVarArgs(true);
      node0.setSourceFileForTesting("");
      Node node1 = new Node(39, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.toString(true, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = new Node(124);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(53, node0, 32, 48);
      node0.cloneNode();
      Node node2 = new Node(32);
      Node node3 = null;
      try {
        node3 = new Node(103, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = Node.newNumber((double) 12, 40, (-2250));
      node0.getSourceOffset();
      node0.isStringKey();
      Node node1 = new Node(4095, node0, 57, 2);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      node0.getChildAtIndex(0);
      node0.isString();
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = new Node(115, 115, 823);
      node0.isName();
      Node node1 = new Node(50);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isOptionalArg();
      node0.useSourceInfoFrom(node1);
      node0.getChildAtIndex((-1764));
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newNumber((-2520.0));
      node0.isCall();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setLineno(108);
      node0.setVarArgs(false);
      node0.getQualifiedName();
      node0.getType();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = Node.newNumber((double) 2, 15, (-1371));
      node0.checkTreeTypeAwareEqualsImpl(node1);
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node((-556), (-556), 256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isFunction();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Object#Element", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      node2.hasChild(node0);
      Node node3 = new Node(31, node0, 56, (-433));
      node0.isVarArgs();
      node1.isThrow();
      Node.newNumber((double) 0, 116, 2353);
      Node node4 = Node.newString("com.google.common.base.CharMatcher$NegatedFastMatcher", 31, 39);
      node2.isUnscopedQualifiedName();
      node2.useSourceInfoFrom(node1);
      node4.isEquivalentToShallow(node3);
      node3.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.getIntProp((-3262));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1692));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags3.valueOf();
      node0.isDelProp();
      node0.isTypeOf();
      node0.removeProp(42);
      node0.isThis();
      Node node1 = new Node(1, node0, node0, node0, (-1317), 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      ImmutableList<JSType> immutableList1 = immutableList0.asList();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList1);
      Node node3 = new Node(39, node1, node1, node1, node2);
      Node node4 = Node.newString(53, "");
      node3.copyInformationFrom(node4);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newString("A(!@-T!Xt|geU/eCk");
      Node node1 = Node.newString("RO|");
      node0.setString("RO|");
      Node node2 = Node.newNumber((double) 16, 2, (-1665));
      Node node3 = node1.srcref(node0);
      node1.putIntProp(2056, (-1));
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node1);
      node_NodeMismatch0.equals(node_NodeMismatch0);
      Node node4 = new Node((-811), node2, node2);
      node1.isVarArgs();
      node0.isThrow();
      Node node5 = Node.newNumber(Double.POSITIVE_INFINITY, 37, 2);
      node0.isRegExp();
      node5.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.JAVA_DIGIT");
      node0.setString("BREAK");
      Node node1 = new Node((-1665), node0, node0, node0, node0, 49, 52);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isQualifiedName();
      node2.isHook();
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString("26q~ iu3Dt8%$$nSGX", 122, 16384);
      node0.setVarArgs(false);
      Node node1 = new Node(116, 36, 48);
      node1.isCase();
      node0.setCharno(43);
      node0.isString();
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2495));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setVarArgs(false);
      node0.isIf();
      Node node1 = new Node(36, node0, node0, node0, node0);
      node0.getIntProp(4551);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      node0.putBooleanProp(1, false);
      node0.isObjectLit();
      node1.mayMutateGlobalStateOrThrow();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.setLength((-483));
      Node node2 = Node.newString(2177, "%w15C|jI/Y");
      node1.hasChild(node2);
      node2.cloneNode();
      node0.getProp(40);
      node1.isAdd();
      node1.isDebugger();
      node0.removeProp(52);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.getQualifiedName();
      Node node1 = Node.newString(32, "en]VRuop0!l]!x(S6\"", 47, 8);
      node1.isNE();
      node0.isFunction();
      node1.putBooleanProp(43, true);
      node1.isAnd();
      node1.isParamList();
      node0.isNoSideEffectsCall();
      node0.setLength(116);
      node1.setCharno(49);
      node1.isCatch();
      node1.getSourceOffset();
      node1.removeProp(811);
      node1.getJSDocInfo();
      // Undeclared exception!
      try { 
        node1.getProp(43);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newString("", (-1998), (-1998));
      node0.isFromExterns();
      Node node1 = new Node(30);
      Node node2 = new Node((-1), node0, node1, node1, node1, (-784), 0);
      node1.clonePropsFrom(node0);
      node0.isQualifiedName();
      node1.isHook();
      // Undeclared exception!
      try { 
        node2.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = Node.newString("'R5");
      Node node1 = new Node(40, node0, node0, node0, node0);
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node1.isFunction();
      Node node2 = new Node(130, 50, (-612));
      node0.isDelProp();
      node0.isTypeOf();
      node1.removeProp(52);
      node0.isThis();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = Node.newString("", (-1975), 137);
      node0.setVarArgs(true);
      Node node1 = Node.newString("reflected_object", (-423), (-157));
      node1.getQualifiedName();
      node0.isSyntheticBlock();
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.getSourceFileName();
      node0.getJsDocBuilderForNode();
      Node node2 = new Node(1, node0, node1, node1, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setLength(1650);
      node1.setString("reflected_object");
      Node node3 = Node.newString(8, "");
      node3.getChangeTime();
      node2.isReturn();
      node3.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(26);
      node0.isFunction();
      node0.putBooleanProp((-1406), false);
      node0.isObjectLit();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node((-1076), node0, node0, (-233), 900);
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.hasChild(node0);
      Node node2 = new Node(147);
      Node node3 = new Node(55, node2, (-692), 2);
      node0.isVarArgs();
      node1.isThrow();
      node3.useSourceInfoFromForTree(node1);
      Node.newNumber((double) 56, 15, (-4625));
      node1.getIndexOfChild(node3);
      node3.isRegExp();
      node2.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString(0, "", (-139), 0);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(57, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.valueOf();
      node1.isDelProp();
      node1.isTypeOf();
      node1.removeProp(43);
      node1.isThis();
      Node node2 = new Node(57, node1, node1, node0, node0);
      node2.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}H");
      Node node0 = Node.newNumber(0.0);
      node0.getChildCount();
      node0.getSourcePosition();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString("9L 3}jEe{]t", (-730), (-730));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = new Node((-1912));
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.hasChild(node0);
      Node node2 = new Node(37, node1, 12, 403);
      node1.isVarArgs();
      node1.isThrow();
      Node node3 = Node.newNumber((double) 56, 32, (-1881));
      Node.newString("9L 3}jEe{]t", 38, 52);
      node3.isUnscopedQualifiedName();
      Node node4 = node2.useSourceInfoFrom(node1);
      node4.isEquivalentToShallow(node2);
      node1.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 1188, 2107);
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = new Node(16384, 122, (-132));
      node0.isBlock();
      node0.isDebugger();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = Node.newString(52, "vGT*");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = Node.newString("vGT*");
      Node node3 = new Node(42, 39, 154);
      node2.isEquivalentToShallow(node1);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("", (-1982), (-1982));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getSourceFileName();
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setLength(49);
      node0.setString("boolean");
      Node node2 = Node.newString(42, "{)R<&RZre");
      node2.getChangeTime();
      node1.isReturn();
      node2.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.putBooleanProp(118785, false);
      node0.isObjectLit();
      node0.mayMutateGlobalStateOrThrow();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, false);
      jSTypeRegistry1.hasNamespace(">R");
      node0.isGetProp();
      node0.isStringKey();
      Node node1 = Node.newString("input_id");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.getInputId();
      node_NodeMismatch0.equals("Vr~={R`Z=ts&Hyz");
      Node node2 = new Node(40, node0, node1, 9, 51);
      node2.removeProp(0);
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = new Node((-556), (-556), 256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isFunction();
      jSTypeRegistry0.hasNamespace("Object#Key");
      node1.isHook();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node3 = jSTypeRegistry1.createParameters(jSTypeArray0);
      node3.isNumber();
      node3.isFor();
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node3.isInstanceOf();
      node0.isSetterDef();
      node0.isQualifiedName();
      node2.getInputId();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newString("c(ux", 807, 807);
      node0.removeFirstChild();
      node0.mayMutateGlobalStateOrThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isIn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-134));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newString("c(ux", 807, 807);
      node0.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags(36);
      node_SideEffectFlags3.setReturnsTainted();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(4, (-1150), 47);
      node0.setChangeTime(47);
      Node node1 = Node.newString(89, "en]VRuop0!l]!x(S6\"", 4095, (-1));
      node0.isNE();
      node1.isFunction();
      node1.putBooleanProp(47, true);
      node1.isAnd();
      node0.mayMutateGlobalStateOrThrow();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags6.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node1.isScript();
      node1.isExprResult();
      Node node2 = new Node(39);
      // Undeclared exception!
      try { 
        node2.setDouble(39);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("}H");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node1.getString();
      node1.getChildAtIndex((-1));
      node0.isComma();
      node1.isEquivalentToTyped(node0);
      node0.isNumber();
      node0.isNull();
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(0.0);
      node0.getChildCount();
      node0.getSourcePosition();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      Node node1 = new Node(52, node0);
      Node node2 = node1.cloneNode();
      node0.isFunction();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setAllFlags();
      node1.getProp(49);
      node2.isAdd();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newString("", 133, 133);
      Node node1 = Node.newString(42, "", 42, 48);
      Node node2 = node1.cloneNode();
      Node node3 = new Node((-1393), node0);
      node2.getString();
      node0.getIntProp(51);
      node2.wasEmptyNode();
      Node node4 = node3.copyInformationFrom(node2);
      node4.isFunction();
      Node node5 = new Node(8, node2, 55, 29);
      node1.isDelProp();
      node0.isAssign();
      node3.isBreak();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setLength(49);
      node1.hasChild(node0);
      Node node2 = new Node(4, node1, (-1981), (-922));
      node2.isVarArgs();
      node2.isThrow();
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = new Node((-2520));
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node1 = node0.cloneTree();
      Node node2 = new Node(37, nodeArray0);
      Node node3 = new Node(53, node0, node0, node0, node0, 40, 1);
      node3.isWhile();
      node2.addSuppression((String) null);
      node0.getJsDocBuilderForNode();
      node2.cloneNode();
      node2.getJsDocBuilderForNode();
      node2.isDec();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(36);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2520
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = Node.newString("%w15C|jI/Y");
      Node node1 = Node.newString("node is not a child");
      node1.checkTreeEquals(node0);
      node0.setString("%w15C|jI/Y");
      int int0 = (-1665);
      Node node2 = new Node(40, node1, node0, 52, 29);
      Node node3 = node2.srcref(node0);
      node1.putIntProp(30, 42);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node3);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("node is not a child");
      node_NodeMismatch0.equals(templateType0);
      Node node4 = null;
      try {
        node4 = new Node(103, node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node.extractLineno((-4142));
      Node node0 = new Node(0, 1048574, (-4142));
      Node node1 = new Node((-203), node0, node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.checkTreeEquals(node1);
      node1.addChildToFront(node2);
      node1.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node0.setString("1eJ*yU1Qqy");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("~:l,X^");
      Node node1 = new Node((-2058), node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = Node.newNumber(2267.2225387891763);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isOnlyModifiesThisCall();
      node3.setIsSyntheticBlock(false);
      node0.isCall();
      node3.getSideEffectFlags();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "TRY");
      Node node4 = Node.newString((-1798), "ARRAY_TYPE");
      node4.getDirectives();
      node4.isQuotedString();
      node3.getQualifiedName();
      node0.isCatch();
      Node node5 = node1.useSourceInfoIfMissingFrom(node2);
      node5.setType(0);
      node1.useSourceInfoFromForTree(node3);
      node0.putIntProp(4095, (-524));
      node3.isArrayLit();
      node2.putIntProp(1468, 46);
      node3.isUnscopedQualifiedName();
      node4.getAncestor(5392);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString(":_wT", (-237), 2363);
      Node node1 = new Node(0, node0);
      Node node2 = node1.cloneNode();
      node2.getJsDocBuilderForNode();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("", (-1978), (-1978));
      node0.setVarArgs(true);
      // Undeclared exception!
      try { 
        node0.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(879, 101, 879);
      node0.putProp(101, (Object) null);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(4, (-1150), 47);
      node0.setChangeTime(47);
      Node node1 = node0.cloneNode();
      node1.getJSDocInfo();
      node0.setSourceEncodedPositionForTree(130);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // RETURN [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = new Node((-537), (-537), 256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isFunction();
      node1.isEquivalentTo(node0, true, false, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node1.addSuppression("Object#Key");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("", 133, 133);
      Node node1 = new Node(133, node0);
      Node node2 = node1.cloneNode();
      nodeArray0[0] = node1;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node0.getString();
      node1.setIsSyntheticBlock(false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node4 = new Node(40, node2, node3, (-1174), 37);
      // Undeclared exception!
      try { 
        node4.getChildAtIndex(53);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = new Node((-556), (-556), 256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isFunction();
      jSTypeRegistry0.hasNamespace("Object#Key");
      node1.isHook();
      node0.getJSDocInfo();
      node1.isQualifiedName();
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node3.type = 30;
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = new Node(1);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(823, node0, node0, node0, 5, 42);
      node1.isDo();
      node1.isNew();
      node0.checkTreeEqualsImpl(node1);
      node0.setWasEmptyNode(false);
      node1.isAdd();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node1.isVoid();
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-370), 51);
      node0.isVarArgs();
      node0.getAncestors();
      Node node1 = new Node(15, 155, 37);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = new Node(4095, node2, node0);
      node3.isVoid();
      node3.isArrayLit();
      Node node4 = new Node(39);
      node4.getJSDocInfo();
      node1.isQualifiedName();
      node1.useSourceInfoFromForTree(node3);
      Node.newString("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) null, jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("", 133, 133);
      Node node1 = new Node(133, node0);
      Node node2 = node1.cloneNode();
      nodeArray0[0] = node1;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      Node node3 = new Node(15);
      Node node4 = new Node(56, node1, node2, node2);
      node2.checkTreeTypeAwareEqualsImpl(node4);
      node4.isObjectLit();
      node2.isEquivalentTo(node3, true, false, true);
      node1.getType();
      node2.isWith();
      Node node5 = new Node(619, 53, 37);
      Node node6 = null;
      try {
        node6 = new Node((-962), (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = new Node(31);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node2 = new Node(8, node1, 52, 2);
      node1.isGetElem();
      node2.isSwitch();
      Node node3 = node0.srcref(node2);
      node1.copyInformationFromForTree(node3);
      node3.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(168, node0, node0, node0);
      node1.isThrow();
      Node node2 = Node.newString("f8$r.JzW*WZ");
      node0.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node2 = new Node((-817), node0, 16, 57);
      node2.isDelProp();
      node0.isSwitch();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getIntProp(31);
      node0.isQuotedString();
      node0.putBooleanProp(2730, false);
      node0.isObjectLit();
      node0.isEquivalentTo(node0, false, false, false);
      node0.getType();
      node0.isWith();
      node0.getBooleanProp(53);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(0.5);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setDouble(Double.POSITIVE_INFINITY);
      jSDocInfo0.setStruct();
      node0.setDouble((-93.1496));
      jSDocInfo0.getParameterNames();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.setJSDocInfo(jSDocInfo0);
      jSDocInfo0.setDefine(false);
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((File) null, "OBJECT_PROTOTYPE");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // OBJECT_PROTOTYPE
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newString("W", 122, 1183);
      Node node1 = new Node(40, node0);
      node1.cloneNode();
      node1.isFunction();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = 52;
      Node node0 = Node.newNumber((double) 52, 52, 52);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("", 133, 133);
      Node node1 = new Node(133, node0);
      Node node2 = node1.cloneNode();
      nodeArray0[0] = node1;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isBlock();
      node1.isAdd();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.isHook();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry1.createParameters(jSTypeArray0);
      node3.isNumber();
      node2.isFor();
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDo();
      node1.isName();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = Node.newString("", 133, 133);
      Node node1 = new Node(133, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isFunction();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node1.useSourceInfoFromForTree(node0);
      Node.newString("node is not a child");
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = new Node((-537), (-537), 256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isFunction();
      JSTypeNative jSTypeNative0 = JSTypeNative.SYNTAX_ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) functionType0, (Map<TemplateType, JSType>) hashMap0);
      TemplatizedType templatizedType1 = templatizedType0.toMaybeTemplatizedType();
      jSTypeRegistry0.createTemplatizedType((ObjectType) templatizedType1, (Map<TemplateType, JSType>) hashMap0);
      node1.isEquivalentTo(node0, true, false, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node3 = node0.useSourceInfoFrom(node2);
      node3.isEquivalentToShallow(node1);
      node3.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newString((-941), "", 132, 124);
      Node node1 = new Node(48, node0, node0, node0, node0, 2, 16);
      node1.isAnd();
      node0.isLabelName();
      Node node2 = Node.newNumber((double) 40);
      node2.getDouble();
      node1.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = new Node(302, 2629, 2629);
      node0.isWith();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      Node node1 = node0.srcref(node0);
      node1.isOnlyModifiesThisCall();
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node2 = null;
      try {
        node2 = new Node(42, nodeArray0, 37, 374);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node.mergeLineCharNo((-2828), 0);
      Node node0 = Node.newString("*io0P:2/b2P", (-2828), 0);
      boolean boolean0 = false;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("*io0P:2/b2P", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newString((-1979), "", (-1406), 911);
      Node node1 = new Node(31, node0, node0, node0, node0, 4095, 911);
      node0.addChildrenToBack(node1);
      InputId inputId0 = new InputId((String) null);
      node1.setInputId(inputId0);
      node1.addSuppression("com.google.common.collect.Lists$TransformingRandomAccessList");
      node1.toString(true, true, true);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = Node.newString("", 133, 133);
      Node node1 = new Node(133, node0);
      node1.cloneNode();
      node1.getJsDocBuilderForNode();
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      String string0 = "N_4~25CQRyx&}L$Qp{`";
      Node node0 = Node.newString("N_4~25CQRyx&}L$Qp{`");
      node0.getJsDocBuilderForNode();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString("N_4~25CQRyx&}L$Qp{`");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isFunction();
      Node node1 = Node.newString(1610612736, "}H");
      node1.isVar();
      node1.isExprResult();
      // Undeclared exception!
      try { 
        node1.setDouble(2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1610612736
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = Node.newString("A(!@-T!Xt|geU/eCk");
      Node node1 = Node.newString("RO|");
      node1.checkTreeEquals(node0);
      Node node2 = Node.newString("A(!@-T!Xt|geU/eCk", 149, 56);
      Node node3 = new Node(4095, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Node tree inequality:\nTree1:\nSTRING RO|\n\n\nTree2:\nSTRING A(!@-T!Xt|geU/eCk\n\n\nSubtree1: STRING RO|\n\n\nSubtree2: STRING A(!@-T!Xt|geU/eCk\n", node3, templateType0);
      ObjectType objectType0 = ObjectType.cast(enumType0);
      jSTypeArray0[0] = (JSType) objectType0;
      ObjectType objectType1 = ObjectType.cast(objectType0);
      jSTypeArray0[1] = (JSType) objectType1;
      Node node4 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node4.cloneNode();
      node3.isFunction();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = Node.newString(" is not a number node", 153, 153);
      Node node1 = new Node(53, node0, node0, node0, 48, 57);
      Node node2 = node1.cloneNode();
      Node node3 = new Node(2729);
      Node node4 = new Node(1697, node2, node3);
      node1.replaceChild(node0, node4);
      node3.removeProp(48);
      Node.extractCharno(16);
      node0.isAssign();
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      Node node1 = Node.newString("", 149, 12);
      Node node2 = new Node(38, node0);
      Node node3 = node2.cloneNode();
      Node node4 = new Node(38);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node4;
      nodeArray0[1] = node2;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node3;
      Node.newString(52, "", 2, 38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      int int0 = Node.CHANGE_TIME;
      Node node5 = new Node((-3144), node3, 32, 37);
      node5.isThrow();
      node4.isExprResult();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("", 133, 133);
      Node node1 = new Node(133, node0);
      node1.cloneNode();
      nodeArray0[0] = node1;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isBlock();
      node1.isAdd();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = Node.newString("A(!@-T!Xgeo=U/ek");
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 133
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-1021), nodeArray0, (-1021), (-1021));
      Node node1 = new Node((-1021), node0, node0, node0, node0);
      node0.isOptionalArg();
      node0.children();
      node0.getDirectives();
      node1.getCharno();
      node0.setType((-1));
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newNumber((-2520.0));
      node0.isCall();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setLineno(108);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node_FileLevelJsDocBuilder0.append("|I");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node_FileLevelJsDocBuilder0.append("CharMatcher.WHITESPACE");
      node2.isFalse();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      node1.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isFunction();
      Node node2 = Node.newString(40, "}H");
      node2.getChangeTime();
      node1.isNot();
      node2.isHook();
      node2.detachChildren();
      node0.isContinue();
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(40, node0, node0, node0, node0);
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newString(0, "", (-139), 0);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = Node.newString((-1406), "/", 1664, (-3993));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      node_SideEffectFlags0.setReturnsTainted();
      Node node3 = new Node(48, nodeArray0);
      node0.cloneNode();
      node3.isEquivalentToShallow(node2);
      node0.isNE();
      node1.isAssign();
      node0.getType();
      node1.isVoid();
      node3.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 0);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      Node node3 = node2.clonePropsFrom(node0);
      node3.setVarArgs(true);
      node0.isAnd();
      Node node4 = new Node(39);
      node4.clonePropsFrom(node3);
      // Undeclared exception!
      try { 
        node3.getExistingIntProp(108);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 108
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = Node.newString("&<Z", (-1986), (-1981));
      node0.setVarArgs(true);
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isNew();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.hasChild(node0);
      node1.getIntProp(32);
      node1.isQuotedString();
      node1.putBooleanProp(50, false);
      node1.srcrefTree(node0);
      node0.isObjectLit();
      Node node2 = new Node(119);
      Node node3 = new Node(47);
      node3.useSourceInfoIfMissingFromForTree(node1);
      node3.toStringTree();
      node0.getFirstChild();
      node2.toStringTree();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newString((-1979), "", (-1406), 905);
      Node node1 = new Node(4095, node0, node0, 49, 32);
      node1.setLineno(43);
      node0.isNE();
      node1.isFunction();
      node0.putBooleanProp((-1021), true);
      node0.isObjectLit();
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = new Node(122);
      Node.newNumber((-2804.72846873), 2025, 1);
      node2.useSourceInfoIfMissingFrom(node0);
      node1.isEquivalentTo(node0, true, true, true);
      node0.isTrue();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = Node.newString("fW?<QrI=Xh|dTg");
      Node node1 = new Node((-1406), node0, node0, node0, 31, 16);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fW?<QrI=Xh|dTg");
      node1.removeChild(node0);
      node1.setOptionalArg(false);
      node1.isQualifiedName();
      node0.setQuotedString();
      node1.isInc();
      node0.isAssign();
      node1.children();
      node0.isQuotedString();
      Node node2 = Node.newNumber((double) 4095);
      node1.getIndexOfChild(node2);
      Node node3 = Node.newString("fW?<QrI=Xh|dTg", 52, 30);
      node2.isWhile();
      node3.setString("fW?<QrI=Xh|dTg");
      // Undeclared exception!
      try { 
        node0.removeChild(node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newString((-1979), "", (-1406), 905);
      Node node1 = Node.newString(47, "", 32, 15);
      node1.setLineno(43);
      node0.isNE();
      node1.isFunction();
      node0.putBooleanProp((-1021), true);
      node0.isObjectLit();
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = new Node(122);
      Node[] nodeArray0 = new Node[2];
      Node node3 = Node.newNumber((-2804.72846873), 2025, 1);
      node2.useSourceInfoFromForTree(node3);
      Node node4 = Node.newString((-1786), "iYP $LIaomo8|", 42, 54);
      nodeArray0[0] = node4;
      nodeArray0[1] = node2;
      Node node5 = new Node((-2362), nodeArray0);
      node5.getIndexOfChild(node4);
      node1.isRegExp();
      node5.isGetterDef();
      node2.isBreak();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newString("%w15C|jI/Y");
      Node node1 = Node.newString("node is not a child");
      node1.checkTreeEquals(node0);
      node0.setString("%w15C|jI/Y");
      int int0 = (-1665);
      Node node2 = Node.newNumber((double) 42, 635, 53);
      Node node3 = node2.srcref(node0);
      node1.putIntProp(30, 42);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node3);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("node is not a child");
      node_NodeMismatch0.equals(templateType0);
      Node node4 = new Node(103, node2, node1);
      // Undeclared exception!
      try { 
        node1.replaceChild(node4, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = new Node((-556), (-556), 256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isFunction();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.hasNamespace("Object#Key");
      node1.isHook();
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node3 = jSTypeRegistry2.createParameters(jSTypeArray0);
      node3.isNumber();
      node3.isFor();
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node2.isDo();
      node3.isName();
      node0.isFalse();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node.newString("Dr)Y;Z}vu");
      Node node0 = Node.newString("Dr)Y;Z}vu", 29, 1);
      node0.checkTreeEquals(node0);
      node0.getLineno();
      Node node1 = new Node((-842), 31, 48);
      Node node2 = new Node(4, 38, 8);
      Node node3 = node2.useSourceInfoFrom(node1);
      node0.isVoid();
      node0.isArrayLit();
      node3.getJSDocInfo();
      node1.isQualifiedName();
      node0.useSourceInfoFromForTree(node2);
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node((-556), (-556), 256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      node0.setWasEmptyNode(false);
      node1.isBlock();
      node0.isAdd();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.checkTreeEquals(node1);
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isNot();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("", 133, 133);
      Node node1 = new Node(133, node0);
      Node node2 = node1.cloneNode();
      nodeArray0[0] = node1;
      Node node3 = new Node(4095);
      nodeArray0[1] = node2;
      Node node4 = new Node(4, node2, node2);
      // Undeclared exception!
      try { 
        node1.replaceChild(node1, node4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = new Node(124);
      boolean boolean0 = false;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(53, node0, 32, 48);
      node0.getJSType();
      node1.isFunction();
      node0.setLength(11);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      Node node3 = Node.newString(39, "h>~Bsl~C");
      node3.getJSType();
      node2.isFunction();
      node1.children();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      node3.getType();
      node_SideEffectFlags0.setMutatesThis();
      Node node4 = Node.newNumber((double) 4095);
      Node node5 = null;
      try {
        node5 = new Node(124, node1, node1, node4, node0, 31, 56);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node.extractLineno(55);
      Node node0 = new Node(2147483645);
      node0.isNoSideEffectsCall();
      Node node1 = new Node((-2988), node0, node0, node0, 102, 4);
      node1.isDo();
      node1.isNew();
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.setWasEmptyNode(true);
      node2.isBlock();
      node0.isAdd();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.checkTreeEquals(node0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        node1.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2988
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newString("9L 3}jEe{]t", (-730), (-730));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = new Node((-1912));
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.hasChild(node0);
      Node node2 = new Node(37, node1, 12, 403);
      node1.isVarArgs();
      node1.isThrow();
      Node node3 = Node.newNumber((double) 56, 32, (-1884));
      node3.useSourceInfoFrom(node2);
      node3.isUnscopedQualifiedName();
      Node node4 = node2.useSourceInfoFrom(node1);
      node4.isEquivalentToShallow(node2);
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      Node node1 = Node.newString("", 94, 97);
      Node node2 = new Node(57, node1);
      node0.cloneNode();
      Node node3 = new Node(42);
      int int0 = 13;
      Node node4 = new Node(15);
      // Undeclared exception!
      try { 
        node0.replaceChild(node3, node4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = Node.newString((-1979), "", (-1406), 905);
      Node node1 = Node.newString(47, "", 32, 15);
      node1.setLineno(43);
      node0.isNE();
      node1.isFunction();
      node0.putBooleanProp((-1021), true);
      node0.isObjectLit();
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = new Node(122);
      Node[] nodeArray0 = new Node[2];
      Node node3 = Node.newNumber((-2804.72846873), 2025, 1);
      node2.useSourceInfoFromForTree(node3);
      Node node4 = Node.newString((-1786), "iYP $LIaomo8|", 42, 2657);
      nodeArray0[0] = node4;
      nodeArray0[1] = node2;
      Node node5 = new Node((-2362), nodeArray0);
      node5.getIndexOfChild(node4);
      node1.isRegExp();
      node5.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = new Node((-2000));
      Node node1 = new Node((-1979), node0, node0, node0, 85, 29);
      node1.setLineno(3931);
      node1.isNE();
      node0.isFunction();
      node0.putBooleanProp(751619276, false);
      node0.isObjectLit();
      node1.mayMutateGlobalStateOrThrow();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node1.getType();
      node0.isAdd();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newString((-1979), "", (-1406), 900);
      node0.setSourceFileForTesting("");
      node0.getSourceFileName();
      Node node1 = new Node(31, node0, node0, node0, node0, 4095, 900);
      node0.addChildrenToBack(node1);
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.newString("", (-218), 2946);
      node0.putIntProp(33, 13);
      node1.getAncestor(117);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = new Node(124);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(53, node0, 32, 48);
      node0.getJSType();
      node1.isFunction();
      node0.setLength(11);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      Node node3 = Node.newString(39, "h>~Bsl~C");
      node3.getJSType();
      node2.isFunction();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.setLength(32);
      node3.setCharno(38);
      node1.getProp(52);
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node1 = Node.newString(4095, ":]:ht~Pt`Bu`ZkI");
      node_SideEffectFlags1.setReturnsTainted();
      node0.getIntProp(31);
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "STRING ");
      node_SideEffectFlags2.valueOf();
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newString(911, "v");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(1433);
      node0.isQuotedString();
      node0.getJsDocBuilderForNode();
      Node node1 = Node.newNumber((-366.88231140435));
      node1.isRegExp();
      Node node2 = new Node(628);
      node0.isStringKey();
      node0.isCase();
      node2.isAssignAdd();
      node1.isScript();
      node1.isExprResult();
      // Undeclared exception!
      try { 
        node2.setDouble((-644.2940175056));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 628
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.isFromExterns();
      node0.getSourceFileName();
      node0.setVarArgs(true);
      node0.isAnd();
      Node node1 = new Node(39);
      // Undeclared exception!
      try { 
        node0.clonePropsFrom(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("}H");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getString();
      node0.getIntProp(16);
      node0.getChildBefore(node1);
      node1.wasEmptyNode();
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString(229, "prev is not a child of this node.");
      node_SideEffectFlags0.setReturnsTainted();
      node0.getIntProp(1433);
      node0.isQuotedString();
      node0.getJsDocBuilderForNode();
      node0.isRegExp();
      Node node2 = new Node(38);
      node2.isStringKey();
      node0.isCase();
      node0.isAssignAdd();
      node1.isScript();
      node1.isExprResult();
      try { 
        node0.setDouble(Double.POSITIVE_INFINITY);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("", 94, 97);
      Node node2 = new Node(57, node1);
      node0.cloneNode();
      Node node3 = new Node(42);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node4 = new Node(13, nodeArray0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      int int0 = Node.SLASH_V;
      node2.isThrow();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setLength(49);
      node1.setStaticSourceFile((StaticSourceFile) null);
      node1.hasChild(node0);
      Node node2 = new Node(4, node1, (-1981), 15);
      node2.isVarArgs();
      node2.isThrow();
      node1.isUnscopedQualifiedName();
      Node node3 = node2.useSourceInfoFrom(node1);
      node2.isEquivalentToShallow(node3);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newString("Ad%o6FS:X9s", (-404), 37);
      Node node1 = new Node((-404), node0, node0, node0, 85, 1601);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ad%o6FS:X9s");
      node1.isWhile();
      node1.isTypeOf();
      node0.getQualifiedName();
      node0.removeProp(29);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zoZJ}G=_#ZH%{:5|t");
      Node node3 = Node.newNumber((double) 1601, 43, 31);
      node3.getSourcePosition();
      node2.isNew();
      node1.isTry();
      node1.isIn();
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setThrows();
      Node node0 = Node.newString(132, "", (-941), 132);
      Node node1 = new Node((-2460), node0, node0, node0, node0, (-2933), 301);
      node0.getJsDocBuilderForNode();
      Node node2 = new Node((-525), node1);
      node2.isRegExp();
      node1.isTrue();
      Node node3 = Node.newString(" : ", 2, 16);
      node3.isAssignAdd();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = new Node((-556), (-556), 256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isFunction();
      node1.isEquivalentTo(node0, true, false, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node2.isLabel();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setLength(49);
      node1.setStaticSourceFile((StaticSourceFile) null);
      node1.hasChild(node0);
      Node node2 = new Node(4, node1, (-1981), 15);
      node2.isVarArgs();
      node2.isThrow();
      node1.isUnscopedQualifiedName();
      node0.toString(false, false, true);
      node2.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.isSyntheticBlock();
      Node node1 = Node.newNumber(1.0, 309, (-1715));
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node2 = new Node(15);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.isNew();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.hasChild(node1);
      node0.getIntProp(30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node4 = new Node(2997, node3, node0, 56, 305);
      node4.isQuotedString();
      node2.putBooleanProp(2529, true);
      node0.isObjectLit();
      node1.isOnlyModifiesArgumentsCall();
      Node node5 = new Node(4095, 57, 43);
      Node node6 = new Node(112, node5);
      node6.getSideEffectFlags();
      node6.getNext();
      node6.isNull();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node.extractCharno((-763));
      Node node0 = new Node(3333);
      node0.isLabel();
      node0.isTry();
      node0.isCatch();
      Node node1 = node0.cloneTree();
      Node.newNumber((double) 15, 1319, 11);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node0.isUnscopedQualifiedName();
      node2.mayMutateArguments();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = new Node((-574), (-574), (-574));
      node0.getBooleanProp(301);
      node0.setLength(0);
      Node node1 = node0.cloneTree();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node node1 = Node.newString(105, ":]:ht~Pt`Bu`ZkI");
      node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(31);
      node1.isQuotedString();
      node1.getJsDocBuilderForNode();
      node0.isRegExp();
      node0.isStringKey();
      node0.isCase();
      node1.isAssignAdd();
      node0.isScript();
      node0.isExprResult();
      try { 
        node1.setDouble(53);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION :]:ht~Pt`Bu`ZkI is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.isQualifiedName();
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(4126);
      node0.isQuotedString();
      node1.putBooleanProp(794, false);
      node1.isObjectLit();
      node0.isEquivalentToTyped(node1);
      node0.setLength(1106);
      Node node2 = Node.newNumber((double) 31, 55, 16);
      node0.hasChild(node2);
      node1.isVarArgs();
      node0.isEquivalentTo(node0);
      node2.getLength();
      node0.addChildBefore(node2, node1);
      Node.extractCharno(47);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = Node.newString(4095, ":]:ht~Pt`Bu`ZkI", 4095, 56);
      node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(31);
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.valueOf();
      Node.newString("");
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newString(112, "", 112, 1754);
      node0.isCatch();
      Node node1 = node0.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setSuppressions((Set<String>) null);
      node0.addSuppression("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.REFERENCE_ERROR_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      JSType jSType0 = jSTypeRegistry0.createNullableType(objectType0);
      jSTypeArray0[0] = jSType0;
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node1.isDefaultCase();
      node1.isVarArgs();
      node0.toStringTree();
      node1.isEquivalentToTyped(node0);
      node1.isEquivalentTo(node0, false, true, true);
      node0.isDelProp();
      node0.isSwitch();
      node2.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newString((-1979), "", (-1406), 905);
      Node node1 = Node.newString(47, "", 32, 15);
      node1.setLineno(43);
      node0.isNE();
      node1.isFunction();
      node0.putBooleanProp((-1021), true);
      node0.isObjectLit();
      node1.isRegExp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags5.setThrows();
      node_SideEffectFlags5.setReturnsTainted();
      node1.getType();
      node1.isIn();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags0.setThrows();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = new Node(2059, 124, 2059);
      Node node1 = new Node((-1089), node0, node0, 11, 8);
      Node node2 = node1.srcrefTree(node0);
      node2.addChildToFront(node1);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = Node.newString("f&");
      Node node1 = Node.newString("R5", 29, 1);
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.valueOf();
      Node node2 = Node.newString("z");
      node1.isEmpty();
      node0.detachChildren();
      node0.isEquivalentTo(node2, false, true, false);
      node2.isBreak();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5", 29, 1);
      node1.setVarArgs(true);
      node0.isIf();
      Node node2 = new Node(111, node0, node1, node0, node0);
      // Undeclared exception!
      try { 
        node2.addChildToBack(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = new Node(35);
      node0.isNew();
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseAllType();
      jSTypeArray0[0] = jSType0;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.removeProp((-809));
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.getIndexOfChild(node2);
      node2.isRegExp();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newString("&<Z", (-1986), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isNew();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.hasChild(node0);
      node1.getIntProp(32);
      node1.isQuotedString();
      node1.putBooleanProp(50, false);
      node0.isObjectLit();
      node0.isOnlyModifiesArgumentsCall();
      node1.getNext();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2520));
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(0, nodeArray0);
      Node node2 = new Node((-2520), node0, node1);
      node2.isSyntheticBlock();
      node0.getDouble();
      node2.isEquivalentTo(node1);
      Node node3 = null;
      try {
        node3 = new Node((-2559), node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node node1 = Node.newString(105, ":]:ht~Pt`Bu`ZkI");
      node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(31);
      node1.isQuotedString();
      node1.getJsDocBuilderForNode();
      node0.isRegExp();
      node0.isStringKey();
      node0.isCase();
      node1.isAssignAdd();
      node0.isScript();
      node0.isExprResult();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = Node.newNumber((-1792.0468488564652));
      node0.isDec();
      String string0 = "Muh..gHo0t}";
      node0.setSourceFileForTesting("Muh..gHo0t}");
      Node node1 = new Node((-1795), node0, node0, 16, 47);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.getAncestors();
      node0.setLineno(12);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = Node.newString((-1979), "", (-1406), 900);
      node0.setLineno(43);
      node0.isNE();
      node0.getJsDocBuilderForNode();
      node0.isRegExp();
      node0.isTrue();
      node0.isCase();
      node0.isAssignAdd();
      // Undeclared exception!
      try { 
        node0.getAncestor((-908));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newString((-1979), "", (-1406), 900);
      node0.getSourceFileName();
      Node node1 = new Node(31, node0, node0, node0, node0, 4095, 900);
      node0.addChildrenToBack(node1);
      Node node2 = node0.getAncestor(55);
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node3.isEquivalentTo(node0, false, false, true);
      node0.putBooleanProp((-807), false);
      node3.getSideEffectFlags();
      node1.isString();
      Node.extractCharno(31);
      node0.isObjectLit();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = new Node(4, node1, node0, 56, 57);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(43, nodeArray0);
      node1.srcrefTree(node3);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = new Node(1754, 1754, 1754);
      node0.isNE();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node((-556), (-556), 256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isFunction();
      node0.cloneNode();
      node1.isEquivalentTo(node0, true, false, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node1.addChildToFront(node0);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newString("Dr)Y;Z}vu");
      Node node1 = Node.newString("Dr)Y;Z}vu", 29, 1);
      node1.checkTreeEquals(node1);
      node1.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node2 = new Node(3, node0, 29, 31);
      node1.isGetElem();
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = new Node(1);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(823, node0, node0, node0, 5, 42);
      node1.isDo();
      node1.isNew();
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.checkTreeEqualsImpl(node1);
      node2.setWasEmptyNode(false);
      node2.isBlock();
      node1.isAdd();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.checkTreeEquals(node2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.extractLineno(39);
      Node node3 = node0.copyInformationFromForTree(node1);
      node3.setLength(105);
      node1.detachChildren();
      Node node4 = node1.getLastSibling();
      node0.addChildrenToBack(node3);
      node2.hasMoreThanOneChild();
      node4.isName();
      node1.getNext();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(9, nodeArray0, 2, 9);
      Node node1 = Node.newString(85, "4{", 2, 35);
      node0.useSourceInfoIfMissingFromForTree(node1);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BITOR 2 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node((-1758));
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      node0.isDefaultCase();
      node1.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isFunction();
      Node node2 = Node.newString(15, "");
      node0.getChangeTime();
      node0.isNot();
      node2.isHook();
      // Undeclared exception!
      try { 
        node1.setDouble(0.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1758
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      String string0 = "\"vmi|";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("\"vmi|");
      node0.isString();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(32, node0, node0, node0, 9, 55);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = Node.newString("com.google.javascript.rhino.Node$FileLevelJsDocBuilder");
      node1.checkTreeEquals(node3);
      node2.addChildrenToFront(node1);
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(1785);
      node_SideEffectFlags2.setReturnsTainted();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got TYPEOF
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString(12, "", 12, 1754);
      node0.isComma();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      Node node1 = new Node(42, node0, node0, node0, node0, 0, 50);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.setQuotedString();
      node1.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setMutatesThis();
      node1.isRegExp();
      Node node2 = new Node(38);
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("", 133, (-272));
      Node node1 = new Node(133, node0);
      nodeArray0[0] = node1;
      Node node2 = new Node(4095);
      nodeArray0[1] = node2;
      Node node3 = new Node(133, nodeArray0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("S}");
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newString(12, "", 12, 1754);
      Node node1 = node0.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isVar();
      node1.toStringTree();
      node0.isEquivalentToTyped(node1);
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      node1.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newString("&<Z", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setLength(49);
      node1.hasChild(node0);
      Node node2 = new Node(4, node1, (-1981), (-922));
      node2.getJsDocBuilderForNode();
      node2.isVarArgs();
      node2.isLocalResultCall();
      node2.isThrow();
      node1.isGetProp();
      node2.isInstanceOf();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = Node.newString("");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node1 = Node.newString("R5", 29, 1);
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node0.hasOneChild();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      int int0 = 108;
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(108, (Node) null, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(4095);
      node0.isQuotedString();
      node1.putBooleanProp(794, false);
      node1.isObjectLit();
      node0.setLength(1106);
      Node node2 = Node.newNumber((double) 31, 55, 16);
      node0.hasChild(node2);
      node1.isVarArgs();
      node1.isTrue();
      node2.getLength();
      node0.addChildBefore(node2, node1);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newString("fk");
      Node node1 = Node.newString("R5", 29, 1);
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node0.removeProp(1);
      node0.getIndexOfChild(node1);
      node1.isRegExp();
      node0.isGetterDef();
      node1.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = Node.newString(12, "", 12, 1754);
      node0.hasMoreThanOneChild();
      Node node1 = Node.newString(4095, "", 31, 2);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setSuppressions((Set<String>) null);
      jSDocInfo0.documentVersion("");
      jSDocInfo0.setDisposedParameter((String) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = new Node((-908));
      node0.isFunction();
      Node node1 = new Node(54, node0);
      node0.isInc();
      node1.isHook();
      node0.detachFromParent();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(52);
      node_SideEffectFlags0.setReturnsTainted();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -908
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(35);
      node0.isNew();
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node1 = Node.newString(31, "5");
      node0.getChangeTime();
      node0.isEquivalentToTyped(node1);
      node0.isHook();
      node1.isStringKey();
      node1.isFor();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newString("&<Z", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setLength(49);
      node1.hasChild(node0);
      Node node2 = new Node(4, node1, (-1981), (-922));
      node2.getJsDocBuilderForNode();
      node2.isVarArgs();
      node2.isThrow();
      node1.isGetProp();
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = Node.newString(105, ":]:ht~Pt`Bu`ZkI");
      node_SideEffectFlags2.setReturnsTainted();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = Node.newString(":]:ht~Pt`Bu`ZkI", 50, 39);
      node1.putProp(51, node0);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING :]:ht~Pt`Bu`ZkI 50 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000006] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newString(12, "", 12, 1754);
      node0.isCatch();
      Node node1 = node0.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setSuppressions((Set<String>) null);
      jSDocInfo0.documentVersion("m4o%SX4<=4,MuByX");
      jSDocInfo0.setDisposedParameter((String) null);
      node1.putIntProp(93, (-376));
      node1.isOptionalArg();
      node1.isTrue();
      node1.putBooleanProp(52, true);
      node1.isObjectLit();
      node0.mayMutateGlobalStateOrThrow();
      node1.setLength(1754);
      Node node2 = new Node(43, node1, node1, node0);
      Node node3 = new Node((-249), node2, node2);
      node1.hasChild(node0);
      node1.isVarArgs();
      node1.isThrow();
      node2.isGetProp();
      Node node4 = node2.getLastChild();
      node4.isBreak();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(734, (-31), (-31));
      Node node1 = new Node(8, 38, 42);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.checkTreeEquals(node1);
      node1.getJsDocBuilderForNode();
      Node node3 = Node.newString("");
      node0.getSourceFileName();
      node3.getFirstChild();
      Node node4 = null;
      try {
        node4 = new Node(2041, node0, (Node) null, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(4);
      node0.getIntProp(100);
      node0.isQuotedString();
      node0.putBooleanProp(48, false);
      node0.isObjectLit();
      node0.putIntProp(2215, 40);
      node1.isVarArgs();
      node0.isTrue();
      node1.putBooleanProp(18, true);
      node0.isObjectLit();
      node1.mayMutateGlobalStateOrThrow();
      node0.setLength(2933);
      Node node2 = new Node(56, node0, node0);
      node2.hasChild(node1);
      node0.isVarArgs();
      node0.isThrow();
      node0.isGetProp();
      node0.getLastChild();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString(0, "", 0, 0);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node2.clonePropsFrom(node0);
      node2.addChildAfter(node1, node0);
      node1.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(4);
      node0.getIntProp(100);
      node0.isThis();
      node0.putBooleanProp(48, false);
      node0.isObjectLit();
      node1.isVarArgs();
      node0.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[0] = jSType0;
      JSType jSType1 = jSTypeRegistry0.createOptionalType(jSType0);
      jSTypeArray0[1] = jSType1;
      node0.isDelProp();
      node1.isTypeOf();
      node0.removeProp(55);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newString(12, "", 12, 1754);
      node0.isNE();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      Node node1 = new Node(42, node0, node0, node0, node0, (-2629), 50);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.setQuotedString();
      node1.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setMutatesThis();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = Node.newString(1754, "The new child node already has a parent.", (-499), (-499));
      node0.isNE();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = new Node((-1906), node0, node0, node0, node0, 30, 56);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = new Node(12);
      node0.isNew();
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node1 = new Node(2, node0, 4095, 3026);
      node0.isGetElem();
      node1.isUnscopedQualifiedName();
      node1.isSwitch();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newString(0, "", (-139), 461845905);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(57, nodeArray0);
      node0.addChildToBack(node2);
      Node node3 = Node.newString((-1406), "/", 1664, (-3993));
      node3.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node0.getIntProp(1385);
      node1.isQuotedString();
      node2.putBooleanProp(38, false);
      node2.isObjectLit();
      Node node4 = Node.newNumber((-3531.67), 16, 29);
      node4.setSourceEncodedPosition(3928);
      node1.isSwitch();
      node4.isOnlyModifiesArgumentsCall();
      node1.isGetterDef();
      node1.useSourceInfoFrom(node3);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = Node.newString(12, "c(ux", 154, 154);
      Node node1 = Node.newString(54, "c(ux", (-4029), 2);
      Node node2 = Node.newString(56, "1#3<", 2, 124);
      Node node3 = Node.newNumber((double) 37);
      node0.setLineno(2);
      node1.isNE();
      node3.getJsDocBuilderForNode();
      node2.isRegExp();
      node3.isTrue();
      node2.isCase();
      node1.isAssignAdd();
      Node node4 = Node.newString(65536, "1#3<", 51, 2);
      node4.isOr();
      node3.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      String string0 = "R";
      Node node0 = Node.newString("R", (-940), (-940));
      Node node1 = new Node(8287, node0, node0);
      node0.setSourceEncodedPosition(97);
      node0.setOptionalArg(false);
      node1.detachChildren();
      node1.isCall();
      node1.setJSType((JSType) null);
      node1.detachChildren();
      node1.isLabel();
      node1.getQualifiedName();
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setThrows();
      Node node0 = Node.newString(132, "", (-941), 132);
      Node node1 = new Node((-2460), node0, node0, node0, node0, (-2933), 301);
      node1.setVarArgs(false);
      node0.isAnd();
      node0.isLabelName();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SCRIPT  is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newString(12, "", 12, 1754);
      Node node1 = node0.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setSuppressions((Set<String>) null);
      node1.toStringTree();
      node0.isEquivalentToTyped(node1);
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      Node.newString("");
      Node node2 = null;
      try {
        node2 = new Node(46, (Node) null, node1, 111, 50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getJSType();
      node0.getSourceOffset();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      node0.putProp(742, templateType0);
      node0.isParamList();
      Node node1 = Node.newString("{Ix;H%yt2&Hs+eltVC", 40, 60);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node1.isWhile();
      node0.isUnscopedQualifiedName();
      node0.getString();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(53);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString(0, "", (-146), 0);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node2.addChildAfter(node1, node0);
      node2.siblings();
      node1.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString(0, "", (-139), 461845905);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(57, nodeArray0);
      node0.addChildToBack(node2);
      Node.newString((-1406), "/", 1664, (-3993));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node0.getIntProp(1385);
      node1.isQuotedString();
      node2.putBooleanProp(38, false);
      node2.isObjectLit();
      Node node3 = Node.newNumber((-3531.67), 16, 29);
      node1.isSwitch();
      node3.isOnlyModifiesArgumentsCall();
      node3.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(4);
      node0.getIntProp(100);
      node0.isQuotedString();
      node0.putBooleanProp(48, false);
      node0.isObjectLit();
      node0.putIntProp(2215, 40);
      node1.isVarArgs();
      node0.isTrue();
      node1.wasEmptyNode();
      node0.isObjectLit();
      node1.isEquivalentTo(node0, false, true, true);
      node1.mayMutateGlobalStateOrThrow();
      node0.setLength(2933);
      Node node2 = new Node(56, node0, node0);
      node2.hasChild(node1);
      node0.isVarArgs();
      node0.isThrow();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newString(12, "", 12, 1754);
      Node node1 = node0.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setSuppressions((Set<String>) null);
      node1.toStringTree();
      node0.isEquivalentToTyped(node1);
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      node1.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = new Node(35);
      node0.isNew();
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node1 = new Node(57, node0, 51, 13);
      node1.isGetElem();
      node1.isSwitch();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags5.valueOf();
      Node node0 = Node.newString("z");
      node0.isArrayLit();
      Node node1 = new Node(40);
      node0.isEquivalentToShallow(node1);
      node0.isDefaultCase();
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = new Node(2343);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node node2 = node0.getLastSibling();
      Node.newString("): ", 154, (-5084));
      node2.detachChildren();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.isEquivalentTo(node1, false, false, true);
      node2.isContinue();
      node2.getJsDocBuilderForNode();
      node1.isArrayLit();
      // Undeclared exception!
      try { 
        node2.setString("J<'!Uck(q)Qy");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2343
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newString(12, "", 12, 1754);
      node0.isCatch();
      Node node1 = node0.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setSuppressions((Set<String>) null);
      jSDocInfo0.documentVersion("m4o%SX4<=4,MuByX");
      jSDocInfo0.setDisposedParameter((String) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(31, node0, node0, node0, 98, 54);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = Node.newString("R");
      node3.checkTreeEquals(node0);
      node0.addChildrenToFront(node3);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      Node node4 = new Node(36, 50, 39);
      node2.isName();
      node2.hasChildren();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5", 29, 1);
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node0.isEquivalentTo(node1, true, false, true);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(1123, "R", 1123, 581);
      node0.children();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.isNew();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1175));
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1123
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node.extractCharno((-763));
      Node node0 = new Node(3333);
      node0.isLabel();
      node0.isTry();
      node0.isCatch();
      Node node1 = node0.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setSuppressions((Set<String>) null);
      jSDocInfo0.documentVersion((String) null);
      jSDocInfo0.setDisposedParameter((String) null);
      node1.setJSDocInfo(jSDocInfo0);
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node.newString(105, ":]:ht~Pt`Bu`ZkI");
      node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(31);
      node0.isQuotedString();
      node0.putBooleanProp(2724, false);
      node0.isObjectLit();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setThrows();
      Node node1 = new Node(42, 933, 43);
      node1.isName();
      node1.hasChildren();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.isAnd();
      node0.isLabelName();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      node1.isDefaultCase();
      Node node2 = new Node(4, node0, (-2369), 29);
      node1.isDelProp();
      Node node3 = Node.newNumber(1209.7);
      node3.isSwitch();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newNumber((double) 1754, 12, 12);
      node0.getIntProp(12);
      node0.isQuotedString();
      node0.putBooleanProp(83, true);
      node0.isObjectLit();
      node0.putIntProp(321, 9);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node_SideEffectFlags2);
      Node node1 = new Node(1169, node0, node0);
      node0.removeProp(12);
      Node.extractCharno((-4391));
      node0.isSetterDef();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString(4095, "");
      Node node2 = new Node(15, node1, 38, 54);
      node2.addChildrenToFront(node0);
      node1.isDelProp();
      node1.cloneTree();
      Node node3 = Node.newString("", 49, 50);
      node1.getIndexOfChild(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(83);
      node_SideEffectFlags0.setMutatesThis();
      node0.isInc();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags5.valueOf();
      Node node0 = Node.newString("z");
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2520));
      node0.checkTreeEquals(node0);
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString((-1979), "", (-1406), 900);
      Node node1 = Node.newString(47, "", 32, 15);
      node0.removeProp(56);
      node1.setLineno(43);
      node0.isNE();
      node1.isFunction();
      node1.isEquivalentTo(node0, false, false, true);
      node1.isTrue();
      node1.isSyntheticBlock();
      node1.isCase();
      node0.getInputId();
      node1.setInputId((InputId) null);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = new Node(24);
      node0.isNew();
      node0.getLineno();
      node0.getType();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString((-1979), "", (-1406), 900);
      node0.getSourceFileName();
      Node node1 = new Node(31, node0, node0, node0, node0, 4095, 900);
      node0.addChildrenToBack(node1);
      node1.addSuppression("com.google.common.collect.Lists$TransformingRandomAccessList");
      node1.toString(true, true, true);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newString("Qa[+`mqV-yD^cL1", 1660, (-1129));
      node0.putBooleanProp((-1129), false);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = new Node((-1662), (-556), (-556));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isFunction();
      node1.mayMutateGlobalStateOrThrow();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      node2.getType();
      node0.isCall();
      node2.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = new Node(35);
      node0.isNew();
      node0.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node1 = new Node(57, node0, 51, 13);
      node0.isDelProp();
      node1.isSwitch();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(29, 54, 114);
      Node.newString(1, "R");
      Node node2 = new Node(38, node1, node0, 3322, 663);
      node2.srcrefTree(node1);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newString(1754, "");
      node0.isNE();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      Node node1 = new Node(42, node0, node0, node0, node0, (-2629), 50);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node node2 = new Node(33, node1, node1);
      node0.removeProp(2);
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = new Node((-1662), (-556), 256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.useSourceInfoIfMissingFrom(node2);
      node2.isFunction();
      node1.isEquivalentTo(node0, true, false, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node3 = new Node(55, node1, node2, node0, 46, 49);
      node3.srcref(node0);
      node3.isHook();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = Node.newString(12, "", 12, 1754);
      node0.isNE();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      Node node1 = Node.newNumber((double) 1, 2, 29);
      node1.getSideEffectFlags();
      Node node2 = Node.newString(4095, "#%/Po@7E`W\"WpO9U");
      node2.getSideEffectFlags();
      node0.isContinue();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = Node.newString(12, "", 12, 1754);
      node0.isNE();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      Node node1 = new Node(42, node0, node0, node0, node0, (-2629), 50);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.setQuotedString();
      node1.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setMutatesThis();
      node1.isRegExp();
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = new Node(124);
      boolean boolean0 = false;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(50, node0, node0, node0, node0, 30, 51);
      node1.getJSType();
      node1.isFunction();
      node0.setLength(8);
      try { 
        node0.setString("Not declared as a type name");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // EMPTY [length: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = new Node(124);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = Node.newNumber(2651.216809411, (-2250), 47);
      node0.toString();
      node0.getSourceOffset();
      node1.isStringKey();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node2 = new Node((-817), node0, 16, 57);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node3 = new Node(32768, 1, (-2250));
      node3.isIn();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newString("}H");
      node0.getJSType();
      node0.isFunction();
      Node node1 = new Node(1, node0);
      node1.isInc();
      node1.isHook();
      Node node2 = node0.detachFromParent();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      node_SideEffectFlags0.setReturnsTainted();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString("");
      Node.newString("}H");
      Node node1 = Node.newString(1, "GzC+Ww:g6");
      node0.useSourceInfoIfMissingFromForTree(node1);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node0.isUnscopedQualifiedName();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = Node.newString(105, ":]:ht~Pt`Bu`ZkI");
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(31);
      node0.isQuotedString();
      node0.putBooleanProp(2724, false);
      node0.isObjectLit();
      node0.mayMutateGlobalStateOrThrow();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node0.getType();
      node0.isIn();
      node1.isHook();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1754);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newNumber((double) 1754, 56, 12);
      node0.getIntProp(56);
      node0.isQuotedString();
      node0.putBooleanProp(83, true);
      node0.isObjectLit();
      node0.putIntProp(321, 42);
      node0.isFunction();
      node0.getChangeTime();
      node0.isNot();
      node0.isFor();
      node0.getJSDocInfo();
      node0.hasOneChild();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = new Node(124);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = new Node(50, node0, node0, node0, node0, 30, 51);
      node1.getJSType();
      node1.isFunction();
      node0.setLength(57);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      Node node3 = Node.newString(39, "h>~Bsl~C");
      node3.getJSType();
      node2.isFunction();
      node1.children();
      node3.isInc();
      node0.isHook();
      node2.detachFromParent();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 50
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newNumber(Double.POSITIVE_INFINITY, 51, (-370));
      node0.isVarArgs();
      node0.getAncestors();
      Node node1 = new Node(42, 112, 52);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isVoid();
      node1.isArrayLit();
      node2.getJSDocInfo();
      node0.isQualifiedName();
      node2.useSourceInfoFromForTree(node1);
      Node node3 = Node.newString("node is not a child");
      // Undeclared exception!
      try { 
        node3.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newString("node is not a child", 1309, 1309);
      Node node1 = Node.newString("node is not a child");
      node0.isEquivalentTo(node1, true, false, true);
      node1.putBooleanProp(55, false);
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      node1.isString();
      Node.extractCharno(46);
      node1.isObjectLit();
      node1.getSourceFileName();
      node1.getInputId();
      node1.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.inRange('");
      node0.setString("CharMatcher.inRange('");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[3];
      JSTypeNative jSTypeNative0 = JSTypeNative.STRING_OBJECT_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[0] = jSType0;
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSTypeArray0[0], jSType0, jSTypeArray0[0], jSType0, jSTypeArray0[0], jSTypeArray0[0], jSTypeArray0[0], jSTypeArray0[0], jSType0, jSType0);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs(jSType0, (List<JSType>) immutableList0);
      jSTypeArray0[1] = (JSType) functionType0;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node0, functionType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.autoboxesTo();
      jSTypeArray0[2] = null;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = new Node(735, node1, node0, node1, node0, 46, 51);
      Node node3 = node2.clonePropsFrom(node0);
      node3.isQualifiedName();
      node1.isHook();
      Node.newString("Not declared as a type name");
      node3.getType();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.JAVA_DIGIT");
      node0.setString("BREAK");
      Node node1 = new Node(29, node0, node0, node0, node0, 40, 102);
      Node node2 = node0.clonePropsFrom(node1);
      node2.isQualifiedName();
      node2.isHook();
      node0.detachFromParent();
      node2.getType();
      node2.setChangeTime(52);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2520));
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(0, nodeArray0);
      Node node2 = new Node(53, node0, node0, node0, node0, 40, 1);
      node2.isWhile();
      node1.addSuppression((String) null);
      node2.isUnscopedQualifiedName();
      node0.isVarArgs();
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newString(0, "", (-139), 461845905);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(57, nodeArray0);
      node0.addChildToBack(node2);
      Node node3 = Node.newString((-1406), "/", 1664, (-3993));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      node_SideEffectFlags0.setMutatesArguments();
      Node node4 = new Node(48, nodeArray0);
      node4.isEquivalentToShallow(node3);
      node2.isNE();
      node2.isAssign();
      node0.getType();
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newString((-1979), "C$", (-1406), 900);
      Node node1 = Node.newString(47, "C$", 32, 15);
      node1.setLineno(43);
      Node node2 = new Node(56, node0, node1, node1);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newString((-1979), "EKT;V?z4t1C18P-");
      Node node1 = null;
      node0.getString();
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = Node.newString(0, "", (-139), 461845905);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(57, nodeArray0);
      node0.addChildToBack(node2);
      Node.newString((-1406), "/", 1664, (-3993));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      int int0 = Node.SLASH_V;
      node1.isQuotedString();
      node2.putBooleanProp(38, false);
      node2.isObjectLit();
      Node node3 = Node.newNumber((-3531.67), 16, 29);
      node3.putIntProp(1385, 37);
      node3.isFunction();
      node1.isOr();
      node1.isParamList();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(4);
      node0.getIntProp(100);
      node0.isQuotedString();
      node0.putBooleanProp(48, false);
      node0.isObjectLit();
      node0.putIntProp(2215, 40);
      node1.isVarArgs();
      node0.isTrue();
      JSType[] jSTypeArray0 = new JSType[2];
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newNumber((double) 1754, 56, 12);
      node0.getIntProp(56);
      node0.isQuotedString();
      node0.putBooleanProp(83, true);
      node0.isObjectLit();
      node0.putIntProp(321, 9);
      node0.isDefaultCase();
      node0.isFalse();
      node0.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = Node.newString((-1979), "", (-1406), 900);
      node0.getSourceFileName();
      Node node1 = new Node(31, node0, node0, node0, node0, 4095, 900);
      node0.addChildrenToBack(node1);
      Node node2 = node0.getAncestor(55);
      node1.useSourceInfoIfMissingFrom(node2);
      Node.newString(26, ";CPW2K4I", 147, 42);
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(4);
      node0.getIntProp(100);
      node0.isThis();
      node0.putBooleanProp(48, false);
      node0.isObjectLit();
      node1.isVarArgs();
      node0.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[0] = jSType0;
      JSType jSType1 = jSTypeRegistry0.createOptionalType(jSType0);
      jSTypeArray0[1] = jSType1;
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = Node.newString(0, "", (-139), 461845905);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(57, nodeArray0);
      node0.addChildToBack(node2);
      Node.newString((-1406), "/", 1664, (-3993));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node0.isRegExp();
      node0.isTrue();
      node0.isCase();
      node0.isAssignAdd();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node2 = new Node((-817), node0, 16, 57);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(31, node0, node0, node0, 98, 54);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = Node.newString("R5");
      node3.checkTreeEquals(node0);
      node0.addChildrenToFront(node3);
      node1.getJsDocBuilderForNode();
      node3.setString("R5");
      Node.newString("R5");
      node3.getSourceFileName();
      node2.getFirstChild();
      Node node4 = null;
      try {
        node4 = new Node(12, node1, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = new Node((-2520));
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(0, nodeArray0);
      Node node2 = new Node((-2520), node0, node1);
      node2.isWhile();
      node2.getAncestor(42);
      node2.isLabelName();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(50);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2520
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = Node.newString(105, ":]:ht~Pt`Bu`ZkI");
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(31);
      node0.isQuotedString();
      node0.putBooleanProp(2724, true);
      node0.isObjectLit();
      node0.mayMutateGlobalStateOrThrow();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node0.getType();
      node0.isCall();
      node1.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isDefaultCase();
      node0.isFalse();
      node0.isLabelName();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node((-1662), (-556), 256);
      node0.getJSType();
      node0.isFunction();
      node0.children();
      // Undeclared exception!
      try { 
        node0.isEquivalentTo(nodeArray0[0], false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.JAVA_DIGIT");
      node0.setString("BREAK");
      node0.getIntProp(4095);
      Node node1 = new Node(2, (-572), 103);
      node1.isQuotedString();
      node0.putBooleanProp(57, false);
      node0.isObjectLit();
      node1.putIntProp(512, 119);
      node0.type = 8;
      node1.isFunction();
      node0.getChangeTime();
      node1.isNot();
      node1.isFor();
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = new Node(794, 794, 794);
      Node node1 = node0.cloneNode();
      node0.getBooleanProp(794);
      node0.addChildToFront(node1);
      node0.setCharno(36);
      node0.getProp(1769);
      node0.isString();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[7];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("kK P]NgEu)Qb'Y");
      jSTypeArray0[0] = (JSType) templateType0;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseObjectType(templateType0);
      jSTypeArray0[1] = jSType0;
      TemplateType templateType1 = JSType.toMaybeTemplateType((JSType) templateType0);
      jSTypeArray0[2] = (JSType) templateType1;
      JSTypeNative jSTypeNative0 = JSTypeNative.RANGE_ERROR_TYPE;
      JSType jSType1 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[3] = jSType1;
      LinkedList<EnumElementType> linkedList0 = new LinkedList<EnumElementType>();
      ListIterator<EnumElementType> listIterator0 = linkedList0.listIterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) listIterator0);
      JSType jSType2 = jSTypeRegistry0.createFunctionTypeWithVarArgs((ObjectType) templateType1, jSType0, (List<JSType>) immutableList0);
      jSTypeArray0[4] = jSType2;
      JSType jSType3 = modificationVisitor0.caseTemplateType(templateType1);
      jSTypeArray0[5] = jSType3;
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      jSTypeArray0[6] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newString(87, "SETTER_DEF", 87, 98);
      node0.getChangeTime();
      Node node1 = new Node((-983), node0, node0, 56, 87);
      Node.newNumber(0.0, 16, 98);
      Node node2 = node0.srcref(node1);
      node0.isEquivalentTo(node2, false, false, false);
      node2.putBooleanProp(52, true);
      node0.getSideEffectFlags();
      node0.isString();
      Node.extractCharno(19);
      node0.isObjectLit();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = Node.newString(105, ":]:ht~Pt`Bu`ZkI");
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      node0.getIntProp(31);
      node0.isQuotedString();
      node0.putBooleanProp(2724, false);
      node0.isObjectLit();
      node0.mayMutateGlobalStateOrThrow();
      node_SideEffectFlags3.setMutatesThis();
      node1.isFunction();
      node0.getChangeTime();
      Node node2 = new Node(49);
      node2.isNot();
      node0.isFor();
      node2.isAssignAdd();
      node2.getJSType();
      node0.addChildToFront(node1);
      node2.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = new Node(794, 794, 794);
      node0.cloneNode();
      node0.getBooleanProp(794);
      node0.setLength(794);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(31, node0, node0, node0, 98, 54);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = Node.newString("R5");
      node2.checkTreeEquals(node0);
      node0.addChildrenToFront(node2);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node2.setVarArgs(false);
      node_SideEffectFlags1.setReturnsTainted();
      node0.getIntProp(89);
      node0.isQuotedString();
      node0.putBooleanProp(48, false);
      node0.isObjectLit();
      node0.setLength(4);
      node0.hasChild(node2);
      node2.isFunction();
      Node node3 = Node.newString(401462, "R5");
      node1.getChangeTime();
      node0.isNot();
      node2.isHook();
      node3.isNumber();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newString(1309, "node is not a child");
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      Node node1 = new Node(2996, node0, node0, node0, node0);
      node1.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node2 = new Node(1624);
      Node.newNumber((double) 40, (-1662), 153);
      Node node3 = null;
      try {
        node3 = new Node(4095, node0, (-3461), 42);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = new Node((-1089));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = new Node((-564), node0, node0, node0, node0, 119, 50);
      jSDocInfo0.getThrownTypes();
      node1.getJSType();
      node1.isFunction();
      node1.setLength(8);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      Node node3 = Node.newString(130, "");
      node1.getJSType();
      node0.isFunction();
      node2.children();
      node0.isEquivalentTo(node3, false, false, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      // Undeclared exception!
      try { 
        node1.removeChild(node3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = new Node((-1699), (-619), 815);
      Node node1 = new Node(1996, node0, node0, 989, 90);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.setJSDocInfo(jSDocInfo0);
      node1.getJSType();
      node1.isFunction();
      node1.children();
      node0.setJSType((JSType) null);
      int int0 = Node.INFERRED_FUNCTION;
      node0.isLabelName();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1699
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newString((-556), "c", (-556), 410);
      Node node1 = new Node(2, node0, node0, 55, 4095);
      Node node2 = new Node(49, node1, node1);
      node2.isWhile();
      node2.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(30);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = Node.newNumber((-13.046580909843076), (-1758), (-1758));
      node0.isLocalResultCall();
      Node node1 = new Node(26, node0);
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NOT is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      int int0 = 15;
      node0.setLength(15);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newString(12, "", 12, 1754);
      node0.isNE();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = new Node(47);
      node0.isNew();
      node0.getLineno();
      int int0 = 5363;
      node0.setType((-1838));
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1838
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = Node.newString(105, ":]:ht~Pt`Bu`ZkI");
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(31);
      node0.isQuotedString();
      node0.putBooleanProp(2724, false);
      node0.isObjectLit();
      node0.mayMutateGlobalStateOrThrow();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node0.getType();
      node0.isIn();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setLength(49);
      node1.hasChild(node0);
      Node node2 = new Node(4, node1, (-1981), (-922));
      node2.isVarArgs();
      node2.isThrow();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.isIf();
      Integer integer0 = new Integer(52);
      node0.isDo();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(12, nodeArray0, 51, 16);
      node0.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = Node.newString(1309, "node is not a child");
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      Node node1 = new Node(2996, node0, node0, node0, node0);
      node1.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node2 = new Node(1624);
      Node node3 = Node.newNumber((double) 40, (-1662), 153);
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node0.isDefaultCase();
      node3.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isFunction();
      // Undeclared exception!
      try { 
        Node.newString(105, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.JAVA_DIGIT");
      node0.setString("BREAK");
      Node node1 = new Node(2059, node0, node0, node0, node0, 40, 102);
      Node node2 = node0.clonePropsFrom(node1);
      node2.isQualifiedName();
      node2.isHook();
      node0.detachFromParent();
      node2.getType();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newNumber((double) 1754, 56, 12);
      node0.getIntProp(56);
      node0.isQuotedString();
      node0.putBooleanProp(83, false);
      node0.isObjectLit();
      node0.putIntProp(321, 9);
      node0.isFunction();
      node0.getChangeTime();
      node0.isNot();
      node0.isFor();
      node0.getJSDocInfo();
      node0.setOptionalArg(false);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.checkTreeEquals(node0);
      node0.addChildrenToFront(node0);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node1 = new Node(47, (-351), 56);
      node0.removeChild(node0);
      node0.setLength(50);
      node1.addChildToFront(node0);
      node1.setCharno(111);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.isFunction();
      Node node1 = Node.newString(40, "}H");
      node1.getChangeTime();
      node0.isNot();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newNumber((-3632.00524), 29, 538);
      node0.toString();
      node0.getSourceOffset();
      node0.isStringKey();
      Node node1 = Node.newString("SCRIPT");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      node_NodeMismatch0.equals(node0);
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(43);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newString((-1979), "", (-1406), 900);
      Node node1 = new Node(4, node0, node0, node0);
      node1.setLineno(43);
      node0.isNE();
      node0.getJsDocBuilderForNode();
      node0.isRegExp();
      node0.isTrue();
      node0.isCase();
      node0.isAssignAdd();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.type = (-1261);
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = new Node(124);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(50, node0, node0, node0, node0, 30, 51);
      node1.getJSType();
      Node node2 = new Node((-631), (-6605), 38);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      nodeArray0[3] = node3;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node1;
      nodeArray0[8] = node0;
      Node node4 = null;
      try {
        node4 = new Node(49, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(100);
      node0.isQuotedString();
      node0.putBooleanProp(48, false);
      node0.isObjectLit();
      node0.putIntProp(2215, 40);
      node1.isVarArgs();
      node0.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[0] = jSType0;
      JSType jSType1 = jSTypeRegistry0.createOptionalType(jSType0);
      jSTypeArray0[1] = jSType1;
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node2.isContinue();
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(31, node0, node0, node0, 98, 54);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = Node.newString("R5");
      node2.checkTreeEquals(node0);
      node0.addChildrenToFront(node2);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node0.getIntProp(89);
      node0.isQuotedString();
      node0.putBooleanProp(48, false);
      node0.isObjectLit();
      node0.setLength(4);
      node0.hasChild(node2);
      node2.isFunction();
      node2.getChangeTime();
      node0.isNot();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newString("CharMatcher.JAVA_DIGIT");
      node0.setString("BREAK");
      Node node1 = new Node(2059, node0, node0, node0, node0, 40, 102);
      Node node2 = node0.clonePropsFrom(node1);
      node2.isHook();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newString(29, ")P>#P`3K; Gx4P<!j", 40, 114);
      Node node1 = Node.newString(11, ")P>#P`3K; Gx4P<!j", 43, 43);
      Node node2 = Node.newNumber((double) 46);
      node2.setLineno((-1261));
      node1.isNE();
      node0.getJsDocBuilderForNode();
      node0.isRegExp();
      node2.isTrue();
      node1.isCase();
      node0.isAssignAdd();
      node2.isOr();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newString(1309, "node is not a child");
      node0.isIf();
      double double0 = new Integer(29);
      node0.isDo();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[0] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node node1 = null;
      try {
        node1 = new Node(32, nodeArray0, 212, 2452);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = new Node(2059, 124, 2059);
      Node node1 = new Node((-1089), node0, node0, 11, 8);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.getJSType();
      node2.isFunction();
      node0.children();
      node1.setJSType((JSType) null);
      int int0 = Node.INFERRED_FUNCTION;
      Node node3 = null;
      try {
        node3 = new Node(55, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newString((-1981), "", (-1981), (-1981));
      // Undeclared exception!
      try { 
        node0.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node.newString("");
      Node node0 = Node.newNumber((double) 46, 87, 32);
      Node node1 = new Node(15, node0, 38, 54);
      node0.isDelProp();
      Node node2 = Node.newString("", 49, 50);
      node0.getIndexOfChild(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(83);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, (-1758), (-1758));
      node0.isLocalResultCall();
      Node node1 = new Node((-22), node0);
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -22
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      int int0 = 2221;
      String string0 = "kCyh2Z}d%";
      Node node0 = Node.newString(2111, "kCyh2Z}d%", 2221, 54);
      node0.children();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildBefore((Node) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newNumber((double) 1754, 56, 12);
      node0.getIntProp(56);
      node0.isQuotedString();
      node0.putBooleanProp(83, true);
      node0.isObjectLit();
      node0.putIntProp(321, 9);
      node0.isFunction();
      node0.getChangeTime();
      node0.isNot();
      node0.isFor();
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node0.getIntProp(89);
      node0.isQuotedString();
      node0.putBooleanProp(48, false);
      node0.isObjectLit();
      node0.setLength(4);
      node0.hasChild(node1);
      node0.isVarArgs();
      node1.isTrue();
      node1.isContinue();
      node0.getChildBefore((Node) null);
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node.newString("");
      Node node0 = Node.newNumber((double) 46, 87, 32);
      Node node1 = new Node(15, node0, 38, 54);
      node0.isDelProp();
      Node node2 = Node.newString("", 49, 50);
      node0.getIndexOfChild(node2);
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.getParent();
      node1.detachChildren();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = new Node((-1662), (-556), 256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = Node.newString((-2847), "v~o-u5H4z?Qwt}9g");
      node2.getJSType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = null;
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.isFunction();
      node2.children();
      node1.isEquivalentTo(node0, true, false, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node2.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node node2 = new Node(15, node0, 16, 57);
      OutputStream.nullOutputStream();
      node0.isUnscopedQualifiedName();
      Object[] objectArray0 = new Object[5];
      objectArray0[1] = (Object) node0;
      node2.getProp(2);
      objectArray0[2] = null;
      objectArray0[3] = (Object) "Node tree inequality:\nTree1:\nSTRING R5\n\n\nTree2:\nSTRING \n\n\nSubtree1: STRING R5\n\n\nSubtree2: STRING \n";
      node2.children();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("Ij");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node1.getIntProp(63);
      node1.isQuotedString();
      node1.putBooleanProp(12, false);
      node1.isObjectLit();
      node1.putIntProp(47, (-953));
      node1.isFunction();
      node0.getChangeTime();
      node1.isNot();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = new Node(1309);
      Node node1 = Node.newString(4095, "node is not a child", 42, 105);
      node0.clonePropsFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Not declared as a constructor");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.children();
      Node node1 = new Node(1229, node0, node0, node0);
      // Undeclared exception!
      try { 
        Charset.forName("Object#Element");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // Object#Element
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString(900, "", (-1406), 900);
      Node node1 = Node.newString(47, "", 32, 15);
      node1.setLineno(43);
      node0.isNE();
      node0.getJsDocBuilderForNode();
      node0.isRegExp();
      Object object0 = new Object();
      node1.putProp(4, object0);
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 4
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      String string0 = "B2X!32d";
      Node node1 = new Node(43, node0, node0);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(384, "", (-1), (-1662));
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(384);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 384
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = new Node(124);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(50, node0, node0, node0, node0, 30, 51);
      node1.getJSType();
      node1.isFunction();
      node0.setLength(8);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      Node node3 = Node.newString(39, "h>~Bsl~C");
      node3.getJSType();
      node2.isFunction();
      node1.children();
      node2.isEquivalentTo(node1, false, false, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = node0.copyInformationFrom(node0);
      node1.getSideEffectFlags();
      node1.getDouble();
      node0.addSuppression("#Vfkf3@a%#9q");
      node0.toString(false, false, false);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node2 = new Node(15, node0, 16, 57);
      OutputStream outputStream0 = OutputStream.nullOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(outputStream0, false);
      node0.isUnscopedQualifiedName();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) node_SideEffectFlags1;
      objectArray0[1] = (Object) node0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "Node tree inequality:\nTree1:\nSTRING R5\n\n\nTree2:\nSTRING \n\n\nSubtree1: STRING R5\n\n\nSubtree2: STRING \n";
      objectArray0[4] = (Object) outputStream0;
      mockPrintStream0.printf("fWCHEjQ'pGr]lOF:*", objectArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStream0);
      node0.appendStringTree(mockPrintWriter0);
      node2.children();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newNumber((double) 46, 87, 32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node node2 = Node.newString(105, ":]:ht~Pt`Bu`ZkI");
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(31);
      node1.isQuotedString();
      node0.putBooleanProp(2724, false);
      node1.isObjectLit();
      node0.mayMutateGlobalStateOrThrow();
      node0.setLength(87);
      node0.hasChild(node1);
      node0.isVarArgs();
      node1.isThrow();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = new Node(2059, 124, 2059);
      Node node1 = new Node((-1089), node0, node0, 11, 8);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.getJSType();
      node2.isFunction();
      node0.children();
      node1.setJSType((JSType) null);
      int int0 = Node.INFERRED_FUNCTION;
      node2.isLabelName();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2059
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newString("", (-1981), (-1981));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(31);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      node1.getType();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      node0.addChildrenToFront(node0);
      node0.getJSType();
      node0.getSourceOffset();
      node0.isParamList();
      Node.newString("{Ix;H%yt2&Hs+eltVC", 40, 60);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("Named type with empty name component", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2520));
      node0.getQualifiedName();
      Node node1 = new Node(4095, 57, (-3670));
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node1;
      Node node2 = null;
      try {
        node2 = new Node(4, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = node0.copyInformationFrom(node0);
      node1.setVarArgs(false);
      node1.getSideEffectFlags();
      node1.getDouble();
      node0.addSuppression("#Vfkf3@a%#9q");
      node1.getAncestors();
      node0.toString(true, true, true);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = new Node(2059, 124, 2059);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.getJSType();
      node1.isFunction();
      node1.children();
      node0.setLength(8);
      Node node2 = Node.newNumber(194.4441936032);
      Node node3 = Node.newString("Unknown class name", 124, 4);
      node1.getLength();
      Node node4 = new Node(43, node1, node3, node1, 1, 10);
      node4.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      jSDocInfo0.setHidden(false);
      node2.setSourceEncodedPositionForTree(52);
      node4.setLength((-1));
      node1.hasChild(node4);
      node3.isVarArgs();
      node2.isFalse();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = new Node(2059, 124, 2059);
      Node node1 = new Node((-1089), node0, node0, 11, 8);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.getJSType();
      node2.isFunction();
      node0.children();
      node2.isEquivalentTo(node1, true, false, true);
      node0.isTrue();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newString((-1979), "", (-1406), 900);
      Node node1 = Node.newString(47, "", 32, 15);
      node1.setLineno(43);
      node0.isNE();
      node0.getJsDocBuilderForNode();
      node0.isRegExp();
      node0.isTrue();
      node0.isCase();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node((-1662), (-556), 256);
      nodeArray0[0] = node0;
      Node node1 = new Node((-556), nodeArray0);
      node1.isEquivalentToShallow(node0);
      node0.isNE();
      node0.isAssign();
      node0.getType();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString(1309, "node is not a child");
      node0.setWasEmptyNode(false);
      node0.getIntProp((-653));
      node0.isQuotedString();
      node0.putBooleanProp(0, false);
      node0.isObjectLit();
      node0.setLength(1309);
      Node node1 = new Node(10, node0);
      node1.hasChild(node0);
      node1.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setReturnsTainted();
      node1.setIsSyntheticBlock(false);
      node1.getChildAtIndex((-1));
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node.newString("");
      Node node0 = Node.newNumber((double) 46, 87, 32);
      Node node1 = new Node(15, node0, 37, 54);
      node1.setSourceEncodedPositionForTree(112);
      node1.isEquivalentToTyped(node0);
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node2 = null;
      try {
        node2 = new Node(48, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = new Node(734, 0, 0);
      String string0 = "B2X!32d";
      Node node1 = new Node(43, node0, node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.checkTreeEquals(node1);
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(100);
      node0.isQuotedString();
      node0.putBooleanProp(48, false);
      node0.isObjectLit();
      node0.putIntProp(2215, 40);
      node1.isFunction();
      node1.getChangeTime();
      node1.isNot();
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node((-1662), (-556), 256);
      nodeArray0[0] = node0;
      Node node1 = new Node((-556), nodeArray0);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newString("6(Fd2?}6-5e|", (-171), (-504));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.type = (-171);
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.getJsDocBuilderForNode();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newString(1309, "node is not a child");
      node0.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(true);
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(1309);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = node0.copyInformationFrom(node0);
      node1.getSideEffectFlags();
      node1.getDouble();
      node0.addSuppression("#Vfkf3@a%#9q");
      Node node2 = new Node(48, node0, node0, node0, 2724, 1385);
      Node node3 = null;
      try {
        node3 = new Node(4, node0, node0, node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      Node node1 = Node.newString("");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      node0.setString("U+q%<");
      // Undeclared exception!
      try { 
        node0.addChildrenToFront(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = null;
      Node node2 = new Node(2, 0, 48);
      boolean boolean0 = true;
      Node node3 = node2.copyInformationFrom(node0);
      node2.isEmpty();
      node3.getSideEffectFlags();
      // Undeclared exception!
      try { 
        node3.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node0.putIntProp(108, 729);
      Node node2 = Node.newString("", 56, 38);
      node2.siblings();
      Node node3 = node0.removeChildren();
      // Undeclared exception!
      try { 
        node3.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString(0, "", (-139), 461845905);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(57, nodeArray0);
      node0.addChildToBack(node2);
      Node node3 = Node.newString((-1406), "/", 1664, (-3993));
      node3.clonePropsFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Unknown class name");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      int int0 = 10;
      Node node0 = Node.newString(10, "", (-139), 461845905);
      Node node1 = Node.newString("");
      node1.siblings();
      node1.isSyntheticBlock();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BITXOR  is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newNumber((-2327.061076333137));
      node0.getStaticSourceFile();
      int int0 = (-904);
      node0.setLineno((-904));
      node0.getDouble();
      node0.getDirectives();
      node0.isStringKey();
      Node node1 = new Node(2, node0, node0, 4095, 37);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.getJSDocInfo();
      node1.getStaticSourceFile();
      node0.getSourceOffset();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node.mergeLineCharNo(0, 55);
      Node node0 = new Node(638, 2739, (-311));
      node0.removeFirstChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.hasNamespace("_@aKV3nx*r4un_.I");
      JSTypeNative jSTypeNative0 = JSTypeNative.URI_ERROR_FUNCTION_TYPE;
      jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      Node node1 = Node.newString(2044, ".xW;qDl<{s1%wa", 46, (-2773));
      node1.isUnscopedQualifiedName();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch((Node) null, (Node) null);
      int int0 = 2389;
      Node node0 = null;
      try {
        node0 = new Node(2389, (Node) null, (Node) null, (Node) null, (-1406), 147);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = new Node(2059, 124, 2059);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.getJSType();
      node1.isFunction();
      node1.children();
      node0.setLength(8);
      Node node2 = Node.newNumber(194.4441936032);
      node1.isOnlyModifiesThisCall();
      Node node3 = Node.newString("Unknown class name", 124, 4);
      Node node4 = new Node(43, node1, node3, node1, 1, 10);
      node4.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node2.setSourceEncodedPositionForTree(52);
      node4.setLength((-1));
      node1.hasChild(node4);
      node3.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = node0.copyInformationFrom(node0);
      node1.getSideEffectFlags();
      node1.getDouble();
      node0.addSuppression("#Vfkf3@a%#9q");
      node0.toString(true, true, true);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = Node.newNumber((-3632.00524), 29, 538);
      node0.toString();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(538);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 538
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      int int0 = 30;
      Node node0 = Node.newNumber(2776.0, 30, 30);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = Node.newString("R5", 132, (-139));
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      Node node2 = null;
      try {
        node2 = new Node(12, nodeArray0, 132, 1028);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = Node.newString((-1005), "`!", (-1005), (-1005));
      node0.addSuppression("`!");
      Node node1 = new Node(538, node0);
      // Undeclared exception!
      try { 
        node1.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 538
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newString("6(Fd2?}6-5e|", (-171), (-504));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.type = (-171);
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isDefaultCase();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = new Node(2059, 124, 2059);
      Node node1 = new Node(885, node0, node0, node0, (-3993), 39);
      Node node2 = null;
      try {
        node2 = new Node(15, node1, node1, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setReturnsTainted();
      node0.getIntProp(100);
      node0.isQuotedString();
      node0.putBooleanProp(48, false);
      node0.isObjectLit();
      node0.setLength(4);
      node0.hasChild(node1);
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      int int0 = 50;
      int int1 = 2087;
      Node node0 = new Node(2087, 50, 43);
      Node node1 = Node.newString("6e:.<fxFy0f{/ }\"3");
      Node node2 = new Node(55, 29, 2);
      Node node3 = new Node(2, node2, node2, node0, 43, 50);
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = Node.newNumber(1544.262737027, 2059, 113);
      Node node1 = new Node((-2093), node0, 40, 113);
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = new Node((-1348), 5277, 5277);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node(2024, nodeArray0, (-1494), 40);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newNumber(1544.262737027, 5277, 615);
      Node node1 = new Node(5277, node0, (-1157), (-2945));
      node1.setCharno(37);
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString(0, "", (-139), 461845905);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      node1.siblings();
      node1.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = Node.newString((-1005), "`!", (-1005), (-1005));
      Node node1 = Node.newString(108, "`!", 119, 108);
      node0.isNE();
      node1.getJsDocBuilderForNode();
      node1.isRegExp();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = new Node(2059, 124, 2059);
      Node node1 = new Node((-1089), node0, node0, 11, 8);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.getJSType();
      node1.getIntProp(53);
      node2.isFunction();
      node0.children();
      node2.isEquivalentTo(node1, true, false, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node1.isArrayLit();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = new Node(2059, 124, 2059);
      Node node1 = new Node((-1089), node0, node0, 11, 8);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.getJSType();
      node2.isFunction();
      node0.children();
      node1.setLength((-1786));
      Node.newNumber((-2251.118685442));
      node2.isOnlyModifiesThisCall();
      Node node3 = Node.newString("", 15, 559);
      Node node4 = null;
      try {
        node4 = new Node(12, node0, node3, node1, (-871), 51);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5", 29, 1);
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      int int0 = (-1431);
      Node node0 = null;
      try {
        node0 = new Node((-1431), (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newString("node is not a child");
      node0.setType(115);
      node0.getLength();
      node0.putIntProp(0, (-347));
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      int int0 = 50;
      int int1 = 2087;
      Node node0 = new Node(2087, 50, 43);
      Node node1 = Node.newString("CharMatcher.JAVA_DIGIT");
      Node node2 = new Node(0, node0);
      Node.newString("CharMatcher.JAVA_DIGIT", 37, 51);
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node.mergeLineCharNo(0, 55);
      Node node0 = new Node(638, 2739, (-311));
      node0.getSourceFileName();
      Node node1 = new Node(55, node0, node0, node0, node0, 0, 0);
      // Undeclared exception!
      try { 
        Node.newString(39, (String) null, 77, 8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newString(12, "", 12, 1754);
      node0.isNE();
      node0.getJsDocBuilderForNode();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = null;
      Node node2 = null;
      try {
        node2 = new Node(57, (Node) null, node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("R5");
      node1.checkTreeEquals(node0);
      node0.addChildrenToFront(node1);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newString("\"%^.S%I~ng1V");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node0.getIntProp(100);
      node0.isQuotedString();
      node0.putBooleanProp(309, false);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node node1 = null;
      try {
        node1 = new Node(8, nodeArray0, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      int int0 = 12;
      Node node0 = Node.newString(12, "", 12, 1754);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node1 = null;
      try {
        node1 = new Node(105, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node((-206), node0);
      Node node2 = null;
      try {
        node2 = new Node(512, node1, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = Node.newString(1701, "");
      node0.detachChildren();
      Node node1 = new Node(46, (-3011), 388);
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = new Node(2059, 124, 2059);
      Node node1 = new Node((-1089), node0, node0, 11, 8);
      Node node2 = node1.srcrefTree(node0);
      node2.removeProp(12);
      node1.isOptionalArg();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = new Node(2059, 124, 2059);
      Node node1 = new Node((-1089), node0, node0, 11, 8);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node1.getJSType();
      node2.isFunction();
      node0.children();
      node2.isEquivalentTo(node1, true, false, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newString("\"%^.S%I~ng1V");
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = Node.newString(900, "", (-1979), 4095);
      node0.getInputId();
      node0.detachChildren();
      Node node1 = new Node((-3011), 4095, 0);
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newNumber(1544.262737027, 5277, 615);
      Node node1 = new Node(5277, node0, (-1157), (-2945));
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node.newNumber(1449.25788231058, 50, 429);
      Node node0 = null;
      try {
        node0 = new Node((-295), (Node[]) null, 37, Integer.MAX_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString(0, "", (-146), 461845907);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node2.siblings();
      node1.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node((-1662), (-556), 256);
      nodeArray0[0] = node0;
      Node node1 = new Node((-556), nodeArray0);
      node1.getJSType();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = Node.newString(0, "' OSK}k>iu'~<XAq");
      Node node1 = null;
      node0.isOptionalArg();
      // Undeclared exception!
      try { 
        node0.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        Node.newString((String) null, 354, 354);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2520));
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(0, nodeArray0);
      Node node2 = new Node((-2520), node0, node1);
      node2.isWhile();
      node2.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(50);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newString("");
      // Undeclared exception!
      try { 
        node0.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = new Node(2059, 124, 2059);
      Node node1 = new Node((-1089), node0, node0, 11, 8);
      Node node2 = node1.srcrefTree(node0);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = Node.newString(0, "Node has existing properties.");
      node0.setDirectives((Set<String>) null);
      node0.siblings();
      Node node1 = new Node(15, node0);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      int int0 = 38;
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(633, (Node) null, (Node) null, (Node) null, (Node) null, 0, 113);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = Node.newString((-1005), "`!", (-1005), (-1005));
      node0.addSuppression("`!");
      Node node1 = new Node(538, node0);
      node0.setSourceEncodedPosition((-1735));
      node1.copyInformationFromForTree(node0);
      node0.getLength();
      node1.siblings();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString("c(ux", 807, 807);
      node0.removeFirstChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.hasNamespace("c(ux");
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_TYPE;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.google.javascript.rhino.jstype.BooleanType cannot be cast to class com.google.javascript.rhino.jstype.FunctionType (com.google.javascript.rhino.jstype.BooleanType and com.google.javascript.rhino.jstype.FunctionType are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @25cdac3c)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = Node.newString("6(Fd2?}6-5e|", (-171), (-504));
      node0.setVarArgs(true);
      node0.getQualifiedName();
      node0.type = (-171);
      node0.getQualifiedName();
      node0.isSyntheticBlock();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(2148, nodeArray0);
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch((Node) null, (Node) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      int int0 = 50;
      int int1 = 2087;
      Node node0 = new Node(2087, 50, 43);
      Node node1 = Node.newString("CharMatcher.JAVA_DIGIT");
      Node node2 = new Node(0, node0);
      Node node3 = null;
      try {
        node3 = new Node(2087, node0, node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      String string0 = "w@\\I5";
      Node node0 = null;
      try {
        node0 = new Node((-81), (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(0, (Node) null, 15, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      int int0 = 817;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(54, node0);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = Node.newString((-1979), "", (-1406), 900);
      node0.getSourceFileName();
      Node node1 = new Node(56, node0, node0, node0, node0, 4095, 900);
      node0.addChildrenToBack(node1);
      Node node2 = node0.getAncestor(2959);
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      Node node4 = Node.newString(26, ";CPW2K4I", 147, 42);
      // Undeclared exception!
      try { 
        node3.addChildrenAfter(node4, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = Node.newString(87, "SETTER_DEF", 87, 98);
      node0.getChangeTime();
      Node node1 = new Node((-983), node0, node0, 56, 87);
      Node.newNumber(0.0, 16, 98);
      Node node2 = node0.srcref(node1);
      node0.setSourceFileForTesting("SETTER_DEF");
      node0.isEquivalentTo(node2, false, false, false);
      node2.putBooleanProp(52, true);
      node0.getSideEffectFlags();
      node0.isString();
      Node.extractCharno(19);
      node0.isObjectLit();
      node0.getSourceFileName();
      node1.isNumber();
      assertEquals(87, node0.getCharno());
      assertEquals(87, node0.getType());
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = new Node(124);
      boolean boolean0 = false;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = new Node(50, node0, node0, node0, node0, 30, 51);
      node1.getJSType();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isFunction();
      node0.setLength(8);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      Node node3 = null;
      try {
        node3 = new Node(50, node1, node2, node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = Node.newNumber((-2327.061076333137));
      node0.getStaticSourceFile();
      int int0 = (-904);
      node0.setLineno((-904));
      node0.getDirectives();
      node0.isStringKey();
      Node node1 = new Node(2, node0, node0, 4095, 37);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.getJSDocInfo();
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.getStaticSourceFile();
      node2.getSourceOffset();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = new Node(2087, 50, 43);
      Node node1 = Node.newString((-643), "CharMatcher.JAVA_DIGIT", 55, (-3746));
      node1.getInputId();
      node0.detachChildren();
      Node node2 = new Node(48, 37, 48);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(155, nodeArray0, 4, (-904));
      node2.removeProp(113);
      // Undeclared exception!
      try { 
        node3.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = Node.newString(900, "", (-1979), 4095);
      node0.getInputId();
      node0.getSourceFileName();
      node0.addSuppression(":#]");
      node0.removeProp(4095);
      node0.removeChildren();
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node.mergeLineCharNo(0, 55);
      Node node0 = new Node(638, 2739, (-311));
      node0.getSourceFileName();
      Node node1 = new Node(55, node0, node0, node0, node0, 0, 0);
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(1689, node1, node0, 102, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = Node.newString(1309, "node is not a child");
      node0.setIsSyntheticBlock(true);
      assertEquals(1309, node0.getType());
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = 1566;
      Node[] nodeArray0 = new Node[5];
      Node node0 = Node.newString("");
      Node node1 = new Node(130, node0, node0);
      nodeArray0[0] = node1;
      Node node2 = new Node((-557));
      nodeArray0[1] = node2;
      Node node3 = null;
      try {
        node3 = new Node(1, node2, node1, node0, node1, 4, 749);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      int int0 = 1733;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(1733);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = new Node(1626);
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1626
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node.extractLineno(55);
      Node node0 = new Node(55, (-509), 0);
      String string0 = "B2X!32d";
      Node node1 = new Node(54, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.checkTreeEquals(node0);
      node2.addChildToFront(node1);
      node2.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node2.setString("B2X!32d");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 55
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }
}
