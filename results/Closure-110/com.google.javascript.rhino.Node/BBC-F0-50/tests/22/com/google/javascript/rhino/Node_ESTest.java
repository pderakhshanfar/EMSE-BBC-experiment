/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 31 08:27:23 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.UnionType;
import com.google.javascript.rhino.jstype.Visitor;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int int0 = 399;
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(399, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage0("Object#Element");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property Object#Element
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node.newString(818, (String) null, 1024, 1127);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[9];
      JSTypeNative jSTypeNative0 = JSTypeNative.UNKNOWN_TYPE;
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(0);
      node0.addSuppression("com.google.javascript.rhino.Node$AbstractPropListItem");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node0.getString();
      // Undeclared exception!
      try { 
        node0.isCast();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = Node.newString("ANY", 0, 0);
      node0.setSideEffectFlags(310);
      node0.children();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      int int0 = 8199;
      Node node0 = new Node((-1360), 8199, (-1360));
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node1 = new Node((-1068), nodeArray0, 157, 50);
      Node node2 = new Node(int0, node0, node1, nodeArray0[3]);
      node1.getQualifiedName();
      // Undeclared exception!
      try { 
        nodeArray0[0].isThis();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      node0.setVarArgs(false);
      Node.newNumber((-1403.95200373), (-475), 1);
      node0.isQualifiedName();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      int int0 = 2048;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2048);
      String string0 = "";
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString(0, "", 2048, (-2763));
      boolean boolean0 = true;
      node0.getAncestor((-2763));
      node0.putBooleanProp(int0, boolean0);
      int int1 = 77;
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags4.clearSideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      HashSet<EnumType> hashSet0 = new HashSet<EnumType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) hashSet0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeTemplatizedType((JSType) null);
      ObjectType.cast((JSType) null);
      EnumType enumType0 = jSTypeRegistry1.createEnumType("9%c^>~=C`0<w", node0, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      // Undeclared exception!
      try { 
        enumElementType0.toMaybeEnumElementType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = new Node(461845907);
      Node node1 = new Node(70, node0);
      int int0 = 114;
      Node.newString(4, "");
      Node node2 = node1.useSourceInfoFrom((Node) null);
      node2.getInputId();
      node1.mayMutateGlobalStateOrThrow();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        node1.putBooleanProp(int0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-336), (-336));
      Node node1 = Node.newString((String) null);
      node0.isQualifiedName();
      node0.addChildrenAfter(node1, node1);
      // Undeclared exception!
      try { 
        node1.isQuotedString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node1.setSideEffectFlags(node_SideEffectFlags2);
      int int0 = 0;
      int int1 = (-2843);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newNumber((-269.7));
      Node node1 = new Node(26, node0, 0, 57);
      node0.addChildrenToFront(node1);
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1741.0), 0, 16777216);
      nodeArray0[0] = node0;
      node0.putBooleanProp(1, false);
      Node node1 = Node.newString(39, "");
      nodeArray0[1] = node1;
      Node node2 = new Node(1206, nodeArray0, 130, 2296);
      nodeArray0[2] = node2;
      Node node3 = new Node(int0, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags3.setThrows();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.children();
      node0.setSideEffectFlags((-2358));
      node0.getString();
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = Node.newString(3148, "");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(40, nodeArray0);
      node1.putIntProp(154, 2589);
      node1.getChangeTime();
      node0.addChildBefore(node1, node0);
      Node node2 = nodeArray0[0].cloneNode();
      node2.getSourceFileName();
      node2.getSideEffectFlags();
      // Undeclared exception!
      try { 
        nodeArray0[0].useSourceInfoIfMissingFromForTree(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[5];
      Node node0 = Node.newString("");
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of();
      FunctionType functionType0 = jSTypeRegistry0.createInterfaceType("", node0, immutableList0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, functionType0);
      jSTypeArray0[0] = (JSType) functionType1;
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newString("", 1674, 0);
      node0.toString();
      Node node1 = new Node(291, node0, node0, 118, 18);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      node1.setJSType(jSType0);
      Node.newString(0, "");
      node0.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int int0 = 1925;
      Node node0 = Node.newString(1925, "");
      Node node1 = node0.detachFromParent();
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.getString();
      // Undeclared exception!
      try { 
        node0.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -1.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = Node.newString((-1724), "SC\"V'_0'!R15E^", (-1724), (-1724));
      node0.removeFirstChild();
      node0.setJSDocInfo((JSDocInfo) null);
      String string0 = "";
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0);
      char[] charArray0 = new char[7];
      char char0 = 'M';
      charArray0[0] = char0;
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node.extractCharno((-3569));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("l#DE", (Node) null, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      Set<String> set0 = enumElementType0.getPropertyNames();
      // Undeclared exception!
      try { 
        jSDocInfo0.setSuppressions(set0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = Node.newString("\n\nSubtree1: ", 830, 830);
      Node node1 = node0.cloneTree();
      node1.getChildBefore(node0);
      node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
      try { 
        node0.isReturn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3362));
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.areAllFlagsSet();
      Node node0 = Node.newString(11, "change_time", 0, (-3016));
      node0.setDouble(0.0);
      int int0 = (-1152);
      int int1 = 42;
      int int2 = 124;
      Node node1 = new Node(int0, node0, int1, int2);
      node1.getProp(node0.REFLECTED_OBJECT);
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree(node1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BITAND change_time is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[4];
      String string0 = "";
      int int0 = (-1314);
      Node[] nodeArray0 = new Node[5];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      nodeArray0[0] = node0;
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = null;
      Node node1 = new Node((-4761), (Node) null, (Node) null);
      // Undeclared exception!
      try { 
        node1.isLabelName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = 147;
      String string0 = null;
      Node node0 = Node.newString((String) null, 147, 304);
      Node node1 = null;
      try {
        node1 = new Node(int0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newString(",Wk)#fE", 1751, 3245);
      node0.setOptionalArg(false);
      Node.newNumber((double) 2, 414, (-6630));
      node0.getSourceFileName();
      node0.setLineno(5760);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node.extractLineno(28);
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(101, node0, node0, node0, node0);
      Node node2 = new Node(0, node1, node1);
      Node node3 = new Node((-3503), node2, node2, node0, (-319), 15);
      node3.getChildBefore(node2);
      node3.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String string0 = "n";
      int int0 = 0;
      int int1 = 0;
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      boolean boolean0 = true;
      Node node1 = new Node(2387, node0, node0, 12, 1);
      node1.isVarArgs();
      node0.isEquivalentToShallow(node1);
      node0.setSourceEncodedPositionForTree(0);
      node0.getExistingIntProp(50);
      node0.setIsSyntheticBlock(boolean0);
      // Undeclared exception!
      try { 
        node0.setType(node1.INCRDECR_PROP);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 50
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      int int0 = 0;
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      int int1 = 65536;
      int int2 = 0;
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp((-713));
      Node node1 = new Node(52, node0, node0, node0, 48, 0);
      node0.checkTreeEquals(node1);
      node0.getProp(29);
      node0.type = 2824;
      node0.setSideEffectFlags((Node.SideEffectFlags) null);
      node0.isInstanceOf();
      node0.isInc();
      Node node2 = null;
      node0.removeChildAfter(node2);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(29, 1, 112);
      node1.mayMutateGlobalStateOrThrow();
      node1.putIntProp(112, 36);
      node0.addChildrenToBack(node1);
      node0.getSideEffectFlags();
      node0.isComma();
      node1.isDebugger();
      node0.getDirectives();
      double double0 = 0.0;
      int int0 = 0;
      node1.getInputId();
      node0.addChildrenToBack(node1);
      int int1 = 0;
      // Undeclared exception!
      try { 
        Node.newNumber(double0, int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      node0.setVarArgs(false);
      Node node1 = Node.newString("6u", (-1371), (-4493));
      node0.setOptionalArg(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node1.getSourceFileName();
      node1.getAncestors();
      node1.getLength();
      String string0 = "SHEQ";
      int int0 = (-6630);
      // Undeclared exception!
      try { 
        Node.newString(string0, node1.FLAG_NO_THROWS, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = Node.newString((-1724), "SC\"V'_0'!R15E^", (-1724), (-1724));
      node0.removeFirstChild();
      Node node1 = new Node(57, node0, node0, (Node) null, 4, 48);
      String string0 = "";
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0);
      char[] charArray0 = new char[7];
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp((-713));
      Node node1 = new Node(52, node0, node0, node0, 48, 0);
      node1.setVarArgs(true);
      node1.getSourceFileName();
      Node node2 = Node.newNumber((-1.0), (-1490), 55);
      Node node3 = new Node(4194304, node1, node2);
      node3.isQualifiedName();
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      Node node1 = new Node((-5603), node0, node0, node0);
      node0.checkTreeEquals(node1);
      node1.getProp(node0.IS_NAMESPACE);
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String string0 = "n";
      int int0 = 0;
      int int1 = 0;
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      boolean boolean0 = true;
      int int2 = 50;
      Node node1 = new Node(2387, node0, node0, 12, 1);
      node1.setString("com.google.common.collect.Lists$RandomAccessPartition");
      node1.isVarArgs();
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2387
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int int0 = 2048;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2047);
      String string0 = "value";
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString(0, "value", 2048, (-2763));
      boolean boolean0 = true;
      node0.isScript();
      Node node1 = node0.getAncestor((-2763));
      node0.putBooleanProp(int0, boolean0);
      int int1 = 77;
      node1.type = int1;
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = new Node(0);
      node0.addSuppression("com.google.javascript.rhino.Node$AbstractPropListItem");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node0.isCast();
      node_SideEffectFlags2.setMutatesThis();
      node0.isObjectLit();
      node0.getQualifiedName();
      node0.getBooleanProp(65535);
      node0.isObjectLit();
      node0.setCharno(0);
      node0.putProp(0, node_SideEffectFlags2);
      node0.setSideEffectFlags(node_SideEffectFlags1);
      int int0 = 24;
      Node node1 = new Node(int0, node0, node0.QUOTED_PROP, node0.NO_SIDE_EFFECTS);
      // Undeclared exception!
      try { 
        node0.copyInformationFrom(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3362));
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags5.setThrows();
      int int0 = 2097152;
      Node node0 = new Node((-626), 2097152, 2097152);
      node0.getString();
      node0.isCast();
      // Undeclared exception!
      try { 
        node_SideEffectFlags5.setMutatesThis();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -626
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString((-1857), "com.google.javascript.rhino.Node$AncestorIterable$1", 98, (-3016));
      node0.setDouble((-2.2110953755076));
      int int0 = (-1152);
      int int1 = (-5603);
      int int2 = 1033;
      Node node1 = new Node(node0.SYNTHETIC_BLOCK_PROP, node0, int1, int2);
      // Undeclared exception!
      try { 
        node0.getProp(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1857
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp((-713));
      node0.isDebugger();
      node0.getDirectives();
      node0.getInputId();
      Node node1 = Node.newString("=S#sjOzdisUV=<x");
      Node node2 = new Node(9, node1, node1);
      node0.addChildrenToBack(node2);
      Node.newNumber((double) 53, (-1765), 1838);
      node1.checkTreeEquals(node2);
      node1.getInputId();
      node0.setInputId((InputId) null);
      Node.extractCharno(13);
      node0.getType();
      Node node3 = node0.copyInformationFromForTree(node2);
      node3.copyInformationFromForTree(node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      int int0 = 0;
      node4.getProp(int0);
      JSDocInfo jSDocInfo0 = null;
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(29, 1, 112);
      node1.mayMutateGlobalStateOrThrow();
      node1.putIntProp(112, 36);
      node0.addChildrenToBack(node1);
      node0.getSideEffectFlags();
      node0.isComma();
      Node node2 = new Node((-1736), node0, node1, node0, 201, 53);
      node1.checkTreeEquals(node2);
      int int0 = (-2793);
      node1.getProp(int0);
      Node.SideEffectFlags node_SideEffectFlags0 = null;
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setThrows();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setAllFlags();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags8.setReturnsTainted();
      node_SideEffectFlags8.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append((String) null);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = 601;
      Node node0 = Node.newString(85, "KEMi3:OD#[6#'g\"?e 7", 85, 601);
      node0.getAncestors();
      Node node1 = null;
      node0.addChildrenAfter((Node) null, (Node) null);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node.extractLineno(28);
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(101, node0, node0, node0, node0);
      Node node2 = new Node(0, node1, node1);
      Node node3 = Node.newNumber(1860.430146342791, 51, 2589);
      Node node4 = new Node((-1440), node2, node0);
      node3.isQualifiedName();
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      Node.newNumber((double) 8, (-475), 1);
      node0.isQualifiedName();
      node0.isFor();
      node0.getJsDocBuilderForNode();
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = Node.newString((-1724), "SC\"V'_0'!R15E^", (-1724), (-1724));
      node0.removeFirstChild();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      node1.setSideEffectFlags(56);
      node1.isLocalResultCall();
      char[] charArray0 = new char[7];
      char char0 = 'M';
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = new Node(461845907);
      Node node1 = new Node(70, node0);
      Node.newString(4, "");
      node0.isVarArgs();
      node1.isEquivalentToShallow((Node) null);
      int int0 = (-2804);
      node1.setSourceEncodedPositionForTree(int0);
      node0.getExistingIntProp(node1.IS_NAMESPACE);
      // Undeclared exception!
      try { 
        node0.hasChildren();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString(3148, "");
      Node node1 = node0.cloneNode();
      node1.getSourceFileName();
      node1.getSideEffectFlags();
      node0.useSourceInfoIfMissingFromForTree(node0);
      node0.isFunction();
      Node node2 = Node.newNumber((double) 52);
      node2.isRegExp();
      node2.isAssignAdd();
      node0.setSideEffectFlags(28);
      double double0 = 1634.31783;
      Node.newNumber(double0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      Node node1 = null;
      node0.addChildrenToBack((Node) null);
      double double0 = 1.0;
      int int0 = 3;
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = new Node(0);
      node0.addSuppression("com.google.javascript.rhino.Node$AbstractPropListItem");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node0.isCast();
      node_SideEffectFlags1.setMutatesThis();
      node0.isObjectLit();
      node0.getQualifiedName();
      node0.getBooleanProp(65535);
      node0.isObjectLit();
      node0.setCharno(0);
      node0.putProp(0, node_SideEffectFlags1);
      node0.getCharno();
      node0.getChildCount();
      Node node1 = new Node(24, node0, 36, 15);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = new Node(0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setThrows();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setAllFlags();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags8.setReturnsTainted();
      node_SideEffectFlags8.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node0.getJsDocBuilderForNode();
      node0.siblings();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newString(",Wk)#fE", 1751, 3245);
      node0.setOptionalArg(false);
      Node node1 = Node.newNumber((double) 2, 414, (-6630));
      node0.getSourceFileName();
      Node node2 = new Node(30, (Node) null, 32, (-3819));
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(2048, nodeArray0, 2048, 2048);
      node0.isNoSideEffectsCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.error("\n\nSubtree1: ", "\n\nSubtree1: ", 2, 2);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ObjectType objectType0 = FunctionType.getTopDefiningInterface((ObjectType) null, "Object#Element");
      TemplateType templateType0 = JSType.toMaybeTemplateType((JSType) objectType0);
      TemplatizedType templatizedType0 = JSType.toMaybeTemplatizedType((JSType) templateType0);
      TemplateTypeMap templateTypeMap0 = templatizedType0.getTemplateTypeMap();
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, templateTypeMap0);
      // Undeclared exception!
      try { 
        templateTypeMapReplacer0.caseTemplateType(templateType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setThrows();
      node0.isCast();
      node_SideEffectFlags4.setMutatesThis();
      node0.isObjectLit();
      node0.getQualifiedName();
      node0.isLabel();
      Node node1 = Node.newString((String) null);
      node1.isObjectLit();
      int int0 = (-1593);
      String string0 = "R1h!0QV";
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(29, 1, 112);
      node1.mayMutateGlobalStateOrThrow();
      node1.putIntProp(275, 4095);
      node1.addChildrenToBack(node0);
      node1.getSideEffectFlags();
      node0.isComma();
      node1.isDebugger();
      node1.getDirectives();
      Node node2 = new Node(2, node0, node0, 37, 4095);
      node2.getInputId();
      node0.addChildrenToBack(node1);
      double double0 = (-1.0);
      // Undeclared exception!
      try { 
        Node.newNumber(double0, node1.JSDOC_INFO_PROP, node1.MAX_COLUMN_NUMBER);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(29, 1, 112);
      node1.mayMutateGlobalStateOrThrow();
      node0.putIntProp((-1567), (-1567));
      node0.addChildrenToBack(node1);
      node0.getSideEffectFlags();
      node1.isComma();
      node1.isDebugger();
      node1.getDirectives();
      node1.getInputId();
      Node node2 = new Node(1443, node0, node1, 830, 57);
      node2.addChildrenToBack(node0);
      Node node3 = Node.newNumber((double) node1.REFLECTED_OBJECT, node0.SIDE_EFFECTS_ALL, node1.FLAG_ARGUMENTS_UNMODIFIED);
      node3.checkTreeEquals(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = null;
      try {
        jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      node0.addSuppression("2h3oYH");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node node1 = new Node(125, node0, node0, 557, 4);
      node1.isCast();
      node_SideEffectFlags4.setMutatesThis();
      node0.isObjectLit();
      node0.getQualifiedName();
      node_SideEffectFlags0.setMutatesArguments();
      node1.getBooleanProp(108);
      node0.isObjectLit();
      node0.setCharno(0);
      Object object0 = new Object();
      node1.getLastChild();
      node1.putProp(118, object0);
      node0.setSideEffectFlags(node_SideEffectFlags2);
      int int0 = 1088;
      Node node2 = new Node(int0, node0, node0.MAX_COLUMN_NUMBER, node1.SIDE_EFFECTS_ALL);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = new Node(0, (Node) null, (Node) null, 65535, 65535);
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      Node node1 = new Node((-34));
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isFunction();
      Node node3 = Node.newNumber(3071.38122181);
      node3.isRegExp();
      node1.isAssignAdd();
      node3.setSideEffectFlags((-2398));
      Node.newNumber((double) node2.DIRECTIVES);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = Node.newString(3148, "");
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      node0.isFunction();
      Node node2 = Node.newNumber((double) 52);
      node2.isRegExp();
      node2.isAssignAdd();
      node0.addChildrenToFront(node1);
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(29, 1, 112);
      node1.mayMutateGlobalStateOrThrow();
      node1.putIntProp(112, 36);
      node0.addChildrenToBack(node1);
      node0.getSideEffectFlags();
      node0.isComma();
      node1.isDebugger();
      node0.getDirectives();
      node1.getInputId();
      node0.setIsSyntheticBlock(false);
      node1.setType(53);
      node1.getType();
      node0.putIntProp(11, 15);
      Node node2 = Node.newString((-769), "Ife;j8i6jE,G");
      node2.setVarArgs(false);
      Node node3 = Node.newNumber((double) 112, 85, 55);
      Node node4 = new Node(43, node2, node0, node2, node3, 36, 50);
      Node node5 = new Node(536870912, node2, node0, node0, node4);
      node5.isNoSideEffectsCall();
      int int0 = 280;
      node4.setSourceEncodedPosition(int0);
      node2.isRegExp();
      node0.isArrayLit();
      node0.isOnlyModifiesArgumentsCall();
      node4.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newString(0, "n");
      node0.setSourceEncodedPosition(0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = Node.newNumber((-269.7));
      node0.getSourceFileName();
      Node node1 = new Node(26, node0, 0, 57);
      node0.addChildrenToFront(node1);
      Node node2 = node0.getParent();
      node1.setSourceEncodedPositionForTree(40);
      node2.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp((-713));
      node0.isDebugger();
      node0.getDirectives();
      node0.getInputId();
      Node node1 = Node.newString("=S#sjOzdisUV=<x");
      Node node2 = new Node(9, node1, node1);
      node0.addChildrenToBack(node2);
      int int0 = 1413;
      Node node3 = new Node((-475), node2, node2, node1, 47, 1413);
      boolean boolean0 = true;
      node3.setVarArgs(boolean0);
      node3.getSourceFileName();
      int int1 = 1333;
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString("n", 2, 38);
      node0.isEquivalentToShallow(node2);
      node2.setLength(12);
      node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isFalse();
      node2.mayMutateArguments();
      Node node3 = Node.newString("n", 4220, 40);
      node3.isAssign();
      Node node4 = new Node(1, (Node[]) null, 0, 391);
      node4.useSourceInfoFrom(node3);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newString(2145, "=4!J[x35,\"mz~m0i=M");
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node0, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      Node node1 = enumElementType0.getRootNode();
      node1.setSourceEncodedPositionForTree(node0.MAX_COLUMN_NUMBER);
      node1.getChangeTime();
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newString(822, "\n\nSubtree1: ", 822, 822);
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node0.isReturn();
      node1.srcrefTree(node0);
      node1.addChildToBack(node0);
      node0.toString(false, false, true);
      node0.getIndexOfChild(node0);
      int int0 = 10;
      // Undeclared exception!
      try { 
        node0.getIntProp(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 822
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp((-713));
      Node node1 = new Node(52, node0, node0, node0, 48, 0);
      node0.checkTreeEquals(node1);
      node0.getProp(29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.setReturnsTainted();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((-453), nodeArray0, 56, 4095);
      node2.isUnscopedQualifiedName();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.valueOf();
      node0.isLocalResultCall();
      node0.isWith();
      node1.hasOneChild();
      node0.isEquivalentToTyped(node2);
      node0.isInstanceOf();
      node2.removeProp(4220);
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      Node node1 = new Node((-34));
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isFunction();
      Node node3 = node2.useSourceInfoFrom(node1);
      node1.setType(2);
      node1.isFalse();
      node2.mayMutateArguments();
      node1.isAssign();
      Node node4 = new Node(512, node3, node1, node2, node1, 3633, 40);
      node4.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      node0.addSuppression("2h3oYH");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = new Node((-3803), node0, node0, node0, 1351, 2933);
      node0.setVarArgs(true);
      node0.getSourceFileName();
      Node node2 = Node.newNumber(0.0, 52, 122);
      Node node3 = new Node(38, node2, node1);
      node3.isQualifiedName();
      node0.isFor();
      int int0 = 4096;
      node2.getAncestor(int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(28);
      node1.isContinue();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(28);
      node1.isContinue();
      node1.hasChildren();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = Node.newString(3148, "");
      Node node1 = node0.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      Node node2 = Node.newNumber((double) 55);
      node1.isRegExp();
      node2.isAssignAdd();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node2;
      nodeArray0[4] = node1;
      nodeArray0[5] = node2;
      nodeArray0[6] = node0;
      nodeArray0[7] = node1;
      nodeArray0[8] = node2;
      Node node3 = new Node(36, nodeArray0);
      node3.setSideEffectFlags(node0.LAST_PROP);
      double double0 = 0.0;
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp((-713));
      Node node1 = new Node(52, node0, node0, node0, 48, 0);
      node0.checkTreeEquals(node1);
      node0.getProp(29);
      node0.type = 2824;
      node0.getCharno();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      Node node2 = new Node(0, nodeArray0);
      node1.getChildCount();
      int int0 = 1;
      int int1 = 1775;
      int int2 = 41;
      Node node3 = new Node(int0, node0, int1, int2);
      node1.copyInformationFrom(node3);
      int int3 = 416;
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      Node.newNumber((double) 8, (-475), 1);
      node0.isQualifiedName();
      node0.isFor();
      Node node1 = new Node(47, node0, node0);
      node1.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2368);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString(3148, "");
      Node node1 = node0.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node1.putBooleanProp(77, true);
      node1.setQuotedString();
      node0.detachChildren();
      node0.addSuppression("");
      node0.getFirstChild();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node2 = new Node(11, node0, (Node) null, node0, node1, 47, 29);
      int int0 = 105;
      node2.getIntProp(int0);
      node1.isIn();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp((-713));
      Node node1 = new Node(52, node0, node0, node0, 48, 0);
      node0.checkTreeEquals(node1);
      node0.getProp(29);
      node0.getAncestor(102);
      node0.type = 2824;
      node0.setSideEffectFlags((Node.SideEffectFlags) null);
      node0.isInstanceOf();
      node0.isInc();
      Node node2 = null;
      node0.removeChildAfter(node2);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.getIntProp((-713));
      Node node1 = new Node(77, node0, node0, node0, 48, 0);
      node1.setVarArgs(false);
      node1.getSourceFileName();
      Node node2 = Node.newNumber((-1.0), (-1490), 55);
      Node node3 = new Node(4194304, node1, node2);
      node2.isName();
      node3.isOptionalArg();
      node0.hasOneChild();
      node2.putIntProp(37, 177);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String string0 = "n";
      int int0 = 0;
      int int1 = 0;
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      boolean boolean0 = true;
      int int2 = 50;
      Node node1 = new Node(43, node0, 36, 30);
      node1.setString("com.google.common.collect.Lists$RandomAccessPartition");
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node1.isVarArgs();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FALSE 36 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newString(1925, "");
      node0.isEquivalentToShallow(node0);
      node0.setWasEmptyNode(true);
      node0.setLength((-288));
      node0.useSourceInfoFrom(node0);
      node0.setType(1925);
      node0.isFalse();
      node0.mayMutateArguments();
      node0.isAssign();
      node0.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.getIntProp((-713));
      Node node1 = new Node(77, node0, node0, node0, 48, 0);
      node1.removeChild(node0);
      node1.setVarArgs(false);
      node1.getSourceFileName();
      node1.isContinue();
      node1.isTry();
      node0.isDebugger();
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(28);
      Node node2 = Node.newNumber((double) 47, 39, (-557));
      Node node3 = new Node(4194304, node2, node1);
      node1.isName();
      node3.isOptionalArg();
      node1.hasOneChild();
      node0.putIntProp(46, 39);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2047);
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString(0, "value", 2048, (-2763));
      node0.isScript();
      Node node1 = new Node(52, node0, node0, node0, 49, 0);
      Node node2 = new Node(101, node0, 8, 8);
      node0.checkTreeEquals(node2);
      node1.getProp(node0.SIDE_EFFECT_FLAGS);
      Node node3 = node2.getAncestor(node0.MAX_COLUMN_NUMBER);
      node0.setSideEffectFlags(node_SideEffectFlags0);
      node3.isInstanceOf();
      // Undeclared exception!
      try { 
        node2.isInc();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = 1925;
      Node node0 = new Node(1925);
      node0.setQuotedString();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(28);
      node1.isContinue();
      node1.isParamList();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString(3148, "");
      Node node1 = node0.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      node1.setQuotedString();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags5.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags6.setMutatesArguments();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(29, 1, 57);
      node1.mayMutateGlobalStateOrThrow();
      node1.putIntProp(47, 36);
      node0.addChildrenToBack(node1);
      node0.getSideEffectFlags();
      node0.isIf();
      node1.isDebugger();
      node0.getDirectives();
      node1.getInputId();
      node1.setSourceFileForTesting("Gg");
      node0.setIsSyntheticBlock(false);
      node1.setType(53);
      node1.getType();
      node0.putIntProp(11, 15);
      Node node2 = Node.newString((-769), "Ife;j8i6jE,G");
      node2.setVarArgs(false);
      Node node3 = Node.newNumber((double) 4095, 85, 55);
      Node node4 = new Node(43, node2, node0, node2, node3, 36, 50);
      node2.getProp(4095);
      Node node5 = new Node(536870912, node2, node0, node0, node4);
      node5.isNoSideEffectsCall();
      int int0 = 280;
      node4.setSourceEncodedPosition(int0);
      node2.isRegExp();
      node0.isArrayLit();
      node0.isOnlyModifiesArgumentsCall();
      node4.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = Node.newString(484, "com.google.common.base.Joiner$1");
      node0.isNoSideEffectsCall();
      node0.isRegExp();
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.getIntProp((-713));
      Node node1 = new Node(77, node0, node0, node0, 48, 0);
      node1.setVarArgs(false);
      node1.getSourceFileName();
      Node node2 = Node.newNumber((-1.0), (-1490), 55);
      Node node3 = new Node(4194304, node1, node2);
      node2.isName();
      node3.isOptionalArg();
      node1.removeChildAfter(node2);
      node2.isTrue();
      node2.isParamList();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(38);
      Node node1 = new Node(28);
      node1.isContinue();
      node0.addChildrenToFront(node1);
      node0.getParent();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      Node node1 = new Node(55, node0, node0, node0, 12, 56);
      Node node2 = new Node(0, node0, node0, node1);
      node2.isReturn();
      node1.addChildToBack(node2);
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString("n", 2, 38);
      node0.isEquivalentToShallow(node2);
      node2.setLength(12);
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isFalse();
      node2.mayMutateArguments();
      node1.getSourceFileName();
      Node node4 = Node.newNumber((double) 8, 4095, 56);
      Node node5 = new Node(49, node1, node3, node4, node1);
      Node node6 = node5.removeChildAfter(node3);
      node6.addChildrenAfter(node2, node3);
      node1.isQualifiedName();
      node3.isFor();
      int int0 = (-2788);
      node4.setSideEffectFlags(int0);
      Node.newNumber((double) node4.COLUMN_BITS);
      // Undeclared exception!
      try { 
        node4.isVoid();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((double) 8, (-475), 1);
      node0.isQualifiedName();
      node0.isFor();
      Node node2 = new Node(47, node0, node0);
      node2.isQualifiedName();
      Node node3 = new Node((-1263), node1, node1, (-1020), 50);
      node3.mayMutateArguments();
      node0.cloneNode();
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      node0.addSuppression("2h3oYH");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node0.getJSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = new Node((-3803), node0, node0, node0, 1351, 2933);
      node0.getSourceFileName();
      Node node2 = Node.newNumber(0.0, 52, 122);
      node0.isQualifiedName();
      node0.isFor();
      node2.getAncestor(4096);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(29, 1, 112);
      node1.mayMutateGlobalStateOrThrow();
      node1.putIntProp(112, 36);
      node0.addChildrenToBack(node1);
      String string0 = "z*eWmB{1wJCgrWBcj";
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0);
      int int0 = 2147483645;
      int int1 = 53;
      Node.newString(node0.INFERRED_FUNCTION, string0, int0, int1);
      String string1 = "com.google.common.collect.Iterators$12";
      Node node2 = Node.newString(string1);
      Node node3 = null;
      Node node4 = new Node(node2.NO_SIDE_EFFECTS, node0, node1, node1, node3);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = null;
      try {
        jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.getIntProp((-713));
      boolean boolean0 = node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node0.isObjectLit();
      node0.getQualifiedName();
      node0.isLabel();
      Node node1 = Node.newString("c");
      node1.isObjectLit();
      Node.newString(119, "duplicate child");
      node1.setCharno(822);
      Node node2 = new Node(822, node0, node1, 900, 39);
      String string0 = "d41";
      MockFileWriter mockFileWriter0 = new MockFileWriter(string0, boolean0);
      node2.appendStringTree(mockFileWriter0);
      Object object0 = new Object();
      int int0 = 113;
      node2.putProp(int0, node_SideEffectFlags3);
      node2.setSideEffectFlags(node_SideEffectFlags1);
      ErrorReporter errorReporter0 = null;
      boolean boolean1 = false;
      JSTypeRegistry jSTypeRegistry0 = null;
      try {
        jSTypeRegistry0 = new JSTypeRegistry(errorReporter0, boolean1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 822
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString("n", 2, 38);
      node0.isEquivalentToShallow(node2);
      node2.setLength(12);
      node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isFalse();
      node2.mayMutateArguments();
      Node node3 = Node.newString("n", 4220, 40);
      node3.isAssign();
      node0.setSourceEncodedPosition(54);
      node2.isRegExp();
      node0.isArrayLit();
      node0.isOnlyModifiesArgumentsCall();
      node3.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",,<[Z8$\"2CyF#Bm,");
      Node node0 = Node.newString((-2375), " [P`*1pF", 446, 1001);
      Node node1 = new Node((-2375), node0, node0, node0);
      node1.toStringTree();
      node1.addChildAfter(node0, node0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Node node2 = node0.getLastSibling();
      node2.isEquivalentToTyped(node1);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2375
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int int0 = 122;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node0 = new Node(122, (Node) null, (Node) null, (Node) null);
      // Undeclared exception!
      try { 
        node0.isOnlyModifiesThisCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.getQualifiedName();
      node0.isInc();
      Node node1 = Node.newString(0, (String) null);
      node0.removeChild(node1);
      // Undeclared exception!
      try { 
        node0.cloneNode();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(38);
      Node node1 = new Node(28);
      node1.isContinue();
      node1.setLineno(29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = "SC\"V'_0'!R15E^";
      int int0 = 35;
      Node node0 = Node.newString(0, "SC\"V'_0'!R15E^", 35, 0);
      Node node1 = node0.removeFirstChild();
      node0.setJSDocInfo((JSDocInfo) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "SC\"V'_0'!R15E^");
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0);
      int int1 = (-1092);
      String string1 = null;
      node0.hasChild(node1);
      int int2 = 53;
      Node.newString(int1, string1, int2, node0.FLAG_LOCAL_RESULTS);
      String string2 = "~-yQAR~.";
      // Undeclared exception!
      try { 
        Node.newString(string2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node((-3154));
      Node node1 = new Node(30);
      Node.newNumber(1311.78657876);
      node0.isContinue();
      node1.isParamList();
      node0.isInc();
      node0.removeChildAfter((Node) null);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node0.isCast();
      node_SideEffectFlags1.setMutatesThis();
      node0.isObjectLit();
      node0.getQualifiedName();
      int int0 = 1137;
      // Undeclared exception!
      try { 
        node0.getBooleanProp(int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      Node node1 = new Node(303);
      node0.isContinue();
      node1.isParamList();
      Node node2 = new Node(37, node1, node0);
      node1.addChildrenToFront(node2);
      node0.addChildToFront(node1);
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp((-713));
      Node node1 = new Node(52, node0, node0, node0, 48, 0);
      node0.checkTreeEquals(node1);
      node0.getProp(29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.setReturnsTainted();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((-453), nodeArray0, 56, 4095);
      node2.isUnscopedQualifiedName();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.valueOf();
      node0.isLocalResultCall();
      node0.isWith();
      node1.hasOneChild();
      node2.isEquivalentToTyped(node0);
      node2.isInstanceOf();
      Node node3 = Node.newNumber((double) 48);
      node2.setChangeTime(16);
      node3.removeProp(40);
      node2.isLabelName();
      node0.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      int int0 = (-440);
      Node node0 = Node.newString("`K;VlF^OnlrI);<5q", (-440), (-352));
      Node.mergeLineCharNo(48, 39);
      Node node1 = new Node((-2545), 304, (-851));
      node0.removeChildAfter(node1);
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)57;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-95);
      byteArray0[1] = byte1;
      byte byte2 = (byte)43;
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      node0.setVarArgs(false);
      Node node1 = new Node(49, node0, node0, node0);
      node0.isEmpty();
      node0.isFor();
      node0.getChildBefore(node1);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      node0.isQualifiedName();
      node0.isFor();
      Node node1 = new Node(2861, node0, node0);
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(118);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node0.hasMoreThanOneChild();
      node0.wasEmptyNode();
      node0.removeChildAfter(node1);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((-2691.9364732384), 36, (-1528));
      node0.isQualifiedName();
      node0.setLength(304);
      node0.useSourceInfoFrom(node1);
      node0.setType(48);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(12, nodeArray0);
      node2.isFalse();
      node0.mayMutateArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      Node node3 = Node.newString(49, "");
      node3.isAssign();
      node0.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2047);
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString(0, "value", 2048, 0);
      node0.isScript();
      node0.isWhile();
      Node node1 = Node.newString("value");
      node0.addChildrenToBack(node1);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      Node node2 = new Node(57, nodeArray0);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      nodeArray0[3].isThrow();
      int int0 = 5;
      // Undeclared exception!
      try { 
        Node.extractLineno(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      int int0 = 0;
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[1];
      Node node0 = null;
      try {
        node0 = new Node(0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setThrows();
      node0.isCast();
      node_SideEffectFlags4.setMutatesThis();
      node0.isObjectLit();
      node0.getQualifiedName();
      node0.putIntProp(0, 0);
      Node node1 = Node.newString(0, "");
      node1.setVarArgs(false);
      node0.isNoSideEffectsCall();
      Node node2 = node1.getAncestor(43);
      node1.checkTreeEquals(node0);
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((-2691.9364732384), 36, (-1528));
      node0.isQualifiedName();
      node1.isFor();
      Node node2 = new Node(2861, node0, node1);
      node1.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(118);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node0.isAssignAdd();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(2478, 2478, 2478);
      Node node1 = Node.newNumber(2052.28447703);
      node1.getJSDocInfo();
      node0.isObjectLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
      node0.putProp(node1.DIRECT_EVAL, simpleErrorReporter0);
      node1.useSourceInfoIfMissingFrom(node2);
      // Undeclared exception!
      try { 
        node2.isQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      Node node1 = Node.newString(4095, "rMeuvyZS8");
      node0.addChildrenToBack(node1);
      Node node2 = new Node(601, nodeArray0);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node0.isThrow();
      Node.extractLineno(51);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node3 = jSDocInfo0.getAssociatedNode();
      node0.addChildrenToBack((Node) null);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      String string0 = "";
      // Undeclared exception!
      try { 
        node_FileLevelJsDocBuilder0.append(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(38);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = new Node((-1111), node0, node1, node0);
      node0.isEquivalentToShallow(node2);
      node2.setLength(37);
      Node node3 = node2.useSourceInfoFrom(node0);
      node3.setType(30);
      node0.isFalse();
      node3.mayMutateArguments();
      Node node4 = Node.newString("Object#Key", 56, 155);
      node2.isAssign();
      node0.checkTreeEquals(node4);
      node3.setSourceEncodedPosition(650);
      Node node5 = new Node(1934, node0, node0, node4, node2, (-4094), 4095);
      node5.isRegExp();
      node1.isArrayLit();
      node3.isOnlyModifiesArgumentsCall();
      node3.detachFromParent();
      Node node6 = node5.srcref(node0);
      node6.isLabelName();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString("n", 2, 38);
      node0.isEquivalentToShallow(node2);
      node2.setLength(12);
      node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isFalse();
      node2.mayMutateArguments();
      node1.getSourceFileName();
      node0.removeChild(node2);
      boolean boolean0 = true;
      node0.setVarArgs(boolean0);
      node2.getSourceFileName();
      // Undeclared exception!
      try { 
        node2.isContinue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1078);
      node_SideEffectFlags0.setMutatesArguments();
      String string0 = "^";
      Node node0 = Node.newString(0, "^", 1045, (-3115));
      node0.isScript();
      node0.isWhile();
      Node node1 = Node.newString("^");
      node0.addChildrenToBack(node1);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(393, nodeArray0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node2.isThrow();
      Node.extractLineno(783);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      node0.addChildrenToBack((Node) null);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append(string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.getIntProp((-713));
      Node node1 = new Node(77, node0, node0, node0, 48, 0);
      node1.getDouble();
      boolean boolean0 = false;
      node1.removeChild(node0);
      node1.setVarArgs(boolean0);
      // Undeclared exception!
      try { 
        node1.getSourceFileName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TRY 48 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      Node node1 = new Node(51, node0, node0, 42, 47);
      node0.isCast();
      node_SideEffectFlags1.setMutatesThis();
      node1.isObjectLit();
      node1.mayMutateArguments();
      node1.isSyntheticBlock();
      node1.getSourceFileName();
      Node node2 = Node.newNumber((double) 38, (-92), (-1509));
      Node node3 = new Node(1924, node1, node0, node0, node0);
      node2.isSyntheticBlock();
      Node node4 = node0.removeChildAfter(node1);
      node0.addChildrenAfter(node1, node1);
      node4.isQualifiedName();
      node2.isFor();
      int int0 = (-2788);
      // Undeclared exception!
      try { 
        node4.setSideEffectFlags(node0.FLAG_ARGUMENTS_UNMODIFIED);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(29, 1, 112);
      node1.mayMutateGlobalStateOrThrow();
      node1.putIntProp(112, 36);
      node0.addChildrenToBack(node1);
      node0.getSideEffectFlags();
      node0.isComma();
      node1.getIntProp((-2240));
      node1.isDebugger();
      node0.getDirectives();
      node1.putProp((-3267), (Object) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3283));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node0.setSideEffectFlags(node_SideEffectFlags1);
      Node node2 = new Node(node1.QUOTED_PROP);
      node2.isOnlyModifiesThisCall();
      node0.isInc();
      int int0 = 32;
      Node node3 = null;
      try {
        node3 = new Node(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      Node node1 = new Node(53, node0, node0, 2, 2);
      node0.isQualifiedName();
      node0.isFor();
      node0.getJsDocBuilderForNode();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setThrows();
      node0.isCast();
      node_SideEffectFlags4.setMutatesThis();
      node0.isObjectLit();
      node0.getQualifiedName();
      Node node1 = new Node(30, node0, node0, 2080, 8);
      node0.srcref(node1);
      node0.putIntProp(0, 0);
      Node node2 = Node.newString(0, "");
      node2.setVarArgs(false);
      node0.isNoSideEffectsCall();
      Node node3 = node2.getAncestor(43);
      node2.checkTreeEquals(node0);
      node3.getLastChild();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newString("^\"FtC");
      node0.children();
      Node node1 = Node.newString(2, " {:f");
      Node node2 = new Node((-477), (-45), 47);
      node2.detachChildren();
      Node node3 = Node.newNumber((double) 43, 4095, 709);
      node0.isQualifiedName();
      Node node4 = new Node(49, node1, node2, node0, node0);
      node4.isEquivalentTo(node1);
      node1.getJsDocBuilderForNode();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.cloneNode();
      node3.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.children();
      Node node1 = Node.newString(83, "DATA_FLOW");
      Node node2 = new Node(5143, (-2502), 48);
      node0.detachChildren();
      Node node3 = Node.newNumber((double) 55, (-878), (-1528));
      node3.isQualifiedName();
      Node node4 = new Node(254, node3, node3, node3, node2);
      node1.isFor();
      node3.getJsDocBuilderForNode();
      node4.mayMutateArguments();
      node4.cloneNode();
      node3.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0);
      Node node1 = Node.newString(54, "}w.=lEA+9");
      node0.detachChildren();
      Node node2 = Node.newNumber((double) 0, 42, 2817);
      Node node3 = new Node(46, nodeArray0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node4 = Node.newString("}w.=lEA+9");
      node4.isThrow();
      Node.extractLineno(4095);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.newString("}w.=lEA+9", 4095, 57);
      node1.addChildrenToBack(node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("hf0Me/F?i>OH,M:Y<&>");
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newString("^\"FtC");
      node0.children();
      String string0 = " {:f";
      Node node1 = Node.newString(2, " {:f");
      Node node2 = new Node((-477), (-45), 47);
      node2.detachChildren();
      Node node3 = Node.newNumber((double) 43, 4095, 709);
      node0.isQualifiedName();
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0);
      node3.appendStringTree(mockPrintStream0);
      Node node4 = new Node(node2.DIRECT_EVAL, node1, node2, node0, node0);
      node4.isEquivalentTo(node1);
      node1.getJsDocBuilderForNode();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node5 = new Node(node2.COLUMN_BITS, node1, node3.REFLECTED_OBJECT, node3.INCRDECR_PROP);
      node3.copyInformationFrom(node1);
      node4.isNew();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      Node node1 = new Node((-34));
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isFunction();
      node1.detachChildren();
      node1.useSourceInfoIfMissingFromForTree(node2);
      Node node3 = Node.newNumber(3071.38122181);
      node1.isAssignAdd();
      node3.setSideEffectFlags((-2398));
      Node.newNumber((double) node2.DIRECTIVES);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((-2691.9364732384), 36, (-1528));
      node0.isDo();
      node0.setLength(304);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.setType(48);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(12, nodeArray0);
      node2.isNull();
      node0.mayMutateArguments();
      node0.setVarArgs(false);
      node3.isUnscopedQualifiedName();
      Node node4 = Node.newNumber((double) 56, 50, 49);
      node4.isNoSideEffectsCall();
      node1.getAncestor((-393));
      char[] charArray0 = new char[4];
      char char0 = 'S';
      charArray0[0] = char0;
      char char1 = 'N';
      charArray0[1] = char1;
      char char2 = 'Y';
      charArray0[2] = char2;
      char char3 = 'd';
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = Node.newString("^\"FtC");
      node0.children();
      Node node1 = Node.newString(2, " {:f");
      Node node2 = new Node((-477), (-45), 47);
      node2.detachChildren();
      Node node3 = Node.newNumber((double) 43, 4095, 709);
      node0.isQualifiedName();
      Node node4 = new Node(49, node1, node2, node0, node0);
      node4.isEquivalentTo(node1);
      node0.getJsDocBuilderForNode();
      node2.mayMutateArguments();
      node1.cloneNode();
      Node node5 = node1.copyInformationFrom(node3);
      node5.getJSType();
      node5.hasChildren();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(57, node0, node0, 12, 1);
      Node node2 = Node.newString("n", 2, 38);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node3.isContinue();
      node2.setLineno((-2198));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isInc();
      node2.replaceChild(node0, node1);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = new Node(49);
      Node node1 = new Node(4095, 43, (-253));
      node1.getSourceFileName();
      node0.getSideEffectFlags();
      Node node2 = new Node((-796));
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      boolean boolean0 = node0.isFunction();
      node0.detachChildren();
      Node.newNumber((double) 47);
      node2.isAssignAdd();
      node0.setSideEffectFlags(15);
      Node node4 = Node.newNumber((double) node1.IS_NAMESPACE);
      boolean boolean1 = true;
      node4.toString(boolean1, boolean0, boolean0);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got THROW
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0);
      Node node1 = Node.newString(54, "}w.=lEA+9");
      node0.detachChildren();
      Node node2 = Node.newNumber((double) 0, 42, 2817);
      Node node3 = new Node(46, nodeArray0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node4 = Node.newString("}w.=lEA+9");
      node4.isThrow();
      Node.extractLineno(4095);
      node4.setStaticSourceFile((StaticSourceFile) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.newString("}w.=lEA+9", 4095, 57);
      node1.addChildrenToBack(node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("hf0Me/F?i>OH,M:Y<&>");
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      String string0 = "duplicate child";
      Node node0 = Node.newString("duplicate child");
      node0.getIntProp((-713));
      Node node1 = new Node(77, node0, node0, node0, 48, 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node1.getString();
      int int0 = 1;
      Node node2 = new Node(node1.STATIC_SOURCE_FILE, int0, node1.FLAG_NO_THROWS);
      int int1 = 159;
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0);
      Node node1 = Node.newString(54, "}w.=lEA+9");
      node0.detachChildren();
      Node node2 = Node.newNumber((double) 0, 42, 2817);
      Node node3 = new Node(46, nodeArray0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node4 = Node.newString("}w.=lEA+9");
      node4.isThrow();
      Node.extractLineno(4095);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.newString("}w.=lEA+9", 4095, 57);
      node1.addChildrenToBack(node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node2.isNoSideEffectsCall();
      node3.getAncestor(16);
      node4.isBreak();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((-2691.9364732384), 36, (-1528));
      node0.isQualifiedName();
      node0.setLength(47);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.setType(48);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(12, nodeArray0);
      Node node4 = new Node(37, node3, node1);
      node4.isName();
      node2.isOptionalArg();
      node2.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node4.isObjectLit();
      Node.newString(908, "");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node4.getChildBefore((Node) null);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node.mergeLineCharNo(2, 2);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      Node node1 = new Node(125, node0, node0, 557, 4);
      node1.isCast();
      node_SideEffectFlags4.setMutatesThis();
      node0.isObjectLit();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getQualifiedName();
      node1.getBooleanProp(108);
      node1.isRegExp();
      Node node2 = new Node(1324, node1, node1);
      node2.isAssignAdd();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      jSTypeRegistry0.incrementGeneration();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      String string0 = "%C#Q#3";
      node_SideEffectFlags0.setMutatesArguments();
      ObjectType objectType0 = FunctionType.getTopDefiningInterface((ObjectType) null, "Object#Element");
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createEnumType(string0, node0, objectType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = Node.newString("*_du\"3Ei%SI-", 822, 822);
      node0.getString();
      Node node1 = new Node(1760, node0, node0, 4191, 1);
      Node node2 = Node.newString("originalname", 0, 57);
      node2.isEquivalentToShallow(node1);
      node1.setLength(1);
      Node node3 = node1.useSourceInfoFrom(node2);
      node0.setType(1);
      node1.isFalse();
      node3.mayMutateArguments();
      node3.getSourceFileName();
      Node.newNumber(1.0, 83, 50);
      Node node4 = new Node(47, node0, (Node) null, node1, node1);
      Node node5 = node2.removeChildAfter(node4);
      int int0 = 1;
      double double0 = 0.0;
      Node node6 = Node.newNumber(double0);
      int int1 = 110;
      int int2 = (-81);
      Node node7 = new Node(int0, node3, node2, node6, int1, int2);
      node5.addChildrenAfter(node7, node6);
      // Undeclared exception!
      try { 
        node3.isQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = new Node((-30));
      Node node1 = new Node(39);
      node1.isOptionalArg();
      node1.isContinue();
      node0.hasChildren();
      node1.isGetElem();
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = new Node(38);
      node0.setChangeTime(3524);
      Node node1 = new Node(28);
      node1.isContinue();
      node1.hasChildren();
      node0.isGetElem();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newString("`", 0, (-8));
      Node node1 = Node.newString(9, "");
      Node node2 = new Node(3162, node1);
      node2.isEquivalentToShallow(node0);
      node0.setWasEmptyNode(true);
      Node node3 = new Node(29, node0, node0);
      node2.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      Node node1 = new Node((-34));
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isFunction();
      node1.detachChildren();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node3 = Node.newNumber(3071.38122181);
      node0.isFalse();
      node1.mayMutateArguments();
      node3.isAssign();
      node1.useSourceInfoFrom(node0);
      node0.useSourceInfoFrom(node1);
      node2.isOr();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      Node node1 = new Node(324);
      node0.isContinue();
      node1.isParamList();
      Node node2 = new Node(37, node1, node0);
      node1.addChildrenToFront(node2);
      node1.isQualifiedName();
      node1.isFor();
      Node node3 = Node.newString("=S#sjOzdisUV=<x", (-1842), 38);
      node3.setSideEffectFlags(54);
      double double0 = 1165.56673166143;
      Node.newNumber(double0);
      node3.isVoid();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString(1998, "gu 6jCG{X", 2097152, 86);
      node1.isScript();
      node0.isWhile();
      Node node3 = Node.newString("String node not created with Node.newString");
      node1.addChildrenToBack(node3);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      Node node4 = new Node((-434), nodeArray0);
      node2.checkTreeTypeAwareEqualsImpl(nodeArray0[0]);
      node1.isThrow();
      int int0 = (-21);
      Node.extractLineno(int0);
      boolean boolean0 = false;
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean0);
      jSDocInfo0.getAssociatedNode();
      node0.addChildrenToBack(nodeArray0[1]);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      String string0 = "";
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp((-713));
      Node node1 = new Node(52, node0, node0, node0, 48, 0);
      node0.checkTreeEquals(node1);
      node1.copyInformationFrom(node0);
      node0.getProp(29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.setReturnsTainted();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((-453), nodeArray0, 56, 4095);
      node2.isUnscopedQualifiedName();
      node2.addChildrenAfter(node0, node1);
      node0.isThis();
      node2.isFor();
      node0.setSideEffectFlags(node1.SIDE_EFFECTS_FLAGS_MASK);
      Node.newNumber((double) node0.FLAG_NO_THROWS);
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newString(36, "cLm.google.javascript.rhino.Node$AncestorIterable");
      node0.detachChildren();
      node0.setVarArgs(false);
      Node node1 = new Node(12, node0, node0, node0);
      node0.isEmpty();
      node1.getInputId();
      node1.isFor();
      node1.isQualifiedName();
      node0.useSourceInfoFromForTree(node1);
      node1.isFor();
      node0.getJsDocBuilderForNode();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      Node node1 = new Node(53, node0, node0, 2, 2);
      Node node2 = new Node(307, node1, node1, node1, node0);
      node2.getChildBefore(node0);
      Node node3 = null;
      Node node4 = null;
      try {
        node4 = new Node(node2.FLAG_GLOBAL_STATE_UNMODIFIED, node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NOT");
      Node node0 = Node.newString("DEFAULT_CASE");
      Node node1 = Node.newString("DEFAULT_CASE", 16, 48);
      node1.srcrefTree(node0);
      node0.toString();
      node0.getInputId();
      Node node2 = Node.newString(1260, "DEFAULT_CASE");
      node0.getSourcePosition();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node2.isFor();
      node2.isBlock();
      Node node3 = node1.copyInformationFrom(node2);
      node3.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = new Node(0);
      node0.addSuppression("com.google.javascript.rhino.Node$AbstractPropListItem");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node0.isCast();
      node_SideEffectFlags1.setMutatesThis();
      node0.isObjectLit();
      node0.getQualifiedName();
      node0.getBooleanProp(65535);
      node0.isObjectLit();
      node0.setCharno(0);
      node0.isObjectLit();
      node0.setCharno(1062);
      Object object0 = new Object();
      node0.getInputId();
      Node node1 = Node.newNumber(0.0, 53, 1977);
      node1.addChildAfter(node0, node0);
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(54, node0, node0, 12, 1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = Node.newString("n", 2, 38);
      node0.isEquivalentToShallow(node2);
      node2.setLength(12);
      node2.getProp((-296));
      Node node3 = node0.useSourceInfoFrom(node1);
      node0.setType(47);
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(0, nodeArray0);
      Node node5 = new Node(110, node4, node1);
      node4.isName();
      node1.isOptionalArg();
      node5.hasOneChild();
      node5.isObjectLit();
      Node.newString(34, "nqp6`1MQ01X{");
      node3.getChildBefore(node1);
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((-2691.9364732384), 36, (-1528));
      node0.isWith();
      node0.setLength(47);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.setType(48);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(12, nodeArray0);
      Node node4 = new Node(37, node3, node1);
      node4.isName();
      node2.isOptionalArg();
      node2.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node4.isObjectLit();
      Node node5 = new Node(32, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node6 = new Node(2, (-1528), 4);
      node4.getChildBefore(node6);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NOT");
      Node node0 = Node.newString("DEFAULT_CASE");
      Node node1 = Node.newString("DEFAULT_CASE", 16, 48);
      Node node2 = node1.srcrefTree(node0);
      node0.toString();
      node0.getInputId();
      Node node3 = Node.newString(1260, "DEFAULT_CASE");
      node0.getSourcePosition();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.setType(49);
      Node node4 = Node.newString("I~3{", 49, 36);
      node1.addChildrenToBack(node3);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      node1.isNoSideEffectsCall();
      node1.getStaticSourceFile();
      node3.setStaticSourceFile((StaticSourceFile) null);
      node1.getAncestor(98);
      node3.isBreak();
      node4.isInc();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0);
      Node node1 = Node.newString(54, "}w.=lEA+9");
      node0.detachChildren();
      Node node2 = Node.newNumber((double) 0, 42, 2817);
      Node node3 = new Node(46, nodeArray0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node4 = Node.newString("}w.=lEA+9");
      node4.isThrow();
      Node.extractLineno(4095);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node4.isFor();
      node4.isBlock();
      node3.copyInformationFrom(node1);
      node2.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((double) 12, 36, (-1529));
      Node node2 = new Node(12);
      node0.isParamList();
      Node node3 = new Node(39, node1, node2);
      node1.addChildToFront(node3);
      node3.isTry();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node(1591);
      node0.addSuppression("n");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node0.isCast();
      node_SideEffectFlags2.setMutatesThis();
      node0.isObjectLit();
      node0.getQualifiedName();
      node0.getBooleanProp(49);
      node0.isObjectLit();
      Node node1 = Node.newString(57, (String) null);
      int int0 = 127;
      node1.setCharno(int0);
      node1.putProp(int0, node_SideEffectFlags4);
      int int1 = (-2048);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((-2691.9364732384), 36, (-1528));
      node0.setLength(47);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.setType(48);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(12, nodeArray0);
      Node node4 = new Node(37, node3, node1);
      node4.isName();
      node2.isOptionalArg();
      node2.hasOneChild();
      Node node5 = node3.useSourceInfoFromForTree(node4);
      node0.putIntProp(1192, 8);
      node4.setDouble(55);
      int int0 = 2171;
      node5.getChildAtIndex(int0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(65535);
      node0.isOptionalArg();
      node0.isContinue();
      node1.hasChildren();
      node0.isGetElem();
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      int int0 = 52;
      Node node1 = new Node(52, node0, node0, node0, 48, 0);
      node0.checkTreeEquals(node1);
      node1.addChildrenAfter(node0, (Node) null);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node1.getAncestors();
      node1.getBooleanProp(int0);
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((-2691.9364732384), 36, (-1528));
      node0.isDo();
      node0.setLength(304);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.setType(48);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(12, nodeArray0);
      node2.isNull();
      node0.mayMutateArguments();
      node0.setVarArgs(false);
      node3.isUnscopedQualifiedName();
      Node node4 = Node.newNumber((double) 56, 50, 49);
      node4.isNoSideEffectsCall();
      Node node5 = new Node(51, nodeArray0);
      node5.checkTreeTypeAwareEqualsImpl(node0);
      node1.isThrow();
      Node.extractLineno(7703);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node6 = new Node(2061, nodeArray0);
      node4.addChildrenToBack(node6);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("6u");
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString(1998, "gu 6jCG{X", 2097152, 86);
      node1.isScript();
      node0.isWhile();
      Node node3 = Node.newString("String node not created with Node.newString");
      node1.addChildrenToBack(node3);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      Node node4 = new Node(15);
      node4.getAncestor(3275);
      Node.extractLineno(47);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node3.addChildrenToBack(node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("e");
      Node.newString("a\u0000){=O[?xG!3e(z4d");
      node4.cloneTree();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = Node.newNumber(1514.37303047449, 1, 113);
      Node node2 = Node.newNumber(1.0);
      Node node3 = Node.newNumber((-828.025337747322));
      node3.getSourceFileName();
      Node node4 = Node.newString(57, "");
      Node node5 = new Node(132, node3, node3, node4, node4);
      node5.addChildrenToFront(node0);
      node4.getParent();
      Node node6 = Node.newNumber((-2995.052050118));
      node1.isExprResult();
      Node node7 = new Node((-579), node2, 53, 54);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node7.isExprResult();
      node5.isIf();
      node6.siblings();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = new Node(38);
      node0.setChangeTime(3524);
      Node node1 = new Node(31);
      node1.isContinue();
      node1.hasChildren();
      node0.isGetElem();
      node1.isEquivalentTo(node0, false, false, false);
      node1.isFalse();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newString("");
      Iterable<Node> iterable0 = new LinkedList<Node>();
      Node node1 = Node.newString(83, "DATA_FLOW");
      Node node2 = new Node(5143, (-2502), 48);
      node0.detachChildren();
      Node node3 = Node.newNumber((double) 55, (-878), (-1528));
      node3.isQualifiedName();
      Node node4 = new Node(226, node3, node3, node3, node2);
      node4.detachChildren();
      node1.isFor();
      node4.cloneNode();
      node3.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      Node node1 = new Node((-34));
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isFunction();
      node1.detachChildren();
      Node node3 = Node.newNumber(3071.38122181);
      node1.isAssignAdd();
      node1.cloneNode();
      node3.setSideEffectFlags((-2398));
      Node.newNumber((double) node2.DIRECTIVES);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(54, node0, node0, 12, 1);
      Node node2 = Node.newString("n", 2, 38);
      node0.isEquivalentToShallow(node2);
      node2.setLength(12);
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isFalse();
      node2.mayMutateArguments();
      node1.getSourceFileName();
      Node node4 = Node.newNumber((double) 8, 4095, 56);
      Node node5 = new Node(49, node1, node3, node4, node1);
      node5.replaceChildAfter(node0, node4);
      Node node6 = node5.removeChildAfter(node3);
      node6.addChildrenAfter(node2, node3);
      node1.isGetElem();
      // Undeclared exception!
      try { 
        node0.isQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newNumber((-1117.442238929));
      node0.getJSDocInfo();
      node0.isAdd();
      Node node1 = Node.newNumber(829.298969561, (-2142), (-1248));
      node1.isEquivalentToTyped(node0);
      Node node2 = node0.srcrefTree(node1);
      node1.getLength();
      Node node3 = node2.detachFromParent();
      node3.isOnlyModifiesThisCall();
      node3.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newString("empty_block");
      node0.children();
      Node node1 = Node.newString(2, " {:f");
      Node node2 = new Node((-477), (-81), 47);
      Node.newNumber((double) 43, 4138, 709);
      node0.isQualifiedName();
      Node node3 = new Node(49, node1, node2, node0, node0);
      node3.isEquivalentTo(node1);
      node1.getJsDocBuilderForNode();
      node3.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.setType(354);
      node3.isInc();
      node0.isVoid();
      node1.detachFromParent();
      node0.removeChild(node3);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      int int0 = Node.OPT_ARG_NAME;
      Node node1 = new Node(37);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isSwitch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.detachChildren();
      Node.newNumber((double) 8);
      node2.isAssignAdd();
      node1.setSideEffectFlags(52);
      Node node4 = Node.newNumber((double) 47);
      node4.isAnd();
      node3.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = Node.newNumber(1514.37303047449, 1, 113);
      Node node2 = Node.newNumber(1.0);
      Node node3 = node0.setJSDocInfo((JSDocInfo) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/experiment");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Mi>x*j");
      node1.hasChild(node3);
      Node node4 = Node.newString(38, "[", 46, 4095);
      node2.isFalse();
      node2.mayMutateArguments();
      node2.isAssign();
      Node node5 = node4.useSourceInfoFrom(node0);
      Node node6 = new Node(48, node5, node4, 4, 717);
      node6.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newNumber((-1117.442238929));
      node0.getJSDocInfo();
      node0.isAdd();
      Node node1 = Node.newNumber(829.298969561, 40, (-1248));
      node1.isEquivalentToTyped(node0);
      node0.srcrefTree(node1);
      node1.getLength();
      node1.isOnlyModifiesThisCall();
      node1.copyInformationFromForTree(node0);
      node1.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = new Node(0);
      node0.addSuppression("com.google.javascript.rhino.Node$AbstractPropListItem");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.setChangeTime(0);
      Node node1 = new Node((-2391));
      Node node2 = new Node(1610612736, node0);
      node2.isContinue();
      node1.hasChildren();
      node0.isGetElem();
      node2.isQualifiedName();
      node1.copyInformationFrom(node2);
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      Node node1 = new Node(125, node0, node0, 557, 4);
      node1.isCast();
      node_SideEffectFlags4.setMutatesThis();
      node0.isObjectLit();
      node0.getQualifiedName();
      node1.getBooleanProp(108);
      node1.putProp(50, node_SideEffectFlags3);
      node1.isTry();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0);
      Node node1 = Node.newString(54, "}w.=lEA+9");
      node0.detachChildren();
      Node node2 = Node.newNumber((double) 0, 42, 2817);
      Node node3 = new Node(46, nodeArray0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node4 = Node.newString("}w.=lEA+9");
      node4.isThrow();
      Node.extractLineno(4095);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.newString("}w.=lEA+9", 4095, 57);
      node1.addChildrenToBack(node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node2.isNoSideEffectsCall();
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newString(333, "6u");
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((-2691.9364732384), 36, (-1528));
      Node node2 = new Node(12, node0, node1, 54, (-2477));
      Node node3 = Node.newString("6u", (-911), 40);
      node0.isEquivalentToShallow(node2);
      node3.setLength(122);
      Node node4 = node3.useSourceInfoFrom(node2);
      node0.setType(53);
      node3.isFalse();
      node1.isName();
      node1.isOptionalArg();
      node3.hasOneChild();
      node0.putIntProp(48, 40);
      node4.getInputId();
      node4.setDouble(4095);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      node0.removeFirstChild();
      node0.isEquivalentTo((Node) null);
      // Undeclared exception!
      try { 
        node0.siblings();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = new Node((-1724), (-1724), (-1724));
      node0.detachChildren();
      Node node1 = Node.newNumber((-737.8703892579922), 36, (-1528));
      node0.isQualifiedName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = new Node(65, node0, node0, node1, 140, (-1724));
      node2.removeChild(node0);
      node2.setVarArgs(false);
      node2.getSourceFileName();
      node1.isTry();
      node2.getExistingIntProp(48);
      node1.isDebugger();
      node2.getChildBefore(node0);
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(48, node0, node0, node0, node0, 52, 4095);
      Node node2 = Node.newString("n", 2, 38);
      node0.isEquivalentToShallow(node2);
      node2.setLength(12);
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isNull();
      node2.mayMutateArguments();
      node1.getSourceFileName();
      Node.newNumber((double) 8, 4095, 56);
      Node node4 = new Node(115, node1, node2);
      node1.isQualifiedName();
      node3.isFor();
      node1.getAncestor(91);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString("n", 2, 38);
      node1.isVoid();
      node2.setLength(12);
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isFalse();
      node2.mayMutateArguments();
      node1.getSourceFileName();
      Node node4 = Node.newNumber((double) 8, 4095, 56);
      Node node5 = new Node(42, node4);
      node1.isQualifiedName();
      node3.isFor();
      node1.getAncestor(91);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newString("KEMi3:OD#[6#'g\"?e 7", 33, 33);
      node0.setOptionalArg(true);
      node0.setChangeTime(414);
      Node node1 = new Node(4, node0, node0, 52, 56);
      node0.isContinue();
      node1.getJsDocBuilderForNode();
      node1.toString();
      node1.hasChildren();
      node1.isGetElem();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(51, 103, 125);
      node0.isEquivalentToShallow(node1);
      node0.setLength(35);
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.setType(15);
      node0.isFalse();
      node0.mayMutateArguments();
      node2.getSourceFileName();
      Node node3 = Node.newNumber(1.0, 31, 32);
      Node node4 = new Node(64, node3, node3, node3, node1);
      node4.setQuotedString();
      Node node5 = node0.removeChildAfter(node2);
      node1.addChildrenAfter(node2, node5);
      node1.isQualifiedName();
      node5.isFor();
      int int0 = 21;
      node0.setSideEffectFlags(int0);
      double double0 = (-2224.80431347368);
      Node node6 = Node.newNumber(double0);
      // Undeclared exception!
      try { 
        node6.isVoid();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp((-713));
      Node node1 = new Node(52, node0, node0, node0, 48, 0);
      node0.checkTreeEquals(node1);
      node0.getProp(29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.setReturnsTainted();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((-453), nodeArray0, 56, 4095);
      node2.isUnscopedQualifiedName();
      node_SideEffectFlags4.valueOf();
      node0.isLocalResultCall();
      node0.isWith();
      node1.setLength(29);
      node1.hasOneChild();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      Node node1 = new Node(125, node0, node0, 557, 4);
      node1.isCast();
      node_SideEffectFlags4.setMutatesThis();
      node0.isObjectLit();
      node0.getQualifiedName();
      node1.getBooleanProp(108);
      node1.putProp(50, node_SideEffectFlags3);
      node1.isOnlyModifiesArgumentsCall();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = new Node(29);
      node0.isSyntheticBlock();
      node0.setLineno((-434));
      node0.getSourceFileName();
      node0.hasMoreThanOneChild();
      node0.isNew();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = Node.newString("empty_block");
      node0.children();
      Node node1 = Node.newString(2, " {:f");
      Node node2 = new Node((-477), (-81), 47);
      Node node3 = Node.newNumber((double) 43, 4138, 709);
      node0.isQualifiedName();
      Node node4 = new Node(49, node1, node2, node0, node0);
      node4.isEquivalentTo(node1);
      node1.getJsDocBuilderForNode();
      node4.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.setType(354);
      node4.isInc();
      node0.isVoid();
      node0.toString(false, false, false);
      node3.replaceChildAfter(node2, node2);
      node4.isTrue();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.getIntProp((-713));
      Node node1 = new Node(77, node0, node0, node0, 48, 0);
      node1.removeChild(node0);
      node1.setVarArgs(false);
      Node node2 = Node.newNumber(829.298969561, 4095, 2);
      node2.isEquivalentToTyped(node1);
      Node node3 = null;
      node1.getBooleanProp(85);
      Node node4 = node1.srcrefTree((Node) null);
      node1.getLength();
      node0.isOnlyModifiesThisCall();
      Node node5 = node1.copyInformationFromForTree(node3);
      int int0 = (-3460);
      node5.getLength();
      int int1 = 93;
      Node node6 = null;
      try {
        node6 = new Node(node5.SIDE_EFFECT_FLAGS, node4, int1, node4.DIRECTIVES);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((-2691.9364732384), 36, (-1528));
      Node node2 = new Node(12, node0, node1, 54, (-2477));
      Node node3 = Node.newString("6u", (-911), 40);
      node0.isEquivalentToShallow(node2);
      node3.setLength(122);
      Node node4 = node3.useSourceInfoFrom(node2);
      node0.setType(53);
      node3.isFalse();
      node1.isName();
      node2.isGetterDef();
      node3.hasOneChild();
      node0.putIntProp(48, 40);
      node4.getInputId();
      node4.setDouble(4095);
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      Node node1 = Node.newString(4095, "6u", 51, 2);
      Node node2 = new Node(29);
      node2.isNot();
      Node node3 = new Node(50, node1, node0);
      node0.addChildToFront(node3);
      node1.isTry();
      node3.getChildBefore(node0);
      node2.setSideEffectFlags(55);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      Node node1 = Node.newString("I(EM%_r~AH", 4220, 52);
      node0.getString();
      Node node2 = new Node(117, node0, node0, 12, 122);
      Node node3 = Node.newString("", 30, 35);
      Node node4 = new Node(700, node3);
      node3.isEquivalentToShallow(node4);
      node0.setLength(1);
      Node node5 = node4.useSourceInfoFrom(node1);
      node4.setType(1);
      node1.isFalse();
      node5.mayMutateArguments();
      Node node6 = Node.newString("I(EM%_r~AH", 105, (-2919));
      node6.isAssign();
      node6.setSourceEncodedPosition(147);
      node1.isRegExp();
      Node.newString((-653), "");
      node2.isInstanceOf();
      node6.removeProp(50);
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = new Node(0);
      node0.addSuppression("com.google.javascript.rhino.Node$AbstractPropListItem");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newNumber((double) 4095, 51, 37);
      Node node2 = new Node(33, node1);
      Node node3 = new Node(47, node2, node0, 0, 32);
      Node node4 = Node.newString("YtsOZUb|mtU", (-4705), 1674);
      node2.isEquivalentToShallow(node3);
      node3.setLength(46);
      Node node5 = new Node(40);
      Node node6 = node5.useSourceInfoFrom(node3);
      node5.setType((-399));
      node2.isFalse();
      node3.isName();
      node2.isOptionalArg();
      node0.hasOneChild();
      node5.putIntProp(57, (-671));
      node6.getInputId();
      Node node7 = new Node(931, node1, 154, 0);
      node7.setDouble(node5.CHANGE_TIME);
      node4.isDec();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = Node.newString("F',{gw;q", (-197), 0);
      node0.getString();
      Node node1 = new Node(51, node0, node0, 2880, 57);
      Node node2 = Node.newString("INHERITED", 52, 9);
      node0.isEquivalentToShallow(node2);
      node0.setLength(2934);
      Node node3 = node2.useSourceInfoFrom(node0);
      node0.setType(9);
      node2.isFalse();
      node0.mayMutateArguments();
      node3.getSourceFileName();
      Node.newNumber((-72.873), 36, 37);
      Node node4 = new Node(39, node3, node3, node1, node1);
      Node node5 = new Node(42, node1);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node2;
      node5.replaceChildAfter(node1, node1);
      node1.addChildrenAfter(node1, node1);
      node1.isGetElem();
      node5.isQualifiedName();
      nodeArray0[1].isContinue();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newString("6u", (-1724), (-1724));
      node0.detachChildren();
      Node node1 = new Node(42);
      Node node2 = Node.newNumber(339.11, 1, (-2443));
      node2.isSyntheticBlock();
      Node node3 = new Node(415);
      node0.isParamList();
      Node node4 = new Node(55, node1, node3);
      node4.getJSDocInfo();
      Node node5 = Node.newString("6u");
      node4.addChildToFront(node5);
      Node node6 = Node.newString(" ,tW");
      Node node7 = new Node(4, node0, node6, node0, node5);
      node7.removeChildren();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = new Node(29);
      node0.isSyntheticBlock();
      node0.isSyntheticBlock();
      Node node1 = Node.newString(",G1v1nEo3M");
      node0.isThrow();
      Node.extractLineno(51);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = Node.newString(",G1v1nEo3M", 52, 43);
      node1.addChildrenToBack(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node1.isNoSideEffectsCall();
      node2.isString();
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newNumber((-1117.442238929));
      node0.getJSDocInfo();
      node0.isEquivalentToTyped(node0);
      node0.srcrefTree(node0);
      node0.getLength();
      node0.isOnlyModifiesThisCall();
      node0.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = new Node(38);
      StringWriter stringWriter0 = new StringWriter();
      node0.appendStringTree(stringWriter0);
      node0.setChangeTime(52);
      Node node1 = new Node(31);
      node0.toStringTree();
      node1.hasChildren();
      node0.isGetElem();
      node1.isEquivalentTo(node0, false, false, false);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newString("6", 0, 0);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString("6", 2, 38);
      node0.isEquivalentToShallow(node2);
      node2.setLength(12);
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isFalse();
      node2.mayMutateArguments();
      Node node4 = Node.newString("6", 4220, 40);
      node4.isAssign();
      node2.isRegExp();
      Object object0 = new Object();
      node3.getInputId();
      node1.addChildrenAfter(node0, node0);
      node3.isGetElem();
      node1.isQualifiedName();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.getIntProp((-713));
      Node node1 = new Node(12, node0, node0, node0, node0, 8, 1);
      node1.getDouble();
      boolean boolean0 = false;
      node1.removeChild(node0);
      node1.setVarArgs(boolean0);
      // Undeclared exception!
      try { 
        node1.getSourceFileName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // EQ 8 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      node0.isSyntheticBlock();
      node0.setLineno(152);
      node0.getSourceFileName();
      node0.hasMoreThanOneChild();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.FunctionType$Kind");
      Node node0 = Node.newString(0, "6u");
      Node node1 = Node.newString(4095, "6u", 51, 2);
      Node node2 = new Node(29);
      node2.isNot();
      Node node3 = new Node(50, node1, node0);
      node0.addChildToFront(node3);
      node2.isGetElem();
      node1.isEquivalentTo(node2, false, false, false);
      node3.isFalse();
      node2.getLastSibling();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node4 = node2.setJSDocInfo(jSDocInfo0);
      node3.isFunction();
      node4.isIn();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jNho@LOy)$(mi");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F',{gw;q");
      JSType jSType0 = jSTypeRegistry0.getType((StaticScope<JSType>) null, "", "INHERITED", 908, 908);
      jSTypeArray0[0] = jSType0;
      JSType jSType1 = jSTypeRegistry0.createOptionalNullableType(jSType0);
      jSTypeArray0[1] = jSType1;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(908, node0, node0, node0);
      Visitor<Integer> visitor0 = (Visitor<Integer>) mock(Visitor.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(visitor0).caseUnknownType();
      jSType0.visit(visitor0);
      node1.isDo();
      node1.isLabel();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      jSType1.findPropertyType("INHERITED");
      node2.setSideEffectFlags(49);
      node2.isParamList();
      Node node3 = node2.getLastChild();
      node1.isVoid();
      node3.isGetElem();
      node0.isThis();
      node2.isArrayLit();
      node1.isQualifiedName();
      // Undeclared exception!
      try { 
        node1.isAdd();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = Node.newString(0, "6");
      node0.getString();
      Node node1 = new Node(2439, node0, node0, 12, 1);
      Node node2 = Node.newString("6", 2, 38);
      node0.isEquivalentToShallow(node2);
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.setType(32);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node1.getAncestors();
      node0.getBooleanProp((-3513));
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.isFunction();
      Node node5 = Node.newNumber((double) 53);
      node3.isRegExp();
      node3.isAssignAdd();
      node5.isTry();
      node4.isDo();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node(29);
      node0.isSyntheticBlock();
      node0.isSyntheticBlock();
      Node node1 = new Node(4, node0, node0);
      node1.setVarArgs(true);
      node0.getSourceFileName();
      node0.isContinue();
      node1.isTry();
      node0.isDebugger();
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      int int0 = Node.CHANGE_TIME;
      Node node1 = new Node((-34));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.setOptionalArg(true);
      node1.setChangeTime((-454));
      Node node2 = new Node(130);
      node2.isContinue();
      node1.hasChildren();
      node2.isGetElem();
      Node node3 = new Node(36, node0, 37, 2378);
      node3.removeChildren();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = Node.newString("6u", (-1724), (-1724));
      node0.detachChildren();
      Node node1 = new Node(42);
      Node node2 = Node.newNumber(339.11, 1, (-2443));
      node2.isSyntheticBlock();
      Node node3 = new Node(415);
      node3.isSwitch();
      Node node4 = new Node(55, node1, node3);
      node4.getJSDocInfo();
      Node node5 = Node.newString("6u");
      node4.addChildToFront(node5);
      Node node6 = Node.newString(" ,tW");
      Node node7 = new Node(4, node0, node6, node0, node5);
      node3.srcrefTree(node4);
      node7.removeChildren();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newNumber((-1117.442238929));
      node0.getJSDocInfo();
      node0.isAdd();
      Node node1 = Node.newNumber(829.298969561, 40, (-1248));
      node1.isEquivalentToTyped(node0);
      Node node2 = node0.srcrefTree(node1);
      int int0 = Node.POST_FLAG;
      node1.isOnlyModifiesThisCall();
      Node node3 = node1.copyInformationFromForTree(node0);
      node1.getIndexOfChild(node0);
      node3.isEquivalentTo(node2, false, false, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = new Node(29);
      node0.isSyntheticBlock();
      node0.isSyntheticBlock();
      Node node1 = new Node(4, node0, node0);
      node0.isQualifiedName();
      node1.isFor();
      node1.isRegExp();
      node1.isArrayLit();
      node0.isOnlyModifiesArgumentsCall();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString("n", 2, 38);
      node0.isEquivalentToShallow(node2);
      node2.setLength(12);
      node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isFalse();
      node2.mayMutateArguments();
      Node node3 = Node.newString("n", 4220, 40);
      node3.isAssign();
      node0.setSourceEncodedPosition(54);
      node1.isCall();
      node0.isArrayLit();
      node0.isOnlyModifiesArgumentsCall();
      node3.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp((-713));
      Node node1 = new Node(52, node0, node0, node0, 48, 0);
      node1.setVarArgs(true);
      node1.getSourceFileName();
      Node node2 = Node.newNumber((-1.0), (-1490), 55);
      Node node3 = new Node(4194304, node1, node2);
      node3.isQualifiedName();
      node3.removeChildAfter(node2);
      node2.isFor();
      node3.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = new Node(29, 29, 29);
      node0.isAssignAdd();
      node0.isSyntheticBlock();
      Node node1 = new Node(4, node0, node0);
      node0.isQualifiedName();
      node0.isFor();
      node0.isBlock();
      Node node2 = node0.copyInformationFrom(node1);
      node1.getInputId();
      node2.setInputId((InputId) null);
      node1.isOnlyModifiesArgumentsCall();
      node2.addSuppression("reflected_object");
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp(16);
      Node node1 = new Node(44, node0, node0, node0, 86, 49);
      node1.checkTreeEquals(node0);
      Node node2 = Node.newNumber((double) 46);
      node2.getJSDocInfo();
      node1.isEquivalentToTyped(node2);
      node1.srcrefTree(node2);
      node2.getLength();
      Node node3 = new Node((-1736), node1);
      node3.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "pRpCBb35lC-[})A");
      Node node0 = Node.newNumber((-1117.442238929));
      node0.getJSDocInfo();
      node0.isDec();
      Node node1 = node0.srcrefTree(node0);
      node0.getLength();
      node0.isOnlyModifiesThisCall();
      node0.copyInformationFromForTree(node0);
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newNumber((-1117.442238929));
      node0.getJSDocInfo();
      node0.isAdd();
      Node node1 = Node.newNumber(829.298969561, 40, (-1248));
      node1.isEquivalentToTyped(node0);
      Node node2 = node0.srcrefTree(node1);
      node1.getLength();
      node1.isOnlyModifiesThisCall();
      Node node3 = node1.copyInformationFromForTree(node0);
      node3.isSyntheticBlock();
      node1.getIndexOfChild(node0);
      node1.setDouble(0.5);
      node2.hasChild((Node) null);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = Node.newString("6u", (-1724), (-1724));
      node0.detachChildren();
      Node node1 = new Node(42);
      Node node2 = Node.newNumber(339.11, 1, (-2443));
      node2.isSyntheticBlock();
      Node node3 = new Node(415);
      node0.isParamList();
      Node node4 = new Node(55, node1, node3);
      node4.getJSDocInfo();
      Node node5 = Node.newString("6u");
      node4.removeChildren();
      node4.addChildToFront(node5);
      Node node6 = Node.newString(" ,tW");
      Node node7 = new Node(4, node0, node6, node0, node5);
      node3.getSourcePosition();
      node7.isScript();
      node7.removeChildren();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString(1998, "gu 6jCG{X", 2097127, 86);
      node1.isScript();
      node0.isWhile();
      Node node3 = Node.newString("String node not created with Node.newString");
      node1.addChildrenToBack(node3);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node2;
      node1.isEquivalentToTyped(node2);
      Node node4 = node0.srcrefTree(node1);
      node4.getLength();
      node2.isOnlyModifiesThisCall();
      node1.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-1117.442238929));
      Node node1 = new Node(30, node0, node0, node0);
      Node node2 = node1.cloneTree();
      node2.isOptionalArg();
      Node node3 = new Node(353, node1, node0);
      node0.removeFirstChild();
      node1.isQuotedString();
      node3.removeChildren();
      // Undeclared exception!
      try { 
        node3.setDouble(node0.OPT_ARG_NAME);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newString("6", 0, 0);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString("6", 2, 38);
      node0.isEquivalentToShallow(node2);
      node2.setLength(12);
      node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isFalse();
      node2.mayMutateArguments();
      Node node3 = Node.newString("6", 4220, 40);
      node3.isAssign();
      node0.setSourceEncodedPosition(54);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node2.isFor();
      node2.isBlock();
      node1.copyInformationFrom(node0);
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newNumber(775.95377558);
      node0.getJSDocInfo();
      node0.isAdd();
      Node node1 = Node.newNumber((-1117.442238929), 1023, 4799);
      node1.isEquivalentToTyped(node0);
      Node node2 = node1.srcrefTree(node0);
      node2.getLength();
      node0.isOnlyModifiesThisCall();
      Node node3 = node2.copyInformationFromForTree(node0);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      nodeArray0[2] = node3;
      nodeArray0[3] = node1;
      nodeArray0[4] = node3;
      nodeArray0[5] = node3;
      nodeArray0[6] = node3;
      nodeArray0[7] = node1;
      Node node4 = new Node(1089, nodeArray0);
      node3.getIndexOfChild(node4);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString("n", 2, 38);
      node0.isEquivalentToShallow(node2);
      node2.setLength(12);
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isFalse();
      node2.mayMutateArguments();
      Node.newString("n", 4220, 40);
      node0.addChildrenToBack(node3);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = new Node(29);
      node0.isSyntheticBlock();
      node0.isSyntheticBlock();
      Node node1 = Node.newString(",G1v1nEo3M");
      node0.isThrow();
      Node.extractLineno(51);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = Node.newString(",G1v1nEo3M", 52, 43);
      node0.isAssign();
      Node node3 = new Node(40, node0, node2, (-307), 32);
      node3.setSourceEncodedPosition(36);
      node1.isCall();
      node2.isArrayLit();
      node2.isOnlyModifiesArgumentsCall();
      Node node4 = new Node(0, node0, node3);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Object#Key");
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newNumber((-1117.442238929));
      node0.getJSDocInfo();
      node0.isAdd();
      Node node1 = new Node(4, node0, 52, 32);
      node1.isEquivalentToTyped(node0);
      node0.srcrefTree(node1);
      node1.getLength();
      node1.isOnlyModifiesThisCall();
      node1.copyInformationFromForTree(node0);
      node1.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = Node.newNumber(1514.37303047449, 1, 113);
      Node.newNumber(1.0);
      Node node2 = Node.newNumber((-828.025337747322));
      node2.getSourceFileName();
      Node node3 = Node.newString(57, "");
      Node node4 = new Node(8, node2, node2, node3, node3);
      Node node5 = node3.getParent();
      Node node6 = Node.newNumber((-2995.052050118));
      node1.isExprResult();
      node4.isIf();
      node6.siblings();
      node5.isNot();
      node4.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newString("KEMi3:OD#[6#'g\"?e 7", 33, 33);
      Node node1 = Node.newNumber((-1117.442238929), 51, 56);
      Node node2 = new Node(8, node1, node0, node1, node0);
      node0.isFunction();
      node0.detachChildren();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "KEMi3:OD#[6#'g\"?e 7");
      node1.putBooleanProp(31, false);
      Node node3 = Node.newNumber(0.0);
      node3.isFalse();
      node0.mayMutateArguments();
      node2.isAssign();
      node1.useSourceInfoFrom(node0);
      node3.useSourceInfoFrom(node0);
      node2.isOr();
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newString("KEMi3:OD#[6#'g\"?e 7", 33, 33);
      node0.setOptionalArg(true);
      node0.getSourceFileName();
      node0.hasMoreThanOneChild();
      node0.isNew();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = new Node((-30));
      Node node1 = Node.newNumber((-787.4774132852705));
      node0.getJSDocInfo();
      node0.isDec();
      node0.srcrefTree(node1);
      Node node2 = new Node(117, node1, 1677, 36);
      node2.getLength();
      node2.isOnlyModifiesThisCall();
      Node node3 = node1.copyInformationFromForTree(node2);
      node3.putBooleanProp(0, false);
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O%8Tv=N@oo$;I");
      Node node0 = new Node(93, 93, (-4565));
      Node node1 = new Node(93, node0, 55, 40);
      node0.setSourceEncodedPositionForTree(43);
      node1.isEquivalentTo((Node) null, true, true, true);
      int int0 = (-1601);
      node1.getAncestor(int0);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(48, node0, node0, node0, node0, 52, 4095);
      node0.isEquivalentToShallow(node0);
      node1.setLength(12);
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isNull();
      node1.mayMutateArguments();
      node1.getSourceFileName();
      Node.newNumber((double) 8, 4095, 56);
      Node node3 = new Node(115, node1, node0);
      node1.isQualifiedName();
      node2.isFor();
      int int0 = 91;
      node1.getAncestor(int0);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = new Node(61);
      node0.setChangeTime(48);
      node0.isContinue();
      node0.isComma();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node node0 = new Node(0);
      Node node1 = Node.newString("}w.=lEA+9", 51, 57);
      node0.detachChildren();
      Node node2 = Node.newNumber((double) 0, 42, 2817);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.isEquivalentToTyped(node0);
      node1.srcrefTree(node0);
      int int0 = Node.INFERRED_FUNCTION;
      node2.isAssign();
      node0.copyInformationFromForTree(node2);
      node1.addSuppression("Y");
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = new Node((-30));
      Node node1 = Node.newNumber((double) 15);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.isEquivalentToTyped(node1);
      Node node2 = node0.srcrefTree(node1);
      node0.getLength();
      node1.copyInformationFromForTree(node2);
      node1.isOnlyModifiesThisCall();
      Node node3 = node0.copyInformationFromForTree(node2);
      node3.getChildCount();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.children();
      Node node1 = Node.newString("duplicate child", 36, 3041);
      node0.getString();
      Node node2 = new Node(924, node0, node0, 39, 2);
      Node node3 = Node.newString("inferred", 215, 2);
      node2.isEquivalentToShallow(node3);
      Node node4 = node1.useSourceInfoFrom(node3);
      node0.setType(3427);
      node4.isFalse();
      node0.mayMutateArguments();
      node4.getSourceFileName();
      node4.useSourceInfoIfMissingFrom(node0);
      Node node5 = Node.newNumber((double) 57, 239, 2);
      Node node6 = Node.newNumber((double) 48, (-1528), 93);
      Node node7 = new Node(42, node6, node2, node0, node6);
      Node node8 = node3.removeChildAfter(node6);
      node5.addChildrenAfter(node7, node8);
      node2.isGetElem();
      node8.isQualifiedName();
      node5.isContinue();
      node3.getCharno();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = new Node(1289, 1289, 1289);
      node0.getLineno();
      node0.setSourceEncodedPosition((-853));
      Node node1 = new Node(827, node0, node0, node0, node0);
      node0.addChildToFront(node1);
      node0.setDouble((-1024.24544));
      node0.isIn();
      node0.getChangeTime();
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newString(2834, "n");
      Node node1 = new Node(54, node0, 0, 39);
      node1.detachChildren();
      Node node2 = new Node(8192, node0, node0, 41, 126);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.isSetterDef();
      Node node3 = node1.srcrefTree(node2);
      node1.getLength();
      node3.isOnlyModifiesThisCall();
      node2.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = new Node(152);
      node0.setChangeTime((-984));
      node0.children();
      Node node1 = new Node(187);
      node0.isContinue();
      node0.isGetElem();
      node1.isAdd();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString("n", (-30), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setThrows();
      node0.isCast();
      node_SideEffectFlags4.setMutatesThis();
      node0.isReturn();
      node0.getQualifiedName();
      Node node1 = new Node(4095, node0, node0, 3111, 1);
      node0.setSourceEncodedPosition(1146);
      node1.isCall();
      node1.isArrayLit();
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(57, 2, 4);
      Node node3 = new Node((-920), node0, node2);
      node2.siblings();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      node0.detachChildren();
      node0.setVarArgs(false);
      Node node1 = new Node((-1297), node0, node0, node0);
      node0.isEmpty();
      node0.getInputId();
      node0.isFor();
      node0.isBreak();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.isFor();
      node2.getJsDocBuilderForNode();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newString("6", 0, 3093);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString("6", 2, 38);
      node0.isEquivalentToShallow(node2);
      node2.setLength(12);
      node1.setType(32);
      node0.isFalse();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = new Node(3669, node2, node1, 1, 1998);
      node3.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node3.isObjectLit();
      node3.getQualifiedName();
      node2.getBooleanProp(126);
      node2.getProp(0);
      node1.putProp(55, (Object) null);
      node0.isTry();
      node0.isDo();
      node0.isEmpty();
      node0.isName();
      node3.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = new Node(38);
      node0.isAssignAdd();
      node0.isSyntheticBlock();
      Node node1 = new Node(43);
      node1.isQualifiedName();
      node1.isUnscopedQualifiedName();
      node0.isFor();
      node1.isThis();
      Node node2 = node0.copyInformationFrom(node1);
      node2.getInputId();
      node0.setInputId((InputId) null);
      node2.isOnlyModifiesArgumentsCall();
      node2.addSuppression("reflected_object");
      node2.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0);
      Node node1 = Node.newString(54, "}w.=lEA+9");
      node0.detachChildren();
      Node node2 = new Node(46, nodeArray0);
      node1.isFalse();
      node0.mayMutateArguments();
      Node node3 = new Node(51, node2, node1, node2, node0, 1, 56);
      node0.isAssign();
      node3.setSourceEncodedPosition(2);
      node1.isRegExp();
      node1.getInputId();
      Node node4 = Node.newNumber(1721.839399, (-469), 1650);
      node3.addChildAfter(node2, node4);
      node2.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newString(36, "cLm.google.javascript.rhino.Node$AncestorIterable");
      node0.detachChildren();
      node0.setVarArgs(false);
      Node node1 = new Node(12, node0, node0, node0);
      node0.isEmpty();
      node1.getInputId();
      node1.isFor();
      node0.isBreak();
      node0.useSourceInfoFromForTree(node1);
      node1.isCase();
      node0.getJsDocBuilderForNode();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((-2691.9364732384), 36, (-1528));
      Node node2 = new Node(12, node0, node1, 54, (-2477));
      Node node3 = Node.newString("6u", (-911), 40);
      node0.isEquivalentToShallow(node2);
      node3.setLength(122);
      Node node4 = node3.useSourceInfoFrom(node2);
      node0.setType(53);
      node3.addSuppression("`.x5|cI(,yh`j?^!{&");
      node3.isFalse();
      node1.isName();
      node1.isOptionalArg();
      node3.hasOneChild();
      node0.putIntProp(48, 40);
      node4.getInputId();
      node4.setDouble(4095);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = new Node(3041);
      String string0 = "dZN=*kG\"}56#4NB%";
      Node.newString(2, "dZN=*kG\"}56#4NB%", 4095, 4844);
      Node node1 = null;
      node0.addChildAfter((Node) null, (Node) null);
      node0.addChildBefore(node1, node1);
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = Node.newString(547, "");
      node0.isDefaultCase();
      int int0 = 102;
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node(39, nodeArray0);
      node1.setDouble(node0.DECR_FLAG);
      Node node2 = new Node(node0.POST_FLAG, nodeArray0[0], node1, node1.ORIGINALNAME_PROP, node0.FREE_CALL);
      Node node3 = null;
      try {
        node3 = new Node(int0, node1, node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.isOptionalArg();
      node0.getString();
      Node node1 = new Node(57, node0, node0, 12, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.setLineno((-2198));
      node1.detachChildren();
      node0.hasMoreThanOneChild();
      node1.isNew();
      node0.isThrow();
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = Node.newString(36, "cLm.google.javascript.rhino.Node$AncestorIterable");
      node0.detachChildren();
      Node.newNumber((double) 50);
      node0.setVarArgs(false);
      Node node1 = new Node(12, node0, node0, node0);
      node0.isEmpty();
      node1.getInputId();
      node1.isFor();
      node0.isBreak();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node1.isCase();
      node0.getJsDocBuilderForNode();
      node0.isOnlyModifiesThisCall();
      node2.getLastSibling();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(0);
      Node node1 = new Node(4095, 1, 57);
      node0.detachChildren();
      Node node2 = Node.newNumber((double) 0, 42, 2817);
      Node node3 = new Node(46, nodeArray0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node4 = Node.newString("}w.=lEA+9");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.isCast();
      Node.extractLineno(4095);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.newString("}w.=lEA+9", 4095, 57);
      node1.getSourceOffset();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.addChildrenToBack(node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.isCast();
      Node.newString(40, "}w.=lEA+9", 8, 29);
      node4.isBreak();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = new Node(2687, 2687, 524288);
      Node node1 = new Node(86, 8, 2687);
      Node node2 = node0.clonePropsFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("com.google.javascript.rhino.jstype.TernaryValue", "com.google.javascript.rhino.jstype.TernaryValue", 36, 46);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      node0.setJSType(jSType0);
      node0.mayMutateArguments();
      node0.isContinue();
      node0.isNE();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(264);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node1.setSideEffectFlags(node_SideEffectFlags1);
      node2.getSideEffectFlags();
      node2.isSyntheticBlock();
      node2.isInc();
      int int0 = 52;
      node2.getProp(int0);
      node2.getSideEffectFlags();
      // Undeclared exception!
      try { 
        node0.isEmpty();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got ASSIGN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-1117.442238929));
      Node node1 = null;
      node0.isEquivalentToTyped((Node) null);
      Node node2 = node0.srcrefTree(node1);
      // Undeclared exception!
      try { 
        node2.copyInformationFromForTree(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.FunctionType$Kind");
      Node node0 = Node.newString(0, "6u");
      Node node1 = Node.newString(4095, "6u", 51, 2);
      Node node2 = new Node(29);
      node2.isNot();
      Node node3 = new Node(50, node1, node0);
      node0.addChildToFront(node3);
      node2.isGetElem();
      Node node4 = Node.newString((-105), "F',{gw;q");
      node0.isInc();
      Node node5 = Node.newString("6u");
      node0.replaceChild(node4, node5);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Node node0 = Node.newString("KEMi3:OD#[6#'g\"?e 7", 33, 33);
      Node node1 = Node.newNumber((-1117.442238929), 51, 56);
      Node node2 = new Node(8, node1, node0, node1, node0);
      node0.isFunction();
      node0.detachChildren();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "KEMi3:OD#[6#'g\"?e 7");
      Node node3 = Node.newNumber(0.0);
      node3.isFalse();
      node0.getLength();
      node2.isOnlyModifiesThisCall();
      Node node4 = node0.copyInformationFromForTree(node1);
      node2.getIndexOfChild(node1);
      node4.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      Node node1 = new Node((-34));
      node1.setChangeTime(100);
      Node node2 = new Node(1287);
      node0.isContinue();
      node2.isGetElem();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = new Node(21);
      node0.setChangeTime(14);
      node0.isContinue();
      node0.isComma();
      Node node1 = new Node(4, 38, 1107);
      node1.isDefaultCase();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.children();
      Node node1 = Node.newString(16, "DATA_FLOW");
      Node node2 = new Node(132, 2, 44);
      node2.detachChildren();
      Node node3 = Node.newNumber((double) 16, 714, 43);
      node2.isQualifiedName();
      Node node4 = new Node(33, node1, node0, node0, node0);
      node2.isFor();
      node0.cloneNode();
      node1.copyInformationFrom(node3);
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.isOptionalArg();
      node0.getString();
      Node node1 = new Node(57, node0, node0, 12, 1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.setLineno((-2198));
      node1.detachChildren();
      node0.hasMoreThanOneChild();
      Node node2 = new Node(15, node1, node1, node1);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.FunctionType$Kind");
      Node node0 = Node.newString(0, "6u");
      Node node1 = Node.newString(4095, "6u", 51, 2);
      Node node2 = new Node(29);
      node2.isNot();
      Node node3 = new Node(50, node1, node0);
      node0.addChildToFront(node3);
      node2.isGetElem();
      Node.newNumber((double) 56, (-1002), 37);
      node2.isGetElem();
      node3.addChildAfter(node2, node1);
      node2.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = Node.newString("6", 0, 0);
      node0.getString();
      Node node1 = new Node(2439, node0, node0, 12, 1);
      Node node2 = Node.newString("6", 2, 38);
      node0.isEquivalentToShallow(node2);
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isFalse();
      node2.mayMutateArguments();
      Node node4 = Node.newString("6", 4220, 40);
      node4.isAssign();
      node0.setSourceEncodedPosition(54);
      node2.isRegExp();
      node0.isAssign();
      node2.useSourceInfoFrom(node4);
      Node node5 = node1.useSourceInfoFrom(node3);
      node4.isAssign();
      node5.removeChildren();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(38);
      node0.isEmpty();
      node0.isFor();
      node0.isBreak();
      node0.useSourceInfoFromForTree(node0);
      node0.isCase();
      node0.getJsDocBuilderForNode();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(48, node0, node0, node0, node0, 52, 4095);
      Node node2 = Node.newString("n", 2, 38);
      node0.isEquivalentToShallow(node2);
      node2.setLength(12);
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isNull();
      node2.mayMutateArguments();
      Node.newNumber((double) 8, 4095, 51);
      Node node4 = new Node(115, node1, node2);
      node1.isQualifiedName();
      node3.isFor();
      node1.isIn();
      node4.children();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(2387, node0, node0, 12, 1);
      Node node2 = Node.newString(1998, "n", 2097127, 86);
      node1.isScript();
      node0.isWhile();
      Node node3 = new Node(31);
      node1.addChildrenToBack(node3);
      node1.isEquivalentToTyped(node0);
      node0.srcrefTree(node1);
      node2.getDouble();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte)100;
      byteArray0[4] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node0 = new Node(26, 26, 26);
      node0.mayMutateGlobalStateOrThrow();
      InputId inputId0 = new InputId("WQPzQ8r J}&0`>Aw8");
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.isLocalResultCall();
      node0.setString("INHERITED");
      int int0 = (-726);
      Node node1 = new Node(node0.INCRDECR_PROP, node0, int0, int0);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newNumber(775.95377558);
      node0.getStaticSourceFile();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node0.getStaticSourceFile();
      node_AncestorIterable0.iterator();
      node0.isThis();
      node0.wasEmptyNode();
      Node.newString(2725, "F'Fp<,36", 4095, (-310));
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newNumber(690.8);
      node0.getLineno();
      String string0 = "String node not created with Node.newString";
      int int0 = 1544;
      node0.isLocalResultCall();
      Node node1 = node0.detachFromParent();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      node0.setChangeTime((-1765));
      node0.isNumber();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      Node node1 = new Node((-34), node0, node0, node0, node0, (-34), 1081);
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[0] = node0;
      nodeArray0[6] = node0;
      Node node2 = new Node(56, (Node[]) null);
      nodeArray0[7] = node2;
      Node node3 = new Node(node0.COLUMN_BITS, node1, nodeArray0[6], nodeArray0[6]);
      node3.isComma();
      nodeArray0[6].isDefaultCase();
      String string0 = "%6t/(";
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newNumber((-1117.442238929));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isAdd();
      Node node1 = new Node(4, node0, 52, 32);
      node1.isIn();
      Node node2 = node1.srcrefTree(node0);
      node1.removeChild(node2);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp((-713));
      Node node1 = new Node(44, node0, node0, node0, 86, 49);
      node1.checkTreeEquals(node0);
      node0.getProp(54);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = Node.newString("F',{gw;q", 50, 16);
      node1.isAssign();
      Node node3 = new Node(57, node2, node1, 2387, 37);
      node3.setSourceEncodedPosition(714);
      node2.isCall();
      node1.isOnlyModifiesThisCall();
      Node node4 = node3.copyInformationFromForTree(node1);
      node4.getIndexOfChild(node3);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newNumber(2563.9, 33, 33);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~_T8D57o}v8OYvn");
      node0.setVarArgs(true);
      node0.getDirectives();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F',{gw;q");
      node0.setType(33);
      node0.setOptionalArg(true);
      node0.detachChildren();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F',{gw;q");
      node0.children();
      node0.getSourcePosition();
      Node node1 = new Node(135201, node0, node0, node0, node0);
      node1.getInputId();
      node1.setInputId((InputId) null);
      node1.isNoSideEffectsCall();
      node1.setType(113);
      node1.getLength();
      Node node2 = node0.removeChildAfter(node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isIn();
      node1.siblings();
      Node node3 = node0.getNext();
      node3.addChildrenToFront(node0);
      node1.setLineno(node2.REFLECTED_OBJECT);
      node2.getType();
      node0.isCase();
      int int0 = 2296;
      // Undeclared exception!
      try { 
        Node.extractCharno(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node node0 = new Node(0);
      Node node1 = Node.newString(0, "INHERITED", 1, (-848));
      node1.isScript();
      node0.isWhile();
      Node node2 = Node.newString("J*<[}@g?9hTL, {l!");
      node1.addChildrenToBack(node2);
      node1.isEquivalentToTyped(node0);
      node1.srcrefTree(node2);
      node2.setSourceEncodedPosition((-34));
      node0.getLength();
      node2.isOnlyModifiesThisCall();
      node1.isNoSideEffectsCall();
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.children();
      Node node1 = Node.newString(16, "DATA_FLOW");
      Node node2 = new Node(1254, node0, node1, node1);
      node0.isEmpty();
      node0.getInputId();
      node0.isFor();
      node1.isBreak();
      Node node3 = node2.useSourceInfoFromForTree(node1);
      node0.addChildrenAfter(node2, node2);
      node1.isGetElem();
      node1.isQualifiedName();
      node3.isContinue();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      Node node1 = new Node(53, node0, node0, 2, 2);
      node0.isQualifiedName();
      node0.setOptionalArg(false);
      node0.isFor();
      Node node2 = Node.newString(16, "");
      node2.isInstanceOf();
      node1.removeProp(1);
      node1.cloneTree();
      node0.isLabelName();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(48, node0, node0, 12, 1);
      Node node2 = Node.newString(1998, "gu 6jCG{X", 2097127, 86);
      node1.isScript();
      node0.isWhile();
      node2.isGetElem();
      node1.isEquivalentTo(node0, false, false, true);
      node1.isFalse();
      node1.getLastSibling();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node3 = node1.setJSDocInfo(jSDocInfo0);
      node3.isHook();
      node3.isContinue();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newString((-1), "");
      Node node1 = Node.newString((-843), "6u", 1735, (-621));
      Node node2 = new Node(36);
      node2.isNot();
      Node node3 = new Node(155, node2, node0);
      node0.addChildToFront(node1);
      node1.isGetElem();
      Node node4 = Node.newString(12, "6u", 1, 1);
      node3.isEquivalentTo(node4, false, false, true);
      node3.isFalse();
      node3.getLastSibling();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node3.setJSDocInfo(jSDocInfo0);
      Node node5 = new Node(19, 48, (-1376));
      node5.isFunction();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("AwL7:n|zDJUrn,+0");
      node0.getSideEffectFlags();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      Node node1 = new Node(53, node0, node0, 2, 2);
      node0.isQualifiedName();
      Node node2 = new Node(1, 43, 2);
      node0.mayMutateGlobalStateOrThrow();
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$NodeMismatch");
      inputId0.toString();
      node2.getInputId();
      node1.setInputId((InputId) null);
      node0.isLocalResultCall();
      node0.setString("}kiJ{0NofY5e");
      Node node3 = new Node(1073741824, node2, node1, 49, 39);
      Node node4 = new Node(125, node3, 32, (-967));
      node0.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      jSDocInfo0.setNoSideEffects(false);
      Node node0 = jSDocInfo0.getAssociatedNode();
      Node node1 = new Node(4, (Node) null, (Node) null, (Node) null, (Node) null);
      node0.getChildBefore(node1);
      // Undeclared exception!
      try { 
        node0.wasEmptyNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      node0.isAdd();
      Node node1 = Node.newNumber((-1117.4067549686242), 9, 37);
      node0.isEquivalentToTyped(node1);
      Node node2 = node1.srcrefTree(node0);
      node1.getLength();
      node0.isOnlyModifiesThisCall();
      Node node3 = node2.copyInformationFromForTree(node0);
      Node node4 = null;
      node3.addChildBefore((Node) null, (Node) null);
      node0.isFromExterns();
      node3.getIndexOfChild(node2);
      // Undeclared exception!
      try { 
        node3.removeChild(node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(0, "gu 6jCG{X", 353, 2834);
      node0.isScript();
      node0.isWhile();
      node0.isEquivalentTo(node0, true, false, false);
      node0.isFalse();
      Node node1 = node0.getLastSibling();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node0.isHook();
      node2.isEquivalentTo(node1);
      node0.isContinue();
      node1.getExistingIntProp(57);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0);
      Node node1 = Node.newString(54, "}w.=lEA+9");
      node0.detachChildren();
      Node node2 = new Node(46, nodeArray0);
      node1.isLocalResultCall();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isThrow();
      Node.extractLineno(4095);
      node0.isFor();
      node1.isBlock();
      Node node3 = new Node(2544, nodeArray0);
      node3.isAnd();
      node1.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(0);
      Node node1 = new Node(4095, 1, 57);
      node0.detachChildren();
      node0.setChangeTime(29);
      node0.isContinue();
      node1.isComma();
      Node node2 = new Node(40, 56, (-357));
      node0.isDefaultCase();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.children();
      Node node1 = Node.newString(16, "DATA_FLOW");
      Node node2 = new Node(132, 2, 44);
      node2.detachChildren();
      Node node3 = Node.newNumber((double) 16, 714, 43);
      node2.isQualifiedName();
      Node node4 = new Node(38, node1, node0, node0, node0);
      node2.isFor();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node3.copyInformationFrom(node0);
      node2.setJSDocInfo(jSDocInfo0);
      node4.isFunction();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newNumber((-1117.442238929));
      node0.getJSDocInfo();
      Node node1 = Node.newNumber((double) 52);
      node0.addChildToFront(node1);
      node0.isEquivalentToTyped(node0);
      Node node2 = node0.srcrefTree(node0);
      node0.getLength();
      node0.isOnlyModifiesThisCall();
      Node node3 = new Node(57, node2, node2, node2, node0);
      Node.newNumber((double) 36);
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = new Node(124, 949, (-881));
      Node node1 = new Node(1107, node0, node0);
      node0.checkTreeEqualsImpl(node1);
      node1.getIntProp(38);
      node1.removeFirstChild();
      node0.isWhile();
      Node node2 = node1.copyInformationFromForTree(node0);
      node0.getNext();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node2.isVoid();
      node1.children();
      node2.isAdd();
      node1.addChildToFront(node0);
      node0.getBooleanProp(110);
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(48, node0, node0, node0, node0, 52, 4095);
      Node node2 = Node.newString("n", 2, 38);
      node2.isDelProp();
      node2.setLength(12);
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isNull();
      node0.setLength(42);
      node0.useSourceInfoFrom(node2);
      node1.setType(99);
      node2.isFalse();
      Node node4 = new Node(1, node3, node3);
      Node node5 = node4.srcrefTree(node3);
      node4.isNew();
      node5.isThrow();
      node3.isNumber();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      String string0 = "rqjzbf9UNMr(u,";
      Node node0 = Node.newString((-867), "rqjzbf9UNMr(u,");
      node0.isUnscopedQualifiedName();
      Node node1 = node0.getChildAtIndex(854);
      node1.removeProp(node0.INFERRED_FUNCTION);
      int int0 = 119;
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newString("=S#sjOzdisUV=<x");
      node0.getIntProp((-713));
      Node node1 = new Node(44, node0, node0, node0, 86, 49);
      node1.checkTreeEquals(node0);
      node0.getProp(61);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node1.isOnlyModifiesArgumentsCall();
      node0.addSuppression("7st");
      Node node2 = node1.clonePropsFrom(node0);
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0);
      Node node1 = Node.newString("}w.=lEA+9", 51, 57);
      node0.detachChildren();
      Node node2 = Node.newNumber((double) 0, 42, 2817);
      Node node3 = new Node(46, nodeArray0);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      Node.newString("}w.=lEA+9");
      node2.isCast();
      Node.extractLineno(4095);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node4 = Node.newString("}w.=lEA+9", 4095, 57);
      node1.addChildrenToBack(node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      JSTypeNative jSTypeNative0 = JSTypeNative.SYNTAX_ERROR_FUNCTION_TYPE;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      functionType0.hasAnyTemplateTypes();
      jSTypeRegistry0.createEnumType("}w.=lEA+9", node4, functionType0);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
      node4.getLength();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = new Node(38);
      node0.isAssignAdd();
      node0.isSyntheticBlock();
      node0.isAnd();
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.isOptionalArg();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = Node.newString("6u", (-1724), (-1724));
      node0.detachChildren();
      Node node1 = new Node(42);
      Node node2 = Node.newNumber(339.11, 1, (-2443));
      node2.isSyntheticBlock();
      Node node3 = new Node(415);
      node0.isParamList();
      Node node4 = new Node(55, node1, node3);
      node1.srcrefTree(node4);
      node0.removeChild(node4);
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0);
      String string0 = "}w.=lEA+9";
      Node node1 = Node.newString("$VALUES", 39, 43);
      node1.detachChildren();
      Node node2 = Node.newNumber((double) 53, 148, 1);
      Node node3 = new Node(131, nodeArray0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node4 = Node.newString("}w.=lEA+9");
      node3.isCast();
      Node.extractLineno((-737));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node5 = Node.newString("}w.=lEA+9", 126, (-679));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ObjectType objectType0 = FunctionType.getTopDefiningInterface((ObjectType) null, "}w.=lEA+9");
      TemplatizedType templatizedType0 = JSType.toMaybeTemplatizedType((JSType) objectType0);
      TemplateTypeMap templateTypeMap0 = templatizedType0.getTemplateTypeMap();
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, templateTypeMap0);
      JSType jSType0 = templateTypeMapReplacer0.caseNumberType();
      node5.putProp(node2.FLAG_GLOBAL_STATE_UNMODIFIED, jSType0);
      node2.addChildrenToBack(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node4.isNoSideEffectsCall();
      int int0 = 101;
      int int1 = 40;
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((double) 4095);
      Node node2 = new Node(38, 43, 0);
      node2.isEquivalentToTyped(node0);
      Node node3 = node0.srcrefTree(node2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6u");
      Node.newString("");
      node1.srcrefTree(node0);
      node3.isNew();
      node3.isThrow();
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = Node.newString(36, "cLm.google.javascript.rhino.Node$AncestorIterable");
      node0.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString("cLm.google.javascript.rhino.Node$AncestorIterable", 33, 2);
      node1.setOptionalArg(true);
      Node node2 = Node.newNumber((double) 55);
      node2.setChangeTime(50);
      Node node3 = new Node(36, node0, 29, 51);
      node0.isEquivalentTo(node3);
      node1.getJsDocBuilderForNode();
      node1.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.setType(55);
      node3.isInc();
      node1.isVoid();
      Node node4 = node1.detachFromParent();
      Node node5 = node2.srcref(node3);
      node0.removeChild(node5);
      node4.getLineno();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = Node.newString(2834, "n");
      Node node1 = new Node(54, node0, 0, 39);
      node1.detachChildren();
      Node node2 = new Node(8192, node0, node0, 41, 126);
      node1.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-160));
      node_SideEffectFlags0.setAllFlags();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isExprResult();
      Node node3 = new Node(8, node1, node0, (-2661), 51);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newString((-1724), "6u");
      node0.detachChildren();
      Node node1 = Node.newNumber((-2691.9364732384), 36, (-1528));
      Node node2 = new Node(12, node0, node1, 54, (-2477));
      Node node3 = Node.newString("6u", (-911), 40);
      node0.isEquivalentToShallow(node2);
      node3.setLength(122);
      Node node4 = node3.useSourceInfoFrom(node2);
      node0.getSourceFileName();
      node0.addChildrenToFront(node4);
      Node node5 = node0.getParent();
      node5.checkTreeTypeAwareEqualsImpl(node4);
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)27;
      byteArray0[2] = (byte)0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      HashSet<String> hashSet0 = new HashSet<String>();
      node1.setDirectives(hashSet0);
      node4.isObjectLit();
      Node.newString("6u");
      node3.getSideEffectFlags();
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString("boolean", 110, (-1788));
      node0.setSourceEncodedPositionForTree(110);
      Node node1 = new Node(110, node0, node0);
      node1.isNoSideEffectsCall();
      Node node2 = new Node(110, node1, 16, 8);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node3 = node2.useSourceInfoFrom(node1);
      node3.getJsDocBuilderForNode();
      Node node4 = node1.cloneNode();
      node4.setVarArgs(true);
      node2.isAssign();
      node3.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newString("7p9w]", 39, (-438));
      Node node1 = new Node((-438), node0, node0, node0, node0);
      node1.siblings();
      node0.getAncestors();
      node1.getChildCount();
      node1.isOr();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      Node node1 = new Node(8);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isComma();
      Node node3 = node1.useSourceInfoFrom(node2);
      node1.getSourceFileName();
      node2.addChildrenToFront(node0);
      node1.getParent();
      node1.checkTreeTypeAwareEqualsImpl(node3);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte)27;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)27;
      byteArray0[4] = (byte)52;
      byteArray0[5] = (byte)52;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isExprResult();
      Node node4 = new Node((-2050), node0, node2, 39, 12);
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      Node node1 = new Node(8);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isComma();
      Node.newNumber(1.2);
      Node node3 = new Node(2, node1, node1, node0);
      Node node4 = node3.cloneTree();
      node3.copyInformationFromForTree(node4);
      node2.isOptionalArg();
      Node.newNumber((-1944.1504053478636), 0, 887);
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = new Node(564, 564, 564);
      Node node1 = new Node((-202), node0, node0, 57, 43);
      node1.isAssignAdd();
      Node node2 = Node.newString(31, "", 853, (-1088));
      node2.isSyntheticBlock();
      node1.isAnd();
      node2.isUnscopedQualifiedName();
      node0.isCast();
      node0.isFor();
      node1.isThis();
      node1.replaceChildAfter(node0, node0);
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newString("n", (-30), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node0.setType(114);
      node0.isNull();
      node0.mayMutateArguments();
      Node node1 = Node.newNumber((double) 4095, 43, 15);
      Node node2 = new Node(50, node0, node1);
      node1.isQualifiedName();
      node0.isFor();
      node0.isIn();
      Node.newNumber((double) 2);
      Iterable<Node> iterable0 = new LinkedHashSet<Node>(4095);
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((-1117.4067549686242));
      node0.isEquivalentToTyped(node0);
      Node node1 = node0.srcrefTree(node0);
      Node node2 = Node.newString(3440, "gu 6jCG{X", 56, (-2170));
      node2.isScript();
      node0.isWhile();
      node2.isGetElem();
      node2.isEquivalentTo(node1, true, true, false);
      node0.isFalse();
      Node node3 = node2.getLastSibling();
      node3.isOnlyModifiesArgumentsCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.isAnd();
      Node node4 = Node.newString(26, ".#GJ=``WGw>T~");
      node4.isGetProp();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(50, node0, 38, 57);
      node1.isContinue();
      Node.newNumber((double) 38, 32, 1048576);
      Node node2 = new Node((-1360));
      Node node3 = new Node((-1187), node2, node2, node1, node2);
      node1.isEquivalentTo(node3, true, true, true);
      node2.isFalse();
      node2.getLastSibling();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.isAnd();
      Node.newString(43, "m_<d1Yj$Z");
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(48, node0, node0, 12, 1);
      Node node2 = Node.newString(50, "gu 6jCG{X", 2097127, 86);
      node1.isScript();
      node0.isWhile();
      node0.isSyntheticBlock();
      Node node3 = new Node(39);
      node2.isParamList();
      Node node4 = node3.srcrefTree(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType[] jSTypeArray0 = new JSType[0];
      node1.cloneNode();
      node4.isEquivalentTo(node3, true, false, false);
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(4095, node0, node0, node0);
      Node node2 = Node.newString(50, "gu 6jCG{X", 2097127, 86);
      node1.isScript();
      node2.isCast();
      node0.isSyntheticBlock();
      Node node3 = new Node(39);
      node2.isParamList();
      Node node4 = node3.srcrefTree(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType[] jSTypeArray0 = new JSType[0];
      node1.cloneNode();
      node4.isEquivalentTo(node3, true, true, false);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = new Node(2687, 2687, 524288);
      Node node1 = new Node(86, 8, 2687);
      Node node2 = node0.clonePropsFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("com.google.javascript.rhino.jstype.TernaryValue", "com.google.javascript.rhino.jstype.TernaryValue", 36, 46);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      node0.setJSType(jSType0);
      node0.mayMutateArguments();
      node0.isContinue();
      node0.isNE();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(264);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node2.getSideEffectFlags();
      node2.isSyntheticBlock();
      node2.isInc();
      node2.getProp(52);
      node2.getSideEffectFlags();
      node0.isEmpty();
      node0.setSideEffectFlags(node_SideEffectFlags0);
      node1.isDec();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.getJsDocBuilderForNode();
      node0.isAssignAdd();
      Node node1 = Node.newString("", 30, 40);
      node1.isVar();
      node1.setSourceEncodedPosition(16);
      node1.isRegExp();
      Node node2 = new Node(38, node0, node0);
      node0.siblings();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(54, node0, node0, 12, 1);
      Node node2 = Node.newString("n", 2, 38);
      node0.isEquivalentToShallow(node2);
      Node node3 = node2.useSourceInfoFrom(node0);
      node1.setType(32);
      node0.isFalse();
      node2.mayMutateArguments();
      node1.getSourceFileName();
      Node node4 = Node.newNumber((double) 8, 4095, 56);
      Node node5 = new Node(49, node1, node3, node4, node1);
      node5.removeChildAfter(node3);
      node4.isCatch();
      node1.hasChild(node5);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node6 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.addChildAfter(node5, node6);
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newString("n", (-30), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node0.isCast();
      node0.isReturn();
      node0.addSuppression("Ip3w");
      node0.isFalse();
      node0.isName();
      node0.isOptionalArg();
      node0.hasOneChild();
      node0.putIntProp(114, (-911));
      node0.getInputId();
      node0.setDouble((-30));
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = new Node(33);
      node0.setOptionalArg(true);
      node0.setChangeTime(414);
      Node node1 = new Node(46, node0, (-646), 15);
      node0.isEquivalentTo(node1);
      node0.getJsDocBuilderForNode();
      node1.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.setType(57);
      node1.isInc();
      node0.isVoid();
      Node node2 = node0.detachFromParent();
      node2.srcref(node0);
      node1.removeChild(node2);
      node1.isLabelName();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-1117.442238929));
      Node node1 = new Node((-103), node0, node0, node0);
      node0.isNew();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1731));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node0.isObjectLit();
      Node node2 = Node.newNumber((double) 36, 8, 57);
      InputId inputId0 = new InputId("WQPzQ8r J}&0`>Aw8");
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.isLocalResultCall();
      Node node3 = new Node(40);
      node3.setString("is_constant_name");
      int int0 = (-705);
      int int1 = (-793);
      Node node4 = new Node(int0, node2, int1, node2.REFLECTED_OBJECT);
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1207);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node0.isCast();
      node0.isReturn();
      node0.getQualifiedName();
      node0.isLabel();
      node0.isObjectLit();
      node0.isName();
      node0.isAnd();
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = new Node(40);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isQualifiedName();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte) (-34);
      byteArray0[3] = (byte) (-54);
      byteArray0[4] = (byte)113;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      node0.getBooleanProp(13);
      node0.isFunction();
      node0.isObjectLit();
      Node node1 = Node.newString("valueOf");
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newString("", 1896, (-202));
      node0.getString();
      Node node1 = new Node(50, 8, 1390);
      Node node2 = new Node(132, node1, node0, (-1785), 39);
      Node.newString(47, "gu 6jCG{X", 306654252, (-279));
      node2.isScript();
      node2.isWhile();
      node2.isGetElem();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, node0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) null, node2);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType1, (JSType) functionType0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isVoid();
      node1.getLastSibling();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node4 = node3.setJSDocInfo(jSDocInfo0);
      node4.isHook();
      Node node5 = new Node(110, node3, node1, node0);
      node5.isContinue();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newNumber(2489.4, 1, 119);
      Node node1 = new Node(1, node0, node0);
      node1.useSourceInfoFromForTree(node0);
      Node node2 = new Node(2378, node1, 56, 50);
      node0.wasEmptyNode();
      node2.toString();
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      boolean boolean1 = true;
      boolean boolean2 = true;
      FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean1, boolean2);
      // Undeclared exception!
      try { 
        node1.getParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2378
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getString();
      Node node1 = new Node(48, node0, node0, 12, 1);
      Node node2 = Node.newString(1998, "gu 6jCG{X", 2097127, 86);
      node1.isScript();
      node1.isCase();
      node2.isGetElem();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.srcrefTree(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      node1.isOnlyModifiesArgumentsCall();
      node2.addSuppression((String) null);
      node1.clonePropsFrom(node0);
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = Node.newString("KEMi3:OD#[6#'g\"?e 7", 33, 33);
      node0.setChangeTime(414);
      Node node1 = new Node(37);
      node1.isNot();
      node1.hasChildren();
      node1.getJSDocInfo();
      node1.isGetElem();
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node1.setSideEffectFlags(node_SideEffectFlags0);
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = new Node(38);
      node0.isSyntheticBlock();
      Locale locale0 = Locale.forLanguageTag("Jsc/iJtM/uw${");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      node0.setDirectives(set0);
      node0.isUnscopedQualifiedName();
      node0.isOptionalArg();
      // Undeclared exception!
      try { 
        node0.isFor();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME [directives: com.google.javascript.rhino.Node$ObjectPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.isOptionalArg();
      Node node1 = Node.newString(39, "INHERITED");
      node0.hasChildren();
      node0.copyInformationFrom(node1);
      node0.getDirectives();
      node0.isGetElem();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.setOptionalArg(true);
      node0.isSyntheticBlock();
      Node node1 = new Node(3966);
      node0.isParamList();
      Node node2 = node1.srcrefTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.cloneNode();
      node2.isEquivalentTo(node0, false, false, false);
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      Node node1 = Node.newString(36, "duplicate child");
      Node node2 = new Node(2, 609, 8);
      node2.detachChildren();
      node2.isQualifiedName();
      Node node3 = new Node(56, 29, 37);
      node3.replaceChildAfter((Node) null, (Node) null);
      node0.toString();
      node1.isName();
      double double0 = 0.0;
      Node node4 = Node.newNumber(double0);
      // Undeclared exception!
      try { 
        node4.isAnd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.getJsDocBuilderForNode();
      node0.isAssignAdd();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.removeProp(2200);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry2);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      node0.setJSType(jSType0);
      node0.mayMutateArguments();
      node0.isContinue();
      node0.isNE();
      Node node1 = new Node(43, node0, node0);
      node1.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node0.isAnd();
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.isBlock();
      Node node2 = new Node(52, node0, node1, node0, node1);
      node1.copyInformationFrom(node2);
      // Undeclared exception!
      try { 
        node2.isOnlyModifiesArgumentsCall();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.setOptionalArg(true);
      node0.setChangeTime((-454));
      Node node1 = new Node(130);
      node1.isContinue();
      node1.isIf();
      node1.isGetElem();
      Node node2 = Node.newString(49, "F',{gw;q");
      node2.isIf();
      node1.isOr();
      node1.useSourceInfoIfMissingFromForTree(node2);
      node2.getString();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      String string0 = "duplicate child";
      Node node0 = Node.newString("duplicate child");
      Node node1 = new Node(50, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isComma();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.useSourceInfoFrom(node2);
      node1.getSourceFileName();
      node2.addChildrenToFront(node0);
      // Undeclared exception!
      try { 
        node2.getParent();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("com.google.javascript.rhino.jstype.TernaryValue", "}J}(>mwI", 0, 2);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.removeProp(0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      Node node1 = new Node((-476), node0, node0, node0, 52, (-752));
      node1.setJSType(jSType0);
      node0.mayMutateArguments();
      Node node2 = new Node(102, node1, node1);
      node2.isContinue();
      node1.isNE();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(54);
      node0.isAnd();
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node2.isBlock();
      node1.cloneTree();
      node1.copyInformationFrom(node0);
      node2.isOnlyModifiesArgumentsCall();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(50, node0, 38, 57);
      node1.isContinue();
      Node.newNumber((double) 38, 32, 1048576);
      Node node2 = new Node((-1360));
      Node node3 = new Node((-1187), node2, node2, node1, node2);
      node1.isEquivalentTo(node3, true, true, true);
      node2.isFalse();
      node2.getLastSibling();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isAnd();
      Node.newString(43, "m_<d1Yj$Z");
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.getIntProp((-713));
      Node node1 = new Node(77, node0, node0, node0, 48, 0);
      node1.removeChild(node0);
      node1.setVarArgs(false);
      node0.isFalse();
      Node node2 = node1.getLastSibling();
      node2.isEquivalentTo(node1, false, false, false);
      Node.newString(47, "VMRVna\"XQ8<@Rp");
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(50, node0, 38, 57);
      node1.isContinue();
      Node node2 = Node.newNumber((double) 38, 32, 1048576);
      Node node3 = new Node((-1360));
      Node node4 = new Node(50, node3, node3, node1, node3);
      node1.isEquivalentTo(node4, true, true, true);
      node3.getSourceFileName();
      node1.isContinue();
      node2.isTry();
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.getIntProp((-713));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("duplicate child", "duplicate child", 2338, 32);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.removeProp((-713));
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      node0.setJSType(jSType0);
      node0.mayMutateArguments();
      node0.isContinue();
      node0.isNE();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      node0.isAnd();
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.isBlock();
      Node node1 = node0.copyInformationFrom((Node) null);
      node1.isOnlyModifiesArgumentsCall();
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = Node.newNumber(837.9591);
      node0.isBlock();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("    ");
      node_FileLevelJsDocBuilder0.append("S\"2vXotoE3WyK@D");
      node0.isWhile();
      node0.putBooleanProp((-2145563520), false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getProp((-2145563520));
      Node node1 = Node.newString("S\"2vXotoE3WyK@D", 1048576, 124);
      Node node2 = Node.newString(37, "    ", 47, 30);
      node1.addSuppression("S\"2vXotoE3WyK@D");
      node0.isEquivalentTo(node1);
      node0.isContinue();
      node2.srcrefTree(node0);
      Node node3 = Node.newString("B|G4W?b1", 36, 52);
      node2.addChildToFront(node3);
      node0.mayMutateArguments();
      node1.getSourceOffset();
      Node.newString(51, "    ");
      node2.getNext();
      node3.toStringTree();
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newString("n", (-30), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = new Node(117, node0, node0, node0, 48, 16);
      node1.removeChild(node0);
      node1.setVarArgs(false);
      Node node2 = new Node(2687);
      node2.getSourceFileName();
      node2.isContinue();
      node1.isTry();
      node2.isDebugger();
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = new Node(2687, 2687, 524288);
      Node node1 = new Node(86, 8, 2687);
      Node node2 = node0.clonePropsFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("com.google.javascript.rhino.jstype.TernaryValue", "com.google.javascript.rhino.jstype.TernaryValue", 36, 46);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node2.removeProp(2200);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      node0.setJSType(jSType0);
      node0.isContinue();
      node0.isNE();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(264);
      node1.isAnd();
      node1.isUnscopedQualifiedName();
      node0.isRegExp();
      node1.clonePropsFrom(node2);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = new Node(154);
      node0.isAssignAdd();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.removeProp(154);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry((ErrorReporter) null, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      node0.setJSType(jSType0);
      node0.mayMutateArguments();
      node0.isContinue();
      node0.isNE();
      Node node1 = new Node(39, node0, node0);
      node1.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node1.isAnd();
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.isBlock();
      node1.copyInformationFrom(node1);
      node0.isOnlyModifiesArgumentsCall();
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = new Node(2834);
      Node node1 = new Node(54, node0, 0, 39);
      node1.detachChildren();
      Node node2 = new Node(8192, node0, node0, 47, 126);
      node1.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-160));
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isObjectLit();
      node2.removeChild((Node) null);
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newString("F',{gw;q", (-197), 0);
      node0.getString();
      Node node1 = Node.newString("INHERITED", 52, 35);
      node0.isEquivalentToShallow(node1);
      node0.setLength(2934);
      int int0 = Node.IS_CONSTANT_NAME;
      node0.isCall();
      node0.isArrayLit();
      node0.isOnlyModifiesArgumentsCall();
      node1.getIntProp(64);
      Node node2 = Node.newString("INHRITED", 1, (-874));
      Node node3 = new Node(12, node0, node2);
      node3.useSourceInfoIfMissingFromForTree(node1);
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.setOptionalArg(true);
      node0.setChangeTime((-454));
      node0.isCast();
      node0.isReturn();
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.isAnd();
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = new Node(564, 564, 564);
      Node node1 = new Node((-202), node0, node0, 57, 43);
      node1.isAssignAdd();
      Node node2 = Node.newString(31, "", 853, (-1088));
      node2.isSyntheticBlock();
      Node node3 = new Node(154);
      node1.isParamList();
      node3.srcrefTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node4 = node2.cloneNode();
      node2.isEquivalentTo(node4, true, true, true);
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.getJsDocBuilderForNode();
      node0.isAssignAdd();
      Node node1 = Node.newString("", 30, 40);
      node0.isAssign();
      node1.isRegExp();
      Node.newString("Object#Key", 83, (-622));
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = Node.newString("n", 2, 38);
      node0.isEquivalentToShallow(node2);
      node1.setType(32);
      node2.isBreak();
      node1.addChildrenAfter(node2, node0);
      node0.isGetElem();
      Node node3 = new Node(43, node1, 5438, 608);
      node0.isAnd();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = Node.newString("KEMi3:OD#[6#'g\"?e 7", 33, 33);
      node0.setChangeTime(31);
      Node node1 = new Node(37);
      node1.isNot();
      Node node2 = node1.copyInformationFrom(node0);
      Node node3 = node2.getLastSibling();
      node2.isOptionalArg();
      node3.isExprResult();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node4 = new Node(16, nodeArray0);
      node4.hasChild(node1);
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.isQualifiedName();
      Node node1 = new Node(126, (-1283), 29);
      Node node2 = new Node(55, node0, node0, node0, node1);
      node2.mayMutateGlobalStateOrThrow();
      node1.isEmpty();
      Node node3 = Node.newString(44, "23I7qK:)B{W$", 0, 2);
      node0.isScript();
      Node node4 = Node.newString("6u");
      node0.addChildrenToBack(node4);
      node1.setOptionalArg(true);
      node3.isEquivalentToTyped(node1);
      node1.cloneNode();
      node4.isEquivalentTo(node3, false, false, false);
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = Node.newString(46, "}w.=lEA+9");
      Node[] nodeArray0 = new Node[2];
      Node node2 = Node.newString(50, "TLd)E=Hq'ki`nX@");
      nodeArray0[0] = node2;
      nodeArray0[1] = node1;
      Node node3 = new Node(379, nodeArray0);
      node1.isThrow();
      Node.extractLineno(3308);
      Node node4 = node0.srcrefTree(node1);
      node2.removeChild(node4);
      nodeArray0[0].getIndexOfChild(node2);
      node2.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newString("KEMi3:OD#[6#'g\"?e 7", 33, 33);
      node0.setChangeTime(31);
      Node node1 = new Node(37);
      node1.isNot();
      Node node2 = new Node((-2286), node0, node0, node0);
      node1.useSourceInfoFromForTree(node2);
      node1.hasChildren();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newString(36, "cLm.google.javascript.rhino.Node$AncestorIterable");
      node0.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node0.setType(13);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node1.isNull();
      node0.isContinue();
      node1.isNE();
      node1.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(1741);
      node0.isAnd();
      Node node2 = Node.newString(32, "duplicate child", 103, 2742);
      node2.isUnscopedQualifiedName();
      node0.isCast();
      node0.isBlock();
      Node node3 = node2.cloneTree();
      Node node4 = node1.copyInformationFrom(node3);
      node4.isOnlyModifiesArgumentsCall();
      node1.isGetProp();
      node3.getString();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = new Node(154);
      node0.isAssignAdd();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.removeProp(154);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry((ErrorReporter) null, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      node0.setJSType(jSType0);
      node0.mayMutateArguments();
      node0.isContinue();
      node0.isNE();
      Node node1 = new Node(39, node0, node0);
      node1.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node1.isAnd();
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.isBlock();
      node1.copyInformationFrom(node1);
      node0.isOnlyModifiesArgumentsCall();
      Node.newNumber((double) 53);
      node0.addSuppression("{s>/3A=0");
      node0.setString("INHERITED");
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      node0.isSyntheticBlock();
      node0.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.newString(108, ": ");
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = new Node(29);
      node0.isTry();
      node0.setLineno((-434));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isCast();
      node_SideEffectFlags0.setMutatesThis();
      node0.getQualifiedName();
      node0.getBooleanProp(29);
      Object object0 = new Object();
      InputId inputId0 = new InputId((String) null);
      node0.setInputId(inputId0);
      Node node1 = new Node(40, 2, 52);
      node1.isGetElem();
      node0.isAdd();
      node1.getString();
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(50, node0, 38, 57);
      node1.isContinue();
      Node.newNumber((double) 38, 32, 1048576);
      Node node2 = new Node((-1360));
      Node node3 = new Node(50, node2, node2, node1, node2);
      node1.isEquivalentTo(node3, true, true, true);
      node2.getSourceFileName();
      node3.addSuppression((String) null);
      node0.clonePropsFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseAllType();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, true, jSTypeArray0);
      FunctionType functionType1 = JSType.toMaybeFunctionType((JSType) functionType0);
      jSTypeArray0[0] = (JSType) functionType1;
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) functionType0, jSTypeArray0);
      jSTypeArray0[1] = (JSType) templatizedType0;
      Node node4 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node4.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      linkedList0.iterator();
      Node node0 = Node.newString(38, "e6oFvl+!dm");
      node0.isUnscopedQualifiedName();
      node0.isFor();
      node0.isThis();
      Node node1 = Node.newString(31, "Object#Key");
      node1.isInc();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newNumber(740.2425455741218);
      node0.isContinue();
      Node node1 = Node.newNumber(620.7576182257692, 44, 111);
      InputId inputId0 = new InputId("F',{gw;q");
      inputId0.toString();
      node1.setInputId(inputId0);
      Node node2 = new Node(85, 0, 43);
      node1.isGetElem();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Iterator<EnumType> iterator0 = (Iterator<EnumType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Iterator<Node> iterator1 = linkedList0.iterator();
      ImmutableList.copyOf((Iterator<? extends Node>) iterator1);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node3.isDebugger();
      int int0 = 65536;
      node0.putIntProp(8, 65536);
      node1.getInputId();
      Node node4 = Node.newString((String) null, 8, 117);
      node4.setDouble(int0);
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "index");
      Node node0 = Node.newString("duplicate child");
      node0.isNull();
      node0.mayMutateArguments();
      node0.getSourceFileName();
      Node node1 = Node.newNumber((double) 54, 47, 1);
      Node node2 = new Node(2, node0, node1, node1, node1);
      node1.isQualifiedName();
      node0.addChildrenToBack(node2);
      node1.isFor();
      node0.getAncestor(122);
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      linkedList0.iterator();
      Node node0 = Node.newString(92, "Object#Key", 31, 4);
      node0.isScript();
      node0.isCase();
      node0.isGetElem();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isOnlyModifiesArgumentsCall();
      node0.addSuppression("Object#Key");
      Node node2 = node1.clonePropsFrom(node0);
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      Node node1 = new Node(125, node0, node0, 557, 4);
      node0.isQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = node1.cloneNode();
      node0.isEquivalentTo(node2, true, false, true);
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString(2834, "n");
      Node node1 = new Node(54, node0, 0, 39);
      node1.detachChildren();
      Node node2 = new Node(8192, node0, node0, 41, 126);
      Node node3 = Node.newString("o)@}oN");
      node2.isName();
      node0.isGetterDef();
      node0.isTry();
      Node node4 = Node.newNumber((-193.7567));
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node3;
      nodeArray0[1] = node4;
      nodeArray0[2] = node2;
      nodeArray0[3] = node2;
      nodeArray0[4] = node0;
      Node node5 = new Node((-614), node4);
      nodeArray0[5] = node5;
      nodeArray0[6] = node4;
      Node node6 = new Node(33, nodeArray0, 849, 2887);
      Node node7 = new Node(node0.EMPTY_BLOCK, node6, nodeArray0[1]);
      Node node8 = new Node(node0.DECR_FLAG, node2, node4, node7, nodeArray0[2]);
      node8.isAnd();
      node3.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getJsDocBuilderForNode();
      node0.toString();
      node0.isGetElem();
      node0.setType(86);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isVoid();
      node0.isAnd();
      node0.isAssign();
      node0.isRegExp();
      node0.setSideEffectFlags(0);
      Node node1 = Node.newNumber((double) node0.SIDE_EFFECTS_ALL);
      node1.replaceChildAfter(node0, node0);
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isVoid();
      node0.isOnlyModifiesThisCall();
      node0.getStaticSourceFile();
      node0.isFor();
      Node.mergeLineCharNo(64, 46);
      node0.isOnlyModifiesThisCall();
      node0.isParamList();
      Node.newNumber(3090.839303942);
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.getJsDocBuilderForNode();
      node0.isAssignAdd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(125);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags4.setReturnsTainted();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(49, nodeArray0, (-2501), 51);
      Node node2 = Node.newString(")vCGMBiVcp lQ");
      node2.addChildrenToBack(node1);
      node2.setOptionalArg(true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isEquivalentToTyped(node3);
      node3.cloneNode();
      node3.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.isQualifiedName();
      Node node1 = new Node(126, (-1283), 29);
      Node node2 = new Node(55, node0, node0, node0, node1);
      node2.mayMutateGlobalStateOrThrow();
      node1.isEmpty();
      Node node3 = Node.newString(44, "23I7qK:)B{W$", 0, 2);
      node0.isScript();
      node0.isUnscopedQualifiedName();
      int int0 = Node.FLAG_NO_THROWS;
      Node.newNumber(0.0);
      node3.isLocalResultCall();
      node1.isWith();
      Node node4 = new Node(30, 32, 51);
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(38);
      node0.isAssignAdd();
      node0.isSyntheticBlock();
      Node node1 = new Node(43);
      Node node2 = Node.newString(387, "Node tree inequality:\nTree1:\n", (-2386), 46);
      node0.isScript();
      node0.isCast();
      node1.isSyntheticBlock();
      Node node3 = new Node(1268);
      node2.isParamList();
      node0.srcrefTree(node3);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.cloneNode();
      node1.isEquivalentTo(node2, false, true, true);
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node0 = Node.newString(806, "", 10, (-680));
      node0.addSuppression("lL5Z8 N&v=25 &h");
      Node node1 = new Node(93, node0, node0, 36, 562);
      Node node2 = new Node(148, node1, node1, node1, 16, (-286));
      Node node3 = node2.srcrefTree(node1);
      node2.getLength();
      node3.isOnlyModifiesThisCall();
      node2.setString((String) null);
      double double0 = (-1117.442238929);
      Node node4 = Node.newNumber(double0);
      node1.isAnd();
      node4.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = new Node(154);
      node0.isAssignAdd();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.removeProp(154);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry((ErrorReporter) null, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      node0.setJSType(jSType0);
      node0.mayMutateArguments();
      node0.isContinue();
      node0.isNE();
      Node node1 = new Node(39, node0, node0);
      node1.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node1.isAnd();
      node0.isUnscopedQualifiedName();
      node0.useSourceInfoFrom(node1);
      node0.isCast();
      node0.isBlock();
      node1.copyInformationFrom(node1);
      node0.isOnlyModifiesArgumentsCall();
      Node.newNumber((double) 53);
      node0.addSuppression("{s>/3A=0");
      node0.setString("INHERITED");
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newString(0, "6u");
      node0.detachChildren();
      Node node1 = new Node(53, node0, node0, 2, 2);
      node1.setLength(54);
      node1.addChildBefore(node0, node0);
      node0.isQualifiedName();
      node0.isFor();
      // Undeclared exception!
      try { 
        node0.getJsDocBuilderForNode();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      Node node1 = new Node(48, node0, node0, 12, 1);
      node1.getInputId();
      node1.isFor();
      node0.isBreak();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isObjectLit();
      Node node2 = Node.newNumber(1732.96414539, 117, 0);
      node0.getQualifiedName();
      node1.getBooleanProp(54);
      node0.isQualifiedName();
      node0.isFor();
      node0.getAncestor(0);
      node2.isOr();
      node1.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      int int0 = Node.QUOTED_PROP;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.setOptionalArg(true);
      node0.setChangeTime(2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[9];
      simpleErrorReporter0.warning("Object#Key", "Object#Element", 2186, 2);
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = new Node(30, node1, node0, 4095, 54);
      node2.isAssignAdd();
      Node.newNumber((double) 31);
      node1.isLabelName();
      node1.isFunction();
      node1.getNext();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-1117.442238929));
      node0.isContinue();
      Node node1 = Node.newNumber((double) 40, 37, (-1096));
      InputId inputId0 = new InputId("");
      node1.setInputId(inputId0);
      node1.setSourceEncodedPosition(0);
      node0.isOptionalArg();
      Node node2 = new Node(31, node1, node0, node1, node1, 2, 4194304);
      node2.copyInformationFrom(node0);
      node1.isOnlyModifiesArgumentsCall();
      node0.isGetProp();
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.setOptionalArg(true);
      node0.isDebugger();
      node0.wasEmptyNode();
      node0.getType();
      Node node1 = new Node(29, 105, (-821));
      node0.addChildAfter(node1, node1);
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString(36, "cLm.google.javascript.rhino.Node$AncestorIterable");
      node0.getSourceFileName();
      node0.setType(114);
      node0.isNull();
      node0.isNE();
      node0.isSetterDef();
      boolean boolean0 = true;
      Node node1 = new Node(31, node0, node0, node0, node0);
      boolean boolean1 = false;
      boolean boolean2 = true;
      node1.replaceChild(node0, node0);
      node0.isEquivalentTo(node1, boolean1, boolean2, boolean0);
      node1.getSourceFileName();
      node0.isContinue();
      // Undeclared exception!
      try { 
        node0.isTry();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = new Node(36);
      node0.getSourceFileName();
      node0.setType(114);
      node0.isNull();
      node0.isContinue();
      node0.isNE();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node0.isAnd();
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.isBlock();
      Node node1 = new Node(37, node0, node0, node0, node0, 53, 36);
      Node node2 = node1.copyInformationFrom(node0);
      node1.appendStringTree((Appendable) null);
      node2.isOnlyModifiesArgumentsCall();
      node1.isGetProp();
      node2.isNE();
      // Undeclared exception!
      try { 
        node1.isDebugger();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(413, 1089, 1877);
      Node node1 = new Node(413, node0);
      node0.isExprResult();
      node1.isThis();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isAnd();
      node1.getType();
      node1.getSourceFileName();
      node0.isHook();
      Node node2 = node1.removeChildAfter(node0);
      double double0 = 2638.0;
      Node.newNumber(double0);
      node2.useSourceInfoFrom(node1);
      String string0 = null;
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 5);
      node0.getString();
      Node node1 = new Node(31, 32, 2);
      Node node2 = Node.newString(50, "gu 6jCG{X", 2097132, 86);
      node1.isScript();
      node2.isCast();
      node0.isSyntheticBlock();
      Node node3 = new Node(39);
      node2.isParamList();
      Node node4 = node3.srcrefTree(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.cloneNode();
      node4.isEquivalentTo(node3, true, true, false);
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = new Node(564, 564, 564);
      Node node1 = new Node((-202), node0, node0, 57, 43);
      node1.isAssignAdd();
      Node node2 = Node.newString(113, "");
      node0.getQualifiedName();
      node2.isAnd();
      node2.toStringTree();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl((Node) null);
      node_NodeMismatch0.equals(node1);
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = Node.newString(103, "D{D!;,'NIFa");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isDebugger();
      node0.isContinue();
      node0.isNE();
      Node node1 = Node.newString("D{D!;,'NIFa", (-407), 118);
      Node node2 = new Node(130, node1, node1);
      node1.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node2.isOnlyModifiesThisCall();
      node2.isUnscopedQualifiedName();
      node2.isCast();
      node2.isBlock();
      Node node3 = node2.copyInformationFrom(node0);
      node3.isThrow();
      Node.newNumber((double) 47);
      node2.addSuppression("D{D!;,'NIFa");
      node2.setString("D{D!;,'NIFa");
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newString("n");
      node0.getIntProp(97);
      Node node1 = new Node(50, node0, node0, node0, 38, 36);
      Node node2 = Node.newString("n");
      node0.checkTreeEquals(node2);
      node1.getProp(42);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.isAssign();
      Node node3 = new Node(2922, node2, node2, 2, 48);
      node2.setSourceEncodedPosition(39);
      node3.isCall();
      node3.isArrayLit();
      node0.isOnlyModifiesArgumentsCall();
      node1.isIn();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      Node node1 = Node.newNumber((double) 55);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node0.srcrefTree(node1);
      node2.isOnlyModifiesThisCall();
      node0.setString("com.google.common.base.Joiner$MapJoiner");
      double double0 = 52.0;
      // Undeclared exception!
      try { 
        Node.newNumber(double0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(4095, node0, 55, 36);
      node1.isVar();
      node1.setSourceEncodedPosition(16);
      node0.isRegExp();
      Node node2 = new Node(38, node0, node0);
      node0.siblings();
      LinkedHashSet<Node> linkedHashSet0 = null;
      try {
        linkedHashSet0 = new LinkedHashSet<Node>();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node.extractCharno(4096);
      Node node0 = new Node(0, (Node[]) null, 4096, 0);
      int int0 = 37;
      String string0 = "G#POAVz!7-Ko";
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = new Node(154);
      node0.isAssignAdd();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.removeProp(154);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry((ErrorReporter) null, false);
      node0.mayMutateArguments();
      node0.isContinue();
      node0.isNE();
      Node node1 = new Node(39, node0, node0);
      node1.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node1.isAnd();
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.isBlock();
      node1.getDouble();
      Node node2 = node1.copyInformationFrom(node1);
      node0.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newNumber((double) node2.INPUT_ID);
      // Undeclared exception!
      try { 
        node3.getLastSibling();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.getJsDocBuilderForNode();
      Node node1 = null;
      node0.addChildrenToFront((Node) null);
      node0.addChildrenAfter(node1, node1);
      node0.toString();
      // Undeclared exception!
      try { 
        node0.isGetElem();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = new Node(38);
      node0.setChangeTime(48);
      node0.getChangeTime();
      node0.isContinue();
      node0.isGetElem();
      node0.isQualifiedName();
      String string0 = "`GumZgHz+P";
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = new Node(564, 564, 564);
      Node node1 = new Node((-202), node0, node0, 57, 43);
      node1.isAssignAdd();
      Node node2 = Node.newString(31, "", 853, (-1088));
      node0.isEquivalentToTyped(node1);
      Node node3 = node0.srcrefTree(node2);
      node3.getLength();
      node0.isOnlyModifiesThisCall();
      Node node4 = Node.newString("");
      Node node5 = new Node(83, node4, node1, node2, 53, 4015);
      Node node6 = node5.getChildBefore(node2);
      node6.setSideEffectFlags(9777189);
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseUnknownType();
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null).when(unionType0).toString();
      doReturn((Collection) null).when(unionType0).getAlternates();
      JSType jSType0 = modificationVisitor0.caseUnionType(unionType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = node0.getChildAtIndex(0);
      simpleErrorReporter0.warning("Unknown class name", "F',{gw;q", 2321, 1);
      Node node2 = Node.newString(9, "Not declared as a constructor", 21, (-3544));
      node2.getChangeTime();
      node1.toStringTree();
      modificationVisitor0.caseUnknownType();
      node1.isInstanceOf();
      node0.setDouble((-1183.972));
      node2.isObjectLit();
      Node node3 = node2.getNext();
      node1.isDebugger();
      node2.hasMoreThanOneChild();
      node2.isLabel();
      // Undeclared exception!
      try { 
        node3.isFromExterns();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      Node node1 = new Node(42, 1, 2);
      node0.isCast();
      node1.isReturn();
      node1.getQualifiedName();
      Node node2 = Node.newString(4760, "this", 31, 37);
      node2.isObjectLit();
      node1.isAnd();
      node1.isOptionalArg();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newString("Node has existing properties.");
      node0.getIntProp((-713));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      Node node1 = new Node(0, node0, node0, node0, node0, 39, (-1088));
      Node node2 = new Node(36, node1, node1, 102, 53);
      node0.isQualifiedName();
      node0.isReturn();
      node1.getQualifiedName();
      node1.isLabel();
      node1.isObjectLit();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = new Node(29);
      node0.isSyntheticBlock();
      node0.setLineno((-434));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node0.isObjectLit();
      node0.getQualifiedName();
      node0.getBooleanProp(29);
      node0.getProp(2);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      node0.putProp((-434), simpleSourceFile0);
      node0.isTry();
      Node node1 = new Node(118, node0, node0, (-86), (-646));
      Node node2 = Node.newString("{", 12, 31);
      node1.isDo();
      Node node3 = node1.getChildAtIndex(42);
      node0.addChildBefore(node3, node2);
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = new Node(28);
      Node node1 = new Node((-2633));
      node1.isContinue();
      node1.isGetElem();
      node1.putIntProp(53, 57);
      node0.getJSDocInfo();
      node1.isQualifiedName();
      node0.isSwitch();
      node1.useSourceInfoFromForTree(node0);
      node0.addChildBefore(node1, node1);
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = new Node(154);
      node0.isAssignAdd();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.removeProp(154);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry((ErrorReporter) null, false);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(50, nodeArray0);
      node1.setOptionalArg(true);
      Node node2 = new Node(1);
      node0.isContinue();
      node1.isEquivalentTo(node2);
      node2.isGetElem();
      node0.isQualifiedName();
      node1.children();
      node2.isEmpty();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = Node.newString(36, "cLm.google.javascript.rhino.Node$AncestorIterable");
      node0.getSourceFileName();
      node0.setType(114);
      node0.isLocalResultCall();
      node0.isContinue();
      node0.isNE();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node0.isAnd();
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.isBlock();
      Node node1 = new Node(37, node0, node0, node0, node0, 53, 36);
      node1.copyInformationFromForTree(node0);
      Node node2 = node1.copyInformationFrom(node0);
      node2.isOnlyModifiesArgumentsCall();
      node1.isGetProp();
      node0.getString();
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newString("n", (-30), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node0.setType(114);
      node0.isNull();
      node0.mayMutateArguments();
      node0.isCast();
      node0.isBlock();
      Node node1 = new Node(39, node0, node0);
      Node node2 = node0.copyInformationFrom(node1);
      node1.isThrow();
      Node node3 = Node.newNumber((double) 43);
      node2.addSuppression("n");
      node2.setString("n");
      node3.getDouble();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newString(36, "cLm.google.javascript.rhino.Node$AncestorIterable");
      node0.getSourceFileName();
      node0.setType(50);
      node0.isNull();
      node0.isContinue();
      node0.isNE();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node0.isAnd();
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.isBlock();
      Node node1 = new Node(4095, node0, node0);
      Node.newNumber((double) 42);
      node0.addSuppression((String) null);
      node0.setString((String) null);
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("duplicate child");
      Node node1 = new Node(37, node0, node0);
      node0.isComma();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.getSourceFileName();
      node0.addChildrenToFront(node0);
      node1.getParent();
      // Undeclared exception!
      try { 
        node1.checkTreeTypeAwareEqualsImpl(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newString(36, "cLm.google.javascript.rhino.Node$AncestorIterable");
      node0.getSourceFileName();
      node0.setType(31);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      node0.setOptionalArg(true);
      node0.isContinue();
      node0.isIf();
      node0.isGetElem();
      node0.isDelProp();
      node0.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = Node.newString(46, "}w.=lEA+9");
      Node[] nodeArray0 = new Node[2];
      Node node2 = Node.newString(50, "}w.=lEA+9");
      nodeArray0[0] = node2;
      nodeArray0[1] = node1;
      Node node3 = new Node(32, nodeArray0);
      node1.isThrow();
      Node node4 = new Node(48, 55, 12);
      node0.isGetElem();
      node4.isAdd();
      node1.getString();
      node2.addChildToBack(node1);
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.isComma();
      InputId inputId0 = new InputId("F',{gw;q");
      inputId0.toString();
      node0.setInputId(inputId0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Node node2 = node0.srcrefTree(node1);
      node2.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = new Node(28);
      node0.isContinue();
      Node node1 = Node.newString(3111, "XC,/s!~ijGFE*%", (-2389), 48);
      node1.isScript();
      node1.isCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node2 = Node.newString("LEAST_FUNCTION_TYPE", 39, (-124));
      node2.isAssign();
      node2.isRegExp();
      Node.newNumber((double) 31);
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = new Node((-7));
      node0.getSourceFileName();
      int int0 = Node.LAST_PROP;
      node0.setOptionalArg(true);
      Node node1 = new Node(130);
      node1.isContinue();
      node1.isEquivalentTo(node1);
      node1.isGetElem();
      node1.isQualifiedName();
      node0.children();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node1.isStringKey();
      node1.isTrue();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(289);
      node0.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString(30, "");
      node1.getQualifiedName();
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node2.getAncestor((-1455));
      int int0 = 610;
      node0.setCharno(int0);
      node0.isTry();
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newString(50, "A+|HMJ93JR\"S@o.RhVq", 38, 38);
      node0.isScript();
      node0.isUnscopedQualifiedName();
      int int0 = Node.FLAG_NO_THROWS;
      node0.isLocalResultCall();
      node0.isWith();
      Node node1 = new Node(39, (-793), 43);
      node1.useSourceInfoFrom(node0);
      node1.isQualifiedName();
      Node node2 = Node.newString(102, "", 2, 53);
      node2.isOr();
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = Node.newString("", 1896, (-202));
      node0.getString();
      Node node1 = new Node(50, 8, 1390);
      Node node2 = new Node(132, node1, node0, (-1815), 39);
      Node.newString(47, "gu 6jCG{X", 306654252, (-279));
      node2.isScript();
      node2.isWhile();
      node2.isGetElem();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, node0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) null, node2);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) functionType1, (JSType) functionType0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isVoid();
      node1.getLastSibling();
      Node.newString(2, " is not a number node");
      node3.toStringTree();
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.children();
      Node node1 = Node.newString(47, "duplicate child");
      Node node2 = new Node(132, 2, 44);
      node2.detachChildren();
      node2.isQualifiedName();
      InputId inputId0 = new InputId(" *R,;|>oQ VIv|");
      Node node3 = new Node(1307, node2, node2, 108, 54);
      node3.setInputId(inputId0);
      node1.isGetElem();
      node2.isAdd();
      node2.cloneTree();
      node3.isOr();
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newString(36, "fLOCMO@$>Odz*G?", 2008, 86);
      Node node1 = Node.newString(57, "fLOCMO@$>Odz*G?");
      node0.setSourceFileForTesting("CharMatcher.INVISIBLE");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isWhile();
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isExprResult();
      node1.getQualifiedName();
      node0.isObjectLit();
      node2.isAnd();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node3.isOptionalArg();
      node2.isVar();
      node3.isNE();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newString("duplicate child");
      node0.children();
      Node node1 = Node.newString(47, "duplicate child");
      node1.isNE();
      Node node2 = Node.newString("MA", 42, 1858);
      Node node3 = new Node(31, node0, node0);
      node2.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      node1.isOnlyModifiesThisCall();
      node1.isUnscopedQualifiedName();
      node0.isCast();
      node2.isBlock();
      node2.copyInformationFrom(node0);
      node1.isThrow();
      Node.newNumber((double) 31);
      node0.isTrue();
      node3.isNull();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isComma();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(43, nodeArray0, 4, 47);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.getSourceFileName();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.addChildrenToFront(node0);
      node2.getParent();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = Node.newString("Q\\v0~>!EgOh", 69632, 2);
      node3.isAssign();
      node2.isCast();
      node0.isEquivalentTo(node1, true, false, false);
      Node node4 = Node.newString(284, "Not declared as a constructor");
      node4.copyInformationFromForTree(node3);
      node1.isGetProp();
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = new Node(38);
      node0.isAssignAdd();
      node0.isSyntheticBlock();
      Node node1 = Node.newString(190, "F',{gw;q", 15, 195);
      Node node2 = Node.newString(8, "F',{gw;q");
      Node node3 = node0.srcref(node2);
      node3.getExistingIntProp(29);
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = new Node(29);
      node0.isSyntheticBlock();
      node0.setLineno((-434));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node0.isObjectLit();
      node0.getQualifiedName();
      node0.getBooleanProp(29);
      node0.getProp(2);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      node0.putProp((-434), simpleSourceFile0);
      node0.isTry();
      node0.isFor();
      node0.getAncestor(0);
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSType[] jSTypeArray0 = new JSType[1];
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseBooleanType();
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.setSourceEncodedPosition(0);
      node0.isInc();
      node0.isTypeOf();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      InputId inputId0 = new InputId("source_file");
      node_NodeMismatch0.equals(inputId0);
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = new Node(110, 2, 44);
      node0.detachChildren();
      node0.isQualifiedName();
      node0.isFor();
      node0.getLastSibling();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = Node.newString("n", 0, 0);
      node0.toString();
      node0.isGetElem();
      node0.setType(86);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isVoid();
      node0.isAnd();
      node0.isTry();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>(40);
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(119, nodeArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      Node node1 = new Node(57, node0, node0, 37, 29);
      node1.isQualifiedName();
      node1.isReturn();
      node1.getQualifiedName();
      node0.isLabel();
      node1.isObjectLit();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node.mergeLineCharNo((-1694), 2072);
      Node node0 = Node.newNumber((-1801.3654));
      Node node1 = new Node((-1), node0, node0, node0);
      node1.isFunction();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, false, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isGetterDef();
      simpleErrorReporter0.warning("com.google.javascript.rhino.Node$IntPropListItem", "'Nmd(O7K=C4!R", 1, 49);
      Node node1 = new Node(155, 26, (-1761));
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = new Node(124, 949, (-881));
      Node node1 = new Node(57, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isWhile();
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isExprResult();
      node0.getQualifiedName();
      node1.isAnd();
      node0.getJSType();
      node0.isDo();
      node0.useSourceInfoIfMissingFrom(node1);
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newString("", 1896, (-202));
      node0.getString();
      Node node1 = new Node(50, 8, 1390);
      Node node2 = Node.newString(47, "gu 6jCG{X", 9, (-279));
      Node node3 = new Node((-1382), node0, node2);
      node3.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node1.isOnlyModifiesThisCall();
      node1.isUnscopedQualifiedName();
      node0.isCast();
      node0.isBlock();
      Node node4 = Node.newNumber((double) 39, 12, 49);
      Node node5 = node3.copyInformationFrom(node4);
      node3.isThrow();
      Node node6 = Node.newNumber((-297.88764));
      node6.isTrue();
      node5.isNull();
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = Node.newNumber((double) 47, (-434), 43);
      node0.cloneTree();
      InputId inputId0 = new InputId("Qt&ru2ua9p@7");
      node1.setInputId(inputId0);
      node0.isCall();
      node0.isArrayLit();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.FunctionType$Kind");
      Node node0 = Node.newString(0, "6u");
      Node node1 = Node.newString(4095, "6u", 51, 2);
      Node node2 = new Node(29);
      node2.isNot();
      Node node3 = new Node(50, node1, node0);
      node0.addChildToFront(node3);
      node2.isNE();
      node0.isInc();
      Node node4 = Node.newString("6u");
      node0.replaceChild(node3, node4);
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newString(36, "cLm.google.javascript.rhino.Node$AncestorIterable");
      node0.getSourceFileName();
      node0.setType((-997));
      node0.isNoSideEffectsCall();
      node0.isNull();
      node0.isNE();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1));
      node0.isAnd();
      node0.isUnscopedQualifiedName();
      node0.isTypeOf();
      node0.getJsDocBuilderForNode();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getSourceFileName();
      node0.getSideEffectFlags();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.setChangeTime((-462));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[9];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.isAssignAdd();
      Node node2 = Node.newNumber((double) 31);
      node1.isLabelName();
      node1.isFunction();
      node1.getLastSibling();
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString("Node has existing properties.");
      node0.getIntProp((-713));
      Node node1 = new Node(44, node0, node0, node0, 86, 79);
      node1.checkTreeEquals(node0);
      node0.getProp(57);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.isAssign();
      Node node2 = new Node(57, node1, node1, 2387, 37);
      node0.isTry();
      node2.isArrayLit();
      Node.newString(1690, "duplicate child", 0, 32);
      Node node3 = node1.detachFromParent();
      node3.getExistingIntProp(3403);
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = new Node(38, (-74), 50);
      Node node1 = new Node(30, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = jSDocInfo0.getAssociatedNode();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch((Node) null, node1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isWhile();
      Node node3 = node0.copyInformationFromForTree((Node) null);
      node2.isExprResult();
      node1.getQualifiedName();
      // Undeclared exception!
      try { 
        node3.isOptionalArg();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(0, "6u");
      Node node1 = new Node(120, node0, node0);
      node1.mayMutateGlobalStateOrThrow();
      node0.isEmpty();
      Node node2 = Node.newString(38, "com.google.javascript.rhno.jstype.FunctionType$Knd", 126, 8);
      node2.isScript();
      node0.isUnscopedQualifiedName();
      int int0 = Node.FLAG_NO_THROWS;
      node0.isLocalResultCall();
      node0.isWith();
      Node node3 = new Node(30, 2527, 49);
      node2.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = new Node(113, 2008, 36);
      Node node1 = Node.newString(55, "gu 6jCG{X", (-442), 43);
      Node node2 = new Node(55);
      node2.isScript();
      node1.isCast();
      Node node3 = new Node((-1120));
      node1.isParamList();
      Node node4 = node0.srcrefTree(node3);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node5 = node3.cloneNode();
      Node.newString((-416), "gu 6jCG{X");
      node4.isEquivalentTo(node5, false, false, false);
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newString(0, "F',{gw;q", 0, 0);
      node0.setIsSyntheticBlock(true);
      node0.isUnscopedQualifiedName();
      int int0 = Node.FLAG_NO_THROWS;
      node0.isWith();
      Node node1 = new Node(42, (-2270), (-329));
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node.newString(55, "ASSIGN_RSH", (-1278), (-847));
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = new Node(29);
      node0.isSyntheticBlock();
      node0.setLineno((-434));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isCast();
      node0.isObjectLit();
      node0.getQualifiedName();
      node0.getBooleanProp(29);
      node0.getProp(2);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      node0.putProp((-434), simpleSourceFile0);
      node0.isTry();
      Node node1 = new Node(118, node0, node0, (-86), 118);
      node1.isDo();
      node1.srcrefTree(node0);
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = Node.newNumber((double) 47, (-434), 43);
      InputId inputId0 = new InputId("Qt&ru2ua9p@7");
      node1.setInputId(inputId0);
      node0.isCall();
      node1.isLocalResultCall();
      node1.isWith();
      Node node2 = new Node(1896, 2415, 124);
      node2.isQualifiedName();
      Node node3 = new Node((-977), node2, 15, (-1648));
      node0.useSourceInfoIfMissingFrom(node3);
      node2.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.isComma();
      node0.isThrow();
      node0.getSourceFileName();
      Node node1 = Node.newNumber((double) 40, 0, (-449));
      Node node2 = Node.newNumber(0.0);
      Node node3 = new Node((-598), node1, node1, node1, node2);
      node3.removeChildAfter(node1);
      node1.getJsDocBuilderForNode();
      node2.isVar();
      node0.checkTreeEquals(node3);
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      int int0 = Node.LAST_PROP;
      Node node0 = new Node(130);
      node0.isContinue();
      node0.isStringKey();
      node0.isGetElem();
      node0.isQualifiedName();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isStringKey();
      Node node1 = node0.cloneNode();
      node1.copyInformationFrom(node0);
      Node node2 = node0.getLastSibling();
      node0.isExprResult();
      Node node3 = new Node((-806), node2);
      node2.hasChild(node3);
      node0.isIn();
  }
}
