/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 03 23:24:28 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.UnmodifiableIterator;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import java.io.CharArrayWriter;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedWriter;
import java.io.PrintStream;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "~`uC6>";
      int int0 = 0;
      Node[] nodeArray0 = new Node[1];
      JSType[] jSTypeArray0 = new JSType[9];
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType.toMaybeFunctionType((JSType) null);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry1.createTemplatizedType((ObjectType) null, (Map<TemplateType, JSType>) hashMap0);
      // Undeclared exception!
      try { 
        templatizedType0.getTemplateTypeMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int int0 = (-1172);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      String string0 = null;
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-1172), node0, node0, node0);
      JSType jSType0 = jSTypeRegistry0.createNullableType((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType(string0, node1, jSType0);
      jSTypeArray0[0] = (JSType) enumType0;
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int int0 = 1134;
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-59), nodeArray0);
      Node.newNumber(0.0);
      int int1 = 512;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      String string0 = "O$bEC#CAWi~Dz]\\,Y";
      ObjectType objectType0 = FunctionType.getTopDefiningInterface((ObjectType) null, "com.google.common.base.CharMatcher$RangesMatcher");
      FunctionType functionType0 = JSType.toMaybeFunctionType((JSType) objectType0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType(string0, node0, functionType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      // Undeclared exception!
      try { 
        enumElementType1.getPropertyNode(jSTypeRegistry0.OBJECT_ELEMENT_TEMPLATE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int int0 = (-1623);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[7];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      jSTypeArray0[0] = jSType0;
      String string0 = "";
      Node node0 = Node.newString(0, "UBBI?]Z#:n");
      Node node1 = new Node(1980, node0, node0, node0, (-2147), 0);
      Node node2 = new Node(0, node1, node0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType(string0, node2, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      // Undeclared exception!
      try { 
        enumElementType0.autoboxesTo();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(0, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.mayMutateArguments();
      node0.toString();
      Node node1 = new Node(46, node0, node0, node0, node0, 12, 55);
      Node node2 = node0.srcref(node1);
      node1.isEquivalentToTyped(node0);
      node0.isLabel();
      Node node3 = new Node(52, node2);
      // Undeclared exception!
      try { 
        node2.addChildToBack(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node.newString(83, "w{1Z(d27C!J6N", (-821), 83);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 51, 0);
      Node node1 = new Node((-5419), node0);
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int int0 = 1024;
      Node node0 = new Node(1024, (Node) null);
      Node node1 = null;
      try {
        node1 = new Node(int0, node0, node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, (-2032), 0);
      node0.getSourceOffset();
      Node node1 = node0.srcref((Node) null);
      node1.siblings();
      node0.isSwitch();
      node1.getDirectives();
      // Undeclared exception!
      try { 
        node0.isCatch();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = null;
      Node node1 = new Node(4194304, (Node) null, (Node) null, (Node) null, 0, 1966);
      node1.getStaticSourceFile();
      node1.detachChildren();
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = Node.newString(1, "NiRbd_P\"", 1, 0);
      node0.removeFirstChild();
      Node node1 = Node.newString(48, "NiRbd_P\"");
      Node node2 = new Node(0, node0, node0, node0, node1, 802, 3824);
      node0.getStaticSourceFile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node1.isContinue();
      node1.isFalse();
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newString("", 2337, 2337);
      Node node1 = node0.removeFirstChild();
      node0.isWhile();
      node0.useSourceInfoFromForTree((Node) null);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = Node.newString("", 85, (-406));
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newString("Th#FW");
      Node node1 = new Node(1797, node0, node0);
      Node node2 = new Node((-923), node1);
      node2.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node0.isSyntheticBlock();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node0.setSideEffectFlags(node_SideEffectFlags4);
      // Undeclared exception!
      try { 
        node0.isThrow();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 423, 423);
      node0.isThrow();
      StringWriter stringWriter0 = new StringWriter(4095);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 46, 1);
      node0.appendStringTree(charBuffer0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newString(0, "}>L#X=TB");
      Node node1 = new Node((-815), node0, 0, 1932);
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = new Node(0, 0, (-2610));
      node0.setSourceEncodedPositionForTree(40);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int int0 = 1647;
      Node node0 = Node.newString(0, "n]+a", 1647, 0);
      node0.setSideEffectFlags(0);
      node0.setSideEffectFlags(int0);
      // Undeclared exception!
      try { 
        node0.isExprResult();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = new Node((-2006), 0, 0);
      node0.getJSDocInfo();
      Node node1 = new Node(1069, node0, node0);
      node1.isVarArgs();
      Node node2 = new Node(1069, node1, 0, 46);
      node1.toString();
      node1.getString();
      node2.mayMutateGlobalStateOrThrow();
      node2.setChangeTime(node1.FREE_CALL);
      // Undeclared exception!
      try { 
        node2.mayMutateGlobalStateOrThrow();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1069
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      int int0 = 0;
      int int1 = 2690;
      Node node0 = new Node(2690, (Node[]) null, 0, 0);
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.JSDocInfo$LazilyInitializedDocumentation";
      Node node0 = Node.newString((-56), "com.google.javascript.rhino.JSDocInfo$LazilyInitializedDocumentation", 0, (-56));
      Node node1 = Node.newNumber((double) 55, 2823, 798);
      node0.getIntProp((-56));
      node0.isEmpty();
      node0.isOptionalArg();
      String string1 = null;
      node0.toString(false, false, false);
      Node node2 = Node.newString(string1);
      double double0 = (-1800.03774797);
      node2.setDouble(double0);
      node1.isUnscopedQualifiedName();
      InputId inputId0 = null;
      try {
        inputId0 = new InputId(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -56
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.getProp(14);
      node0.setSourceEncodedPositionForTree(14);
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      String string0 = "";
      int int0 = 10;
      Node[] nodeArray0 = new Node[4];
      int int1 = 155;
      int int2 = (-851);
      Node node0 = Node.newNumber((double) (-851));
      Node node1 = Node.newString(34, "L\"`#ce0l>QW!/zG", 155, 36);
      Node node2 = new Node(10, node0, node1, node0, node1, 49, 51);
      Node node3 = new Node((-851), node2, node1, node0, 54, 53);
      Node node4 = new Node(int2, node3, node2, node2, node0);
      int int3 = 0;
      Node node5 = null;
      try {
        node5 = new Node(int1, node4, int3, node3.EMPTY_BLOCK);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newString(2492, "AQ-k#5~", 46, 46);
      Node node1 = new Node(4, node0, node0, node0, node0);
      node1.addChildToBack(node0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.type = 396;
      node2.getSourceOffset();
      node1.setSideEffectFlags(30);
      node0.getLength();
      node0.isFromExterns();
      node2.getSideEffectFlags();
      node0.isCase();
      node3.siblings();
      node0.setType(node2.ORIGINALNAME_PROP);
      // Undeclared exception!
      try { 
        node3.isStringKey();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newString("ANY", 1, 152);
      Node node1 = new Node(2829, node0, node0, 39, 31);
      Node node2 = new Node(2829, node0, node1);
      node2.toStringTree();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newString(0, "h'-d C}DE", 3992, 0);
      node0.setType(1469);
      node0.isArrayLit();
      node0.isCall();
      node0.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(false);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 65535);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[5];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("first new child has existing sibling");
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      jSTypeArray0[0] = (JSType) templateType1;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, node0);
      jSTypeArray0[1] = (JSType) functionType0;
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, jSTypeArray0[0]);
      jSTypeArray0[2] = (JSType) functionType1;
      FunctionType functionType2 = jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType1, functionType1);
      jSTypeArray0[3] = (JSType) functionType2;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) functionType2, (Map<TemplateType, JSType>) hashMap0);
      JSType jSType0 = modificationVisitor0.caseTemplatizedType(templatizedType0);
      jSTypeArray0[4] = jSType0;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = new Node(0, node0, node1, node0, 48, 16);
      Node node3 = new Node(336, node2);
      node3.isThis();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(512, "");
      node1.putBooleanProp(16, false);
      node0.isNew();
      Node node2 = Node.newString("");
      node0.getJsDocBuilderForNode();
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = new Node((-2018));
      node0.toString(false, false, false);
      int int0 = 174;
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2018
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "[";
      Node node0 = Node.newString((-879), "[");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      node0.cloneNode();
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = new Node(46, nodeArray0);
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(0, 0, 1620);
      Node node1 = new Node(47, node0, node0, 37, 0);
      node0.getStaticSourceFile();
      node1.siblings();
      node1.setChangeTime(31);
      boolean boolean0 = node1.isOnlyModifiesThisCall();
      InputId inputId0 = new InputId("!DC{XSzHn9");
      inputId0.toString();
      node1.getDouble();
      StaticSourceFile staticSourceFile0 = null;
      node1.setStaticSourceFile(staticSourceFile0);
      boolean boolean1 = true;
      boolean boolean2 = true;
      // Undeclared exception!
      try { 
        node1.isEquivalentTo(node0, boolean0, boolean1, boolean2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // REGEXP 37 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      int int0 = 2933;
      Node node0 = Node.newString(2933, "global this", 0, 2933);
      Node node1 = null;
      node0.isQuotedString();
      int int1 = (-959);
      node0.copyInformationFromForTree((Node) null);
      Node node2 = new Node(int0, node0, node0, node1, node0.INCRDECR_PROP, int1);
      JSDocInfo jSDocInfo0 = null;
      try {
        jSDocInfo0 = new JSDocInfo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = "\u0000\u05BE\u05D0\u05F3\u0600\u0750\u0E00\u1E00\u2100\uFB50\uFE70\uFF61";
      int int0 = 63;
      Node node0 = Node.newString("\u0000\u05BE\u05D0\u05F3\u0600\u0750\u0E00\u1E00\u2100\uFB50\uFE70\uFF61", 0, 63);
      Node node1 = null;
      node0.useSourceInfoIfMissingFrom((Node) null);
      // Undeclared exception!
      try { 
        node0.addChildToBack(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = 691;
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(691, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node.newString(112, "Object#Element", 0, 1468);
      Node node1 = new Node(0, node0, node0, 1468, 2);
      node1.getAncestors();
      node0.mayMutateGlobalStateOrThrow();
      Node.newNumber(0.0, 0, 4095);
      Node node2 = new Node(0, node1, 221, 0);
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = Node.newNumber((-23.905667161527806), 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.type = 396;
      node2.getSourceOffset();
      node0.getLength();
      node0.isFromExterns();
      node2.getSideEffectFlags();
      node0.isCase();
      node3.siblings();
      node0.setType(40);
      node3.isStringKey();
      node0.isVoid();
      node3.setString("mx>)J)j(qm");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = null;
      Node node1 = new Node(1142, (Node) null, 0, 1226);
      node1.isOnlyModifiesThisCall();
      String string0 = "";
      InputId inputId0 = null;
      try {
        inputId0 = new InputId(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = new Node(0, 0, 1620);
      Node node1 = new Node(47, node0, node0, 37, 0);
      node0.getStaticSourceFile();
      node1.siblings();
      node1.setChangeTime(31);
      Node node2 = Node.newString(37, "j<t,i`|t4#z]", 83, 43);
      node0.setType((-775));
      node1.isArrayLit();
      node2.isCall();
      node1.setWasEmptyNode(false);
      node1.setIsSyntheticBlock(false);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = node0.cloneNode();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      Node node2 = new Node(1536, nodeArray0);
      node0.removeChild(nodeArray0[1]);
      nodeArray0[1].removeFirstChild();
      // Undeclared exception!
      try { 
        node2.getAncestors();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(722);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isContinue();
      node0.isTry();
      node0.isQualifiedName();
      node1.isVarArgs();
      node1.setVarArgs(true);
      node1.hasMoreThanOneChild();
      node0.getSourcePosition();
      node1.isNumber();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String string0 = "[";
      Node node0 = Node.newString((-879), "[");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      node0.setVarArgs(true);
      Node node1 = node0.cloneNode();
      nodeArray0[1] = node0;
      node0.removeChild(node0);
      nodeArray0[0].putProp(node1.FLAG_THIS_UNMODIFIED, node1);
      nodeArray0[2] = node0;
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node2.isEquivalentToTyped(node1);
      node1.isContinue();
      node3.isNE();
      Node node4 = node3.srcref(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      node4.isContinue();
      node4.isTry();
      node4.isQualifiedName();
      node2.isVarArgs();
      node2.setVarArgs(false);
      Node node5 = Node.newString("mx>)J)j(qm", 16, 155);
      Node node6 = new Node(126, node1, node5, node3);
      Node node7 = new Node(47, node6);
      node7.hasMoreThanOneChild();
      node4.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String string0 = "com.google.common.collect.ImmutableList$1";
      Node node0 = Node.newString(3653, "com.google.common.collect.ImmutableList$1", 262144, 3653);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(42, "");
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      Node node2 = new Node(122, node0, node0, node1, node0);
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      nodeArray0[4] = node1;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node1;
      Node node3 = Node.newNumber((double) 43, 588, 396);
      nodeArray0[8] = node3;
      Node node4 = new Node((-2558), nodeArray0, (-66), (-551));
      Node node5 = new Node(node2.SIDE_EFFECTS_FLAGS_MASK, node1);
      node5.isNew();
      Node.newString(string0);
      node3.getJsDocBuilderForNode();
      nodeArray0[0].isTypeOf();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = Node.newString(0, "NiRbd_P\"", 405, 405);
      Node node1 = node0.removeFirstChild();
      Node node2 = Node.newString(199, "NiRbd_P\"");
      Node node3 = new Node(37, node2, (Node) null, node2, node2, 50, 4095);
      node2.getStaticSourceFile();
      double double0 = 5243.393947833583;
      int int0 = 122;
      // Undeclared exception!
      try { 
        node2.getProp(node1.REFLECTED_OBJECT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 423, 423);
      node0.isThrow();
      StringWriter stringWriter0 = new StringWriter(4095);
      stringWriter0.getBuffer();
      node0.getString();
      String string0 = "jc<6";
      // Undeclared exception!
      try { 
        node0.addSuppression(string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 423 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newNumber(1701.246172, (-2520), (-1));
      node0.isNew();
      node0.getQualifiedName();
      node0.isCase();
      Node node1 = Node.newString(83, (String) null, 38, (-1));
      node0.isNE();
      node0.isSwitch();
      int int0 = 336;
      // Undeclared exception!
      try { 
        node1.getAncestor(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setSourceFileForTesting("Z28ZrM@iH");
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node0.getLength();
      Node node1 = new Node((-3138), node0);
      node1.isFromExterns();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node2 = Node.newString(4, (String) null, 37, 0);
      node2.siblings();
      int int0 = 63;
      node0.setType(int0);
      // Undeclared exception!
      try { 
        node0.isStringKey();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newNumber((-23.905667161527806), 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.getProp(15);
      node3.setSourceEncodedPositionForTree(1972);
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(722);
      node1.getInputId();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isContinue();
      node0.isTry();
      node0.isQualifiedName();
      node1.isVarArgs();
      node1.setVarArgs(true);
      node1.hasMoreThanOneChild();
      node0.getSourcePosition();
      node0.isGetProp();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(83);
      stringWriter0.getBuffer();
      int int0 = (-922);
      Node node0 = new Node(83, (Node[]) null);
      Node node1 = new Node(int0, node0);
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 423, 423);
      node0.isThrow();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(53, nodeArray0, 48, 1);
      node1.isLocalResultCall();
      node0.isNE();
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = Node.newString(112, "Object#Element", 0, 1468);
      Node node2 = new Node(0, node0, node0, 1468, 2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node0.setSideEffectFlags(node_SideEffectFlags3);
      node0.isThrow();
      int int0 = 405;
      int int1 = 262144;
      Node node3 = null;
      try {
        node3 = new Node(int0, node2, node1.LAST_PROP, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node0.isSyntheticBlock();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node0.getAncestors();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newNumber(0.0, 0, (-114));
      Node node2 = new Node(2017, node1, 56, 0);
      node2.isLabel();
      node1.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(601, 601, 1620);
      Node node1 = new Node(47, node0, node0, 37, 0);
      node0.getStaticSourceFile();
      node1.siblings();
      String string0 = "!DC{XSzHn9";
      node1.setChangeTime(31);
      Node node2 = Node.newString(9, "!DC{XSzHn9", 48, 4);
      node1.getChildBefore(node2);
      node1.isFalse();
      InputId inputId0 = new InputId(string0);
      inputId0.toString();
      node1.getDouble();
      StaticSourceFile staticSourceFile0 = null;
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node.newNumber((double) 46, 49, 52);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getTypedefType();
      ObjectType.cast((JSType) null);
      node0.setCharno(52);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node.extractLineno(0);
      String string0 = "";
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(722);
      node_SideEffectFlags0.setReturnsTainted();
      node0.getInputId();
      node1.putProp(1048576, (Object) null);
      Node node2 = new Node(15, (Node[]) null);
      node1.removeChild(node0);
      node0.removeFirstChild();
      double double0 = 0.0;
      Node node3 = Node.newNumber(double0);
      node3.getAncestors();
      // Undeclared exception!
      try { 
        node3.getFirstChild();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = new Node(0, 0, 1620);
      Node node1 = new Node(47, node0, node0, 37, 0);
      node0.getStaticSourceFile();
      node1.siblings();
      node1.setChangeTime(31);
      Node node2 = Node.newString(37, "j<t,i`|t4#z]", 83, 43);
      node0.setType((-775));
      node1.isArrayLit();
      node2.isCall();
      Node node3 = node1.useSourceInfoFromForTree(node2);
      node1.setWasEmptyNode(false);
      node1.setIsSyntheticBlock(false);
      int int0 = 12;
      Node node4 = new Node(57, node1, node3);
      node4.checkTreeEqualsImpl(node0);
      node4.setSideEffectFlags((-2852));
      node0.putProp(int0, node4);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(722);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isContinue();
      node0.isTry();
      node0.isQualifiedName();
      node1.isVarArgs();
      node1.setVarArgs(true);
      node1.hasMoreThanOneChild();
      node0.getSourcePosition();
      node1.isNumber();
      node0.getAncestor(3852);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.setSourceFileForTesting((String) null);
      node2.isEquivalentToTyped(node1);
      node1.isContinue();
      node3.isNE();
      Node node4 = node3.srcref(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node4.isContinue();
      node4.isTry();
      node4.isQualifiedName();
      node2.isVarArgs();
      node2.setVarArgs(false);
      Node node5 = Node.newString("mx>)J)j(qm", 16, 155);
      Node node6 = new Node(126, node1, node5, node3);
      Node node7 = new Node(47, node6);
      node4.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(0, 0, 1620);
      Node node1 = new Node(47, node0, node0, 37, 0);
      node0.getStaticSourceFile();
      node1.siblings();
      node1.setChangeTime(31);
      node1.isOnlyModifiesThisCall();
      InputId inputId0 = new InputId("!DC{XSzHn9");
      inputId0.toString();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node1.isEquivalentTo(node0, false, true, true);
      inputId0.toString();
      inputId0.toString();
      inputId0.toString();
      node0.toString(true, true, true);
      node0.mayMutateGlobalStateOrThrow();
      node1.setInputId(inputId0);
      node1.isHook();
      node0.addChildToBack(node1);
      node0.copyInformationFrom(node1);
      node1.hasOneChild();
      node0.isSyntheticBlock();
      node0.isEquivalentToTyped(node1);
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 65535);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[5];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("Object#Element");
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      jSTypeArray0[0] = (JSType) templateType1;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, node0);
      jSTypeArray0[1] = (JSType) functionType0;
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, jSTypeArray0[0]);
      node0.isVarArgs();
      node0.isDefaultCase();
      node0.isWith();
      node0.getChildCount();
      node0.getDirectives();
      node0.setWasEmptyNode(false);
      node0.addSuppression("Unknown class name");
      Node node1 = node0.getFirstChild();
      CharBuffer.wrap((CharSequence) "Unknown class name");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Not declared as a type name", 1887, 4095);
      node1.appendStringTree(charBuffer0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = Node.newNumber((double) 46, 49, 52);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = new Node(37, nodeArray0);
      node1.checkTreeEquals(node2);
      ObjectType.cast((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("is_dispatcher", node1, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getImplicitPrototype();
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newNumber((-23.905667161527806), 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.type = 396;
      node2.getSourceOffset();
      node0.getLength();
      node0.isFromExterns();
      node2.getSideEffectFlags();
      node0.isCase();
      Node node4 = node3.copyInformationFrom(node2);
      node0.hasOneChild();
      node0.isSyntheticBlock();
      node2.isEquivalentToTyped(node4);
      node4.setType(36);
      Node node5 = new Node(48, node1, node0, node3, node3);
      node5.checkTreeTypeAwareEqualsImpl(node4);
      node5.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(722);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isContinue();
      node0.isTry();
      node0.isQualifiedName();
      node1.isVarArgs();
      Node.newString("5+%b2w|");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseStringType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node2.isFromExterns();
      node0.setWasEmptyNode(true);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = Node.newNumber((double) 46, 49, 52);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = new Node(37, nodeArray0);
      node1.checkTreeEquals(node2);
      ObjectType.cast((JSType) null);
      node2.getSideEffectFlags();
      node1.isCase();
      Node node3 = node2.copyInformationFrom(node0);
      node3.hasOneChild();
      node2.isSyntheticBlock();
      Node node4 = Node.newString(52, (String) null, 2657, 36);
      node4.isEquivalentToTyped(node1);
      int int0 = 48;
      node2.setType(int0);
      int int1 = 857;
      Node node5 = null;
      try {
        node5 = new Node(int1, node0, node2, node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.mayMutateArguments();
      node0.toString();
      Node node1 = new Node(46, node0, node0, node0, node0, 12, 55);
      node1.isEquivalentToTyped(node0);
      node0.isLabel();
      Node node2 = new Node(52, node1);
      Node.newNumber(1.0, 47, 52);
      node0.getSideEffectFlags();
      node0.mayMutateGlobalStateOrThrow();
      node2.setOptionalArg(false);
      node2.addChildrenToFront(node0);
      int int0 = 766;
      Node[] nodeArray0 = new Node[6];
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node0.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node0.isThrow();
      node0.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.RANGE_ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, functionType0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) functionType1, (Map<TemplateType, JSType>) hashMap0);
      modificationVisitor0.caseTemplatizedType(templatizedType0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = Node.newNumber((-23.905667161527806), 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node0.replaceChildAfter(node3, node2);
      node1.setType(node3.FLAG_LOCAL_RESULTS);
      String string0 = null;
      node1.setSourceFileForTesting(string0);
      node0.isOnlyModifiesArgumentsCall();
      int int0 = 396;
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(722);
      node_SideEffectFlags0.setReturnsTainted();
      node0.getInputId();
      node1.putProp(1048576, (Object) null);
      node0.isContinue();
      node1.isTry();
      node1.isQualifiedName();
      node0.isVarArgs();
      node1.setVarArgs(false);
      node1.hasMoreThanOneChild();
      node1.getSourcePosition();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
      node2.isNumber();
      int int0 = (-647);
      node1.getAncestor(int0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(38, node0, node2);
      node1.copyInformationFrom(node3);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      node3.isEquivalentToTyped(node2);
      node3.setSourceEncodedPosition(38);
      Node node4 = Node.newNumber(1.0);
      node4.setType(36);
      node0.detachFromParent();
      Node node5 = new Node(3, node4, node2, node3, node1);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 65535);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[5];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("Object#Element");
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      jSTypeArray0[0] = (JSType) templateType1;
      JSType.toMaybeFunctionType(jSTypeArray0[0]);
      jSTypeArray0[1] = (JSType) null;
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(55, nodeArray0);
      Node node2 = new Node(1788, 57, (-3677));
      Node node3 = new Node(592, node0, node2);
      node3.checkTreeEquals(node1);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      ObjectType objectType0 = ObjectType.cast(jSType0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType(objectType0.NOT_A_TYPE, node0, templateType0);
      enumType0.getElementsType();
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getImplicitPrototype();
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(423, 423, 423);
      node0.isThrow();
      StringWriter stringWriter0 = new StringWriter(4095);
      stringWriter0.close();
      stringWriter0.getBuffer();
      node0.getString();
      String string0 = "jc<6";
      // Undeclared exception!
      try { 
        node0.addSuppression(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 423
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int int0 = (-1);
      Node node0 = Node.newNumber(1701.246172, (-2520), (-1));
      node0.isNew();
      String string0 = node0.getQualifiedName();
      node0.isCase();
      node0.setQuotedString();
      int int1 = 83;
      // Undeclared exception!
      try { 
        Node.newString(int1, string0, node0.SYNTHETIC_BLOCK_PROP, int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newNumber(1330.3865774, 19, (-2520));
      node0.isNew();
      node0.getQualifiedName();
      node0.isCase();
      Node node1 = Node.newString(0, "CHECKED_UNKNOWN_TYPE", 1, 4095);
      node1.isNE();
      node1.getAncestor(31);
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString("O-BjLY^Wg[%y0:t", 508, 48);
      node1.isCase();
      node0.siblings();
      Node node2 = Node.newString(39, "O-BjLY^Wg[%y0:t");
      node2.setSourceFileForTesting((String) null);
      node2.isUnscopedQualifiedName();
      Node node3 = new Node(2000, node0, node2, 116, (-1280));
      node3.setType(30);
      node2.isVoid();
      node0.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.isContinue();
      node0.isTry();
      node0.isQualifiedName();
      node1.isVarArgs();
      node0.setVarArgs(false);
      node1.hasMoreThanOneChild();
      node1.getSourcePosition();
      node0.isNumber();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(38, node0, node2);
      Node node4 = node1.copyInformationFrom(node3);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      node3.isEquivalentToTyped(node2);
      node3.setSourceEncodedPosition(38);
      Node node5 = Node.newNumber(1.0);
      node5.setType(36);
      node0.detachFromParent();
      node2.getJSDocInfo();
      node3.getDirectives();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node4.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      node4.isThis();
      node5.isTypeOf();
      node5.getLastChild();
      Node node6 = node4.getParent();
      node6.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newNumber(1330.3865774, 19, (-2520));
      node0.isNew();
      node0.getQualifiedName();
      node0.isCase();
      Node node1 = Node.newString(0, "CHECKED_UNKNOWN_TYPE", 1, 4095);
      node1.isNE();
      node1.removeChildren();
      node1.getAncestor(31);
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node2.isEquivalentToTyped(node1);
      node1.isContinue();
      node3.isNE();
      Node node4 = node3.srcref(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      node4.isContinue();
      node4.isTry();
      node4.isQualifiedName();
      node2.isVarArgs();
      node2.setVarArgs(false);
      Node node5 = Node.newString("mx>)J)j(qm", 16, 155);
      Node node6 = new Node(126, node1, node5, node3);
      Node node7 = new Node(47, node6);
      node7.isFromExterns();
      node7.hasMoreThanOneChild();
      node4.getSourcePosition();
      node6.getIndexOfChild(node4);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newNumber(1330.3865774, 19, (-2520));
      node0.isNew();
      node0.getQualifiedName();
      node0.isCase();
      node0.isQualifiedName();
      node0.isVarArgs();
      node0.setVarArgs(false);
      Node node1 = Node.newString((String) null, 1084, 32);
      Node node2 = new Node(node0.DIRECT_EVAL, node0, node1, node0);
      int int0 = (-537);
      Node node3 = new Node(int0, node2);
      int int1 = 2290;
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node0.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node0.isThrow();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getAncestors();
      Node node1 = new Node(2, node0);
      Node.newString("|p .N");
      node1.isFromExterns();
      node1.setWasEmptyNode(false);
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString("O-BjLY^Wg[%y0:t", 508, 48);
      node1.isCase();
      node0.siblings();
      Node node2 = Node.newString(39, "O-BjLY^Wg[%y0:t");
      Node node3 = new Node(2000, node0, node2, 116, (-1280));
      node3.type = 157;
      node3.setType(30);
      node2.isVoid();
      node0.checkTreeEquals(node2);
      node3.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.isNew();
      node1.getQualifiedName();
      int int0 = 51;
      Node node3 = new Node(51, node1);
      node3.isCase();
      node3.isQualifiedName();
      node2.isVarArgs();
      node3.addSuppression("com.google.javascript.rhino.Node$AncestorIterable");
      node0.setVarArgs(false);
      Node.newString((String) null, 51, 30);
      int int1 = 648;
      Node node4 = new Node(int1, node3, node2, node2);
      Node node5 = new Node(int0, node3);
      int int2 = 491;
      int int3 = (-3848);
      Node node6 = null;
      try {
        node6 = new Node(int2, node4, node0, node2, node1.FLAG_GLOBAL_STATE_UNMODIFIED, int3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node.extractLineno(0);
      String string0 = "";
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      boolean boolean0 = node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(38, node0, node2);
      node1.copyInformationFrom(node3);
      node1.getBooleanProp(43);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      node3.isUnscopedQualifiedName();
      node3.isEquivalentToTyped(node2);
      Node.newString(string0);
      node3.isFromExterns();
      node2.setWasEmptyNode(boolean0);
      // Undeclared exception!
      try { 
        Node.newNumber((double) node2.LENGTH);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(38, node0, node2);
      Node node4 = node1.copyInformationFrom(node3);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      node3.isEquivalentToTyped(node2);
      node3.isNot();
      node2.getChildCount();
      node3.isEmpty();
      node0.isUnscopedQualifiedName();
      node2.isInc();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node4.setDirectives(treeSet0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.isContinue();
      node0.isTry();
      node0.isQualifiedName();
      node1.isVarArgs();
      node0.setVarArgs(false);
      node1.hasMoreThanOneChild();
      node0.setType(55);
      node1.isVoid();
      node1.getInputId();
      node1.isSwitch();
      node1.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString("O-BjLY^Wg[%y0:t", 508, 48);
      node1.isCase();
      node0.siblings();
      Node node2 = Node.newString(39, "O-BjLY^Wg[%y0:t");
      node2.setSourceFileForTesting((String) null);
      node2.isUnscopedQualifiedName();
      Node node3 = new Node(40, node0, node2, 116, (-1280));
      node3.setType(30);
      node2.isVoid();
      node0.setQuotedString();
      node0.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(38, node0, node2);
      Node node4 = node1.copyInformationFrom(node3);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      node3.isEquivalentToTyped(node2);
      node3.setSourceEncodedPosition(38);
      Node node5 = Node.newNumber(0.6962848586584436);
      node5.setType(36);
      node4.detachFromParent();
      node2.getJSDocInfo();
      node3.getDirectives();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node4.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = node0.cloneNode();
      Node node2 = Node.newString((-1381), "3mozN)F^p~@Uj6<%G7m");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2431);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node1.isContinue();
      node0.isTry();
      node2.isQualifiedName();
      node2.isVarArgs();
      node2.setVarArgs(true);
      node2.hasMoreThanOneChild();
      node1.getSourcePosition();
      Node node3 = new Node(43, node2, node0, node0, 55, 31);
      node3.isNumber();
      Node node4 = new Node((-759), 102, 1506);
      Node node5 = new Node(2, node1, node4, node3, node2);
      node5.isGetProp();
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(38, node0, node2);
      Node node4 = node1.copyInformationFrom(node3);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      node1.isQualifiedName();
      node2.isVarArgs();
      node0.setVarArgs(true);
      node3.hasMoreThanOneChild();
      node2.getSourcePosition();
      node4.isNumber();
      Node node5 = new Node(31, node3, node0, node3, node0, 30, 93);
      node5.isGetProp();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(683);
      node_SideEffectFlags0.clearSideEffectFlags();
      node2.isContinue();
      Node node3 = Node.newNumber((double) 38);
      Node node4 = new Node(49, node1, node0, node3);
      node4.isTry();
      node2.isQualifiedName();
      node3.isVarArgs();
      node3.setVarArgs(true);
      node0.hasMoreThanOneChild();
      node3.getSourcePosition();
      node4.isNumber();
      node3.isGetProp();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node1.isCase();
      Node node2 = new Node(1434, node0, node1);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(1641, nodeArray0, (-3067), 2);
      Node node4 = node3.copyInformationFrom(node2);
      node2.hasOneChild();
      node1.isSyntheticBlock();
      Node node5 = new Node((-4014), node1, node1, node1, node1, 29, 42);
      node5.isEquivalentToTyped(node4);
      node3.setSourceEncodedPosition(node1.ORIGINALNAME_PROP);
      double double0 = (-1.0);
      Node.newNumber(double0);
      int int0 = 509;
      node1.setType(int0);
      node5.detachFromParent();
      // Undeclared exception!
      try { 
        node4.getJSDocInfo();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node0.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(30);
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node0.addSuppression("OM3U(O1W`~b(");
      node0.hasChild(node0);
      Node.newString("OM3U(O1W`~b(");
      Node node1 = new Node(51);
      node1.isNot();
      node0.getChildCount();
      node0.isEmpty();
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = Node.newNumber((double) 46, 49, 52);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getThisType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("com.google.common.base.Equivalence$EquivalentToPredicate");
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, templateType0);
      Node node3 = Node.newNumber(0.0, 103, 36);
      node0.setChangeTime(2);
      node1.isEquivalentToTyped(node2);
      node2.isContinue();
      Node node4 = Node.newNumber((double) 49);
      node4.isNE();
      Node node5 = node4.srcref(node2);
      node5.putBooleanProp(4095, true);
      node1.isNew();
      Node node6 = Node.newString("Unknown class name");
      Node node7 = new Node(1428, node6, node6, node6, node3, (-2803), 670);
      node5.getJsDocBuilderForNode();
      node6.hasOneChild();
      node6.getCharno();
      node4.isSwitch();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = Node.newNumber((double) 46, 49, 52);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      jSDocInfo0.setModifies((Set<String>) null);
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("com.google.common.base.Equivalence$EquivalentToPredicate");
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, templateType0);
      node2.isVarArgs();
      node0.isDefaultCase();
      node0.isWith();
      node1.getChildCount();
      node0.getDirectives();
      node0.setWasEmptyNode(true);
      Node node3 = new Node(51, node1, node1, 1479, (-1053));
      node3.setType(16);
      node3.isVoid();
      node0.checkTreeEquals(node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      String string0 = "^\"h SW";
      node_FileLevelJsDocBuilder0.append(string0);
      node3.isThrow();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String string0 = "jc<6";
      Node node0 = Node.newString(53, "jc<6", 53, 53);
      int int0 = (-2428);
      node0.detachFromParent();
      SimpleErrorReporter simpleErrorReporter0 = null;
      try {
        simpleErrorReporter0 = new SimpleErrorReporter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString("f]Djk)<yfL%)7fEksg[");
      node0.mayMutateArguments();
      node0.toString();
      Node node1 = new Node(126, node0, node0, node0, node0, 16, 52);
      boolean boolean0 = node1.isEquivalentToTyped(node0);
      node1.isLabel();
      Node node2 = new Node(32, 40, 55);
      Node node3 = Node.newNumber(0.0, (-570), (-125));
      node1.getSideEffectFlags();
      node0.isDefaultCase();
      Node node4 = new Node(12, 38, 122);
      node2.addChildrenToFront(node4);
      Node[] nodeArray0 = new Node[0];
      Node node5 = new Node(1479, nodeArray0);
      node1.removeChild(node3);
      node2.removeFirstChild();
      node3.getAncestors();
      node3.isFromExterns();
      node4.setWasEmptyNode(boolean0);
      node3.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.isNull();
      node0.toString();
      Node node1 = new Node(46, node0, node0, node0, node0, 12, 55);
      node1.isEquivalentToTyped(node0);
      node0.isLabel();
      Node node2 = new Node(52, node1);
      Node.newNumber(1.0, 47, 52);
      node0.getSideEffectFlags();
      node0.mayMutateGlobalStateOrThrow();
      node2.addChildrenToFront(node0);
      int int0 = 766;
      Node[] nodeArray0 = new Node[6];
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newNumber((double) 0, 2841, 1);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("O^R T-pHhbfZaYWj", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      node2.setSourceFileForTesting("BtlvmQ3)B!o");
      node3.isOnlyModifiesArgumentsCall();
      node1.getSourceOffset();
      node3.getLength();
      node2.isFromExterns();
      node3.getSideEffectFlags();
      node3.siblings();
      node0.setType(31);
      node1.isStringKey();
      node2.setString("_cn{`DX`!AH8}");
      node3.removeFirstChild();
      double double0 = 0.7;
      int int0 = 101;
      int int1 = 1210;
      Node.newNumber(double0, int0, int1);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node1.isCase();
      Node node2 = new Node(1434, node0, node1);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(1641, nodeArray0, (-3067), 2);
      Node node4 = node3.copyInformationFrom(node2);
      node2.hasOneChild();
      node1.isSyntheticBlock();
      node0.isGetterDef();
      Node node5 = new Node((-4014), node1, node1, node1, node1, 29, 42);
      node5.isEquivalentToTyped(node4);
      node3.setSourceEncodedPosition(node1.ORIGINALNAME_PROP);
      double double0 = (-1.0);
      Node.newNumber(double0);
      int int0 = 509;
      node1.setType(int0);
      node5.detachFromParent();
      // Undeclared exception!
      try { 
        node4.getJSDocInfo();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newNumber((-23.905667161527806), 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node2.getSourceOffset();
      node0.getLength();
      node0.isFromExterns();
      node0.isCase();
      node1.siblings();
      node0.setType(40);
      node1.isStringKey();
      node0.isVoid();
      node2.setString("mx>)J)j(qm");
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(683);
      node_SideEffectFlags0.clearSideEffectFlags();
      node2.isContinue();
      Node node3 = Node.newNumber((double) 38);
      Node node4 = new Node(49, node1, node0, node3);
      node4.isTry();
      node2.isQualifiedName();
      node3.isVarArgs();
      node3.setVarArgs(true);
      node0.hasMoreThanOneChild();
      node3.getSourcePosition();
      node1.isFunction();
      node3.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node2.isEquivalentToTyped(node1);
      node1.isContinue();
      node3.isNE();
      Node node4 = node3.srcref(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node4.getStaticSourceFile();
      node_SideEffectFlags2.clearSideEffectFlags();
      node4.isContinue();
      node4.isTry();
      node4.isQualifiedName();
      node2.isVarArgs();
      node2.setVarArgs(false);
      Node node5 = Node.newString("mx>)J)j(qm", 16, 155);
      Node node6 = new Node(126, node1, node5, node3);
      Node node7 = new Node(47, node6);
      node7.isFromExterns();
      node7.hasMoreThanOneChild();
      node4.getSourcePosition();
      node6.getIndexOfChild(node4);
      Node node8 = new Node(1246, node7, node5, node1, 1, (-1996));
      node3.replaceChildAfter(node1, node8);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node0.isWhile();
      node0.getLength();
      node0.getSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(683);
      node_SideEffectFlags0.clearSideEffectFlags();
      node2.isContinue();
      Node node3 = Node.newNumber((double) 38);
      Node node4 = new Node(49, node1, node0, node3);
      node4.isTry();
      node2.isQualifiedName();
      node3.isVarArgs();
      node3.setVarArgs(true);
      node0.hasMoreThanOneChild();
      node3.getSourcePosition();
      node4.isNumber();
      node4.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node0.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(30);
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node0.isThrow();
      node0.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = Node.newString("");
      node0.isFromExterns();
      node1.setWasEmptyNode(false);
      node1.getJSDocInfo();
      node0.setLineno(42);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node0.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node0.isThrow();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getAncestors();
      Node node1 = new Node(2, node0);
      Node.newString("|p .N");
      node0.isFalse();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = Node.newNumber((double) 46, 49, 52);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getThisType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("com.google.common.base.Equivalence$EquivalentToPredicate");
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, templateType0);
      Node node3 = Node.newNumber(0.0, 103, 36);
      node0.setChangeTime(2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node4 = Node.newString((-1555), "Object#Key");
      node4.isContinue();
      node1.isTry();
      node3.isQualifiedName();
      node2.isVarArgs();
      node3.setVarArgs(true);
      node4.hasMoreThanOneChild();
      node0.getSourcePosition();
      node3.isNumber();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(47, nodeArray0);
      Node node1 = new Node(47, node0, node0, node0, node0, 57, (-502));
      node1.addChildrenToBack(node0);
      node0.isEquivalentToTyped(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      String string0 = "O-BjLY^Wg[%y0:t";
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = Node.newString((-416), "", 85, 85);
      node0.children();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node node1 = Node.newString(4496, "`d");
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node2 = new Node(43, node0, node0, node0);
      node2.isContinue();
      node0.isTry();
      node2.isQualifiedName();
      node1.isVarArgs();
      node2.setVarArgs(false);
      node2.hasMoreThanOneChild();
      node0.setType((-652));
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('\'');
      node0.appendStringTree(stringWriter1);
      node2.isVoid();
      node1.checkTreeEquals(node2);
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node0.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.setSourceFileForTesting("kV@UR'xy");
      node0.getBooleanProp((-2000));
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node((-957), node0, node0, 625, 37);
      node1.getLength();
      node1.getSideEffectFlags();
      node1.isCase();
      node0.clonePropsFrom(node1);
      Node node2 = new Node(node0.INFERRED_FUNCTION, node0, node1);
      Node node3 = node1.copyInformationFrom(node0);
      node1.getBooleanProp(node3.JSDOC_INFO_PROP);
      node3.hasOneChild();
      // Undeclared exception!
      try { 
        node0.isSyntheticBlock();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node.newString("jc<6");
      Node node0 = Node.newString(116, "`d");
      Node.newString(38, (String) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node0.COLUMN_MASK);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.setThrows();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = Node.newString("xQFW=28u");
      node0.isBreak();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = Node.newNumber((double) 46, 49, 52);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      jSDocInfo0.setModifies((Set<String>) null);
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("com.google.common.base.Equivalence$EquivalentToPredicate");
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, templateType0);
      node2.isVarArgs();
      node0.isDefaultCase();
      node0.isWith();
      node1.getChildCount();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node3 = Node.newString(1867, "Unknown class name");
      node0.isContinue();
      node1.isTry();
      node1.isQualifiedName();
      node2.isVarArgs();
      node1.setVarArgs(true);
      node1.hasMoreThanOneChild();
      node1.getSourcePosition();
      node0.isNumber();
      node3.isGetProp();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      simpleSourceFile0.getLineOffset(56);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.type = 396;
      node0.getSourceOffset();
      node0.isFromExterns();
      node1.getSideEffectFlags();
      node1.getStaticSourceFile();
      node0.isCase();
      node2.siblings();
      node0.setType(40);
      node2.isStringKey();
      node0.isVoid();
      node2.setString("mx>)J)j(qm");
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newNumber((-23.905667161527806), 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.isCase();
      node1.siblings();
      Node node3 = Node.newString(43, "=ChQVu;ffN\"J6dX");
      node0.setSourceFileForTesting("incrdecr");
      node3.isUnscopedQualifiedName();
      Node node4 = new Node(40, node1, node1, (-381), 1242);
      node2.setType(1004);
      node2.isVoid();
      node3.setQuotedString();
      node1.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString("O-BjLY^Wg[%y0:t", 508, 48);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("O-BjLY^Wg[%y0:t", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node0.copyInformationFrom(node1);
      node2.wasEmptyNode();
      node0.setSourceFileForTesting("jc<6");
      node0.isOnlyModifiesArgumentsCall();
      node1.getSourceOffset();
      node1.getLength();
      node0.isFromExterns();
      node1.isCase();
      node1.siblings();
      node1.setType(55);
      node1.isStringKey();
      node1.isVoid();
      node1.setString((String) null);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString("O-BjLY^Wg[%y0:t", 508, 48);
      node1.isCase();
      node0.siblings();
      Node node2 = Node.newString(39, "O-BjLY^Wg[%y0:t");
      node2.setSourceFileForTesting((String) null);
      node2.isUnscopedQualifiedName();
      Node node3 = new Node(40, node0, node2, 116, (-1280));
      node3.setType(30);
      node2.isVoid();
      node0.setQuotedString();
      node2.setWasEmptyNode(false);
      node0.isEquivalentToTyped(node1);
      node0.useSourceInfoIfMissingFrom(node3);
      node0.hasChildren();
      node1.getString();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(38, node0, node2);
      Node node4 = node1.copyInformationFrom(node3);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      node3.isEquivalentToTyped(node2);
      node3.isNot();
      node2.getChildCount();
      node3.isEmpty();
      node0.isUnscopedQualifiedName();
      node2.isInc();
      node4.isParamList();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      int int0 = 49;
      Node node0 = Node.newNumber((double) 49);
      Node node1 = new Node((-1178), node0, node0);
      Node node2 = node0.copyInformationFrom(node1);
      node2.appendStringTree((Appendable) null);
      node0.removeFirstChild();
      Node node3 = null;
      try {
        node3 = new Node(int0, node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node0.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node0.isThrow();
      node0.isAssignAdd();
      Node node1 = new Node(53, node0, node0, node0);
      node1.isTry();
      node1.isQualifiedName();
      node1.isVarArgs();
      Node node2 = new Node(2, 238, 49);
      node2.setVarArgs(true);
      node2.hasMoreThanOneChild();
      node2.getSourcePosition();
      node2.isFunction();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node1.isCase();
      Node node2 = new Node(1434, node0, node1);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(1641, nodeArray0, (-3067), 2);
      Node node4 = node3.copyInformationFrom(node2);
      node2.hasOneChild();
      node0.isGetterDef();
      Node node5 = new Node(50, node2, node2, node4, node3);
      Node node6 = node2.srcref(node5);
      Node node7 = node5.cloneTree();
      node7.setSourceEncodedPosition(13);
      node0.siblings();
      node4.isNoSideEffectsCall();
      node7.isEmpty();
      node6.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = new Node(0, 0, 1620);
      Node node1 = new Node(47, node0, node0, 37, 0);
      node0.getStaticSourceFile();
      node1.siblings();
      node1.setChangeTime(31);
      Node node2 = Node.newString(0, "j<t,i`|t4#z]", 45, (-1056));
      node1.isArrayLit();
      node2.isCall();
      node1.setWasEmptyNode(false);
      node2.setIsSyntheticBlock(false);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node node1 = Node.newString(4496, "`d");
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node2 = new Node(43, node0, node0, node0);
      node2.isContinue();
      node0.isTry();
      node2.isQualifiedName();
      node1.isVarArgs();
      node2.setVarArgs(false);
      node2.hasMoreThanOneChild();
      node0.getSourcePosition();
      node2.isNumber();
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.isContinue();
      node0.isTry();
      node0.isQualifiedName();
      node0.isThis();
      node0.setVarArgs(false);
      node1.hasMoreThanOneChild();
      node0.setType(55);
      node1.isVoid();
      InputId inputId0 = new InputId("`d");
      node1.isSwitch();
      node1.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newNumber((-23.905667161527806), 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newString("NULL_TYPE");
      Node node4 = node0.copyInformationFrom(node3);
      node4.getBooleanProp(4095);
      node0.hasOneChild();
      node4.isSyntheticBlock();
      node1.isUnscopedQualifiedName();
      node4.isEquivalentToTyped(node0);
      Node.newString("com.google.javascript.rhino.jstype.PropertyMap$1");
      node0.isFromExterns();
      node1.setWasEmptyNode(true);
      Node node5 = Node.newNumber((double) 29);
      node2.getJSDocInfo();
      node4.getLength();
      node0.addSuppression("V0>!{EC");
      node5.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = Node.newNumber((double) 46, 49, 52);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      jSDocInfo0.setModifies((Set<String>) null);
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.createTemplateType("com.google.common.base.Equivalence$EquivalentToPredicate");
      node1.getBooleanProp((-2568));
      boolean boolean0 = node0.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node1.getSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.isContinue();
      Node node2 = Node.newNumber((double) 52);
      Node node3 = new Node(40, node1, node2, node2);
      node1.isTry();
      node0.isQualifiedName();
      Node node4 = new Node(683, node3, node0, node1, 90, 499);
      node4.isVarArgs();
      node4.setVarArgs(boolean0);
      node2.hasMoreThanOneChild();
      Node node5 = new Node(node4.NO_SIDE_EFFECTS, node4);
      node5.getSourcePosition();
      // Undeclared exception!
      try { 
        node4.isNumber();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node node0 = Node.newString(4496, "`d");
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(112);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node1 = new Node(0, node0, node0, node0);
      node1.isContinue();
      node0.isTry();
      node1.isQualifiedName();
      node1.isVarArgs();
      node0.setVarArgs(false);
      node0.hasMoreThanOneChild();
      node1.getSourcePosition();
      node1.isNumber();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = node0.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags(29);
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags5.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags();
      node_SideEffectFlags7.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags8 = new Node.SideEffectFlags();
      node_SideEffectFlags8.setMutatesArguments();
      node0.isThrow();
      Node node2 = new Node(32, 48, (-821));
      node2.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node3 = Node.newString("");
      node2.isFromExterns();
      node1.setWasEmptyNode(false);
      Node node4 = new Node(53, node0, node3, (Node) null, node2);
      node4.getJSDocInfo();
      int int0 = (-1258);
      node2.setLineno(int0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(37, "jc<6");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setSourceEncodedPositionForTree(51);
      node2.isEquivalentTo(node1);
      node_SideEffectFlags0.setMutatesThis();
      node1.setCharno(2);
      node1.isOnlyModifiesThisCall();
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node0.isEquivalentTo(node1);
      node0.getProp(1554);
      node2.isLabelName();
      node2.getExistingIntProp(30);
      node1.isParamList();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = 1640;
      Node[] nodeArray0 = new Node[2];
      Node node0 = null;
      Node node1 = new Node(38, (Node) null, (Node) null, 149, 85);
      nodeArray0[0] = node1;
      int int1 = (-1747);
      // Undeclared exception!
      try { 
        Node.newNumber((double) node1.STATIC_SOURCE_FILE, node1.COLUMN_MASK, int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node0.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(30);
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node0.addSuppression("OM3U(O1W`~b(");
      node0.hasChild(node0);
      Node node1 = Node.newString("OM3U(O1W`~b(");
      node1.isFromExterns();
      node1.setWasEmptyNode(false);
      Node node2 = Node.newNumber((double) 57);
      node1.getJSDocInfo();
      node2.getLength();
      node0.addSuppression("qe%B@J");
      node2.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = new Node(601, 601, (-513));
      Node node1 = new Node(601, node0, node0, node0, 32, 37);
      node0.getStaticSourceFile();
      node1.siblings();
      node1.setChangeTime(31);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setThrows();
      node_SideEffectFlags8.setMutatesArguments();
      node0.setSideEffectFlags(node_SideEffectFlags6);
      node1.isThrow();
      // Undeclared exception!
      try { 
        node1.isDo();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 601
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.isNull();
      node0.toString();
      Node node1 = new Node(46, node0, node0, node0, node0, 12, 55);
      node1.isEquivalentToTyped(node0);
      node0.isLabel();
      Node node2 = new Node(52, node1);
      Node.newNumber(1.0, 47, 52);
      Node node3 = Node.newString("STRING jsdoc_info");
      Node node4 = new Node(47, node0, node3, node0, 4095, (-19));
      node4.isBreak();
      node1.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = Node.newString(1327, "", 1047, 1327);
      Node node1 = Node.newString(37, "O-BjLY^Wg[%y0:t", 309, 8);
      node1.children();
      node1.isVoid();
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node2.isEquivalentToTyped(node1);
      node1.isContinue();
      node3.isNE();
      Node node4 = node3.srcref(node0);
      node4.isTry();
      node4.isQualifiedName();
      node2.isVarArgs();
      node2.setVarArgs(false);
      Node node5 = Node.newString("mx>)J)j(qm", 16, 155);
      Node node6 = new Node(126, node1, node5, node3);
      Node node7 = new Node(47, node6);
      node7.hasMoreThanOneChild();
      node4.getSourcePosition();
      Node node8 = Node.newString((-1265), "jCn!4fum{rR>$[<7C", 118, 42);
      node8.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setSourceEncodedPositionForTree(51);
      node1.isEquivalentTo(node0);
      node_SideEffectFlags0.setMutatesThis();
      node0.setCharno(2);
      node0.isOnlyModifiesThisCall();
      node0.setSideEffectFlags(node_SideEffectFlags0);
      node0.isEquivalentTo(node0);
      int int0 = 1554;
      node0.getProp(int0);
      // Undeclared exception!
      try { 
        node1.isLabelName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got IN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = new Node(38, node0, 55, 37);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(32);
      node1.getInputId();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node2 = new Node(51, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.isContinue();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      Node node3 = Node.newString("synthetic");
      Node node4 = node0.copyInformationFrom(node3);
      node3.getBooleanProp(33);
      node3.hasOneChild();
      node2.isSyntheticBlock();
      node4.isUnscopedQualifiedName();
      node1.isEquivalentToTyped(node2);
      Node.newString("kV@UR'xy");
      node1.isFromExterns();
      node3.setWasEmptyNode(false);
      Node.newNumber((double) 57);
      node3.getJSDocInfo();
      node0.getLength();
      Node node5 = Node.newNumber(0.5, 1, 63);
      node5.addSuppression("");
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(38, node0, node2);
      Node node4 = node1.copyInformationFrom(node3);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      node3.isEquivalentToTyped(node2);
      node3.setSourceEncodedPosition(38);
      Node node5 = Node.newNumber(1.0);
      node5.setType(36);
      Node node6 = node0.detachFromParent();
      Node node7 = node6.srcrefTree(node2);
      node7.setVarArgs(false);
      node2.getJSDocInfo();
      node3.getDirectives();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node4.isThis();
      node5.isTypeOf();
      node5.getLastChild();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      node2.useSourceInfoIfMissingFromForTree(node1);
      String string0 = "{A\\7azKt&,3]hT";
      node2.setSourceFileForTesting("{A\u0007azKt&,3]hT");
      Node node3 = new Node((-1392), node1, node0, node2, node1);
      node0.isContinue();
      node1.getSourceOffset();
      node3.isFromExterns();
      node1.getSideEffectFlags();
      node3.isCase();
      // Undeclared exception!
      try { 
        node0.siblings();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String string0 = "mK?/y7o9cW";
      int int0 = 536870912;
      Node node0 = Node.newString("mK?/y7o9cW", 536870912, 536870912);
      node0.isQuotedString();
      Node node1 = new Node(55);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = Node.newString("xQFW=28u");
      node0.getStaticSourceFile();
      node0.isBreak();
      node0.isReturn();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("O-BjLY^Wg[%y0:t", true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newNumber(2144.70961290997);
      node0.isLabelName();
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      String string0 = "mx>)J)j(qm";
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.setSourceEncodedPositionForTree(57);
      node1.isEquivalentTo(node0);
      node2.wasEmptyNode();
      node0.setSourceFileForTesting("jc<6");
      node2.isOnlyModifiesArgumentsCall();
      node2.getSourceOffset();
      node0.getLength();
      node2.isFromExterns();
      node2.isCase();
      node0.siblings();
      // Undeclared exception!
      try { 
        node2.setType(node0.INFERRED_FUNCTION);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number 0
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = Node.newString("xQFW=28u");
      node0.getStaticSourceFile();
      node0.isBreak();
      node0.isSyntheticBlock();
      Node node1 = new Node(2, nodeArray0, 8, 4);
      node1.isEquivalentToTyped(node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(37, "jc<6");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.setSourceFileForTesting("QS/,LOTw(%T");
      node1.isOnlyModifiesArgumentsCall();
      node1.getBooleanProp(53);
      node0.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(0, node2, node1);
      Node node4 = node3.copyInformationFrom(node0);
      node3.hasOneChild();
      node4.isSyntheticBlock();
      node0.isEquivalentToTyped(node3);
      Node node5 = Node.newString("QS/,LOTw(%T");
      node5.isNot();
      node2.getChildCount();
      node1.isEmpty();
      node4.isUnscopedQualifiedName();
      node1.isInc();
      node3.isParamList();
      node5.copyInformationFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2766);
      node_SideEffectFlags0.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.isNull();
      node0.toString();
      Node node1 = new Node(46, node0, node0, node0, node0, 12, 55);
      node1.isEquivalentToTyped(node0);
      node0.isLabel();
      Node node2 = new Node(52, node1);
      Object object0 = new Object();
      node0.putProp(37, object0);
      Node node3 = new Node(55, (Node[]) null);
      node3.removeChild(node0);
      int int0 = 1243;
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newNumber(1330.3865774, 19, (-2520));
      node0.isNew();
      node0.getQualifiedName();
      node0.isCase();
      Node node1 = Node.newString(0, "CHECKED_UNKNOWN_TYPE", 1, 4095);
      node1.isNE();
      node1.removeProp(39);
      node1.removeChildren();
      node1.getAncestor(31);
      node1.isRegExp();
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString("O-BjLY^Wg[%y0:t", 508, 4);
      node1.isCase();
      Node node2 = Node.newString(39, "O-BjLY^Wg[%y0:t");
      node2.setSourceFileForTesting((String) null);
      node2.isUnscopedQualifiedName();
      Node node3 = new Node(40, node0, node2, 116, (-1280));
      node2.getDouble();
      node3.setType(node0.VAR_ARGS_NAME);
      node2.isVoid();
      node2.getJSDocInfo();
      node3.getDirectives();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      String string0 = "null";
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      node1.isScript();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, templateType0);
      node2.isVarArgs();
      node0.isDefaultCase();
      node0.isWith();
      node1.getChildCount();
      node0.getDirectives();
      node0.setWasEmptyNode(true);
      Node node3 = new Node(51, node1, node1, 1479, (-1053));
      node3.setType(16);
      node3.isVoid();
      node0.checkTreeEquals(node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      String string0 = "^\"h SW";
      node_FileLevelJsDocBuilder0.append(string0);
      node3.isThrow();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(38, node0, node2);
      Node node4 = node1.copyInformationFrom(node3);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      node3.isEquivalentToTyped(node2);
      node1.getAncestors();
      node3.isNot();
      node2.getChildCount();
      node3.isEmpty();
      node1.isThis();
      node1.isTypeOf();
      node0.getLastChild();
      node4.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node1.isCast();
      node0.isTry();
      node0.isQualifiedName();
      node0.isThis();
      node0.setVarArgs(false);
      node1.hasMoreThanOneChild();
      node0.setType(55);
      node1.isVoid();
      InputId inputId0 = new InputId("`d");
      node1.isSwitch();
      node1.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newString((-5032), "INVARIANT");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isContinue();
      node0.isTry();
      node0.isQualifiedName();
      node0.isThis();
      node0.setVarArgs(false);
      node0.hasMoreThanOneChild();
      node0.setType(19);
      node0.isVoid();
      InputId inputId0 = new InputId("INVARIANT");
      Node node1 = Node.newString(47, "INVARIANT");
      Node node2 = new Node(56, node0, node1, 12, 8);
      node2.isSwitch();
      node2.getStaticSourceFile();
      Node.extractCharno(46);
      node2.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(37, "jc<6");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setSourceEncodedPositionForTree(51);
      node1.isEquivalentTo(node1);
      node_SideEffectFlags0.setMutatesThis();
      node1.setCharno(2);
      node1.isOnlyModifiesThisCall();
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node0.isEquivalentTo(node1);
      node0.getProp(1554);
      node0.isLabelName();
      node1.getExistingIntProp(30);
      node1.isParamList();
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = new Node(51, 51, 51);
      node0.toStringTree();
      node0.isGetProp();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setSourceEncodedPositionForTree(51);
      node1.isEquivalentTo(node0);
      node_SideEffectFlags0.setMutatesThis();
      node0.setCharno(2);
      node0.isOnlyModifiesThisCall();
      node0.setSideEffectFlags(node_SideEffectFlags0);
      node0.isEquivalentTo(node0);
      int int0 = 1554;
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node2.isEquivalentToTyped(node1);
      node1.isContinue();
      node0.isDelProp();
      Node node4 = node3.srcref(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      node4.isContinue();
      node4.isTry();
      node4.isQualifiedName();
      node2.isVarArgs();
      node2.setVarArgs(false);
      Node node5 = Node.newString("mx>)J)j(qm", 16, 155);
      Node node6 = new Node(126, node1, node5, node3);
      Node node7 = new Node(47, node6);
      node7.isFromExterns();
      node3.isNE();
      node4.getSourcePosition();
      node6.getIndexOfChild(node4);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = new Node((-2848), (-2520), 55);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.getDirectives();
      node0.isScript();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(4095);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, node2);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, templateType1);
      node1.isVarArgs();
      node2.isDefaultCase();
      node2.isWith();
      node1.getChildCount();
      node0.getDirectives();
      node1.setWasEmptyNode(false);
      Node node3 = new Node((-6146), node1, node2, 105, 32);
      node1.setType(3778);
      node0.isVoid();
      node3.checkTreeEquals(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      String string0 = " %U+";
      node_FileLevelJsDocBuilder0.append(string0);
      Node node4 = Node.newString(string0);
      node4.isThrow();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      int int0 = Node.FREE_CALL;
      Node node0 = Node.newString(50, "", 0, 50);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isThrow();
      node2.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.getAncestors();
      Node node3 = new Node((-3467), node2);
      Node node4 = Node.newString("vj~?NR93h!{w.Y");
      node4.getProp(96);
      node1.isFalse();
      node4.isEmpty();
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      String string0 = "xQFW=28u";
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[5];
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[4];
      JSTypeNative jSTypeNative0 = JSTypeNative.NO_RESOLVED_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.REFERENCE_ERROR_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.GREATEST_FUNCTION_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.REFERENCE_ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      jSTypeArray0[0] = jSType0;
      JSType.toMaybeFunctionType(jSType0);
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        ImmutableList.of(jSType0, jSTypeArray0[0], jSType0, jSTypeArray0[0], jSTypeArray0[0], (JSType) null, jSTypeArray0[0], jSType0, (JSType) null, jSTypeArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 5
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      node1.setString("jc<6");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node node2 = Node.newString("jc<6");
      node0.getStaticSourceFile();
      node0.isBreak();
      node0.isReturn();
      node2.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      Node node1 = Node.newString(509, "");
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(38, node0, node2);
      node3.setSideEffectFlags((Node.SideEffectFlags) null);
      node1.copyInformationFrom(node3);
      int int0 = 43;
      node1.getBooleanProp(int0);
      node1.hasOneChild();
      node3.isCase();
      String string0 = "O-BjLY^Wg[%y0:t";
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.setSourceEncodedPositionForTree(52);
      node1.isEquivalentTo(node0);
      node0.setCharno(53);
      node2.isOnlyModifiesThisCall();
      node1.children();
      node2.setSideEffectFlags(node_SideEffectFlags0);
      node2.getStaticSourceFile();
      node1.isEquivalentTo(node0);
      node2.getProp(node0.IS_CONSTANT_NAME);
      node1.isLabelName();
      int int0 = 4579;
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(37, "jc<6");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setSourceEncodedPositionForTree(51);
      node2.isEquivalentTo(node1);
      node_SideEffectFlags0.setMutatesThis();
      node1.useSourceInfoFrom(node2);
      node_SideEffectFlags0.setReturnsTainted();
      node1.setCharno(2);
      node1.isOnlyModifiesThisCall();
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node0.isEquivalentTo(node1);
      node0.getProp(1554);
      Node node3 = Node.newNumber((-63.568120745494));
      node3.getChildCount();
      node0.isEmpty();
      node1.isUnscopedQualifiedName();
      Node node4 = new Node(4);
      node4.isInc();
      node3.isParamList();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = new Node(15);
      Node node1 = new Node(47, node0, node0, 37, 0);
      node1.siblings();
      node1.setChangeTime(31);
      node0.getProp(127);
      Node.newNumber((double) 1);
      node1.getChildCount();
      node0.isEmpty();
      node1.isUnscopedQualifiedName();
      Node node2 = new Node(122);
      node1.isInc();
      Node node3 = Node.newString("");
      node3.isParamList();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = new Node(15);
      Node node1 = new Node(155, node0, node0, 122, 36);
      node1.siblings();
      node0.setChangeTime((-583));
      Node.newString(48, "", 313, 2);
      node0.isArrayLit();
      node0.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(true);
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newNumber((-23.905667161527806), 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      node1.setSourceFileForTesting("mx>)J)j(qm");
      node0.isOnlyModifiesArgumentsCall();
      node0.getBooleanProp(57);
      node2.isOnlyModifiesArgumentsCall();
      node2.getLength();
      Node node3 = new Node(1610612736, node1, node0, 15, (-1929));
      node3.getSideEffectFlags();
      int int0 = 147;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
      node_SideEffectFlags0.clearSideEffectFlags();
      node1.isContinue();
      Node.newNumber((double) node1.IS_DISPATCHER);
      int int1 = 1980;
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node1.isCast();
      node0.isTry();
      node0.isQualifiedName();
      node0.isThis();
      node0.removeChildren();
      node1.getAncestor((-213));
      node1.isRegExp();
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      node1.isScript();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, templateType0);
      node2.isVarArgs();
      node0.isDefaultCase();
      node0.isWith();
      node1.getChildCount();
      node0.getDirectives();
      node0.setWasEmptyNode(true);
      Node node3 = new Node(51, node1, node1, 1479, (-1053));
      node3.setType(16);
      node3.isVoid();
      node1.getInputId();
      node1.setInputId((InputId) null);
      node1.isHook();
      node0.addChildToBack(node2);
      Node node4 = node1.copyInformationFrom(node2);
      node1.isObjectLit();
      node4.replaceChild(node3, node1);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.isCast();
      node0.hasMoreThanOneChild();
      node0.isVoid();
      InputId inputId0 = new InputId("`d");
      node0.isSwitch();
      node0.getStaticSourceFile();
      node0.addChildrenToFront((Node) null);
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isCase();
      node0.siblings();
      Node node2 = new Node(57, node1, node0, 30, 42);
      node2.getSourcePosition();
      node2.isNumber();
      node0.isGetProp();
      node1.isCatch();
      node2.getBooleanProp(1084);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      node1.isScript();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, templateType0);
      node2.isVarArgs();
      node0.isDefaultCase();
      node0.isWith();
      node1.getChildCount();
      Node node3 = new Node((-767), node1, node1, 12, 43);
      Node node4 = new Node(57, node1, 8, 12);
      node4.getAncestors();
      node3.mayMutateGlobalStateOrThrow();
      int int0 = 4003;
      // Undeclared exception!
      try { 
        Node.newNumber((double) node0.FLAG_THIS_UNMODIFIED, functionType0.ENUMDECL, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isCase();
      node0.siblings();
      Node node2 = new Node(57, node1, node0, 30, 42);
      node2.getSourcePosition();
      node2.isNumber();
      node0.isGetProp();
      node1.isCatch();
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(30);
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node0.isThrow();
      node0.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = Node.newString("");
      node0.isFromExterns();
      node1.setWasEmptyNode(false);
      node1.getJSDocInfo();
      node0.setLineno(42);
      node0.setLineno(39);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting((String) null);
      node2.detachChildren();
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node0.isFromExterns();
      node1.getSideEffectFlags();
      node0.isCase();
      node2.siblings();
      node0.setType(40);
      node0.isVoid();
      node2.setString("mx>)J)j(qm");
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Iterator<JSType> iterator0 = (Iterator<JSType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-667));
      node_SideEffectFlags0.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newNumber((-23.905667161527806), 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      simpleSourceFile0.getLineOffset(2418);
      node2.setStaticSourceFile(simpleSourceFile0);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node2.getSourceOffset();
      node1.setLength(0);
      node0.getLength();
      node0.isFromExterns();
      node0.isCase();
      node1.siblings();
      node0.setType(40);
      node1.isStringKey();
      node0.isVoid();
      node0.isExprResult();
      node2.setString("mx>)J)j(qm");
      node2.getLength();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = new Node(2939);
      Node node2 = new Node(1322, node1, node0, 32, 56);
      node1.siblings();
      node0.setChangeTime(1377);
      String string0 = "";
      Node node3 = Node.newString(46, "", 40, 338);
      node3.isArrayLit();
      node2.setWasEmptyNode(true);
      node2.setIsSyntheticBlock(true);
      node0.isNew();
      node0.getChangeTime();
      node3.checkTreeEquals(node0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(52);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, false, "B");
      Locale locale0 = Locale.ITALIAN;
      Object[] objectArray0 = new Object[0];
      PrintStream printStream0 = mockPrintStream0.format(locale0, string0, objectArray0);
      node1.appendStringTree(printStream0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newString(37, "j'<6");
      node0.setSourceEncodedPositionForTree(62);
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString("", 37, 1110);
      node0.isNew();
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(56, "l3&/})");
      node1.setSourceEncodedPositionForTree((-1323));
      Node node2 = new Node(0);
      Node node3 = new Node(1, node1, node0, node2, node0);
      node3.isOnlyModifiesThisCall();
      Node node4 = Node.newString("IN\n", 1, 0);
      node4.clonePropsFrom(node2);
      node2.isVarArgs();
      node2.isWith();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      int int0 = (-337);
      Node[] nodeArray0 = new Node[2];
      String string0 = "CicWO";
      Node node0 = Node.newString(44, "CicWO");
      nodeArray0[0] = node0;
      Node node1 = Node.newString(4095, " @8`0sy9Y;,3-H'", (-28), 36);
      Node.newNumber((double) 57);
      nodeArray0[1] = node1;
      Node node2 = new Node(44, nodeArray0, (-1107), 38);
      node0.addChildToFront(node0);
      Node node3 = Node.newString(node0.COLUMN_MASK, string0);
      Node node4 = new Node(int0, node2, nodeArray0[0], node3);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        node4.toString(boolean0, boolean0, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isCase();
      Node node3 = Node.newString("");
      Node node4 = new Node(4, node1, node3, node0, 36, 39);
      node3.isBreak();
      node2.isNoSideEffectsCall();
      JSTypeNative jSTypeNative0 = JSTypeNative.SYNTAX_ERROR_TYPE;
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node4);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString("O-BjLY^Wg[%y0:t", 508, 48);
      node1.isCase();
      node0.siblings();
      Node node2 = Node.newString(39, "O-BjLY^Wg[%y0:t");
      Node node3 = new Node(38, node2, 1, 116);
      node1.addChildToFront(node3);
      Node node4 = Node.newString(42, "O-BjLY^Wg[%y0:t");
      Node node5 = new Node(147, node1, node3, node4);
      boolean boolean0 = true;
      boolean boolean1 = true;
      node1.toString(boolean0, boolean1, boolean0);
      node1.useSourceInfoFromForTree(node4);
      node5.srcrefTree(node4);
      node4.isIn();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.isNull();
      node0.toString();
      Node node1 = new Node(46, node0, node0, node0, node0, 12, 55);
      node1.isEquivalentToTyped(node0);
      node0.isLabel();
      Node node2 = new Node(52, node1);
      Node.newNumber(1.0, 47, 52);
      Node node3 = Node.newString("STRING jsdoc_info");
      node3.setSideEffectFlags(40);
      int int0 = 11;
      int int1 = 155;
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString("O-BjLY^Wg[%y0:t", 508, 48);
      node1.isCase();
      node0.siblings();
      Node node2 = Node.newString(39, "O-BjLY^Wg[%y0:t");
      node1.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node1.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(0, node2, node0);
      Node node4 = node2.copyInformationFrom(node3);
      node2.hasOneChild();
      node0.isSyntheticBlock();
      node4.isEquivalentToTyped(node2);
      Node node5 = Node.newString("jc<6");
      node4.isNot();
      node5.getChildCount();
      node2.isEmpty();
      Node node6 = Node.newString("jc<6");
      node6.isUnscopedQualifiedName();
      node5.isInc();
      node5.isParamList();
      Node node7 = new Node((-2538));
      node7.copyInformationFrom(node2);
      node0.isInstanceOf();
      node5.isOnlyModifiesThisCall();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node1);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
      node0.isEquivalentToShallow(node7);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node1.isCast();
      node0.isTry();
      node0.isQualifiedName();
      node0.isThis();
      node0.setVarArgs(false);
      node1.hasMoreThanOneChild();
      node0.setType(55);
      node1.isVoid();
      InputId inputId0 = new InputId("`d");
      node0.isNoSideEffectsCall();
      node1.addChildBefore(node0, node0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node0.isCase();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(1641, nodeArray0, (-3067), 2);
      node1.isEmpty();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Iterator<JSType> iterator0 = (Iterator<JSType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = Node.newString("Object#Element", 1110, 1110);
      node0.isNew();
      node0.isAdd();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      int int0 = (-3252);
      Node node0 = new Node((-3252));
      int int1 = 1092;
      // Undeclared exception!
      try { 
        node0.setDouble((-3252));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3252
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newString("O-BjLY^Wg[%y0:t", 508, 48);
      node0.isCase();
      node0.toString(true, false, true);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      node1.isScript();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      node2.isVarArgs();
      node2.srcref(node1);
      Node node3 = Node.newNumber((double) 38);
      node3.getExistingIntProp((-1917));
      Node node4 = null;
      Node node5 = null;
      try {
        node5 = new Node(node0.FLAG_ARGUMENTS_UNMODIFIED, node4, node1, node3, node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -1917
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString("O-BjLY^Wg[%y0:t", 57, 48);
      node1.isCase();
      node0.siblings();
      Node node2 = Node.newString(39, "O-BjLY^Wg[%y0:t");
      node2.setSourceFileForTesting((String) null);
      node2.isUnscopedQualifiedName();
      Node node3 = new Node(40, node0, node2, 116, (-1280));
      node3.setType(30);
      node2.isVoid();
      node0.setQuotedString();
      node2.setWasEmptyNode(false);
      node0.isEquivalentToTyped(node1);
      node2.checkTreeEquals(node1);
      node2.hasChild(node0);
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      int int0 = Node.CHANGE_TIME;
      Node node0 = Node.newString(56, "", 0, 56);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = new Node(57, node0, node0, node0, node0);
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node0.isQualifiedName();
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(38, node0, node2);
      node1.copyInformationFrom(node3);
      node2.isOptionalArg();
      node1.hasOneChild();
      node1.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node3.isUnscopedQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("O-BjLY^Wg[%y0:t", true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newNumber((double) 48);
      node0.isAssign();
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newString("O-BjLY^Wg[%y0:t");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(39);
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node1 = new Node(43, node0, node0, node0);
      node1.isContinue();
      node0.isTry();
      node1.isQualifiedName();
      Node node2 = Node.newString(39, "O-BjLY^Wg[%y0:t", 57, 32);
      Node node3 = new Node(85, node2, node2, node2, node1, 53, 48);
      Node node4 = node3.removeChildren();
      node4.getAncestor((-1366));
      node2.isRegExp();
      Node[] nodeArray0 = new Node[0];
      int int0 = 34;
      Node node5 = null;
      try {
        node5 = new Node(node1.MAX_COLUMN_NUMBER, nodeArray0, node4.INFERRED_FUNCTION, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("O-BjLY^Wg[%y0:t", true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newNumber((double) 48);
      node0.setType(233520);
      node0.isVoid();
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.isHook();
      Node node1 = Node.newString("unexpected prop id ");
      node0.addChildToBack(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isObjectLit();
      node0.replaceChild(node1, node2);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      node1.isScript();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, templateType0);
      node2.isVarArgs();
      node0.isDefaultCase();
      node0.isWith();
      node1.getChildCount();
      node0.getDirectives();
      node0.setWasEmptyNode(true);
      Node node3 = new Node(51, node1, node1, 1479, (-1053));
      Node node4 = Node.newString((-2521), "Named type with empty name component", 49, 44);
      node3.addChildrenToFront(node4);
      node2.isAssign();
      node3.isParamList();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = Node.newString("O-BjLY^Wg[%y0:t");
      node2.setSourceFileForTesting("NSMPVdo%TsFMHmgL");
      node1.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      Node node4 = new Node(36, 54, 0);
      Node node5 = Node.newString(30, "incrdecr");
      Node node6 = Node.newString("second new child has existing parent");
      node3.getStaticSourceFile();
      node6.toString(false, false, false);
      node4.useSourceInfoFromForTree(node0);
      Node node7 = node5.srcrefTree(node3);
      node7.setSourceEncodedPositionForTree(36);
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(15, node0, node0, node0, node0, 50, 29);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node0.isFromExterns();
      node1.getSideEffectFlags();
      node0.isCase();
      Iterable<Node> iterable0 = new Stack<Node>();
      node0.setType(40);
      node0.isVoid();
      node2.setString("mx>)J)j(qm");
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node2.isEquivalentToTyped(node1);
      node1.isContinue();
      node0.isDelProp();
      Node node4 = node3.srcref(node0);
      node1.getBooleanProp(12);
      node4.hasOneChild();
      node2.isSyntheticBlock();
      node4.isUnscopedQualifiedName();
      node4.isEquivalentToTyped(node2);
      Node node5 = Node.newString("mx>)J)j(qm");
      Node node6 = new Node(2026);
      Node node7 = Node.newNumber((double) 52, (-2953), 32);
      Node node8 = Node.newNumber(2638.10961533);
      node8.isEmpty();
      node1.isUnscopedQualifiedName();
      node7.isFalse();
      node5.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = Node.newString((-1828), "O-BjLY^Wg[%y0:t");
      node0.isIf();
      node0.setSourceFileForTesting("ln7CS");
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newNumber(0.0, 154, 57);
      node1.getDouble();
      Node node2 = Node.newNumber(0.0, 32, 2147483645);
      Node node3 = node2.detachFromParent();
      node3.toString();
      node3.setDouble(node0.LENGTH);
      node0.isDebugger();
      node0.getAncestors();
      node0.isWith();
      node1.getString();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newNumber((-23.905667161527806), 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = Node.newNumber((double) 0, 2, 15);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.type = 396;
      int int0 = Node.INFERRED_FUNCTION;
      node0.getLength();
      node0.isFromExterns();
      int int1 = Node.IS_NAMESPACE;
      node0.isCase();
      Node node4 = node3.copyInformationFrom(node2);
      node0.hasOneChild();
      node0.isSyntheticBlock();
      node2.isEquivalentToTyped(node4);
      node4.setType(36);
      Node node5 = new Node(48, node1, node0, node3, node3);
      node5.checkTreeTypeAwareEqualsImpl(node4);
      node5.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(15, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node1.isDo();
      Node.newNumber(2118.05, 57, 1642);
      node2.setType(1);
      node2.isStringKey();
      node2.isVoid();
      node1.isWith();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      node1.isScript();
      jSDocInfo0.getTypedefType();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.setSourceFileForTesting((String) null);
      node1.isOnlyModifiesArgumentsCall();
      node1.getSourceOffset();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of(templateType0, templateType0, templateType0);
      UnmodifiableIterator<TemplateType> unmodifiableIterator0 = immutableList0.iterator();
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Iterator<? extends JSType>) unmodifiableIterator0);
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      ImmutableList.of(jSDocInfo0);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      node2.isFromExterns();
      Node node4 = new Node(2147479552, node3, node0, node3, node2, 507, 2);
      node4.getSideEffectFlags();
      node2.isCase();
      node4.siblings();
      node4.setType(46);
      node2.isVoid();
      node3.isInstanceOf();
      node2.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString("O-BjLY^Wg[%y0:t");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node1 = new Node(37, node0, node0, node0, 46, 4);
      node1.isContinue();
      node0.isTry();
      node1.isQualifiedName();
      node0.isVarArgs();
      node1.setVarArgs(false);
      node1.hasMoreThanOneChild();
      node0.getSourcePosition();
      node1.isNumber();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.isNull();
      node0.toString();
      Node node1 = new Node(46, node0, node0, node0, node0, 12, 55);
      node1.isEquivalentToTyped(node0);
      Node node2 = Node.newString((-11), "STRING jsdoc_info", 48, 4095);
      Node node3 = Node.newNumber((-1.0));
      Node node4 = Node.newString(54, " @8`0sy9Y;,3-H'", 31, 36);
      Node node5 = Node.newString("STRING jsdoc_info", 29, 54);
      node5.addChildToFront(node3);
      Node node6 = Node.newString(40, "com.google.common.collect.ImmutableCollection");
      Node node7 = new Node(54, node6, node2, node1);
      node0.toString(true, false, false);
      node4.useSourceInfoFromForTree(node7);
      node0.srcrefTree(node2);
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      node1.isScript();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, templateType0);
      node2.isVarArgs();
      node0.isDefaultCase();
      node0.isWith();
      Node node3 = new Node((-4013), node0, node0, 4067, 49);
      node0.setType(4095);
      node2.isVoid();
      Node node4 = node3.useSourceInfoIfMissingFrom(node1);
      node4.hasChildren();
      node1.setString((String) null);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-28));
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isThrow();
      node1.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node2 = Node.newString("Object#Key");
      node2.isFromExterns();
      SimpleErrorReporter.getMessage0("com.google.common.collect.AbstractIterator");
      boolean boolean0 = false;
      node0.setWasEmptyNode(boolean0);
      // Undeclared exception!
      try { 
        node2.getJSDocInfo();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property com.google.common.collect.AbstractIterator
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      String string0 = "O-BjLY^Wg[%y0:t";
      Node node0 = Node.newString("O-BjLY^Wg[%y0:t");
      Node node1 = Node.newString(172032, "", 40, (-953));
      Node node2 = null;
      node0.isParamList();
      Node node3 = new Node(44, 1116, 57);
      Node node4 = node1.copyInformationFromForTree(node3);
      int int0 = 365;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node5 = jSTypeRegistry0.createParameters((JSType[]) null);
      int int1 = 751619276;
      int int2 = (-856);
      Node node6 = new Node(int0, node5, node3, node3, node3, int1, int2);
      node5.checkTreeTypeAwareEqualsImpl(node4);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      // Undeclared exception!
      try { 
        node0.isCase();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.isNull();
      node0.toString();
      Node node1 = new Node(46, node0, node0, node0, node0, 12, 55);
      node1.isEquivalentToTyped(node0);
      Node node2 = Node.newString((-11), "STRING jsdoc_info", 48, 4095);
      Node node3 = Node.newNumber((-1.0));
      Node node4 = Node.newString(54, " @8`0sy9Y;,3-H'", 31, 36);
      Node node5 = Node.newString("STRING jsdoc_info", 29, 54);
      node5.addChildToFront(node3);
      Node node6 = Node.newString(40, "STRING jsdoc_info");
      Node node7 = new Node(54, node6, node2, node1);
      node0.toString(true, true, true);
      node4.useSourceInfoFromForTree(node7);
      node0.srcrefTree(node2);
      node1.isIn();
      node6.isVar();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = new Node(2, node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      node1.useSourceInfoIfMissingFromForTree(node2);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node2.isEquivalentToTyped(node1);
      node1.isContinue();
      node0.isDelProp();
      Node node3 = new Node(39, node2, node2, node0, node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node3.SYNTHETIC_BLOCK_PROP);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      node3.isContinue();
      // Undeclared exception!
      try { 
        node3.isTry();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newNumber(1330.3865774, 19, (-2520));
      node0.isNew();
      node0.getQualifiedName();
      node0.isCase();
      Node node1 = Node.newString(0, "CHECKED_UNKNOWN_TYPE", 1, 4095);
      node1.isNE();
      node1.removeProp(39);
      Node node2 = node1.removeChildren();
      node1.getAncestor(31);
      node1.isTypeOf();
      Node node3 = new Node(43, node1, (Node) null, (Node) null);
      node3.addChildToFront(node1);
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.isNull();
      node0.toString();
      Node node1 = new Node(46, node0, node0, node0, node0, 12, 55);
      node1.isEquivalentToTyped(node0);
      node0.isLabel();
      Node node2 = new Node(52, node1);
      Node node3 = Node.newNumber(1.0, 47, 52);
      Node node4 = Node.newString("STRING jsdoc_info");
      node2.isBreak();
      Node node5 = Node.newNumber(1914.83533904, 124, 51);
      node5.isVoid();
      node0.getJSDocInfo();
      Node node6 = new Node(358, node2, node3, node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node6.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("jsdoc_info");
      node2.isThis();
      node4.isTypeOf();
      node2.getLastChild();
      node4.isBlock();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      node1.isScript();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, templateType0);
      node2.isVarArgs();
      node0.isDefaultCase();
      node0.isWith();
      node1.getChildCount();
      node0.getDirectives();
      node0.setWasEmptyNode(true);
      Node node3 = new Node(54, 57, 103);
      Node node4 = new Node(3906, node3, node3, 181, 2);
      Node node5 = new Node((-4615));
      node5.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(0, "Object#Key", 46, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(30, "Object#Key");
      node1.setStaticSourceFile((StaticSourceFile) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      node0.useSourceInfoIfMissingFromForTree((Node) null);
      String string0 = "O-BjLY^Wg[%y0:t";
      node0.setSourceFileForTesting(string0);
      int int0 = 49;
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newString((-632), "^9Ynv");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.isContinue();
      Node node1 = Node.newNumber((double) 37);
      Node node2 = new Node(309, node1, node0, node1);
      Node node3 = new Node(49, node2, node2);
      node3.isTry();
      node3.isQualifiedName();
      node0.isVarArgs();
      node0.setVarArgs(false);
      node2.hasMoreThanOneChild();
      node3.getSourcePosition();
      node3.isFunction();
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newNumber((-511.55503763));
      node0.isVarArgs();
      Node node1 = Node.newNumber((double) 2, 16, (-2338));
      node0.isBlock();
      node0.isGetElem();
      node0.getJsDocBuilderForNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "Q";
      JSType jSType0 = null;
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType objectType0 = ObjectType.cast((JSType) null);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of((TemplateType) null, (TemplateType) null, templateType0, templateType0, (TemplateType) null, (TemplateType) null, (TemplateType) null, (TemplateType) null);
      objectType0.getGreatestSubtype(templateType0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createConstructorType(string0, node1, node1, (JSType) objectType0, immutableList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      int int0 = Node.CHANGE_TIME;
      Node node0 = Node.newString(56, "", 0, 56);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = new Node(57, node0, node0, node0, node0);
      node1.setStaticSourceFile((StaticSourceFile) null);
      node1.copyInformationFrom(node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node0.isQualifiedName();
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      node0.getString();
      Node node3 = new Node(38, node0, node2);
      node1.copyInformationFrom(node3);
      node2.isOptionalArg();
      node1.hasOneChild();
      node1.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node3.isUnscopedQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node1.isCase();
      node0.getBooleanProp(13);
      node1.isOnlyModifiesArgumentsCall();
      node1.getLength();
      node1.getSideEffectFlags();
      node0.isCase();
      Node node2 = new Node(1, node0, node1);
      Node node3 = node2.copyInformationFrom(node0);
      node0.hasOneChild();
      node1.isExprResult();
      node3.isEquivalentToTyped(node1);
      node1.isNot();
      node1.getChildCount();
      node2.isEmpty();
      node2.srcrefTree(node0);
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newNumber((-23.905667161527806), 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      node1.setSourceFileForTesting("mx>)J)j(qm");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      templateType0.isBooleanObjectType();
      templateType0.toMaybeTemplateType();
      Node node3 = new Node(124);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, node3);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, functionType0);
      node0.isVarArgs();
      node2.isDefaultCase();
      node3.isWith();
      Node node4 = node3.copyInformationFrom(node1);
      node2.isUnscopedQualifiedName();
      node1.hasOneChild();
      node0.isSyntheticBlock();
      Node node5 = new Node(38, node4);
      node0.isEquivalentToTyped(node5);
      node2.isNot();
      node4.getChildCount();
      node5.isEmpty();
      node2.isUnscopedQualifiedName();
      node3.isInc();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      node1.isScript();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, templateType0);
      node2.isVarArgs();
      node0.isDefaultCase();
      node0.isWith();
      node0.setType(4095);
      node2.isVoid();
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      node3.hasChildren();
      node1.setString((String) null);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isCase();
      node0.siblings();
      Node node2 = new Node(57, node1, node0, 30, 42);
      node2.getSourcePosition();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("4ufPB5k),1UXS=ZdZ");
      node1.isThis();
      node2.isRegExp();
      node2.getType();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(37, "jc<6");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setSourceEncodedPositionForTree(51);
      node2.isEquivalentTo(node1);
      node_SideEffectFlags0.setMutatesThis();
      node1.useSourceInfoFrom(node2);
      node_SideEffectFlags0.setReturnsTainted();
      node1.setCharno(2);
      node1.isOnlyModifiesThisCall();
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node0.isEquivalentTo(node1);
      node0.getProp(1554);
      Node node3 = Node.newNumber((-63.568120745494));
      node3.getChildCount();
      node0.isEmpty();
      node2.isVoid();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = new Node(2, node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      node1.useSourceInfoIfMissingFromForTree(node2);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node2.isEquivalentToTyped(node1);
      node2.isName();
      node0.isDelProp();
      Node node3 = new Node(39, node2, node2, node0, node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node3.SYNTHETIC_BLOCK_PROP);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      node3.isContinue();
      // Undeclared exception!
      try { 
        node3.isTry();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString("O-BjLY^Wg[%y0:t", 508, 48);
      node1.isCase();
      node0.siblings();
      Node node2 = new Node(2000, node0, node0, 39, (-1280));
      node2.type = 157;
      node2.setType(30);
      node1.isVoid();
      node0.checkTreeEquals(node1);
      node2.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "jc<6");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(850);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node1.isCase();
      Node node2 = new Node(1434, node0, node1);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(1641, nodeArray0, (-3068), 2);
      Node node4 = node3.copyInformationFrom(node3);
      node2.hasOneChild();
      node0.isGetterDef();
      node3.removeChildAfter(node2);
      Node node5 = new Node(node2.IS_DISPATCHER, node3, node1, node0, node0.SLASH_V, node1.STATIC_SOURCE_FILE);
      node2.srcref(node5);
      node5.cloneTree();
      Node node6 = node2.useSourceInfoFromForTree(node0);
      node6.srcrefTree(node4);
      // Undeclared exception!
      try { 
        node3.isIn();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.UnknownType");
      node0.getJsDocBuilderForNode();
      node0.wasEmptyNode();
      node0.getInputId();
      node0.getDirectives();
      node0.detachChildren();
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.UnknownType", 1430, 27591);
      Node node2 = new Node(24, node0);
      node0.isEquivalentToShallow(node2);
      node2.mayMutateGlobalStateOrThrow();
      node0.getStaticSourceFile();
      node0.isAnd();
      node0.isDo();
      node0.isHook();
      node0.getBooleanProp((-111));
      node0.getInputId();
      node0.getJSDocInfo();
      node2.isDelProp();
      node0.getString();
      node1.setType(12);
      node2.isSetterDef();
      node2.getQualifiedName();
      node1.isSetterDef();
      Node node3 = node1.copyInformationFromForTree(node2);
      node3.setCharno(36);
      node3.isCase();
      node2.isNoSideEffectsCall();
      node2.setQuotedString();
      node3.isIn();
      node2.checkTreeEqualsImpl(node0);
      String string0 = ".iA0:-+";
      int int0 = 113;
      int int1 = (-2760);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(37, "jc<6");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.setSourceFileForTesting("QS/,LOTw(%T");
      node1.isOnlyModifiesArgumentsCall();
      node1.getBooleanProp(53);
      node2.setSourceFileForTesting("com.google.javascript.rhino.Node$SideEffectFlags");
      node0.isVarArgs();
      node2.isDefaultCase();
      node1.isWith();
      node1.setType(155);
      node2.isVoid();
      node2.useSourceInfoIfMissingFrom(node0);
      node1.hasChildren();
      node1.setString("^");
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newString("O-BjLY^Wg[%y0:t");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(39);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node1 = new Node(37, node0, node0, node0, 46, 4);
      node1.isContinue();
      node0.isTry();
      node1.isQualifiedName();
      node0.isVarArgs();
      node1.setVarArgs(false);
      node1.isVoid();
      node1.useSourceInfoIfMissingFrom(node0);
      node0.hasChildren();
      node1.setString("O-BjLY^Wg[%y0:t");
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      int int0 = Node.VAR_ARGS_NAME;
      Node node1 = Node.newNumber(0.0);
      node0.isVarArgs();
      node0.isDo();
      Node node2 = new Node(53, node0, node0, 4095, (-1211));
      node1.getIndexOfChild(node0);
      Node node3 = node1.getChildAtIndex(40960);
      node3.isIn();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      node0.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.isTry();
      node2.isQualifiedName();
      Node node3 = new Node((-105), node1, node1, node2, node1);
      node3.isVarArgs();
      node3.setVarArgs(true);
      node3.isVoid();
      node2.useSourceInfoIfMissingFrom(node1);
      node1.hasChildren();
      node1.setString("Object#Key");
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isCase();
      node0.siblings();
      Node node2 = new Node(57, node1, node0, 30, 42);
      node2.getSourcePosition();
      node2.isNumber();
      Node node3 = node2.srcref(node0);
      Node node4 = node3.cloneTree();
      Node node5 = Node.newString("`d", 56, 4);
      node4.srcrefTree(node5);
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`8d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(51);
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.isContinue();
      Node node2 = Node.newNumber((double) 57);
      node0.getAncestor(21);
      Node node3 = new Node(47, node2, node1, node0);
      node0.isTry();
      node2.isQualifiedName();
      node0.isVarArgs();
      boolean boolean0 = false;
      node1.addChildrenAfter(node2, node2);
      node0.setVarArgs(boolean0);
      node1.hasMoreThanOneChild();
      node2.getSourcePosition();
      node2.isNumber();
      // Undeclared exception!
      try { 
        node2.isGetProp();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isInc();
      node1.isTry();
      node2.isQualifiedName();
      node1.isThis();
      node0.setVarArgs(true);
      node2.hasMoreThanOneChild();
      node1.setType((-1852));
      node0.isContinue();
      Node node3 = new Node(123);
      node0.isInc();
      node3.isVar();
      node3.addChildBefore(node0, node2);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setLength(391);
      node0.isThrow();
      StringWriter stringWriter0 = new StringWriter(4095);
      node0.getString();
      String string0 = "jc<6";
      // Undeclared exception!
      try { 
        node0.addSuppression(string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(37, "jc<6");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setSourceEncodedPositionForTree(51);
      node1.isEquivalentTo(node1);
      node_SideEffectFlags0.setMutatesArguments();
      node1.setCharno(2);
      node1.isOnlyModifiesThisCall();
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node1.isVarArgs();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(15, nodeArray0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("IN\n", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      node2.siblings();
      node2.getSideEffectFlags();
      node2.isCase();
      node0.siblings();
      node0.isEquivalentToTyped(node2);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node1.setQuotedString();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node0.getBooleanProp(57);
      node1.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.isVarArgs();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
      node1.isDo();
      Node node2 = new Node(40, node0, node0, 4095, 46);
      node2.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      node1.isScript();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      node0.setJSType(jSType0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      node0.setStaticSourceFile((StaticSourceFile) null);
      node2.isEquivalentTo(node1, true, true, false);
      InputId inputId0 = new InputId("KfXIx+s0h9");
      inputId0.toString();
      Node node3 = new Node(2, node1, node0, node2, node2, 99, 42);
      node3.toString(true, true, false);
      String string0 = "jc<6";
      Node node4 = Node.newString(node2.COLUMN_MASK, string0);
      node4.useSourceInfoFromForTree(node1);
      node3.srcrefTree(node4);
      node0.isIn();
      // Undeclared exception!
      try { 
        node1.isVar();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node2.wasEmptyNode();
      Node node3 = new Node(38, node0, node2);
      Node node4 = node1.copyInformationFrom(node3);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      node3.isEquivalentToTyped(node2);
      node3.setSourceEncodedPosition(77);
      Node node5 = Node.newNumber(1.0);
      node5.getAncestor(0);
      node5.setType(36);
      node0.detachFromParent();
      node2.getJSDocInfo();
      node3.getDirectives();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node5.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("kV@UR'xy");
      node_FileLevelJsDocBuilder0.append("");
      node4.isThis();
      node5.isTypeOf();
      node5.getLastChild();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = new Node(2939);
      Node node2 = new Node(1322, node1, node0, 32, 56);
      node1.siblings();
      node2.setType(54);
      node0.setChangeTime(1377);
      String string0 = "";
      Node node3 = node2.clonePropsFrom(node0);
      Node node4 = Node.newString(46, "", 40, 338);
      node4.isArrayLit();
      node2.setWasEmptyNode(true);
      node2.setIsSyntheticBlock(true);
      node2.isReturn();
      node0.getChangeTime();
      node4.checkTreeEquals(node0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(52);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      boolean boolean0 = false;
      node4.addChildrenAfter(node3, node0);
      String string1 = "B";
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, boolean0, string1);
      Locale locale0 = Locale.ITALIAN;
      Object[] objectArray0 = new Object[0];
      PrintStream printStream0 = mockPrintStream0.format(locale0, string0, objectArray0);
      // Undeclared exception!
      try { 
        node1.appendStringTree(printStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      Node node1 = Node.newString(15, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getInputId();
      node2.setInputId((InputId) null);
      node1.getBooleanProp((-759));
      node0.isOptionalArg();
      node0.getLength();
      node1.isDo();
      node1.getJsDocBuilderForNode();
      Node node3 = Node.newNumber((double) 37);
      node0.isNoSideEffectsCall();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("kV@UR'xy");
      node3.toString();
      node1.isThis();
      node3.isRegExp();
      Node node4 = Node.newString("");
      node4.getType();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newString("O-BjLY^Wg[%y0:t");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node node1 = new Node(51, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("O-BjLY^Wg[%y0:t", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      node1.setSourceFileForTesting("mx>)J)j(qm");
      Node node3 = Node.newString("NULL_TYPE");
      Node node4 = node2.copyInformationFrom(node3);
      node1.getBooleanProp(1380);
      node1.isSyntheticBlock();
      node3.isUnscopedQualifiedName();
      node4.isEquivalentToTyped(node3);
      Node node5 = new Node(54);
      Node node6 = Node.newNumber((double) 8, 37, 47);
      node6.useSourceInfoIfMissingFrom(node0);
      node6.setSideEffectFlags(4095);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newNumber((-23.905667161527806), 0, 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node1 = new Node((-751), node0, node0, node0, 49, (-759));
      node1.isContinue();
      node0.isTry();
      node1.isQualifiedName();
      node1.isVarArgs();
      node0.setVarArgs(false);
      Node node2 = Node.newString("ZZNq/,t8nl*r4JF)D%");
      node2.isVoid();
      node1.useSourceInfoIfMissingFrom(node0);
      node2.hasChildren();
      node1.setString("ZZNq/,t8nl*r4JF)D%");
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newNumber((-511.55503763));
      node0.isVarArgs();
      Node node1 = new Node(52, 46, 43);
      node0.isBlock();
      Node node2 = new Node(29, node1, node0);
      Node node3 = node1.copyInformationFrom(node0);
      node2.hasOneChild();
      node2.isSyntheticBlock();
      node3.isEquivalentToTyped(node2);
      Node node4 = Node.newString("INC");
      node2.isNot();
      node0.getChildCount();
      node1.isEmpty();
      node3.isUnscopedQualifiedName();
      node0.isInc();
      node0.isParamList();
      node0.copyInformationFrom(node4);
      node4.isInstanceOf();
      node0.isOnlyModifiesThisCall();
      Node.newString("INC");
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(37, "IN\n");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.setSourceFileForTesting("QS/,LOTw(%T");
      node1.isOnlyModifiesArgumentsCall();
      node1.getBooleanProp(53);
      node0.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node2 = new Node(0, node1, node1);
      Node node3 = node2.copyInformationFrom(node0);
      node2.hasOneChild();
      node3.isSyntheticBlock();
      node2.isNE();
      Node node4 = new Node((-1297), node0, node3);
      Node node5 = node3.copyInformationFrom(node0);
      node2.hasOneChild();
      node4.isExprResult();
      Node node6 = Node.newString(0, "QS/,LOTw(%T");
      node6.isEquivalentToTyped(node5);
      node3.getChildCount();
      node5.isEmpty();
      node2.hasChildren();
      node6.setString("QS/,LOTw(%T");
      node6.isNE();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString(true, false, true);
      node0.putIntProp(2346, 2346);
      node0.children();
      node0.setVarArgs(true);
      node0.isNull();
      Node node1 = Node.newNumber((-23.905667161527806));
      node1.isSwitch();
      node1.isVoid();
      node1.isOnlyModifiesThisCall();
      node0.getExistingIntProp(43);
      node1.isAdd();
      node0.removeChild(node1);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node0.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node0.isThrow();
      node0.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getAncestors();
      Node node1 = new Node(2, node0);
      node1.getInputId();
      Node.newString("|p .N");
      node1.isFromExterns();
      node1.setWasEmptyNode(false);
      node0.getJSDocInfo();
      node1.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      int int0 = Node.VAR_ARGS_NAME;
      Node node1 = Node.newNumber(0.0);
      node0.isVarArgs();
      node0.isDo();
      Node node2 = new Node(44, node1, node0, 2590, (-997));
      node1.setType(0);
      node0.checkTreeEquals(node2);
      node0.hasChild(node2);
      node2.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString("O-BjLY^Wg[%y0:t", 508, 48);
      node1.isCase();
      node0.siblings();
      Node node2 = new Node(1879, node0, node0, 83, 55);
      Node node3 = new Node(16);
      node1.getIndexOfChild(node3);
      node2.getChildAtIndex(4095);
      node3.isIn();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node.newString(112, "Object#Element", (-30), 1468);
      Node node1 = new Node(0, node0, node0, 1468, 2);
      node1.getAncestors();
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = Node.newNumber(0.0, 29, 4095);
      node2.isParamList();
      node1.isHook();
      node1.getParent();
      node1.isSetterDef();
      node0.setDouble(0);
      int int0 = (-386);
      int int1 = 98;
      Node.mergeLineCharNo(int0, int1);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = new Node(51, 51, 51);
      node0.toStringTree();
      node0.isGetProp();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setSourceEncodedPositionForTree(51);
      node1.isEquivalentTo(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node1.getBooleanProp(48);
      node0.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(1053, node1, node1, node1, 4095, 51);
      node2.getLength();
      node2.isVarArgs();
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      Node node3 = node0.setJSDocInfo(jSDocInfo0);
      node3.isDo();
      node2.wasEmptyNode();
      Node node4 = new Node((-36), node2, node2, (-2642), 11);
      node4.isEquivalentTo(node2, false, false, true);
      node0.getIndexOfChild(node4);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.isNull();
      node0.toString();
      Node node1 = new Node(46, node0, node0, node0, node0, 12, 55);
      node1.isEquivalentToTyped(node0);
      node0.isLabel();
      Node node2 = new Node(52, node1);
      Node.newNumber(1.0, 47, 52);
      Node node3 = Node.newString("STRING jsdoc_info");
      node2.isBreak();
      Node.newNumber((double) 30);
      Node node4 = node2.cloneNode();
      node3.isAssign();
      node4.isParamList();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      int int0 = Node.VAR_ARGS_NAME;
      Node node1 = Node.newNumber(0.0);
      node0.cloneNode();
      node0.isAssign();
      node0.isParamList();
      node0.hasOneChild();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = new Node(601, 601, (-513));
      Node node1 = new Node(601, node0, node0, node0, 32, 37);
      node0.getStaticSourceFile();
      node1.setChangeTime(31);
      Node node2 = Node.newString(9, "J!C{Szn9", 48, 4);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      node3.setSourceFileForTesting("kV@UR'xy");
      node3.getBooleanProp(13);
      boolean boolean0 = node3.isWhile();
      node3.getLength();
      node3.getSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2261);
      node_SideEffectFlags0.clearSideEffectFlags();
      node2.isContinue();
      Node.newNumber(555.4789208);
      Node node4 = new Node(55, node3, node0, node0);
      node4.isTry();
      node1.isQualifiedName();
      node2.isVarArgs();
      node0.setVarArgs(boolean0);
      node3.hasMoreThanOneChild();
      node3.getSourcePosition();
      node2.isNumber();
      // Undeclared exception!
      try { 
        node4.isAssignAdd();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(447, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.setSourceFileForTesting("kV@UR'Uyxy");
      node0.getBooleanProp(5564);
      node1.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node1.getSideEffectFlags();
      node2.isCase();
      Node node3 = new Node(30, node1, node0);
      Node node4 = Node.newNumber((double) 4);
      Node node5 = node3.copyInformationFrom(node4);
      node0.getBooleanProp(89);
      node3.hasOneChild();
      node2.isSyntheticBlock();
      node5.isUnscopedQualifiedName();
      node4.isEquivalentToTyped(node3);
      node2.srcref(node0);
      node1.cloneTree();
      Node node6 = new Node(31, node1, node5);
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node.newString(112, "Object#Element", (-30), 1468);
      Node node1 = new Node(0, node0, node0, 1468, 2);
      node1.getAncestors();
      node0.mayMutateGlobalStateOrThrow();
      node0.isParamList();
      node1.isHook();
      node1.getParent();
      node1.isSetterDef();
      node0.setDouble(0);
      int int0 = (-394);
      int int1 = 98;
      Node.mergeLineCharNo(int0, int1);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(15, node0, node0, node0, node0, 50, 29);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node0.isFromExterns();
      node1.setIsSyntheticBlock(true);
      node1.getSideEffectFlags();
      node0.isCase();
      Stack<Node> stack0 = new Stack<Node>();
      node0.setType(40);
      node0.isVoid();
      node2.setString("mx>)J)j(qm");
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "jc<6");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      StaticSourceFile staticSourceFile0 = null;
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = new Node(57, node0);
      node3.addChildrenAfter(node2, node0);
      node2.setSourceFileForTesting("NSMPVdo%TsFMHmgL");
      node1.isOnlyModifiesArgumentsCall();
      node3.mayMutateArguments();
      node0.getSourceOffset();
      Node node4 = new Node(36, 54, 0);
      node4.setSideEffectFlags(43);
      int int0 = 1081;
      node1.getIntProp(int0);
      node2.getLength();
      node4.isFromExterns();
      // Undeclared exception!
      try { 
        node1.setStaticSourceFile(staticSourceFile0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = new Node(2939);
      Node node2 = new Node(40, node0, node1, node0);
      node1.siblings();
      node0.setChangeTime(1377);
      Node node3 = Node.newString(46, "", 40, 338);
      node3.isArrayLit();
      node2.setWasEmptyNode(true);
      node2.setIsSyntheticBlock(true);
      node0.isNew();
      node0.getChangeTime();
      node3.checkTreeEquals(node0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(52);
      node2.getParent();
      node1.isAnd();
      node1.setDouble(51);
      Node.mergeLineCharNo(node2.FLAG_THIS_UNMODIFIED, node2.POST_FLAG);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newString("?jxf=[:");
      int int0 = Node.VAR_ARGS_NAME;
      Node node1 = Node.newNumber((double) 1);
      node0.isAssign();
      node1.getSourcePosition();
      node1.isGetElem();
      node1.setWasEmptyNode(false);
      node1.isOptionalArg();
      node1.getLastChild();
      Node node2 = new Node(2134, 32, 713);
      node2.removeChildAfter((Node) null);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      node1.isScript();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(1);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, templateType0);
      node2.isVarArgs();
      node0.isDefaultCase();
      node0.isWith();
      node1.getChildCount();
      node0.getDirectives();
      node0.setWasEmptyNode(true);
      node1.setJSDocInfo(jSDocInfo0);
      Node node3 = new Node(51, node1, node1, 1479, 36);
      node3.setType(16);
      node3.isVoid();
      node1.getInputId();
      node1.setInputId((InputId) null);
      node1.isHook();
      node0.addChildToBack(node2);
      Node node4 = node1.copyInformationFrom(node2);
      node1.isObjectLit();
      node4.replaceChild(node3, node1);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = Node.newString("O-BjLY^Wg[%y0:t");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(39);
      Node node1 = new Node(65536, node0, node0, node0, 32, 55);
      node0.addChildrenToBack(node1);
      node0.isEquivalentToTyped(node1);
      node0.isStringKey();
      Node node2 = node1.srcref(node0);
      Node node3 = Node.newNumber((double) 37);
      node2.getExistingIntProp(56);
      int int0 = 1855;
      Node node4 = null;
      try {
        node4 = new Node(int0, node0, node0, node0, node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 56
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newString(116, "`d");
      node0.isInc();
      node0.hasMoreThanOneChild();
      node0.isContinue();
      Node.newNumber((double) 16, 4095, 1);
      Node node1 = new Node(47);
      node0.isInc();
      node0.getChildAtIndex((-694));
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node.extractLineno(0);
      String string0 = "";
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.toStringTree();
      // Undeclared exception!
      try { 
        node0.getStaticSourceFile();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(48, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(38, node0, node2);
      Node node4 = node1.copyInformationFrom(node3);
      node1.getBooleanProp(43);
      node1.hasOneChild();
      node1.isTrue();
      node3.isUnscopedQualifiedName();
      node0.getAncestors();
      node3.isEquivalentToTyped(node2);
      node2.srcref(node4);
      node0.cloneTree();
      // Undeclared exception!
      try { 
        node2.srcrefTree(node4);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isCase();
      Node node1 = new Node(52, 29, 4095);
      node1.getSourcePosition();
      node1.isNumber();
      node0.isCatch();
      node0.isObjectLit();
      Node node2 = node1.cloneNode();
      node1.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = new Node(2939);
      Node node2 = new Node(40, node0, node1, node0);
      node1.siblings();
      node0.setChangeTime(1377);
      node2.setWasEmptyNode(true);
      node2.setIsSyntheticBlock(true);
      node0.isNew();
      node0.getChangeTime();
      node0.checkTreeEquals(node0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(52);
      node2.getParent();
      node1.isAnd();
      node1.setDouble(51);
      Node.mergeLineCharNo(node2.FLAG_THIS_UNMODIFIED, node2.POST_FLAG);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(15, node0, node0, node0, node0, 50, 29);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node2.isFromExterns();
      node0.setIsSyntheticBlock(false);
      node2.isNew();
      node1.getChangeTime();
      node1.checkTreeEquals(node2);
      PipedInputStream pipedInputStream0 = new PipedInputStream(47);
      Node node3 = node0.getParent();
      node0.isAnd();
      node2.setDouble(2684.3052);
      int int0 = (-1273);
      Node.mergeLineCharNo(int0, node2.QUOTED_PROP);
      node2.isCast();
      node1.useSourceInfoIfMissingFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(37, "IN\n");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.setSourceFileForTesting("QS/,LOTw(%T");
      node1.isOnlyModifiesArgumentsCall();
      node1.getBooleanProp(53);
      node0.isOnlyModifiesArgumentsCall();
      node0.getLength();
      int int0 = Node.INPUT_ID;
      node0.isCase();
      Node node2 = new Node(894);
      node2.getSourcePosition();
      node2.isNumber();
      node2.isCatch();
      node0.isObjectLit();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node node2 = Node.newString(56, "`d", 39, 56);
      Node node3 = new Node(9, node1, node1, node2);
      Node node4 = new Node(40, node3, node0, 56, (-1739));
      node0.setType(4095);
      node4.checkTreeEquals(node3);
      node4.hasChild(node0);
      node2.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = new Node(2939);
      Node node2 = new Node(40, node0, node1, node0);
      node1.siblings();
      node0.setChangeTime(1377);
      Node node3 = Node.newString(0, "jc<6", (-1211), 56);
      Node node4 = Node.newNumber((double) 31);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node4;
      Node node5 = new Node(120, nodeArray0, 47, (-728));
      Node node6 = new Node((-129), 1023, 27591);
      node2.addChildToFront(node6);
      node5.hasMoreThanOneChild();
      node6.setType(1);
      node3.isContinue();
      Node node7 = new Node(43);
      node3.isInc();
      node1.useSourceInfoFromForTree(node7);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8232);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.valueOf();
      Node node0 = Node.newNumber((-132.51335181092));
      Node node1 = node0.detachFromParent();
      node1.getLength();
      Node node2 = null;
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString(true, false, true);
      node0.putIntProp(2346, 2346);
      node0.children();
      node0.setVarArgs(true);
      node0.isNull();
      Node node1 = Node.newNumber((-23.905667161527806));
      node1.isSwitch();
      node1.isVoid();
      node1.setDouble(1897.42903);
      Node.mergeLineCharNo(47, 1);
      node0.isCast();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(683);
      node_SideEffectFlags0.clearSideEffectFlags();
      node2.isContinue();
      Node node3 = Node.newNumber((double) 38);
      Node node4 = new Node(49, node1, node0, node3);
      node4.isTry();
      node2.isQualifiedName();
      node3.isVarArgs();
      node3.setVarArgs(true);
      node0.hasMoreThanOneChild();
      node3.getSourcePosition();
      Node node5 = Node.newString("-I4rZ$0}E^hAp''MoZ", 1287, 51);
      node4.getChildBefore(node5);
      node_SideEffectFlags0.valueOf();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      node0.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node1.isFromExterns();
      node0.setIsSyntheticBlock(false);
      node1.isNew();
      node0.mayMutateArguments();
      node1.isArrayLit();
      Node node2 = Node.newString("jc<6");
      Node node3 = new Node(2, node2, node1, 56, 15);
      node3.hasMoreThanOneChild();
      node0.getSourcePosition();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isNumber();
      node3.mayMutateArguments();
      node2.getChildBefore(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node2.SIDE_EFFECTS_FLAGS_MASK);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.valueOf();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString("", 0, 508);
      node0.isCase();
      node0.siblings();
      Node node1 = new Node(155, node0, node0, 57, 155);
      node0.setType(212);
      node1.isVoid();
      Node node2 = Node.newString(12, "", 56, 12);
      node2.checkTreeEquals(node1);
      node0.hasChild(node1);
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newString(89, "T:z*5}[Hs", (-1458), (-1458));
      node0.getIntProp(89);
      node0.isEquivalentToShallow(node0);
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      Node node1 = Node.newString(15, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("");
      node1.getInputId();
      node2.setInputId((InputId) null);
      node1.getBooleanProp((-759));
      node0.isOptionalArg();
      node0.getLength();
      node1.isDo();
      node1.getJsDocBuilderForNode();
      Node node3 = Node.newNumber((double) 37);
      node0.isNoSideEffectsCall();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node3.toString();
      node1.isThis();
      node3.isRegExp();
      Node node4 = Node.newString("");
      node4.getType();
      node0.addChildAfter(node2, node1);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(509, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(683);
      node_SideEffectFlags0.clearSideEffectFlags();
      node2.isContinue();
      Node node3 = Node.newNumber((double) 38);
      node2.getIntProp((-3118));
      Node node4 = new Node(49, node1, node0, node3);
      node4.isTry();
      node2.isQualifiedName();
      node4.clonePropsFrom(node3);
      node3.isVarArgs();
      node3.setVarArgs(true);
      node0.hasMoreThanOneChild();
      node3.getSourcePosition();
      node4.isNumber();
      node3.isGetProp();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node1.isCase();
      node0.getBooleanProp(13);
      node1.isOnlyModifiesArgumentsCall();
      node1.getLength();
      node1.getSideEffectFlags();
      node0.isCase();
      Node node2 = new Node(1, node0, node1);
      Node node3 = node2.copyInformationFrom(node0);
      node3.getBooleanProp(2266);
      node0.hasOneChild();
      node3.isSyntheticBlock();
      node1.isUnscopedQualifiedName();
      node1.isEquivalentToTyped(node2);
      Node node4 = new Node(63);
      Node node5 = node4.srcref(node0);
      Node node6 = node2.cloneTree();
      node6.getBooleanProp(117);
      Node node7 = new Node(1, node6, node5);
      node7.isIn();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      int int0 = Node.FLAG_NO_THROWS;
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(447, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.setSourceFileForTesting("kV@UR'Uyxy");
      node0.getBooleanProp(5564);
      node1.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node1.getSideEffectFlags();
      node2.isCase();
      Node node3 = new Node(30, node1, node0);
      Node node4 = Node.newNumber((double) 4);
      node3.copyInformationFrom(node4);
      node3.hasOneChild();
      node2.isExprResult();
      node3.cloneNode();
      node3.isEquivalentToTyped(node4);
      node3.isVarArgs();
      node0.getChildCount();
      node3.isEmpty();
      node1.hasChildren();
      node3.setString("");
      node3.isNE();
      node4.getParent();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = Node.newNumber((-511.55503763));
      node0.isVarArgs();
      Node node1 = Node.newNumber((double) 2, 16, (-2338));
      node0.isBlock();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.setWasEmptyNode(false);
      Node node2 = new Node(37, node0, (-2864), 4395);
      node1.replaceChild(node2, node2);
      int int0 = 2145;
      String string0 = "_#z`SZ@UGgN\\efnyXa";
      Node node3 = Node.newString(int0, string0);
      node1.addChildBefore(node0, node3);
      // Undeclared exception!
      try { 
        node0.isGetElem();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isSetterDef();
      node0.isGetterDef();
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = Node.newNumber(938.6833232);
      node0.toString(true, true, true);
      node0.putIntProp(2328, (-236));
      node0.children();
      node0.setVarArgs(true);
      Node node1 = new Node(48, node0, node0);
      node1.isNull();
      Node node2 = Node.newNumber(2462.54433517443);
      node2.isSwitch();
      node0.isOnlyModifiesThisCall();
      node1.getExistingIntProp(36);
      Node node3 = new Node(node1.COLUMN_BITS, node1);
      node3.isAdd();
      node1.removeChild(node2);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = node0.cloneTree();
      Node node2 = new Node(53, 56, 8);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node2.setStaticSourceFile((StaticSourceFile) null);
      Node node3 = new Node(57, node0);
      Node node4 = node0.useSourceInfoFrom(node0);
      node3.addChildrenAfter(node1, node0);
      node0.setSourceFileForTesting("NSMPVdo%TsFMHmgL");
      node2.isOnlyModifiesArgumentsCall();
      node0.getChangeTime();
      node4.checkTreeEquals(node0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(83);
      Node node5 = node1.getParent();
      node1.isAnd();
      node4.useSourceInfoIfMissingFromForTree(node2);
      Node node6 = Node.newString(128, (String) null);
      double double0 = 0.0;
      node6.setDouble(double0);
      node5.isNoSideEffectsCall();
      Node.mergeLineCharNo(node3.INFERRED_FUNCTION, node0.DIRECT_EVAL);
      node4.getSourceOffset();
      node5.isCast();
      // Undeclared exception!
      try { 
        node3.useSourceInfoIfMissingFromForTree(node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = Node.newString(123, "Object#Element", (-30), 1468);
      Node node2 = new Node(0, node0, node0, 1468, 2);
      node2.getAncestors();
      node0.mayMutateGlobalStateOrThrow();
      node1.setType(47);
      node2.isString();
      node2.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = new Node(15, 15, 15);
      Node node1 = new Node(1, node0, node0, (-686), 42);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>(56);
      node1.setChangeTime(1377);
      Node node2 = Node.newString(49, "", (-1), 36);
      node2.isArrayLit();
      node1.hasMoreThanOneChild();
      node0.getSourcePosition();
      node1.isGetElem();
      node1.isName();
      node1.getChildBefore(node2);
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newString("Th#FW");
      Node node1 = new Node(1797, node0, node0);
      Node node2 = new Node((-923), node1);
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node(2089, 64, (-2962));
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      node1.isScript();
      jSDocInfo0.getTypedefType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node2 = new Node(4095, node0, 37, 1);
      jSTypeRegistry0.createFunctionType((JSType) templateType1, node2);
      Node.newString("new child has existing sibling", 2, 30);
      node2.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newString((-11), "Y@ud}zm!<6aDbO]", 127, 118);
      Node node1 = new Node(118, node0, 42, 154);
      Node node2 = new Node(118, node1, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.hasChild(node3);
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = new Node(46, node0, node0, node0, node0);
      node1.getSourceOffset();
      node1.removeChildAfter(node0);
      // Undeclared exception!
      try { 
        node0.getSideEffectFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(42, node0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)jCqm", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node0.isFromExterns();
      node1.setIsSyntheticBlock(true);
      node2.isEquivalentTo(node0, true, false, true);
      int int0 = Node.LAST_PROP;
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node.mergeLineCharNo((-137), 114);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(15, node0, node0, node0, node0, 50, 29);
      node1.copyInformationFromForTree(node0);
      node1.cloneNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node0.isFromExterns();
      node1.setIsSyntheticBlock(true);
      node1.getSideEffectFlags();
      node0.isCase();
      Stack<Node> stack0 = new Stack<Node>();
      node0.setType(40);
      node0.isVoid();
      node2.setString("mx>)J)j(qm");
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newString(1064, "`", (-1458), 122);
      node0.getIntProp(1064);
      Node node1 = Node.newString("T:z*5}[Hs");
      node0.isEquivalentToShallow(node1);
      node1.getDirectives();
      Node.newString((-3027), "com.google.common.collect.Maps", 52, 31);
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(132, (-2125), 39);
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.setThrows();
      node0.putBooleanProp((-559), false);
      node_SideEffectFlags1.setMutatesThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isCase();
      Node node1 = new Node((-1458), node0, node0, 93, 51);
      node0.getIndexOfChild((Node) null);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newNumber(938.6833232);
      node0.toString(true, true, true);
      node0.putIntProp(2328, (-236));
      node0.children();
      node0.setVarArgs(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.isCast();
      node0.isTry();
      node0.isTry();
      node0.isQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[2];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("L0~% \"");
      jSTypeArray0[0] = (JSType) templateType0;
      templateType0.matchesUint32Context();
      node0.getJSType();
      jSTypeArray0[1] = null;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.isVarArgs();
      boolean boolean0 = false;
      node1.setVarArgs(boolean0);
      node0.isAssignAdd();
      int int0 = 100;
      Node node2 = new Node(int0, node1);
      int int1 = (-980);
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(37, "IN\n");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.setSourceFileForTesting("QS/,LOTw(%T");
      node1.isOnlyModifiesArgumentsCall();
      node1.getBooleanProp(53);
      node0.isOnlyModifiesArgumentsCall();
      node0.getLength();
      int int0 = Node.INPUT_ID;
      node0.isCase();
      Node node2 = new Node(894);
      node2.getSourcePosition();
      node2.isNumber();
      node2.isCatch();
      node0.isObjectLit();
      node0.getSourceFileName();
      node0.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newNumber((-23.905667161527806), 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.isCase();
      Node node3 = new Node((-2991), 55, (-1316));
      node2.getSourcePosition();
      node3.isNumber();
      node1.isCatch();
      node1.isObjectLit();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node.extractLineno(30);
      Node node0 = Node.newString(0, "", 30, 0);
      node0.getChangeTime();
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      node0.setSourceFileForTesting("");
      node0.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node2 = new Node(30, node0, node0);
      Node node3 = Node.newNumber((double) 4);
      Node node4 = node2.copyInformationFrom(node3);
      node0.getBooleanProp(89);
      node2.hasOneChild();
      node1.isSyntheticBlock();
      node4.isDebugger();
      node3.isEquivalentToTyped(node2);
      Node node5 = node1.srcref(node0);
      node0.cloneTree();
      node1.getLastChild();
      node0.isDec();
      node5.getDouble();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = Node.newString(112, "Object#Element", (-30), 1468);
      Node node2 = new Node(0, node0, node0, 1468, 2);
      node2.getAncestors();
      node0.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newNumber(0.0, 29, 4095);
      JSTypeNative jSTypeNative0 = JSTypeNative.REGEXP_FUNCTION_TYPE;
      jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      node3.setType(47);
      node1.isStringKey();
      node3.isVoid();
      node3.isString();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node0.getBooleanProp(57);
      node1.getInputId();
      node0.setInputId((InputId) null);
      node1.isHook();
      node1.addChildToFront(node0);
      node1.hasMoreThanOneChild();
      node1.setType(46);
      node0.isContinue();
      Node node2 = new Node(31);
      Node node3 = node2.srcrefTree(node1);
      node3.isIn();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newString("jc<6", 2337, 2337);
      Node node1 = new Node(46, node0, node0);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = Node.newNumber((double) 16);
      Node node2 = node1.copyInformationFrom(node0);
      node2.getBooleanProp(1073741823);
      Node node3 = new Node(1073741823, node2);
      node3.hasOneChild();
      node3.isSyntheticBlock();
      node3.isDebugger();
      Node node4 = Node.newString(1493, "O-BjLY^Wg[%y0:t", 132, 36);
      node2.isEquivalentToTyped(node4);
      Node node5 = new Node(29, node2, node2);
      node0.srcref(node5);
      node4.cloneTree();
      Node node6 = node4.getLastChild();
      node6.isDec();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node1.setType(2693);
      node0.getInputId();
      Node node2 = Node.newString("RWx]\u0006^'cDK 7;M*", 43, 34);
      node2.setInputId((InputId) null);
      node0.isHook();
      Node node3 = Node.newString("DAjqVlcsU,[[<#YRe6,");
      node1.addChildToBack(node2);
      Node node4 = node3.copyInformationFrom(node2);
      node2.isObjectLit();
      node1.replaceChild(node4, node0);
      node3.getInputId();
      node1.toStringTree();
      node4.getChangeTime();
      int int0 = 35;
      int int1 = 119;
      Node.newNumber((double) node2.POST_FLAG, int0, int1);
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      Node node1 = Node.newString(509, "");
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      node3.setSourceFileForTesting("");
      node2.getBooleanProp(31);
      node1.isOnlyModifiesArgumentsCall();
      node3.getLength();
      node2.getSideEffectFlags();
      node3.isCase();
      Node node4 = new Node((-1172), node0, node3);
      Node node5 = node2.copyInformationFrom(node0);
      node2.getBooleanProp(98);
      node2.hasOneChild();
      node1.isTrue();
      node0.isUnscopedQualifiedName();
      node4.getAncestors();
      node3.isEquivalentToTyped(node5);
      node5.srcref(node0);
      node4.cloneTree();
      Node node6 = Node.newString((-1608), "source_file", 7, 1191);
      node6.srcrefTree(node5);
      node5.isIn();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newNumber((-636.3576), 3379, 3379);
      Node node1 = null;
      node0.replaceChildAfter((Node) null, (Node) null);
      node0.isEquivalentToShallow(node1);
      int int0 = (-1890);
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = Node.newString(15, "\n\nSubtree2: ");
      node0.isNot();
      node0.putIntProp(15, 15);
      Node node1 = Node.newString("OM3U(O1W`~b(", 2, (-1880));
      node0.isSyntheticBlock();
      node1.getString();
      node0.isVar();
      boolean boolean0 = node1.isDebugger();
      node0.setString("\n\nSubtree2: ");
      node0.wasEmptyNode();
      node0.isVar();
      node1.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node1.setSideEffectFlags(node_SideEffectFlags3);
      boolean boolean1 = false;
      node0.isEquivalentTo(node1, boolean0, boolean0, boolean1);
      int int0 = 445;
      // Undeclared exception!
      try { 
        node1.removeProp(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(509, "");
      node0.setSourceFileForTesting("kV@UR'xy");
      node0.getBooleanProp((-759));
      node0.isTry();
      node0.isThis();
      node0.setType((-1852));
      Node node1 = Node.newString("d7d");
      node1.isVoid();
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      Node node1 = Node.newString("{24/D]1", 48, (-2172));
      node0.isCase();
      node0.siblings();
      Node node2 = new Node(1706, node1, node0, 29, 37);
      node2.setType(2);
      node2.isVoid();
      Node node3 = Node.newString("KGD$BS;ys6`m", (-1793), 32);
      node1.checkTreeEquals(node3);
      node0.hasChild(node1);
      node0.replaceChild(node3, node1);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node1.isCase();
      node0.getBooleanProp(13);
      node1.isOnlyModifiesArgumentsCall();
      node1.getLength();
      node1.getSideEffectFlags();
      node0.isCase();
      Node node2 = new Node(1, node0, node1);
      node1.isQualifiedName();
      node2.isVarArgs();
      node0.setVarArgs(false);
      node0.isAssignAdd();
      node2.useSourceInfoIfMissingFrom(node1);
      node0.hasChildren();
      node1.setString("Node has existing properties.");
      node1.putIntProp(1, 485);
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(37, "IN\n");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.setSourceFileForTesting("QS/,LOTw(%T");
      node1.isOnlyModifiesArgumentsCall();
      node1.getBooleanProp(53);
      node0.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node2 = new Node(0, node1, node1);
      Node node3 = node2.copyInformationFrom(node0);
      node2.hasOneChild();
      int int0 = Node.INPUT_ID;
      node3.isCase();
      Node node4 = new Node(83);
      node4.getSourcePosition();
      node0.isNumber();
      node2.isTrue();
      node2.isObjectLit();
      node2.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(512, "");
      node0.isNew();
      node1.isOptionalArg();
      Node node2 = Node.newString("");
      node0.getJsDocBuilderForNode();
      node2.isTypeOf();
      node1.getNext();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newString(943, "j)BpERT+nFz5P)h)r", 943, 718);
      node0.getAncestors();
      Node node1 = Node.newString("");
      node0.isAnd();
      node0.mayMutateGlobalStateOrThrow();
      node0.isLabelName();
      node1.isObjectLit();
      node1.isAdd();
      node0.isTry();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newString(48, "O-BjLY^Wg[%y0:t", 48, 48);
      node0.setType(233520);
      InputId inputId0 = new InputId("O-BjLY^Wg[%y0:t");
      node0.setInputId(inputId0);
      node0.isHook();
      Node node1 = Node.newString("unexpected prop id ");
      node0.addChildToBack(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isObjectLit();
      node0.replaceChild(node1, node2);
      node0.getInputId();
      node2.toStringTree();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newString(100, "`d");
      node0.isInc();
      node0.hasMoreThanOneChild();
      node0.isContinue();
      Node.newNumber((double) 16, 4095, 1);
      Node node1 = new Node(47);
      node0.isInc();
      node0.getChildAtIndex((-719));
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.isNull();
      node0.toString();
      Node node1 = new Node(46, node0, node0, node0, node0, 12, 55);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node0.setSourceFileForTesting("B[~)OQkn#3i]$n6N");
      node0.getInputId();
      node1.getBooleanProp(57);
      node2.srcrefTree(node0);
      node2.isOptionalArg();
      int int0 = Node.INCRDECR_PROP;
      node2.isDo();
      node0.getJsDocBuilderForNode();
      int int1 = (-429);
      Node node3 = new Node(43, node2, node0, (-429), 2026);
      node0.hasMoreThanOneChild();
      node0.getSourcePosition();
      // Undeclared exception!
      try { 
        node2.checkTreeTypeAwareEqualsImpl(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      Node node1 = Node.newString(509, "");
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node2.wasEmptyNode();
      Node node3 = new Node(38, node0, node2);
      Node node4 = node1.copyInformationFrom(node3);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      node3.isEquivalentToTyped(node2);
      node3.setSourceEncodedPosition(38);
      Node node5 = Node.newNumber(1.0);
      node5.setType(36);
      Node node6 = node0.detachFromParent();
      node6.cloneTree();
      node2.getJSDocInfo();
      node3.getDirectives();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node5.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node4.isThis();
      node5.isTypeOf();
      node5.getLastChild();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = new Node(601, 601, (-669));
      Node node1 = new Node(601, node0, node0, node0, 32, 37);
      node0.getStaticSourceFile();
      Node node2 = Node.newString(9, "J!C{Szn9", 48, 4);
      node2.setSourceEncodedPositionForTree(35);
      Node node3 = Node.newString("J!C{Szn9");
      node2.isReturn();
      node1.isFalse();
      node1.isEquivalentTo(node0);
      InputId inputId0 = new InputId("J!C{Szn9");
      inputId0.toString();
      Node node4 = Node.newString(54, (String) null, 2, 51);
      node0.isArrayLit();
      int int0 = 43;
      int int1 = 3069;
      Node node5 = new Node(int0, node2, node0, int1, node3.IS_CONSTANT_NAME);
      node4.setSourceEncodedPosition(node1.MAX_COLUMN_NUMBER);
      node1.hasMoreThanOneChild();
      // Undeclared exception!
      try { 
        node1.getSourcePosition();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      int int0 = Node.ORIGINALNAME_PROP;
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 40, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.setSourceFileForTesting("");
      Node.newString(57, "", 46, 43);
      node0.isNE();
      node0.removeProp(42);
      node0.removeChildren();
      Node.newString(2, "");
      node0.isRegExp();
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newNumber((-511.57120574780777));
      node0.isVarArgs();
      Node node1 = new Node(52, 46, 43);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("`d", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node2.isObjectLit();
      node2.setIsSyntheticBlock(false);
      node0.getSideEffectFlags();
      node2.isCase();
      Stack<Node> stack0 = new Stack<Node>();
      node2.setType(49);
      node2.isVoid();
      node2.setString((String) null);
      node0.isCase();
      int int0 = 12;
      node2.putIntProp(node0.SIDE_EFFECTS_ALL, int0);
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node0 = new Node(132, (-2125), 39);
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.setThrows();
      node0.isAssign();
      node0.hasOneChild();
      node0.isOr();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newString(51, "(]O", (-1534), (-810));
      node0.isFunction();
      Node node1 = Node.newNumber((double) 29, (-2834), 1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node(46, node0, node0, node0);
      Node node3 = node2.clonePropsFrom(node0);
      node3.putIntProp(46, 1);
      node1.putProp(51, node2);
      node3.isEquivalentToTyped(node1);
      node3.removeChild(node0);
      Node node4 = node0.srcref(node2);
      node4.setLineno(55);
      node3.setIsSyntheticBlock(false);
      node0.isAnd();
      node0.getChangeTime();
      node0.isTry();
      node0.wasEmptyNode();
      node0.getAncestors();
      node1.isDelProp();
      node3.getJSType();
      node1.isTry();
      node4.useSourceInfoIfMissingFromForTree(node0);
      node2.isQualifiedName();
      node1.addChildrenToFront(node3);
      Node.newNumber((double) 32, 43, 55);
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString("IN\n", 8, 16);
      node0.isIf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1446);
      Node node2 = Node.newString(123, "com.google.common.base.CharMatcher$NegatedMatcher", 768, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node4 = node3.srcref(node2);
      node3.getJsDocBuilderForNode();
      node0.isSetterDef();
      node4.toStringTree();
      node1.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node(50);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.putIntProp(54, 2780);
      node1.addChildrenAfter(node2, node0);
      String string0 = "";
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(15, node0, node0, node0, node0, 50, 29);
      String string0 = "mx>)J)j(qm";
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node0.isFromExterns();
      node1.setIsSyntheticBlock(true);
      node1.getSideEffectFlags();
      node1.addChildAfter(node2, node0);
      node1.addChildrenAfter(node0, node2);
      node0.isCase();
      Stack<Node> stack0 = new Stack<Node>();
      // Undeclared exception!
      try { 
        node0.setType(node1.ORIGINALNAME_PROP);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(509, "");
      node0.setSourceFileForTesting("kV@UR'xy");
      node0.getBooleanProp((-746));
      node0.isTry();
      node0.isThis();
      node0.setType((-1852));
      Node node1 = new Node(123);
      node1.isVar();
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.mayMutateGlobalStateOrThrow();
      Node node3 = new Node(509, node2, node2, node1, 36, 15);
      node2.isEquivalentTo(node3, false, false, true);
      node3.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(42, node0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)jCqm", false);
      node1.setSourceFileForTesting("oF&6*(BSF|#");
      node1.isOnlyModifiesArgumentsCall();
      node1.getBooleanProp(57);
      node0.isOnlyModifiesArgumentsCall();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isSyntheticBlock();
      node1.isEquivalentToTyped(node0);
      node0.isNot();
      node0.getChildCount();
      node0.isUnscopedQualifiedName();
      node1.isInc();
      node0.isParamList();
      Node node2 = Node.newString(147, "QS/,LOTw(%T", 15, 36);
      node1.copyInformationFrom(node2);
      node2.isInstanceOf();
      node0.isOnlyModifiesThisCall();
      Node.newString("QS/,LOTw(%T");
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node0 = new Node(132, (-2125), 39);
      node0.hasMoreThanOneChild();
      node_SideEffectFlags2.setThrows();
      node0.isAssign();
      Node node1 = new Node((-815));
      node0.useSourceInfoIfMissingFrom(node1);
      node1.addSuppression("{24/D]1");
      node0.hasChildren();
      node0.setString((String) null);
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(509, "");
      node0.setSourceFileForTesting("kV@UR'xy");
      node0.getBooleanProp((-746));
      node0.isTry();
      node0.isThis();
      node0.setType((-1852));
      node0.getSourcePosition();
      node0.isGetElem();
      Node node1 = new Node(0, node0, node0, node0, node0, 4095, (-147));
      node1.isName();
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(37, "jc<6");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setSourceEncodedPositionForTree(51);
      Node node2 = Node.newString(37, "IN\n", 2, 119);
      node1.setSourceEncodedPosition(57);
      Node node3 = new Node(38, node2, 114, 53);
      Node node4 = new Node(37, node3, 51, 52);
      node3.cloneTree();
      node4.getIntProp(629);
      node2.isWhile();
      node4.getDirectives();
      node3.isIf();
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.isNull();
      node0.toString();
      Node node1 = new Node(46, node0, node0, node0, node0, 12, 55);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = new Node(124, node2, node2, node2);
      Node node4 = node3.clonePropsFrom(node0);
      node1.putIntProp(29, 2309);
      boolean boolean0 = node4.isEquivalentToTyped(node3);
      node2.removeChild(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean0);
      Node node5 = jSDocInfo0.getAssociatedNode();
      Node node6 = node4.srcref(node5);
      // Undeclared exception!
      try { 
        node6.setLineno(node4.LENGTH);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newNumber((-511.57120574780777));
      node0.isVarArgs();
      Node node1 = new Node(52, 46, 43);
      node0.isBlock();
      node1.setSourceFileForTesting("Y@ud}zm!<6taDbO]M");
      Node node2 = new Node(29, node1, node0);
      Node node3 = node1.copyInformationFrom(node0);
      node2.hasOneChild();
      node3.isEquivalentToTyped(node2);
      node2.isNot();
      node1.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node4 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node4.isSyntheticBlock();
      Node node5 = Node.newNumber(0.0);
      node5.isUnscopedQualifiedName();
      node4.setLineno((-2049));
      node3.isEquivalentToTyped(node4);
      Node node6 = node5.srcref(node2);
      Node node7 = node4.cloneTree();
      node5.srcrefTree(node6);
      node7.isIn();
      Node.mergeLineCharNo(49, 0);
      node6.getNext();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.isNull();
      Node node1 = new Node(46, node0, node0, node0, node0, 12, 55);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = new Node(30, node2, node2, node2);
      Node node4 = node3.clonePropsFrom(node0);
      node1.putIntProp(29, 2309);
      boolean boolean0 = node4.isEquivalentToTyped(node3);
      node2.removeChild(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean0);
      // Undeclared exception!
      try { 
        jSDocInfo0.getAssociatedNode();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.setSourceFileForTesting("`d");
      node2.isOnlyModifiesArgumentsCall();
      node1.getSourceOffset();
      node2.isGetElem();
      node2.setIsSyntheticBlock(false);
      node1.getDirectives();
      Node node3 = new Node(37, node0, node1, 1162, (-1533));
      node3.addChildBefore(node0, node0);
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = Node.newString(0, "is_namespace", 1, 0);
      node0.getJsDocBuilderForNode();
      Node node1 = Node.newNumber((-683.559280752));
      node1.setDouble(16);
      node0.isAdd();
      Node node2 = node0.srcref(node1);
      node2.getJsDocBuilderForNode();
      node2.isSetterDef();
      node0.toStringTree();
      int int0 = (-118);
      Node node3 = new Node(int0, node0, node2);
      node3.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newString(48, "O-BjLY^Wg[%y0:t", 48, 48);
      node0.setType(233520);
      InputId inputId0 = new InputId("O-BjLY^Wg[%y0:t");
      node0.setInputId(inputId0);
      node0.isHook();
      Node node1 = Node.newString("unexpected prop id ");
      node0.addChildToBack(node1);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isObjectLit();
      node0.addSuppression("{24/D]1");
      node0.replaceChild(node1, node2);
      node0.isIf();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.setSourceFileForTesting("`d");
      node2.isOnlyModifiesArgumentsCall();
      node1.getSourceOffset();
      node2.isGetElem();
      node2.setIsSyntheticBlock(false);
      node1.getDirectives();
      Node node3 = new Node(2179, node1, node1, node2, node2);
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      Node node1 = Node.newString(48, "");
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("");
      node1.getBooleanProp((-759));
      node0.siblings();
      node2.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node3 = new Node(38, node0, node2);
      Node node4 = node1.copyInformationFrom(node3);
      node3.putProp(0, node1);
      node1.getBooleanProp(43);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      node3.isUnscopedQualifiedName();
      node3.isEquivalentToTyped(node2);
      node2.srcref(node4);
      node0.cloneTree();
      // Undeclared exception!
      try { 
        node2.srcrefTree(node4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 0
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = new Node(56);
      node0.isOnlyModifiesArgumentsCall();
      node0.srcrefTree((Node) null);
      Node node1 = node0.getFirstChild();
      // Undeclared exception!
      try { 
        node1.getSideEffectFlags();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node.extractLineno(0);
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      Node node1 = Node.newString(15, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      Node.newString(57, "kV@UR'xy", 46, 43);
      node1.isNE();
      node1.removeProp(42);
      Node node3 = node2.removeChildren();
      node0.getAncestor(0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "kV@UR'xy");
      node2.appendStringTree(charBuffer0);
      node2.isRegExp();
      node2.getType();
      node3.isNE();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(42, node0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)jCqm", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node0.isGetElem();
      node1.setIsSyntheticBlock(true);
      node0.getAncestors();
      node0.isEquivalentToTyped(node1);
      Node node2 = node1.srcref(node0);
      node1.cloneTree();
      node0.isIn();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = new Node(101, 48, 48);
      node0.mayMutateGlobalStateOrThrow();
      node0.isFromExterns();
      node0.isQualifiedName();
      Node node1 = new Node(4, 42, (-1077));
      node0.getSourcePosition();
      node1.isNumber();
      node1.toString(true, true, false);
      node1.isCatch();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(49, nodeArray0);
      node0.isFalse();
      Node node1 = new Node(49, 32, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getDirectives();
      node1.isScript();
      jSDocInfo0.getTypedefType();
      node1.isContinue();
      Node node2 = Node.newNumber((double) 53, 116, 57);
      node1.isUnscopedQualifiedName();
      Node node3 = new Node(57);
      node3.isEquivalentToTyped(node0);
      node1.srcref(node2);
      Node node4 = node2.cloneTree();
      node4.getLastChild();
      node3.isDec();
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      Stack<Node> stack0 = new Stack<Node>();
      Node node0 = Node.newString((-2142), "mx>)J)j(qm", (-2142), 37);
      Node node1 = new Node(37, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.isAssign();
      node1.hasOneChild();
      node1.isOr();
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newString("?HHIPF0Gy", 941, 941);
      node0.setSourceFileForTesting("?HHIPF0Gy");
      node0.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isSwitch();
      Node node1 = new Node(0);
      Node node2 = new Node(2932, node1, node1);
      Node node3 = Node.newNumber((-860.8877));
      Node node4 = node0.copyInformationFrom(node2);
      node4.getBooleanProp(4);
      node4.isQuotedString();
      Node node5 = Node.newString((-247), "R7 t16T", 57, 5392);
      node5.hasOneChild();
      node5.isSyntheticBlock();
      node3.isUnscopedQualifiedName();
      node0.isEquivalentToTyped(node2);
      Node node6 = node5.srcref(node0);
      Node node7 = node5.cloneTree();
      node4.getLastChild();
      node6.isDec();
      node7.getCharno();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = Node.newString((-3458), "jc<6", 5392, (-3458));
      node0.setSourceFileForTesting("jc<6");
      node0.getBooleanProp(48);
      node0.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node1 = new Node(0, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node2.getBooleanProp(37);
      node1.hasOneChild();
      node1.isTrue();
      node2.isUnscopedQualifiedName();
      node2.getAncestors();
      node0.isEquivalentToTyped(node1);
      node2.srcref(node0);
      node2.cloneTree();
      Node.newString((-1286), "zvJ=", 1348, 36);
      Node node3 = Node.newString(38, "@NiE+l<-0kN@Ayv");
      Node node4 = new Node(148, node3);
      node4.isIn();
      node2.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newString(89, "T:z*5}[Hs", (-1458), (-1458));
      node0.isVoid();
      String string0 = node0.checkTreeEquals((Node) null);
      Node node1 = Node.newString(string0, node0.SLASH_V, node0.ORIGINALNAME_PROP);
      node1.hasChild(node0);
      node0.replaceChild(node1, node1);
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newString("OM3U(O1W`~b(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(30);
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesArguments();
      node0.isThrow();
      node0.isDo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(37, 30, 46);
      node1.hasOneChild();
      node1.isTrue();
      node0.isUnscopedQualifiedName();
      node0.getAncestors();
      node1.isEquivalentToTyped(node0);
      node1.srcref(node0);
      Node node2 = new Node(4, node1, 57, 93);
      Node node3 = node2.cloneTree();
      node3.isIn();
      node2.isName();
      node2.setLineno(72);
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString("O-BjLY^Wg[%y0:t", 508, 4);
      node1.isCase();
      Node node2 = Node.newString(39, "O-BjLY^Wg[%y0:t");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      templateType0.toMaybeTemplateType();
      Node node3 = new Node(0);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, node3);
      functionType0.matchesInt32Context();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Number node not created with Node.newNumber", node3, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.getConstructor();
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, (JSType) null);
      jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType1, enumElementType0);
      Node node4 = new Node(111);
      node4.isVarArgs();
      node4.isDefaultCase();
      node2.isWith();
      node0.setWasEmptyNode(true);
      node4.copyInformationFrom(node0);
      node0.setIsSyntheticBlock(false);
      node3.isNew();
      node4.checkTreeEquals(node3);
      node3.isTry();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString("O-BjLY^Wg[%y0:t", 4, 48);
      node1.isCase();
      node0.siblings();
      node0.isDo();
      node0.getJsDocBuilderForNode();
      Node node2 = Node.newNumber((double) 56);
      node1.isNoSideEffectsCall();
      Node node3 = Node.newString(51, "sFkqTA}");
      node3.getJsDocBuilderForNode();
      node1.toString();
      node1.isThis();
      Node node4 = new Node(47, 4095, 8);
      node4.isRegExp();
      Node node5 = new Node(4, node1, node0, node1, node2);
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString(89, "T:z*5}[Hs", (-1458), (-1458));
      node0.getIntProp(89);
      Node node1 = null;
      node0.isEquivalentToTyped((Node) null);
      Node node2 = node0.srcref(node1);
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node.extractLineno(30);
      Node node0 = Node.newString(0, "", 30, 0);
      node0.getChangeTime();
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      node0.setSourceFileForTesting("kV@UR'Uyxy");
      node0.isOnlyModifiesArgumentsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node1.isSwitch();
      Node node2 = new Node(30, node0, node0);
      Node node3 = Node.newNumber((double) 4);
      Node node4 = node2.copyInformationFrom(node3);
      node0.getBooleanProp(89);
      node2.hasOneChild();
      node1.isSyntheticBlock();
      node4.isUnscopedQualifiedName();
      node2.isEquivalentToShallow(node4);
      node3.getDirectives();
      node3.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = new Node(101, 101, 1291);
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newString(15, "{24/D]1", 1291, 30);
      node0.srcref(node1);
      node0.getJSDocInfo();
      node0.isVarArgs();
      node0.isName();
      Node.newString(1291, "\"%", (-2125), 43);
      Node.newString(113, "{24/D]1", (-1315), 1544);
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = new Node(51, 51, 51);
      node0.toStringTree();
      node0.isLabel();
      Node node1 = Node.newString(37, "IN 51\n");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      node1.isOnlyModifiesArgumentsCall();
      node0.isOnlyModifiesArgumentsCall();
      node0.getLength();
      int int0 = Node.INPUT_ID;
      node0.isCase();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.setType(51);
      node0.checkTreeEquals(node1);
      node1.getJSDocInfo();
      node0.isEmpty();
      node0.isScript();
      node0.isFalse();
      node0.isDelProp();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newString(132, "jc<6");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.setSourceFileForTesting("");
      node0.isOnlyModifiesArgumentsCall();
      node0.getBooleanProp((-2125));
      node0.isOnlyModifiesArgumentsCall();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isSyntheticBlock();
      Node node1 = new Node(117);
      Node node2 = new Node((-2125), node1, node0, node0, 77, 4095);
      node0.isEquivalentToTyped(node2);
      node1.isFromExterns();
      node0.isNot();
      node0.getChildCount();
      node1.isUnscopedQualifiedName();
      node2.useSourceInfoIfMissingFromForTree(node1);
      node1.isInc();
      node0.isParamList();
      node2.isInstanceOf();
      node1.isOnlyModifiesThisCall();
      Node.newString("QS/,LOTw(%T");
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(132, (-2125), 39);
      node0.isNoSideEffectsCall();
      node0.getLength();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node1 = new Node(40, node0, node0);
      String string0 = "The existing child node of the parent should not be null.";
      Node node2 = Node.newString(3563, "The existing child node of the parent should not be null.");
      Node node3 = node1.copyInformationFrom(node2);
      node3.hasOneChild();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      ObjectType.cast((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("}$N90T@&W$|~7=ob:s|", node1, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      Node node4 = enumElementType0.getPropertyNode(enumType1.UNKNOWN_NAME);
      node4.isExprResult();
      Node node5 = Node.newString(node1.DIRECTIVES, string0);
      node5.getSourcePosition();
      // Undeclared exception!
      try { 
        node0.isNumber();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(509, "");
      node0.setSourceFileForTesting("kV@UR'xy");
      node0.getBooleanProp((-746));
      node0.isTry();
      node0.isThis();
      node0.getDirectives();
      Node.newString(38, "qBu?dX96.SVzORJg8u$");
      Node node1 = new Node(262144, node0, node0, 43, 36);
      node1.addChildBefore(node0, node0);
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = new Node(601, 601, (-669));
      Node node1 = new Node(601, node0, node0, node0, 32, 37);
      node0.getStaticSourceFile();
      Node node2 = Node.newString(9, "J!C{Szn9", 48, 4);
      node2.setSourceEncodedPositionForTree(35);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node3 = new Node(51, node1, node1, node1);
      node2.isContinue();
      node2.isTry();
      node0.isQualifiedName();
      Node node4 = new Node((-1579));
      node4.setVarArgs(false);
      node4.getDirectives();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newNumber((-511.57120574780777));
      node0.isVarArgs();
      Node node1 = new Node(52, 46, 43);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("`d", false);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node2.isObjectLit();
      node2.setIsSyntheticBlock(false);
      node0.getSideEffectFlags();
      node2.isCase();
      Stack<Node> stack0 = new Stack<Node>();
      node0.hasOneChild();
      node2.isSyntheticBlock();
      node1.isUnscopedQualifiedName();
      node2.isEquivalentToTyped(node0);
      Node node3 = Node.newNumber((double) 38, 56, 4124);
      Node node4 = node2.srcref(node3);
      Node node5 = node0.cloneTree();
      node5.srcrefTree(node4);
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = new Node(101, 48, 48);
      node0.mayMutateGlobalStateOrThrow();
      node0.isFromExterns();
      node0.setLineno(38);
      node0.setOptionalArg(true);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("KGD$BS;ys6`m", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isArrayLit();
      node0.getJSType();
      node0.isHook();
      node0.isReturn();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      Node node1 = Node.newString(4, "");
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      Node.newNumber((double) 31);
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node0.getSideEffectFlags();
      Node node3 = new Node(38, node0, node2);
      node1.hasOneChild();
      node1.isSyntheticBlock();
      node3.isEquivalentToTyped(node2);
      node3.setSourceEncodedPosition(38);
      Node node4 = Node.newNumber(1.0);
      node4.setType(36);
      node0.detachFromParent();
      node2.getJSDocInfo();
      node3.getDirectives();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node4.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node1.isThis();
      node4.isTypeOf();
      node4.getLastChild();
      node1.useSourceInfoFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(30, "jc<6");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setSourceEncodedPositionForTree(51);
      Node node2 = Node.newString(29, "IN\n", 2, 119);
      node1.setSourceEncodedPosition(57);
      Node node3 = new Node(38, node2, 114, 53);
      Node node4 = new Node(37, node3, 51, 52);
      node4.getIntProp(629);
      node2.isWhile();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      node0.appendStringTree(charArrayWriter0);
      node4.getDirectives();
      node3.isIf();
      node2.isDelProp();
      node4.isTry();
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      node0.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node1.isOptionalArg();
      node0.setIsSyntheticBlock(false);
      node1.isNew();
      node0.mayMutateArguments();
      node1.isContinue();
      node1.isTry();
      node1.isQualifiedName();
      node1.isVarArgs();
      node0.setVarArgs(true);
      node1.isVoid();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.addSuppression((String) null);
      node0.hasChildren();
      node1.setString("9J/^_X#.#");
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(8232, node0, node0, node0, node0);
      node0.addChildrenToFront(node1);
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = new Node(103, 1443, 103);
      node0.siblings();
      node0.getQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("-9", node0, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      Node node1 = enumElementType1.getPropertyNode(enumType0.EMPTY_TYPE_COMPONENT);
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = new Node((-127), (-127), 1269);
      Node node1 = new Node((-656), node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.addChildToBack(node1);
      node0.isHook();
      node2.addSuppression("    ");
      node1.isHook();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(484);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node0 = new Node(755, 755, 484);
      node0.isNoSideEffectsCall();
      node_SideEffectFlags0.setThrows();
      node0.isDelProp();
      node0.hasOneChild();
      node0.isOr();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(132, (-2125), 39);
      node0.isNoSideEffectsCall();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node0.putBooleanProp((-559), false);
      node_SideEffectFlags1.setMutatesThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isCase();
      node0.setVarArgs(false);
      node0.getIntProp(93);
      node0.isWhile();
      node0.getDirectives();
      node0.isIf();
      node0.isDelProp();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = Node.newString("EOC");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node0.isNoSideEffectsCall();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      node0.isThrow();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(111, nodeArray0);
      node2.isAssignAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.getAncestors();
      Node node3 = new Node((-1364), node1);
      Node node4 = Node.newString("{24/D]1");
      node3.getSourcePosition();
      Node node5 = new Node(48, node4, node3, node3, node0, 54, 1459);
      node5.isNumber();
      Node node6 = node5.getChildBefore(node3);
      node6.isContinue();
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = new Node(16, 16, 115);
      Node node1 = new Node(100, node0, node0, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node0.mayMutateGlobalStateOrThrow();
      Node node3 = node2.cloneTree();
      node1.addChildrenToFront(node3);
      Node.newString(20, "DICT", 492, 42);
      node3.removeProp(51);
      node2.getAncestors();
      node2.toString();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.addChildBefore(node0, node3);
      node1.srcrefTree(node2);
      node1.removeChildAfter(node2);
      Node node4 = node3.clonePropsFrom(node2);
      node4.srcref(node2);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        node4.setWasEmptyNode(boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = Node.newNumber((-511.57120574780777));
      node0.isVarArgs();
      Node node1 = new Node(52, 46, 43);
      node0.isBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = new Node(47, node0, node1, node1, node0, 46, 46);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = new Node(57, node2);
      node1.useSourceInfoFrom(node3);
      node4.addChildrenAfter(node2, node1);
      node4.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        node4.getChangeTime();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = Node.newString(1, "43GzyUlX&#OTW(");
      node0.hasMoreThanOneChild();
      node0.isVoid();
      node0.isSwitch();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("`d", true);
      Node node1 = null;
      node0.checkTreeTypeAwareEqualsImpl((Node) null);
      node0.addChildrenToFront(node1);
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node.extractLineno(0);
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      int int0 = Node.FLAG_NO_THROWS;
      node0.getStaticSourceFile();
      Node node1 = new Node(51);
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      Node.newString(57, "kV@UR'xy", 46, 43);
      node1.isNE();
      node1.removeProp(42);
      node2.removeChildren();
      node0.getAncestor(0);
      node2.isRegExp();
      node2.getType();
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      Node node1 = Node.newString(4, "");
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      node1.getBooleanProp((-759));
      node2.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newNumber((double) 31);
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node0.getSideEffectFlags();
      Node node4 = new Node(38, node0, node2);
      node1.hasOneChild();
      node2.isCase();
      Node node5 = new Node(36, node3, node4);
      Node node6 = node3.copyInformationFrom(node5);
      node2.putProp(32, node3);
      node4.getBooleanProp(1843);
      node4.hasOneChild();
      node4.isSyntheticBlock();
      node3.isUnscopedQualifiedName();
      node3.isEquivalentToTyped(node5);
      Node node7 = node5.srcref(node1);
      node6.cloneTree();
      node2.srcrefTree((Node) null);
      node7.isIn();
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = new Node(101, 48, 48);
      node0.mayMutateGlobalStateOrThrow();
      node0.isFromExterns();
      node0.setLineno(53);
      node0.setOptionalArg(true);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("KGD$@BS;ys6`m", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(154);
      node1.checkTreeEquals(node0);
      node0.getJSDocInfo();
      node0.isEmpty();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node1.isNull();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.isTry();
      node2.isQualifiedName();
      node2.copyInformationFrom(node0);
      JSType.toMaybeTemplatizedType((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("#c)", node1, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      String string0 = "com.google.common.base.CharMatcher$8";
      Node node3 = enumElementType1.getPropertyNode(string0);
      node3.isObjectLit();
      // Undeclared exception!
      try { 
        node2.replaceChild(node3, node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newString(51, "(]O", (-1534), (-810));
      node0.isFunction();
      Node node1 = Node.newNumber((double) 29, (-2834), 1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node(46, node0, node0, node0);
      Node node3 = node2.clonePropsFrom(node0);
      node3.putIntProp(46, 1);
      node1.putProp(51, node2);
      node3.isEquivalentToTyped(node1);
      node3.removeChild(node0);
      Node node4 = node0.srcref(node2);
      node4.setLineno(55);
      node3.setIsSyntheticBlock(false);
      node0.isAnd();
      node0.getChangeTime();
      node0.isTry();
      node4.isNew();
      node0.checkTreeEquals(node4);
      node1.getDouble();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("jc<6", true);
      Node node0 = Node.newString((-4314), ".");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.setSourceFileForTesting("jc<6");
      node0.isOnlyModifiesArgumentsCall();
      node0.getBooleanProp((-344));
      node0.isOnlyModifiesArgumentsCall();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isSyntheticBlock();
      Node node1 = new Node(39, node0, node0, node0, node0, 42, 98);
      node1.isEquivalentToTyped(node0);
      node1.isNot();
      node1.getChildCount();
      node0.isUnscopedQualifiedName();
      node1.isInc();
      node1.isParamList();
      node1.isInstanceOf();
      node0.isOnlyModifiesThisCall();
      Node.newString("KGD$BS;ys6`m");
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      Node node0 = Node.newString((-2125), "jc:r");
      Node node1 = new Node((-615), node0, node0, node0, 2756, 256);
      node1.isArrayLit();
      node0.getJSType();
      node1.isHook();
      node1.isReturn();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(42, node0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)jCqm", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node0.isGetElem();
      node1.setIsSyntheticBlock(false);
      node2.isQualifiedName();
      Node node3 = new Node(23, node1, node1, node2, node2);
      Node node4 = new Node(13, node3, node3, node1);
      node1.hasChild(node0);
      node2.replaceChild(node3, node4);
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = Node.newString("O-BjLY^Wg[%y0:t");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(39);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node1 = new Node(43, node0, node0, node0);
      node1.isContinue();
      node0.isTry();
      node1.isQualifiedName();
      node1.setVarArgs(false);
      node0.srcref(node1);
      node1.mayMutateGlobalStateOrThrow();
      node1.cloneTree();
      node1.srcrefTree(node0);
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      int int0 = Node.COLUMN_MASK;
      Node node0 = Node.newString(509, "");
      node0.setSourceFileForTesting("kV@UR'xy");
      node0.getBooleanProp((-746));
      node0.isTry();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      node0.isEquivalentTo((Node) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(509, "");
      Node node1 = new Node(100, node0, node0, node0, 15, 42);
      node1.isArrayLit();
      node1.srcref(node0);
      node0.getJSType();
      node1.isHook();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Yx>)J)jCqm", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      node0.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node0.isGetElem();
      node0.setIsSyntheticBlock(false);
      node1.isEquivalentTo(node0, true, false, true);
      int int0 = Node.LAST_PROP;
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node(132, (-2125), 39);
      node0.isNoSideEffectsCall();
      node_SideEffectFlags1.setThrows();
      node0.putBooleanProp((-559), false);
      Node node1 = new Node(4095, node0, node0, 132, 115);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.isEquivalentToTyped(node1);
      node1.setSourceFileForTesting("NSMPVdo%TsFMHmgL");
      node2.isOnlyModifiesArgumentsCall();
      node1.isArrayLit();
      Node node3 = new Node((-234));
      Node node4 = new Node(4095);
      node4.isVar();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      int int0 = (-1815);
      Node.mergeLineCharNo((-1815), (-1815));
      Node node0 = Node.newNumber((double) (-1), 47, 2685);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isSwitch();
      node0.setCharno(197);
      jSDocInfo0.setConstructor(false);
      node0.setLength(730);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newString("");
      node0.checkTreeEqualsImpl(node1);
      Node node2 = null;
      node0.addChildrenToBack((Node) null);
      node0.setSideEffectFlags(int0);
      node1.setCharno(node0.DIRECT_EVAL);
      node1.checkTreeEqualsImpl(node2);
      node1.setDouble(node0.DECR_FLAG);
      int int1 = 3696;
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      simpleSourceFile0.getLineOffset(300);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = node0.useSourceInfoIfMissingFromForTree(node0);
      node0.setSourceFileForTesting((String) null);
      node1.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node1.isOptionalArg();
      node0.setIsSyntheticBlock(false);
      node1.isNew();
      node0.mayMutateArguments();
      node0.isContinue();
      node1.isTry();
      node1.isQualifiedName();
      node1.isVarArgs();
      node0.setVarArgs(true);
      node1.isVoid();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.addSuppression((String) null);
      node0.hasChildren();
      node0.isSetterDef();
      node2.isGetterDef();
      node0.checkTreeEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newNumber((-511.57120574780777));
      node0.isVarArgs();
      Node node1 = new Node(52, 46, 43);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("`d", false);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node2.isObjectLit();
      node2.setIsSyntheticBlock(true);
      node0.getSideEffectFlags();
      Stack<Node> stack0 = new Stack<Node>();
      node0.hasOneChild();
      node2.isSyntheticBlock();
      node1.isUnscopedQualifiedName();
      node2.isEquivalentToTyped(node0);
      Node node3 = Node.newNumber((double) 38, 56, 4124);
      node2.srcref(node3);
      node0.cloneTree();
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node.extractLineno(0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.forwardDeclareType("H!r");
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node0 = new Node(119);
      jSTypeRegistry0.createFunctionType((JSType) templateType1, node0);
      node0.isWith();
      Node node1 = Node.newString("Named type with empty name component", (-2508), (-1735));
      node1.isFunction();
      node1.isTrue();
      node1.isCast();
      node0.addChildrenToBack(node1);
      node0.siblings();
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node node1 = Node.newString((-2371), "jc<6", 46, 56);
      node1.isThis();
      node1.setType(4095);
      Node node2 = new Node(16);
      node1.isVar();
      node2.getNext();
      node0.addChildAfter((Node) null, node2);
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newNumber((-511.571205747808));
      node0.isVarArgs();
      Node node1 = new Node(52, 46, 43);
      node0.isBlock();
      node1.setSourceFileForTesting("Y@ud}zm!<6taDbO]M");
      Node node2 = new Node(29, node1, node0);
      Node node3 = node1.copyInformationFrom(node0);
      node3.getAncestors();
      node2.hasOneChild();
      node3.isEquivalentToTyped(node2);
      node2.isNot();
      node1.isEmpty();
      node3.isUnscopedQualifiedName();
      node0.isInc();
      node0.isParamList();
      node1.isEmpty();
      Node.extractLineno((-2379));
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = Node.newNumber(0.0, 39, 688);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      jSTypeRegistry0.forwardDeclareType("Not declared as a constructor");
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      Node node0 = new Node(0);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType1, node0);
      node0.isWith();
      node0.hasOneChild();
      node0.isSyntheticBlock();
      node0.isUnscopedQualifiedName();
      JSType[] jSTypeArray0 = new JSType[9];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType1;
      jSTypeArray0[2] = (JSType) templateType1;
      jSTypeArray0[3] = (JSType) templateType0;
      jSTypeArray0[4] = (JSType) functionType0;
      jSTypeArray0[5] = (JSType) functionType0;
      jSTypeArray0[6] = (JSType) functionType0;
      jSTypeArray0[7] = (JSType) templateType1;
      jSTypeArray0[8] = (JSType) functionType0;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isEquivalentToTyped(node1);
      Node node2 = Node.newNumber((-422.41253531), (-696), 93);
      Node node3 = node1.srcref(node2);
      node3.cloneTree();
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.srcrefTree(node4);
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(15, node0, node0, node0, node0, 50, 29);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceOffset();
      node2.isFromExterns();
      node0.setIsSyntheticBlock(false);
      node2.isNew();
      node1.getChangeTime();
      node1.checkTreeEquals(node2);
      node1.isTry();
      node0.isQualifiedName();
      node0.addChildrenToFront(node2);
      node2.getLastChild();
      Node node3 = new Node((-1065), 1, 63);
      Node node4 = node1.useSourceInfoFrom(node3);
      node4.isNE();
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      node0.isWhile();
      Node node1 = Node.newString(29, "jc<6");
      Node node2 = new Node(37, node1, node0, node1, (-3748), 108);
      node2.setSideEffectFlags(55);
      node0.checkTreeEquals(node1);
      node2.getJSDocInfo();
      node2.isEmpty();
      node1.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Iterator<FunctionType> iterator0 = (Iterator<FunctionType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.setOptionalArg(true);
      node0.setLength(122);
      node0.setChangeTime(122);
      Node node1 = new Node(57);
      node1.children();
      Node node2 = node0.srcrefTree(node1);
      PriorityQueue<JSType> priorityQueue0 = new PriorityQueue<JSType>();
      node0.cloneNode();
      node1.addChildToFront(node0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, true);
      FunctionType functionType0 = jSTypeRegistry1.createFunctionTypeWithNewReturnType((FunctionType) null, (JSType) null);
      FunctionType functionType1 = jSTypeRegistry1.createFunctionTypeWithVarArgs((JSType) functionType0, (List<JSType>) immutableList0);
      priorityQueue0.add(functionType1);
      node2.cloneNode();
      immutableList0.retainAll(priorityQueue0);
      // Undeclared exception!
      try { 
        node1.isOptionalArg();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(42, node0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)jCqm", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node1.setIsSyntheticBlock(false);
      node2.isEquivalentTo(node0, false, false, true);
      node1.getJsDocBuilderForNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.getQualifiedName();
      node2.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(132, (-2125), 39);
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.setThrows();
      node0.putBooleanProp((-559), false);
      node_SideEffectFlags1.setMutatesThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isCase();
      node0.isScript();
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      jSDocInfo1.getTypedefType();
      node0.isContinue();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node2 = new Node(105, node1, node1);
      node2.isFunction();
      node0.isTrue();
      node2.isBlock();
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = new Node(51);
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString(36, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(116);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(2);
      node_SideEffectFlags1.setReturnsTainted();
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.useSourceInfoFrom(node1);
      node3.isEquivalentToTyped(node2);
      node1.setSourceFileForTesting("");
      node0.isOnlyModifiesArgumentsCall();
      Node node4 = new Node((-1196));
      node4.mayMutateArguments();
      node0.isArrayLit();
      Node node5 = new Node(29);
      node3.isVar();
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(26, "`d");
      Node node1 = new Node(1133, 790, 1133);
      node0.getSourcePosition();
      node1.isNumber();
      node1.isInc();
      Node node2 = new Node(16, node1, node1, node1, node1);
      node2.getChildAtIndex(1);
      node2.isIf();
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = Node.newString(51, "(]O", (-1534), (-810));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.setConstructor(true);
      jSDocInfo0.getAssociatedNode();
      node0.isEquivalentToShallow((Node) null);
      node0.isFunction();
      int int0 = (-2830);
      int int1 = 1;
      Node node1 = Node.newNumber((double) node0.JSDOC_INFO_PROP, int0, int1);
      int int2 = 46;
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(132, (-2125), 39);
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.setThrows();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isSetterDef();
      node0.isGetterDef();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node.extractLineno(0);
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.setSourceFileForTesting("");
      Node node1 = new Node(98, node0, node0);
      Node node2 = new Node(41, node1);
      Node node3 = node2.copyInformationFrom(node1);
      node3.hasOneChild();
      node2.isEquivalentToTyped(node1);
      node1.isNot();
      node0.isEmpty();
      node3.isUnscopedQualifiedName();
      node2.isInc();
      node2.isParamList();
      node3.isEmpty();
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(0);
      Node node1 = new Node(31);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("r`w5P-bF3h~<Y{");
      node2.isDefaultCase();
      node0.getSourceOffset();
      node0.isGetElem();
      node1.isNoSideEffectsCall();
      node1.checkTreeEquals(node0);
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node.extractLineno(344);
      Node node0 = Node.newString(306654252, "");
      String string0 = "new child has existing parent";
      node0.setSourceFileForTesting("");
      node0.getBooleanProp(51);
      int int0 = 306654252;
      Node node1 = new Node(node0.OPT_ARG_NAME, node0, node0, node0, node0, node0.VAR_ARGS_NAME, int0);
      node1.isTry();
      // Undeclared exception!
      try { 
        node0.isSetterDef();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(30, "jc<6");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = Node.newString(29, "IN\n", 2, 119);
      node1.setSourceEncodedPosition(57);
      Node node3 = new Node(38, node2, 114, 53);
      Node node4 = new Node(37, node3, 51, 52);
      node3.removeProp(15);
      node4.removeChildren();
      node0.getAncestor(46);
      node2.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newString("jsdoc_info");
      node0.toString();
      Node node1 = Node.newString(51, "jsdoc_info", 1, 55);
      node1.setCharno(16);
      Node node2 = new Node(39, node0, node1, node0, node0);
      Node node3 = node0.useSourceInfoFrom(node2);
      node0.getDirectives();
      node3.getBooleanProp(51);
      Node node4 = node2.cloneNode();
      node3.getSourceOffset();
      node1.isObjectLit();
      node1.isStringKey();
      node2.isAdd();
      node4.siblings();
      node2.getProp(4095);
      node0.isHook();
      node0.getChildAtIndex(57);
      int int0 = 7;
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node0 = new Node(132, (-2125), 30);
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.setThrows();
      node0.isAssign();
      node0.hasOneChild();
      Node[] nodeArray0 = new Node[2];
      Node node1 = Node.newString(114, "com.google.common.base.CharMatcher$5");
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      node0.isEquivalentTo(node0, false, false, false);
      int int0 = Node.LAST_PROP;
      Node node2 = new Node(56, node0, node1, node0, node1, 125, 38);
      node2.isDec();
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newString(51, "(]O", (-1534), (-810));
      node0.isFunction();
      Node node1 = Node.newNumber((double) 29, (-2830), 1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node(46, node0, node0, node0);
      Node node3 = node2.clonePropsFrom(node0);
      node3.putIntProp(46, 1);
      node1.putProp(51, node2);
      node3.isEquivalentToTyped(node1);
      node3.removeChild(node0);
      node0.srcref(node2);
      node2.isNoSideEffectsCall();
      node0.checkTreeEquals(node2);
      node2.getDouble();
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.setSourceFileForTesting("`d");
      node0.isDefaultCase();
      node1.getSourceOffset();
      node2.isGetElem();
      Node.newNumber(860.0, 1578, 93);
      node2.isVarArgs();
      node1.isComma();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(132, (-2125), 39);
      node0.isNoSideEffectsCall();
      node_SideEffectFlags2.setThrows();
      node0.putBooleanProp((-559), false);
      node_SideEffectFlags1.setMutatesThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isCase();
      Node node1 = new Node(31, node0, node0, 93, 51);
      node1.isQualifiedName();
      node0.cloneTree();
      node0.getIndexOfChild((Node) null);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "`d");
      node1.isUnscopedQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node1.isCase();
      String string0 = node0.getString();
      node0.getBooleanProp(13);
      node1.isHook();
      node1.getLength();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = jSDocInfo0.getAssociatedNode();
      node0.addChildToFront((Node) null);
      node2.addSuppression(string0);
      node2.isSetterDef();
      int int0 = 122;
      node1.getIntProp(int0);
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = new Node(16, 1628, 16);
      Node node1 = new Node(30, node0, node0, node0, 16, 4);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.getQualifiedName();
      node2.isLocalResultCall();
      String string0 = "ARRAY_TYPE";
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node1.setSideEffectFlags(node_SideEffectFlags1);
      node0.setString("ARRAY_TYPE");
      node0.setSourceFileForTesting(string0);
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // GT 16 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newNumber((double) 7);
      Node node1 = new Node(15, node0, node0, node0, node0, 50, 29);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("mx>)J)j(qm");
      node0.getSourceOffset();
      node1.isDec();
      node0.setIsSyntheticBlock(false);
      node2.isNew();
      node1.getChangeTime();
      node1.checkTreeEquals(node2);
      node0.isOnlyModifiesThisCall();
      Node node3 = Node.newString(46, "mx>)J)j(qm", 54, 45);
      node3.isBlock();
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node.newString("?HHIPF0Gy", 941, 941);
      Node node0 = Node.newString(42, "?HHIPF0Gy");
      node0.getBooleanProp(12);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString(110, "?HHIPF0Gy", 1048576, 48);
      node0.isThis();
      node0.setType(43);
      Node node2 = new Node(57);
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2149));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node(132, (-2149), 39);
      node0.isNoSideEffectsCall();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = new Node(56, node0, node0, node0);
      Node node2 = node0.copyInformationFrom(node1);
      node0.getBooleanProp(26);
      node2.hasOneChild();
      node1.isRegExp();
      node1.isUnscopedQualifiedName();
      node0.isEquivalentToShallow(node2);
      node0.getDirectives();
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(111);
      node0.putBooleanProp(111, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isCase();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("zI\n4k9yV", false);
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = new Node(51);
      node0.isVarArgs();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.mayMutateGlobalStateOrThrow();
      node0.isNot();
      node0.isIn();
      node0.isInstanceOf();
      node0.isSwitch();
      node0.isTrue();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(41, node0, node0);
      node0.addChildToFront(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(";^q\"zY", false);
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.checkTreeEquals(node2);
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = Node.newString((-810), "com.google.common.base.Joiner$2", (-1534), (-1534));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node1.isFunction();
      Node node2 = Node.newNumber((double) (-2830), 4095, 40);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      Node node3 = new Node((-2520), node0, node1, node2);
      Node node4 = node2.clonePropsFrom(node3);
      node2.putIntProp(1214, 1006);
      node0.putProp(54, node2);
      node3.isEquivalentToTyped(node0);
      node3.removeChild(node4);
      Node node5 = node4.srcref(node2);
      node5.isNoSideEffectsCall();
      Node node6 = new Node((-2483), node2, node5);
      node2.checkTreeEquals(node6);
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(644);
      Node node1 = new Node(31);
      node1.setJSDocInfo((JSDocInfo) null);
      node0.isVarArgs();
      node0.isDefaultCase();
      node1.isNew();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 1, 0);
      node0.getStaticSourceFile();
      Node node1 = Node.newString(15, "");
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("kV@UR'xy");
      Node node3 = Node.newString(57, "kV@UR'xy", 46, 43);
      node1.isNE();
      node1.removeProp(42);
      node2.removeChildren();
      node0.getAncestor(0);
      node3.getDirectives();
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = new Node(44);
      Node node1 = new Node(120, 102, 32);
      node1.srcrefTree(node0);
      node0.getQualifiedName();
      Node.newString("tP3U1xz5;!s7");
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = Node.newString(37, "j'<6");
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(2048, nodeArray0);
      node1.isCase();
      node1.getSourcePosition();
      node0.isNumber();
      node1.isCatch();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(30, "jc<6");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.newString(29, "IN\n", 2, 119);
      node1.setSourceEncodedPosition(57);
      Node node2 = new Node(1174, node1, node0, 56, 3231);
      node0.getIndexOfChild((Node) null);
      node1.isBlock();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node.extractCharno((-1630));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = new Node((-1630), (Node) null);
      // Undeclared exception!
      try { 
        node0.isNoSideEffectsCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      node0.toStringTree();
      node0.isGetProp();
      Node node1 = Node.newString(39, "jc<6");
      node0.getStaticSourceFile();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("STRING jc<6\n", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node2 = new Node(152, node1);
      node0.isBreak();
      node1.getJSDocInfo();
      node2.isLabelName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isContinue();
      node2.addChildBefore(node0, node1);
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(509, "");
      Node node1 = new Node(100, node0, node0, node0, 15, 42);
      node1.replaceChildAfter(node0, node0);
      int int0 = (-1198);
      Node.newNumber((double) node1.FLAG_NO_THROWS, node0.OPT_ARG_NAME, int0);
      node1.isArrayLit();
      node0.getJSType();
      node1.isHook();
      // Undeclared exception!
      try { 
        node0.isReturn();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(132, (-2125), 39);
      node_SideEffectFlags2.setMutatesThis();
      node0.isFunction();
      node_SideEffectFlags2.setThrows();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isExprResult();
      Node node1 = new Node(31, node0, node0, 93, 51);
      node0.getIndexOfChild((Node) null);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      jSTypeRegistry0.forwardDeclareType("Not declared as a constructor");
      Node node0 = new Node(43);
      jSTypeRegistry0.createFunctionType((JSType) templateType0, node0);
      node0.isWith();
      node0.isWith();
      node0.isTrue();
      node0.isCast();
      node0.isFor();
      node0.isAnd();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = new Node(51, 51, 51);
      node0.toStringTree();
      node0.isLabel();
      Node node1 = Node.newString(37, "IN 51\n");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      node1.isOnlyModifiesArgumentsCall();
      node0.isOnlyModifiesArgumentsCall();
      node0.getLength();
      int int0 = Node.INPUT_ID;
      node0.isEquivalentTo((Node) null, false, false, false);
      int int1 = Node.LAST_PROP;
      node0.isDec();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = Node.newString(509, "");
      Node node1 = new Node(100, node0, node0, node0, 15, 42);
      node1.isArrayLit();
      node1.useSourceInfoIfMissingFrom(node0);
      node1.getIntProp(751619276);
      node0.isSetterDef();
      node0.isContinue();
      node0.putIntProp(32, 3);
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newNumber((double) 7);
      Node node1 = new Node(38);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mx>)J)j(qm", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setSourceFileForTesting("mx>)J)j(qm");
      node0.getSourceOffset();
      node1.isDec();
      node0.setIsSyntheticBlock(false);
      node0.isThrow();
      node1.getChangeTime();
      node1.checkTreeEquals(node2);
      node0.isOnlyModifiesThisCall();
      Node node3 = Node.newString(46, "mx>)J)j(qm", 54, 45);
      node2.checkTreeEquals(node3);
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = new Node(51);
      node0.isVarArgs();
      Node node1 = new Node(12, 49, (-114));
      node0.isBlock();
      String string0 = "Y@ud}zm!<6taDbO]M";
      node1.setSourceFileForTesting("/+B{-[z:E");
      Node node2 = new Node(13, node0, node1);
      Node node3 = node2.copyInformationFrom(node0);
      node0.hasOneChild();
      node2.isEquivalentToTyped((Node) null);
      node3.isNot();
      node0.isEmpty();
      Node.newString(string0);
      node3.isStringKey();
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = node0.cloneTree();
      node1.setChangeTime(38);
      Node node2 = Node.newString(778, "jc<6", 42, (-4314));
      node0.isArrayLit();
      node0.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(true);
      node1.isNew();
      Node node3 = Node.newString(39, "jc<6");
      node3.getChangeTime();
      PipedInputStream pipedInputStream0 = new PipedInputStream(56);
      Node node4 = node2.getParent();
      Node node5 = Node.newNumber((double) 15, 4311, 154);
      node5.isAnd();
      node3.setDouble(51);
      node4.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2125));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(132, (-2125), 39);
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node0.isFunction();
      node_SideEffectFlags2.setThrows();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isExprResult();
      Node node1 = new Node(31, node0, node0, 93, 51);
      node0.cloneNode();
      node0.getIndexOfChild((Node) null);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = new Node(51);
      node0.toStringTree();
      node0.isGetProp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1757));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.setReturnsTainted();
      Node node1 = new Node(0, 43, 16);
      node0.isFunction();
      node_SideEffectFlags1.setThrows();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isExprResult();
      Node node2 = new Node(54, node1, node0, 43, 324);
      node2.getIndexOfChild(node0);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newString(115, "OM3U(O1W`~b(", 148, (-3860));
      node0.isFor();
      Node node1 = Node.newNumber((double) 49, 115, 114);
      Node node2 = Node.newNumber((double) 4095, 153, 47);
      node0.getStaticSourceFile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node0.addChildBefore(node1, node2);
      node1.getDirectives();
      node1.isTry();
      node2.siblings();
      node1.cloneTree();
      String string0 = "KGD$BS;ys6`m";
      // Undeclared exception!
      try { 
        node0.setString(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = new Node(132, (-2142), 30);
      node0.isNoSideEffectsCall();
      node0.isAssign();
      node0.setSourceFileForTesting("6ui2[Nvr37^c/\"P+`");
      Node node1 = Node.newString(2, "*O", 100, 1483);
      node0.isEmpty();
      node0.removeProp(51);
      node1.removeChildren();
      Node node2 = Node.newString(48, "*O");
      node2.getAncestor((-2662));
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-603), node0);
      node1.useSourceInfoFrom(node0);
      Node node2 = new Node((-603), node1, node0, node0, 103, 30);
      node2.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = new Node(51, 51, 51);
      node0.toStringTree();
      node0.isLabel();
      Node node1 = Node.newString(37, "IN 51\n");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      node1.isOnlyModifiesArgumentsCall();
      node0.isOnlyModifiesArgumentsCall();
      node0.getLength();
      int int0 = Node.INPUT_ID;
      node0.isCase();
      node1.isGetElem();
      node1.getJsDocBuilderForNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isVarArgs();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      Node.extractLineno(0);
      Node node0 = Node.newString(0, "", 1, 0);
      Node node1 = new Node(125, 1, 38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isExprResult();
      Node node2 = new Node(55, node0, node0, 57, 4095);
      node2.getIndexOfChild(node0);
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node.extractLineno(30);
      Node node0 = Node.newString(0, "", 30, 0);
      node0.getChangeTime();
      node0.setSourceFileForTesting("");
      node0.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      node0.isContinue();
      Node node1 = new Node(30, node0, node0);
      Node node2 = Node.newNumber((double) 4);
      Node node3 = node1.copyInformationFrom(node2);
      node1.cloneNode();
      node0.getBooleanProp(53);
      node1.hasOneChild();
      node3.copyInformationFromForTree(node1);
      node0.isSyntheticBlock();
      node3.isUnscopedQualifiedName();
      node1.isEquivalentToShallow(node3);
      node2.getDirectives();
      node2.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node.extractLineno(0);
      Node node0 = new Node(0);
      Node node1 = new Node(0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(30, nodeArray0);
      node2.srcref(node1);
      node2.isVarArgs();
      node1.isTry();
      node1.getJsDocBuilderForNode();
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = Node.newString(115, "OM3U(O1W`~b(", 148, (-3860));
      node0.isFor();
      Node node1 = Node.newNumber((double) 49, 115, 114);
      Node node2 = Node.newNumber((double) 4095, 36, 47);
      node0.getStaticSourceFile();
      node0.setQuotedString();
      node1.isDec();
      node2.isCast();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeEqualsImpl(node2);
      node_NodeMismatch0.equals(node1);
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isSyntheticBlock();
      Node node1 = new Node(32, node0, 29, 118);
      node1.isWhile();
      node1.isDelProp();
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.getChildBefore(node2);
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = new Node(101, 48, 48);
      node0.mayMutateGlobalStateOrThrow();
      node0.setLineno(53);
      node0.setOptionalArg(true);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("KGD$@BS;ys6`m", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(154);
      node1.checkTreeEquals(node0);
      node1.isArrayLit();
      node1.isCast();
      node1.isStringKey();
      node1.toString(false, true, true);
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newString("EOC");
      Node node1 = Node.newString(116, "`d");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node0.isNoSideEffectsCall();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node0.isThrow();
      Node node2 = new Node(1, node1, node0, node0, 154, 35);
      node0.isArrayLit();
      node0.isHook();
      Node node3 = node0.srcref(node2);
      node3.isNoSideEffectsCall();
      node0.checkTreeEquals(node3);
      node3.toString(true, true, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = Node.newString("jc<6");
      Node node1 = Node.newString(116, "jc<6");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = new Node(57, node0);
      node3.addChildrenAfter(node2, node0);
      node2.setSourceFileForTesting("NSMPVdo%TsFMHmgL");
      node1.isOnlyModifiesArgumentsCall();
      node3.mayMutateArguments();
      node0.getSourceOffset();
      Node node4 = new Node(36, 54, 0);
      node3.replaceChildAfter(node2, node4);
      node4.getJSDocInfo();
      node4.addChildrenToBack(node2);
      node3.hasChildren();
      node0.removeChildren();
      // Undeclared exception!
      try { 
        node2.cloneTree();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = new Node(51, 51, 51);
      node0.toStringTree();
      Node node1 = Node.newString(2, "IN 51\n", 447, 46);
      node0.isFunction();
      Node node2 = Node.newNumber(4095.0, 177, 50);
      Node node3 = Node.newString(29, "originalname", 37, 30);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      Node node4 = new Node(12, node1, node1, node0);
      node0.clonePropsFrom(node1);
      node1.putIntProp((-3216), (-326));
      node3.putProp(1419, node1);
      node0.isEquivalentToTyped(node3);
      node0.removeChild(node1);
      node2.isReturn();
      node2.getJSDocInfo();
  }
}
