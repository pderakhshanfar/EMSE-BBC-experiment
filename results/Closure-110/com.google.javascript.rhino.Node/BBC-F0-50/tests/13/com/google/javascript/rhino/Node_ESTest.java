/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 31 22:32:20 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.VoidType;
import java.io.CharArrayWriter;
import java.io.PrintStream;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int int0 = 2044;
      int int1 = (-4319);
      Node node0 = null;
      Node node1 = new Node((-4319), (Node) null, (Node) null, (Node) null, 38, 0);
      Node node2 = new Node(int0, node1, node0, node0);
      Node node3 = null;
      try {
        node3 = new Node(int1, node2, node1, node1, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-36));
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newString("");
      Node node1 = new Node(18, node0, 0, 0);
      node0.isEquivalentTo(node1);
      node0.getJsDocBuilderForNode();
      node0.getLength();
      boolean boolean0 = true;
      node1.setOptionalArg(true);
      Node node2 = node0.getLastSibling();
      node2.setSideEffectFlags(38);
      node2.isEquivalentTo(node0, boolean0, boolean0, boolean0);
      node2.toString();
      node2.addChildBefore(node1, node0);
      node1.toString();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = Node.newString(0, "Node has existing properties.", 0, 0);
      Node node1 = new Node(0, node0, 0, 401);
      node1.isEquivalentToShallow(node0);
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = Node.newString((-2721), "", (-1368), (-2721));
      Node node1 = new Node(0, node0, 32, (-2185));
      node1.getNext();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      String string0 = "com.google.javascript.rhino.Node$FileLevelJsDocBuilder";
      Node.newString("com.google.javascript.rhino.Node$FileLevelJsDocBuilder", (-254), (-254));
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      String string1 = "O%O";
      SimpleErrorReporter.getMessage0("Object#Key");
      String string2 = "";
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = Node.newNumber(1894.6517, (-1188), (-1188));
      node0.isVar();
      node0.isTypeOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      TemplatizedType templatizedType0 = JSType.toMaybeTemplatizedType(jSType0);
      ObjectType objectType0 = FunctionType.getTopDefiningInterface((ObjectType) null, "Unknown class name");
      FunctionType functionType0 = JSType.toMaybeFunctionType((JSType) templatizedType0);
      TemplateType templateType0 = JSType.toMaybeTemplateType((JSType) objectType0);
      // Undeclared exception!
      try { 
        ImmutableList.of(jSType0, jSType0, jSType0, jSType0, (JSType) objectType0, (JSType) functionType0, (JSType) objectType0, (JSType) functionType0, (JSType) templatizedType0, (JSType) templatizedType0, (JSType) templateType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = Node.newString((-2477), "~%hj;pgb8");
      Node node1 = new Node((-2477), node0, node0);
      boolean boolean0 = true;
      node1.putBooleanProp(0, true);
      Node node2 = new Node(1449, node1, node1, node0);
      node2.siblings();
      int int0 = 0;
      String string0 = "^[7j[";
      // Undeclared exception!
      try { 
        node2.setWasEmptyNode(boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 39, 39);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      String string0 = " ";
      String string1 = "l0OvwU+PK";
      Node node1 = Node.newNumber((double) 57);
      node0.addChildAfter(node1, node1);
      treeSet0.add(string1);
      InputId inputId0 = null;
      try {
        inputId0 = new InputId(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = new Node((-3623));
      Node node1 = new Node((-3623), node0, node0, node0, 2051, 29);
      node1.getAncestors();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      int int0 = 0;
      node0.setChangeTime(0);
      Node node1 = Node.newNumber(0.0);
      node1.removeFirstChild();
      node1.mayMutateGlobalStateOrThrow();
      Node.newString("");
      node1.setDouble((-1877.71709050228));
      node1.setString("5k");
      node0.isParamList();
      node0.putProp(int0, string0);
      // Undeclared exception!
      try { 
        node0.hasOneChild();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -1877.71709050228 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      int int0 = 0;
      Node node0 = null;
      Node node1 = new Node(0, (Node) null, 0, 0);
      Node node2 = null;
      try {
        node2 = new Node(int0, node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      int int0 = 0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node1 = new Node(450, node0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeRegistry1.getType("Object#Element");
      jSTypeArray0[0] = null;
      Node node2 = jSTypeRegistry1.createOptionalParameters(jSTypeArray0);
      Node node3 = new Node(int0, node1, node1, node0, node2);
      // Undeclared exception!
      try { 
        node3.isGetElem();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("M<hCV<qrm*&s", 2, 2322);
      nodeArray0[0] = node0;
      Node node1 = new Node(262144, node0);
      node1.isUnscopedQualifiedName();
      node1.type = 407;
      node1.removeChild(node0);
      Node node2 = new Node(38, 57, 53);
      node2.isQuotedString();
      node2.getSourceFileName();
      node1.isEquivalentToShallow(node2);
      nodeArray0[1] = node1;
      Node node3 = Node.newString("[]DM!a;#Nh}h:");
      node3.isQuotedString();
      node1.type = 25;
      Node node4 = new Node(2322, nodeArray0);
      node1.isDo();
      node0.isInc();
      node4.isGetterDef();
      node1.isFalse();
      node1.toString();
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node2.getLineno();
      node2.isNoSideEffectsCall();
      node3.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = 382;
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      JSType[] jSTypeArray1 = new JSType[6];
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getParentScope();
      jSTypeArray1[0] = (JSType) null;
      jSTypeArray1[1] = jSType0;
      jSTypeArray1[2] = jSType0;
      jSTypeArray1[3] = jSType0;
      jSTypeArray1[4] = jSType0;
      jSTypeArray1[5] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, false, jSTypeArray1);
      JSType jSType1 = templateTypeMapReplacer0.caseFunctionType(functionType0);
      jSTypeArray0[0] = jSType1;
      jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      int int1 = 0;
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newString("Atk7F~y\"pCa9z<}~mx", (-2985), (-2985));
      node0.setType((-2985));
      node0.putBooleanProp((-2985), false);
      node0.isIn();
      node0.isOptionalArg();
      node0.setSideEffectFlags((-2985));
      node0.getString();
      node0.getSourceFileName();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2985
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(744);
      Node node1 = new Node(0, node0, node0);
      int int1 = 530;
      node1.addChildBefore(node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(int0, node1, node0, node0, int1, node0.SIDE_EFFECTS_FLAGS_MASK);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(", ");
      node0.addChildrenToFront(node1);
      Node node2 = node0.removeFirstChild();
      node2.toStringTree();
      node0.putProp(3262, ", ");
      Node.extractCharno(0);
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(0, node0, node0, node0, node0, (-1518), 32);
      node1.putIntProp((-1988), 0);
      node0.putIntProp(42, 2313);
      Node.extractLineno((-71));
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      int int0 = 911;
      Node node0 = new Node(911, 911, 911);
      String string0 = "+'lW1";
      boolean boolean0 = false;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0, boolean0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      Locale locale0 = Locale.CANADA_FRENCH;
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) mockFileOutputStream0;
      objectArray0[1] = (Object) node0;
      objectArray0[2] = (Object) mockPrintStream0;
      objectArray0[3] = (Object) node0;
      objectArray0[4] = (Object) mockPrintStream0;
      objectArray0[5] = (Object) locale0;
      PrintStream printStream0 = mockPrintStream0.format(locale0, string0, objectArray0);
      // Undeclared exception!
      try { 
        node0.appendStringTree(printStream0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 911
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = Node.newNumber(1123.28);
      node0.isQuotedString();
      node0.setJSDocInfo((JSDocInfo) null);
      String string0 = "/|jq8";
      Node node1 = null;
      node0.setOptionalArg(false);
      node0.addChildrenToBack((Node) null);
      int int0 = 54;
      // Undeclared exception!
      try { 
        Node.newString(string0, node0.SIDE_EFFECTS_FLAGS_MASK, int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newNumber((-527.623501));
      String string0 = "";
      Node node1 = Node.newString(55, "", 37, 2);
      node1.getBooleanProp(15);
      node0.addChildrenAfter(node1, node1);
      // Undeclared exception!
      try { 
        node0.getLineno();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isCast();
      node0.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      int int0 = 949;
      Node node0 = new Node(949, (Node[]) null);
      Node node1 = null;
      try {
        node1 = new Node(int0, node0, node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(43, (-2002), (-2002));
      double double0 = (-4271.73238598006);
      int int0 = 0;
      Node.newString((String) null);
      int int1 = (-3172);
      Node.newNumber(double0, int0, int1);
      // Undeclared exception!
      try { 
        node0.isCase();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = null;
      Node.newString((String) null, (-1274), (-1274));
      int int0 = 5;
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.cloneTree();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node0 = new Node(13, 1073741823, 13);
      node0.isDec();
      node0.isSetterDef();
      node0.toString();
      Node node1 = new Node(29, node0, node0, node0);
      node0.isEquivalentToTyped(node1);
      node0.isFalse();
      node0.getChangeTime();
      Node node2 = new Node(0, node0, node0, node0, 0, 2093);
      node0.removeChild(node2);
      node0.cloneNode();
      int int0 = 0;
      Node.extractLineno(int0);
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.clearAllFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedHashSet<JSType> linkedHashSet0 = new LinkedHashSet<JSType>();
      jSTypeRegistry0.resetForTypeCheck();
      Iterator<JSType> iterator0 = linkedHashSet0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(0, node0);
      node0.replaceChild(node1, node1);
      node0.copyInformationFromForTree(node1);
      // Undeclared exception!
      try { 
        node1.useSourceInfoIfMissingFromForTree(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node.extractLineno(63);
      Node node0 = Node.newString(0, "");
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newString(2830, (String) null);
      String string0 = "";
      // Undeclared exception!
      try { 
        node0.addSuppression(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = Node.newString(1615, "JB$afF");
      node0.isBreak();
      Node node1 = new Node((-1906), (Node[]) null, 40, 2876);
      node1.setType(node0.FLAG_GLOBAL_STATE_UNMODIFIED);
      Node node2 = new Node(node0.CHANGE_TIME, node1, node0);
      Node node3 = node0.clonePropsFrom(node2);
      node3.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node1.isIf();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[2];
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      jSTypeArray0[0] = (JSType) objectType0;
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("qJq}MbT5v)WC7");
      jSTypeArray0[1] = (JSType) templateType0;
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node(0, node0, node0, node0, 113, 2838);
      node1.setLength(16);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = new Node((-930), (Node) null);
      // Undeclared exception!
      try { 
        node0.isDo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = Node.newNumber((-2538.1748150438475), 112, 1763);
      node0.setQuotedString();
      String string0 = "X08(c/]4ne a[]G%e8";
      node0.toString();
      // Undeclared exception!
      try { 
        node0.isOnlyModifiesThisCall();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.toString();
      node0.isFromExterns();
      Node node1 = new Node(1, node0, node0);
      jSTypeRegistry0.identifyNonNullableName("PARAM_LIST");
      Node node2 = node1.copyInformationFrom(node0);
      node2.setOptionalArg(false);
      simpleErrorReporter0.error("PARAM_LIST", "free_call", 0, 12);
      Node node3 = node0.useSourceInfoFromForTree(node2);
      node0.getIndexOfChild(node1);
      node0.setDouble(0.0);
      Node node4 = Node.newString(jSTypeRegistry0.OBJECT_INDEX_TEMPLATE);
      node1.isAssign();
      node4.useSourceInfoIfMissingFrom(node3);
      double double0 = 3809.71;
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node((-3882));
      node0.getDirectives();
      node0.putBooleanProp(2279, false);
      node0.replaceChild((Node) null, (Node) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        node1.setOptionalArg(boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newString("z\"8JizCW>99", 43, 0);
      nodeArray0[0] = node0;
      Node node1 = Node.newString("z\"8JizCW>99");
      nodeArray0[1] = node1;
      Node node2 = Node.newString(86, "z\"8JizCW>99");
      node2.toString();
      nodeArray0[2] = node2;
      Node node3 = new Node(1736, nodeArray0, 4, (-63));
      node3.getDouble();
      node0.isFromExterns();
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isCast();
      node0.isScript();
      node0.getJsDocBuilderForNode();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.getQualifiedName();
      Node node2 = Node.newString("Object#Element");
      node2.isNumber();
      Node node3 = node1.cloneNode();
      node2.copyInformationFromForTree(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(198);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags4.setReturnsTainted();
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      int int0 = 50;
      Node.newString("pQzMziE", 50, 50);
      String string0 = "Uz]";
      String string1 = "cEBVEi>ls>";
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0, string1);
      // Undeclared exception!
      try { 
        mockPrintStream0.append((CharSequence) string1);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // cEBVEi>ls>
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, 43, 43);
      node0.setLineno(249);
      Node node1 = Node.newString("l=27IuM6h^G$JfS~Q");
      node0.putProp(41, node1);
      String string0 = "d4kDMKC>6";
      MockFile mockFile0 = new MockFile("", "d4kDMKC>6");
      mockFile0.deleteOnExit();
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0, string0);
      node0.appendStringTree(mockPrintStream0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2, nodeArray0, (-346), 2792);
      node0.isNew();
      node0.isFunction();
      node0.isNot();
      node0.isUnscopedQualifiedName();
      node0.isAdd();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.getProp((-346));
      node_NodeMismatch0.equals((Object) null);
      Node node1 = new Node(15, node0, node0, (-1212), 152);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.addChildrenToFront(node0);
      node2.removeChildAfter(node0);
      node2.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = "new child has existing sibling";
      Node node0 = Node.newString(2792, "new child has existing sibling");
      node0.isCast();
      node0.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      int int0 = 1385;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      String string1 = "[V)S*#_tv";
      ObjectType objectType0 = FunctionType.getTopDefiningInterface((ObjectType) null, "[V)S*#_tv");
      FunctionType functionType0 = JSType.toMaybeFunctionType((JSType) objectType0);
      TemplatizedType templatizedType0 = JSType.toMaybeTemplatizedType((JSType) functionType0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType(string0, node0, templatizedType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      // Undeclared exception!
      try { 
        enumType1.getElementsType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString(1615, "JB$afF");
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node1 = new Node(3, nodeArray0, 39, 1028);
      nodeArray0[4].isNew();
      node0.isFunction();
      nodeArray0[3].isNot();
      // Undeclared exception!
      try { 
        nodeArray0[0].isUnscopedQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-25), nodeArray0, (-346), 2792);
      node0.isNew();
      node0.isFunction();
      node0.isNot();
      node0.isUnscopedQualifiedName();
      node0.isAdd();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isCast();
      node0.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = node0.cloneTree();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node1.isSyntheticBlock();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-63);
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte) (-15);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node0.setLineno(51);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString(0, "Node has existing properties.", 0, 0);
      int int1 = 0;
      int int2 = 401;
      node0.toString();
      Node node1 = new Node(int0, node0, int1, int2);
      // Undeclared exception!
      try { 
        node1.isEquivalentToShallow(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isCast();
      node0.isScript();
      node0.getJsDocBuilderForNode();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.getQualifiedName();
      Node node2 = Node.newString("Object#Element");
      node2.isNumber();
      Node node3 = node1.cloneNode();
      node2.copyInformationFromForTree(node3);
      node3.isFromExterns();
      node1.getNext();
      Node node4 = node2.copyInformationFrom(node0);
      node0.isFromExterns();
      node4.isGetProp();
      Node.newNumber((double) 0, 57, 53);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2, nodeArray0, (-346), 2792);
      node0.isNew();
      node0.getDouble();
      Node node1 = node0.getChildAtIndex(node0.COLUMN_MASK);
      node0.mayMutateGlobalStateOrThrow();
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(8, node0, node0, node0, node0);
      node1.putIntProp((-1975), 0);
      node0.putIntProp(42, 2313);
      Node.extractLineno((-71));
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = new Node(20, 20, 1461);
      node0.getSourceOffset();
      node0.getDirectives();
      node0.getString();
      node0.getDirectives();
      int int0 = 8388608;
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(1.0);
      boolean boolean0 = node0.isLocalResultCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(1767, node0, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setOriginalCommentPosition(1461);
      node0.setQuotedString();
      String string0 = "";
      node1.setWasEmptyNode(boolean0);
      jSDocInfo0.setLicense(string0);
      InputId inputId0 = null;
      try {
        inputId0 = new InputId(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node((-1188), (-1188), (-1188));
      node0.isVar();
      node0.isTypeOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = Node.newString(116, "new child has existing sibling");
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newNumber((-527.623501));
      Node node1 = Node.newString(55, "", 37, 2);
      node1.getBooleanProp(15);
      Node node2 = node0.clonePropsFrom(node1);
      node1.getJsDocBuilderForNode();
      node1.isIf();
      node0.replaceChild(node1, node1);
      node2.isFunction();
      // Undeclared exception!
      try { 
        node2.isNot();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 0, 0);
      node0.isQuotedString();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node node2 = Node.newNumber(0.0, 1048576, 119);
      node2.setOptionalArg(true);
      Node node3 = Node.newString("+&", 49, 52);
      node3.addSuppression("/|jq8");
      Node node4 = node3.srcref(node0);
      node1.replaceChildAfter(node0, node3);
      node2.isFromExterns();
      String string0 = "y|8+#HVF\\IX[";
      int int0 = (-1428);
      int int1 = (-2625);
      Node.newString(string0, int0, int1);
      node2.isContinue();
      node3.getLastSibling();
      node1.wasEmptyNode();
      // Undeclared exception!
      try { 
        node4.isGetterDef();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-36));
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newString("");
      node0.isEquivalentTo(node0);
      node0.getJsDocBuilderForNode();
      node0.getLength();
      boolean boolean0 = true;
      node0.setOptionalArg(true);
      Node node1 = node0.getLastSibling();
      node1.setSideEffectFlags(38);
      node1.isEquivalentTo(node0, boolean0, boolean0, boolean0);
      node1.toString();
      node1.addChildBefore(node0, node0);
      node0.toString();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isCast();
      node0.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isFromExterns();
      Node node1 = node0.getNext();
      node0.copyInformationFrom((Node) null);
      node1.isFromExterns();
      // Undeclared exception!
      try { 
        node0.isGetProp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(", ");
      node0.addChildrenToFront(node1);
      Node node2 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      node2.isFunction();
      node2.isNot();
      node0.isUnscopedQualifiedName();
      Node node3 = new Node(52, node1, 52, 1289);
      node3.isAdd();
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      node0.isContinue();
      node1.isNot();
      node0.isUnscopedQualifiedName();
      Node node2 = new Node(52, node0, 52, 1289);
      node2.isAdd();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(50, node0, node0, node0, 31, 29);
      int int0 = 811;
      node1.getSourceFileName();
      boolean boolean0 = false;
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[6];
      node1.replaceChild(node0, node0);
      // Undeclared exception!
      try { 
        node1.isEmpty();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 0, 0);
      node0.isQuotedString();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      String string0 = "/|jq8";
      node1.isBreak();
      Node node2 = new Node((-1315), (Node[]) null, 15, (-1315));
      node2.setType(node1.ORIGINALNAME_PROP);
      int int0 = (-1099);
      Node node3 = new Node(int0, node0, node0);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node3, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isCast();
      node0.isScript();
      node0.getJsDocBuilderForNode();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.getQualifiedName();
      Node node2 = Node.newString("Object#Element");
      node2.isNumber();
      Node node3 = node1.cloneNode();
      node2.copyInformationFromForTree(node3);
      node3.getLineno();
      Node node4 = Node.newString((String) null);
      node1.cloneTree();
      // Undeclared exception!
      try { 
        node4.isFromExterns();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[6];
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getParentScope();
      jSTypeArray0[0] = (JSType) null;
      node0.isNumber();
      Node node1 = node0.cloneNode();
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isFromExterns();
      node2.getNext();
      Node node3 = node2.copyInformationFrom(node0);
      node0.isFromExterns();
      node3.isGetProp();
      Node.newNumber((double) 55, 53, 4);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Node node0 = Node.newString((-1346), "com.google.common.base.Predicates$AndPredicate");
      node0.setVarArgs(false);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = new Node(744);
      Node node1 = new Node(0, node0, node0);
      String string0 = "com.google.javascript.rhino.Node$ObjectPropListItem";
      node1.addSuppression("com.google.javascript.rhino.Node$ObjectPropListItem");
      Node node2 = node0.srcref(node1);
      node1.replaceChildAfter(node2, node0);
      node1.isFromExterns();
      // Undeclared exception!
      try { 
        Node.newString(string0, node0.FLAG_ARGUMENTS_UNMODIFIED, node2.QUOTED_PROP);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)36;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      Node node0 = Node.newString("[@juLL.9&Ou");
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_PROTOTYPE;
      ObjectType objectType0 = jSTypeRegistry1.getNativeObjectType(jSTypeNative0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("[@juLL.9&Ou", node0, objectType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      jSTypeArray0[0] = (JSType) enumElementType0;
      JSTypeNative jSTypeNative1 = JSTypeNative.TYPE_ERROR_FUNCTION_TYPE;
      ObjectType objectType1 = jSTypeRegistry1.getNativeObjectType(jSTypeNative1);
      jSTypeArray0[1] = (JSType) objectType1;
      TemplateType templateType0 = jSTypeRegistry1.getObjectIndexKey();
      jSTypeArray0[2] = (JSType) templateType0;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = null;
      Node node1 = new Node(39, (Node) null, (Node) null, (Node) null);
      // Undeclared exception!
      try { 
        node1.mayMutateGlobalStateOrThrow();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = 116;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~,{j', P7Y\"HwLl3");
      Node node0 = new Node(116, (-2995), 116);
      Node node1 = new Node(57, node0, node0, node0, 46, 1);
      node0.setSourceEncodedPositionForTree(1);
      Node node2 = new Node(959, node1, node1, node0, node0);
      node0.clonePropsFrom(node2);
      node0.getDirectives();
      int int1 = (-1447);
      int int2 = (-1190);
      Node node3 = null;
      try {
        node3 = new Node(int0, node0, node0, int1, int2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("M<hCV<qrm*&s", 2, 2322);
      nodeArray0[0] = node0;
      Node node1 = new Node(262144, node0);
      node1.isUnscopedQualifiedName();
      node1.type = 407;
      node1.removeChild(node0);
      Node node2 = new Node(38, 57, 53);
      node2.isQuotedString();
      node2.getSourceFileName();
      node1.isEquivalentToShallow(node2);
      nodeArray0[1] = node1;
      Node node3 = Node.newString("[]DM!a;#Nh}h:");
      node3.isQuotedString();
      node1.type = 25;
      Node node4 = new Node(2322, nodeArray0);
      node1.isDo();
      node0.isInc();
      node4.isGetterDef();
      node1.isFalse();
      node1.toString();
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node0.setIsSyntheticBlock(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node3.checkTreeEquals((Node) null);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(", ");
      node0.addChildrenToFront(node1);
      Node node2 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      node2.isFunction();
      node2.isNot();
      node1.hasOneChild();
      Node node3 = new Node(52, node1, 52, 1289);
      boolean boolean0 = false;
      node2.setWasEmptyNode(boolean0);
      node0.isHook();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 0, 0);
      node0.isQuotedString();
      Node node1 = Node.newString((-1627), "::Lz?k__-&+oS^", 43, 4003);
      Node node2 = Node.newString("");
      node1.addChildrenToFront(node2);
      Node.newString(52, "");
      node0.isFunction();
      node0.isNot();
      node1.isUnscopedQualifiedName();
      Node node3 = new Node(4095, node1, (-830), 57);
      node3.isHook();
      node3.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-36));
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString("");
      node0.isEquivalentTo(node0);
      node0.getJsDocBuilderForNode();
      int int0 = Node.IS_CONSTANT_NAME;
      node0.isFromExterns();
      Node node1 = Node.newString("", 12, 37);
      node1.isContinue();
      node1.getStaticSourceFile();
      Node node2 = node1.getLastSibling();
      node2.wasEmptyNode();
      node2.isGetterDef();
      node1.setLength(4003);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node2;
      Node node3 = new Node((-1072), nodeArray0, 35, (-599));
      node3.detachFromParent();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.setReturnsTainted();
      // Undeclared exception!
      try { 
        node3.getSourcePosition();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("M<hCV<qrm*&s", 2, 2322);
      nodeArray0[0] = node0;
      Node node1 = new Node(262144, node0);
      node1.isUnscopedQualifiedName();
      node1.type = 407;
      node1.removeChild(node0);
      Node node2 = new Node(38, 57, 53);
      node2.isQuotedString();
      node2.getSourceFileName();
      node1.isEquivalentToShallow(node2);
      nodeArray0[1] = node1;
      Node node3 = Node.newString("[]DM!a;#Nh}h:");
      node3.isQuotedString();
      node1.type = 25;
      Node node4 = new Node(2322, nodeArray0);
      node1.isDo();
      node0.isInc();
      node4.isGetterDef();
      node1.isFalse();
      node1.toString();
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node2.getLineno();
      Node node5 = new Node(133, node2, node4, node1, node4, 15, 15);
      node3.isIn();
      node2.isUnscopedQualifiedName();
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2, nodeArray0, (-346), 2792);
      Node node1 = Node.newString(42, "k>d-z+-%25?-Gp`1'");
      node0.isContinue();
      Node node2 = Node.newNumber((-1095.4242706), 57, 8);
      node2.isNot();
      node2.isUnscopedQualifiedName();
      Node node3 = new Node(1364, node1, (-470), 55);
      node2.isAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node3.isVoid();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "P:XYNS$ez>y@Ka6%");
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      node0.isNew();
      node0.getDouble();
      int int0 = 1073741824;
      Node node1 = node0.getChildAtIndex(int0);
      node1.mayMutateGlobalStateOrThrow();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4337
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      String string0 = "M<hCV<qrm*&s";
      Node node0 = Node.newString("M<hCV<qrm*&s", (-620), (-894));
      Node node1 = new Node(4096, node0);
      Node node2 = new Node(15, node1);
      node2.isUnscopedQualifiedName();
      node2.removeChild(node0);
      int int0 = (-301);
      Node node3 = new Node(int0, node0.FLAG_LOCAL_RESULTS, node0.SIDE_EFFECTS_ALL);
      // Undeclared exception!
      try { 
        node0.isQuotedString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newNumber((double) 2322, (-1512), 103);
      node0.isQuotedString();
      Node node1 = new Node(52, node0);
      node1.setJSDocInfo((JSDocInfo) null);
      node1.isBreak();
      Node node2 = new Node(2048, nodeArray0, (-830), 53);
      int int0 = 36;
      node0.setType(int0);
      Node node3 = new Node(node2.QUOTED_PROP, node1, node2);
      Node node4 = new Node(node3.FLAG_ARGUMENTS_UNMODIFIED, node3, node1, node3);
      node1.addChildrenAfter(node4, node4);
      node3.getLineno();
      String string0 = "'ihDx7bnQ$V8)EyhEm";
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node.extractLineno(70);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)3;
      Node node0 = Node.newString((int) (byte)3, ";\"soylX6mg?UH[i;f");
      node0.isFunction();
      node0.isNot();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node((-2876), node0, 1081, 56);
      node0.isThrow();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = node0.removeFirstChild();
      node0.mayMutateGlobalStateOrThrow();
      node0.isLabel();
      node0.addChildrenToFront((Node) null);
      Node node2 = node0.removeChildAfter(node1);
      node2.isEquivalentTo(node0);
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(", ");
      node0.addChildrenToFront(node1);
      Node node2 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      Node node3 = Node.newString("", 0, 57);
      node1.isContinue();
      Node node4 = node1.getLastSibling();
      node2.wasEmptyNode();
      node3.isGetterDef();
      node4.setLength(38);
      node0.detachFromParent();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      // Undeclared exception!
      try { 
        node_SideEffectFlags2.setReturnsTainted();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1234));
      Node node1 = Node.newString(", ");
      node0.addChildrenToFront(node1);
      Node node2 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      node2.isFunction();
      node2.isNot();
      node0.isUnscopedQualifiedName();
      node2.isNoSideEffectsCall();
      node1.getCharno();
      node0.setIsSyntheticBlock(true);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-36));
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newString("");
      node0.isEquivalentTo(node0);
      node0.getJsDocBuilderForNode();
      int int0 = Node.CHANGE_TIME;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = Node.newString(661, "L7d?");
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node((-1188), (-1188), (-1188));
      boolean boolean0 = node0.isVar();
      boolean boolean1 = node0.isTypeOf();
      node0.setOptionalArg(false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      jSTypeArray0[0] = jSType0;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node2 = node1.getLastSibling();
      node2.setSideEffectFlags(4095);
      boolean boolean2 = false;
      // Undeclared exception!
      try { 
        node2.isEquivalentTo(node0, boolean1, boolean0, boolean2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(744);
      Node node1 = new Node(57, 4095, 46);
      int int1 = 530;
      node0.addChildBefore(node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(int0, node1, node0, node0, int1, node0.SIDE_EFFECTS_FLAGS_MASK);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("M<hCV<qrm*&s", 2, 2322);
      nodeArray0[0] = node0;
      Node node1 = new Node(262144, node0);
      node1.isUnscopedQualifiedName();
      node1.type = 407;
      node1.removeChild(node0);
      Node node2 = new Node(38, 57, 53);
      node2.isQuotedString();
      node2.getSourceFileName();
      node1.isEquivalentToShallow(node2);
      nodeArray0[1] = node1;
      Node node3 = Node.newString("[]DM!a;#Nh}h:");
      node3.isQuotedString();
      node1.type = 262144;
      Node node4 = new Node(2322, nodeArray0);
      node1.isDo();
      node0.isInc();
      node4.isGetterDef();
      node1.isFalse();
      node1.toString();
      nodeArray0[1].checkTreeTypeAwareEqualsImpl(nodeArray0[1]);
      node2.getLineno();
      node2.isNoSideEffectsCall();
      node3.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(1872);
      Node node1 = Node.newString(32, "", 43, 1872);
      node1.getString();
      node1.getType();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node.extractLineno(53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node1.setSideEffectFlags(node_SideEffectFlags0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = 119;
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node(119, (Node) null, (Node) null, (Node) null, (Node) null);
      nodeArray0[0] = node0;
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      node1.toString();
      node0.isFromExterns();
      Node node2 = new Node(24, node1, node1, (-2526), 1065);
      node2.removeProp(39);
      Node node3 = Node.newNumber((-1.0), 940, 57);
      node3.setSourceEncodedPositionForTree(47);
      node2.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString(98, (String) null, 31, 1);
      node0.getBooleanProp(node1.JSDOC_INFO_PROP);
      node1.clonePropsFrom(node0);
      node1.getJsDocBuilderForNode();
      node1.isIf();
      int int0 = 2553;
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.mayMutateGlobalStateOrThrow();
      node0.isLabel();
      node0.removeChild(node0);
      Node node1 = null;
      try {
        node1 = new Node(node0.SIDE_EFFECTS_ALL, node0, node0, node0.ORIGINALNAME_PROP, node0.IS_NAMESPACE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(50, node0, node0, node0, 31, 29);
      boolean boolean0 = false;
      node1.setOptionalArg(false);
      node0.addChildrenToBack(node1);
      Node.newString("^*R4A_,Fh)", 49, 51);
      node1.addChildBefore(node0, node0);
      int int0 = 580;
      int int1 = 114;
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-36));
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newString("");
      node0.isEquivalentTo(node0);
      node0.getChildAtIndex((-36));
      node0.mayMutateGlobalStateOrThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.addChildAfter((Node) null, node1);
      node0.isNew();
      double double0 = (-3765.6);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newNumber((double) 2322, (-1512), 103);
      node0.isQuotedString();
      Node node1 = new Node(52, node0);
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node0.isCall();
      Node node3 = new Node(2048, nodeArray0, (-830), 53);
      int int0 = 36;
      node0.setType(int0);
      Node node4 = new Node(node3.QUOTED_PROP, node1, node3);
      int int1 = 81923;
      Node node5 = new Node(int1, node2, node3.COLUMN_MASK, node3.VAR_ARGS_NAME);
      node5.isEquivalentToShallow(node2);
      // Undeclared exception!
      try { 
        node2.mayMutateArguments();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = new Node((-1188), (-1188), (-1188));
      node0.isVar();
      node0.isTypeOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = new Node(2, node0, node0, node0, 50, 52);
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = Node.newNumber((double) 20, 8199, 20);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(33);
      Node node1 = Node.newString(8, "", 902, 0);
      node1.getString();
      node1.getType();
      node1.isGetProp();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node.extractLineno(55);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node1.setSideEffectFlags(node_SideEffectFlags1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append(jSTypeRegistry0.OBJECT_INDEX_TEMPLATE);
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(3, 112, 87855567);
      node0.getSourceOffset();
      node0.getDirectives();
      node0.getString();
      node0.getDirectives();
      int int0 = 87;
      // Undeclared exception!
      try { 
        node0.setSourceEncodedPositionForTree(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(55, node0, node0, node0, 1, (-470));
      node0.getBooleanProp(54);
      Node node2 = new Node(53, node0);
      int int0 = (-2749);
      Node node3 = new Node(node0.JSDOC_INFO_PROP, node2, node0.IS_NAMESPACE, int0);
      node2.isEquivalentToShallow(node0);
      // Undeclared exception!
      try { 
        node2.mayMutateArguments();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      node0.isContinue();
      boolean boolean0 = node1.isNot();
      node0.isUnscopedQualifiedName();
      Node node2 = new Node(57, node1, node0, node1, 51, 56);
      Node node3 = new Node(2054, node0, node2, 1130, 42);
      node3.isFromExterns();
      node3.setIsSyntheticBlock(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(1872);
      String string0 = "";
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node(2, node0, node0);
      nodeArray0[3] = node0;
      Node node2 = new Node((-1484), nodeArray0, 43, (-1212));
      int int0 = 1585;
      nodeArray0[1].setType(int0);
      int int1 = (-1463);
      Node node3 = new Node(int1, nodeArray0[3], nodeArray0[3]);
      Node node4 = null;
      try {
        node4 = new Node(node0.IS_NAMESPACE, nodeArray0[3], node2, nodeArray0[2]);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2322, (-1512), 103);
      boolean boolean0 = node0.isQuotedString();
      Node node1 = new Node(52, node0);
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node1.isBreak();
      Node.newString(50, "gk6s%Px-^8", 2891, 31);
      node2.getString();
      node1.getType();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = null;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      boolean boolean1 = true;
      boolean boolean2 = false;
      // Undeclared exception!
      try { 
        FileSystemHandling.setPermissions(evoSuiteFile0, boolean2, boolean0, boolean1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INSTANCEOF is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString("~.", 1506, 1506);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~.");
      node0.toString();
      node0.toStringTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      node0.clonePropsFrom((Node) null);
      node0.getJSDocInfo();
      String string0 = "DJya.Q";
      // Undeclared exception!
      try { 
        jSDocInfo0.setLicense(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      node0.isContinue();
      node1.isNot();
      node0.isUnscopedQualifiedName();
      Node node2 = new Node(52, node0, 52, 1289);
      node1.setIsSyntheticBlock(false);
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1189), (-1189), 728);
      node0.setJSType((JSType) null);
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("M<hCV<qrm*&s", 2, 2322);
      nodeArray0[0] = node0;
      Node node1 = new Node(262144, node0);
      node1.isUnscopedQualifiedName();
      node1.type = 407;
      node1.removeChild(node0);
      Node node2 = new Node(38, 57, 53);
      node2.isQuotedString();
      node2.getSourceFileName();
      node1.isEquivalentToShallow(node2);
      nodeArray0[1] = node1;
      Node node3 = Node.newString("[]DM!a;#Nh}h:");
      node3.isQuotedString();
      node1.type = 25;
      Node node4 = new Node(2322, nodeArray0);
      node1.isDo();
      node0.isInc();
      node4.isGetterDef();
      node1.isFalse();
      node1.toString();
      Node.newNumber((double) 8, 46, (-2353));
      node0.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newString(18, "o5.V;0o-xln", 18, 0);
      node0.mayMutateArguments();
      node0.setDouble(0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(52, 52, 52);
      node0.isName();
      node0.isVarArgs();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateArguments();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.createParameters((List<JSType>) null);
      int int0 = 103;
      String string0 = null;
      String string1 = "";
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = new Node(57, 38, 40);
      node0.addChildrenToFront(node1);
      Node node2 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      node2.isFunction();
      node2.isNot();
      node0.isUnscopedQualifiedName();
      Node node3 = new Node(4095, node0, 52, (-2926));
      node0.isAdd();
      Node node4 = new Node(56, node2, (-1056), 37);
      node2.isHook();
      node1.setSourceFileForTesting("k>d-z+-%25?-Gp`1'");
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node.extractLineno(70);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)3;
      Node node0 = Node.newString((int) (byte)3, ";B");
      node0.isFunction();
      node0.isNot();
      node0.hasChild(node0);
      node0.isSyntheticBlock();
      Node node1 = new Node(86, node0, (-2549), (-2965));
      node1.setIsSyntheticBlock(false);
      node1.isDelProp();
      node0.getCharno();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2322, 2322, 103);
      node0.isQuotedString();
      Node node1 = new Node(52, node0);
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node2.isTrue();
      Node.newString(50, "gk6s%Px-^8", 2891, 31);
      node2.getString();
      node1.getType();
      node2.getJSDocInfo();
      node2.getAncestors();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INSTANCEOF is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      node0.isContinue();
      node1.isNot();
      node0.isUnscopedQualifiedName();
      Node node2 = new Node(52, node0, 52, 2);
      node2.isVarArgs();
      node1.setIsSyntheticBlock(false);
      node2.isDelProp();
      node1.isArrayLit();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node2);
      node_NodeMismatch0.equals("P:XYNS$ez>y@Ka6%");
      node2.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newNumber((double) 2322, (-1512), 103);
      node0.isQuotedString();
      Node node1 = new Node(39, node0, node0);
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node0.isCall();
      Node node3 = new Node(2048, nodeArray0, (-830), 53);
      int int0 = 36;
      node0.setType(int0);
      Node node4 = new Node(node3.QUOTED_PROP, node1, node3);
      int int1 = 81923;
      Node node5 = new Node(int1, node2, node3.COLUMN_MASK, node3.VAR_ARGS_NAME);
      node5.isEquivalentToShallow(node2);
      // Undeclared exception!
      try { 
        node2.mayMutateArguments();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("com.google.common.collect.Lists$RandomAccessPartition", (-315), 1689);
      node0.isTry();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.setLineno((-315));
      node0.getProp((-2842));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node0.setIsSyntheticBlock(false);
      node0.setChangeTime((-315));
      node_FileLevelJsDocBuilder0.append("com.google.common.collect.Lists$RandomAccessPartition");
      node_FileLevelJsDocBuilder0.append("com.google.common.collect.Lists$RandomAccessPartition");
      node_FileLevelJsDocBuilder0.append("com.google.common.collect.Lists$RandomAccessPartition");
      node0.getSourcePosition();
      Node.extractCharno(2281);
      node0.isTrue();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(13, "Q", 942, 4337);
      node0.isContinue();
      Node node1 = node0.getLastSibling();
      node0.isVoid();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      node0.addChildToBack(node0);
      nodeArray0[4] = node0;
      Node node2 = new Node(130, nodeArray0, 49, 3448);
      node2.isGetterDef();
      node1.addChildrenToFront(nodeArray0[1]);
      nodeArray0[4].setLength(node0.DIRECTIVES);
      nodeArray0[4].detachFromParent();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      // Undeclared exception!
      try { 
        node_SideEffectFlags2.clearAllFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      node0.isContinue();
      node0.isNot();
      node0.isUnscopedQualifiedName();
      node0.isVarArgs();
      node0.setIsSyntheticBlock(false);
      node0.isDelProp();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = new Node(382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[6];
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getParentScope();
      jSTypeArray0[0] = (JSType) enumElementType0;
      node0.isNumber();
      Node node1 = node0.cloneNode();
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isFromExterns();
      node2.getNext();
      Node node3 = node2.copyInformationFrom(node0);
      node0.isFromExterns();
      node3.isGetProp();
      Node.newNumber((double) 55, 53, 4);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node.newString(24, "k>d-z+-%25?-Gp`1'");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = Node.newString(130, "P:XYNS$ez>y@Ka6%");
      node0.isExprResult();
      node1.isOptionalArg();
      node1.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString(4337, ")Hd[eB_", 4337, (-1181));
      Node node1 = Node.newString("");
      node0.addChildrenToFront(node1);
      node0.isEquivalentTo(node1, true, true, true);
      Node.newString(24, "k>d-z+-%25?-Gp`1'");
      Node node2 = Node.newString("", 0, 57);
      node1.isContinue();
      Node node3 = node1.getLastSibling();
      node3.isVoid();
      node2.isGetterDef();
      node3.setLength(38);
      node0.detachFromParent();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.setLineno(2);
      node1.getProp(16);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      Node node2 = new Node((-272), 37, (-1941));
      node2.setIsSyntheticBlock(false);
      node0.setChangeTime(89);
      node_FileLevelJsDocBuilder0.append("P:XYNS$ez>y@Ka6%");
      node_FileLevelJsDocBuilder0.append("]?");
      node_FileLevelJsDocBuilder0.append(",j");
      node0.getSourcePosition();
      Node.extractCharno(967);
      node1.isTrue();
      node2.isSwitch();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(2, "P:XYNS$ez>y@Ka6%");
      node0.isContinue();
      node1.isNot();
      node0.isUnscopedQualifiedName();
      Node node2 = new Node(382, node0, 600, 50);
      Node node3 = new Node(48);
      Node node4 = Node.newNumber((double) 49, 39, 1222);
      node4.checkTreeEquals(node3);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node0, jSType0);
      node0.toString();
      Node node1 = new Node(39, node0, node0, node0);
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node(38, node0, node0, node0, node0);
      node2.isFalse();
      node2.getChangeTime();
      int int0 = 583;
      EnumElementType enumElementType0 = enumType0.getElementsType();
      // Undeclared exception!
      try { 
        enumElementType0.getPropertyNode(jSTypeRegistry0.OBJECT_INDEX_TEMPLATE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(1872);
      Node node1 = Node.newString(32, "", 43, 1872);
      node1.getString();
      node1.getType();
      node1.isInc();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node.extractLineno(53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node1.isCatch();
      node0.getInputId();
      node0.siblings();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newNumber((double) 382, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(2);
      Node node1 = Node.newString(32, "", 43, 382);
      node1.getString();
      node1.getType();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node.extractLineno(53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.hasChildren();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newString(124, "Iv&:*v& Jg!");
      Node node1 = Node.newString(47, "Iv&:*v& Jg!");
      node0.isContinue();
      node0.isDelProp();
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[6];
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getParentScope();
      jSTypeArray0[0] = (JSType) null;
      node0.isNumber();
      Node node1 = node0.cloneNode();
      node0.putProp(4095, (Object) null);
      node0.hasOneChild();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(1565054, nodeArray0);
      node2.isLabel();
      Node node3 = new Node(32, node1, node0);
      node3.isBlock();
      node0.addChildrenToFront(node1);
      Node node4 = node3.removeChildAfter(node2);
      node4.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString(124, "Iv&:*v& Jg!");
      Node.newString(47, "");
      node1.isContinue();
      node0.isNot();
      node0.isUnscopedQualifiedName();
      Node node2 = new Node((-3181), node1, 46, 0);
      node1.setIsSyntheticBlock(false);
      node1.isDelProp();
      node1.isThrow();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.cloneTree();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node1 = Node.newString(814, "");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append(")dN=<{`U=+{K{XX?/?");
      node_FileLevelJsDocBuilder0.append(")dN=<{`U=+{K{XX?/?");
      node_FileLevelJsDocBuilder0.append(")dN=<{`U=+{K{XX?/?");
      node0.getSourcePosition();
      Node.extractCharno(43);
      node0.isTrue();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(13, "Q", 942, 4337);
      Node node1 = Node.newString("e");
      node1.isFromExterns();
      node1.getNext();
      node0.isName();
      node1.isNoSideEffectsCall();
      node0.setVarArgs(false);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isCast();
      node0.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(30, node0, 46, 39);
      node1.isAdd();
      node1.getIntProp(49);
      Node node2 = new Node(37, node1, 56, 55);
      node2.isHook();
      node0.isGetElem();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      node0.isContinue();
      node1.isNot();
      node0.isUnscopedQualifiedName();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("P:XYNS$ez>y@Ka6%");
      node_FileLevelJsDocBuilder0.append("k>d-z+-%25?-Gp`1'");
      node1.getSourcePosition();
      Node.extractCharno((-1698));
      node0.isTrue();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString(124, "Iv&:*v& Jg!");
      Node.newString(47, "");
      node1.isContinue();
      Node node2 = new Node((-3191), node1, 46, 0);
      node1.setIsSyntheticBlock(false);
      node1.isDelProp();
      node0.setLineno(47);
      node2.isVoid();
      node2.isScript();
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node.mergeLineCharNo(11, 1930);
      Node node0 = Node.newNumber(0.0);
      node0.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isEquivalentToShallow(node1);
      Node node2 = Node.newString("<invalid>", 488, 55);
      node0.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(13, "Q", 942, 4337);
      node0.isContinue();
      node0.detachChildren();
      node0.isDelProp();
      node0.isBlock();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-346), nodeArray0);
      node0.isName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isDelProp();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      simpleErrorReporter0.error("Object#Key", "Object#Key", 809, 42);
      Node node1 = Node.newString((-1015), "Object#Key", (-1451), 40);
      node1.getChildBefore(node0);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node.newNumber((double) node2.SLASH_V);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[6];
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getParentScope();
      jSTypeArray0[0] = (JSType) null;
      node0.isNumber();
      Node node1 = node0.cloneNode();
      Node node2 = node1.copyInformationFromForTree(node0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node2;
      Node node3 = new Node(536870912, nodeArray0);
      ImmutableList<JSType> immutableList0 = enumElementType0.getTemplateTypes();
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node4.isDo();
      // Undeclared exception!
      try { 
        nodeArray0[2].isInc();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node.extractLineno(70);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte) (-15);
      byteArray0[4] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((byte)3);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newNumber((double) 70);
      node0.isHook();
      node0.setCharno(70);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(1872);
      Node node1 = Node.newString(32, "", 43, 1872);
      node1.getString();
      node1.setString((String) null);
      node1.getType();
      boolean boolean0 = false;
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newNumber((double) 2322, (-1512), 103);
      node0.isQuotedString();
      Node node1 = new Node(39, node0, node0);
      node1.hasChildren();
      Node node2 = new Node(2041, nodeArray0, (-830), 53);
      node2.addChildAfter(node0, node0);
      node0.isDefaultCase();
      node2.isThrow();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2, nodeArray0, (-346), 2792);
      node0.isNew();
      Node node1 = node0.getChildAtIndex(4095);
      node0.setType(node1.SYNTHETIC_BLOCK_PROP);
      Node node2 = new Node(node1.FLAG_THIS_UNMODIFIED, node1, node0);
      JSDocInfo jSDocInfo0 = null;
      try {
        jSDocInfo0 = new JSDocInfo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = new Node(2322);
      Node node1 = new Node(98, node0, node0);
      Node node2 = node1.srcref(node0);
      node0.replaceChildAfter(node1, node2);
      node0.isFromExterns();
      // Undeclared exception!
      try { 
        node2.isContinue();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("M<hCV<qrm*&s", 2, 2322);
      nodeArray0[0] = node0;
      Node node1 = new Node(262144, node0);
      node1.isUnscopedQualifiedName();
      Node node2 = Node.newString("M<hCV<qrm*&s", (-1581), 2322);
      node2.isContinue();
      Node node3 = node0.getLastSibling();
      node0.isVoid();
      node1.isGetterDef();
      node1.setLength(127);
      node3.detachFromParent();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2, nodeArray0, (-346), 2792);
      node0.isNew();
      node0.isFunction();
      node0.isNot();
      node0.isUnscopedQualifiedName();
      node0.isAdd();
      node0.isDefaultCase();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newString(124, "Iv&:*v& Jg!");
      Node node1 = Node.newString(47, "Iv&:*v& Jg!");
      node0.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType.toMaybeTemplatizedType((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType objectType0 = jSTypeRegistry1.createObjectType("@#oNRMq6 MC U`H", node1, (ObjectType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Iv&:*v& Jg!", node0, objectType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      Node node2 = enumElementType1.getRootNode();
      node0.isQuotedString();
      node0.removeChildAfter((Node) null);
      node2.isEquivalentTo(node1);
      Node node3 = new Node(node2.REFLECTED_OBJECT);
      node3.useSourceInfoFromForTree(node1);
      node2.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newNumber((double) 382, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Unknown class name", node0, jSType0);
      enumType0.toMaybeEnumType();
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getParentScope();
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) enumElementType0;
      jSTypeArray0[1] = (JSType) enumType0;
      jSTypeArray0[2] = (JSType) enumElementType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, false, jSTypeArray0);
      templateTypeMapReplacer0.caseFunctionType(functionType0);
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isNoSideEffectsCall();
      node1.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString(124, "Iv&:*v& Jg!");
      Node.newString(47, "");
      node1.isContinue();
      node0.isNot();
      node0.isUnscopedQualifiedName();
      Node node2 = new Node((-3181), node1, 46, 0);
      node2.copyInformationFrom(node0);
      node1.setIsSyntheticBlock(false);
      node1.isDelProp();
      node1.isThrow();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((double) 52);
      Node node1 = new Node(4095, node0, node0, node0, 56, 114);
      node0.getSourceFileName();
      node0.putBooleanProp((-720), true);
      node1.addChildAfter(node0, node0);
      node1.isFromExterns();
      Node node2 = node1.getNext();
      // Undeclared exception!
      try { 
        node2.isName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 0, 0);
      node0.isQuotedString();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node node2 = Node.newNumber(0.0, 1048576, 119);
      node2.setOptionalArg(true);
      Node node3 = Node.newString("+&", 49, 52);
      node3.addSuppression("/|jq8");
      node1.isSyntheticBlock();
      Node node4 = new Node(43, node0, 112, 42);
      node3.setIsSyntheticBlock(false);
      Node node5 = new Node(57, node3, 52, 40);
      node5.isDelProp();
      node3.getCharno();
      node3.hasOneChild();
      node3.isGetterDef();
      node5.isWhile();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(52, 52, 52);
      node0.isName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateArguments();
      Node node1 = node0.getLastSibling();
      node0.isVoid();
      node1.isGetterDef();
      node0.setLength((-597));
      node1.detachFromParent();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(50, node0, node0, node0, 31, 29);
      Node node2 = Node.newString(36, "xP)v?.{");
      Node node3 = Node.newString("k>d-z+-%25?-Gp`1'", 1966, 77);
      node0.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      simpleErrorReporter0.error("Object#Element", "", 53, 42);
      Node.newString(4095, "k>d-z+-%25?-Gp`1'", 16, 55);
      Node node4 = node1.getChildBefore(node3);
      node2.useSourceInfoIfMissingFrom(node1);
      Node.newNumber((double) node4.REFLECTED_OBJECT);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-346), nodeArray0);
      node0.setChangeTime((-346));
      Node node1 = Node.newNumber((double) 8);
      node1.removeFirstChild();
      node1.mayMutateGlobalStateOrThrow();
      Node.newString("com.google.javascript.rhino.Node$SideEffectFlags");
      node0.setDouble(55);
      String string0 = "5k";
      // Undeclared exception!
      try { 
        node1.setString(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -346
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(52, 52, 52);
      node0.isName();
      node0.cloneNode();
      node0.mayMutateArguments();
      Node node1 = node0.getChildBefore(node0);
      node1.useSourceInfoIfMissingFrom(node0);
      double double0 = (-123.864806427);
      Node.newNumber(double0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = new Node(57, 38, 40);
      node0.addChildrenToFront(node1);
      String string0 = "k>d-z+-%25?-Gp`1'";
      Node node2 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      node0.getExistingIntProp(30);
      node2.isFunction();
      node2.isNot();
      node0.isUnscopedQualifiedName();
      int int0 = (-2926);
      Node node3 = null;
      try {
        node3 = new Node(node0.COLUMN_MASK, node0, node0.LENGTH, int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 30
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newString("fmY_Wu:_");
      node0.isOnlyModifiesArgumentsCall();
      node0.isComma();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newNumber(165.6981211);
      Node node1 = new Node(1274, (-1814), 51);
      node0.clonePropsFrom(node1);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isAssignAdd();
      node0.addChildToFront(node1);
      node1.setSourceEncodedPositionForTree(3613);
      node1.setQuotedString();
      node0.getQualifiedName();
      node0.getDouble();
      node1.isReturn();
      // Undeclared exception!
      try { 
        node1.isOptionalArg();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[6];
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getParentScope();
      jSTypeArray0[0] = (JSType) null;
      node0.isNumber();
      Node node1 = new Node(55, node0, 53, 1);
      node0.setIsSyntheticBlock(true);
      node0.isDelProp();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.getLineno();
      node0.isNoSideEffectsCall();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2, nodeArray0, (-346), (-346));
      node0.isNew();
      Node node1 = new Node(2, node0, node0);
      node1.getSourceOffset();
      node1.siblings();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.useSourceInfoIfMissingFrom(node0);
      Node.newNumber(1924.2979701754211);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2, nodeArray0, (-346), 2778);
      node0.isNew();
      node0.isFunction();
      node0.isNot();
      node0.isUnscopedQualifiedName();
      node0.hasChild(node0);
      Node node1 = new Node(32, (-1475), 1);
      node0.isEquivalentToTyped(node1);
      Node.mergeLineCharNo(4095, 55);
      node0.isRegExp();
      node1.addChildrenToBack(node0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(1872);
      Node node1 = Node.newString(32, "", 43, 1872);
      node1.getString();
      node1.getType();
      node1.isInc();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node.extractLineno(53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isHook();
      node1.setSourceFileForTesting("Object#Key");
      Node node2 = new Node(1, 2, (-2186));
      node2.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newString("fmY_Wu:_");
      node0.isOnlyModifiesArgumentsCall();
      node0.isReturn();
      node0.isOptionalArg();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fmY_Wu:_");
      node0.getSourcePosition();
      node0.setOptionalArg(false);
      Node node1 = Node.newString("adIJK0_aP N1NETza@");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getChildBefore(node1);
      int int0 = (-1652);
      Node node2 = new Node(int0);
      // Undeclared exception!
      try { 
        node2.srcref(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2, nodeArray0, (-346), 2792);
      node0.isNew();
      node0.getType();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jOcZl");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node0.children();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node.extractLineno(40);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node0.setSideEffectFlags(node_SideEffectFlags1);
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newNumber((-527.623501));
      Node node1 = Node.newString(55, "", 37, 2);
      node1.getBooleanProp(15);
      Node node2 = node0.clonePropsFrom(node1);
      int int0 = 154;
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      Node node3 = new Node((-1481), node1, node1, node0);
      nodeArray0[3] = node3;
      nodeArray0[4] = node2;
      int int1 = 564;
      Node node4 = new Node(39, node2, node0);
      int int2 = 2241;
      int int3 = (-2666);
      Node node5 = new Node(int1, node0, nodeArray0[4], node4, node2, int2, int3);
      nodeArray0[5] = node5;
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newString(124, "Iv&:*v& Jg!");
      Node node1 = Node.newString(47, "Iv&:*v& Jg!");
      node0.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType.toMaybeTemplatizedType((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType objectType0 = jSTypeRegistry1.createObjectType("@#oNRMq6 MC U`H", node1, (ObjectType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Iv&:*v& Jg!", node0, objectType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.toMaybeEnumElementType();
      node0.isQuotedString();
      node0.removeChildAfter(node0);
      node0.isEquivalentTo(node1);
      Node node2 = new Node(node0.REFLECTED_OBJECT);
      node2.useSourceInfoFromForTree(node1);
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2, nodeArray0, (-346), 2778);
      node0.isNew();
      node0.isFunction();
      node0.isNot();
      node0.isUnscopedQualifiedName();
      node0.hasChild(node0);
      Node node1 = new Node(32, (-1475), 1);
      node0.isEquivalentToTyped(node1);
      node1.srcref(node0);
      node1.getChangeTime();
      node1.getExistingIntProp(36);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newNumber(165.6981211);
      Node node1 = new Node(1274, (-1814), 51);
      node0.isNew();
      node1.isFunction();
      node1.isNot();
      node0.isUnscopedQualifiedName();
      Node node2 = new Node(49);
      node2.hasChild(node1);
      Node node3 = new Node(4095, 86, (-1048));
      node0.isEquivalentToTyped(node3);
      Node.mergeLineCharNo((-458), 37);
      node3.isRegExp();
      node0.addChildrenToBack(node1);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2, nodeArray0, (-346), 2778);
      Node node1 = Node.newNumber((-751.6968));
      Node node2 = node0.clonePropsFrom(node1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.isAssignAdd();
      node1.addChildToFront(node0);
      node1.setSourceEncodedPositionForTree(37);
      node1.setQuotedString();
      node1.getQualifiedName();
      int int0 = 100;
      Node node3 = new Node(int0, node0, node1, node1);
      node3.getDouble();
      node2.isComma();
      // Undeclared exception!
      try { 
        node2.isContinue();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(13, "Q", 942, 4337);
      node0.addChildrenToFront(node0);
      Node node1 = Node.newString(57, "com.google.javascript.rhino.jstype.Property");
      node1.isFunction();
      node0.isNot();
      node1.isOnlyModifiesThisCall();
      node0.isUnscopedQualifiedName();
      node1.isFromExterns();
      node0.isGetProp();
      Node.newNumber(1086.3683356, 64, 46);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = Node.newString("Object#Key", 1637, 1637);
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(85);
      Node node1 = Node.newString(16, "ReferenceError", 4337, 46);
      node1.getString();
      node0.getType();
      node0.isInc();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node.extractLineno(155);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      node1.isCatch();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      int int0 = 115;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      int int1 = (-823);
      boolean boolean0 = false;
      node0.isEquivalentToShallow((Node) null);
      // Undeclared exception!
      try { 
        node0.setVarArgs(boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newString("I;21}*!QR K&GtL", 5247, 5247);
      Node node1 = new Node(33, node0);
      node1.removeChildren();
      node1.addChildrenAfter(node0, node0);
      node1.mayMutateArguments();
      String string0 = "aB&53";
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(32, 52, 42);
      node1.isNew();
      node0.isFunction();
      node0.isNot();
      node1.isUnscopedQualifiedName();
      Node node2 = new Node(291);
      node2.hasChild(node0);
      Node node3 = new Node(291, 57, 49);
      node3.isEquivalentToTyped(node2);
      Node.mergeLineCharNo(4095, 4095);
      node0.isRegExp();
      node1.addChildrenToBack(node2);
      node3.setString("<N m A,[T");
      node1.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isCast();
      node0.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(30, node0, 46, 39);
      node1.isAdd();
      node1.getIntProp(49);
      Node node2 = new Node(37, node1, 56, 55);
      node2.isHook();
      node0.isGetElem();
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isCast();
      node0.isScript();
      node0.getJsDocBuilderForNode();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.getQualifiedName();
      Node node2 = Node.newString("Object#Element");
      node2.isNumber();
      Node node3 = node1.cloneNode();
      Node node4 = node2.copyInformationFromForTree(node3);
      node3.getLineno();
      Node node5 = new Node(1, node1, node1, node2, node4, 4095, 46);
      Node.newNumber((double) 53, 213044, 0);
      node3.setDouble(0.0);
      node5.isLocalResultCall();
      node4.useSourceInfoIfMissingFrom(node5);
      int int0 = (-1578);
      node0.setSideEffectFlags(int0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("com.google.common.collect.Lists$RandomAccessPartition", (-315), 1689);
      node0.isTry();
      node0.toString();
      node0.isFromExterns();
      Node node1 = new Node(648, node0, node0, 16, 26);
      node0.removeProp(30);
      node1.cloneTree();
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newString("fmY_Wu:_");
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(276, node0, node0, 50, 31);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.addChildrenToFront(node0);
      Node node3 = node2.removeChildAfter(node1);
      // Undeclared exception!
      try { 
        node3.useSourceInfoFromForTree(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      node0.isContinue();
      node1.isNot();
      node0.isUnscopedQualifiedName();
      Node node2 = new Node(52, node0, 52, 2);
      node2.isVarArgs();
      node1.setIsSyntheticBlock(false);
      node0.isBlock();
      node1.getAncestors();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isAssignAdd();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = Node.newNumber((-527.623501));
      Node node1 = Node.newString(55, ":", 37, 2);
      node1.getBooleanProp(15);
      Node node2 = node0.clonePropsFrom(node1);
      node1.getJsDocBuilderForNode();
      node2.setWasEmptyNode(false);
      node1.isIf();
      node2.isIf();
      node0.replaceChild(node1, node1);
      node2.isFunction();
      // Undeclared exception!
      try { 
        node2.isNot();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      StringWriter stringWriter0 = new StringWriter(2561);
      char[] charArray0 = new char[2];
      charArray0[0] = 'X';
      charArray0[1] = 'V';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringWriter0.append((CharSequence) charBuffer0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      node0.appendStringTree(stringBuffer0);
      node0.getDouble();
      node0.isArrayLit();
      node0.isIf();
      node0.isVoid();
      node0.getJSDocInfo();
      Node node1 = Node.newNumber((double) 1, 32, 50);
      Node node2 = node0.clonePropsFrom(node1);
      node1.addSuppression("WHILE");
      node1.isEquivalentTo(node2, false, true, false);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      String string0 = "%s (%s) must be less than size (%s)";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%s (%s) must be less than size (%s)");
      Node node0 = new Node(524288);
      node0.isOr();
      node0.setIsSyntheticBlock(false);
      node0.setSideEffectFlags(524288);
      node0.isScript();
      // Undeclared exception!
      try { 
        node0.isAnd();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 524288
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("");
      Node node1 = new Node((-1217), node0, node0, node0, node0);
      Node node2 = new Node((-1069), node1, node1, 1747, 30);
      node2.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(1, "k>d-z+-%25?-Gp`1'");
      node0.isContinue();
      node1.isNot();
      node0.isUnscopedQualifiedName();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node(382, node0, 600, 50);
      node2.isQualifiedName();
      Node node3 = new Node(48);
      node3.isThrow();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newString("fmY_Wu:_");
      node0.isOnlyModifiesArgumentsCall();
      node0.isReturn();
      node0.isOptionalArg();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fmY_Wu:_");
      node0.getSourcePosition();
      node0.setOptionalArg(false);
      Node node1 = Node.newString("adIJK0_aP N1NETza@");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isAssignAdd();
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 0, 0);
      node0.isQuotedString();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node node2 = Node.newNumber(0.0, 1048576, 119);
      node2.setOptionalArg(true);
      node1.removeChildren();
      node1.addChildrenToFront(node0);
      Node node3 = Node.newString((-944), ")");
      node3.isFunction();
      node3.isNot();
      node1.isUnscopedQualifiedName();
      Node node4 = new Node(126, node3, (-93), 4);
      node3.isArrayLit();
      node2.replaceChildAfter(node1, node0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 0, 0);
      node0.isQuotedString();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node node2 = Node.newNumber(0.0, 1048576, 37);
      node2.setOptionalArg(true);
      Node node3 = Node.newString("+&", 49, 52);
      node3.addSuppression("/|jq8");
      node2.isParamList();
      node1.getProp((-2101));
      node2.putProp(16, (Object) null);
      node0.hasOneChild();
      node0.isLabel();
      node3.isBlock();
      node1.addChildrenToFront(node2);
      Node node4 = node2.removeChildAfter(node3);
      node4.useSourceInfoFromForTree(node3);
      Node.extractCharno(node0.INPUT_ID);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2322, 2322, 103);
      node0.isQuotedString();
      Node node1 = new Node(52, node0);
      node1.setJSDocInfo((JSDocInfo) null);
      node1.isBreak();
      Node node2 = Node.newString(4095, "", 37, 1012);
      node2.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      Node node3 = new Node(4095, node1);
      node3.isVarArgs();
      node3.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = new Node(152, (-1814), (-2324));
      Node node1 = new Node(47, node0);
      Node node2 = node0.clonePropsFrom(node1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.isAssignAdd();
      node1.addChildToFront(node2);
      node0.setSourceEncodedPositionForTree(node2.SIDE_EFFECT_FLAGS);
      node1.setQuotedString();
      node2.getQualifiedName();
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 371, 371);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(1872);
      Node node1 = Node.newString(32, "", 43, 1872);
      node1.getString();
      node1.getType();
      node1.isInc();
      Node.extractLineno(53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node1.isCatch();
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 1263;
      String string0 = "change_time";
      Node node0 = Node.newString("change_time", 0, 0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = null;
      node0.addChildToFront((Node) null);
      Node node2 = null;
      try {
        node2 = new Node(int0, node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newNumber((-508.68067602413436));
      Node node1 = new Node(57, node0, node0, 15, 46);
      node1.getBooleanProp(15);
      node0.getLineno();
      Node.newString("");
      Node node2 = node1.cloneTree();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newNumber((double) 22, 22, 22);
      node0.isQuotedString();
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node node2 = Node.newNumber(0.0, 1048576, 119);
      node2.setOptionalArg(true);
      Node node3 = Node.newString("", 49, 52);
      node3.addSuppression("/|jq8");
      node1.isSyntheticBlock();
      Node node4 = new Node(43, node0, 112, 42);
      node3.setIsSyntheticBlock(false);
      Node node5 = new Node(57, node3, 52, 40);
      node0.checkTreeEquals(node4);
      node5.isDelProp();
      node3.getCharno();
      node3.hasOneChild();
      node3.isGetterDef();
      node5.isWhile();
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(32, 52, 42);
      node1.isNew();
      node0.isFunction();
      node0.isNot();
      node1.isUnscopedQualifiedName();
      Node node2 = new Node(291);
      node2.hasChild(node0);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(51, nodeArray0);
      node0.isDo();
      Node node4 = new Node(50, nodeArray0);
      node4.isInc();
      node3.isGetterDef();
      node1.isFalse();
      node3.toString();
      Node.newNumber((double) 32, 2, 29);
      node4.checkTreeEqualsImpl(node4);
      node3.getLineno();
      node4.isNoSideEffectsCall();
      node3.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(13, "Q", 942, 4337);
      node0.addChildrenToFront(node0);
      Node node1 = Node.newString(57, "com.google.javascript.rhino.jstype.Property");
      node1.isFunction();
      node0.isNot();
      node0.isUnscopedQualifiedName();
      node1.getIndexOfChild(node0);
      node0.isContinue();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      int int0 = 1;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setThrows();
      Node node0 = Node.newString("");
      Node node1 = null;
      node0.isEquivalentTo((Node) null);
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(1872);
      Node node1 = Node.newString(32, "", 43, 1872);
      node1.getString();
      node1.getType();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node2 = node0.clonePropsFrom(node1);
      node2.addSuppression("O%nX`(S#");
      node1.getJsDocBuilderForNode();
      node1.isRegExp();
      node0.isEmpty();
      node1.getAncestors();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newNumber(1894.6517, (-1167), (-1167));
      node0.isVar();
      node0.isTypeOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      JSType.toMaybeTemplatizedType(jSType0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      jSDocInfo0.getAssociatedNode();
      node0.useSourceInfoIfMissingFrom((Node) null);
      Node.newNumber((double) node0.FLAG_THIS_UNMODIFIED);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = node0.cloneTree();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node2 = Node.newString(814, "");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append(")dN=<{`U=+{K{XX?/?");
      node_FileLevelJsDocBuilder0.append(")dN=<{`U=+{K{XX?/?");
      node_FileLevelJsDocBuilder0.append(")dN=<{`U=+{K{XX?/?");
      node0.getSourcePosition();
      Node.extractCharno(43);
      node0.isEquivalentToShallow(node1);
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(52, 52, 52);
      node0.isName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateArguments();
      Node node1 = node0.getLastSibling();
      Node node2 = new Node(2);
      node2.getBooleanProp((-435));
      Node node3 = node0.clonePropsFrom(node1);
      node2.getJsDocBuilderForNode();
      node3.isIf();
      node2.replaceChild(node3, node0);
      node2.isFunction();
      node3.isNot();
      // Undeclared exception!
      try { 
        node1.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:lYN$ez>y@Ka6|%", 4337, (-1212));
      Node node1 = node0.clonePropsFrom(node0);
      node1.getJsDocBuilderForNode();
      node0.isIf();
      Node node2 = new Node(57, 46, (-1799));
      node2.replaceChild(node1, node1);
      node0.isFunction();
      node2.isNot();
      node1.isUnscopedQualifiedName();
      node0.isAdd();
      node1.hasChildren();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:lYN$ez>y@Ka6|%", 4337, (-1212));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(36, node0, node0, node0);
      node1.isAssignAdd();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = new Node(15, nodeArray0, 51, 52);
      node1.addChildToFront(node2);
      int int0 = 3613;
      node1.setSourceEncodedPositionForTree(int0);
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = node0.cloneTree();
      node0.setSourceEncodedPositionForTree(4095);
      Node node2 = Node.newString(46, "[nr>J~aAr:?^", 32, 1);
      node1.getString();
      node0.setString("zD2m'sbPs?");
      node2.getType();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node.extractLineno(113);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node3 = Node.newString("zD2m'sbPs?");
      node3.isHook();
      node3.addChildrenToBack(node2);
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(52, 52, 52);
      String string0 = "\n\nSubtree2: ";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\n\nSubtree2: ");
      Node node1 = new Node(16);
      node1.isOr();
      node0.setIsSyntheticBlock(false);
      node1.setSideEffectFlags(55);
      node1.isScript();
      // Undeclared exception!
      try { 
        node0.isAnd();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got GT
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newNumber(1894.6517, (-1167), (-1167));
      node0.isVar();
      node0.isTypeOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getDouble();
      node0.getChildAtIndex((-1167));
      node0.isAssignAdd();
      node0.mayMutateGlobalStateOrThrow();
      node0.addChildAfter((Node) null, (Node) null);
      node0.isNew();
      // Undeclared exception!
      try { 
        node0.isThrow();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      StringWriter stringWriter0 = new StringWriter(2561);
      char[] charArray0 = new char[2];
      charArray0[0] = 'X';
      charArray0[1] = 'V';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringWriter0.append((CharSequence) charBuffer0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      node0.appendStringTree(stringBuffer0);
      node0.getDouble();
      node0.isEmpty();
      node0.isEquivalentToTyped(node0);
      node0.isVoid();
      node0.getJSDocInfo();
      Node node1 = node0.clonePropsFrom(node0);
      node0.addSuppression("WHILE");
      node0.isEquivalentTo(node1, false, true, false);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = new Node(40, 382, 48);
      node0.isDec();
      node1.isSetterDef();
      node1.toString();
      Node node2 = new Node(52, node0, node1, node1);
      node2.isEquivalentToTyped(node0);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags5.setReturnsTainted();
      node0.isCatch();
      node1.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      String string0 = "A~T/HJE|su]";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A~T/HJE|su]");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KI}ccC}3Q>JA1M");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.valueOf();
      int int0 = 33;
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-1800.36423), 33, 33);
      Node node1 = new Node(33, node0, node0, 1688, 2);
      nodeArray0[0] = node1;
      Node node2 = new Node(42, node1, node1, node0, (-1179), 1);
      nodeArray0[1] = node2;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      JSType jSType0 = null;
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = Node.newString("fmY_Wu:_");
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(276, node0, node0, 50, 31);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isUnscopedQualifiedName();
      node1.isDefaultCase();
      node2.getSourceFileName();
      node0.addChildToFront(node2);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newNumber((-508.68067602413436));
      Node node1 = new Node(57, node0, node0, 15, 46);
      node1.getBooleanProp(15);
      node0.getLineno();
      Node node2 = Node.newNumber(3829.8870541, 82, (-2524));
      node0.checkTreeEqualsImpl(node2);
      node1.getLineno();
      node2.isNoSideEffectsCall();
      node1.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(32, 52, 42);
      node1.isNew();
      node0.isFunction();
      node0.isNot();
      node1.isUnscopedQualifiedName();
      Node node2 = new Node(291);
      node2.hasChild(node0);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(51, nodeArray0);
      node0.isDo();
      Node node4 = new Node(50, nodeArray0);
      node4.isInc();
      node3.isGetterDef();
      node1.isFalse();
      node3.toString();
      Node.newString("IN 0");
      node1.cloneTree();
      node4.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("M<hCV<qrm*&s", 2, 2322);
      nodeArray0[0] = node0;
      Node node1 = new Node(262144, node0);
      node1.isUnscopedQualifiedName();
      node1.type = 407;
      node1.removeChild(node0);
      Node node2 = new Node(38, 57, 53);
      node2.isQuotedString();
      node2.getSourceFileName();
      node0.addChildrenToFront(node0);
      Node.newString(49, ".");
      Node node3 = Node.newNumber((-1454.019));
      node3.isFunction();
      node0.isNot();
      node3.isUnscopedQualifiedName();
      node0.getIndexOfChild(node0);
      node3.isContinue();
      node3.isAnd();
      node3.addChildrenToBack(node1);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = null;
      Node node1 = new Node((-1701), (Node) null, (Node) null);
      // Undeclared exception!
      try { 
        node1.copyInformationFrom(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = Node.newNumber((double) 390, 390, 390);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry1, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      jSTypeRegistry1.createEnumType("^SY$OHY", node0, jSType0);
      Node node1 = new Node(9);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("input_id", node1, jSType0);
      enumType0.toMaybeEnumType();
      Node node2 = new Node(30, node0, 12288, 127);
      EnumType enumType1 = jSTypeRegistry1.createEnumType("Not declared as a type name", node2, jSType0);
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getParentScope();
      node2.isNumber();
      Node node3 = node2.cloneNode();
      node1.copyInformationFromForTree(node0);
      node1.isFromExterns();
      node0.getNext();
      node1.isFromExterns();
      Node node4 = new Node(1, node1, node2, node3);
      node4.isGetProp();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node.newNumber(3164.221183540216);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      StringWriter stringWriter0 = new StringWriter(53);
      char[] charArray0 = new char[1];
      charArray0[0] = 'X';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringWriter stringWriter1 = new StringWriter(836);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) charBuffer0);
      stringWriter2.getBuffer();
      Node node0 = new Node(39);
      node0.appendStringTree(stringWriter1);
      node0.getDouble();
      node0.isArrayLit();
      node0.isIf();
      node0.isVoid();
      double double0 = 1.0;
      int int0 = (-1304);
      // Undeclared exception!
      try { 
        Node.newNumber(double0, int0, node0.FLAG_LOCAL_RESULTS);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)0;
      byte byte0 = (byte)6;
      Node node0 = new Node((byte)6);
      node0.setString("agV=~ KIb+v");
      int int0 = (-1400);
      int int1 = 110;
      int int2 = 7;
      int int3 = 1091;
      Node node1 = null;
      try {
        node1 = new Node(int1, int2, int3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 6
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node.extractLineno(50);
      Node node0 = Node.newString("mr\"UfZcU21=FW0?/");
      Node node1 = Node.newString("mr\"UfZcU21=FW0?/");
      node0.isSetterDef();
      node0.setDirectives((Set<String>) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = Node.newString("eW%#id}0t%cbxM`_(", 116, 56);
      node2.mayMutateArguments();
      node2.putIntProp(2, 51);
      node0.checkTreeEqualsImpl(node2);
      node2.isDefaultCase();
      node2.isThis();
      node1.isLabel();
      node1.isAdd();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isCast();
      node0.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(30, node0, 46, 39);
      node1.isAdd();
      node1.getIntProp(49);
      Node node2 = new Node(37, node1, 56, 55);
      node2.isHook();
      Node node3 = node2.removeChildAfter(node1);
      node2.useSourceInfoFromForTree(node3);
      int int0 = 116;
      // Undeclared exception!
      try { 
        Node.extractCharno(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(1872);
      Node node1 = Node.newString(32, "", 43, 1872);
      node1.getString();
      node1.getType();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node.extractLineno(53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = new Node(54, node1, node1, node0, node0, 47, 153);
      node2.addChildrenAfter(node0, node1);
      node0.isEquivalentTo(node2);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node0.detachChildren();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "WhEu^~ZOSI}lY7OZ$nY");
      Node node0 = new Node(102);
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)108;
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "WhEu^~ZOSI}lY7OZ$nY");
      node0.appendStringTree(charBuffer0);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-5);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(52, 52, 52);
      node0.isName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateArguments();
      Node node1 = node0.getLastSibling();
      node0.isVoid();
      node1.setStaticSourceFile((StaticSourceFile) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      VoidType voidType0 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      VoidType voidType1 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      ImmutableList.of(voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType1);
      Node node2 = Node.newString("Not declared as a constructor");
      node2.isQuotedString();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(38, nodeArray0);
      node3.isDo();
      node2.isInc();
      Node node4 = new Node(126);
      Node node5 = Node.newString(1, "Object#Key", 1, 4);
      node5.isFunction();
      node2.isNot();
      node1.isUnscopedQualifiedName();
      node1.getIndexOfChild(node3);
      node1.isArrayLit();
      node4.isAnd();
      node0.addChildrenToBack(node2);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("com.google.common.collect.Lists$RandomAccessPartition", (-315), 1689);
      node0.getType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node2 = Node.newString("Object#Element", 101, (-544));
      node0.addSuppression("com.google.javascript.rhino.Node$NumberNode");
      node1.isParamList();
      node0.getSideEffectFlags();
      node2.getProp(62);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      node0.putProp(47, locale_Category0);
      node2.hasOneChild();
      node2.isLabel();
      Node node3 = new Node((-2534), 4455, 0);
      node1.isBlock();
      node3.addChildrenToFront(node1);
      node3.isGetElem();
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      StringWriter stringWriter0 = new StringWriter(2561);
      char[] charArray0 = new char[2];
      charArray0[0] = 'X';
      charArray0[1] = 'V';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringWriter0.append((CharSequence) charBuffer0);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      node0.appendStringTree(stringBuffer0);
      node0.getDouble();
      node0.isEmpty();
      node0.isEquivalentToTyped(node0);
      node0.isVoid();
      node0.getJSDocInfo();
      Node node1 = node0.clonePropsFrom(node0);
      node0.isVarArgs();
      node0.addSuppression("WHILE");
      node0.isEquivalentTo(node1, false, true, false);
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newNumber((-508.68067602413436));
      Node node1 = new Node(57, node0, node0, 15, 46);
      node1.getBooleanProp(15);
      node0.getLineno();
      Node node2 = Node.newString("");
      Node node3 = node1.cloneTree();
      node2.isObjectLit();
      node2.clonePropsFrom(node3);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2317, 2317, 103);
      node0.isQuotedString();
      Node node1 = new Node(52, node0);
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node1.isBreak();
      Node node3 = Node.newString(4095, "", 37, 1012);
      node3.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node3.isSetterDef();
      node2.toString();
      Node node4 = new Node((-1167), node3, node2, node2);
      Node node5 = Node.newString(39, "INSTANCEOF");
      node5.toString();
      Node[] nodeArray0 = new Node[3];
      Node node6 = new Node(382);
      nodeArray0[0] = node6;
      nodeArray0[1] = node2;
      nodeArray0[2] = node2;
      Node node7 = new Node(1162, nodeArray0);
      node7.isFromExterns();
      node3.isDelProp();
      nodeArray0[2].isBlock();
      node5.isCatch();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(49);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node0.getLastChild();
      int int0 = 0;
      Node node4 = new Node(50, 53, 57);
      node4.wasEmptyNode();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.removeChild(node4);
      node3.setCharno(int0);
      node3.putProp(node2.LENGTH, node2);
      int int1 = (-521);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1167));
      node0.isVar();
      node0.isTypeOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getDouble();
      node0.getAncestors();
      node0.getChildAtIndex((-1167));
      node0.isAssignAdd();
      node0.mayMutateGlobalStateOrThrow();
      node0.addChildAfter((Node) null, (Node) null);
      node0.isNew();
      // Undeclared exception!
      try { 
        node0.isThrow();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = Node.newNumber((-508.68067602413436));
      Node node1 = new Node(57, node0, node0, 15, 46);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isAssign();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(24, "k>d-z+-%25?-Gp`1'");
      node0.isSyntheticBlock();
      node0.isAdd();
      node0.getJSDocInfo();
      Node node1 = Node.newNumber((-2258.7162), 956, 3709);
      node1.toString(false, false, true);
      node1.getSideEffectFlags();
      node0.addChildToBack(node1);
      node0.isAnd();
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = new Node((-2660), (-2660), (-2660));
      Node node1 = node0.cloneTree();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(15);
      char[] charArray0 = new char[5];
      charArray0[0] = '2';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mr\"UfZcU21=FW0?/");
      charArray0[1] = 'T';
      charArray0[2] = '@';
      charArray0[3] = '3';
      node0.addChildToFront(node1);
      charArray0[4] = 'B';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) charBuffer1, (-2040), 8);
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append((CharSequence) charBuffer2);
      charBuffer2.put(charArray0);
      char char0 = 'R';
      CharArrayWriter charArrayWriter2 = charArrayWriter1.append(char0);
      node1.appendStringTree(charArrayWriter2);
      node0.isDefaultCase();
      int int0 = 125;
      node1.removeProp(int0);
      node0.getCharno();
      node0.isComma();
      // Undeclared exception!
      try { 
        node0.isGetElem();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(102);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)108;
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("6LE.");
      node_FileLevelJsDocBuilder0.append("o g={* %ssq-9xY");
      node_FileLevelJsDocBuilder0.append("WhEu^~ZOSI}lY7OZ$nY");
      node_FileLevelJsDocBuilder0.append("WhEu^~ZOSI}lY7OZ$nY");
      node0.getSourcePosition();
      node0.getInputId();
      Node.extractCharno(63);
      node0.isTrue();
      node0.isSwitch();
      node0.mayMutateGlobalStateOrThrow();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newNumber(1344.8677941327, 124, 14);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(52);
      Node node1 = Node.newString(108, "O}{eF:&[&7Nt#");
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.isExprResult();
      node1.getSourceOffset();
      node0.getString();
      node0.isOnlyModifiesArgumentsCall();
      node1.mayMutateGlobalStateOrThrow();
      node1.siblings();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newString(116, "");
      Node node1 = Node.newString(33, "");
      node1.isContinue();
      Node node2 = new Node(39, node1, node0, (-1103), 8);
      node2.removeProp(38);
      node2.cloneTree();
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      VoidType voidType0 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      VoidType voidType1 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      ImmutableList.of(voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType1);
      Node node0 = new Node((-2747));
      Node node1 = Node.newString("com.google.javascript.rhino.Node$AbstractPropListItem");
      node1.isThrow();
      node1.getBooleanProp(50);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      int int0 = 38;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = Node.newString(382, "Object#Key", 38, 31);
      node0.checkTreeTypeAwareEqualsImpl((Node) null);
      node0.isIf();
      node0.getChildAtIndex(int0);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("M<hCV<qrm*&s", 2322, 2322);
      nodeArray0[0] = node0;
      Node node1 = new Node(262144, node0);
      node0.putBooleanProp(4095, false);
      node1.isIn();
      node0.isScript();
      node0.getString();
      node0.isUnscopedQualifiedName();
      Node node2 = new Node(51, node0, (-3456), 125);
      node2.isAdd();
      int int0 = 4194304;
      Node node3 = new Node(node2.STATIC_SOURCE_FILE, node0, int0, node1.FLAG_LOCAL_RESULTS);
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(102);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)108;
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("6LE.");
      node0.getJSDocInfo();
      node_FileLevelJsDocBuilder0.append("o g={* %ssq-9xY");
      node_FileLevelJsDocBuilder0.append("WhEu^~ZOSI}lY7OZ$nY");
      node_FileLevelJsDocBuilder0.append("WhEu^~ZOSI}lY7OZ$nY");
      node0.getSourcePosition();
      node0.getInputId();
      Node.extractCharno(63);
      node0.isTrue();
      node0.isSwitch();
      node0.mayMutateGlobalStateOrThrow();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("adKCpyl2^", 132, 791);
      nodeArray0[0] = node0;
      Node node1 = new Node(61, nodeArray0, 52, 4337);
      Node node2 = node0.cloneTree();
      node2.isObjectLit();
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(32, 52, 42);
      node1.isNew();
      node0.isFunction();
      node0.isNot();
      node0.isFor();
      Node node2 = new Node(291);
      node2.hasChild(node0);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(51, nodeArray0);
      node3.isInstanceOf();
      node0.isTry();
      node1.toString();
      node2.isFromExterns();
      node1.isDelProp();
      node2.isGetElem();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString("Atk7F~y\"pCa9w<}~mx", (-2985), (-2985));
      node0.putBooleanProp((-2985), true);
      node0.isIn();
      node0.isScript();
      node0.getString();
      node0.isContinue();
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newNumber((-358.2916), 117, (-514));
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      ErrorReporter errorReporter0 = null;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Node node0 = Node.newString("fmY_Wu:_");
      Node node1 = new Node(23, node0, (-1221), 12);
      Node node2 = new Node(29, node1, node0, node0, node0);
      node2.getDirectives();
      node1.setSourceEncodedPositionForTree(node0.SIDE_EFFECT_FLAGS);
      int int0 = 503;
      String string0 = "com.google.common.collect.SingletonImmutableBiMap";
      // Undeclared exception!
      try { 
        Node.newString(int0, string0, node0.INFERRED_FUNCTION, node1.FLAG_THIS_UNMODIFIED);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node1 = Node.newString("Object#Element", 101, (-544));
      node0.isParamList();
      node1.getProp(62);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node1.isAssign();
      Node node2 = new Node(4095, 1, 309);
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newString(116, "");
      Node node1 = Node.newString(33, "");
      node1.isContinue();
      Node node2 = new Node(39, node1, node0, (-1103), 8);
      node2.addChildAfter(node1, node0);
      int int0 = 148;
      int int1 = 28;
      int int2 = 2012;
      int int3 = 83;
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString("Rb", (-815), (-815));
      node0.getQualifiedName();
      Node node1 = node0.copyInformationFrom(node0);
      Node node2 = new Node(46, node0, node0, node1, 4095, 29);
      node1.useSourceInfoFromForTree(node0);
      node2.toStringTree();
      node0.clonePropsFrom(node2);
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node0.siblings();
      Node.newString(2586, "Rb");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)86;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.toString();
      node3.isOptionalArg();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = Node.newString("Object#Element", 101, (-544));
      node0.isParamList();
      node1.getProp(62);
      Node node2 = Node.newString(";pOxm+");
      node0.cloneTree();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:lYN$ez>y@Ka6|%", 4337, (-1212));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isBreak();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(52, node0, 52, 1289);
      node1.addChildToBack(node0);
      node1.isAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType jSType0 = null;
      FunctionType functionType0 = JSType.toMaybeFunctionType(jSType0);
      // Undeclared exception!
      try { 
        JSType.toMaybeTemplatizedType((JSType) functionType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = new Node(744, 744, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = new Node(0, node1, node0, node0, 528, 31);
      int int0 = 1023;
      node2.setType(int0);
      // Undeclared exception!
      try { 
        node2.isNoSideEffectsCall();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newNumber((-508.68067602413436));
      Node node1 = new Node(57, node0, node0, 15, 46);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node1.isAssign();
      node0.getChildCount();
      node_SideEffectFlags3.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newNumber((-508.68067602413436));
      Node node1 = new Node(57, node0, node0, 15, 46);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isAssign();
      node0.isGetElem();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newNumber((-527.2503494443536));
      Node node1 = new Node(4095, node0, node0, 39, (-875));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setMutatesArguments();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(100, nodeArray0, 0, (-1406));
      Node node3 = new Node(15, node2, 2, (-2410));
      node3.isAssign();
      node3.getChildCount();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newString(124, "Iv&:*v& Jg!");
      Node node1 = Node.newString(47, "Iv&:*v& Jg!");
      node0.isContinue();
      node1.useSourceInfoIfMissingFrom(node0);
      node0.isTry();
      node1.toString();
      node0.isFromExterns();
      node0.isDelProp();
      node0.isGetElem();
      node0.isInstanceOf();
      node0.isFunction();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2, nodeArray0, (-346), 2778);
      node0.isNew();
      node0.isFunction();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(32, (-1475), 1);
      node0.isEquivalentToTyped(node1);
      node1.getChangeTime();
      Node node2 = Node.newString("wtgW`1");
      node0.isEquivalentTo(node2, false, false, true);
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = Node.newString("Object#Element", 101, (-544));
      node0.isParamList();
      node1.getProp(62);
      Node.newString(";pOxm+");
      node0.cloneTree();
      node1.getDouble();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(52, 52, 52);
      node0.isName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateArguments();
      Node node1 = node0.getLastSibling();
      node0.isVoid();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      VoidType voidType0 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      VoidType voidType1 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      ImmutableList.of(voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType1);
      Node node2 = Node.newString("Not declared as a constructor");
      node2.isQuotedString();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(38, nodeArray0);
      node3.isDo();
      node2.isInc();
      Node node4 = new Node(126);
      node4.isGetterDef();
      node4.isFalse();
      node4.useSourceInfoFrom(node3);
      node2.toString();
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node4.getLineno();
      node1.isNoSideEffectsCall();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = new Node(102);
      node0.getInputId();
      node0.setWasEmptyNode(true);
      node0.toString();
      node0.detachChildren();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1167), 167, (-4096));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getDouble();
      Node node1 = new Node(51, node0, node0, node0);
      Node node2 = node1.getChildAtIndex(46);
      node1.isAssignAdd();
      node1.mayMutateGlobalStateOrThrow();
      node2.addChildAfter(node1, node1);
      node2.isNew();
      node2.isThrow();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(1872);
      Node node1 = Node.newString(32, "", 43, 1872);
      node0.isAdd();
      node0.getIntProp((-2561));
      Node node2 = new Node(2005, node0, 51, 1835);
      node2.isHook();
      Node node3 = new Node(1, node2, node0);
      node3.removeChildAfter(node1);
      node0.useSourceInfoFromForTree(node3);
      int int0 = 255;
      Node.extractCharno(int0);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newString(116, "");
      Node node1 = Node.newString(33, "");
      node1.isContinue();
      Node node2 = new Node(39, node1, node0, (-1103), 8);
      node2.removeProp(38);
      node2.cloneTree();
      node1.getQualifiedName();
      double double0 = 1.0;
      node1.setDouble(double0);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString(124, "Iv&:*v& Jg!");
      Node node1 = Node.newString(47, "Iv&:*v& Jg!");
      Node node2 = node0.copyInformationFrom(node1);
      node0.isContinue();
      node1.isDelProp();
      node1.isBlock();
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("adKCpyl2^", 132, 791);
      nodeArray0[0] = node0;
      Node node1 = new Node(61, nodeArray0, 52, 4337);
      Node node2 = node0.cloneTree();
      node1.addChildBefore(node2, node0);
      node2.isObjectLit();
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      ImmutableList.of();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.setReturnsTainted();
      Node node0 = new Node(2, 2, 62);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.Node$StringNode");
      Node node1 = Node.newNumber(53.792505783596624);
      Node node2 = new Node(132, node0, node0, node0, node1, 57, 83);
      node1.getBooleanProp(38);
      node2.isNot();
      node1.isUnscopedQualifiedName();
      node0.getIndexOfChild(node2);
      node2.isContinue();
      node0.isAnd();
      node2.addChildrenToBack(node1);
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(52, 52, 52);
      node0.isName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateArguments();
      Node node1 = node0.getLastSibling();
      node0.isVoid();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      VoidType voidType0 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      VoidType voidType1 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      ImmutableList.of(voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType1);
      Node node2 = Node.newString("Not declared as a constructor");
      node2.isQuotedString();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(38, nodeArray0);
      node3.isDo();
      node2.isInc();
      Node node4 = new Node(126);
      node4.isGetterDef();
      node4.useSourceInfoFromForTree(node2);
      node4.isFalse();
      node2.toString();
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node4.getLineno();
      node1.isNoSideEffectsCall();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = Node.newString("K J*\"B", 382, 382);
      node0.putBooleanProp((-3147), true);
      node0.isIn();
      Node node1 = Node.newNumber(1.0, 1, 98);
      Node node2 = new Node(42, node1, node1, (-147), 4);
      Node node3 = Node.newString("\")", 153, 1580);
      node2.useSourceInfoFromForTree(node3);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Not declared as a constructor", node0, jSType0);
      enumType0.toMaybeEnumType();
      enumType0.autoboxesTo();
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getParentScope();
      node0.isNumber();
      node0.getLineno();
      Node node1 = new Node(52, node0, node0);
      Node node2 = node1.cloneTree();
      node2.hasMoreThanOneChild();
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "eW%#id}0t%cbxM`_(");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("+/zpe", 1689, (-315));
      node0.getType();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = Node.newString(12, "no next sibling.", 15, 35);
      node1.getString();
      int int0 = Node.MAX_COLUMN_NUMBER;
      Node.extractLineno(51);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = new Node(49, node1, 24, (-1212));
      Node node3 = new Node((-1660), node2, node0, node0, node1, 4095, 55);
      node3.addChildrenAfter(node1, node0);
      node0.isEquivalentTo(node2);
      node3.setSideEffectFlags(node_SideEffectFlags0);
      node2.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newNumber(1266.71, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[6];
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      enumType0.matchesInt32Context();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumType1.toString();
      enumElementType0.getParentScope();
      jSTypeArray0[0] = (JSType) null;
      node0.isNumber();
      Node node1 = node0.cloneNode();
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = node2.copyInformationFromForTree(node1);
      node2.isFromExterns();
      node2.getNext();
      node0.isGetterDef();
      node2.isWhile();
      node0.getQualifiedName();
      node3.getAncestor(103);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newNumber((-508.68067602413436));
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(57, node0, node0, 15, 46);
      node1.getBooleanProp(47);
      node0.getLineno();
      Node.newString("");
      Node node2 = node1.cloneTree();
      node2.hasMoreThanOneChild();
      node0.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.setReturnsTainted();
      Node node1 = new Node(2, 1646, 62);
      Node node2 = Node.newNumber(55.0);
      Node node3 = new Node(132, node1, node1, node1, node2, 57, 83);
      node3.isDec();
      node2.isSetterDef();
      node3.toString();
      Node node4 = new Node(37, node2, node3, node1);
      Node node5 = new Node(node3.FLAG_NO_THROWS);
      node5.toString();
      node0.isFromExterns();
      node0.isDelProp();
      node1.isBlock();
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2317, 2317, 103);
      node0.isQuotedString();
      Node node1 = new Node(52, node0);
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      Node node3 = Node.newNumber((-1010.0));
      Node node4 = node2.copyInformationFrom(node3);
      node3.isContinue();
      node3.isDelProp();
      node4.isBlock();
      node2.isWith();
      node3.isThrow();
      node1.getInputId();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = new Node(102);
      node0.setLineno(324);
      Node node1 = Node.newString("String node not created with Node.newString", 38, 386);
      node0.clonePropsFrom(node1);
      node0.getInputId();
      int int0 = Node.QUOTED_PROP;
      node0.getInputId();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newNumber((-508.68067602413436));
      Node node1 = new Node(57, node0, node0, 15, 46);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node1.isFor();
      node0.getChildCount();
      node_SideEffectFlags3.areAllFlagsSet();
      node0.isDefaultCase();
      node1.isAdd();
      node0.isAnd();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType[] jSTypeArray0 = new JSType[6];
      node0.isNumber();
      node0.cloneNode();
      Node node1 = new Node(38, 42, 55);
      node1.isFromExterns();
      node1.getNext();
      Node node2 = node1.copyInformationFrom(node0);
      node0.isFromExterns();
      node2.isGetProp();
      Node.newNumber((double) 55, 53, 4);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(104, "Object#Key");
      nodeArray0[0] = node0;
      Node node1 = new Node(61, nodeArray0, 52, 4337);
      Node node2 = node0.cloneTree();
      node1.addChildBefore(node2, node0);
      node2.isObjectLit();
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = new Node(102);
      node0.getInputId();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(32);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node0.isAssign();
      node0.isWhile();
      node0.isTry();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(50, node0, node0, node0, 31, 29);
      Node node2 = Node.newString(36, "xP)v?.{");
      Node.newString("k>d-z+-%25?-Gp`1'", 1966, 77);
      node0.isContinue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node3 = new Node(4095, 55, 0);
      node2.isFromExterns();
      node2.getNext();
      node1.copyInformationFrom(node3);
      node0.isFromExterns();
      node2.isGetProp();
      Node.newNumber((-1491.446756499), (-8), 31);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(102, "WhEu^~ZOSI}lY7OZ$nY");
      int int0 = Node.QUOTED_PROP;
      node0.getInputId();
      node0.isSwitch();
      int int1 = 108;
      node0.checkTreeEqualsImpl((Node) null);
      Node node1 = new Node(int1, node0, node0.IS_CONSTANT_NAME, int0);
      node0.isLabelName();
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(54, 2844, 10);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = Node.newNumber((double) 36);
      Node node4 = node1.clonePropsFrom(node3);
      node2.useSourceInfoFromForTree(node4);
      Node node5 = new Node(4095);
      node2.isThrow();
      node0.setVarArgs(false);
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(102, "WhEu^~ZOSI}lY7OZ$nY");
      node0.getInputId();
      node0.isSwitch();
      node0.checkTreeEqualsImpl(node0);
      node0.getLineno();
      node0.isNoSideEffectsCall();
      node0.getStaticSourceFile();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2, nodeArray0, (-346), 2792);
      node0.isNew();
      node0.getType();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jOcZl");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node0.children();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node.extractLineno(40);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node0.useSourceInfoFromForTree((Node) null);
      node0.setSideEffectFlags(node_SideEffectFlags1);
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      int int0 = (-123);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-123), (Node) null, (Node) null, (-123), (-123));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = new Node((-973));
      node0.getSideEffectFlags();
      node0.setLineno(42);
      node0.isOnlyModifiesThisCall();
      node0.children();
      Node node1 = new Node((-2273), node0, node0, node0, (-874), 46);
      node1.isExprResult();
      node1.isAnd();
      node1.getType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType.toMaybeTemplatizedType((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      TemplateType templateType0 = jSTypeRegistry1.getObjectElementKey();
      TemplateType templateType1 = JSType.toMaybeTemplateType((JSType) templateType0);
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of((TemplateType) null, (TemplateType) null, templateType1, templateType0, (TemplateType) null);
      immutableList0.asList();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      Node node1 = Node.newString(2, "<_");
      Node node2 = new Node(1872, node0, node0, node1, node0);
      node2.isFunction();
      boolean boolean0 = node2.isCatch();
      node0.hasChild(node1);
      node0.isSyntheticBlock();
      Node node3 = Node.newNumber((double) 36, 39, 2);
      Node node4 = new Node(2723, node3, 12, 4095);
      node4.addChildToBack(node0);
      node3.setIsSyntheticBlock(boolean0);
      node3.isDelProp();
      node1.getCharno();
      ErrorReporter errorReporter0 = null;
      JSTypeRegistry jSTypeRegistry0 = null;
      try {
        jSTypeRegistry0 = new JSTypeRegistry(errorReporter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      String string0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      int int0 = 1203;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node0 = Node.newNumber(1.0, 15, (-1250));
      Node node1 = new Node(1203, (Node) null, (Node) null, node0, node0, (-837), 56);
      Node node2 = new Node(int0, node1, node0, node1);
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node2.getQualifiedName();
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.common.base.Objects");
      Node node0 = Node.newString(47, "com.google.common.base.Objects");
      node0.setInputId((InputId) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getLength();
      Node node1 = new Node(47, node0, node0);
      node1.getSourceOffset();
      node1.wasEmptyNode();
      node1.isEquivalentTo(node0, true, false, false);
      Node node2 = node0.cloneNode();
      node1.putBooleanProp(47, true);
      node1.getProp(0);
      node0.isQualifiedName();
      node0.setIsSyntheticBlock(true);
      node1.setInputId((InputId) null);
      node0.addChildBefore(node1, node1);
      int int0 = 3368;
      node1.getIntProp(int0);
      node1.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.setSideEffectFlags(node_SideEffectFlags0);
      node0.cloneTree();
      double double0 = (-4838.3951);
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = new Node(153);
      node0.isName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateArguments();
      Node node1 = node0.getLastSibling();
      node0.isVoid();
      node0.setStaticSourceFile((StaticSourceFile) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      VoidType voidType0 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      ImmutableList.of(voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType0);
      Node node2 = Node.newString("DGNp?#06uH_");
      node0.isQuotedString();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node2;
      Node node3 = new Node(51, nodeArray0);
      node2.isDo();
      nodeArray0[0].isInc();
      int int0 = 132;
      Node node4 = null;
      try {
        node4 = new Node(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.isAssignAdd();
      node0.getFirstChild();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newString(4337, "P:XYNS$ez>y@Ka6%", 4337, (-1212));
      Node node1 = Node.newString(24, "P:XYNS$ez>y@Ka6%");
      node0.isContinue();
      node1.isNot();
      node0.isUnscopedQualifiedName();
      node0.isParamList();
      node1.getProp(42);
      Node node2 = Node.newString("adIJK0_aP N1NETza@");
      Node node3 = node2.cloneTree();
      node3.isBlock();
      node2.isCatch();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.jstype.JSType$1";
      Node node0 = Node.newString(29, "com.google.javascript.rhino.jstype.JSType$1", (-1212), 52);
      node0.isTypeOf();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = Node.newNumber((double) 57);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node1.addChildrenAfter((Node) null, (Node) null);
      node0.useSourceInfoFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(102, "WhEu^~ZOSI}lY7OZ$nY");
      int int0 = Node.QUOTED_PROP;
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(155, nodeArray0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, (List<JSType>) immutableList0);
      jSTypeArray0[0] = (JSType) functionType0;
      node1.isInc();
      Node node2 = new Node(401);
      node1.toString();
      node2.isFromExterns();
      node0.isDelProp();
      node0.isBlock();
      node0.isCatch();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node1 = new Node(147, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node1.isFromExterns();
      node2.isGetProp();
      Node.newNumber(16.0, 1, 300);
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      node0.isString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      Node node1 = new Node(49, node0, node0);
      Node node2 = new Node(49, node1);
      node2.checkTreeEqualsImpl(node1);
      node2.addChildAfter(node1, node0);
      node0.isNew();
      // Undeclared exception!
      try { 
        node0.isThrow();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(1872);
      Node node1 = Node.newString(32, "", 43, 1872);
      node1.getString();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node2 = new Node(16, node1, node0, node0, 49, 29);
      node2.toString(true, false, false);
      node1.toString();
      node2.mayMutateGlobalStateOrThrow();
      node2.removeProp((-1867));
      Node node3 = Node.newNumber(8.2);
      node3.setQuotedString();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(102, "WhEu^~ZOSI}lY7OZ$nY");
      int int0 = Node.QUOTED_PROP;
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, (List<JSType>) immutableList0);
      jSTypeArray0[0] = (JSType) functionType0;
      node0.isInc();
      Node node1 = new Node(401);
      node0.toString();
      node1.isFromExterns();
      node0.isDelProp();
      node0.isBlock();
      node0.isCatch();
      Node.newNumber((double) 0);
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImmutableList.of();
      Node node0 = Node.newString("Object#Element");
      node0.isCast();
      node0.isScript();
      node0.getAncestor((-674));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isUnscopedQualifiedName();
      Node node1 = null;
      try {
        node1 = new Node(node0.VAR_ARGS_NAME, node0, node0.IS_NAMESPACE, node0.EMPTY_BLOCK);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      VoidType voidType0 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      VoidType voidType1 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      VoidType voidType2 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      ImmutableList.of(voidType0, voidType0, voidType0, voidType0, voidType0, voidType0, voidType1, voidType2, voidType0, voidType0);
      Node node1 = Node.newString("Not declared as a constructor");
      node0.isQuotedString();
      Node node2 = new Node(40, node1, node0, node0);
      node2.isDo();
      node1.isInc();
      Node node3 = new Node(50);
      node2.toString();
      node0.isFromExterns();
      node2.useSourceInfoIfMissingFrom(node1);
      Node.newNumber((double) 30);
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = new Node(103, 52, 85);
      Node node2 = Node.newNumber(0.7);
      Node node3 = new Node((-536870912), node2, node1, node2, node0, 654, 382);
      node1.setIsSyntheticBlock(true);
      node1.isDec();
      node1.isSetterDef();
      node2.getChildCount();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags4.areAllFlagsSet();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node.extractLineno(70);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      String string0 = ";B";
      Node node0 = Node.newString((int) (byte)3, ";B");
      node0.getString();
      node0.isContinue();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(57, node0, (-896), 424);
      node0.isAdd();
      EvoSuiteFile evoSuiteFile0 = null;
      node1.toString(false, false, true);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      int int0 = 1600;
      int int1 = 153;
      node0.isOnlyModifiesThisCall();
      Node node2 = new Node(int0, node1, node1.FLAG_NO_THROWS, int1);
      // Undeclared exception!
      try { 
        node1.isHook();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 57
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isTypeOf();
      Node node1 = new Node(30, node0, node0, 47, 15);
      node0.getBooleanProp(147);
      node1.getLineno();
      Node node2 = Node.newString(".equivalentTo(");
      Node node3 = node0.cloneTree();
      Node node4 = new Node(16, node3, node3, node1, 32, 42);
      node2.addChildrenAfter(node4, node3);
      node3.getInputId();
      node1.checkTreeEquals(node2);
      String string0 = "%F'yb'PR9x~aAojc68Z";
      boolean boolean0 = false;
      SimpleSourceFile simpleSourceFile0 = null;
      try {
        simpleSourceFile0 = new SimpleSourceFile(string0, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) vector0);
      jSTypeRegistry0.incrementGeneration();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(301, node0, node0, node0);
      Node node2 = new Node(42, node1, node1, node1, node1);
      node2.isVar();
      Node node3 = node2.clonePropsFrom(node0);
      node1.getInputId();
      node3.setInputId((InputId) null);
      node3.siblings();
      node1.isQualifiedName();
      node0.isFromExterns();
      node2.isVarArgs();
      node3.isLocalResultCall();
      node2.useSourceInfoIfMissingFromForTree(node3);
      Node.newString("Object#Element", 57, 4);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      Node node1 = new Node(49, node0, node0);
      Node node2 = new Node(53, 2, 47);
      node2.checkTreeEqualsImpl(node1);
      node2.isIn();
      node2.isDebugger();
      node0.isThrow();
      Node node3 = new Node(1, node0, node1, node2, (-376), 43);
      node3.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString(33, "B?]Gw+fLoRD-@#");
      Node node1 = Node.newString(3163, "B?]Gw+fLoRD-@#", 156, 1048576);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      node_NodeMismatch0.equals("B?]Gw+fLoRD-@#");
      node1.getSideEffectFlags();
      node1.setLineno(53);
      node0.isOnlyModifiesThisCall();
      node0.children();
      node1.isExprResult();
      node0.isAnd();
      node1.getType();
      node1.getString();
      node1.isDefaultCase();
      node0.isUnscopedQualifiedName();
      double double0 = (-1.0);
      Node.newNumber(double0);
      node0.hasOneChild();
      node1.getDouble();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(102, 102, 102);
      node0.getSourcePosition();
      node0.getInputId();
      Node.extractCharno(102);
      node0.isTrue();
      Node node1 = new Node(1, (-2538), 2);
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.jstype.JSType$1";
      Node node0 = Node.newString(29, "com.google.javascript.rhino.jstype.JSType$1", (-1212), 52);
      node0.isTypeOf();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.addSuppression("Object#Element");
      node0.getProp(29);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.copyInformationFrom(node1);
      node0.getDouble();
      Node node2 = Node.newString(node0.COLUMN_MASK, string0);
      node2.isThrow();
      // Undeclared exception!
      try { 
        node0.isGetterDef();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEG com.google.javascript.rhino.jstype.JSType$1 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000337] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4337);
      Node node1 = new Node(126, node0, node0, 4095, 43);
      node1.getBooleanProp(54);
      node0.getLineno();
      Node.newString("1P<H$6Cs k\" ");
      node1.isNew();
      node0.isObjectLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      node1.getJSType();
      jSTypeArray0[0] = null;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("com.google.javascript.rhino.jstype.FunctionType$Kind", node1, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      jSTypeArray0[1] = (JSType) enumElementType0;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseEnumElementType(enumElementType0);
      jSTypeArray0[2] = jSType0;
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newString(54, "P:XYNS$ez>y@Ka6%", (-1212), 15);
      String string0 = ", ";
      Node node1 = Node.newString(", ");
      node0.addChildrenToFront(node1);
      Node node2 = node1.removeFirstChild();
      node0.toStringTree();
      node0.putProp(node2.VAR_ARGS_NAME, string0);
      int int0 = 32;
      Node.extractCharno(int0);
      // Undeclared exception!
      try { 
        node2.isFromExterns();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 54
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newString("fmY_Wu:_");
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(276, node0, node0, 50, 31);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isThrow();
      node2.isGetterDef();
      node0.isNot();
      node2.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = new Node(11);
      Node node1 = null;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getQualifiedName();
      Node node2 = new Node(3951, (Node) null, node0);
      node2.addChildrenToFront(node0);
      // Undeclared exception!
      try { 
        node2.setVarArgs(boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isNot();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(935);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = new Node(32, nodeArray0);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node3.isDo();
      node0.isInc();
      node0.isFalse();
      node3.toString();
      Node.newNumber(1.2, (-227), 54);
      node1.checkTreeEqualsImpl(node0);
      node1.getLineno();
      node1.isNoSideEffectsCall();
      node2.getStaticSourceFile();
      node1.isFor();
      node3.detachChildren();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node.newNumber(0.0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(32, 52, 42);
      Node node1 = Node.newString("com.google.common.collect.Iterators$1");
      node1.addChildrenToFront(node0);
      Node node2 = node1.removeFirstChild();
      node0.toStringTree();
      node2.putProp(47, "TYPEOF 52\n");
      Node.extractCharno(1305);
      node2.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(32, 52, 42);
      node0.isFunction();
      node0.isNot();
      node1.isUnscopedQualifiedName();
      Node node2 = new Node(291);
      node0.isDo();
      node0.isInc();
      node1.isQualifiedName();
      node2.isVar();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = new Node(31);
      Node node1 = new Node(31, node0, node0, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node1.isIn();
      node1.addChildBefore(node0, node0);
      // Undeclared exception!
      try { 
        node1.srcrefTree(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = new Node(24, 24, 24);
      node0.isNot();
      node0.isAdd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(1, 37, 37);
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImmutableList.of();
      Node node0 = Node.newString("Object#Element");
      node0.isCast();
      node0.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(30, node0, 46, 39);
      node1.getIntProp(49);
      Node node2 = new Node(37, node1, 29, 55);
      Node node3 = new Node(57);
      Node node4 = node1.cloneTree();
      node4.checkTreeEquals(node2);
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "WhEu^~ZOSI}lY7OZ$nY");
      Node node0 = Node.newString(98, "WhEu^~ZOSI}lY7OZ$nY");
      node0.isFunction();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isHook();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node1 = new Node(32, nodeArray0, 1, (-178));
      Node node2 = node0.removeChildAfter(node1);
      nodeArray0[0].isWhile();
      node0.isTry();
      // Undeclared exception!
      try { 
        node2.isWhile();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      Node node0 = Node.newString((int) (byte)3, ";B");
      node0.isFunction();
      node0.isNot();
      node0.hasChild(node0);
      node0.isSyntheticBlock();
      Node node1 = new Node(86, node0, (-2549), 31);
      node1.setIsSyntheticBlock(false);
      node1.isDelProp();
      node0.getCharno();
      node1.hasOneChild();
      node1.isCatch();
      node0.isInstanceOf();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newNumber((-508.68067602413436));
      Node node1 = new Node(57, node0, node0, 15, 46);
      node0.getLineno();
      Node node2 = Node.newString("");
      node1.isObjectLit();
      node2.isOptionalArg();
      node1.clonePropsFrom(node2);
      node1.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString(116, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setThrows();
      node0.replaceChildAfter((Node) null, (Node) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = null;
      try {
        jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isNot();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(935);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = new Node(32, nodeArray0);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node3.isDo();
      node0.isInc();
      Node node4 = Node.newString("adIJK0_aP N1NETza@", 102, 2533);
      node1.mayMutateArguments();
      node0.putIntProp(57, 46);
      node1.checkTreeEqualsImpl(node2);
      node0.checkTreeEquals(node0);
      node1.isDefaultCase();
      node0.isThis();
      node1.isLabel();
      node0.isAdd();
      node4.isStringKey();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(102, "WhEu^~ZOSI}lY7OZ$nY");
      int int0 = Node.QUOTED_PROP;
      node0.getInputId();
      node0.isSwitch();
      Node node1 = new Node(108, node0, 43, 36);
      node1.detachChildren();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newString(33, "B?]Gw+fLoRD-@#");
      node0.isContinue();
      Node node1 = Node.newString("B?]Gw+fLoRD-@#");
      Node node2 = Node.newString(1234, "quoted", 4, 42);
      node2.isObjectLit();
      node1.isOptionalArg();
      Node node3 = new Node(47, node2);
      Node node4 = new Node(49, node3, node0, node3, node0);
      Node node5 = new Node(1073, node4, 55, 53);
      node3.clonePropsFrom(node5);
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("WhEu^~ZOSI}lY7OZ$nY");
      InputId inputId0 = new InputId("WhEu^~ZOSI}lY7OZ$nY");
      node0.setInputId(inputId0);
      node0.getSourcePosition();
      node0.getInputId();
      Node.extractCharno(102);
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(32, 52, 42);
      node1.isNew();
      node0.isFunction();
      node0.isNot();
      node1.isUnscopedQualifiedName();
      node1.toString();
      node0.getLineno();
      Node node2 = Node.newString("TYPEOF 52", 53, 275);
      node2.detachChildren();
      node0.setLineno((-2545));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(1, nodeArray0, 53, 1475);
      node3.isNE();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber(3829.8870541);
      Node node1 = Node.newString(83, "", 115, 57);
      node0.getBooleanProp(114);
      node0.clonePropsFrom(node1);
      node1.isIf();
      Node node2 = Node.newNumber((double) 47, (-402), (-553));
      node2.isFunction();
      node1.isNot();
      Node node3 = Node.newNumber((double) 32, 47, (-2984));
      Node node4 = new Node(30, node0, node3, node1);
      node4.isUnscopedQualifiedName();
      node0.isAdd();
      node2.hasChildren();
      node4.useSourceInfoFrom(node3);
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node0 = Node.newNumber((-122.664446));
      Node node1 = new Node(42, node0, node0, node0, node0, 38, 1);
      node0.addChildToBack(node1);
      node0.setCharno(1656);
      Node node2 = node1.cloneNode();
      node1.getDirectives();
      String string0 = node1.toStringTree();
      node1.getChildBefore(node0);
      node1.srcref(node2);
      Node.newString(string0);
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isNot();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node1.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node node2 = new Node(40, node0, 4, 1);
      Node node3 = Node.newNumber((-468.0), 38, 32);
      node2.addChildrenAfter(node3, node0);
      Node node4 = Node.newString(30, (String) null);
      Node node5 = new Node(node4.STATIC_SOURCE_FILE, node0, node2.SLASH_V, node1.SYNTHETIC_BLOCK_PROP);
      node5.isHook();
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        node0.isVar();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newString("expected one element but was: <");
      node0.getStaticSourceFile();
      Node node1 = new Node(2209, node0, node0, node0);
      node1.isAssign();
      node1.getJSDocInfo();
      node1.isOnlyModifiesArgumentsCall();
      node0.setQuotedString();
      node0.getProp(31);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isGetElem();
      node2.isTry();
      node1.isNoSideEffectsCall();
      node2.isVoid();
      node2.isNew();
      node1.isLocalResultCall();
      Node node3 = node1.useSourceInfoFrom(node0);
      node0.getJsDocBuilderForNode();
      node0.isName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node3.setSideEffectFlags(node_SideEffectFlags3);
      int int0 = (-3012);
      // Undeclared exception!
      try { 
        Node.newNumber((double) node0.POST_FLAG, int0, node2.SIDE_EFFECTS_FLAGS_MASK);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2209
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newNumber((double) 51);
      Node node1 = new Node(51, node0, node0, node0, node0, (-1999), 605);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.setSourceFileForTesting("eD.KxLu^|9CMQF");
      node1.checkTreeEquals(node0);
      node1.mayMutateArguments();
      node1.isQuotedString();
      node1.siblings();
      Node node2 = node1.cloneNode();
      node2.replaceChild(node0, node0);
      node0.isGetterDef();
      node2.mayMutateArguments();
      node0.getSourceOffset();
      node2.hasMoreThanOneChild();
      int int0 = 3661;
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = new Node(38);
      node0.putBooleanProp(38, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.getQualifiedName();
      int int0 = 1680;
      String string0 = null;
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((double) 2322, 2322, 103);
      node0.isAssign();
      node0.isWhile();
      Node node1 = Node.newString("size must be non-negative", 0, 483);
      node1.mayMutateArguments();
      node1.putIntProp(49, 50);
      node1.checkTreeEqualsImpl(node0);
      node1.checkTreeEquals(node0);
      node1.isDefaultCase();
      node1.isThis();
      node1.isLabel();
      node1.isAdd();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      Node node0 = Node.newString((int) (byte)3, ";B");
      node0.isFunction();
      Node node1 = Node.newNumber(1.0, 1658, (-3143));
      node1.setLength(128);
      Node.extractLineno((-62));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node1.isFromExterns();
      node1.isDefaultCase();
      node0.isNull();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      int int0 = 53;
      Node node0 = Node.newString(53, "xsi?m3ot:*4NHu");
      node0.isTypeOf();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "xsi?m3ot:*4NHu");
      node0.addSuppression("xsi?m3ot:*4NHu");
      node0.isEquivalentTo((Node) null, false, false, false);
      node0.isRegExp();
      node0.isAnd();
      // Undeclared exception!
      try { 
        node0.isContinue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m`.W]tkUyGMqer!e");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(114, "com.google.javascript.rhino.Node$IntPropListItem");
      int int0 = Node.QUOTED_PROP;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      node0.isLabel();
      Node node1 = new Node(12);
      node0.toString();
      node1.isFromExterns();
      node0.isBlock();
      node0.isCall();
      Node node2 = new Node(39);
      node2.isAssignAdd();
      node1.isNE();
      node1.isVar();
      node1.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = new Node(102);
      byte[] byteArray0 = new byte[4];
      node0.getInputId();
      byteArray0[0] = (byte)108;
      Node node1 = Node.newNumber(217.954, (-181), 3654);
      node0.copyInformationFrom(node1);
      node0.isContinue();
      node1.isDelProp();
      node0.isBlock();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = new Node(102);
      byte[] byteArray0 = new byte[4];
      node0.getInputId();
      byteArray0[0] = (byte)108;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(42, node0, node0);
      node1.isQualifiedName();
      node0.isAdd();
      Node node2 = new Node(238, node0, (-2321), 37);
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(114, "com.google.javascript.rhino.Node$IntPropListItem");
      int int0 = Node.QUOTED_PROP;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      node0.isLabel();
      Node node1 = new Node(12);
      node0.toString();
      node1.isFromExterns();
      node0.isBlock();
      node0.isCall();
      Node node2 = new Node(39);
      node2.isAssignAdd();
      node1.isNE();
      node2.getDouble();
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newNumber(1266.710418978576, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(1872);
      Node node1 = Node.newString(32, "", 43, 1872);
      node1.getString();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(788);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node0.isAssign();
      node1.isWhile();
      node1.isTypeOf();
      node0.isWhile();
      node1.isScript();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = Node.newString(116, "");
      Node node1 = Node.newString(33, "");
      node1.isContinue();
      Node node2 = new Node(39, node1, node0, (-1103), 8);
      Node node3 = new Node(291, node2, 50, 32);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.setIsSyntheticBlock(false);
      node2.isDelProp();
      node1.getCharno();
      node2.hasOneChild();
      node1.isFalse();
      node3.getExistingIntProp(54);
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = Node.newString(47, "Iv&:*v& Jg!");
      Node node2 = node0.copyInformationFrom(node1);
      node0.isContinue();
      node1.isDelProp();
      node0.isIn();
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = new Node(102);
      byte[] byteArray0 = new byte[4];
      node0.getInputId();
      byteArray0[0] = (byte)108;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(56, node0, 2, 461845907);
      node1.isQualifiedName();
      node0.isAdd();
      node1.useSourceInfoIfMissingFrom(node0);
      node1.getStaticSourceFile();
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[5];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType0, jSTypeArray0);
      JSType jSType1 = jSTypeRegistry0.createDefaultObjectUnion(functionType0);
      jSTypeArray0[0] = jSType1;
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType2 = modificationVisitor1.caseNumberType();
      jSTypeArray0[1] = jSType2;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Not declared as a type name", (Node) null, jSType2);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      ObjectType objectType0 = enumType1.getImplicitPrototype();
      jSTypeArray0[2] = (JSType) objectType0;
      jSType1.isUnknownType();
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      HashMap<TemplateType, JSType> hashMap1 = new HashMap<TemplateType, JSType>(hashMap0);
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) enumType0, (Map<TemplateType, JSType>) hashMap1);
      TemplatizedType templatizedType1 = templatizedType0.toMaybeTemplatizedType();
      jSTypeArray0[3] = (JSType) templatizedType1;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte) (-128);
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte)81;
      byteArray0[6] = (byte)34;
      byteArray0[7] = (byte)100;
      byteArray0[8] = (byte)76;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      objectType0.matchesInt32Context();
      templatizedType1.matchesUint32Context();
      JSType jSType3 = jSTypeRegistry0.createNullableType(jSTypeArray0[2]);
      jSTypeArray0[4] = jSType3;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isFunction();
      Node node1 = node0.useSourceInfoFrom((Node) null);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.addChildAfter(node2, node0);
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node.extractLineno(70);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)3;
      Node node0 = Node.newString((int) (byte)3, ";B");
      node0.isFunction();
      node0.isNot();
      node0.isOr();
      node0.mayMutateArguments();
      node0.isSyntheticBlock();
      Node node1 = new Node(86, node0, (-2549), (-2965));
      node1.setChangeTime(100);
      node1.setIsSyntheticBlock(false);
      node1.isDelProp();
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      node1.setDouble((byte)3);
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("Object#Key", 132, 132);
      nodeArray0[0] = node0;
      Node node1 = new Node(61, nodeArray0, 52, 61);
      Node node2 = node0.cloneTree();
      node1.addChildBefore(node2, node0);
      node2.isObjectLit();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      int int0 = Node.FLAG_THIS_UNMODIFIED;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      Node node0 = Node.newString((int) (byte)3, ";B");
      node0.isFunction();
      Node node1 = Node.newNumber(1.0, 1658, (-3143));
      node1.setLength(128);
      Node.extractLineno((-62));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = new Node(52);
      node2.isGetterDef();
      node0.isFalse();
      node1.toString();
      node1.getSourceFileName();
      node1.addChildToFront(node2);
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImmutableList.of();
      Node node0 = Node.newString("Object#Element");
      node0.isCast();
      node0.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newNumber((double) 1);
      node0.isContinue();
      Node node2 = new Node(49);
      node0.isEquivalentToTyped(node2);
      node2.isThrow();
      node0.addChildAfter(node1, node2);
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(114, "com.google.javascript.rhino.Node$IntPropListItem");
      int int0 = Node.QUOTED_PROP;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      node0.isWith();
      Node node1 = new Node(47);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1555);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.areAllFlagsSet();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = new Node(102);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isContinue();
      node0.isFunction();
      node0.isNot();
      Node node1 = new Node(50, node0, (-4313), 8);
      Node node2 = new Node(37);
      node2.srcrefTree(node0);
      Node.newNumber(0.0);
      node2.isTry();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = Node.newString(116, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node0.hasOneChild();
      node0.isLabel();
      Node node1 = new Node(392, 49, 2179);
      node0.isBlock();
      node0.isContinue();
      Node[] nodeArray0 = new Node[6];
      Node node2 = Node.newNumber((double) 30, 38, 40);
      node1.addChildrenToFront(node2);
      nodeArray0[0] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      nodeArray0[4] = node1;
      Node node3 = new Node(31, node1);
      node1.isLabel();
      node3.isNE();
      node1.isSetterDef();
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newString(116, "", 116, 116);
      node0.isContinue();
      Node node1 = Node.newNumber((double) 43);
      node0.checkTreeEqualsImpl(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.clearAllFlags();
      Node node2 = new Node(2179, node0, node1);
      Node node3 = new Node(32, 40, 31);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node3);
      node2.isIn();
      node2.isDebugger();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mr\"UfZcU21=FW0?/");
      node1.isLocalResultCall();
      node3.isLabelName();
      node3.isArrayLit();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("Object#Key", 132, 132);
      nodeArray0[0] = node0;
      Node.extractLineno((-1));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(2);
      node0.isGetterDef();
      node0.isFalse();
      node0.toString();
      node1.getSourceFileName();
      node0.addChildToFront(node0);
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = Node.newString("/sr~v (");
      node0.getQualifiedName();
      node0.wasEmptyNode();
      node0.setVarArgs(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = node0.removeChildren();
      node0.getSourceFileName();
      node0.removeProp(13);
      node0.removeProp(128);
      node0.isVar();
      node0.isName();
      node0.isDelProp();
      node0.isTrue();
      node0.getIntProp(26);
      node0.setSourceEncodedPosition(3438);
      node0.isThis();
      node0.isReturn();
      Node node2 = Node.newString((String) null, 39, 49);
      node2.addChildAfter(node0, node0);
      node0.addChildrenToFront(node2);
      int int0 = 31;
      Node node3 = node1.getAncestor(int0);
      node3.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = new Node(2);
      node0.isDelProp();
      Node node1 = new Node(39, node0, node0, node0);
      node1.setSourceFileForTesting("W^*BGr&*-a");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = Node.newString(32, "H)tsN.AdWdJ6k}", 305, 1024);
      node2.replaceChild(node0, node1);
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newString("F[LArT@?");
      Node node1 = Node.newString("F[LArT@?");
      node1.getStaticSourceFile();
      node0.isDefaultCase();
      node1.isCase();
      node0.isBlock();
      node0.setString("");
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-1), (-1), 535);
      Node node1 = Node.newString("com.google.common.collect.Iterators$1");
      node1.addChildrenToFront(node0);
      Node node2 = node1.removeFirstChild();
      node1.toStringTree();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      node2.putProp(4, locale_Category0);
      Node.extractCharno((-804));
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newString(116, "");
      node0.isAssign();
      node0.isWhile();
      node0.isCase();
      node0.isString();
      node0.isDefaultCase();
      Node node1 = Node.newString("");
      node1.getIntProp(57);
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = new Node(2104, 33, 1244);
      Node node1 = Node.newString("JId&mwSIW^F^", 16, 16);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      nodeArray0[2] = node2;
      Node node3 = Node.newNumber(12.0, 147, 55);
      nodeArray0[3] = node3;
      nodeArray0[4] = node2;
      nodeArray0[5] = node2;
      Node node4 = new Node(2162, nodeArray0);
      node2.addChildBefore(node1, node4);
      node0.getSideEffectFlags();
      int int0 = 21;
      node0.getAncestor(int0);
      node0.cloneNode();
      node0.isDefaultCase();
      // Undeclared exception!
      try { 
        node0.isScript();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(52, 52, 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateArguments();
      Node node1 = node0.getLastSibling();
      node0.isVoid();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      VoidType voidType0 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      VoidType voidType1 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      Node node2 = Node.newString("Not declared as a constructor");
      node2.isQuotedString();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(38, nodeArray0);
      node2.isInc();
      Node node4 = new Node(126);
      node4.isGetterDef();
      node4.isFalse();
      node2.toString();
      node1.getSourceFileName();
      node0.addChildToFront(node3);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newString("fmY_Wu:_");
      node0.isOnlyModifiesArgumentsCall();
      node0.isReturn();
      node0.isOptionalArg();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, true, jSTypeArray0);
      modificationVisitor0.caseFunctionType(functionType0);
      jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.getQualifiedName();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(114, "com.google.javascript.rhino.Node$IntPropListItem");
      int int0 = Node.QUOTED_PROP;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      node0.isLabel();
      Node node1 = new Node(47);
      node0.toString();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-4346));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.areAllFlagsSet();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = Node.newString(47, "Iv&:*v& J!");
      Node node2 = new Node(43, node1, node1);
      node0.isContinue();
      Node node3 = Node.newString("this", (-668), 36);
      node2.mayMutateArguments();
      node2.putIntProp(48, (-457));
      node3.checkTreeEqualsImpl(node1);
      node2.checkTreeEquals(node3);
      node3.isDefaultCase();
      node1.getIntProp(44);
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(2322, 2322, 2322);
      node0.setIsSyntheticBlock(false);
      node0.isQualifiedName();
      node0.getChangeTime();
      node0.isWhile();
      node0.isString();
      node0.isSetterDef();
      node0.srcrefTree((Node) null);
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = Node.newNumber(1.2, (-1760), (-1760));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newNumber((-1.0), 2, 35);
      node0.setLength(1);
      int int0 = Node.REFLECTED_OBJECT;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = new Node((-1760), node0, node1);
      node2.srcrefTree(node0);
      node1.isGetterDef();
      node0.isFalse();
      node0.toString();
      node1.getSourceFileName();
      node1.addChildToFront(node2);
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImmutableList.of();
      Node node0 = Node.newString("Object#Element");
      node0.isCast();
      node0.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(30, node0, 46, 39);
      node1.getIntProp(49);
      Node node2 = new Node(37, node1, 29, 55);
      node2.isHook();
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node2.removeChildAfter(node1);
      node1.isWhile();
      // Undeclared exception!
      try { 
        node0.isTry();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newString(116, "");
      Node node1 = Node.newString(33, "");
      node1.isContinue();
      Node node2 = new Node(39, node1, node0, (-1103), 8);
      node2.removeProp(38);
      node2.replaceChild(node1, node1);
      Node node3 = node2.cloneTree();
      node3.isNE();
      node3.getSourceFileName();
      // Undeclared exception!
      try { 
        node0.addChildToFront(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(86);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = Node.newNumber((double) 38, 37, 29);
      node0.isAssign();
      node1.getChangeTime();
      Node node2 = new Node(12, node1, node1, node0, (-1171), 152);
      node2.isWhile();
      node1.isFunction();
      node0.isSyntheticBlock();
      node0.isUnscopedQualifiedName();
      Node node3 = new Node(42, node1, node0, node2, node0, 16384, 42);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      node1.isArrayLit();
      int int0 = 117;
      Node[] nodeArray0 = new Node[0];
      int int1 = 1610612736;
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = new Node(124);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setWasEmptyNode(true);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.useSourceInfoIfMissingFrom(node1);
      Node node2 = Node.newString(47, "Iv&:*v& J!");
      Node node3 = new Node(43, node2, node2);
      node0.isContinue();
      Node node4 = Node.newString("this", (-668), 36);
      node3.mayMutateArguments();
      node3.putIntProp(48, (-457));
      node4.checkTreeEqualsImpl(node2);
      node3.checkTreeEquals(node4);
      node4.isDefaultCase();
      node2.getIntProp(44);
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      int int0 = Node.QUOTED_PROP;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      node0.isCase();
      node0.isString();
      node0.isDefaultCase();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node1.addChildrenToFront(node0);
      node1.isEquivalentToTyped(node0);
      node0.getIntProp(48);
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newNumber(1.2, (-1760), 44);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isBlock();
      node0.isCall();
      Node node1 = new Node(50);
      Node node2 = new Node(13);
      node2.isAssignAdd();
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newString(116, "");
      Node node1 = Node.newString(33, "");
      Node node2 = Node.newString(12, "", 37, 33);
      node1.toString();
      node0.isFromExterns();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node1.setLength((-2419));
      node1.isBlock();
      node2.isCall();
      node2.setDouble(31);
      node0.isLabelName();
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = new Node(132, 132, 132);
      node0.getBooleanProp(132);
      node0.isSyntheticBlock();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(120, nodeArray0);
      node1.clonePropsFrom(node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getSourceFileName();
      node0.addChildrenToFront(node1);
      node0.isDebugger();
      node0.putIntProp(163, (-3962));
      node1.setLineno(20);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node0.clonePropsFrom((Node) null);
      node0.getLastSibling();
      double double0 = (-2233.324696926182);
      int int0 = (-1300);
      Node.newNumber(double0, node1.SIDE_EFFECT_FLAGS, int0);
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = Node.newString(47, "Iv&:*v& Jg!");
      node0.getLineno();
      Node node2 = Node.newNumber(268.91093739341, (-248), 49);
      Node.newString(31, "DrOrYRU6gj*&dh<` 9z", 16, 274);
      node2.isObjectLit();
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9JPaEjue!64>)");
      Node node0 = Node.newNumber(0.0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(32, 52, 42);
      Node node2 = Node.newString("mr\"UfZcU21=FW0?/", 4095, 2);
      node1.mayMutateArguments();
      node1.putIntProp(37, 86);
      node1.checkTreeEqualsImpl(node2);
      node1.checkTreeEquals(node0);
      node0.isDefaultCase();
      node1.getIntProp(1467);
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newNumber(1.2, (-1760), (-1760));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = new Node(1, node0, node0, 50, 1);
      node0.setLength(1);
      Node.extractLineno(16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = new Node((-4125));
      node1.isGetterDef();
      node0.isFalse();
      node0.toString();
      node1.getSourceFileName();
      node1.addChildToFront(node2);
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      node0.getBooleanProp(115);
      node0.isSyntheticBlock();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(120, nodeArray0);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isQuotedString();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getSourceFileName();
      node0.addSuppression("M\"/WGV");
      node0.addChildrenToFront(node1);
      node0.isDebugger();
      node0.putIntProp(163, (-3962));
      node1.setLineno(20);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.declareThrows((JSTypeExpression) null);
      jSDocInfo0.getAssociatedNode();
      node0.getLastSibling();
      Node.newNumber((-2233.324696926182), 42, (-1300));
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newNumber((double) 382, 382, 382);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getDirectives();
      node0.setSourceEncodedPositionForTree(1872);
      Node node1 = Node.newString(32, "_[^GVS_7", 43, 1872);
      node1.getType();
      Node node2 = new Node(38, node0, node1);
      node2.removeFirstChild();
      node2.putProp(46, node0);
      node2.isFromExterns();
      node1.isGetProp();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(129, "WhEu^~ZOSI}lY7OZ$nY");
      node0.getInputId();
      node0.isSwitch();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.getLineno();
      node0.isNoSideEffectsCall();
      Node node1 = node0.cloneNode();
      node0.isAssignAdd();
      node0.isNE();
      node0.isEmpty();
      node1.isGetProp();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = Node.newString("adIJK0_aP N1NETza@", (-1370), 47);
      Node node2 = new Node(51, node0, node1, 112, 93);
      node2.getBooleanProp(2198);
      node2.getLineno();
      Node.newString("J$}B~@M#I=>+h~bh\"B");
      node0.cloneTree();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString("Object#Element", 1073741823, 55);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(47, nodeArray0, 2498, 2965);
      Node node2 = node1.cloneTree();
      node1.addChildBefore(node0, node2);
      node2.isDefaultCase();
      node0.isNull();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WhEu^~ZOSI}lY7OZ$nY");
      Node node0 = Node.newString((-326), "\"}h<%)(k'1fL");
      node0.isCase();
      node0.getLength();
      Node node1 = new Node(39, node0, node0);
      node0.getSourceOffset();
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node1.cloneNode();
      Node node3 = new Node(85, node0, 44, (-1080));
      int int0 = (-759);
      int int1 = (-3070);
      Node node4 = Node.newNumber((double) node0.DIRECTIVES, int0, int1);
      node4.isOptionalArg();
      node4.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = Node.newString(116, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = new Node(40, 52, (-175));
      Node node2 = Node.newString("", 2, 1);
      node1.mayMutateArguments();
      node1.putIntProp(43, 2);
      node2.checkTreeEqualsImpl(node0);
      node2.checkTreeEquals(node1);
      node1.isDefaultCase();
      node2.getIntProp(112);
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(98, "WhEu^~ZOSI}lY7OZ$nY");
      InputId inputId0 = new InputId("WhEu^~ZOSI}lY7OZ$nY");
      node0.isSwitch();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getLineno();
      node1.isAssignAdd();
      Node node2 = node0.cloneNode();
      node2.isExprResult();
      Node node3 = new Node(566, node1, node0, node1, node2, 183, 4095);
      node3.isVar();
      node3.isStringKey();
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = Node.newString("mr\"UfZcU21=FW0?/");
      Node node1 = Node.newString("mr\"UfZcU21=FW0?/");
      node0.isSetterDef();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = Node.newString("eW%#id}0t%cbxM`_(", 116, 56);
      node1.putIntProp(42, 2);
      node2.checkTreeEqualsImpl(node1);
      node1.checkTreeEquals(node2);
      node2.isDefaultCase();
      node0.getIntProp(50);
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = new Node((-957));
      node0.cloneNode();
      Node node1 = Node.newString((-3933), "7j]F~5o");
      Node node2 = new Node(11, node0, node1);
      node1.isContinue();
      Node.newString("Iv&:*v& J!", 49, (-4096));
      node0.mayMutateArguments();
      node1.putIntProp(40, 2561);
      node0.checkTreeEqualsImpl(node1);
      Node node3 = Node.newString(53, "Iv&:*v& J!", 2561, 51);
      node3.checkTreeEquals(node2);
      node2.isDefaultCase();
      node1.getIntProp(node0.FLAG_NO_THROWS);
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(32, 52, 42);
      node0.isFunction();
      node0.isNot();
      node1.isUnscopedQualifiedName();
      Node node2 = Node.newNumber((double) 4095, 2, 30);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node2.getDouble();
      Node node3 = Node.newNumber((double) 1);
      Node node4 = new Node(4096, node2, node3, 31, 12);
      node1.clonePropsFrom(node4);
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = Node.newString("", 153, (-656));
      node0.getStaticSourceFile();
      Node node1 = new Node((-656), node0, node0, node0, node0);
      Node node2 = node1.cloneTree();
      node2.isCase();
      node0.getLastSibling();
      node1.getStaticSourceFile();
      node0.isAdd();
      node2.useSourceInfoIfMissingFrom(node0);
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newString(116, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = new Node(40, 52, (-175));
      Node node2 = Node.newString("", 2, 1);
      node1.mayMutateArguments();
      node1.putIntProp(43, 2);
      node2.checkTreeEqualsImpl(node0);
      node2.checkTreeEquals(node1);
      node1.isDefaultCase();
      node0.isGetProp();
      node0.isFor();
      node1.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(114, "com.google.javascript.rhino.Node$IntPropListItem");
      int int0 = Node.QUOTED_PROP;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      node0.isCase();
      node0.isString();
      node0.isDefaultCase();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$IntPropListItem");
      node1.addChildrenToFront(node0);
      node1.isEquivalentToTyped(node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.getSourceOffset();
      node0.getIntProp(48);
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(52, 52, 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateArguments();
      Node node1 = node0.getLastSibling();
      node0.isVoid();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      VoidType voidType0 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      VoidType voidType1 = mock(VoidType.class, new ViolatedAssumptionAnswer());
      node0.isOr();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = Node.newString("\n");
      node0.useSourceInfoIfMissingFromForTree(node1);
      node2.getLength();
      node0.getLength();
      node0.isContinue();
      node2.isCall();
      Node node3 = Node.newNumber((-2233.9723330897), 32, 53);
      Node node4 = new Node((-1792), node3, node1, node1, 1024, (-212));
      node4.isLabelName();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newNumber((-564.590238263), (-1953), (-1953));
      node0.removeProp((-1953));
      boolean boolean0 = false;
      node0.wasEmptyNode();
      node0.isSyntheticBlock();
      node0.toString(false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = null;
      node0.addChildBefore((Node) null, (Node) null);
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean1 = false;
      boolean boolean2 = true;
      // Undeclared exception!
      try { 
        FileSystemHandling.setPermissions(evoSuiteFile0, boolean1, boolean0, boolean2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
