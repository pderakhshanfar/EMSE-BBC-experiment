/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 31 22:34:56 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.UnionType;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(27591);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node0 = Node.newNumber(2702.723093751, 3934, 27591);
      node0.removeProp(3934);
      node0.replaceChildAfter((Node) null, (Node) null);
      boolean boolean0 = true;
      node0.setOptionalArg(boolean0);
      node0.siblings();
      // Undeclared exception!
      try { 
        node0.isFromExterns();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node((-1365), (-1365), 0);
      Node node1 = new Node((-1365), node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node1.setSideEffectFlags(node_SideEffectFlags3);
      node1.getAncestor(node0.EMPTY_BLOCK);
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1365
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int int0 = 31;
      int int1 = 0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      Node node0 = Node.newString("K5haJv_FL(i6B");
      Node node1 = new Node(36, node0);
      ObjectType.cast((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("K5haJv_FL(i6B", node1, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      JSType jSType0 = enumElementType0.getTypeOfThis();
      jSTypeArray0[0] = jSType0;
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("z'KQ", 48, (-2864));
      Node node2 = node1.copyInformationFrom(node0);
      node1.siblings();
      node1.isContinue();
      node1.isGetProp();
      Node.newNumber(84.677148498793);
      node2.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int int0 = 1190;
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(1190, node0, node0, 57, 4095);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(52, nodeArray0, 51, (-238));
      Node node3 = new Node(int0, node1, node1, node0, node2);
      String string0 = "-F#pu:";
      // Undeclared exception!
      try { 
        Node.newString(string0, node3.SYNTHETIC_BLOCK_PROP, node1.INCRDECR_PROP);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7598);
      Node node1 = new Node(812, node0, node0, node0, node0, 3473, 3473);
      node1.setSideEffectFlags(4095);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = new Node(1479, nodeArray0);
      node0.useSourceInfoFromForTree(node1);
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.setMutatesThis();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[3];
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      nodeArray0[0] = null;
      Node node0 = new Node((-536870912), nodeArray0, 56, 149);
      nodeArray0[1] = node0;
      String string0 = "%#]}Y/U:Z|T";
      // Undeclared exception!
      try { 
        nodeArray0[2].addSuppression(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int int0 = 55;
      Node node0 = Node.newString(55, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      node0.getIntProp(55);
      Node node1 = Node.newString("bLcqLpmb'TX'H.");
      node0.removeChild(node1);
      node0.getDirectives();
      int int1 = (-1270);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(0, 1885, 0);
      node0.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      String string0 = "Q-5";
      int int0 = 0;
      Node[] nodeArray0 = new Node[5];
      Node node0 = Node.newString("", 1024, 30);
      nodeArray0[0] = node0;
      Node node1 = Node.newString("Object#Element");
      nodeArray0[1] = node1;
      Node node2 = new Node(0, node1);
      nodeArray0[2] = node2;
      Node node3 = Node.newString("Use SerializedForm");
      nodeArray0[3] = node3;
      Node node4 = Node.newString("Q-5");
      nodeArray0[4] = node4;
      Node node5 = new Node(30, nodeArray0);
      int int1 = 2076;
      int int2 = 305;
      Node node6 = new Node(int0, node5, nodeArray0[3], int1, int2);
      JSType jSType0 = null;
      ObjectType.cast(jSType0);
      // Undeclared exception!
      try { 
        ImmutableList.of();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node.newString((String) null);
      int int0 = 0;
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-717), nodeArray0, (-717), 3404);
      node0.isLabelName();
      Node node1 = new Node(32, node0, 3404, 3404);
      Node node2 = node0.removeChildAfter(node1);
      node2.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node1.isBreak();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      boolean boolean0 = false;
      Node node1 = node0.cloneTree();
      node1.addChildAfter((Node) null, (Node) null);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      String string0 = "";
      Node node0 = Node.newNumber((double) 1841);
      Node node1 = new Node(0, node0, node0, 42, 8);
      Node node2 = new Node(1841, node0, node1, node0);
      ObjectType objectType0 = null;
      String string1 = "(5u-e:>gIIaX_Cli1";
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface(objectType0, string1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node node0 = Node.newString(20, "");
      Node node1 = Node.newString("", 31, 20);
      node0.checkTreeEquals(node1);
      node1.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(52);
      node0.setString("_?'U?]e'``hrj1yBT ");
      node_SideEffectFlags2.clearAllFlags();
      node0.toStringTree();
      node0.setSourceEncodedPositionForTree(1464);
      node1.getJSType();
      node0.isOr();
      node1.isGetElem();
      node0.setChangeTime((-554));
      Node.extractLineno(1);
      node1.isObjectLit();
      node_SideEffectFlags3.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = Node.newString(0, "{yO&7b5/t\"3z}2u", 446, 446);
      Node node1 = Node.newNumber((double) 1);
      boolean boolean0 = false;
      node0.useSourceInfoFrom(node1);
      node1.getExistingIntProp(0);
      node1.setWasEmptyNode(boolean0);
      node0.addChildrenToFront(node1);
      Node node2 = node0.removeChildAfter(node1);
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 0
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = new Node(47, 47, 47);
      node0.setSourceEncodedPositionForTree(116);
      node0.getDirectives();
      node0.setCharno(47);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[4];
      JSType jSType0 = null;
      JSType.toMaybeFunctionType((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("QxwEe^EHiF;", node0, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      ObjectType objectType0 = ObjectType.cast(enumType1);
      jSTypeArray0[0] = (JSType) objectType0;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionType(jSType0, jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node node0 = Node.newString("", 133, 133);
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int int0 = (-862048943);
      Node node0 = Node.newString((-862048943), "");
      node0.getProp((-862048943));
      node0.toString();
      // Undeclared exception!
      try { 
        node0.children();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -862048943
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-244), node0);
      node0.isCall();
      node2.getProp(51);
      node1.getJSDocInfo();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node0.getString();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.clearSideEffectFlags();
      node2.setSideEffectFlags(node_SideEffectFlags3);
      node2.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = "q&eV9>`n0\"'";
      Node node0 = Node.newString("q&eV9>`n0\"'", 11, 551);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      node0.getString();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.setSideEffectFlags(node_SideEffectFlags4);
      node0.setString(string0);
      int int0 = 8;
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = new Node((-2051), (-2051), (-2051));
      Node node1 = new Node((-2051), node0, node0);
      node1.getAncestor(48);
      node1.copyInformationFromForTree(node0);
      node1.checkTreeEqualsImpl(node0);
      node1.setQuotedString();
      node0.isFromExterns();
      // Undeclared exception!
      try { 
        node1.isBreak();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      simpleErrorReporter0.warning("V|7J", "Vq6!H[QU", 159, 2);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSTypeRegistry0.declareType("", templateType0);
      node0.isContinue();
      node1.getJSType();
      node0.getLength();
      node1.isRegExp();
      node1.isOptionalArg();
      node0.isEquivalentToTyped(node1);
      node1.isQualifiedName();
      Node node2 = node1.getLastSibling();
      node0.isFalse();
      node1.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      node2.setSideEffectFlags(node_SideEffectFlags1);
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = Node.newString((-701), "com.google.common.collect.UnmodifiableListIterator", 86, 26);
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(52, 4095, 0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.detachChildren();
      node0.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      String string0 = "";
      node1.replaceChildAfter(node0, node0);
      File file0 = MockFile.createTempFile(string0, string0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0, string0);
      String string1 = "";
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newString(16, "", (-1037), (-1037));
      Node node1 = new Node(56, node0, node0, node0);
      boolean boolean0 = node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.setLineno((-1037));
      node0.getQualifiedName();
      node1.setWasEmptyNode(false);
      node0.mayMutateGlobalStateOrThrow();
      Node node3 = new Node(39, node2, node2, node0, node1, 0, 0);
      node3.setVarArgs(boolean0);
      node2.addChildrenToBack(node3);
      node2.isWhile();
      node0.isAssignAdd();
      node2.isArrayLit();
      // Undeclared exception!
      try { 
        node0.isCatch();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = null;
      Node node1 = Node.newNumber((double) 36, 2360, 2360);
      Node node2 = new Node(36, (Node) null, (Node) null, node1, (Node) null, (-1927), 66);
      node2.isFromExterns();
      node2.useSourceInfoIfMissingFrom(node0);
      String string0 = "";
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-708));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node2.isOnlyModifiesThisCall();
      Node.newString("iB%iPgx=", 38, 38);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newString("input_id", 0, 0);
      node0.siblings();
      Node node1 = node0.cloneTree();
      Node.newString("input_id");
      Node node2 = Node.newNumber(0.0);
      node0.getSourceFileName();
      node1.removeChild(node0);
      int int0 = 1340;
      int int1 = 4096;
      // Undeclared exception!
      try { 
        Node.newNumber((double) node2.NO_SIDE_EFFECTS, int0, int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 3033, 3033);
      node0.getSourceOffset();
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[7];
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      FunctionType functionType0 = null;
      JSType jSType0 = templateTypeMapReplacer0.caseFunctionType((FunctionType) null);
      jSTypeArray0[0] = jSType0;
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        templateTypeMapReplacer0.caseUnionType(unionType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 3033, 3033);
      node0.getSourceOffset();
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newNumber(640.92488026);
      Node node2 = new Node(4095, node1, node0, 1, (-1381));
      Node[] nodeArray0 = new Node[6];
      nodeArray0[4] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      nodeArray0[5] = node0;
      Node node3 = new Node(3756, nodeArray0, (-1642), 57);
      int int0 = 26;
      Node node4 = new Node(int0, nodeArray0[2], node0, nodeArray0[0], node1);
      String string0 = "X{*_Y^(D5*qtP-B";
      Node node5 = Node.newString(string0);
      nodeArray0[3].removeChild(node5);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(124);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(124, "r");
      node0.setIsSyntheticBlock(false);
      node0.getQualifiedName();
      node0.isFor();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags5.setThrows();
      Node.newString("", 40, 53);
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = Node.newNumber((-3316.5515));
      int int0 = 31;
      String string0 = "missing prop: ";
      Node node1 = Node.newString(31, "missing prop: ");
      node1.isSyntheticBlock();
      node0.addChildBefore(node1, node1);
      // Undeclared exception!
      try { 
        node1.getSourcePosition();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 256, 256);
      node0.setVarArgs(true);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, node0, node0);
      String string0 = "";
      node0.type = 51;
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.addChildrenToBack(node1);
      node1.getLength();
      node1.detachChildren();
      node0.addChildrenAfter(node1, node1);
      Node node2 = node1.getNext();
      // Undeclared exception!
      try { 
        node2.addChildrenToBack(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = (-2033);
      Node node0 = new Node((-2033), (Node[]) null);
      Node node1 = null;
      try {
        node1 = new Node(int0, node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[4];
      Node node0 = new Node(0, (-1954), (-2379));
      Node node1 = new Node(0, node0, node0, (-2841), 103);
      nodeArray0[0] = node1;
      Node node2 = Node.newString("}");
      Node node3 = new Node(38, node2, node0, 43, 1554);
      nodeArray0[1] = node3;
      int int1 = 0;
      int int2 = 0;
      Node node4 = new Node(int1, int2, node1.FLAG_ARGUMENTS_UNMODIFIED);
      nodeArray0[2] = node4;
      int int3 = 152;
      Node node5 = Node.newNumber((double) node0.FLAG_THIS_UNMODIFIED, int3, node4.INFERRED_FUNCTION);
      nodeArray0[3] = node5;
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(0, node0, node0);
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      node0.isFor();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      int int0 = 1190;
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(1190, node0, node0, 57, 4095);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(16, node1, 40, 43);
      node0.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = new Node(4095, node0, node1, node1, node2);
      nodeArray0[0].addChildBefore(node3, node0);
      Node node4 = new Node(int0, node1, node1, node0, node2);
      String string0 = "-F#pu:";
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newString((-4), "", (-1037), (-1037));
      Node node1 = new Node(56, node0, node0, node0);
      boolean boolean0 = node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.setLineno((-1037));
      node0.getQualifiedName();
      node1.setWasEmptyNode(true);
      node0.mayMutateGlobalStateOrThrow();
      node1.getBooleanProp(133);
      node0.getBooleanProp(2);
      Node node3 = new Node(39, node2, node2, node0, node1, 0, 0);
      node3.setVarArgs(boolean0);
      node2.addChildrenToBack(node3);
      node2.isWhile();
      node0.isAssignAdd();
      node2.isArrayLit();
      node0.isCatch();
      node0.isStringKey();
      // Undeclared exception!
      try { 
        node2.isNull();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("z'KQ", 48, (-2864));
      Node node2 = node1.copyInformationFrom(node0);
      node1.isEquivalentTo(node2);
      node1.siblings();
      node1.isContinue();
      node1.isGetProp();
      Node node3 = Node.newNumber(84.677148498793);
      node3.addChildrenToBack(node1);
      node2.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(0, node0, node0);
      node1.checkTreeEqualsImpl(node0);
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      Node.newNumber((-272.5806), 104, 8232);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("z'KQ", 48, (-2864));
      Node node2 = node1.copyInformationFrom(node0);
      node1.siblings();
      node2.isOr();
      node1.isGetProp();
      node2.getAncestor((-249));
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 1214;
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(1214, node0, node0, 57, 4095);
      Node[] nodeArray0 = new Node[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      nodeArray0[0] = node0;
      node0.removeFirstChild();
      node0.isReturn();
      Node node2 = new Node(52, nodeArray0, 48, (-238));
      Node node3 = new Node(int0, node1, node1, node0, node2);
      String string0 = "-F#pu:";
      Node node4 = Node.newString(string0, node3.SYNTHETIC_BLOCK_PROP, node1.INCRDECR_PROP);
      // Undeclared exception!
      try { 
        node3.removeChild(node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-708));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node0.mayMutateArguments();
      Node.newString("^-(F4G0V_F+", (-3196), 13);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(1190, node0, node0, 57, 4095);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      node1.isLocalResultCall();
      node0.getString();
      Node node2 = new Node(node0.IS_DISPATCHER, node1.FREE_CALL, node0.FREE_CALL);
      nodeArray0[0].getProp(node2.FLAG_LOCAL_RESULTS);
      Node node3 = node0.getChildBefore(nodeArray0[0]);
      // Undeclared exception!
      try { 
        node3.isIf();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = Node.newString("input_id", 0, 0);
      node0.setSourceEncodedPosition(0);
      node0.siblings();
      node0.cloneTree();
      Node node1 = Node.newString("input_id");
      Node.newNumber(0.0);
      Node.newString("input_id", 30, 21);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType.toMaybeTemplateType((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("input_id", node1, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      JSDocInfo jSDocInfo0 = enumElementType0.getOwnPropertyJSDocInfo(enumType0.EMPTY_TYPE_COMPONENT);
      Node node2 = jSDocInfo0.getAssociatedNode();
      node2.isNumber();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      int int0 = 8232;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node0 = jSDocInfo0.getAssociatedNode();
      Node node1 = Node.newString("", 119, 53);
      Node node2 = new Node(36, node1, node1, 1, 21);
      Node node3 = new Node(16, (Node) null, node2, node2);
      int int1 = (-1122);
      Node node4 = new Node(int0, node3, node0, node3, int1, node0.NO_SIDE_EFFECTS);
      node4.getSourceFileName();
      node3.removeChild(node1);
      double double0 = (-4360.985503566313);
      // Undeclared exception!
      try { 
        Node.newNumber(double0, node2.EMPTY_BLOCK, node3.SIDE_EFFECT_FLAGS);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      node0.getLength();
      node0.detachChildren();
      node0.addChildrenAfter(node0, node0);
      // Undeclared exception!
      try { 
        node0.getNext();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, node0, node0);
      String string0 = "";
      node0.type = 51;
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      node1.isQualifiedName();
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.addChildrenToBack(node1);
      node1.getLength();
      node1.detachChildren();
      node0.addChildrenAfter(node1, node1);
      Node node2 = node1.getNext();
      node2.addChildrenToBack(node1);
      node2.isQualifiedName();
      node0.isCall();
      // Undeclared exception!
      try { 
        node0.removeChild(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.newString("", (-341), 461845907);
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      int int0 = 54;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node_SideEffectFlags0.setAllFlags();
      int int1 = 3958;
      Node node0 = Node.newString(54, "*QwR!igX", (-2558), 2147483645);
      Node node1 = new Node(3958, node0, node0, node0, 42, 2);
      Node node2 = new Node(3958, node1, node0);
      int int2 = 124;
      int int3 = 55;
      Node node3 = null;
      try {
        node3 = new Node(int1, node2, node1, int2, int3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newNumber(1472.443994);
      InputId inputId0 = new InputId("QMARK");
      node0.setInputId(inputId0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-708));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node0.mayMutateArguments();
      node2.isOr();
      node2.isGetProp();
      node1.getAncestor(39);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = Node.newString(20, "");
      Node node1 = Node.newString("", 31, 20);
      node0.checkTreeEquals(node1);
      node1.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(52);
      node0.setString("_?'U?]e'``hrj1yBT ");
      node1.getDouble();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isFor();
      node0.detachFromParent();
      String string0 = "";
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  31 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString("second new child has existing sibling", 3045, (-1518));
      Node node2 = new Node((-1544), node0, node1, node1, node0, 111, 4);
      Node node3 = new Node(16, node0, node2, 6230, (-1482));
      node1.isLocalResultCall();
      String string0 = node1.getString();
      Node node4 = new Node(node0.DIRECTIVES, node0.FLAG_THIS_UNMODIFIED, node0.IS_CONSTANT_NAME);
      node2.getProp(node0.FLAG_NO_THROWS);
      node1.getChildBefore(node2);
      int int0 = (-554);
      int int1 = 46;
      // Undeclared exception!
      try { 
        Node.newString(int0, string0, int1, node3.FLAG_GLOBAL_STATE_UNMODIFIED);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-708));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isArrayLit();
      node2.isDefaultCase();
      node0.isLabel();
      node1.isDelProp();
      node0.siblings();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isDo();
      node0.isSetterDef();
      node_SideEffectFlags2.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = Node.newString(887, "");
      Node node3 = Node.newString("", 8, 2);
      node1.checkTreeEquals(node0);
      node3.isSyntheticBlock();
      node1.setSourceEncodedPositionForTree(node2.FLAG_GLOBAL_STATE_UNMODIFIED);
      String string0 = "_?'U?]e'``hrj1yBT ";
      // Undeclared exception!
      try { 
        node3.setString(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-708));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node0.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node2.isGetElem();
      Node.newString("#2`\\w+b");
      node0.isInc();
      node0.getAncestor(46);
      node0.addChildToFront(node1);
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.getBooleanProp(39);
      node0.getQualifiedName();
      node0.getSideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) null);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = node2.srcrefTree(node0);
      node0.isTypeOf();
      int int0 = 353;
      // Undeclared exception!
      try { 
        node3.setCharno(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 3037, 3037);
      node0.getSourceOffset();
      Node node1 = Node.newNumber((double) 42);
      Node node2 = new Node(32768, node1, node0);
      node2.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node3 = Node.newNumber((-3505.6));
      Node node4 = new Node((-565), node1, node0, (-83), (-3112));
      Node[] nodeArray0 = new Node[0];
      int int0 = 262144;
      node3.getLength();
      int int1 = 33;
      Node node5 = new Node(node0.FREE_CALL, nodeArray0, int0, int1);
      Node node6 = null;
      Node node7 = null;
      try {
        node7 = new Node(node2.INFERRED_FUNCTION, node3, node0, node6, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = new Node(1, node0, node0, node0, node0, 38, 30);
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      node1.isBreak();
      node0.getAncestor(4095);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      int int0 = 16;
      Node node0 = Node.newString(16, "", (-1037), (-1037));
      Node node1 = new Node(56, node0, node0, node0);
      boolean boolean0 = node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.setLineno((-1037));
      node0.getQualifiedName();
      Node node3 = node1.useSourceInfoFrom(node2);
      node1.getExistingIntProp(304);
      node2.setWasEmptyNode(boolean0);
      node1.addChildrenToFront(node3);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 304
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-708));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isEquivalentTo(node2);
      node0.siblings();
      node0.isContinue();
      node1.isGetProp();
      Node node3 = Node.newNumber(0.0);
      node1.addChildrenToBack(node2);
      Node node4 = null;
      node3.useSourceInfoIfMissingFromForTree(node4);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7598);
      node0.setSideEffectFlags(18903039);
      node0.setSideEffectFlags(node0.COLUMN_MASK);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(119);
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node0.mayMutateArguments();
      node2.isOr();
      node0.isGetProp();
      node0.getAncestor(54);
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.setMutatesGlobalState();
      String string0 = "";
      Node node0 = Node.newString(20, "");
      String string1 = "";
      Node node1 = Node.newString("", 31, 20);
      node0.checkTreeEquals(node1);
      node1.isSyntheticBlock();
      node_SideEffectFlags2.clearAllFlags();
      node0.toStringTree();
      node0.setSourceEncodedPositionForTree(46);
      node0.getJSType();
      node0.isOr();
      node0.isGetElem();
      Node node2 = Node.newString("URSH \n");
      node0.isInc();
      node0.getAncestor(55);
      node2.addChildToFront((Node) null);
      // Undeclared exception!
      try { 
        node0.isFalse();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      node0.isEquivalentTo(node0);
      node0.siblings();
      node0.isContinue();
      Node node2 = node1.copyInformationFrom(node1);
      node2.isEquivalentTo(node0);
      node2.siblings();
      node1.isContinue();
      node0.isGetProp();
      Node node3 = Node.newNumber((double) 29);
      node3.addChildrenToBack(node2);
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = Node.newString(20, "Iv:tTJ5DL#0Y", 20, 20);
      node_SideEffectFlags4.setThrows();
      node0.setIsSyntheticBlock(true);
      node0.getQualifiedName();
      node0.isFor();
      node0.isInstanceOf();
      node0.putProp(305, node_SideEffectFlags4);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = new Node(159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      simpleErrorReporter0.warning("V|7J", "Vq6!H[QU", 159, 2);
      node0.getJSDocInfo();
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      simpleErrorReporter0.warning("Not declared as a constructor", "Not declared as a constructor", 27, 32);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSTypeRegistry0.declareType("", templateType0);
      node0.isContinue();
      node1.getJSType();
      node0.getLength();
      node1.isRegExp();
      node1.isOptionalArg();
      node0.isEquivalentToTyped(node1);
      node1.isQualifiedName();
      Node node2 = node1.getLastSibling();
      node0.isFalse();
      node1.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.areAllFlagsSet();
      node0.getBooleanProp(1);
      node2.setSideEffectFlags(38);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      String string0 = "q&eV9>`n0\"'";
      Node node0 = Node.newString("q&eV9>`n0\"'", 11, 551);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node0.getJSDocInfo();
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      node0.getString();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.setSideEffectFlags(node_SideEffectFlags4);
      node0.setString(string0);
      int int0 = 8;
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString("z'KQ", (-2864), 54);
      Node node1 = new Node(30, node0, node0, 36, 102);
      Node node2 = node0.copyInformationFrom(node1);
      node1.isEquivalentTo(node2);
      Node node3 = new Node(4, 1, 48);
      node3.siblings();
      node1.isContinue();
      node0.isGetProp();
      Node node4 = Node.newNumber(2171.208739);
      node4.addChildrenToBack(node3);
      node1.useSourceInfoIfMissingFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      Node.newString(".<", 36, 43);
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isLocalResultCall();
      Node node1 = new Node((-3213), node0, node0, node0, node0);
      node1.getString();
      node0.getProp(node1.DIRECT_EVAL);
      node1.getChildBefore(node0);
      // Undeclared exception!
      try { 
        node0.isIf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3213
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesThis();
      Node node0 = null;
      Node node1 = new Node(2717, (Node) null, (Node) null);
      int int0 = (-2365);
      String string0 = "y;jbQ2'e";
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 83, 0);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newString(42, "");
      Node node2 = Node.newString("", 57, 0);
      Node node3 = new Node(96, node0, node2, node0);
      node0.checkTreeEquals(node3);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(40);
      node1.setString("Node tree inequality:\nTree1:\nNUMBER 0.0 83\n\n\nTree2:\nASSIGN_DIV\n    NUMBER 0.0 83\n\n\nSubtree1: NUMBER 0.0 83\n\n\nSubtree2: ASSIGN_DIV\n    NUMBER 0.0 83\n");
      node_SideEffectFlags3.clearAllFlags();
      node2.toStringTree();
      node0.setSourceEncodedPositionForTree(38);
      node0.getJSType();
      node3.isOr();
      node2.isGetElem();
      Node.newString("");
      node0.isInc();
      node3.getAncestor(952);
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      Node node2 = node0.clonePropsFrom(node1);
      node1.isIf();
      Node node3 = new Node(4095, node1, node0, node2, node1);
      node3.isCase();
      node1.isReturn();
      node0.isFunction();
      node1.getDouble();
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7598);
      Node node1 = new Node(40, node0, node0, node0, node0);
      node0.checkTreeEquals(node1);
      node1.isSyntheticBlock();
      node1.setSourceEncodedPositionForTree(57);
      node1.setString("Node tree inequality:\nTree1:\nNUMBER 812.0 3473\n\n\nTree2:\nSTRING\n    NUMBER 812.0 3473\n\n\nSubtree1: NUMBER 812.0 3473\n\n\nSubtree2: STRING\n    NUMBER 812.0 3473\n");
      int int0 = 122;
      int int1 = 54;
      Node[] nodeArray0 = new Node[9];
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      Node node0 = Node.newString("");
      node0.hasChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.Node$SideEffectFlags");
      Node node0 = Node.newString(11, "com.google.javascript.rhino.Node$SideEffectFlags");
      node0.cloneTree();
      Node node1 = new Node(11, node0);
      node1.isCall();
      Node node2 = node1.clonePropsFrom(node0);
      node2.getProp((-1619));
      node0.hasOneChild();
      node1.getIntProp(4095);
      node1.isDo();
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(0.0);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getInputId();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = Node.newString(125, "change_time", 2147483645, (-2475));
      node0.isDefaultCase();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = new Node((-2289), 11, 11);
      Node node1 = new Node((-2289), node0, node0);
      node1.getSourcePosition();
      node1.isDo();
      node1.getType();
      node1.checkTreeEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(179);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags5.valueOf();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      Node node0 = Node.newNumber(0.0, 42, 125);
      Node node1 = new Node(125, (Node) null, node0, node0, 50, 2);
      boolean boolean0 = true;
      boolean boolean1 = false;
      node1.toString(boolean0, boolean0, boolean1);
      node1.isScript();
      // Undeclared exception!
      try { 
        node_SideEffectFlags4.clearSideEffectFlags();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.newString(39, "42t#D8A@b(tj HGW", 48, (-1644));
      node0.isDefaultCase();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1803));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags6.setMutatesGlobalState();
      Node node0 = Node.newString(455, "P", (-1803), (-1037));
      node0.setIsSyntheticBlock(true);
      node0.getQualifiedName();
      node0.isFor();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-708));
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node0.toString(false, false, true);
      node1.isScript();
      node_SideEffectFlags1.clearSideEffectFlags();
      String string0 = "z'KQ";
      int int0 = 2626;
      int int1 = 790;
      Node.newString(string0, int0, int1);
      Node node3 = node1.copyInformationFrom(node2);
      // Undeclared exception!
      try { 
        node3.siblings();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1548
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(0.0);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getInputId();
      Node node1 = Node.newString("");
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      node0.cloneTree();
      Node node1 = new Node((-244), node0);
      node1.isCall();
      node1.getProp((-1619));
      node0.hasOneChild();
      node1.getIntProp(4095);
      node0.isExprResult();
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newString(125, "change_time", 2147483645, (-2475));
      node0.mayMutateArguments();
      node0.isOr();
      Node node1 = new Node(130, 122, 125);
      node1.isGetProp();
      node0.getAncestor(46);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("4n%m<aiFD", true);
      Node node1 = Node.newString("");
      Node node2 = new Node(2605, node1, node0, node1, node1, 112, 51);
      node2.hasChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(0.0, 77, 77);
      Node node1 = new Node(8388608, node0);
      Node node2 = new Node(77, node1, node1, 2363, 306);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = node2.removeFirstChild();
      node1.isReturn();
      Node node4 = new Node(2, (Node[]) null, 38, 4);
      Node node5 = new Node(node4.ORIGINALNAME_PROP, node3, node1, node3, node3);
      String string0 = "q*bbZtYYW*\"I>3 &_";
      int int0 = (-1205);
      Node.newString(string0, int0, node3.QUOTED_PROP);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = new Node(3473);
      Node node1 = new Node(152, node0, node0, node0, node0);
      Node.extractCharno(1974);
      node1.isName();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(119);
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node0.mayMutateArguments();
      node2.isOr();
      node2.isQuotedString();
      node0.getAncestor(54);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = "fS0e_";
      Node node0 = Node.newString("fS0e_");
      int int0 = (-2308);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.setOptionalArg(true);
      JSType jSType0 = null;
      FunctionType functionType0 = JSType.toMaybeFunctionType((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      FunctionType.getTopDefiningInterface((ObjectType) null, "Named type with empty name component");
      JSType[] jSTypeArray0 = new JSType[8];
      jSTypeArray0[0] = (JSType) functionType0;
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int int0 = 55;
      Node node0 = Node.newString(55, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getIntProp(55);
      Node node1 = Node.newString("setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      node0.removeChild(node1);
      node0.getDirectives();
      int int1 = (-1270);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.Node$SideEffectFlags");
      Node node0 = Node.newString(11, "com.google.javascript.rhino.Node$SideEffectFlags");
      Node node1 = node0.cloneTree();
      Node node2 = new Node(11, node0);
      node2.isCall();
      Node node3 = node2.clonePropsFrom(node0);
      node3.getProp((-1621));
      node0.hasOneChild();
      node3.siblings();
      node0.isContinue();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node3;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node2;
      nodeArray0[4] = node0;
      nodeArray0[5] = node3;
      nodeArray0[6] = node3;
      Node node4 = new Node(697, nodeArray0, 132, 38);
      node4.isGetProp();
      double double0 = 0.0;
      Node.newNumber(double0);
      node2.addChildrenToBack(node3);
      node1.useSourceInfoIfMissingFromForTree(nodeArray0[1]);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-708));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(3039);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node0.isArrayLit();
      node1.isDefaultCase();
      node2.isLabel();
      node2.isDelProp();
      node1.siblings();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.isDo();
      node1.isSetterDef();
      node_SideEffectFlags1.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node(3473);
      Node node1 = new Node(152, node0, node0, node0, node0);
      Node.extractCharno(1974);
      node1.isName();
      node1.isWhile();
      node1.setLength(50);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-244), node0);
      node2.isCall();
      node2.getProp((-1619));
      node1.getChildBefore(node2);
      node2.isIf();
      node0.isInc();
      int int0 = 2369;
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(1214, node0, node0, 57, 4095);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setThrows();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags7.setMutatesGlobalState();
      Node.newString(2, "Iv:tTJ5DL#0Y", 36, 30);
      node1.isIf();
      node1.isInc();
      node0.getAncestor((-1568));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      int int0 = (-1548);
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(57, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(93, nodeArray0);
      Node node4 = new Node(37, node3);
      Node node5 = node1.srcrefTree(node3);
      node2.getDouble();
      Node node6 = new Node(int0, node1, node4);
      node1.isFor();
      node5.detachFromParent();
      String string0 = "j&0z:i%XQK@q[R\\I^";
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1548
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7598);
      node0.checkTreeEquals(node0);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(57);
      node0.setString((String) null);
      int int0 = 3473;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.clearAllFlags();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 812.0 0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[8];
      String string0 = "83+P1L{!";
      Node node0 = Node.newString("Object#Element", (-5339), (-5339));
      JSType jSType0 = null;
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of(templateType0, templateType0, templateType0, templateType0, templateType0, templateType0, templateType0, templateType0, templateType0, templateType0);
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType("83+P1L{!", node0, node0, (JSType) null, immutableList0);
      jSTypeArray0[0] = (JSType) functionType0;
      TemplatizedType templatizedType0 = JSType.toMaybeTemplatizedType(jSType0);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) templatizedType0, jSTypeArray0[0], (JSType) functionType0, (JSType) templatizedType0, jSType0, jSType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InputId inputId0 = new InputId("QMARK");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = new Node(15, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      simpleErrorReporter0.warning("V|7J", "Vq6!H[QU", 159, 2);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSTypeRegistry0.declareType("", templateType0);
      node0.isContinue();
      node1.getJSType();
      node0.getLength();
      node1.isRegExp();
      node1.isOptionalArg();
      node0.isEquivalentToTyped(node1);
      node1.isQualifiedName();
      Node node2 = node1.getLastSibling();
      node0.isFalse();
      node1.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.areAllFlagsSet();
      node0.getBooleanProp(1);
      node2.setSideEffectFlags(38);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = 16;
      int int1 = (-1037);
      Node node0 = Node.newString(16, "", (-1037), (-1037));
      Node node1 = new Node(56, node0, node0, node0);
      Node node2 = new Node(38, node0, 15, 256);
      node0.addChildBefore(node2, node2);
      node0.isLocalResultCall();
      // Undeclared exception!
      try { 
        node0.useSourceInfoFrom(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      boolean boolean0 = true;
      node_SideEffectFlags5.clearAllFlags();
      Node.newString(0, (String) null, 0, 20);
      boolean boolean1 = false;
      boolean boolean2 = false;
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node node1 = Node.newString(50, "", 4, 57);
      Node node2 = new Node(40, node1, node1, node0, node0, 57, 32);
      Node node3 = node2.clonePropsFrom(node0);
      node3.isIf();
      Node node4 = new Node(0, node3, node3, node3, node2);
      node3.isCase();
      node1.isReturn();
      node4.isFunction();
      node2.getDouble();
      Node node5 = null;
      node0.useSourceInfoFromForTree(node5);
      // Undeclared exception!
      try { 
        node0.isFor();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING 57 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.Node$SideEffectFlags");
      Node node0 = Node.newString(11, "com.google.javascript.rhino.Node$SideEffectFlags");
      Node node1 = node0.cloneTree();
      node0.useSourceInfoFromForTree(node1);
      Node node2 = new Node(11, node0);
      node2.isCall();
      Node node3 = node2.clonePropsFrom(node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node3.getProp((-1619));
      node0.hasOneChild();
      node2.getIntProp(4095);
      node2.isDo();
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = new Node(4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags6.setMutatesArguments();
      Node node1 = new Node(15, node0);
      node0.isEquivalentTo(node1);
      node0.siblings();
      node0.isContinue();
      node0.isGetProp();
      node1.isIf();
      node1.isInc();
      node1.getAncestor(8);
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-244), node0);
      node2.setWasEmptyNode(true);
      node2.isCall();
      node2.setOptionalArg(false);
      node2.getProp((-1619));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.hasOneChild();
      node2.getIntProp(4095);
      node0.isExprResult();
      node2.isAssign();
      node1.replaceChildAfter(node2, node0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 3033, 3033);
      node0.getSourceOffset();
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.mergeLineCharNo(37, 15);
      node0.isLabel();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-244), node0);
      node1.isCall();
      node1.getProp(15);
      Node node3 = new Node(42, node0, 46, 53);
      node0.isIf();
      node3.isInc();
      int int0 = 124;
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      node0.cloneTree();
      Node node1 = new Node((-244), node0);
      node0.isCall();
      node1.getProp(51);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.hasOneChild();
      node0.getIntProp(37);
      node0.isExprResult();
      node1.isAssign();
      node1.replaceChildAfter(node0, node0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node node0 = Node.newString(1180, "", 9, (-1287));
      Node node1 = new Node(38, node0, node0, node0, node0, (-1287), 20);
      Node node2 = node1.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(1863);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      Node node3 = Node.newString(50, "", 124, (-1));
      node3.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.isGetElem();
      Node node5 = Node.newString("Object#Key");
      node1.isInc();
      node4.addChildToFront(node2);
      node2.isFalse();
      node5.isQualifiedName();
      Node.newString(251, "]", 1, 52);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 3033, 3033);
      node0.getInputId();
      node0.getSourceOffset();
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isWith();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newString("input_id", 0, 0);
      node0.children();
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString("input_id");
      Node node3 = new Node(30, node0, node2, node1, node1, 40, 16);
      node0.getSourceFileName();
      node1.removeChild(node0);
      int int0 = 1340;
      int int1 = 4096;
      // Undeclared exception!
      try { 
        Node.newNumber((double) node3.NO_SIDE_EFFECTS, int0, int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-244), node0);
      node0.isCall();
      node2.getProp(51);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node1.setIsSyntheticBlock(true);
      node0.getQualifiedName();
      node2.isFor();
      node2.isInstanceOf();
      node2.putProp(128, node_SideEffectFlags3);
      node0.isHook();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 1801, (-965));
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1801);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node node1 = Node.newString((-1922), "Iv:tTJ5DL#0Y", 95, 2469);
      node_SideEffectFlags4.setThrows();
      Node node2 = new Node(46);
      node2.setIsSyntheticBlock(true);
      node2.getQualifiedName();
      node1.isFor();
      node0.isInstanceOf();
      node1.putProp((-2899), (Object) null);
      node2.setSourceFileForTesting("Iv:tTJ5DL#0Y");
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-50);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags6.valueOf();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags6.setMutatesArguments();
      Node node0 = null;
      Node node1 = new Node(117, (Node) null);
      node1.isEquivalentTo(node0);
      node1.siblings();
      node1.isContinue();
      // Undeclared exception!
      try { 
        node1.isGetProp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 83, 0);
      Node node1 = Node.newString(54, "p2DI1]E6WP!", 38, 40);
      Node node2 = new Node(8, node1, node1, node1, node1, 33, 3473);
      Node node3 = node0.clonePropsFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3065));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(243);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node2.mayMutateArguments();
      node3.isOr();
      node1.isGetProp();
      node1.getAncestor(115);
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newNumber(39.353192634723754, 4614, 4614);
      node0.getLength();
      Node node1 = new Node(15, node0);
      node0.isEquivalentTo(node1);
      node0.siblings();
      node0.isContinue();
      node0.isGetProp();
      node1.isEquivalentTo(node0, false, false, false);
      node1.isInc();
      node1.getAncestor(8);
      node0.isNoSideEffectsCall();
      Node.newString((String) null, 38, 148);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node0 = Node.newString("]>O");
      Node node1 = new Node(2493, node0, 30, 2213);
      Node node2 = new Node(3778, node1, node1);
      node2.isIn();
      node2.putIntProp(4, 16);
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-708));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isArrayLit();
      Node.extractCharno(54);
      node1.isName();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7598);
      node0.isNoSideEffectsCall();
      node0.setSideEffectFlags(18903039);
      node0.setSideEffectFlags(node0.COLUMN_MASK);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node0 = Node.newString("]>O");
      Node node1 = new Node(2493, node0, 30, 2213);
      Node node2 = new Node(3778, node1, node1);
      Node.newString("Dw_k?f8i");
      node2.isIn();
      node2.putIntProp(4, 16);
      node2.getLastSibling();
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newString("}D");
      Node node1 = new Node((-1619), node0, 63, 54);
      node1.useSourceInfoFromForTree(node0);
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags6.setThrows();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node0 = Node.newString(100, "%]/&!^NamURoJS>x77", (-637), (-3019));
      node_SideEffectFlags5.setThrows();
      node0.setIsSyntheticBlock(true);
      node0.getQualifiedName();
      Node node1 = node0.detachFromParent();
      String string0 = "";
      Node node2 = Node.newString(string0);
      Node node3 = node1.getChildBefore(node2);
      node3.isNot();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = node0.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-708));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setThrows();
      node1.addSuppression("_&D]ii/r!3H/3j");
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node2 = Node.newString(46, "");
      node_SideEffectFlags1.setThrows();
      Node node3 = Node.newString("", (-108), 48);
      node0.isNumber();
      node2.isBreak();
      node3.getProp(286);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      InputId inputId0 = new InputId("QMARK");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(15, node0);
      node1.isSyntheticBlock();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7576);
      node0.getDirectives();
      node0.getSourceFileName();
      node0.isVoid();
      node0.setSideEffectFlags(18903039);
      node0.setSideEffectFlags(node0.COLUMN_MASK);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newString("", 3473, 1340);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(26);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node0.setSourceEncodedPositionForTree(3473);
      JSType jSType0 = node0.getJSType();
      node0.isOr();
      node0.isGetElem();
      Node.extractLineno(49);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[4];
      FunctionType functionType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node1.isObjectLit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node.newNumber((double) 812, 3473, 7598);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(95);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.valueOf();
      node_SideEffectFlags3.setMutatesArguments();
      boolean boolean0 = true;
      node_SideEffectFlags5.clearAllFlags();
      Node node0 = Node.newString(384, (String) null);
      boolean boolean1 = true;
      boolean boolean2 = false;
      node0.toString(boolean1, boolean0, boolean2);
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      String string0 = "z'KQ";
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("z'KQ", 48, (-2864));
      Node node2 = node1.copyInformationFrom(node0);
      node1.isEquivalentTo(node2);
      Node node3 = new Node(53);
      node3.getIntProp((-4292));
      node1.isDo();
      node2.isAssign();
      node3.getIndexOfChild(node1);
      node3.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.Node$SideEffectFlags");
      Node node0 = Node.newString(11, "com.google.javascript.rhino.Node$SideEffectFlags");
      Node node1 = node0.cloneTree();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node node3 = new Node(1);
      node3.isCall();
      node3.clonePropsFrom(node0);
      node1.getChildBefore(node2);
      node2.isIf();
      node0.isInc();
      int int0 = 13;
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      int int0 = (-1548);
      Node node0 = Node.newString("", (-463), 9);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(9);
      node0.setString((String) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setMutatesThis();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node node0 = Node.newString(1180, "", 9, (-1287));
      Node node1 = new Node(38, node0, node0, node0, node0, (-1287), 20);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      Node node2 = Node.newString(50, "", 124, (-1));
      node2.replaceChild(node1, node1);
      node2.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      Stack<JSType> stack0 = new Stack<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.isGetElem();
      Node.newString(jSTypeRegistry0.OBJECT_INDEX_TEMPLATE);
      // Undeclared exception!
      try { 
        node1.isInc();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newNumber(39.353192634723754, 4614, 4614);
      node0.getLength();
      Node node1 = new Node(15, node0);
      node1.getBooleanProp((-1152));
      node0.isEquivalentTo(node1);
      node0.siblings();
      node0.isLabelName();
      Node node2 = Node.newString("HLx!odTyY7iSG#");
      Node node3 = new Node(48, node2, node0, node1);
      node2.isEquivalentToShallow(node3);
      node0.useSourceInfoIfMissingFromForTree(node2);
      node0.hasChildren();
      // Undeclared exception!
      try { 
        node3.getLineno();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setThrows();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)101;
      byteArray0[2] = (byte) (-81);
      byteArray0[3] = (byte)71;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)47;
      byteArray0[6] = (byte)49;
      byteArray0[7] = (byte)11;
      byteArray0[8] = (byte)30;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node0 = Node.newString(100, "%]/&!^NamURoJS>x77", (-637), 20);
      node_SideEffectFlags7.setThrows();
      node0.setIsSyntheticBlock(true);
      node0.getQualifiedName();
      node0.isFor();
      node0.siblings();
      node0.isOr();
      node0.isGetProp();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = new Node(83);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newString(42, "");
      Node node2 = Node.newString("", 57, 0);
      node_SideEffectFlags1.valueOf();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.clearAllFlags();
      node1.toString(true, true, true);
      node1.isScript();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node3 = Node.newString("direct_eval", 38, 46);
      Node node4 = node0.copyInformationFrom(node0);
      Node node5 = new Node(42, node2, node0, node4, node0);
      node0.putProp(56, node3);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString("", 918, 1963);
      nodeArray0[0] = node0;
      Node node1 = new Node(39, node0, node0, 30, (-3212));
      nodeArray0[1] = node1;
      Node node2 = Node.newString(2, "", 47, 4095);
      nodeArray0[2] = node2;
      Node node3 = Node.newString(3325, "", 4095, (-1713));
      nodeArray0[3] = node3;
      Node node4 = new Node(16, node3, node0, node3, 52, 3325);
      nodeArray0[3].isLabelName();
      int int0 = 12426201;
      int int1 = 132;
      Node node5 = new Node(int0, nodeArray0[3], node2.INFERRED_FUNCTION, int1);
      nodeArray0[1].removeChildAfter(nodeArray0[2]);
      node0.isLocalResultCall();
      nodeArray0[1].isBreak();
      nodeArray0[2].addChildToBack(nodeArray0[0]);
      Node node6 = node5.getNext();
      node5.getProp(node6.JSDOC_INFO_PROP);
      // Undeclared exception!
      try { 
        nodeArray0[0].setType(node0.VAR_ARGS_NAME);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(3473);
      Node node1 = new Node(152, node0, node0, node0, node0);
      node0.getSourceFileName();
      node1.isVoid();
      node0.setSideEffectFlags(40);
      int int0 = 2044;
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3473
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(0.0, 77, 77);
      Node node1 = new Node(8388608, node0);
      Node node2 = new Node(77, node1, node1, 2363, 308);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = node2.removeFirstChild();
      node1.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(110);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesArguments();
      node3.getJSDocInfo();
      node_SideEffectFlags3.setMutatesGlobalState();
      node0.isInstanceOf();
      node0.putProp(22, node2);
      node1.isHook();
      Node node4 = new Node(112, node2, node1, node1, 43, 100);
      Node node5 = new Node(5069, node3, node4, node2);
      node5.isBreak();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString("Dw_k?f8i");
      Node node3 = new Node(1, node2, node1, node0, node1, 241, 2566);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.toStringTree();
      int int0 = (-887);
      node3.setSourceEncodedPositionForTree(int0);
      node3.getJSType();
      node3.isOr();
      // Undeclared exception!
      try { 
        node0.isGetElem();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1548
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newString(155, "NME.}U", 16, (-2610));
      Node node1 = new Node((-799), node0, node0, node0, node0, (-799), 2);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1160);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node2.isArrayLit();
      Node.extractCharno(584);
      node1.isName();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      Node node1 = node0.cloneTree();
      Node node2 = new Node(627, node0, node0, node1, node1, 9, 51);
      Node node3 = node2.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1902));
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node3.isArrayLit();
      Node.extractCharno(0);
      Node node4 = Node.newString("IDENTITY", 1, 0);
      Node node5 = Node.newString(688, "com.google.common.collect.Lists$RandomAccessPartition", 29, (-2734));
      node4.isName();
      node3.isWhile();
      node5.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newString("Dw_k?f8i");
      Node node1 = new Node(2493, node0, node0, node0, node0, 2215, 43);
      Node node2 = node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(124);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node1.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node2.isGetElem();
      Node node3 = Node.newString("Object#Element");
      node2.isInc();
      Node node4 = node3.getAncestor(0);
      node4.addChildToFront(node1);
      node3.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      node0.clonePropsFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(119);
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(52);
      node0.mayMutateArguments();
      node1.isThis();
      node0.isGetProp();
      node0.getAncestor(54);
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("z'KQ", 48, (-2864));
      Node node2 = node1.copyInformationFrom(node0);
      node1.siblings();
      node1.isOnlyModifiesThisCall();
      node1.isContinue();
      node1.isGetProp();
      Node node3 = Node.newNumber(84.677148498793);
      node3.addChildAfter(node2, node1);
      node2.useSourceInfoIfMissingFromForTree(node0);
      node1.getAncestor(node2.SIDE_EFFECT_FLAGS);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString(29, "", 29, 29);
      node0.setSourceEncodedPosition(29);
      node0.wasEmptyNode();
      Node node1 = Node.newString(512, "");
      node0.isDebugger();
      node0.isVar();
      Node node2 = node1.detachFromParent();
      node2.getChildBefore(node0);
      // Undeclared exception!
      try { 
        node1.isNoSideEffectsCall();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = new Node(159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      simpleErrorReporter0.warning("V|7J", "Vq6!H[QU", 159, 2);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSTypeRegistry0.declareType("", templateType0);
      node0.isContinue();
      node1.getJSType();
      node0.getLength();
      node1.isRegExp();
      node1.isOptionalArg();
      node0.isEquivalentToTyped(node1);
      node1.isQualifiedName();
      Node node2 = node1.getLastSibling();
      node2.useSourceInfoIfMissingFrom(node1);
      node0.isFalse();
      node1.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      int int0 = 0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(9);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.newString("i@7INeK9j=lQK0<");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node0 = jSDocInfo0.getAssociatedNode();
      Node node1 = new Node(9, (Node) null, 4, 125);
      Node node2 = new Node(node1.JSDOC_INFO_PROP, node1, node0);
      node0.isIn();
      node1.putIntProp(node2.FLAG_LOCAL_RESULTS, int0);
      // Undeclared exception!
      try { 
        node0.getLastSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags5.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setThrows();
      Node node0 = Node.newNumber((double) 20, 20, 128);
      node0.hasMoreThanOneChild();
      Node node1 = Node.newString(16384, "/(Qg\"V!*Xin'bIO/Y");
      node1.isDo();
      node1.isQualifiedName();
      node1.isCall();
      node1.removeChild(node0);
      node1.isLabelName();
      node1.getLineno();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags6.setMutatesGlobalState();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InputId inputId0 = new InputId("QMARK");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = new Node(15, node0);
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      Node node2 = node1.cloneNode();
      node2.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-244), node0);
      node0.isCall();
      node2.getProp(51);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isThrow();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node1.setIsSyntheticBlock(false);
      node0.getQualifiedName();
      node2.isFor();
      node2.isInstanceOf();
      node2.putProp(128, node_SideEffectFlags3);
      node0.isHook();
      node2.getInputId();
      node2.putProp(4095, (Object) null);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newString((-1548), "Dw_k?f8i", (-1548), 9);
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 2493);
      Node node2 = node0.clonePropsFrom(node1);
      Node.newString("'Z(tTPbrcV1dz5+PVj", 50, 2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-708));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isArrayLit();
      node2.isDefaultCase();
      node0.isLabel();
      node1.isDelProp();
      node0.siblings();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isDo();
      node0.isSetterDef();
      node_SideEffectFlags2.setReturnsTainted();
      node1.children();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7598);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node(44, node0, node0, node0, 40, 0);
      nodeArray0[2] = node1;
      node0.removeChildren();
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node2 = new Node(87855567, nodeArray0, 52, 48);
      node0.checkTreeEqualsImpl(node2);
      int int0 = (-212);
      node0.setSourceEncodedPositionForTree(int0);
      node0.isOr();
      node0.isGetElem();
      Node.extractLineno(node0.REFLECTED_OBJECT);
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node.extractLineno(120);
      Node node0 = Node.newNumber((-4037.85));
      node0.isStringKey();
      node0.isGetterDef();
      node0.getJSDocInfo();
      node0.mayMutateGlobalStateOrThrow();
      node0.getLength();
      Node node1 = new Node(15);
      node1.setChangeTime(64);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node2.getLength();
      node2.isDec();
      node0.getString();
      node1.getExistingIntProp(node2.QUOTED_PROP);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node(159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = new Node(36, node0, node1, node1, node1, 56, 65535);
      Node node3 = node1.clonePropsFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(30);
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(8);
      node3.mayMutateArguments();
      node0.isThis();
      node1.isGetProp();
      node0.isString();
      node1.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node node0 = Node.newString(1180, "", 9, (-1287));
      Node node1 = new Node(38, node0, node0, node0, node0, (-1287), 20);
      Node node2 = node1.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(1863);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      Node node3 = Node.newString(50, "", 124, (-1));
      node3.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node1.isGetElem();
      Node node4 = Node.newString("Object#Element");
      node4.isInc();
      Node node5 = node1.getAncestor(30);
      node2.addChildToFront(node0);
      node5.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node node1 = Node.newString(50, "", 4, 57);
      Node node2 = new Node(40, node1, node1, node0, node0, 57, 32);
      Node node3 = node2.clonePropsFrom(node0);
      node3.isIf();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      int int0 = Node.OPT_ARG_NAME;
      node3.setLength(50);
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node node4 = new Node((-2363), node0);
      int int1 = 1847;
      Node node5 = null;
      Node node6 = new Node(int1, node1, node0, node5);
      node2.isEquivalentTo(node6);
      node3.siblings();
      // Undeclared exception!
      try { 
        node3.isContinue();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = jSDocInfo0.getAssociatedNode();
      node0.isEquivalentTo((Node) null);
      node1.siblings();
      node1.isContinue();
      // Undeclared exception!
      try { 
        node0.isGetProp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newNumber(39.353192634723754, 4614, 4614);
      node0.getLength();
      Node node1 = new Node(15, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.valueOf();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node0.toString(false, true, true);
      node1.isScript();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node2 = Node.newString("NUMBER 39.353192634723754", 1, 303);
      Node node3 = node0.copyInformationFrom(node2);
      node0.siblings();
      node3.isOr();
      node0.isGetProp();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node node0 = Node.newString(0, "side_effect_flags");
      Node node1 = Node.newString("]>O", 0, 32);
      node_SideEffectFlags0.valueOf();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node1.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags2.clearSideEffectFlags();
      node1.isGetProp();
      node0.getAncestor(16);
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-976));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node node0 = Node.newString("");
      Node node1 = new Node(1204, node0, node0);
      node0.isIn();
      node0.putIntProp(42, 46);
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 1801, (-965));
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1801);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(53, 119, 42);
      node1.isThrow();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node1.setIsSyntheticBlock(false);
      node1.getQualifiedName();
      node0.isFor();
      Node node2 = new Node(4, node1, node1, (-8), 37);
      node2.isInstanceOf();
      node2.putProp(4096, node_SideEffectFlags4);
      node2.isHook();
      node1.getInputId();
      int int0 = (-1357);
      Locale.Category locale_Category0 = Locale.Category.valueOf("u/Qq(Jo'^pJ+V}");
      node2.putProp(int0, locale_Category0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)49;
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)120;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node[] nodeArray0 = new Node[1];
      String string0 = "";
      Node node0 = Node.newString((int) (byte)120, "");
      Node node1 = new Node((byte)49, node0, node0, 50, 36);
      Node node2 = new Node((byte)120, node1, node1, node0, node0);
      Node node3 = new Node(byteArray0[0], node2);
      nodeArray0[0] = node3;
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newString("Dw_k?f8i");
      Node node1 = node0.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(124);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node0.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node1.isGetElem();
      Node node3 = Node.newString("Object#Element");
      node1.isInc();
      Node node4 = node3.getAncestor(0);
      node4.addChildToFront(node0);
      node3.mayMutateGlobalStateOrThrow();
      node2.isDo();
      node0.getParent();
      node4.isVoid();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 1801, (-965));
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1801);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(53, 119, 42);
      node_SideEffectFlags2.setMutatesGlobalState();
      node1.isThrow();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node0.useSourceInfoIfMissingFrom(node1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node2 = Node.newString("free_call");
      Node node3 = new Node(119, node2);
      node3.getLength();
      node1.isDec();
      node1.getString();
      node2.getExistingIntProp(node1.SIDE_EFFECTS_FLAGS_MASK);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      Node node1 = node0.cloneTree();
      node1.setOptionalArg(true);
      Node node2 = new Node((-244), node0);
      node0.isCall();
      node2.getProp(51);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.hasOneChild();
      node2.isDefaultCase();
      node0.isDec();
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("z'KQ", 48, (-2864));
      Node node2 = node1.copyInformationFrom(node0);
      node1.isEquivalentTo(node2);
      Node node3 = new Node(53);
      node3.getIntProp((-4292));
      node1.isDo();
      node2.isAssign();
      node3.getIndexOfChild(node1);
      node3.isObjectLit();
      node1.isTrue();
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node node0 = Node.newString(1180, "", 9, (-1287));
      Node node1 = new Node(38, node0, node0, node0, node0, (-1287), 20);
      Node node2 = node1.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(1863);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      Node node3 = Node.newString(50, "", 124, (-1));
      node3.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node1.isGetElem();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearSideEffectFlags();
      node3.isDo();
      node2.getDouble();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node node0 = new Node(2493, 0, 3519);
      Node node1 = new Node((-446), node0, node0, 50, 57);
      Node.extractCharno((-427));
      node1.isWhile();
      node1.getProp((-1));
      node0.addChildToFront(node1);
      Node node2 = new Node(1355);
      node2.replaceChild(node1, node1);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      int int0 = 1338;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[6];
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      jSTypeArray0[0] = (JSType) templateType0;
      Node node0 = new Node(0, 1338, 4979);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node(0, nodeArray0, 46, 675);
      int int1 = 2213;
      Node node2 = null;
      try {
        node2 = new Node(int1, nodeArray0[1], nodeArray0[0]);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newNumber(2530.2718711140915);
      node0.toString(true, false, true);
      node0.isScript();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node1 = Node.newString("JSDocInfo", 2, 85);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isEquivalentTo(node1);
      Node node3 = new Node((-2161));
      node1.getIntProp(132);
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(31, nodeArray0);
      node4.isDo();
      Node node5 = new Node((-682), nodeArray0);
      node5.isAssign();
      node4.getIndexOfChild(node0);
      node2.isObjectLit();
      node4.isTrue();
      node5.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      int int0 = 16;
      String string0 = "";
      Node node0 = Node.newString(16, "", 16, 16);
      Node node1 = new Node(56, node0, node0, node0);
      boolean boolean0 = node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.setLineno(16);
      node0.getQualifiedName();
      node1.useSourceInfoFrom(node2);
      node1.getExistingIntProp(304);
      // Undeclared exception!
      try { 
        node2.setWasEmptyNode(boolean0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 304
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 4614, 4614);
      node0.getLength();
      Node node1 = new Node(1724, node0);
      node1.isEquivalentTo(node0);
      node1.siblings();
      node0.isContinue();
      node1.isGetProp();
      node1.isEquivalentTo(node0, false, false, false);
      node1.isInc();
      node1.getAncestor(49);
      node0.setDouble(55);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newString("Dw_k?f8i");
      Node node1 = node0.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(124);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node0.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node1.isGetElem();
      Node node3 = Node.newString("Object#Element");
      node1.isInc();
      node3.wasEmptyNode();
      Node node4 = node3.getAncestor(0);
      node4.addChildToFront(node0);
      node3.mayMutateGlobalStateOrThrow();
      node2.isDo();
      node0.mayMutateArguments();
      node3.getChildBefore(node1);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = new Node(159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      simpleErrorReporter0.warning("V|7J", "Vq6!H[QU", 159, 2);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSTypeRegistry0.declareType("", templateType0);
      node0.isContinue();
      node1.getJSType();
      node0.getLength();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isOptionalArg();
      node0.isNew();
      node1.isQualifiedName();
      Node node2 = node1.getLastSibling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node3 = Node.newString(37, "Named type with empty name component", 36, 53);
      node2.getBooleanProp((-959));
      node3.setSideEffectFlags(1);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node.extractLineno(380);
      Node node0 = Node.newNumber((-6563.158056223417));
      node0.isStringKey();
      node0.isGetterDef();
      node0.getJSDocInfo();
      Node node1 = new Node(119, node0, node0, 32, 380);
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = new Node(56);
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.getLength();
      node3.isDec();
      node2.getAncestors();
      node1.getString();
      int int0 = (-1073);
      node2.getExistingIntProp(int0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = new Node(49, node0, node0, 57, 1);
      Node node2 = node1.copyInformationFrom(node0);
      node2.useSourceInfoFromForTree(node0);
      node1.siblings();
      node1.isContinue();
      node1.isGetProp();
      Node.newNumber(84.677148498793);
      node2.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newString("", (-244), (-244));
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-244), node0);
      node0.isCall();
      Node node3 = new Node(48, node1);
      Node node4 = node3.cloneTree();
      node1.getIntProp(13);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node4.setJSDocInfo(jSDocInfo0);
      node4.isExprResult();
      node4.replaceChildAfter(node2, node1);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(54);
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.add((JSType) null);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node1.isGetElem();
      Node node2 = Node.newString("Object#Key");
      node1.isInc();
      node1.useSourceInfoFromForTree(node0);
      node0.isFor();
      node2.isDo();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node3.isAssign();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags3.valueOf();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node1 = Node.newString("", 47, (-1442));
      Node node2 = Node.newNumber((double) 29);
      Node node3 = new Node((-2745), node2, node1, node1, node0, (-498), 53);
      Node node4 = node3.copyInformationFrom(node1);
      node0.siblings();
      node1.isOr();
      node4.isGetProp();
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7598);
      Node node1 = new Node(40, node0, node0, node0, node0);
      String string0 = "";
      Node node2 = Node.newString((-1406), "", 31, 42);
      Node node3 = new Node(1189, node1, node1, node2, node0, 12, 4095);
      node1.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node3.LENGTH);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      // Undeclared exception!
      try { 
        node_SideEffectFlags2.setMutatesArguments();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Node node2 = Node.newString("OtCxvIw-`-a8%d", 57, (-4782));
      int int0 = 35;
      Node node3 = new Node(35, node1, node1, node2);
      node3.isGetElem();
      Node node4 = Node.newString((String) null);
      node0.isInc();
      int int1 = 105;
      Node node5 = new Node(int1, node1, node4);
      node2.addChildToFront(node5);
      node0.isFalse();
      // Undeclared exception!
      try { 
        node3.isQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2097152, nodeArray0);
      Node node1 = new Node(2097152, node0, 4095, 61);
      Node node2 = node0.srcref(node1);
      node2.isEquivalentTo(node1);
      node1.setWasEmptyNode(false);
      node2.isNoSideEffectsCall();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node2.isOnlyModifiesArgumentsCall();
      boolean boolean0 = node1.isUnscopedQualifiedName();
      node2.removeChild(node0);
      boolean boolean1 = true;
      boolean boolean2 = true;
      node1.isEquivalentTo(node2, boolean1, boolean0, boolean2);
      node0.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node2.isFor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = Node.newString("o7xe[CAB");
      Node node1 = Node.newString(116, "o7xe[CAB", 36, 37);
      node1.setLength(38);
      node0.isNoSideEffectsCall();
      node0.setLineno(38);
      String string0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node1.putBooleanProp(39, false);
      node0.setSideEffectFlags(4583);
      node0.isCall();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      node0.getType();
      node1.wasEmptyNode();
      // Undeclared exception!
      try { 
        node0.isName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "W");
      Node node0 = Node.newString("W");
      node0.setType(3552);
      node0.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      JSType[] jSTypeArray0 = null;
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node node0 = Node.newString("new child has existing parent");
      Node node1 = new Node(20, node0, node0, node0, node0, 0, 118);
      node1.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(12);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags6.setThrows();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node node2 = Node.newString(2, " ");
      node_SideEffectFlags2.setThrows();
      Node node3 = Node.newString("wLrE&qqgc}2 p5n", 0, 50);
      node3.isNumber();
      node2.isBreak();
      Node.extractLineno(50);
      node3.isContinue();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      node0.useSourceInfoIfMissingFrom((Node) null);
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node0 = Node.newString("]>O");
      Node node1 = new Node(2493, node0, 30, 2213);
      Node node2 = new Node(3778, node1, node1);
      node2.isIn();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.isThis();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = new Node(159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      simpleErrorReporter0.warning("V|7J", "Vq6!H[QU", 159, 2);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSTypeRegistry0.declareType("", templateType0);
      node0.isContinue();
      node1.getJSType();
      node0.getLength();
      node1.isRegExp();
      node1.isOptionalArg();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isEquivalentToTyped(node1);
      node1.isQualifiedName();
      Node node2 = node1.getLastSibling();
      node2.useSourceInfoIfMissingFrom(node1);
      node0.isFalse();
      node1.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      node1.isWhile();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4614, (-841), 4614);
      node0.getLength();
      Node node1 = new Node(31, node0);
      node0.isEquivalentTo(node1);
      node0.siblings();
      Node node2 = Node.newString("FALSE", (-841), 2);
      node2.isContinue();
      node2.isGetProp();
      node2.isEquivalentTo(node0, false, false, false);
      node1.isEquivalentToShallow(node2);
      node0.isFor();
      node0.isNot();
      node0.addChildToFront(node1);
      node2.toString();
      node0.isQuotedString();
      node2.isVoid();
      node2.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, (-841), 55);
      Node node1 = new Node((-510), node0, node0, node0, node0, 4095, 4095);
      node0.checkTreeEquals(node0);
      node1.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(46);
      String string0 = "+Vr8";
      node1.setString("+Vr8");
      int int0 = 1402;
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = new Node(61, 61, 21);
      String string0 = "new child has existing parent";
      int int0 = 108;
      node0.setDouble((-1019.760769023646));
      Node node1 = Node.newString(int0, string0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        node1.isSyntheticBlock();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 61
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 1801, (-965));
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1801);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node_SideEffectFlags1.setThrows();
      Node node1 = new Node(53, 119, 42);
      node_SideEffectFlags2.setMutatesGlobalState();
      node1.isThrow();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node3 = Node.newString("free_call");
      Node node4 = new Node(119, node3);
      Node node5 = new Node(54, node4, node0);
      node5.siblings();
      node0.isOr();
      node2.isGetProp();
      node0.isInstanceOf();
      node3.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      int int0 = Node.FREE_CALL;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(54);
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.add((JSType) null);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node1.isGetElem();
      node1.toStringTree();
      Node node2 = Node.newString("Object#Key");
      node1.isInc();
      node1.useSourceInfoFromForTree(node0);
      node0.isFor();
      node2.isDo();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node3.isAssign();
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newString("\n\nTree2:\n", 146, 146);
      Node node1 = node0.cloneTree();
      Node node2 = new Node(3951, node0);
      node1.isCall();
      node0.getProp(1104);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.hasOneChild();
      node2.getIntProp(14229503);
      node2.getIntProp(4);
      node2.isExprResult();
      node0.replaceChildAfter(node2, node2);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newString("", 63, 63);
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newNumber((-566.804288), 2245, 2245);
      node0.isBlock();
      node0.setQuotedString();
      double double0 = 3033.55;
      // Undeclared exception!
      try { 
        Node.newNumber(double0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      Node node1 = node0.cloneTree();
      node1.setOptionalArg(true);
      Node node2 = new Node((-244), node0);
      node0.isCall();
      node2.getProp(51);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.hasOneChild();
      node1.setOptionalArg(false);
      node0.isQuotedString();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4614, (-841), 4614);
      node0.getLength();
      Node node1 = new Node(31, node0);
      node0.isEquivalentTo(node1);
      node0.siblings();
      Node node2 = Node.newString("FALSE", (-841), 2);
      boolean boolean0 = node2.isContinue();
      boolean boolean1 = true;
      node2.putBooleanProp(2504, true);
      node0.setLength(4095);
      node0.setString("FALSE");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions(evoSuiteFile0, boolean1, boolean1, boolean0);
      node0.getQualifiedName();
      node1.isTry();
      int int0 = 16;
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.Node$SideEffectFlags";
      Node node0 = new Node((-244));
      Node node1 = node0.cloneTree();
      node1.setOptionalArg(true);
      Node node2 = new Node((-244), node0);
      node0.isCall();
      node2.isStringKey();
      node2.isCatch();
      node0.getParent();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-800));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node1.setSideEffectFlags(node_SideEffectFlags1);
      boolean boolean0 = true;
      node2.setOptionalArg(boolean0);
      // Undeclared exception!
      try { 
        node1.isQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -244
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = Node.newNumber(35.31516347052115, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(44);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.valueOf();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node0.isScript();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node1 = Node.newString("]Ej6O", 2470, 16384);
      Node node2 = node1.copyInformationFrom(node0);
      node1.isEquivalentTo(node2);
      Node node3 = new Node(1088);
      node1.getIntProp(8);
      node3.isDo();
      node0.isAssign();
      node0.getIndexOfChild(node2);
      node2.isObjectLit();
      node1.isNE();
      node3.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7598);
      Node node1 = new Node(40, node0, node0, node0, node0);
      node1.isSyntheticBlock();
      node1.isLabel();
      node0.siblings();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node1.getString();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      // Undeclared exception!
      try { 
        node_SideEffectFlags3.setThrows();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("]Ej6O", 48, (-2864));
      Node node2 = node1.copyInformationFrom(node0);
      node1.isEquivalentTo(node2);
      Node node3 = new Node(53);
      node3.getIntProp((-4292));
      node3.useSourceInfoFromForTree(node0);
      node1.mayMutateGlobalStateOrThrow();
      node2.isAssign();
      node3.getIndexOfChild(node1);
      node1.isWhile();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = node0.cloneTree();
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      node1.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node2 = Node.newString(29, "@xTsQ_EY");
      node_SideEffectFlags2.setThrows();
      Node node3 = Node.newString("]')ucp(SA3IoIM", 3980, 46);
      node3.isNumber();
      node0.isBreak();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.STRING_OBJECT_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) functionType0, (Map<TemplateType, JSType>) hashMap0);
      node3.setJSType(templatizedType0);
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4614, (-841), 4614);
      node0.getLength();
      Node node1 = new Node(31, node0);
      node0.isEquivalentTo(node1);
      node0.siblings();
      Node node2 = Node.newString("FALSE", (-841), 2);
      node2.isContinue();
      node2.isGetProp();
      node2.isEquivalentTo(node0, false, false, false);
      node1.isEquivalentToShallow(node2);
      node0.isFor();
      node0.isNot();
      node0.addChildToFront(node1);
      node2.toString();
      Node node3 = node1.getFirstChild();
      node0.getLength();
      node3.isInc();
      node0.getAncestor(2921);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newNumber(39.353192634723754, 4614, 4614);
      node0.getLength();
      Node node1 = new Node(15, node0);
      node0.isEquivalentTo(node1);
      node0.siblings();
      node0.isGetProp();
      node1.isEquivalentTo(node0, false, false, false);
      node1.isInc();
      node0.isThis();
      node1.getIntProp(55);
      node1.isDebugger();
      node1.isNew();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node0 = Node.newString("]>O");
      Node node1 = new Node(1055, node0, 30, 2213);
      Node node2 = new Node(3778, node1, node1);
      boolean boolean0 = node2.isIn();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(39, nodeArray0);
      Node node4 = new Node(3778, node2);
      Node node5 = new Node(node4.SIDE_EFFECTS_FLAGS_MASK, node2, node3.SYNTHETIC_BLOCK_PROP, node3.DECR_FLAG);
      node3.setOptionalArg(boolean0);
      node4.removeChild(node3);
      node5.isThis();
      // Undeclared exception!
      try { 
        node1.isDebugger();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString("", (-244), (-244));
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-244), node0);
      node0.isCall();
      Node node3 = new Node(48, node1);
      node3.cloneTree();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node1.toString(false, false, false);
      node2.isScript();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node4 = new Node(16, node2, node2, node2, node1);
      String string0 = "G`W;MU+#<K]";
      int int0 = 4614;
      // Undeclared exception!
      try { 
        Node.newString(node4.STATIC_SOURCE_FILE, string0, node0.VAR_ARGS_NAME, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newNumber((double) 61, 1298, 64);
      node0.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2493);
      Node node1 = Node.newNumber((double) 43, 113, (-1722));
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1595);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      node0.addChildrenToFront(node1);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node(32, 40, 53);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node2.isThrow();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node2.useSourceInfoIfMissingFrom(node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Node node3 = Node.newString("free_call");
      Node node4 = new Node(0, node3);
      node1.getLength();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node4.getString();
      node3.getExistingIntProp(node2.POST_FLAG);
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setThrows();
      node4.setSideEffectFlags(node_SideEffectFlags6);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = Node.newNumber(4942.781346981, 7598, 740);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = jSDocInfo0.getAssociatedNode();
      Node node2 = new Node((-1722), node0, node0, node0, (Node) null);
      node2.isSyntheticBlock();
      node1.isLabel();
      node0.siblings();
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = new Node(159, 159, 159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      simpleErrorReporter0.warning("V|7J", "Vq6!H[QU", 159, 2);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSTypeRegistry0.declareType("", templateType0);
      node0.isContinue();
      node1.getJSType();
      node0.getLength();
      node1.isRegExp();
      node1.isOptionalArg();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isEquivalentToTyped(node1);
      node1.isQualifiedName();
      Node node2 = node1.getLastSibling();
      node2.useSourceInfoIfMissingFrom(node1);
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      node1.isWhile();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = Node.newString((-3444), "8F@VWO", 55, (-633));
      Node node1 = Node.newString((-277), "G=$U'(88Lhi2", 1, 54);
      Node node2 = node0.srcref(node1);
      node2.putIntProp(8, 57);
      node0.getChangeTime();
      node0.getJsDocBuilderForNode();
      node0.siblings();
      node0.wasEmptyNode();
      node0.getChildCount();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isComma();
      node0.isThrow();
      node0.isTrue();
      Node node3 = Node.newString("8F@VWO");
      node3.setDouble(4);
      node0.isCast();
      node3.addChildrenToFront(node0);
      node3.isCase();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(20);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      String string0 = "x$SU,FGzISJ>\"AM2#";
      Node node0 = Node.newString("x$SU,FGzISJ>\"AM2#", 20, 20);
      node0.isContinue();
      node0.isGetProp();
      node0.setOptionalArg(false);
      node0.isEquivalentTo((Node) null, true, false, false);
      Node node1 = Node.newString(string0, node0.DIRECT_EVAL, node0.IS_NAMESPACE);
      node0.isBreak();
      node0.getProp(node1.SIDE_EFFECTS_FLAGS_MASK);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, (-841), 55);
      Node node1 = new Node((-510), node0, node0, node0, node0, 4095, 4095);
      node0.checkTreeEquals(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node(7576, 48, 1497);
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.isThrow();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node1.useSourceInfoIfMissingFrom(node2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node.newString("free_call");
      Node node3 = new Node(57, node2, node2, node2, (-3997), 46);
      Node node4 = new Node(51, node3);
      node2.getLength();
      node1.isDec();
      node2.getString();
      int int0 = 55;
      node2.getExistingIntProp(int0);
      node2.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newNumber((double) 61, 1298, 64);
      node0.hasChild(node0);
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(0.0, 77, 77);
      Node node1 = new Node(77, node0, node0, 2363, 308);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = node1.removeFirstChild();
      node2.isOptionalArg();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(110);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node3 = node1.useSourceInfoFrom(node0);
      node3.removeProp(39);
      node3.setString("ERROO_FUNCTION_TYPE");
      node3.isQuotedString();
      node0.isVoid();
      node1.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = new Node((-244));
      Node node1 = node0.cloneTree();
      node1.setOptionalArg(true);
      Node node2 = new Node((-244), node0);
      Node node3 = node2.srcref(node0);
      node3.putIntProp(1, 32);
      node0.getChangeTime();
      node1.getJsDocBuilderForNode();
      node2.siblings();
      node0.wasEmptyNode();
      Node node4 = new Node((-117), node1, 40, 49);
      node4.getChildCount();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node4.isComma();
      node0.isThrow();
      node1.isTrue();
      Node node5 = Node.newString("3&>[f+V6!6<");
      node4.setDouble(40);
      node5.isCast();
      node3.addChildrenToFront(node0);
      node5.isCase();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = node0.cloneTree();
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      node1.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node2 = Node.newString(29, "@xTsQ_EY");
      node_SideEffectFlags2.setThrows();
      Node node3 = node0.srcref(node2);
      node3.isStringKey();
      node3.isCatch();
      node1.getParent();
      node2.isFalse();
      node1.isDec();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      int int0 = (-244);
      Node node0 = Node.newString("", (-244), (-244));
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-244), node0);
      node0.isCall();
      Node node3 = node2.cloneTree();
      node1.getIntProp(13);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node4 = node3.setJSDocInfo(jSDocInfo0);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node4;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node3;
      nodeArray0[4] = node3;
      nodeArray0[5] = node3;
      Node node5 = new Node(53, nodeArray0);
      Node node6 = new Node(int0, nodeArray0[5]);
      int int1 = 154;
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newString("Dw_k?f8i");
      Node node1 = node0.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(124);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node0.mayMutateArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node1.isGetElem();
      Node node3 = Node.newString("Object#Element");
      node1.isInc();
      node3.wasEmptyNode();
      Node node4 = new Node(51, node3, node2, node3, 47, 12);
      node4.addChildToFront(node0);
      node3.mayMutateGlobalStateOrThrow();
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = Node.newString(29, "", 29, 29);
      node0.setSourceEncodedPosition(29);
      node0.wasEmptyNode();
      Node node1 = Node.newString(512, "");
      node0.isDebugger();
      node0.isVar();
      Node node2 = new Node(49, node1, node1, node0);
      node1.getStaticSourceFile();
      Node node3 = node2.getChildBefore(node0);
      node1.isNoSideEffectsCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.isIn();
      node0.getLength();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node1.removeChildAfter(node3);
      node3.setDirectives(linkedHashSet0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        node3.useSourceInfoFrom(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      int int0 = 16;
      String string0 = "";
      Node node0 = Node.newString(16, "", 16, 16);
      Node node1 = new Node(56, node0, node0, node0);
      node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.setLineno(16);
      node0.getQualifiedName();
      Node node3 = node1.useSourceInfoFrom(node2);
      int int1 = Node.REFLECTED_OBJECT;
      node2.setWasEmptyNode(false);
      node1.addChildrenToFront(node3);
      node0.removeChildAfter(node2);
      // Undeclared exception!
      try { 
        node3.getDouble();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newString((-244), "com.google.javascript.rhino.Node$SideEffectFlags");
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-244), node0);
      node0.isCall();
      node1.isContinue();
      node2.isGetProp();
      Node node3 = Node.newNumber((double) 32);
      node2.addChildAfter(node3, node0);
      Node node4 = new Node(265, node2, 8, 592);
      Node node5 = node0.useSourceInfoIfMissingFromForTree(node4);
      Node node6 = new Node(859, node0, node3, node3, node4);
      node5.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7576);
      node0.getDirectives();
      node0.setWasEmptyNode(false);
      Node.extractCharno(16);
      node0.isName();
      node0.isWhile();
      Node node1 = new Node((-2715), node0, 41, 3550);
      node0.addChildToFront(node1);
      node0.getProp(52);
      Node node2 = new Node((-2858));
      node0.replaceChild(node2, node2);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newString(29, "", 29, 29);
      node0.setSourceEncodedPosition(29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.newString("f\r#X eE");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.getLength();
      node0.isDec();
      node0.getString();
      node0.getExistingIntProp(36);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("z'KQ", 48, (-2864));
      Node node2 = node1.copyInformationFrom(node0);
      node1.isEquivalentTo(node2);
      node1.checkTreeEqualsImpl((Node) null);
      Node node3 = new Node(node2.INPUT_ID);
      int int0 = (-4292);
      node3.getIntProp(int0);
      node1.isDo();
      node2.isAssign();
      // Undeclared exception!
      try { 
        node3.getIndexOfChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newString(2245, "W%I=2mVooWda");
      node0.isSwitch();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = Node.newNumber((-566.804288), 2245, 2245);
      node1.isBlock();
      node1.setQuotedString();
      double double0 = 3033.55;
      Node node2 = Node.newNumber(double0);
      node2.isOnlyModifiesThisCall();
      Node node3 = node2.clonePropsFrom(node1);
      node3.getChangeTime();
      // Undeclared exception!
      try { 
        node1.srcref(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = Node.newString(56, "Object#Key", 56, 56);
      Node node1 = new Node(37, node0, 52, 36);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = new Node(50, node1, node1, 22, 32);
      Node node4 = new Node(56, node2, node3, node0, node2);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-926));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node0 = Node.newString("]>O");
      Node node1 = new Node(1055, node0, 30, 2213);
      Node node2 = new Node(3787, node1, node1);
      node2.isEquivalentTo(node0, false, false, false);
      node1.isInc();
      node0.isThis();
      Node node3 = Node.newString(40, "]>O");
      node3.isQuotedString();
      node3.getIntProp(1608);
      node3.isDebugger();
      node0.isNew();
      node3.isName();
      node2.addSuppression("]>O");
      node0.isAssignAdd();
      node2.getJSDocInfo();
      node2.removeChildAfter(node1);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node0.toString(true, true, true);
      node_SideEffectFlags3.setMutatesGlobalState();
      node0.isScript();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node1 = new Node(46, node0, node0, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node1.siblings();
      node2.isOr();
      node1.isGetProp();
      node2.isInstanceOf();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      Node.extractCharno(1808);
      node0.isName();
      node0.isWhile();
      Node node1 = new Node(3550, node0, 54, 2414);
      node0.addChildToFront(node1);
      node1.getProp(46);
      Node node2 = new Node(32);
      node0.replaceChild(node1, node2);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 83, 0);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node1 = new Node(118, node0, 8, (-3519));
      node0.getChildCount();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node1.isComma();
      node0.isThrow();
      node0.isTrue();
      Node node2 = Node.newString("3&>[f+V6!6<");
      node0.setDouble(995.23037341);
      node2.isCast();
      node0.addChildrenToFront(node2);
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = node0.cloneTree();
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      node1.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      Node node2 = new Node(2, node0, 1, 4095);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = new Node(40, node3, node3, node1, node2);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = new Node(3555, 432, 55);
      Node node1 = new Node(198, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Set<String> set0 = jSDocInfo0.getModifies();
      node1.setDirectives(set0);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node1 = new Node(46, node0, node0, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node1.siblings();
      node2.isOr();
      node1.removeChild(node0);
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newString("q&eV9>`n0\"'", 11, 551);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      Node node1 = new Node(105, node0, node0, node0, (-2695), 117);
      Node node2 = node0.srcref(node1);
      node0.isStringKey();
      node0.isCatch();
      Node node3 = node2.getParent();
      node0.isFalse();
      node0.isDec();
      node3.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7598);
      Node node1 = new Node(40, node0, node0, node0, node0);
      node1.isSyntheticBlock();
      node1.isLabel();
      node0.siblings();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      node1.isDo();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newNumber((double) 797, 797, 797);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(40, node0, node0, node0, 40, 0);
      Node node2 = Node.newString("#!X");
      node0.removeChildren();
      Node node3 = Node.newNumber(584.8902603212756, 1412, 32);
      node0.hasChild(node0);
      int int0 = Node.NO_SIDE_EFFECTS;
      node3.isAdd();
      node1.addChildBefore(node2, (Node) null);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = node0.cloneTree();
      node0.isEquivalentTo(node1);
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node1.isExprResult();
      node0.isDo();
      node0.removeChildAfter(node1);
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("z'KQ", 48, (-2864));
      Node node2 = node1.copyInformationFrom(node0);
      node1.isEquivalentTo(node2);
      Node node3 = new Node(53);
      node2.getIntProp(52);
      node3.isDo();
      node3.isAssign();
      node2.getIndexOfChild(node0);
      node2.isObjectLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) objectType0, (JSType) objectType0, (JSType) objectType0);
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node4.isTrue();
      node3.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newString(29, "", 29, 29);
      node0.setSourceEncodedPosition(29);
      node0.wasEmptyNode();
      node0.isDebugger();
      node0.isVar();
      Node node1 = new Node(49, node0, node0, node0);
      node0.getStaticSourceFile();
      Node node2 = node1.getChildBefore(node0);
      node0.isNoSideEffectsCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isIn();
      node0.getLength();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.removeChildAfter((Node) null);
      node2.setDirectives(linkedHashSet0);
      String string0 = "";
      int int0 = (-2626);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = new Node(159, 159, 159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      simpleErrorReporter0.warning("V|7J", "Vq6!H[QU", 159, 2);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSTypeRegistry0.declareType("", templateType0);
      node0.isContinue();
      node1.isNoSideEffectsCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isIn();
      node1.getLength();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node1.setDirectives(linkedHashSet0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.setString("var_args_name");
      node2.isQuotedString();
      node2.isVoid();
      node1.isVarArgs();
      node1.replaceChildAfter(node0, node0);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.setJSType((JSType) null);
      node0.type = 49;
      node0.getSourceFileName();
      node0.addChildrenToBack(node1);
      node1.getLength();
      node1.detachChildren();
      node0.addChildrenAfter(node1, node1);
      Node node2 = node1.getNext();
      // Undeclared exception!
      try { 
        node2.addChildrenToBack(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = Node.newString("", (-244), (-244));
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-244), node0);
      node0.isCall();
      Node node3 = new Node(48, node1);
      Node node4 = new Node(386, node2, node2);
      node0.isInc();
      node3.getInputId();
      node3.isNoSideEffectsCall();
      node4.isBlock();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newString(41, "com.google.common.collect.Iterators$MergingIterator");
      int int0 = 228;
      Node node1 = new Node((-732), node0, node0, node0, 4095, 228);
      node0.isSyntheticBlock();
      node1.putBooleanProp((-1702), true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node2 = node1.useSourceInfoFrom(node0);
      node0.getJsDocBuilderForNode();
      node2.getChangeTime();
      node1.isOnlyModifiesThisCall();
      node1.removeProp((-1542));
      node1.mayMutateGlobalStateOrThrow();
      node0.addChildrenAfter(node2, node1);
      node0.putIntProp(node1.REFLECTED_OBJECT, int0);
      node2.getJSDocInfo();
      node0.getChangeTime();
      node0.isThrow();
      node0.hasChild(node2);
      node2.isWith();
      node0.getLineno();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte) (-126);
      byteArray0[2] = (byte)6;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-34);
      byteArray0[5] = (byte) (-101);
      byteArray0[6] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " '/;?R\"&Gb:MWA9B-8");
      Node node0 = Node.newNumber((-1181.2732408484), (-2448), (-2448));
      Node node1 = Node.newNumber((double) 31);
      node0.setOptionalArg(true);
      Node node2 = Node.newString(";Eg@^@fJ#SC)U");
      node0.siblings();
      node0.getStaticSourceFile();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isFalse();
      node0.setDouble((-1.0));
      node1.getCharno();
      Node.extractLineno(46);
      node2.siblings();
      node1.getAncestors();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = Node.newString((-3444), "8F@VWO", 55, (-633));
      Node node1 = Node.newString((-277), "G=$U'(88Lhi2", 1, 54);
      Node node2 = node0.srcref(node1);
      node2.putIntProp(8, 57);
      node0.getChangeTime();
      node0.getJsDocBuilderForNode();
      node0.siblings();
      node0.wasEmptyNode();
      node0.getChildCount();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node3 = Node.newString("8F@VWO", 1852, 4);
      node2.isEquivalentTo(node3);
      Node node4 = new Node(2668);
      node3.getIntProp(48);
      node3.isDo();
      node3.isAssign();
      node2.getIndexOfChild(node3);
      node0.isObjectLit();
      node4.isLabelName();
      Node.extractCharno(15);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      int int0 = Node.COLUMN_MASK;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      node0.isComma();
      node0.isThrow();
      node0.isAnd();
      Node node1 = Node.newString("]Ej6O");
      Node node2 = new Node(31, node0, node0, (-293), 29);
      Node node3 = Node.newString("]Ej6O");
      node3.setDouble(48);
      node1.isCast();
      node2.addChildrenToFront(node3);
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = new Node(22);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.isSwitch();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Node node1 = Node.newNumber((double) 39);
      node1.isOnlyModifiesThisCall();
      node0.isFromExterns();
      node0.isAnd();
      node1.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      Node.extractCharno(1808);
      node0.isName();
      node0.isWhile();
      node0.srcref((Node) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      String string0 = "";
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7598);
      node0.getQualifiedName();
      node0.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node node1 = Node.newString((-576), "0D");
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      Node node2 = node1.srcref(node0);
      node1.isStringKey();
      node2.isCatch();
      node0.getParent();
      node2.isFalse();
      node2.isDec();
      node0.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("z'KQ", 48, (-2864));
      Node node2 = node1.copyInformationFrom(node0);
      node1.isEquivalentTo(node2);
      Node node3 = new Node(53);
      node3.getIntProp((-4292));
      node1.isDo();
      node2.isAssign();
      node3.getIndexOfChild(node1);
      node3.isObjectLit();
      node1.isDo();
      Node node4 = Node.newString(148, "z'KQ");
      node4.isAssign();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.cloneNode();
      node0.toStringTree();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[5];
      node0.appendStringTree((Appendable) null);
      byte byte0 = (byte)9;
      byteArray0[0] = byte0;
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7598);
      node0.isSyntheticBlock();
      node0.isContinue();
      node0.isGetProp();
      node0.setOptionalArg(true);
      node0.isEquivalentTo(node0, false, true, false);
      Node node1 = Node.newString("", 48, 36);
      node1.isBreak();
      node0.getProp(7598);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber(39.353192634723754, 4614, 4614);
      node0.getLength();
      Node node1 = new Node(15, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.valueOf();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node0.toString(false, true, true);
      node1.isScript();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node2 = Node.newString("NUMBER 39.353192634723754", 1, 303);
      Node node3 = node0.copyInformationFrom(node2);
      node0.siblings();
      node3.isOr();
      node0.isGetProp();
      node0.isInstanceOf();
      node2.isFunction();
      node3.checkTreeEqualsImpl(node0);
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(159, 159, 159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      simpleErrorReporter0.warning("V|7J", "Vq6!H[QU", 159, 2);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSTypeRegistry0.declareType("", templateType0);
      node0.isContinue();
      node1.getJSType();
      int int0 = Node.REFLECTED_OBJECT;
      node1.isRegExp();
      node1.isAssign();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isEquivalentToTyped(node1);
      node1.isQualifiedName();
      node0.getLastSibling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node3 = Node.newString(51, "Named type with empty name component", 42, 2855);
      Node node4 = new Node(1, node2);
      node4.useSourceInfoIfMissingFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newString((-577), "", (-577), 1119);
      Node node1 = new Node(2, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isTry();
      node1.copyInformationFromForTree(node0);
      node0.setQuotedString();
      node0.isStringKey();
      node1.isWith();
      node1.isNull();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-1041), (-2754));
      Node node1 = new Node(114, node0);
      node1.isCatch();
      Node node2 = node0.getParent();
      node1.isFalse();
      node0.isDec();
      node2.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = Node.newString(29, "", 29, 29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node node1 = Node.newNumber((-625.97));
      node0.isEquivalentTo(node1, false, false, true);
      Node node2 = new Node(32);
      node2.isInc();
      node0.isThis();
      Node node3 = Node.newString(7598, "");
      node0.isQuotedString();
      node1.getIntProp(4095);
      node2.isDebugger();
      Node node4 = new Node(31, node1, 51, 16);
      node4.isNew();
      node3.isName();
      node4.addSuppression("");
      node3.isAssignAdd();
      node3.getJSDocInfo();
      node1.removeChildAfter(node0);
      node0.isOptionalArg();
      node4.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7576);
      node0.getDirectives();
      node0.setWasEmptyNode(false);
      Node.extractCharno(16);
      node0.setChangeTime(120);
      node0.isName();
      node0.isWhile();
      Node node1 = new Node(3473, node0);
      Node node2 = node0.srcref(node1);
      node1.isStringKey();
      node1.isCatch();
      Node node3 = node2.getParent();
      node0.isFalse();
      node3.isDec();
      node3.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newString((-577), "", (-577), 1119);
      Node node1 = new Node(32, node0, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isTry();
      node1.copyInformationFromForTree(node0);
      node0.setQuotedString();
      node0.isStringKey();
      node1.isWith();
      node1.isNull();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = new Node(83);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node node1 = Node.newString(0, ":/3/J\"Dk\"4:", (-2156), 1838);
      Node node2 = new Node(47, node1, node0);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isTry();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":/3/J\"Dk\"4:");
      Node node4 = node1.copyInformationFromForTree(node3);
      node1.setQuotedString();
      node2.isStringKey();
      node2.isWith();
      node4.setType(50);
      node3.isNull();
      node4.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node1 = new Node(46, node0, node0, node0, node0);
      node1.type = 32;
      Node node2 = node1.copyInformationFrom(node0);
      node1.siblings();
      node2.isOr();
      node1.isGetProp();
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7598);
      Node node1 = new Node(40, node0, node0, node0, node0);
      node0.isContinue();
      node0.isGetProp();
      node0.setOptionalArg(true);
      node1.isThrow();
      node1.useSourceInfoFrom(node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = new Node(63);
      node2.isTrue();
      String string0 = null;
      Node node3 = Node.newString((String) null);
      double double0 = 812.0;
      node2.setDouble(double0);
      node1.isNE();
      node3.addChildrenToFront(node0);
      Node node4 = Node.newString(string0);
      // Undeclared exception!
      try { 
        node4.isCase();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = new Node(159, 159, 159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      simpleErrorReporter0.warning("V|7J", "Vq6!H[QU", 159, 2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.isContinue();
      node1.getJSType();
      int int0 = Node.INCRDECR_PROP;
      node1.isRegExp();
      node1.isAssign();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isEquivalentToTyped(node1);
      node1.isQualifiedName();
      Node node3 = node0.getLastSibling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.mergeLineCharNo((-1140), 38);
      node3.isScript();
      node2.isFromExterns();
      node0.isExprResult();
      node2.srcref(node3);
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = new Node(83);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newString(42, "");
      Node node2 = new Node(57, node0, 0, 29);
      node1.getChildCount();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = node2.removeFirstChild();
      node2.isReturn();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      int int0 = (-1423);
      Node node4 = new Node(29, nodeArray0, (-234), (-1423));
      Node node5 = new Node(53, nodeArray0);
      Node node6 = new Node(node2.SIDE_EFFECT_FLAGS, node4, nodeArray0[0], node5, node3);
      node0.setSideEffectFlags(int0);
      nodeArray0[0].isWhile();
      node4.isNE();
      nodeArray0[0].isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      int int0 = (-1097);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "?\"\\)8.\"mfv:n~eU:";
      int int1 = 111;
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString(111, "C)QO", 65, (-1097));
      nodeArray0[0] = node0;
      JSType[] jSTypeArray0 = new JSType[3];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.REGEXP_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry1.getNativeObjectType(jSTypeNative0);
      JSType jSType0 = jSTypeRegistry1.createOptionalType(objectType0);
      JSType jSType1 = jSTypeRegistry0.createDefaultObjectUnion(jSType0);
      jSTypeArray0[0] = jSType1;
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of();
      FunctionType functionType0 = jSTypeRegistry1.createInterfaceType("\n\nSubtree2: ", node0, immutableList0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, functionType0);
      jSTypeArray0[1] = (JSType) functionType1;
      FunctionType functionType2 = jSTypeRegistry0.createFunctionType(jSTypeArray0[1], node0);
      jSTypeArray0[2] = (JSType) functionType2;
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = new Node((-67));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newString((-2348), "empty_block");
      Node node2 = new Node((-110));
      Node node3 = new Node(87, node2, 54, (-3444));
      node3.getChildCount();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node4 = node3.removeFirstChild();
      node2.isReturn();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node4;
      Node node5 = new Node(15, nodeArray0, (-590), 40);
      Node node6 = new Node(38, nodeArray0);
      Node node7 = new Node(node2.DECR_FLAG, node3, node4, nodeArray0[0], node2);
      node1.setSideEffectFlags(node3.FLAG_NO_THROWS);
      nodeArray0[0].isWhile();
      node0.isNE();
      node1.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      int int0 = 16;
      String string0 = "";
      Node node0 = Node.newString(16, "", 16, 16);
      Node node1 = new Node(56, node0, node0, node0);
      node0.isLocalResultCall();
      Node node2 = Node.newString(47, "", 50, 51);
      node0.setLineno(16);
      node0.getQualifiedName();
      int int1 = Node.REFLECTED_OBJECT;
      node2.setWasEmptyNode(false);
      node1.addChildrenToFront(node1);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node0 = Node.newString("]>O");
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(4);
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      int int0 = Node.LAST_PROP;
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node0.toString(false, true, false);
      node0.isScript();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("]>O", 88, 303);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = new Node((-2445), node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = new Node(590);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setThrows();
      node0.getStaticSourceFile();
      node0.isContinue();
      node0.isIf();
      node0.isInc();
      Node node1 = Node.newString(0, "");
      Node node2 = node1.getAncestor(12);
      Node node3 = new Node(2371);
      node0.isArrayLit();
      Node node4 = new Node(1, (Node) null, node0, 39, 38);
      node2.replaceChild(node0, node4);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node0 = Node.newString((-165), "<]Olm%ronuV|t8", (-2113), 1065);
      node0.isContinue();
      node0.getJSType();
      int int0 = Node.INCRDECR_PROP;
      node0.isRegExp();
      node0.isAssign();
      Node node1 = node0.useSourceInfoIfMissingFromForTree((Node) null);
      node0.isEquivalentToTyped(node1);
      node1.isQualifiedName();
      node0.getLastSibling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int1 = (-1483);
      int int2 = 760;
      Node.mergeLineCharNo(int1, int2);
      node1.isScript();
      int int3 = (-1174);
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = new Node(159, 159, 159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      node0.addChildBefore(node1, node1);
      SimpleErrorReporter simpleErrorReporter1 = null;
      try {
        simpleErrorReporter1 = new SimpleErrorReporter();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newNumber((double) 812, 3473, 7598);
      Node node1 = new Node(40, node0, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(46);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags7.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.valueOf();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags5.clearAllFlags();
      node1.isScript();
      node_SideEffectFlags6.clearSideEffectFlags();
      Node node2 = Node.newString("", 943, 132);
      node0.isEquivalentTo(node1);
      Node node3 = new Node(30);
      node3.getIntProp((-1308));
      node3.isDo();
      node3.isAssign();
      Node node4 = new Node(384, node1, node1, node2, 37, 57);
      node4.getIndexOfChild(node3);
      node0.isObjectLit();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newString(32, "", 32, 32);
      node0.setSourceEncodedPosition(32);
      node0.wasEmptyNode();
      Node node1 = new Node(50, node0, 4, 32);
      node0.isDebugger();
      node0.isVar();
      Node node2 = new Node(49, node1, node1, node0);
      node1.getStaticSourceFile();
      node2.getChildBefore(node0);
      // Undeclared exception!
      try { 
        node1.isNoSideEffectsCall();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 64, 0);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node1 = Node.newString("Xt]I{~v>", 4095, 46);
      node0.isContinue();
      node0.isGetProp();
      node0.isEquivalentTo(node0, false, false, false);
      Node node2 = new Node(30, node0);
      node2.isEquivalentToShallow(node0);
      node0.isFor();
      node1.isNot();
      node1.addChildToFront(node0);
      node2.toString();
      node0.isQuotedString();
      node1.isVoid();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = node0.cloneTree();
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      node1.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node2 = new Node(4, node1, node0, node1, node0);
      node2.copyInformationFrom(node1);
      node1.siblings();
      node0.isOr();
      node0.isGetProp();
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node node0 = new Node((-2587), 5474, 1633);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(1.0);
      node0.isLabel();
      node0.isDelProp();
      node0.siblings();
      Node node1 = null;
      node0.addChildrenToBack((Node) null);
      String string0 = "9HK:5V{:J*ih{&H%9? ";
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newString(29, "", 29, 29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node node1 = Node.newNumber((-625.97));
      node0.isEquivalentTo(node1, false, false, true);
      Node node2 = new Node(32);
      node2.isInc();
      node0.isThis();
      Node node3 = Node.newString(7598, "/");
      node0.isQuotedString();
      node1.getIntProp(4095);
      node2.isDebugger();
      Node node4 = new Node(31, node1, 51, 16);
      node4.isNew();
      node3.isName();
      node4.clonePropsFrom(node1);
      node4.addSuppression("");
      node3.getJSDocInfo();
      node1.removeChildAfter(node0);
      node0.isOptionalArg();
      node4.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = new Node(159, 159, 159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      node0.addChildToBack(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node node1 = node0.srcref(node0);
      node_SideEffectFlags1.clearAllFlags();
      node0.getIntProp(53);
      node0.isDo();
      node1.isAssign();
      node0.getIndexOfChild(node1);
      node1.isObjectLit();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = new Node(159, 159, 159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      simpleErrorReporter0.warning("V|7J", "Vq6!H[QU", 159, 2);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSTypeRegistry0.declareType("", templateType0);
      node0.isContinue();
      node1.getJSType();
      int int0 = Node.REFLECTED_OBJECT;
      node1.isRegExp();
      node1.isOptionalArg();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isEquivalentToTyped(node1);
      node1.isQualifiedName();
      Node node3 = node1.getLastSibling();
      node3.useSourceInfoIfMissingFrom(node1);
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      node1.isWhile();
      node1.isEquivalentToShallow(node2);
      Node node4 = Node.newString(51, "");
      node4.isDo();
      node4.isRegExp();
      node2.getIndexOfChild(node4);
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newNumber((-769.23264581473), 86, 7598);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(154);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node1 = new Node(1780, node0, 1923, 57);
      node0.getChildCount();
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.isComma();
      node1.isThrow();
      node0.isTrue();
      Node node2 = Node.newString("3&>[f+V6!6<");
      node0.setDouble(40);
      node2.isCast();
      node2.addChildrenToFront(node1);
      node1.isCase();
      node1.cloneTree();
      node1.addChildrenAfter(node0, node0);
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Node node1 = Node.newString("Object#Key");
      node1.isThis();
      node0.isDebugger();
      node1.putIntProp(55, 39);
      Node.newNumber((double) 39);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Object#Key");
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node0.setChangeTime(42);
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node1 = new Node(46, node0, node0, node0, node0);
      node1.type = 32;
      Node node2 = node1.copyInformationFrom(node0);
      node1.siblings();
      node2.isOr();
      node1.isGetProp();
      node2.isInstanceOf();
      node2.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-1041), (-2761));
      Node node1 = new Node(114, node0);
      node0.getIntProp((-2394));
      node1.isDo();
      node1.isAssign();
      Node node2 = new Node(51, node0, node1, node1, 51, 57);
      double double0 = 0.7;
      Node node3 = Node.newNumber(double0);
      node3.isQuotedString();
      String string0 = "";
      Node node4 = Node.newString(node0.FLAG_LOCAL_RESULTS, string0, node0.DECR_FLAG, node1.FLAG_NO_THROWS);
      // Undeclared exception!
      try { 
        node2.getIndexOfChild(node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      Node node1 = node0.cloneTree();
      node1.setOptionalArg(true);
      Node node2 = new Node((-244), node0);
      node0.isCall();
      node2.getProp(51);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.hasOneChild();
      node0.isFalse();
      node0.isDec();
      node1.isFromExterns();
      node2.isTypeOf();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = new Node(590);
      node0.isDebugger();
      node0.isVar();
      Node node1 = node0.detachFromParent();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-1041), (-2754));
      node0.isQualifiedName();
      Node node1 = new Node(114, node0);
      String string0 = "com.google.javascript.rhino.Node$AbstractPropListItem";
      node1.addChildToBack(node0);
      Node.newString(string0);
      Node node2 = new Node(node0.EMPTY_BLOCK);
      node1.replaceChild(node0, node0);
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = new Node(83);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      Node node1 = Node.newString(42, "");
      Node node2 = new Node(57, node0, 0, 29);
      node1.getChildCount();
      node2.cloneNode();
      node0.isComma();
      node2.isEquivalentTo(node0, false, false, true);
      Node node3 = Node.newString("", 2, 38);
      node1.isBreak();
      node3.getProp(52);
      node3.cloneNode();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.type = 100;
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      int int0 = Node.ORIGINALNAME_PROP;
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node0.setIsSyntheticBlock(true);
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("z'KQ", 48, (-2864));
      Node node2 = node1.copyInformationFrom(node0);
      node1.isEquivalentTo(node2);
      Node node3 = new Node(53);
      node1.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node3.setSideEffectFlags(node_SideEffectFlags5);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-244), node0);
      node0.isCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.hasOneChild();
      node1.isInc();
      Node node3 = Node.newString(51, "ASSIGN_MUL");
      node1.getAncestor(42);
      node3.isArrayLit();
      node3.isName();
      node1.checkTreeTypeAwareEqualsImpl((Node) null);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newString(110, "]>eL35r^}=\"gp+V%}f");
      Node node1 = new Node(110, node0, node0);
      node1.isDefaultCase();
      node1.setLength(36);
      node0.setQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("]>eL35r^}=\"gp+V%}f", "V|7J", 54, 44);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      node1.isContinue();
      node0.getJSType();
      int int0 = Node.INCRDECR_PROP;
      node0.isRegExp();
      node0.isRegExp();
      node1.isAssign();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isQualifiedName();
      Node node2 = node1.getLastSibling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.areAllFlagsSet();
      Node.newString(46, "Not declared as a constructor", (-338), (-1479));
      Node node3 = new Node(50, node1);
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-1041), (-2761));
      Node node1 = new Node(114, node0);
      Node node2 = new Node(60);
      node2.setSideEffectFlags((Node.SideEffectFlags) null);
      node1.replaceChild(node0, node2);
      String string0 = "";
      int int0 = 1048576;
      int int1 = (-634);
      Node.newString(string0, int0, int1);
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node0 = Node.newString("]>O");
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(4);
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      int int0 = Node.LAST_PROP;
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node0.toString(false, true, false);
      node0.isScript();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node.newString("]>O", 88, 303);
      node0.getStaticSourceFile();
      Node node1 = Node.newString(55, "STRING ]>O", 37, 4194304);
      Node node2 = new Node(390, node1);
      node2.useSourceInfoIfMissingFromForTree(node1);
      node2.isParamList();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newNumber((-696.664286870786), (-965), 152);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(33, 50, 54);
      node1.hasMoreThanOneChild();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags((-1608));
      node_SideEffectFlags0.clearAllFlags();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.isOr();
      node0.isDec();
      node2.isGetterDef();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = node0.cloneTree();
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      node1.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesGlobalState();
      node0.toString(false, true, true);
      node1.isScript();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node2 = Node.newString("Ga|tKgi2m", 53, 2309);
      Node node3 = node1.copyInformationFrom(node2);
      node1.isEquivalentTo(node2);
      Node node4 = new Node(4);
      Node node5 = Node.newNumber((double) 55);
      Node node6 = new Node(12, node5, node0, node3);
      node6.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node1.setSideEffectFlags(node_SideEffectFlags2);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = new Node(83);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.JSTypeRegistry");
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(54);
      Node node2 = new Node(90, node1, node0, 16, 100);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = node2.removeFirstChild();
      node2.isReturn();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      nodeArray0[3] = node3;
      Node node4 = new Node(32, nodeArray0, 4371, 51);
      int int0 = (-1041);
      Node node5 = new Node(int0, nodeArray0[1], nodeArray0[0], nodeArray0[0], nodeArray0[2]);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      node2.isEmpty();
      nodeArray0[0].checkTreeEqualsImpl(nodeArray0[2]);
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      int int0 = 8232;
      Node node0 = Node.newString(8232, "collection too large", (-4096), 8232);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "collection too large");
      node0.copyInformationFromForTree((Node) null);
      Node node1 = new Node(int0, node0, node0, node0, node0.SLASH_V, node0.DECR_FLAG);
      String string0 = null;
      // Undeclared exception!
      try { 
        FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4614, (-841), 4614);
      node0.getLength();
      Node node1 = new Node(31, node0);
      node0.isEquivalentTo(node1);
      node0.siblings();
      Node node2 = Node.newString("FALSE", (-841), 2);
      node2.isContinue();
      node2.isGetProp();
      node2.isEquivalentTo(node0, false, false, false);
      Node node3 = Node.newString("FALSE", 33, 1);
      Node node4 = node1.copyInformationFrom(node2);
      node3.isEquivalentTo(node2);
      Node node5 = new Node((-306));
      Node node6 = Node.newNumber((double) 48);
      Node node7 = Node.newString("FALSE");
      Node node8 = new Node(8, node5, node7, node7);
      node2.getQualifiedName();
      node6.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node4.setSideEffectFlags(node_SideEffectFlags0);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      Node.newNumber((double) node5.VAR_ARGS_NAME);
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = new Node(159, 159, 159);
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      node0.addChildBefore(node1, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags(node1.IS_CONSTANT_NAME);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node(279, node0);
      node1.removeFirstChild();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node2 = new Node(4840, node1, node0);
      node2.getChangeTime();
      node0.detachFromParent();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newString((-14), "", 712, 2969);
      node0.setWasEmptyNode(false);
      node0.isNE();
      node0.setString("`Jg1Aas");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      boolean boolean0 = true;
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true, "`Jg1Aas");
      char char0 = '?';
      PrintStream printStream0 = mockPrintStream0.append(char0);
      node0.appendStringTree(printStream0);
      node0.mayMutateArguments();
      node0.mayMutateGlobalStateOrThrow();
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean0);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // `Jg1Aas
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = new Node(159, 159, 159);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildToBack(node1);
      simpleErrorReporter0.warning("V|7J", "Vq6!H[QU", 159, 2);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSTypeRegistry0.declareType("", templateType0);
      node0.isContinue();
      node1.getJSType();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isTry();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\n\nSubtree2: ");
      node2.copyInformationFromForTree(node1);
      node2.hasMoreThanOneChild();
      node1.isWith();
      node2.isNull();
      node2.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = new Node(83);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node node1 = Node.newString(0, ":/3/J\"Dk\"4:", (-2156), 1838);
      Node node2 = new Node(47, node1, node0);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isTry();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":/3/J\"Dk\"4:");
      Node node4 = node1.copyInformationFromForTree(node3);
      node0.hasMoreThanOneChild();
      node2.isWith();
      node3.isNull();
      node4.isQuotedString();
      node2.getLineno();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = Node.newNumber((double) 83, 83, 1826);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(154);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags6.valueOf();
      node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags((-2495));
      node_SideEffectFlags7.clearAllFlags();
      node0.toString(false, false, false);
      node0.isScript();
      Node node1 = new Node(55, node0, node0, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node0.siblings();
      node0.isOr();
      Node node3 = new Node(55);
      node3.isGetProp();
      node2.isInstanceOf();
      node0.isParamList();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = new Node(36, node0, node0, node0, node0, 0, 47);
      node0.isThis();
      Node node2 = Node.newString(12, "");
      node2.isQuotedString();
      node1.getIntProp(36);
      node0.isDebugger();
      Node node3 = new Node(43, node1, 42, 30);
      node3.getJSDocInfo();
      node3.isNew();
      node0.isName();
      Node.newString("", 4, 38);
      node0.removeProp(281);
      node0.isFunction();
      node2.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = Node.newString("M1[", 1084, 1084);
      node0.getString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.clearAllFlags();
      node0.toString(false, false, true);
      node0.isScript();
      Node node1 = new Node(39, node0, node0, node0, node0);
      node1.copyInformationFrom(node0);
      Node node2 = new Node(309, node0, node0, (-3093), 733);
      node2.siblings();
      node1.isOr();
      int int0 = (-4010);
      Node node3 = new Node(int0);
      node0.isGetProp();
      node2.isInstanceOf();
      node1.isParamList();
      node3.getChildCount();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(3031, node0, node0, node0, node0);
      node0.isDelProp();
      node0.isContinue();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.isGetProp();
      node1.isEquivalentTo(node2, true, true, true);
      Node node3 = node1.removeChildAfter(node2);
      int int0 = 111;
      Node node4 = new Node(int0);
      node4.isNoSideEffectsCall();
      node3.isCatch();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newString(110, "]>eL35r^}=\"gp+V%}f");
      Node node1 = new Node(110, node0, node0);
      node1.isDefaultCase();
      node1.setLength(36);
      node0.setQuotedString();
      JSDocInfo jSDocInfo0 = node1.getJSDocInfo();
      node1.getJSType();
      int int0 = Node.INCRDECR_PROP;
      node0.isRegExp();
      node1.isRegExp();
      node1.isAssign();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      String string0 = "0\u0660\u06F0\u07C0\u0966\u09E6\u0A66\u0AE6\u0B66\u0BE6\u0C66\u0CE6\u0D66\u0E50\u0ED0\u0F20\u1040\u1090\u17E0\u1810\u1946\u19D0\u1B50\u1BB0\u1C40\u1C50\uA620\uA8D0\uA900\uAA50\uFF10";
      Node node3 = Node.newString("0\u0660\u06F0\u07C0\u0966\u09E6\u0A66\u0AE6\u0B66\u0BE6\u0C66\u0CE6\u0D66\u0E50\u0ED0\u0F20\u1040\u1090\u17E0\u1810\u1946\u19D0\u1B50\u1BB0\u1C40\u1C50\uA620\uA8D0\uA900\uAA50\uFF10");
      node2.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-351));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node0.toString(false, true, false);
      node0.isScript();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node4 = new Node(141, node1, node1, node0, node3);
      Node node5 = node2.copyInformationFrom(node1);
      node4.siblings();
      node4.isBlock();
      Node node6 = new Node(node4.DECR_FLAG, node5, node4);
      Node node7 = new Node(node0.COLUMN_BITS, node4, node4, node6);
      // Undeclared exception!
      try { 
        jSDocInfo0.getAssociatedNode();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 83, 0);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node1 = new Node(118, node0, 8, (-3519));
      node0.getChildCount();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node1.isComma();
      node0.getBooleanProp(326);
      node0.getDouble();
      node0.getBooleanProp(159);
      node1.isComma();
      node0.toString(false, false, false);
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newString(16, "", 16, 16);
      Node node1 = new Node(56, node0, node0, node0);
      node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.setLineno(16);
      node0.getQualifiedName();
      Node node3 = node1.useSourceInfoFrom(node2);
      int int0 = Node.REFLECTED_OBJECT;
      node2.setWasEmptyNode(false);
      node1.useSourceInfoIfMissingFrom(node3);
      node1.addChildrenToFront(node3);
      Node node4 = node0.removeChildAfter(node2);
      int int1 = 53;
      // Undeclared exception!
      try { 
        node4.putIntProp(int1, node3.OPT_ARG_NAME);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      String string0 = "#E[r!5uVO]\\";
      Node node0 = Node.newString((-893), "#E[r!5uVO]");
      Node node1 = new Node(8, node0);
      node0.isNull();
      Node node2 = null;
      node1.hasChild((Node) null);
      node1.getDouble();
      int int0 = (-2465);
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "not a StringNode");
      Node node0 = Node.newString((-1535), "]>|E3[W7~h|Ma)`#q");
      Node node1 = new Node((-1535), node0, 56, (-1223));
      node1.isLocalResultCall();
      node1.getProp(53);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Object object0 = new Object();
      node2.putProp((-951), object0);
      node2.toString();
      node0.useSourceInfoIfMissingFrom(node1);
      boolean boolean0 = true;
      boolean boolean1 = false;
      boolean boolean2 = true;
      node2.getDirectives();
      // Undeclared exception!
      try { 
        node2.isEquivalentTo(node0, boolean0, boolean1, boolean2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1535
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newNumber((double) 797, 797, 797);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(40, node0, node0, node0, 40, 0);
      Node node2 = Node.newString("#!X");
      node0.removeChildren();
      Node node3 = new Node(2, node2, 56, 54);
      node0.hasChild(node0);
      int int0 = Node.NO_SIDE_EFFECTS;
      node3.isAdd();
      node1.addChildBefore(node2, (Node) null);
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node0.setChangeTime(42);
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node1 = new Node(46, node0, node0, node0, node0);
      node1.type = 32;
      Node node2 = node1.copyInformationFrom(node0);
      node1.siblings();
      node2.isOr();
      node1.isGetProp();
      node2.isInstanceOf();
      node2.addChildToFront(node1);
      node1.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-821));
      Node node1 = new Node((-510), node0, node0, node0, node0, 4095, 4095);
      Node node2 = Node.newString("*/Wm");
      node2.isQualifiedName();
      node2.getBooleanProp(51);
      node0.getDouble();
      node2.getBooleanProp(46);
      node0.isComma();
      node1.toString(false, false, false);
      String string0 = "";
      Node.newString(string0);
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = node0.cloneTree();
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      node1.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node2 = Node.newString(29, "@xTsQ_EY");
      node1.isEquivalentTo(node0);
      Node node3 = new Node((-2344));
      node1.getIntProp(47);
      node3.isDo();
      node2.isAssign();
      Node node4 = new Node(1, node1, node2, node2, 1910, (-1308));
      String string0 = "SETTER_DEF";
      boolean boolean0 = false;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0, boolean0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      node4.appendStringTree(mockPrintWriter0);
      Node node5 = Node.newNumber((double) node0.SLASH_V);
      node5.getIndexOfChild(node4);
      node5.isObjectLit();
      node0.isLabelName();
      node1.getInputId();
      node5.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newString(110, "]>eL35r^}=\"gp+V%}f");
      Node node1 = new Node(110, node0, node0);
      node1.isDefaultCase();
      node1.setLength(36);
      node0.setQuotedString();
      node1.getJSDocInfo();
      node0.isEquivalentTo(node1, false, false, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node node2 = node1.srcref(node0);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node1.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node2.setSideEffectFlags(node_SideEffectFlags3);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = new Node(1, 8233, 8233);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(4095, nodeArray0, 49, 126);
      Node node2 = new Node(8233, node0, node1, 2167, 159);
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4614, (-841), 4614);
      node0.getLength();
      Node node1 = new Node(31, node0);
      node0.isEquivalentTo(node1);
      Node node2 = new Node(1, node1, (-660), 39);
      node1.getChildCount();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node1.isComma();
      node2.isThrow();
      node2.isTrue();
      Node.newString("3&>[f+V6!6<");
      node0.setDouble(47);
      node2.isCast();
      node2.addChildrenToFront(node0);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newString(110, "]>eL35r^}=\"gp+V%}f");
      Node node1 = new Node(110, node0, node0);
      node1.isDefaultCase();
      node1.setLength(36);
      node0.setQuotedString();
      node1.getJSDocInfo();
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.getLastSibling();
      node2.setSourceEncodedPosition(29);
      node2.addChildrenToBack(node1);
      node2.getDirectives();
      node1.isInc();
      Node node3 = new Node((-813));
      node3.setLineno(29);
      node3.useSourceInfoFrom(node0);
      node3.isAnd();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newNumber((double) 83, 83, 1826);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(154);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags5.valueOf();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags((-2495));
      node_SideEffectFlags6.setThrows();
      node_SideEffectFlags6.clearAllFlags();
      node0.toString(false, false, false);
      node0.isScript();
      Node node1 = new Node(55, node0, node0, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node0.siblings();
      node0.isOr();
      Node node3 = new Node(55);
      node3.isGetProp();
      node2.isInstanceOf();
      node0.isRegExp();
      node0.getChildAtIndex(36);
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = node0.cloneTree();
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      node0.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.newString(29, "@xTsQ_EY");
      Node node2 = Node.newString(1365, "=changetime");
      Node node3 = Node.newString("W |J", 4, 46);
      node3.getAncestor(36);
      node3.isArrayLit();
      node2.isName();
      node2.isCast();
      node0.siblings();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node0 = Node.newString("%>-");
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(4);
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      int int0 = Node.LAST_PROP;
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node0.toString(false, true, false);
      node0.isScript();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("STRING %>-", 54, 49);
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = new Node(42, 36, 4);
      Node node3 = new Node(38, node2);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2480));
      Node node1 = node0.cloneTree();
      node1.setIsSyntheticBlock(true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("SYNTAX_ERROR_FUNCTION_TYPE");
      jSTypeRegistry0.declareType("=changetime", templateType0);
      node0.isContinue();
      node0.getJSType();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isTry();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".X");
      node0.copyInformationFromForTree(node1);
      node0.hasMoreThanOneChild();
      node2.isWith();
      node0.isNull();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      node0.isScript();
      Node node1 = Node.newString("]Ej6O", 48, (-2864));
      node1.isEquivalentTo(node0);
      Node node2 = new Node(53);
      node0.isQuotedString();
      node0.getIntProp((-2928));
      node2.isDebugger();
      Node node3 = new Node(4095, node2, 1102, 49);
      Node node4 = Node.newNumber((double) 37, 295, 49);
      node4.isNew();
      node1.isName();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node5 = new Node(36, node4, node1, node4, node0, 31, 30);
      node4.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = new Node(102);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString(4095, "dt^=_G9T,M6w");
      Node node2 = new Node(39, node1, node1);
      node1.addChildrenToFront(node0);
      node0.getSourceOffset();
      node0.isLabel();
      node0.isCall();
      Node node3 = node2.srcref(node1);
      node1.isStringKey();
      node3.isCatch();
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      node1.isGetterDef();
      node2.getString();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(3031, node0, node0, node0, node0);
      node0.isDelProp();
      node0.isContinue();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.isGetProp();
      node1.isEquivalentTo(node2, false, true, true);
      Node node3 = node1.removeChildAfter(node2);
      int int0 = 111;
      Node node4 = new Node(int0);
      node4.isNoSideEffectsCall();
      // Undeclared exception!
      try { 
        node3.isCatch();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 1801, (-965));
      int int0 = Node.SYNTHETIC_BLOCK_PROP;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(53, 117, 42);
      Node node2 = new Node(32, node1, node0);
      node2.copyInformationFromForTree(node1);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.isIn();
      node0.putIntProp(4096, 54);
      node0.isName();
      node1.isVarArgs();
      node2.isVar();
      node1.isFor();
      node0.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newString(86, "\"+k97_s", 86, 3537);
      node0.getString();
      node0.addChildrenAfter((Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4614, (-841), 4614);
      node0.getLength();
      Node node1 = new Node(31, node0);
      node0.detachChildren();
      node0.isEquivalentTo(node1);
      node0.siblings();
      Node node2 = Node.newString("FALSE", (-841), 2);
      node2.isString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("STRING %>-");
      node_FileLevelJsDocBuilder0.append("length");
      node1.getProp(32);
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2480));
      Node node1 = node0.cloneTree();
      node1.getQualifiedName();
      node1.isFor();
      node0.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node2 = Node.newString("=changetime", 2, (-1434));
      Node node3 = node2.srcref(node0);
      node3.isAnd();
      node3.isCatch();
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      node1.isGetterDef();
      node0.getString();
      Node.extractLineno((-821));
      node2.getBooleanProp(77);
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = node0.cloneTree();
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      node1.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isEquivalentTo(node0, true, true, false);
      Node node2 = new Node(3057);
      node2.isInc();
      node0.isThis();
      Node node3 = Node.newString(50, "w4+H\"6'`1g<");
      node1.isQuotedString();
      node0.getIntProp(4095);
      node1.isDebugger();
      Node node4 = new Node(30, node3, (-2224), 52);
      node4.isNew();
      node1.isName();
      node4.setStaticSourceFile((StaticSourceFile) null);
      Node node5 = new Node(38, node3);
      node5.checkTreeTypeAwareEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = new Node(590);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node1.siblings();
      node1.getLength();
      Node node2 = Node.newString("STRING %>-", 16, 46);
      node1.isContinue();
      node1.isAdd();
      Node node3 = new Node(19, 38, 1918);
      node3.isEquivalentToShallow(node1);
      node2.isFor();
      node3.isNot();
      node3.addChildToFront(node0);
      node1.toString();
      node2.isQuotedString();
      node0.isVoid();
      node2.isVarArgs();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.isAnd();
      node0.isAssignAdd();
      node0.putIntProp((-97), 31);
      node0.isOnlyModifiesThisCall();
      node0.isCase();
      node0.getIndexOfChild((Node) null);
      node0.addChildToBack((Node) null);
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = new Node(83, 83, 83);
      Node node1 = Node.newString("dt^=_G9T,M6w", 40, 54);
      Node node2 = new Node(1073741824, node0, node0);
      node1.isNoSideEffectsCall();
      node0.putIntProp(4095, 1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.isName();
      Node node3 = new Node(46, node1, 1073741824, 115);
      Node.newNumber((double) 4095);
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeEqualsImpl(node3);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      node_NodeMismatch0.equals(locale_Category0);
      Node node4 = node2.clonePropsFrom(node0);
      node4.removeChildren();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.isAnd();
      node0.isAssignAdd();
      node0.putIntProp((-97), 31);
      int int0 = 6;
      node0.removeProp(6);
      node0.toStringTree();
      node0.isFunction();
      node0.isArrayLit();
      node0.removeProp(int0);
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      String string0 = "]>eL35r^}=\"gp+V%}f";
      Node node0 = Node.newString(110, "]>eL35r^}=\"gp+V%}f");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node node1 = Node.newString("]>eL35r^}=\"gp+V%}f", (-250), 48);
      node1.isDebugger();
      node1.isVar();
      Node node2 = new Node(55, node1, node0, node1);
      node2.getStaticSourceFile();
      node2.getChildBefore(node0);
      node0.isNoSideEffectsCall();
      FileSystemHandling fileSystemHandling0 = null;
      try {
        fileSystemHandling0 = new FileSystemHandling();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2147483645, nodeArray0);
      node0.setIsSyntheticBlock(true);
      node0.isVarArgs();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = Node.newNumber((double) 35);
      Node node1 = node0.cloneNode();
      String string0 = node1.toStringTree();
      Node node2 = node1.cloneTree();
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node0.useSourceInfoFrom(node2);
      node2.hasChild(node0);
      node1.getDouble();
      Node node3 = new Node(1599, node2, node2, 63, (-2260));
      Node node4 = new Node((-1223), node2);
      String string1 = "4nS'|/Bz~N";
      node3.addSuppression(string1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.getType(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2480));
      Node node1 = node0.cloneTree();
      node1.setIsSyntheticBlock(true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("SYNTAX_ERROR_FUNCTION_TYPE");
      jSTypeRegistry0.declareType("=changetime", templateType0);
      node0.isContinue();
      node0.getJSType();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isTry();
      Node node3 = new Node(119, node1, node0, node2, node2);
      node0.copyInformationFrom(node1);
      node0.isBlock();
      Node node4 = new Node(51, node0, node2, node3, 753, 3300);
      node2.replaceChild(node4, node3);
      node4.getLineno();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-2798), (-2798), 29);
      Node node1 = new Node((-2798), node0, (-761), 51);
      node1.cloneNode();
      node1.getString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.setAllFlags();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2798
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newString(42, "a4@^r+[DSG<pn", 42, 2147483645);
      Node node1 = node0.cloneTree();
      node0.setIsSyntheticBlock(false);
      node0.getQualifiedName();
      node0.isFor();
      Node node2 = Node.newString("predicate", 4095, 50);
      node2.toStringTree();
      node0.isNumber();
      node2.isBreak();
      node1.setSideEffectFlags(4);
      node1.isVarArgs();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newString(110, "]>eL35r^}=\"gp+V%}f");
      Node node1 = new Node(110, node0, node0);
      node1.isDefaultCase();
      node1.setLength(36);
      node0.setQuotedString();
      node1.getJSDocInfo();
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.getLastSibling();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.hasOneChild();
      node2.isInc();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.clearAllFlags();
      node2.srcref(node0);
      node2.isStringKey();
      node0.isCatch();
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      node1.isGetterDef();
      node1.getLength();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2480));
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString(2, "=changetime");
      node2.isDebugger();
      node2.isVar();
      Node node3 = new Node(2694, node1, node2, node0);
      node3.getStaticSourceFile();
      Node node4 = node3.getChildBefore(node0);
      node1.isNoSideEffectsCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node4.addChildrenAfter(node3, node2);
      node3.isIn();
      node3.getLength();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node node0 = Node.newString("$ln~_m9]sD6c", (-951), 130);
      Node node1 = node0.cloneTree();
      Node node2 = new Node(154, node0, node1, node1, node1);
      Node node3 = new Node(56, node2);
      node2.isCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.isEquivalentTo(node0, true, true, true);
      Node node4 = node0.getLastSibling();
      node1.addChildrenToBack(node0);
      node2.getDirectives();
      node2.isInc();
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      node4.isGetterDef();
      node4.getLength();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-1041), (-2754));
      node0.isQualifiedName();
      Node node1 = new Node(114, node0);
      Node node2 = Node.newString("com.google.javascript.rhino.Node$AbstractPropListItem");
      node1.addChildToFront(node2);
      node0.replaceChild(node1, node2);
      node1.getDirectives();
      node2.isFalse();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = new Node(159, 159, 159);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      node0.isEquivalentToShallow((Node) null);
      node0.hasMoreThanOneChild();
      SimpleErrorReporter simpleErrorReporter0 = null;
      try {
        simpleErrorReporter0 = new SimpleErrorReporter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = new Node(83);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newString(42, "");
      Node node2 = new Node(57, node0, 0, 29);
      node1.getChildCount();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.removeFirstChild();
      node2.isReturn();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      Node node3 = new Node(32, nodeArray0, (-234), (-1423));
      Node node4 = node3.removeChildAfter(node1);
      node4.isNoSideEffectsCall();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2480));
      Node node1 = node0.cloneTree();
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("second new child has existing sibling", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      node1.isFor();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node0.hasChild(node1);
      node1.isParamList();
      node1.isName();
      node1.getChildCount();
      node0.isNot();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("duplicate child");
      jSTypeRegistry0.declareType("}64.=", templateType0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) templateType0;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString((-244), "com.google.javascript.rhino.Node$SideEffectFlags");
      Node node1 = node0.cloneTree();
      Node node2 = new Node((-244), node0);
      node0.isCall();
      Node node3 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", 759, 48);
      Node node4 = new Node(90, node3, node1);
      node1.isEquivalentToTyped(node4);
      node4.getLastSibling();
      Node node5 = node2.useSourceInfoIfMissingFrom(node4);
      Node node6 = new Node(43, node2, 32, 4095);
      node6.isFalse();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4614);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      node2.isWhile();
      node6.isSetterDef();
      Node node7 = Node.newString(1, "fA-tUC}pp2d");
      node7.isRegExp();
      node6.getIndexOfChild(node5);
      node0.isOptionalArg();
      Node.newString((-524), "com.google.javascript.rhino.Node$SideEffectFlags");
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4614, 4614, 4614);
      node0.getLength();
      Node node1 = new Node(31, node0);
      node0.setDouble(36);
      node0.isDebugger();
      node0.getChangeTime();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getEnumParameterType();
      jSDocInfo0.addExtendedInterface((JSTypeExpression) null);
      jSDocInfo0.addModifies("O(k8{0%4+qgX");
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 1801, (-965));
      node0.getLength();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(53, 136, 42);
      node1.isThrow();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.getJsDocBuilderForNode();
      node0.getChildAtIndex((-274));
      Node node2 = Node.newNumber(1.0, (-1546), 845);
      node2.getDirectives();
      node2.removeChild(node1);
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newString((-4268), "=.GT[[) ", 2147483645, 102);
      Node node1 = new Node(124, node0, node0, node0, node0, 50, (-2475));
      Node node2 = Node.newString(2187, "\\h");
      node1.isQuotedString();
      node2.getIntProp(37);
      node2.isLabel();
      node1.isCall();
      Node node3 = Node.newString((-991), "mTET:", 15, 0);
      node3.setChangeTime(51);
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 1801, (-965));
      node0.getLength();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(53, 119, 42);
      node0.isEquivalentToTyped((Node) null);
      node1.isThrow();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(124);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("SYNTAX_ERROR_FUNCTION_TYPE");
      jSTypeRegistry0.declareType("Named type with empty name component", templateType0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) templateType0;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(124, node0, node0, node0, node0);
      node1.isContinue();
      node1.getJSType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node0, jSTypeArray0[1]);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      JSType jSType0 = enumElementType0.getPropertyType("SYNTAX_ERROR_FUNCTION_TYPE");
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0, jSTypeArray0[1], jSType0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node2.useSourceInfoIfMissingFromForTree(node0);
      node1.isTry();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Not declared as a type name");
      Node node3 = node2.copyInformationFromForTree(node1);
      node3.hasMoreThanOneChild();
      Node node4 = Node.newString("SYNTAX_ERROR_FUNCTION_TYPE");
      node4.isWith();
      node4.setCharno(12);
      node3.isNull();
      node1.copyInformationFrom(node4);
      node3.isNot();
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = node0.cloneNode();
      node1.toStringTree();
      Node node2 = node1.cloneTree();
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      Node node3 = new Node(49, node0, 47, 33);
      Node node4 = node3.useSourceInfoFrom(node2);
      node0.isVoid();
      Node node5 = new Node(125, node3, node4, 2344, 2913);
      node1.getStaticSourceFile();
      node5.getAncestor(1619);
      node4.getChildAtIndex(42);
      node4.getDirectives();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newString((-893), "#E[r!5uVO]");
      Node node1 = new Node(8, node0);
      node0.isNull();
      node1.isFor();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node1.hasChild(node0);
      node1.isParamList();
      node0.isName();
      node0.getChildCount();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = Node.newString(110, "]>eL35r^}=\"gp+V%}f");
      node0.setIsSyntheticBlock(true);
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(47, 4015, 1);
      Node node2 = new Node(361, node1, node1);
      node0.isIn();
      Node.AncestorIterable node_AncestorIterable0 = node2.getAncestors();
      node_AncestorIterable0.iterator();
      node2.hasChild(node1);
      node2.isParamList();
      node0.isName();
      node2.getChildCount();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node0 = Node.newString("%>-");
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(4);
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      int int0 = Node.LAST_PROP;
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node0.toString(false, true, false);
      node0.isScript();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node1 = Node.newString("STRING %>-", 54, 49);
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = new Node(42, 36, 4);
      Node node3 = new Node(38, node2);
      node3.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString("synthetic", 306, 306);
      node0.getQualifiedName();
      node0.isFor();
      Node node1 = new Node(10, 741, 2);
      Node node2 = Node.newString("synthetic", 42, 42);
      node2.isBreak();
      Node node3 = node1.copyInformationFromForTree(node2);
      Node node4 = Node.newNumber((double) 4, 29, 29);
      node4.setSideEffectFlags(8);
      node2.isVarArgs();
      node2.isGetProp();
      int int0 = 1834;
      node3.putIntProp(node0.DIRECT_EVAL, int0);
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = new Node(36, node0, node0, node0, node0, 0, 47);
      Node node2 = Node.newString(12, "=changetime");
      node0.isEquivalentTo(node2, true, true, true);
      Node node3 = node1.getLastSibling();
      node1.addChildrenToBack(node2);
      node0.getDirectives();
      node2.isInc();
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      node0.isUnscopedQualifiedName();
      Node node4 = new Node(51, node2, node3, node1, 48, 38);
      node1.addChildAfter(node4, node3);
      boolean boolean0 = false;
      boolean boolean1 = false;
      node4.toString(boolean0, boolean0, boolean1);
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(118, node0);
      node0.isName();
      Node node2 = new Node(37, node1, 40, (-208));
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("\"h4~o=VAw", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      node1.isEquivalentTo(node0, false, false, true);
      Node node3 = Node.newString(" is not a number node", (-1568), (-1315));
      node0.isBreak();
      int int0 = 45;
      Node node4 = new Node(116, node2, node1, node3, 8388608, 49);
      Node node5 = new Node(int0, node0, node4);
      node5.isExprResult();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = node0.cloneTree();
      node1.getQualifiedName();
      node0.isFor();
      Node node2 = new Node(125, 4, 29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node0.toString(false, false, true);
      node0.isScript();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node3 = new Node(41, node0, node0, node2, node1);
      node3.copyInformationFrom(node1);
      node1.siblings();
      node2.isOr();
      node3.isGetProp();
      node3.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4614, 4614);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      Node node1 = new Node(2889, node0, node0);
      node0.isIn();
      Node node2 = node1.removeChildren();
      node1.putIntProp(32, 0);
      node1.isName();
      node1.isVarArgs();
      node2.isVar();
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.isAnd();
      node0.isAssignAdd();
      node0.putIntProp((-965), 16);
      Node node1 = new Node(0, node0, node0, node0, 301, 53);
      node1.isOnlyModifiesThisCall();
      node0.isCase();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = Node.newString(57, "SyntaxError");
      Node node2 = Node.newString("SyntaxError", 16, 50);
      node1.getStaticSourceFile();
      Node node3 = Node.newNumber((double) 50);
      node3.setStaticSourceFile((StaticSourceFile) null);
      node3.checkTreeTypeAwareEqualsImpl(node0);
      node2.isVarArgs();
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = new Node(83);
      node0.setVarArgs(true);
      node0.getStaticSourceFile();
      node0.isName();
      node0.isIf();
      node0.isInc();
      Node node1 = Node.newString((-71), "~wO9>{^38!$;$P");
      node0.isEquivalentTo(node1);
      Node node2 = Node.newString("Should not happen\n", 31, 53);
      node0.isThis();
      node2.isBreak();
      node2.isInc();
      node0.addChildrenAfter(node2, (Node) null);
      node0.checkTreeEqualsImpl(node2);
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = Node.newString(29, "V", 5570, (-1214));
      Node node2 = node0.cloneTree();
      node2.getQualifiedName();
      node2.isFor();
      Node node3 = new Node(16, 1, (-639));
      int int0 = 98;
      Node node4 = Node.newString((String) null, 124, 481);
      Node node5 = new Node(int0, node4, node0);
      node1.isIn();
      node2.removeChildren();
      int int1 = 2411;
      int int2 = 1048;
      node1.putIntProp(int1, int2);
      node0.isName();
      // Undeclared exception!
      try { 
        node3.isVarArgs();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2480));
      Node node1 = node0.cloneTree();
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      node1.isSyntheticBlock();
      Node node2 = new Node(29, node1, node0, node1, 148, 1680);
      node2.setSourceEncodedPositionForTree(103);
      node0.setString((String) null);
      Node node3 = new Node(node1.IS_CONSTANT_NAME, node2, node0, node2);
      Node node4 = new Node(node1.CHANGE_TIME, node3);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node4.isVarArgs();
      node4.isTrue();
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(118, node0);
      Node node2 = Node.newNumber((double) 30, 48, 40);
      node2.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node3 = Node.newString(2, "8xYh\"\"2[EaVi");
      node_SideEffectFlags1.setThrows();
      Node node4 = node1.srcref(node2);
      node4.isStringKey();
      node4.isCatch();
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      node0.isGetterDef();
      node3.getString();
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node4.getBooleanProp(57);
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = Node.newString(100, "=changetime", 54, 54);
      Node node1 = new Node(108, node0, node0, node0, node0, 1, 0);
      Node node2 = Node.newString(763, "@9[4P,9,4:&u%LBt");
      node2.isQuotedString();
      node0.getIntProp((-3238));
      Node node3 = new Node(49);
      node1.srcrefTree(node3);
      Node node4 = new Node(43, node0, node1, node0, node2);
      node4.isLabel();
      node1.isCall();
      node2.getChangeTime();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(118, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(46);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      node0.setChangeTime(1690);
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags6.valueOf();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.toString(true, false, false);
      node1.isScript();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node2 = node1.copyInformationFrom(node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node1.isOr();
      node0.isGetProp();
      node1.isInstanceOf();
      node2.addChildToFront(node0);
      node2.removeChild(node0);
      node2.isLabelName();
      node0.getAncestors();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(118, node0);
      node0.isName();
      Node node2 = new Node(37, node1, 40, (-208));
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("\"h4~o=VAw", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      node1.isEquivalentTo(node0, false, false, true);
      Node node3 = Node.newString(" is not a number node", (-1568), (-1315));
      node0.isBreak();
      node3.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-867));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node2.srcref(node1);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node1.isEquivalentToShallow(node2);
      node3.isFor();
      node3.isNot();
      Node node4 = new Node(1);
      node4.setString("uldaM?i*");
      node4.isExprResult();
      node3.checkTreeEqualsImpl(node4);
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = new Node(36, node0, node0, node0, node0, 0, 47);
      Node node2 = Node.newString(12, "=changetime");
      node2.isQuotedString();
      Node node3 = node1.cloneTree();
      Node node4 = new Node(29, node2, 55, 55);
      node4.getIntProp((-1397));
      node2.isExprResult();
      node2.replaceChildAfter(node1, node4);
      node3.isDo();
      node0.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 4615, 4615);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node0.setChangeTime(42);
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.valueOf();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node0.toString(true, true, true);
      node0.isScript();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node1 = node0.copyInformationFrom(node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node1.isOr();
      node0.isGetProp();
      node1.isInstanceOf();
      node1.addChildToFront(node0);
      node0.removeChild(node0);
      node1.isAssignAdd();
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(133);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newNumber((-625.97));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString(39, "H$~QN;F8|+S");
      node0.isContinue();
      node1.isGetProp();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = Node.newString("H$~QN;F8|+S", 30, (-4275));
      node1.isBreak();
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(118, node0);
      Node node2 = new Node(72);
      Node node3 = new Node(50, node2, node1, node1, node2);
      Node node4 = node0.useSourceInfoFrom(node1);
      int int0 = Node.REFLECTED_OBJECT;
      node0.setWasEmptyNode(true);
      node0.addChildrenToFront(node4);
      Node node5 = new Node(node0.SLASH_V, node3, node4, node1, node0);
      node2.putIntProp(node4.FLAG_GLOBAL_STATE_UNMODIFIED, node3.DECR_FLAG);
      Node node6 = null;
      try {
        node6 = new Node(node1.FLAG_GLOBAL_STATE_UNMODIFIED);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = new Node(47);
      int int0 = 797;
      Node node1 = new Node(797, node0, node0, node0, node0);
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = node0.copyInformationFrom(node1);
      node1.siblings();
      node2.isOr();
      node2.addChildAfter(node0, node0);
      Node node3 = null;
      try {
        node3 = new Node(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = Node.newString(110, "]>eL35r^}=\"gp+V%}f");
      node0.setVarArgs(true);
      node0.getStaticSourceFile();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.getIntProp(13);
      Node node1 = new Node(57, 4096, 32);
      node1.isExprResult();
      Node[] nodeArray1 = new Node[9];
      nodeArray1[0] = node0;
      nodeArray1[1] = node1;
      nodeArray1[2] = node0;
      nodeArray1[4] = node0;
      nodeArray1[5] = node0;
      nodeArray1[6] = node0;
      nodeArray1[7] = node0;
      node0.isVarArgs();
      Node node2 = Node.newNumber(2491.23824371406);
      nodeArray1[8] = node2;
      Node node3 = new Node(41, nodeArray1);
      Node node4 = new Node(node1.QUOTED_PROP, node3);
      int int0 = 124;
      Node node5 = new Node(int0, nodeArray1[4], nodeArray1[3], nodeArray1[7]);
      node4.replaceChildAfter(node5, nodeArray1[8]);
      nodeArray0[0].isDo();
      Node.extractCharno(node5.FLAG_ARGUMENTS_UNMODIFIED);
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = Node.newString(93, "=changetime", 2147483645, (-2475));
      Node node1 = new Node(38, node0, 50, 1);
      node1.setIsSyntheticBlock(true);
      node1.getQualifiedName();
      Node node2 = new Node(node1.SLASH_V);
      node0.isVar();
      node2.isDec();
      Set<String> set0 = new LinkedHashSet<String>();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newNumber(84.677148498793, 935, 302);
      Node node1 = new Node(302, node0, node0, 31, 55);
      Node node2 = node1.cloneTree();
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      Node node3 = node2.useSourceInfoFrom(node0);
      node3.isVoid();
      Node node4 = new Node(37, node2, node1, node2, node2, 658, 1024);
      node1.getStaticSourceFile();
      node1.getAncestor(2400);
      node4.getChildAtIndex(0);
      node4.isDo();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newString(93, "=changetime", 2147483645, (-2475));
      Node node1 = new Node(38, node0, 50, 1);
      Node node2 = node1.cloneTree();
      node1.isQualifiedName();
      int int0 = 118;
      Node node3 = new Node(int0);
      node3.getIntProp(node2.INFERRED_FUNCTION);
      // Undeclared exception!
      try { 
        node3.isExprResult();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 50 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newString("O~");
      node0.getDirectives();
      node0.mayMutateArguments();
      node0.setLineno((-4014));
      Node node1 = new Node((-2194), node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("O~", true);
      simpleSourceFile0.getLineOffset(42);
      simpleSourceFile0.getLineOffset(32);
      node1.setIsSyntheticBlock(true);
      node1.setStaticSourceFile(simpleSourceFile0);
      node1.isFromExterns();
      node0.addSuppression("O~");
      node0.getChildCount();
      Node.newString(57, "O~");
      Node node2 = Node.newString("O~", 21, 1286);
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u%B");
      Node node0 = Node.newString(110, "]>eL35r^}=\"gp+V%}f");
      node0.setVarArgs(true);
      node0.getStaticSourceFile();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(49, node0, 48, 110);
      Node.extractCharno(41);
      Node.newString("B}LQ");
      node0.getBooleanProp(31);
      node0.setDouble(0.7);
      node1.isCast();
      node1.addChildrenToFront(nodeArray0[0]);
      nodeArray0[0].isCase();
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u%B");
      Node node0 = Node.newString(110, "]>eL35r^}=\"gp+V%}f");
      node0.setVarArgs(true);
      node0.getStaticSourceFile();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(49, node0, 48, 110);
      Node.extractCharno(41);
      node1.toStringTree();
      Node node2 = Node.newString("B}LQ");
      Node node3 = new Node(916, node1);
      node3.isLocalResultCall();
      Node node4 = node0.getAncestor(39);
      node2.mayMutateGlobalStateOrThrow();
      node3.isDo();
      node1.srcref(node0);
      Node node5 = new Node(4095, node3, (Node) null, node3, node1, 1, 2724);
      node4.checkTreeEqualsImpl(node5);
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = new Node(83);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newString(42, "");
      Node node2 = new Node(57, node0, 0, 29);
      node1.getChildCount();
      node2.isInc();
      node1.isThis();
      node2.isBreak();
      node1.isInc();
      node1.checkTreeEqualsImpl(node2);
      ObjectType.cast((JSType) null);
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = new Node(83);
      node0.setVarArgs(true);
      node0.getStaticSourceFile();
      node0.isName();
      node0.isIf();
      Node node1 = Node.newString((-71), "~wO9>{^38!$;$P");
      node0.isEquivalentTo(node1);
      Node.newNumber((double) 38);
      node0.isThis();
      node0.isBreak();
      node1.isInc();
      node0.addChildrenAfter(node0, (Node) null);
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = Node.newString(42, "", 42, 42);
      node0.getProp(42);
      node0.toString();
      node0.children();
      node0.isNot();
      int int0 = 0;
      boolean boolean0 = node0.wasEmptyNode();
      node0.setLength(42);
      node0.getChangeTime();
      Node node1 = node0.srcrefTree((Node) null);
      boolean boolean1 = true;
      boolean boolean2 = true;
      // Undeclared exception!
      try { 
        node1.isEquivalentTo(node0, boolean0, boolean1, boolean2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(118, node0);
      node1.getChildCount();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = node1.removeFirstChild();
      node2.isReturn();
      Node.newString((-2887), "(1jgS<*?bY*u");
      node2.removeProp(4095);
      node1.isFunction();
      Node node3 = new Node(54, 57, 1211);
      node3.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(118, node0);
      node1.getChildCount();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = node1.removeFirstChild();
      node2.isReturn();
      node2.srcrefTree(node0);
      Node node3 = Node.newString((-2887), "(1jgS<*?bY*u");
      node2.removeProp(4095);
      node1.isFunction();
      Node node4 = new Node(54, 57, 1211);
      node4.clonePropsFrom(node3);
      node4.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isName();
      node0.isEquivalentTo(node0, false, false, false);
      node0.isBreak();
      Node node1 = new Node(116, node0, node0, node0, 8388608, 49);
      Node node2 = new Node((-208), node0, node1);
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newString(29, ":", 29, 29);
      Iterable<Node> iterable0 = new Node.AncestorIterable(node0);
      Node node1 = Node.newNumber((double) 50, 16, 56);
      Node node2 = Node.newString(":");
      node2.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      Node node3 = new Node(29, node1, node2, node1, node2);
      node2.addChildToFront(node3);
      node3.removeChild(node1);
      node2.isObjectLit();
      node2.getExistingIntProp(50);
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newString(125, "=.hangetime", 2147483645, (-2475));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags7.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags7.clearAllFlags();
      node0.toString(false, true, false);
      node0.isScript();
      node_SideEffectFlags8.clearSideEffectFlags();
      Node node1 = new Node(116, node0, node0, node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node2.isOr();
      node0.isGetProp();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-951));
      Node node0 = Node.newString("$ln~_m9]sD6c", (-951), (-951));
      Node node1 = node0.cloneTree();
      Node node2 = new Node(154, node0, node1, node1, node1);
      node2.isCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.isInc();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node2.toString(false, false, true);
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node3 = node0.copyInformationFrom(node2);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node3.isDelProp();
      node3.isCatch();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      int int0 = 125;
      Node node0 = Node.newString("E?.Owzc=", 125, 740);
      Node node1 = new Node(31, node0, node0, node0, (-3312), 57);
      Node node2 = node1.cloneTree();
      Node node3 = new Node(31, node0, node2, node0, node1);
      node3.isCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        node2.isInc();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newString(125, "=changetime", 2147483645, (-2475));
      Node node1 = node0.cloneTree();
      node1.getQualifiedName();
      node0.isFor();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node2 = Node.newString(29, "@xTsQ_EY");
      Node node3 = node0.srcref(node2);
      node3.isStringKey();
      Node node4 = new Node(563, 42, 2);
      node2.isArrayLit();
      node4.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SideEffectFlags", (-244), (-244));
      Node node1 = node0.cloneTree();
      Node node2 = new Node(627, node0, node0, node1, node1, 9, 51);
      Node node3 = node2.clonePropsFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1902));
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node3.isArrayLit();
      Node.extractCharno(0);
      Node node4 = Node.newString("IDENTITY", 1, 0);
      Node node5 = Node.newString(688, "com.google.common.collect.Lists$RandomAccessPartition", 29, (-2734));
      node4.isName();
      node5.isGetterDef();
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = new Node(590);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node1.siblings();
      node1.getLength();
      Node node2 = Node.newString("STRING %>-", 16, 46);
      node1.isContinue();
      node1.srcrefTree(node2);
      node1.isAdd();
      Node node3 = new Node(19, 38, 1918);
      node3.isEquivalentToShallow(node1);
      node2.isFor();
      node3.isNot();
      node3.addChildToFront(node0);
      node1.toString();
      node2.isQuotedString();
      node0.isVoid();
      node2.isVarArgs();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = new Node(71, 71, 71);
      Node node1 = new Node(47, node0, 1179, 38);
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isComma();
      node1.isThrow();
      node0.isTrue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node node2 = Node.newString(2582, "3&>[f+V6!6<");
      Node node3 = node1.srcref(node2);
      node1.isGetterDef();
      node3.isCatch();
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      node2.isGetterDef();
      node0.getString();
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = Node.newString(110, "]>eL35r^}=\"gp+V%}f");
      node0.isDefaultCase();
      node0.setLength(36);
      node0.setQuotedString();
      node0.getStaticSourceFile();
      node0.isContinue();
      node0.setChangeTime(1524);
      node0.isIf();
      node0.isInc();
      node0.isFunction();
      node0.setQuotedString();
      node0.isInc();
      Node node1 = new Node(55, node0);
      node0.addChildrenAfter(node1, node1);
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.setWasEmptyNode(true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.hasOneChild();
      node0.getIntProp(1571);
      node0.isCast();
      Node node1 = Node.newNumber((double) 32);
      node0.addChildrenToFront((Node) null);
      node1.isCase();
  }
}
