/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 08 11:54:39 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.AllType;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.UnionType;
import java.io.IOException;
import java.io.PipedWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(111);
      Node node1 = new Node((-398), node0);
      node0.srcrefTree(node1);
      node0.getStaticSourceFile();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = Node.newString(83, "_453PRx4@di", 1984, 1984);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      Node node1 = new Node(132, node0, 15, 53);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      node1.isFromExterns();
      nodeArray0[3] = node0;
      node1.clonePropsFrom(node0);
      Node node2 = null;
      try {
        node2 = new Node(4095, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = Node.newString(85, "`uisk<c)iL<Z");
      node0.getStaticSourceFile();
      Node node1 = new Node(85, node0);
      node1.getInputId();
      node0.getString();
      node1.copyInformationFrom(node0);
      node0.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(118);
      node0.getStaticSourceFile();
      node0.isDo();
      node0.isStringKey();
      Node node1 = Node.newNumber((double) 1);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = Node.newString(83, "_453PRx4@di", 1984, 1984);
      Node node1 = new Node(83, node0, node0);
      node1.toString();
      Node node2 = Node.newString("PARAM_LIST", 57, 3324);
      Node.newString(2, "_453PRx4@di", 8, 51);
      node2.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.getString();
      node0.getBooleanProp(8);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node2.checkTreeEqualsImpl(node1);
      node1.isHook();
      node0.isTry();
      node2.isVarArgs();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = Node.newString("rhino_ast.java.com.google.javascript.rhino.Messages");
      Node node1 = new Node(57, node0, node0, node0, 54, 52);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      Node.NodeMismatch node_NodeMismatch1 = node1.checkTreeEqualsImpl(node0);
      node_NodeMismatch1.equals(node_NodeMismatch0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node0 = new Node(0);
      node0.isOptionalArg();
      node0.getSideEffectFlags();
      node0.getInputId();
      node0.isNE();
      Node node1 = new Node(29, node0, 64, 42);
      node1.isEquivalentTo(node0, false, true, true);
      Node node2 = node0.copyInformationFromForTree(node1);
      // Undeclared exception!
      try { 
        node2.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = new Node(92, 92, 92);
      node0.isHook();
      node0.isAssignAdd();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(17, nodeArray0);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = new Node((-802), (-802), (-802));
      node0.cloneTree();
      Node node1 = Node.newString(53, "com.google.javascript.rhino.Node$AncestorIterable");
      node1.getSideEffectFlags();
      Node node2 = new Node(44, node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      node1.isUnscopedQualifiedName();
      Node node3 = node2.copyInformationFrom(node1);
      node3.isAdd();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = new Node(110);
      Node node1 = new Node(0, node0);
      node0.addChildrenToBack(node1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getAncestor(52);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = new Node(32);
      Node node1 = node0.cloneTree();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("ps/Y5XL<4`-tu7)nA", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      node1.detachChildren();
      node0.isGetProp();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = Node.newString(4150, "M");
      node0.srcref(node1);
      node0.isInc();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node.newNumber((-1320.06132676583));
      Node.newNumber((double) 15);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseNoType();
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      // Undeclared exception!
      try { 
        modificationVisitor0.caseUnionType(unionType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = new Node(101, 116, 2261);
      Node node1 = node0.cloneTree();
      Stack<Node> stack0 = new Stack<Node>();
      Node node2 = new Node(63, node1, node1, node1, node0);
      node1.isNE();
      int int0 = Node.INFERRED_FUNCTION;
      node2.setChangeTime(253);
      node2.checkTreeEqualsImpl(node0);
      node1.isStringKey();
      node1.setLineno(51);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = new Node(307, 307, 307);
      Node node1 = Node.newString(49, "wqWDD57>_w=@;y/YK");
      node0.getSideEffectFlags();
      Node node2 = new Node(85, node1, node0);
      node2.useSourceInfoIfMissingFrom(node0);
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(42);
      Node node1 = node0.copyInformationFrom(node0);
      node1.cloneTree();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isComma();
      node0.isFromExterns();
      node0.setJSDocInfo((JSDocInfo) null);
      node0.isNull();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEC is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = new Node(136);
      Node node1 = new Node(16, node0, node0, node0, node0, 57, 32);
      node1.type = (-606);
      node1.hasChildren();
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.setSourceFileForTesting("9P");
      node0.isLocalResultCall();
      int int0 = Node.INFERRED_FUNCTION;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(30, node0, 39, 2136);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LABEL 126 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node(30, (-823), 30);
      node0.isBreak();
      Node node1 = Node.newString("N|6['");
      node0.srcrefTree(node1);
      Node node2 = new Node(2018, node0, node0);
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2018
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isInc();
      Node node1 = new Node(30, node0, node0);
      // Undeclared exception!
      try { 
        node1.addChildBefore((Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(32);
      Node node1 = new Node(52);
      node1.copyInformationFromForTree(node0);
      node0.isUnscopedQualifiedName();
      node1.isStringKey();
      node1.getLength();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = new Node(44, 44, 2389);
      node0.isSyntheticBlock();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = new Node(42);
      Node node2 = new Node(12, node0, node1, node0);
      node2.isQualifiedName();
      node2.removeChildAfter(node1);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(103);
      node0.getLength();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = node0.getAncestor(0);
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isDebugger();
      Node node1 = new Node((-1443), 42, 4095);
      node1.isOr();
      Node node2 = new Node((-877), node1, node0, node1);
      node2.isTrue();
      node2.removeChildAfter(node0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2196, nodeArray0);
      Node node1 = node0.cloneTree();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("|zj7,sG.JhUk", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.setSourceEncodedPositionForTree(98);
      node1.isLocalResultCall();
      node1.isFor();
      // Undeclared exception!
      try { 
        node1.getSourceOffset();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number 0
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      node0.getQualifiedName();
      node0.setSourceEncodedPositionForTree(46);
      Node node1 = new Node(30, node0, node0);
      node0.isUnscopedQualifiedName();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = new Node(49, node0, node0, node0, node0);
      node1.cloneTree();
      node1.checkTreeEquals(node0);
      node0.isLocalResultCall();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQuotedString();
      node0.isEquivalentTo(node1, false, false, false);
      node0.getSideEffectFlags();
      node2.getSourceOffset();
      node1.isTry();
      node2.isVarArgs();
      node1.mayMutateGlobalStateOrThrow();
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newNumber((-1081.453975879289));
      Node node1 = new Node(15, node0, node0, (-1045), 0);
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.setVarArgs(true);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isArrayLit();
      Node node3 = Node.newNumber(56.0);
      node3.srcrefTree(node0);
      Node node4 = node2.useSourceInfoIfMissingFromForTree(node1);
      node4.isVarArgs();
      Node node5 = node0.getLastSibling();
      node4.isUnscopedQualifiedName();
      node5.isSetterDef();
      node4.isWhile();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(145, 145, 145);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      Node node1 = new Node(116, node0, node0, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node1.isContinue();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = new Node(110);
      Node node1 = new Node(0, node0);
      node0.addChildrenToBack(node1);
      node0.isTrue();
      node0.getAncestor(2);
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = new Node(110, 110, 110);
      Node node1 = new Node(2);
      Node node2 = new Node(52, node0, node0);
      node2.addChildrenToBack(node1);
      node2.isAssignAdd();
      node2.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = Node.newString("DEFALT_CASE");
      node0.getSourceOffset();
      node0.setSourceFileForTesting("DEFALT_CASE");
      node0.isLocalResultCall();
      node0.isFor();
      node0.getSourceOffset();
      node0.isTry();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = new Node(86, 86, 86);
      Node node1 = new Node(42, node0, node0, 15, 4095);
      node0.isComma();
      int int0 = Node.INFERRED_FUNCTION;
      node0.setChangeTime((-709));
      node1.getDirectives();
      node0.checkTreeEqualsImpl(node1);
      node1.isStringKey();
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node(42);
      Node node1 = new Node(32);
      Node node2 = node1.copyInformationFrom(node0);
      node1.isUnscopedQualifiedName();
      node1.toString();
      node2.useSourceInfoFrom(node0);
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newString("ORDINARY", 47, 47);
      Node node1 = new Node(39, node0, 4095, 57);
      node0.setString("ORDINARY");
      node0.setSourceEncodedPositionForTree(47);
      node0.isWith();
      node1.copyInformationFromForTree(node0);
      node0.srcref(node1);
      // Undeclared exception!
      try { 
        node1.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = new Node(113, 113, 113);
      Node node1 = new Node(50, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = node0.cloneNode();
      node0.isCast();
      node1.isSetterDef();
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-676));
      Node node1 = new Node(98, node0, 48, 40);
      node1.isAnd();
      node0.isParamList();
      node1.isOr();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      node0.isCase();
      Node node1 = new Node(43, 2389, 47);
      node0.isSyntheticBlock();
      Node node2 = new Node(2089, node0, node0, node1);
      node1.isTrue();
      Node node3 = node2.removeChildAfter(node0);
      node1.useSourceInfoIfMissingFromForTree(node3);
      node3.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(32);
      Node node1 = node0.cloneTree();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.getJSDocInfo();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newNumber((-27.19531103117653));
      int int0 = Node.INFERRED_FUNCTION;
      node0.getStaticSourceFile();
      Node.newNumber((double) 1, 37, 4095);
      Node.newString(38, "Z3z>", 4095, 38);
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      node0.isName();
      Node node1 = new Node(43, 2367, 47);
      node1.useSourceInfoFromForTree(node0);
      node0.isSyntheticBlock();
      Node node2 = new Node(2089, node0, node0, node1);
      node1.isTrue();
      node2.removeChildAfter(node0);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node(110);
      node0.getSideEffectFlags();
      Node node1 = new Node(47, node0, 4095, 38);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(120);
      node0.checkTreeEquals(node0);
      node0.isFor();
      node0.isOr();
      Node node1 = Node.newNumber((-4326.913198889257));
      Node node2 = new Node(49, node1, (-1634), 491);
      node2.setSourceEncodedPositionForTree(379);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.copyInformationFromForTree(node1);
      // Undeclared exception!
      try { 
        Node.newString(37, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node2.useSourceInfoIfMissingFrom(node1);
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`uisk<c)iL<Z");
      node1.isQuotedString();
      node0.isEquivalentTo(node1, false, false, false);
      node2.isFromExterns();
      node1.isNull();
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(4095);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 4095
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = new Node(4, 4, 4);
      node0.isReturn();
      node0.isFromExterns();
      String string0 = "null";
      Node node1 = Node.newString((-27), "null");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(125);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -27
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      node0.isCase();
      Node node1 = new Node(44, node0, node0);
      node1.isThis();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.hasChild(node1);
      node1.isFalse();
      // Undeclared exception!
      try { 
        Node.newString((-913), (String) null, (-308), (-2381));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = Node.newString("7Z_]*N", 1140, 130);
      Node node1 = new Node(130, node0, node0, node0, 1159, 1140);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = node1.srcrefTree(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("LH4", true);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = new Node(1140, node1, 714, 51);
      Node node4 = null;
      try {
        node4 = new Node(1140, node3, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node0.isCase();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      node0.isFromExterns();
      Node node1 = node0.cloneTree();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(38, nodeArray0);
      node2.isBlock();
      node1.isName();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = new Node(110);
      Node node1 = new Node(2);
      Node node2 = new Node(52, node0, node0);
      node2.addChildrenToBack(node1);
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      Node node1 = new Node(2068);
      Node node2 = new Node(43, node0, node0, 52, 54);
      Node[] nodeArray0 = new Node[1];
      node0.copyInformationFrom(node1);
      nodeArray0[0] = node2;
      Node node3 = new Node(32, nodeArray0, 29, (-213));
      node3.isUnscopedQualifiedName();
      node3.isQualifiedName();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(127, node0, 46, 4);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = new Node(32);
      Node node1 = new Node(32);
      node1.srcrefTree(node0);
      InputId inputId0 = new InputId("d=Uq6`z+e");
      node0.setInputId(inputId0);
      node0.isLabel();
      node0.isOptionalArg();
      node0.isGetProp();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(51, node0, 117, 11);
      Node node2 = new Node(51, node1, node1);
      Node node3 = node2.useSourceInfoFrom(node0);
      node3.getLastSibling();
      node3.isStringKey();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(13);
      node0.putBooleanProp(13, false);
      Node node1 = node0.cloneTree();
      node1.isVarArgs();
      Node node2 = new Node(46, node0, node1);
      node2.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = new Node(46, node0);
      node1.isEquivalentToShallow(node0);
      Node node2 = node1.removeFirstChild();
      Node.newString("\"%p@x~ja");
      node0.addChildrenToFront(node2);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = Node.newString(113, "\"S/zbugzx", 113, 113);
      node0.isFunction();
      node0.getJSDocInfo();
      Node node1 = new Node(1453, node0);
      Node node2 = new Node(113);
      node0.checkTreeEqualsImpl(node2);
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1453
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = new Node(110);
      Node node1 = new Node(2);
      Node node2 = new Node(52, node0, node0);
      node2.getBooleanProp(38);
      node2.addChildrenToBack(node1);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = new Node(33);
      int int0 = Node.FLAG_LOCAL_RESULTS;
      Node node1 = new Node(2675);
      int int1 = (-2004);
      Node node2 = new Node((-2004), node0, node1, (-1683), 664);
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = new Node(13, 491640, 1461);
      Node node1 = node0.cloneNode();
      node1.isBreak();
      node1.isDec();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node(111, node1, 52, 791);
      Node node3 = Node.newNumber((-1.0));
      Node node4 = new Node((-881), node3, 48, 39);
      Node node5 = null;
      try {
        node5 = new Node((-1186), node4, node1, 4096, 1073741823);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      Node node1 = new Node(2068);
      Node node2 = new Node(43, node0, node0, 52, 54);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node2;
      Node node3 = new Node(32, nodeArray0, 29, (-213));
      node3.isUnscopedQualifiedName();
      node3.isQualifiedName();
      Node node4 = new Node(31);
      node4.useSourceInfoIfMissingFromForTree(node2);
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      Node node1 = new Node((-933));
      Node node2 = node0.cloneTree();
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 5760, 5760);
      node0.putIntProp(5760, 5760);
      node0.removeProp(5760);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = new Node(110);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      Node node1 = new Node(116, node0, node0, node0);
      node1.isContinue();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isComma();
      Node node2 = new Node(46, node0, node0, 29, 1);
      node2.clonePropsFrom(node1);
      node1.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.createTemplateType("Object#Key");
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      Node node1 = new Node(3057, node0, node0, node0, node0, (-580), 64);
      Node node2 = node0.clonePropsFrom(node1);
      node0.setChangeTime(36);
      node2.checkTreeEqualsImpl(node0);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // VOID 122 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000339] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node.mergeLineCharNo(32, 32);
      Node node0 = Node.newNumber((double) 131104, 131104, 147);
      node0.getProp(93);
      Node node1 = new Node(114, node0, node0, node0, node0, 46, 4095);
      Node node2 = node1.copyInformationFrom(node0);
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newString("[Ogh,R#U");
      Node node1 = new Node(119, (-754), (-887));
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getStaticSourceFile();
      Node node2 = new Node(56, node1, 421, 679);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      node3.isVoid();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      Node node1 = new Node(44, node0, node0);
      node0.isString();
      node1.clonePropsFrom(node0);
      node1.isEquivalentToShallow(node0);
      node0.isThis();
      node1.isHook();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node(86, 86, 86);
      Node node1 = Node.newString(831, "VKB8`(y3;/AnzLzdbp");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node0.isUnscopedQualifiedName();
      node0.isParamList();
      node0.setSourceEncodedPosition(829);
      node2.isQualifiedName();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = Node.newString(37, ":$]X]qllTq+G3F", (-762), 69);
      node3.setType(1610612736);
      node1.isInstanceOf();
      Node node4 = new Node((-505), node0, node0);
      node4.useSourceInfoIfMissingFrom(node1);
      node4.wasEmptyNode();
      node2.isTry();
      node0.srcref(node2);
      // Undeclared exception!
      try { 
        node3.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1610612736
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(110);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node1.isLocalResultCall();
      node1.isSetterDef();
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.isWith();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = new Node(117);
      Node node1 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      node0.isLocalResultCall();
      int int0 = 64;
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.getStaticSourceFile();
      node0.setLength(105);
      Node node1 = new Node(4, node0, node0, node0, 57, 47);
      Node node2 = new Node(42, 31, 47);
      node1.wasEmptyNode();
      node2.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(16, 16, 120);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node((-171), nodeArray0);
      Node node2 = new Node(103, node1, node1, 53, (-2707));
      node2.isGetElem();
      Node node3 = node2.removeFirstChild();
      node3.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(120, nodeArray0);
      Node node1 = node0.cloneTree();
      node0.setSourceEncodedPositionForTree(30);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a8sOj|$H +5'");
      Node node2 = Node.newString(1981, "J,r{C{We({kT<", 0, 42);
      Node node3 = node1.cloneNode();
      node1.getInputId();
      node1.getJSDocInfo();
      node0.siblings();
      node2.getQualifiedName();
      Node node4 = new Node(147, node0, node3, node1);
      node4.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      node0.getSourceOffset();
      Node node1 = Node.newString(831, "VKB8`(y3;/AnzLzdbp");
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isComma();
      node0.getJSDocInfo();
      Node node3 = node1.cloneNode();
      node2.isCall();
      node0.isUnscopedQualifiedName();
      node0.isParamList();
      node2.isQualifiedName();
      node1.getJSDocInfo();
      node0.isGetterDef();
      node0.isInstanceOf();
      Node node4 = new Node(0, node0, node0, node3, node3);
      node2.isTry();
      Node.newString("VKB8`(y3;/AnzLzdbp");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = new Node(42);
      node0.getSideEffectFlags();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = new Node(32);
      Node node2 = node1.copyInformationFrom(node0);
      node2.getSideEffectFlags();
      node1.isUnscopedQualifiedName();
      node1.toString();
      node0.getJsDocBuilderForNode();
      node1.isQualifiedName();
      node1.isFor();
      node0.isCase();
      node1.isEquivalentTo(node2, false, false, false);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("Object#Key");
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = (JSType) templateType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, false, jSTypeArray0);
      functionType0.getNormalizedReferenceName();
      JSType jSType0 = modificationVisitor0.caseFunctionType(functionType0);
      node0.getJsDocBuilderForNode();
      ObjectType objectType0 = ObjectType.cast(functionType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSTypeArray0[0], (JSType) objectType0, (JSType) functionType0, (JSType) templateType0, (JSType) templateType0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node2 = new Node(48, node1, node0, node1, node1, 38, 2011);
      node0.srcrefTree(node2);
      Node.newNumber((double) 2, 1884, 49);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(4096);
      Node node1 = new Node(147, node0, node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.useSourceInfoFrom(node0);
      Node node2 = null;
      try {
        node2 = new Node(147, node1, node0, node0, (-1118), 2900);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      Node node1 = Node.newString(")|t=9LoA,$");
      int int0 = Node.IS_NAMESPACE;
      node1.getStaticSourceFile();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.srcrefTree(node0);
      node2.isVar();
      node2.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = node0.cloneNode();
      node0.checkTreeEquals(node1);
      node0.isLocalResultCall();
      node1.isLocalResultCall();
      node0.isSetterDef();
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.isWith();
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      int int0 = Node.OPT_ARG_NAME;
      node1.isBreak();
      node1.isDec();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node(8, node1, 30, 37);
      node0.getQualifiedName();
      Node.newNumber((double) 39);
      node1.isVoid();
      node0.getLastSibling();
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newNumber(1.2);
      node0.isCase();
      Node node1 = new Node(16, 2389, 47);
      node0.isSyntheticBlock();
      Node node2 = new Node(2089, node0, node0, node1);
      node1.isTrue();
      node2.removeChildAfter(node0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(31, 31, 115);
      node0.isFunction();
      node0.isBreak();
      node0.isDebugger();
      node0.isBlock();
      node0.isOptionalArg();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(47);
      node0.isEquivalentToShallow(node1);
      node1.clonePropsFrom(node0);
      node1.getDirectives();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType((String) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(110, nodeArray0, 21, 155);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, node0);
      jSTypeArray0[0] = (JSType) functionType0;
      JSTypeNative jSTypeNative0 = JSTypeNative.NO_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[1] = jSType0;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = new Node(155, node1);
      node2.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = new Node(86, 86, 124);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node1 = Node.newString(50, "Hd");
      node1.getProp(30);
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(111, node1, 15, 49);
      Node node3 = node2.cloneTree();
      // Undeclared exception!
      try { 
        node3.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(42);
      int int0 = Node.FLAG_LOCAL_RESULTS;
      Node node1 = new Node(32);
      Node node2 = node1.copyInformationFrom(node0);
      Node node3 = new Node(54, node1, node2, 114, 32);
      node0.isNE();
      Node node4 = node0.clonePropsFrom(node2);
      Node node5 = new Node(55, node4, node3, 118, (-1047));
      node3.checkTreeTypeAwareEqualsImpl(node5);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = new Node(86, 86, 124);
      Node node1 = Node.newString(50, "Hd");
      node1.getProp(30);
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(124, 8, 4095);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Hd");
      node1.isIn();
      node2.srcref(node0);
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = new Node(43, 43, 43);
      Node node1 = node0.cloneTree();
      Vector<Node> vector0 = new Vector<Node>();
      Node node2 = new Node(36, node0, node1, node0, node0);
      node2.isNE();
      int int0 = Node.POST_FLAG;
      Node node3 = node1.clonePropsFrom(node0);
      node1.getIntProp(0);
      Node node4 = null;
      try {
        node4 = new Node(48, node1, node3, 57, 46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = Node.newString(113, "\"So/zugzx");
      node0.isFunction();
      node0.getJSDocInfo();
      int int0 = Node.JSDOC_INFO_PROP;
      node0.isEmpty();
      node0.isDo();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = new Node(42);
      int int0 = Node.FLAG_LOCAL_RESULTS;
      Node node1 = new Node(32);
      Node node2 = node1.copyInformationFrom(node0);
      node1.isUnscopedQualifiedName();
      node1.toString();
      node1.isQualifiedName();
      node0.isFor();
      node0.isCase();
      node0.isSyntheticBlock();
      node1.addChildToBack(node0);
      node0.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      Node node2 = new Node(10, node0, node1, node1, node0);
      node2.mayMutateArguments();
      node2.isEquivalentTo(node0, false, false, false);
      node0.isLocalResultCall();
      Node node3 = null;
      try {
        node3 = new Node(36, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node(42, 42, 42);
      int int0 = Node.FLAG_LOCAL_RESULTS;
      Node node1 = new Node(32);
      Node node2 = node1.copyInformationFrom(node0);
      node1.isUnscopedQualifiedName();
      node1.toString();
      node1.isQualifiedName();
      node0.isFor();
      node0.isCase();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(41, 41, 89);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isFunction();
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte)70;
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node node2 = node0.cloneTree();
      node2.getQualifiedName();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = new Node(110);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.useSourceInfoFromForTree(node1);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      Node node2 = new Node(116, node0, node0, node0);
      node0.isNE();
      node2.isContinue();
      node0.isNumber();
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = new Node(47);
      Node node2 = new Node(57, node1, 54, (-96));
      node1.useSourceInfoFromForTree(node2);
      node1.addChildrenToBack(node0);
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString((-823), "is_constznt_name", (-823), (-823));
      HashSet<Node> hashSet0 = new HashSet<Node>();
      Node node1 = new Node(4, node0, node0, node0);
      node1.removeChild(node0);
      node1.getAncestor(53);
      node1.isNE();
      node1.isRegExp();
      node0.isCase();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      node0.cloneNode();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(41, 41, 89);
      node0.clonePropsFrom(node0);
      node0.isFunction();
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = Node.newString("7~jE|b&JmL\"B5j");
      node1.getSourceOffset();
      Node node2 = Node.newString("7~jE|b&JmL\"B5j", 47, (-2707));
      node0.isQualifiedName();
      node0.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      node0.mayMutateArguments();
      node0.isEquivalentTo(node0, false, true, true);
      node0.isLocalResultCall();
      node0.isLocalResultCall();
      node0.isSetterDef();
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.isWith();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(119);
      node0.cloneTree();
      node0.isInc();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = new Node(110);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      Node node1 = new Node(77, node0, node0, node0);
      node1.setSourceFileForTesting("var_args_name");
      node0.isAssign();
      node1.isVarArgs();
      node0.isNumber();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      node0.isString();
      Node node1 = new Node(98, node0, 48, 40);
      node1.isAnd();
      node1.useSourceInfoFrom(node0);
      node0.isWith();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newString("DEFAULT_CASE", (-29), (-29));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node0.setSourceFileForTesting("DEFAULT_CASE");
      node0.isLocalResultCall();
      node0.isFor();
      int int0 = Node.OPT_ARG_NAME;
      node0.getStaticSourceFile();
      node0.isVar();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node((-1959));
      node0.putIntProp((-252), (-3009));
      Node node1 = new Node((-252), node0, node0, node0, 37, 4095);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isOnlyModifiesThisCall();
      node1.isNoSideEffectsCall();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.isOnlyModifiesThisCall();
      Node.newString(40, "t'BHQ:q'oO", 30, 2);
      Node node2 = node1.getFirstChild();
      node0.isFor();
      node2.isDo();
      node2.isComma();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = new Node((-480), (-480), (-480));
      Node node1 = Node.newString(31, "<NOPjmDsz");
      Node node2 = new Node(37, node1, node1, 54, (-1108));
      Node node3 = node2.srcref(node1);
      node2.isGetElem();
      node3.getBooleanProp((-1572));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2196, nodeArray0);
      Node node1 = node0.cloneTree();
      node0.isNoSideEffectsCall();
      node1.setSourceEncodedPositionForTree(98);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "J,r{C{We({kT<");
      Node node2 = node1.cloneNode();
      node2.getInputId();
      node1.getJSDocInfo();
      node1.siblings();
      node2.getQualifiedName();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
      try { 
        Node.newString(2884, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newString((-1896), "VYc,m,Avo", (-847), 900);
      Node node1 = new Node((-1896), node0, node0, node0);
      Node node2 = Node.newString("VYc,m,Avo", 4095, 302);
      Node node3 = new Node((-1896), node1, node1, node2, node2, (-1342), 16);
      node3.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      node0.isString();
      Node node1 = new Node(98, node0, 48, 40);
      Node node2 = Node.newString(57, "K~jLa6Z<OSEMzo", 1, 50);
      node2.checkTreeEqualsImpl(node0);
      node1.isHook();
      node2.isNE();
      node1.getSourceOffset();
      node1.isTry();
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = new Node(42);
      int int0 = Node.FLAG_LOCAL_RESULTS;
      Node node1 = new Node(40);
      Node node2 = node0.copyInformationFrom(node1);
      node0.isUnscopedQualifiedName();
      node2.toString();
      node0.isQualifiedName();
      node0.isFor();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = new Node(113, 513, 513);
      Node node1 = Node.newString("lw;}OA=R?", 4095, 301);
      node0.clonePropsFrom(node1);
      node0.getInputId();
      node0.isWith();
      Node.newNumber(0.0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      int int0 = Node.OPT_ARG_NAME;
      Node node2 = new Node((-898), node1, node0);
      // Undeclared exception!
      try { 
        node2.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-463), (-463), 33);
      node0.isAssign();
      node0.isCall();
      Node node1 = new Node(32);
      node1.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Node node2 = Node.newNumber((double) 29, 48, 39);
      node2.mayMutateGlobalStateOrThrow();
      node1.isTypeOf();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node node1 = node0.cloneTree();
      int int0 = Node.OPT_ARG_NAME;
      node1.isBreak();
      node0.isDec();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node(53, node0, 6, (-2819));
      node1.getQualifiedName();
      Node.newNumber((double) 4095);
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString("VKB8`(y3;/AnzLzdbp");
      Node node1 = new Node(112, 1939, 2);
      node1.isFunction();
      InputId inputId0 = new InputId("{...}");
      node1.setInputId(inputId0);
      node0.getBooleanProp(40);
      node0.setString("zk;>");
      node0.isSyntheticBlock();
      node0.isEmpty();
      node1.isDo();
      node0.isAssign();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = new Node(41, 41, 89);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isFunction();
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = node0.srcrefTree(node1);
      node2.getBooleanProp(0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node3 = Node.newNumber((double) 56, 56, 112);
      node3.clonePropsFrom(node2);
      node2.mayMutateGlobalStateOrThrow();
      node0.isTypeOf();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newString("VKB8`(y3;/AnzLzdbp");
      Node node1 = new Node(112, 1939, 2);
      node1.isFunction();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = Node.newNumber((double) 112);
      node2.setLength(38);
      Node node3 = new Node((-874), node2, node2, node2, node1);
      node3.replaceChild(node2, node0);
      node2.isVarArgs();
      node3.isBlock();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2196, nodeArray0);
      Node node1 = node0.cloneTree();
      node0.isNoSideEffectsCall();
      String string0 = "J,r{C{We({kT<";
      node1.setSourceEncodedPositionForTree(98);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "J,r{C{We({kT<");
      Node node2 = Node.newString(38, "J,r{C{We({kT<", 720, 1);
      Node node3 = node2.cloneNode();
      node3.getInputId();
      node1.getJSDocInfo();
      node2.siblings();
      node3.getQualifiedName();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node.newNumber(1.4670034406342007, (-709), (-709));
      Node node0 = Node.newString("lm?vNVkcRi:kS}#x_+&", 52, 2045);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "IiputId ";
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newString("VKB8`(y3;/AnzLzdbp");
      Node node1 = new Node(112, 1939, 2);
      node1.isFunction();
      InputId inputId0 = new InputId("{...}");
      Node node2 = node1.cloneTree();
      node0.useSourceInfoFrom(node2);
      node0.isEquivalentToTyped(node2);
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = new Node(100, 100, 57);
      Node node1 = node0.cloneNode();
      int int0 = Node.OPT_ARG_NAME;
      node1.isBreak();
      node0.isDec();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node((-2358), node1, 56, 103);
      node0.getQualifiedName();
      Node.newNumber((double) 29);
      node2.isVoid();
      node1.isOnlyModifiesArgumentsCall();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m~zjFd<");
      Node node0 = new Node((-480), (-480), (-480));
      Node node1 = new Node(101);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node1.isEquivalentToTyped(node0);
      Node node2 = new Node(52, node0, node1, node0);
      node2.isNE();
      int int0 = Node.DIRECTIVES;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      node0.isContinue();
      node2.isNumber();
      node1.isContinue();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.addChildToFront(node0);
      node0.isNumber();
      node0.isGetProp();
      // Undeclared exception!
      node0.getAncestor(131072);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = new Node(42);
      node0.getSideEffectFlags();
      Node node1 = new Node(32);
      node1.copyInformationFrom(node0);
      node1.isUnscopedQualifiedName();
      node1.toString();
      node0.getJsDocBuilderForNode();
      node1.isQualifiedName();
      node1.isFor();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = node0.cloneTree();
      node0.isInc();
      node1.copyInformationFromForTree(node0);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> 105 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("EoHv");
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[4];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) templateType0;
      jSTypeArray0[3] = (JSType) templateType0;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      jSTypeRegistry0.createObjectType((String) null, node0, (ObjectType) templateType0);
      JSType[] jSTypeArray1 = new JSType[3];
      jSTypeArray1[2] = (JSType) templateType0;
      jSTypeArray1[1] = (JSType) templateType0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray1);
      node1.isEmpty();
      node1.isNoSideEffectsCall();
      Node node2 = Node.newString(4, "Not declared as a constructor");
      node1.setWasEmptyNode(true);
      node1.checkTreeEquals(node2);
      node1.isDefaultCase();
      node0.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newString((-823), "is_constznt_name", (-823), (-823));
      HashSet<Node> hashSet0 = new HashSet<Node>();
      Node node1 = new Node(12, node0, node0, node0);
      node1.isNE();
      Node node2 = node1.clonePropsFrom(node0);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isAdd();
      node0.isFromExterns();
      Node node1 = node0.cloneTree();
      node1.useSourceInfoFrom(node0);
      node0.isEquivalentToTyped(node1);
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isFunction();
      node1.getAncestors();
      node0.isBreak();
      Node node2 = new Node(93);
      node2.useSourceInfoIfMissingFromForTree(node0);
      node1.wasEmptyNode();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("EoHv");
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.setSourceEncodedPositionForTree(36);
      node0.getLength();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newString("VKB8`(y3;/AnzLzdbp");
      Node node1 = new Node(112, 1939, 2);
      node1.isFunction();
      InputId inputId0 = new InputId("{...}");
      node1.setInputId(inputId0);
      node0.getBooleanProp(40);
      node0.setString("zk;>");
      node0.isSyntheticBlock();
      node0.isEmpty();
      node1.isDo();
      node0.isFunction();
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = new Node(86, 86, 115);
      Node node1 = Node.newString(50, "Hd");
      Node node2 = new Node(4095, node0, node0, 49, 2);
      node1.getProp(30);
      node1.isOnlyModifiesArgumentsCall();
      node0.isBlock();
      node2.isContinue();
      Node node3 = new Node(115, 8, 4095);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Hd");
      node1.isIn();
      node3.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = new Node(132);
      Node node1 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      node0.mayMutateArguments();
      node0.isEquivalentTo(node0, false, true, false);
      node0.isLocalResultCall();
      node0.isLocalResultCall();
      node0.isSetterDef();
      node1.mayMutateGlobalStateOrThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeTemplateType((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType((String) null, node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(37, nodeArray0);
      node0.isQuotedString();
      node0.isQualifiedName();
      node0.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isBlock();
      node0.isThis();
      node0.getStaticSourceFile();
      node0.isDebugger();
      node0.isLocalResultCall();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-112);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)29;
      byteArray0[4] = (byte) (-29);
      byteArray0[5] = (byte)86;
      byteArray0[6] = (byte)124;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isSetterDef();
      Node node1 = new Node(1526, node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.isWith();
      node2.isSetterDef();
      Node node3 = null;
      try {
        node3 = new Node(83, node1, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Node node0 = new Node(31, 31, 89);
      node0.isSyntheticBlock();
      Node node1 = new Node(29, node0, node0, node0);
      node1.isDebugger();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node1.isAdd();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = new Node(56, 56, 89);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isFunction();
      node1.putIntProp((-854), 36);
      node1.getAncestors();
      node0.isBreak();
      node1.isFor();
      node0.isAssignAdd();
      Node node2 = new Node(30, node0);
      node2.isOr();
      node2.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("EoHv");
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isEmpty();
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString(4, "Not declared as a constructor");
      node0.setWasEmptyNode(true);
      node0.checkTreeEquals(node1);
      node0.isDefaultCase();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(42, 42, 42);
      node0.getStaticSourceFile();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "o_rqP");
      node0.setInputId((InputId) null);
      node0.putProp(42, "o_rqP");
      node0.isBreak();
      node0.setCharno((-4315));
      // Undeclared exception!
      try { 
        node0.mayMutateArguments();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node node1 = node0.cloneTree();
      node1.isEquivalentToTyped(node0);
      node0.isObjectLit();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = new Node(110);
      Node node1 = node0.cloneNode();
      node1.clonePropsFrom(node0);
      node0.isRegExp();
      node0.isDefaultCase();
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = Node.newString("com.google.common.base.CharMatcher$6", 93, 2225);
      Node node1 = new Node(30, 53, 4536);
      Node node2 = new Node(93, node0, node0, node1);
      node2.useSourceInfoFrom(node0);
      node2.getBooleanProp((-458));
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(35);
      Node node1 = new Node(35);
      node1.isDebugger();
      node0.srcrefTree(node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node2 = Node.newNumber(0.0, 52, (-928));
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newNumber((double) 15);
      node3.getBooleanProp(8);
      node2.isNot();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString(46, ",[");
      Node node3 = node1.cloneTree();
      node1.getQualifiedName();
      node0.isFalse();
      node1.isEquivalentToTyped(node0);
      node2.isLabel();
      node0.isObjectLit();
      node3.isGetProp();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newNumber((-145.11255946097));
      node0.isFor();
      Node node1 = new Node(52, node0);
      node1.hasOneChild();
      Node node2 = node1.copyInformationFrom(node0);
      node2.isVarArgs();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(53);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 53
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(126, 126, 126);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("Object#Key");
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = (JSType) templateType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, false, jSTypeArray0);
      functionType0.getNormalizedReferenceName();
      modificationVisitor0.caseFunctionType(functionType0);
      node0.getJsDocBuilderForNode();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = new Node(49, 203, (-3540));
      Node node1 = node0.cloneNode();
      node1.cloneNode();
      node1.children();
      int int0 = Node.OPT_ARG_NAME;
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = new Node(79);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      node0.clonePropsFrom(node1);
      node0.isBreak();
      node0.isBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      Node node2 = new Node(152, node0, 2986, 0);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(36, nodeArray0);
      node3.getQualifiedName();
      Node node4 = new Node(12, node2, 2, 52);
      node4.removeFirstChild();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = new Node(52, 1417, 1286);
      Node node1 = node0.cloneTree();
      node1.isInc();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INSTANCEOF 1417 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      node0.isAssign();
      node0.isCall();
      Node node1 = new Node(49);
      node1.isDebugger();
      Node node2 = node0.srcrefTree(node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      Node.newNumber(830.484128892, 49, 2789);
      node1.isQuotedString();
      node2.isTypeOf();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = new Node(35);
      Node node1 = node0.cloneNode();
      int int0 = Node.OPT_ARG_NAME;
      node0.isBreak();
      node0.isDec();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node((-3105), node0, 112, (-1644));
      Node node3 = new Node((-607));
      // Undeclared exception!
      try { 
        node2.replaceChild(node3, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newNumber((-145.11255946097));
      node0.isFor();
      Node node1 = new Node(52, node0);
      node1.hasOneChild();
      node1.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = new Node(92, 3, 3);
      node0.getAncestors();
      node0.isAssign();
      node0.isCall();
      Node node1 = new Node(37);
      node0.isDebugger();
      node1.srcrefTree(node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Node node2 = Node.newNumber((double) 0, 1, 37);
      node2.mayMutateGlobalStateOrThrow();
      node2.isTypeOf();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node node1 = node0.cloneTree();
      node0.isInc();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEC 103 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      int int0 = Node.OPT_ARG_NAME;
      node1.isBreak();
      node1.isEmpty();
      node0.isQualifiedName();
      Node node3 = new Node(1, node1, node0, node2, 38, 4095);
      node3.getChildBefore(node2);
      Node node4 = null;
      try {
        node4 = new Node(11, node2, 588, (-3879));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-1530), nodeArray0, (-1215), 13);
      node0.setType((-1527));
      Node node1 = new Node((-1530), node0);
      Node node2 = node1.removeChildren();
      node2.isNoSideEffectsCall();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node1.srcrefTree(node0);
      String string0 = "com.google.javascript.rhino.jstype.NoObjectType";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.NoObjectType");
      node1.isNoSideEffectsCall();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags((-3295));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1530
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isFor();
      node0.getLength();
      int int0 = Node.OPT_ARG_NAME;
      node0.isQualifiedName();
      node0.getStaticSourceFile();
      node0.getAncestors();
      Node node1 = new Node(47, node0, node0, node0, node0);
      node1.copyInformationFromForTree(node0);
      node0.isVar();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = new Node(32);
      Node node1 = Node.newString(1, ",[");
      node0.cloneTree();
      node1.getQualifiedName();
      Node node2 = Node.newNumber(3268.798457442921, 14, 54);
      node2.isContinue();
      node0.isContinue();
      node1.isTrue();
      Node node3 = new Node(30, node0, node0, (-5132), 31);
      node3.isNoSideEffectsCall();
      node3.isQuotedString();
      node2.isDefaultCase();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = new Node(110);
      Node node1 = node0.cloneNode();
      Node node2 = node0.cloneNode();
      node2.checkTreeEquals(node1);
      node1.mayMutateArguments();
      node1.isEquivalentTo(node0, false, false, false);
      node2.isLocalResultCall();
      node0.isAssignAdd();
      node0.isLocalResultCall();
      node1.isSetterDef();
      Node node3 = node2.useSourceInfoFrom(node1);
      Node.newNumber((double) 2);
      node3.isWith();
      node1.isSetterDef();
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node(105);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.getStaticSourceFile();
      Node node1 = new Node(54, node0, 4095, 2097143);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.wasEmptyNode();
      node0.isFunction();
      node1.replaceChild(node0, node2);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)37;
      byteArray0[2] = (byte)112;
      byteArray0[3] = (byte)103;
      byteArray0[4] = (byte) (-109);
      byteArray0[5] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(85, 125, 125);
      Node node1 = new Node(46, node0, 53, 4095);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isBlock();
      node0.getIntProp(125);
      node0.getStaticSourceFile();
      node2.isEquivalentToTyped(node1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.mayMutateGlobalStateOrThrow();
      node1.isEquivalentTo(node2, true, false, false);
      node1.isDo();
      node2.getFirstChild();
      node1.getType();
      node2.getBooleanProp((-738));
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("*+6XEX9I*Z");
      node0.isDo();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isStringKey();
      node0.getSideEffectFlags();
      Node node1 = Node.newString(2, "*+6XEX9I*Z");
      node0.useSourceInfoIfMissingFromForTree(node1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.getLength();
      node0.toString(false, false, false);
      node0.getChangeTime();
      char[] charArray0 = new char[6];
      charArray0[0] = 'E';
      charArray0[1] = '!';
      charArray0[2] = '-';
      charArray0[3] = 'z';
      charArray0[4] = '.';
      charArray0[5] = ')';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        node0.appendStringTree(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = new Node((-480), (-480), (-480));
      Node node1 = Node.newString(38, "wqWDD57>_w=@;y/YK");
      node1.getSideEffectFlags();
      Node node2 = new Node(1);
      node1.isUnscopedQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node2.setIsSyntheticBlock(true);
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node1.getJsDocBuilderForNode();
      node0.isQualifiedName();
      node2.isFor();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = new Node(32);
      Node node1 = Node.newString(1, ",[");
      Node node2 = node0.cloneTree();
      node2.getQualifiedName();
      node2.isFalse();
      node1.isEquivalentToTyped(node0);
      node1.isCase();
      node0.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      node0.isCast();
      Node node1 = new Node(44, node0, node0);
      node0.isString();
      node0.isThis();
      node1.isHook();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      node0.isAssign();
      node0.isCall();
      Node node1 = new Node(43);
      node1.isDebugger();
      node1.srcrefTree(node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(38, nodeArray0, 1, 63);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      Node node3 = Node.newNumber(57.0, 0, 29);
      node0.mayMutateGlobalStateOrThrow();
      node3.isTypeOf();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newNumber((-155.4696919361457));
      node0.isFor();
      Node node1 = new Node(52, node0);
      Node node2 = new Node(30, node1);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((double) 89);
      Node node1 = new Node(52);
      Node node2 = new Node((-1445));
      node2.isEquivalentTo(node0, true, true, true);
      node2.cloneNode();
      node0.getChangeTime();
      node2.isTrue();
      node2.isDefaultCase();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = new Node(35);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node0.isQualifiedName();
      Node node2 = new Node(47, node0, 53, 4095);
      node0.useSourceInfoIfMissingFromForTree(node2);
      node0.wasEmptyNode();
      node2.isFunction();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = new Node(124);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = node0.getLastSibling();
      node0.isUnscopedQualifiedName();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = new Node((-480), (-480), (-480));
      Node node1 = Node.newString(31, "<NOPjmDsz");
      node1.getString();
      Node node2 = new Node(37, node1, node1, 54, (-1108));
      node0.removeProp(53);
      node2.isGetElem();
      node2.clonePropsFrom(node0);
      node0.isEquivalentToTyped(node0);
      node2.isCase();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newString("VKB8`Ky3;/AnzLzdbpF");
      node0.isTypeOf();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      Node node2 = node0.cloneNode();
      int int0 = Node.OPT_ARG_NAME;
      node2.setSourceFileForTesting("second new child has existing parent");
      node1.isBreak();
      node0.isWhile();
      node2.isDefaultCase();
      Node node3 = Node.newString((-944), "second new child has existing parent", 743, 103);
      node1.isFromExterns();
      node1.isQualifiedName();
      node2.getSourceFileName();
      node3.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = new Node(35);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node0.isQualifiedName();
      node0.getJSDocInfo();
      node1.isAdd();
      node1.isObjectLit();
      node0.isEmpty();
      node1.addChildToFront(node0);
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("EoHv");
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isParamList();
      node0.isQualifiedName();
      Node node1 = new Node(31, node0, node0, node0, 54, 1);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = new Node((-480), (-480), (-480));
      Node node1 = Node.newString(130, "<NOPjmDsz");
      Node node2 = node1.clonePropsFrom(node0);
      Node node3 = new Node(37, node1, node1, 54, (-1108));
      node0.removeProp(53);
      node3.copyInformationFromForTree(node1);
      node3.isGetElem();
      node2.isEquivalentToTyped(node0);
      node3.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      Node node2 = node0.cloneNode();
      int int0 = Node.OPT_ARG_NAME;
      node2.setSourceFileForTesting("second new child has existing parent");
      node1.isBreak();
      node2.getInputId();
      node0.isWhile();
      node0.isArrayLit();
      Node node3 = new Node(8, node2, 35, 37);
      node2.getQualifiedName();
      Node node4 = Node.newNumber((double) 120);
      node4.isStringKey();
      node2.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(124, (-1474), (-656));
      node0.getJSDocInfo();
      Node node1 = new Node(48);
      node0.wasEmptyNode();
      Node node2 = new Node((-1167), node0, node1, node0);
      node2.removeFirstChild();
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1167
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = new Node(110);
      Node node1 = new Node(36, 53, 153);
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node0.getAncestors();
      node1.isBreak();
      Node node3 = new Node(15);
      node0.isDebugger();
      node3.isBlock();
      node2.isOptionalArg();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = new Node(41, 41, 89);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isFunction();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InputId inputId0 = new InputId("Z3z>");
      node1.setInputId(inputId0);
      Node node2 = Node.newString("VKB8`(y3E;/AnzLzd!p");
      Node.newString("7~jE|b&JmL\"B5j", 47, (-2707));
      node0.isEquivalentTo(node1, false, true, false);
      node2.mayMutateGlobalStateOrThrow();
      node2.isIf();
      node0.isNot();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("Object#Key");
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = (JSType) templateType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, false, jSTypeArray0);
      functionType0.getParentScope();
      functionType0.getNormalizedReferenceName();
      modificationVisitor0.caseFunctionType(functionType0);
      Vector<JSType> vector0 = new Vector<JSType>(15);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.useSourceInfoIfMissingFrom(node1);
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "side_effect_flags");
      Node node0 = Node.newNumber((-145.11255946097));
      node0.isFor();
      Node node1 = new Node(52, node0);
      node0.addChildToFront(node1);
      node0.getFirstChild();
      node1.hasOneChild();
      node1.putIntProp(2, 48);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(53);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 53
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = new Node(122);
      Node node1 = node0.cloneNode();
      Node node2 = node0.cloneNode();
      node2.checkTreeEquals(node0);
      node0.mayMutateArguments();
      boolean boolean0 = false;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = new Node(116);
      Node node1 = node0.cloneTree();
      InputId inputId0 = new InputId("gbq$G(s");
      inputId0.toString();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      Node node2 = new Node(145, node0, node0, node1, node0);
      nodeArray0[2] = node2;
      Node node3 = null;
      try {
        node3 = new Node(287, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = new Node(79, 3, 79);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node0.isBreak();
      node0.getInputId();
      node2.isWhile();
      node0.isBlock();
      node2.isArrayLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node3 = new Node(152, node0, 2986, 0);
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(36, nodeArray0);
      node4.getQualifiedName();
      Node node5 = new Node(12, node3, 2, 52);
      node3.isLabelName();
      node0.useSourceInfoIfMissingFrom(node4);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newNumber((-8.314821944769331), (-709), (-709));
      node0.isCast();
      Node node1 = new Node(5, node0, node0);
      node1.isEquivalentTo(node1);
      node0.isThis();
      node1.isHook();
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = new Node(155);
      Node node1 = node0.cloneNode();
      Node node2 = node0.cloneNode();
      int int0 = Node.OPT_ARG_NAME;
      node0.isQualifiedName();
      node0.getStaticSourceFile();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      Node node3 = new Node(4095, node1, node1, node0, node2);
      node1.isVar();
      node2.isGetterDef();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CAST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = new Node(145, 145, 145);
      Node node1 = new Node(47, node0, node0, node0, node0);
      node0.isQuotedString();
      node1.isSyntheticBlock();
      Node node2 = new Node(757);
      node1.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node1.srcrefTree(node0);
      Node node3 = Node.newNumber(1.0, 100, 40);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node1.mayMutateGlobalStateOrThrow();
      node2.isTypeOf();
      node3.isNot();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Q40%2oo/F:X");
      Node node0 = Node.newString("4*E?");
      node0.mayMutateGlobalStateOrThrow();
      node0.setQuotedString();
      node0.setLength(36);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isIn();
      node0.isHook();
      node0.getStaticSourceFile();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING 4*E? [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000002] [length: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = new Node(2601);
      Node node1 = Node.newString(1472, "T)$x5@WEPhLRsMOb");
      node1.isSyntheticBlock();
      Node node2 = node1.clonePropsFrom(node0);
      node2.isFunction();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.getJSDocInfo();
      node1.isCall();
      Node node3 = new Node(50, 2, 29);
      node1.isDebugger();
      node2.isSwitch();
      Node.newString("STRING");
      node0.isExprResult();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newNumber((-145.11255946097));
      node0.isFor();
      Node node1 = new Node(52, node0);
      node0.addChildToFront(node1);
      node1.hasOneChild();
      Node node2 = new Node(57);
      node0.isCase();
      Node.newString(40, " L", (-2718), 16);
      // Undeclared exception!
      node1.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("EoHv");
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isEmpty();
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString(29, "Object#Element", 12, 43);
      node0.setWasEmptyNode(true);
      node0.checkTreeEquals(node1);
      node1.isOnlyModifiesThisCall();
      node1.isIn();
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      node0.isGetProp();
      node0.checkTreeEquals(node0);
      node0.getSideEffectFlags();
      node0.isQuotedString();
      node0.isEquivalentTo(node0, false, false, false);
      node0.setSourceEncodedPositionForTree(0);
      node0.getLength();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newNumber((-145.11255946097));
      node0.isFor();
      Node node1 = new Node(29, node0, node0, node0, 54, 1);
      node0.addChildToFront(node1);
      Node node2 = new Node(57);
      node0.isCase();
      node0.addChildrenAfter(node2, node1);
      node0.isIf();
      Node.newString("VKB8`(y3;/AnzLzdbp");
      // Undeclared exception!
      try { 
        node0.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("EoHv");
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) templateType0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isEmpty();
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString(29, "Object#Element", 12, 43);
      node0.setWasEmptyNode(true);
      node0.checkTreeEquals(node1);
      node1.isOnlyModifiesThisCall();
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.isVoid();
      node0.setIsSyntheticBlock(true);
      Node node1 = new Node(23, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.isWith();
      node1.isSetterDef();
      node2.isGetterDef();
      node1.getIntProp(15);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getAncestors();
      node0.isBreak();
      node0.isCall();
      Node node1 = new Node(93);
      node1.isDebugger();
      node1.clonePropsFrom(node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node2 = Node.newNumber((double) 8, 55, 15);
      node2.setLength(39);
      node2.getSourceOffset();
      node0.mayMutateGlobalStateOrThrow();
      Node node3 = new Node(31, node2, node0, node2, node2, 28, (-1702));
      node1.isHook();
      try { 
        node3.setString("O3nTHE)s9Vh^g+t");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DELPROP is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      Node node1 = new Node(38);
      node0.checkTreeEquals(node1);
      node1.mayMutateArguments();
      node1.isEquivalentTo(node0, true, false, false);
      node0.isLocalResultCall();
      node1.isAssignAdd();
      node0.isLocalResultCall();
      node0.isSetterDef();
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.isWith();
      Node node3 = Node.newNumber((double) 57, 2, 0);
      node3.isSetterDef();
      node0.isGetterDef();
      node2.getIntProp(4095);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newString((-823), "is_constant_name");
      Node node1 = node0.cloneTree();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node1.isNoSideEffectsCall();
      Node node2 = new Node(42, node0, 2, 48);
      node2.getQualifiedName();
      Node node3 = new Node((-2022), node2, 46, 57);
      node3.isFalse();
      node3.getBooleanProp(31);
      Node node4 = Node.newString("is_constant_name", 0, 1);
      node4.isCase();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node(108);
      Node node1 = node0.cloneNode();
      Node node2 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      node2.mayMutateArguments();
      node2.isEquivalentTo(node0, true, false, false);
      node0.isLocalResultCall();
      node0.isAssignAdd();
      node2.isLocalResultCall();
      node2.isSetterDef();
      // Undeclared exception!
      try { 
        node0.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("EoHv");
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) templateType0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isEmpty();
      node0.isQualifiedName();
      Node node1 = Node.newNumber((-73.2973));
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = new Node(37, 37, 87);
      node0.isSyntheticBlock();
      node0.isFunction();
      node0.isCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("mbpL+O", false);
      node0.addChildrenToBack(node0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = Node.newString(55, "ORDINARY");
      Node node2 = node0.cloneTree();
      InputId inputId0 = new InputId("*B~KL2GJj;");
      InputId inputId1 = new InputId("");
      inputId1.toString();
      node1.setInputId(inputId1);
      Node node3 = Node.newString("ORDINARY");
      node2.getAncestors();
      node3.isCatch();
      Node node4 = new Node(15, node0);
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      node4.isWhile();
      node3.isDo();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newNumber(450.5082954438);
      String string0 = "IDENTITY";
      Node node1 = Node.newString("IDENTITY");
      Node node2 = new Node((-2547), node0, node0, node0);
      Node node3 = new Node((-2547), node2, node2, node2, node2);
      Node node4 = node3.copyInformationFrom(node2);
      node2.isFromExterns();
      Node node5 = node3.copyInformationFromForTree(node0);
      node5.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node4, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = new Node((-1724));
      Node node1 = new Node(120, node0, node0, node0, 111, 0);
      Node node2 = node1.cloneNode();
      Node node3 = node1.cloneNode();
      node1.isLocalResultCall();
      node1.getStaticSourceFile();
      node3.getInputId();
      node0.isUnscopedQualifiedName();
      Node node4 = Node.newString(32, "KkhK6n1#9O8");
      node2.removeProp(111);
      Node node5 = new Node(15);
      node1.isUnscopedQualifiedName();
      node4.isIf();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node(3544, 3544, 32);
      node0.addSuppression((String) null);
      Node node1 = new Node(31);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node_NodeMismatch0.equals(node0);
      node0.addSuppression((String) null);
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = new Node((-480));
      Node node1 = Node.newString(130, "<NOPjmDsz");
      node0.isSyntheticBlock();
      node1.clonePropsFrom(node0);
      Node node2 = new Node(37, node1, node1, 54, (-1108));
      node0.removeProp(53);
      node2.isGetElem();
      node1.isUnscopedQualifiedName();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = node0.cloneTree();
      node0.isSyntheticBlock();
      node1.clonePropsFrom(node0);
      node0.isFunction();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node1.getJSDocInfo();
      node0.isCall();
      Node node2 = new Node((-597));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node3.isDebugger();
      node1.isSwitch();
      Node node4 = Node.newString("cJ~ SlwYhS.");
      node4.isExprResult();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newString((-325), "ye0?<");
      Node node1 = new Node(2, node0, node0);
      node1.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node node2 = Node.newString("xqd#$");
      Node node3 = Node.newString("Zzk_;>", (-4540), 46);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("x{8v$'`#L", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node3.isEquivalentTo(node2, false, true, false);
      Node.newString(4095, "ye0?<", 120, 56);
      node0.isFromExterns();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newString(665, "empty_block", 53, 33);
      Node node1 = new Node(50, node0, node0, node0, node0, 50, (-3743));
      Node node2 = new Node(35, node1, node1);
      Node node3 = new Node(665, node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      AllType allType0 = mock(AllType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(allType0).toString();
      ImmutableList<AllType> immutableList0 = ImmutableList.of(allType0, allType0, allType0, allType0, allType0, allType0, allType0, allType0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      ImmutableList<JSType> immutableList2 = ImmutableList.copyOf((Iterable<? extends JSType>) immutableList1);
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) immutableList2);
      node2.addChildToFront(node4);
      node0.isNumber();
      node2.removeChild(node4);
      node1.isCast();
      node2.children();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)116;
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte)50;
      byteArray0[4] = (byte)37;
      byteArray0[5] = (byte)94;
      byteArray0[6] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      modificationVisitor0.caseNullType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      modificationVisitor0.caseNoObjectType();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = Node.newString(46, "Unknown class name");
      node0.isEquivalentTo(node1, true, true, true);
      node0.isVar();
      node0.isDec();
      node0.getLastSibling();
      Node.extractLineno(0);
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(47, 47, 56);
      Node node2 = node0.clonePropsFrom(node1);
      Node.newNumber(1831.119, 64, (-738));
      node2.isFunction();
      node0.getAncestors();
      node2.isBreak();
      node1.isCall();
      node1.useSourceInfoFrom(node2);
      Node node3 = new Node(4095);
      node3.isDebugger();
      node1.isBlock();
      node1.isOptionalArg();
      node3.isLabel();
      node0.isGetProp();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = new Node((-666));
      Node node1 = new Node((-666), node0, node0, node0, 54, 408);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = new Node(38, 38, 87);
      node0.isSyntheticBlock();
      Node node1 = node0.clonePropsFrom(node0);
      node0.isFunction();
      node1.isCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("CharMatcher.and(", false);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node_NodeMismatch0.equals("CharMatcher.and(");
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node2.checkTreeEquals(node0);
      node0.mayMutateArguments();
      node0.isEquivalentTo(node1, false, true, false);
      node1.isLocalResultCall();
      node0.isAssignAdd();
      node0.isLocalResultCall();
      node0.isSetterDef();
      Node node3 = node0.useSourceInfoFrom(node2);
      node3.isWith();
      node2.isSetterDef();
      node1.isGetterDef();
      node3.addChildrenToBack(node0);
      // Undeclared exception!
      node3.toStringTree();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = new Node(145, 145, 145);
      Node node1 = new Node(47, node0, node0, node0, node0);
      node0.getSideEffectFlags();
      node1.isQuotedString();
      node0.isQualifiedName();
      node1.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node1.isBlock();
      node0.isNoSideEffectsCall();
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      int int0 = Node.JSDOC_INFO_PROP;
      node0.isFor();
      node1.isCast();
      node1.isRegExp();
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(41, 41, 89);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isFunction();
      byte[] byteArray0 = new byte[1];
      node0.useSourceInfoFrom(node1);
      byteArray0[0] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isBlock();
      node1.isNoSideEffectsCall();
      node0.getStaticSourceFile();
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      int int0 = Node.JSDOC_INFO_PROP;
      node1.isFor();
      node0.isSetterDef();
      node0.isThis();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NULL 41 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("");
      Node node1 = new Node(43, node0, node0, node0);
      node0.setLineno(46);
      node1.isStringKey();
      node1.isDefaultCase();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node.newString(126, "cU:<+T1");
      Node.newString("cU:<+T1", 1010, 52);
      Node node0 = new Node(47);
      Node node1 = Node.newString((-1565), "cU:<+T1", 1, 51);
      Node node2 = new Node(39, node0, node0, node1);
      // Undeclared exception!
      try { 
        node2.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isFunction();
      node0.getAncestors();
      node0.isComma();
      node0.getJSDocInfo();
      Node node1 = node0.cloneNode();
      node1.isCall();
      node1.isUnscopedQualifiedName();
      node1.isParamList();
      node0.isQualifiedName();
      node1.getJSDocInfo();
      node0.isGetterDef();
      Node node2 = new Node(38, node1, node1, node1, node1);
      Node node3 = new Node(2, node0, node2);
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(0);
      node0.cloneNode();
      node0.getSourceFileName();
      JSType jSType0 = null;
      Node.newNumber(1.0, 53, 48);
      // Undeclared exception!
      try { 
        Node.newString(42, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = new Node(38, 38, 87);
      node0.isSyntheticBlock();
      Node node1 = node0.clonePropsFrom(node0);
      node0.isFunction();
      node1.isCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("CharMatcher.and(", false);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.copyInformationFromForTree(node1);
      node1.getAncestor(300);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = new Node(145, 145, 145);
      Node node1 = new Node(47, node0, node0, node0, node0);
      Node node2 = new Node(1, 51, 1918);
      node1.cloneNode();
      node2.isRegExp();
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = new Node(13);
      node0.cloneTree();
      InputId inputId0 = new InputId("&");
      inputId0.toString();
      node0.isInc();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NE is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isGetProp();
      node0.checkTreeEquals(node0);
      node0.setType(120);
      node0.getSideEffectFlags();
      node0.isQuotedString();
      node0.isEquivalentTo(node0, false, false, false);
      node0.isOptionalArg();
      node0.isContinue();
      node0.getSideEffectFlags();
      node0.isTrue();
      node0.isQuotedString();
      node0.isDefaultCase();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(92, 3, 96);
      node0.isNoSideEffectsCall();
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.isOnlyModifiesArgumentsCall();
      node0.getAncestors();
      node0.isHook();
      node0.isOnlyModifiesThisCall();
      node0.isUnscopedQualifiedName();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.putIntProp(36, 3);
      node0.isNew();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ASSIGN_URSH 3 [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = node0.cloneTree();
      InputId inputId0 = new InputId("{Qd(f\"L=7jpl=PM0tJ{");
      inputId0.toString();
      node0.isInc();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = new Node(92, (-7), 96);
      node0.isNoSideEffectsCall();
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getStaticSourceFile();
      Node node1 = Node.newNumber(3525.7428, 3502, 46);
      node1.isDefaultCase();
      node1.children();
      Node node2 = new Node(55, node0, node0, 126, 32);
      node2.removeFirstChild();
      node2.isCast();
      node1.isRegExp();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = new Node(31, (-480), 31);
      node0.isFunction();
      node0.isQualifiedName();
      node0.getStaticSourceFile();
      node0.getAncestors();
      Node node1 = new Node(102, node0, node0);
      node1.getSourceFileName();
      node1.isVar();
      node0.isDo();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      int int0 = Node.OPT_ARG_NAME;
      InputId inputId0 = new InputId("String node not created with Node.newString");
      node1.setInputId(inputId0);
      // Undeclared exception!
      try { 
        node1.getBooleanProp(53);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newNumber((-145.11255946097));
      Node node1 = Node.newString("ORDINARY", 125, (-1333));
      node1.setSourceEncodedPositionForTree(54);
      node1.getLength();
      node0.getAncestor(125);
      node0.isTrue();
      node1.getCharno();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = new Node(3544, 3544, 32);
      node0.isCast();
      Node node1 = new Node(42, node0);
      Node node2 = Node.newString("VKB8`Ky3;/AnzLzdbpF");
      node2.isEquivalentTo(node0);
      node1.isThis();
      node0.isFalse();
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3544
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = new Node(35, 35, 89);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node0.getJSDocInfo();
      node0.isQualifiedName();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.isCatch();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-82);
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte) (-18);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.isOptionalArg();
      Node node2 = new Node(42, node0, 52, 57);
      node0.getJsDocBuilderForNode();
      node2.putIntProp(47, 42);
      node2.isTrue();
      node2.getLastSibling();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = Node.newNumber((-145.11255946097));
      Node node1 = new Node(52, node0);
      node0.addChildToFront(node1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isNumber();
      Node node2 = node1.cloneNode();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.isRegExp();
      node2.isDefaultCase();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = new Node(89);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      Node node2 = new Node(21, node0, node0, node0, node1, 2901, 105);
      Node node3 = new Node(29, node2);
      node1.addChildToFront(node3);
      node2.hasOneChild();
      Node node4 = new Node(878);
      node3.isCase();
      // Undeclared exception!
      try { 
        node4.addChildrenAfter(node3, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isGetProp();
      node0.checkTreeEquals(node0);
      node0.getSideEffectFlags();
      node0.isQuotedString();
      node0.isEquivalentTo(node0, false, false, false);
      node0.isOptionalArg();
      node0.isContinue();
      node0.isHook();
      node0.isScript();
      Node node1 = new Node(1);
      node1.isThis();
      node0.isFalse();
      node0.srcrefTree(node1);
      // Undeclared exception!
      try { 
        Node.newString(3875, (String) null, (-2485), 30);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = new Node(145, 145, 145);
      Node node1 = new Node(47, node0, node0, node0, node0);
      node0.getSideEffectFlags();
      node1.isQuotedString();
      node0.isSyntheticBlock();
      node0.isGetterDef();
      node1.isNumber();
      node0.getJSDocInfo();
      node1.isCall();
      node1.isGetElem();
      Node node2 = Node.newNumber((double) 55, 4095, 57);
      node2.setSourceEncodedPosition(57);
      node1.isNoSideEffectsCall();
      node2.isComma();
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node0.getJSDocInfo();
      node2.isCall();
      Node node3 = new Node(29, node2, node2, node0);
      node0.useSourceInfoFrom(node2);
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node3.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2474));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node3.isWhile();
      node0.hasOneChild();
      node3.getSourcePosition();
      node1.isDo();
      node_SideEffectFlags1.areAllFlagsSet();
      node2.toString(true, false, false);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      node0.putBooleanProp((-709), false);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      jSTypeRegistry0.createFunctionType(jSType0, node0);
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      ModificationVisitor modificationVisitor2 = new ModificationVisitor(jSTypeRegistry0);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(98, node0, 48, 40);
      node1.useSourceInfoIfMissingFrom(node0);
      node1.isAnd();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = new Node(86, 86, 86);
      Node node1 = Node.newString(50, "Hd");
      node0.isStringKey();
      Node node2 = new Node(49, node1);
      node1.getProp(30);
      node1.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newString("Hd");
      node1.isInstanceOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(12);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node4 = new Node(43, node3, 53, 2);
      node4.copyInformationFrom(node0);
      node3.isDo();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = new Node(110);
      Node node1 = node0.cloneTree();
      InputId inputId0 = new InputId((String) null);
      inputId0.toString();
      node0.isInc();
      Node node2 = new Node(2621, node0, node0, 2, 60);
      node2.removeProp(4);
      Node node3 = new Node(111, node1, node2, 80, 921);
      node3.isGetElem();
      Node node4 = Node.newNumber((double) 1);
      node4.isUnscopedQualifiedName();
      Node node5 = new Node(153);
      node5.getAncestor(0);
      // Undeclared exception!
      try { 
        node3.addChildToFront(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newString("VKB8`(y3;/AnzLzdbp");
      Node node1 = new Node(51, node0, node0);
      Node node2 = node1.cloneTree();
      InputId inputId0 = new InputId("");
      inputId0.toString();
      node0.setInputId(inputId0);
      Node node3 = Node.newString("InputId: ");
      node2.getAncestors();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.isOnlyModifiesThisCall();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node4 = new Node(4807, node2, 51, 51);
      node1.getQualifiedName();
      node0.checkTreeTypeAwareEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = new Node(35, 35, 89);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node0.getJSDocInfo();
      node0.isQualifiedName();
      node0.clonePropsFrom(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isQualifiedName();
      node0.isLocalResultCall();
      node1.getAncestors();
      Node node2 = new Node(54, 30, 40);
      node2.isNoSideEffectsCall();
      node1.isComma();
      Node node3 = new Node(1, node0, node2, 50, 51);
      node3.isStringKey();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = new Node(3544, 3544, 32);
      Node node1 = new Node(2446, 1, 57);
      Node node2 = new Node((-2627), node1);
      node2.addChildToFront(node0);
      node1.isNumber();
      node2.removeChild(node1);
      node0.isCast();
      node2.children();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = new Node(110);
      node0.getAncestors();
      Node node1 = new Node(1, 49, 49);
      node0.cloneNode();
      node0.isRegExp();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = new Node(105);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.getStaticSourceFile();
      Node node1 = new Node(54, node0, 4095, 2097152);
      node0.wasEmptyNode();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = new Node(124);
      Node node1 = Node.newString(50, "p5kN'gqq>nS{>7F");
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node2.isScript();
      node2.isCall();
      Node node3 = new Node(93);
      node3.isDebugger();
      Node node4 = new Node((-2630), node2, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node3.isBlock();
      node1.isOptionalArg();
      node0.children();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = Node.newString(31, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = Node.newString(54, "<NOPjmDsz");
      node2.isGetterDef();
      node1.isNumber();
      node0.getJSDocInfo();
      node2.isCall();
      node1.isGetElem();
      node0.setSideEffectFlags(16);
      node2.getString();
      node1.isParamList();
      node1.getJsDocBuilderForNode();
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = new Node(120);
      String string0 = "{7";
      Node node1 = new Node(51, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = null;
      try {
        node2 = new Node(43, node0, node0, (-2290), 54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      String string0 = "<NOPjmDsz";
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      String string1 = "second new child has existing parent";
      Node node3 = Node.newString("second new child has existing parent", (-2627), 8199);
      node2.isDelProp();
      node1.setSourceEncodedPositionForTree(48);
      Node[] nodeArray0 = new Node[7];
      Node node4 = new Node((-1681), 51, 145);
      nodeArray0[0] = node4;
      nodeArray0[1] = node2;
      nodeArray0[2] = node3;
      Node node5 = Node.newString("Z3z>", 98, 8);
      nodeArray0[3] = node5;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node2;
      Node node6 = null;
      try {
        node6 = new Node(4095, nodeArray0, 4095, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      Node node1 = Node.newString(831, "VKB8`(y3;/AnzLzdbp");
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isComma();
      node0.getJSDocInfo();
      node1.cloneNode();
      node2.isCall();
      node0.isUnscopedQualifiedName();
      node0.isParamList();
      node2.isQualifiedName();
      node1.getJSDocInfo();
      node0.isGetterDef();
      node0.isInstanceOf();
      Node node3 = new Node(38, node0, node0);
      node2.isTry();
      Node.newString("VKB8`(y3;/AnzLzdbp");
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = new Node(120);
      node0.getSourceFileName();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node((-4287), node0, node0, 2, (-91));
      node1.getProp(8);
      node1.isOnlyModifiesArgumentsCall();
      node0.isBlock();
      Node node2 = new Node(49, 49, 4095);
      node2.isContinue();
      Node node3 = new Node(713, 2, 112);
      node3.useSourceInfoIfMissingFromForTree(node2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = new Node(125);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Node node1 = new Node(38);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.removeProp(125);
      node0.isInc();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "*nN$)LA\"}Qj?]E$";
      String string1 = "cU:<+T1";
      // Undeclared exception!
      try { 
        node1.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = new Node(86, 86, 86);
      Node node1 = Node.newString(50, "Hd");
      node0.isStringKey();
      Node node2 = new Node(49, node1);
      node1.getProp(30);
      node1.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newString("Hd");
      node1.isInstanceOf();
      node3.isCall();
      node1.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Hd");
      node_FileLevelJsDocBuilder0.append("Hd");
      node1.isCatch();
      node2.isThrow();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      Node node1 = node0.cloneNode();
      node0.cloneNode();
      int int0 = Node.OPT_ARG_NAME;
      node0.isQualifiedName();
      node1.getStaticSourceFile();
      node0.getAncestors();
      Node node2 = new Node(8, node0, node0);
      node1.isEquivalentTo(node2);
      node1.isVar();
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("EoHv");
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) templateType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, false, jSTypeArray0);
      functionType0.getNormalizedReferenceName();
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, jSTypeArray0[2]);
      modificationVisitor0.caseFunctionType(functionType1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isEmpty();
      Node node1 = Node.newString(29, "Object#Element", 12, 43);
      node0.checkTreeEquals(node1);
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newNumber((-145.11255946097));
      node0.isFor();
      Node node1 = new Node(52, node0);
      node1.checkTreeEqualsImpl(node0);
      node0.addChildToFront(node1);
      node1.hasOneChild();
      node1.putIntProp(2, 48);
      node1.srcref(node0);
      Node.newString(154, "ys2g;", 48, 39);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(53);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 53
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = new Node(41, 41, 89);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isFunction();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InputId inputId0 = new InputId("Z3z>");
      node1.setInputId(inputId0);
      Node node2 = Node.newString("VKB8`(y3E;/AnzLzd!p");
      Node node3 = Node.newString("7~jE|b&JmL\"B5j", 466, (-2707));
      node1.isEquivalentTo(node3, false, false, false);
      node0.isEquivalentTo(node1, false, false, false);
      node2.mayMutateGlobalStateOrThrow();
      node0.isFromExterns();
      node1.getAncestor(132);
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isTry();
      node0.isFor();
      node0.getLength();
      node0.addChildToFront(node0);
      node0.getStaticSourceFile();
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.setDirectives(hashSet0);
      node0.wasEmptyNode();
      node0.isBlock();
      node0.isOptionalArg();
      node0.getDouble();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isFunction();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InputId inputId0 = new InputId("Z3z>");
      node1.setInputId(inputId0);
      node0.getBooleanProp(16);
      try { 
        node1.setString("Z3z>");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DELPROP 31 [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isFunction();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InputId inputId0 = new InputId("Z3z>");
      inputId0.toString();
      node1.setInputId(inputId0);
      Node node2 = Node.newString("VKB8`(y3;/AnzLzdbp");
      Node node3 = Node.newString("7~jE|b&JmL\"B5j", 466, (-2707));
      node0.useSourceInfoIfMissingFrom(node3);
      node1.isEquivalentTo(node3, false, false, false);
      node0.isEquivalentTo(node1, false, false, false);
      node2.mayMutateGlobalStateOrThrow();
      node0.isFromExterns();
      node1.getAncestor(132);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node0.cloneNode();
      node2.isNumber();
      node1.isLocalResultCall();
      node0.getStaticSourceFile();
      node0.isHook();
      node1.getInputId();
      node2.isUnscopedQualifiedName();
      Node.newString(32, "KkhK6n1#9O8");
      node2.removeProp(46);
      Node node3 = new Node(38);
      node3.isOr();
      // Undeclared exception!
      try { 
        node3.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = new Node(38, 38, 89);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.isCall();
      node2.isDebugger();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.getJSDocInfo();
      node1.isAdd();
      // Undeclared exception!
      try { 
        node1.setDouble(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 55
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node0.mayMutateArguments();
      node2.isComma();
      Node node3 = Node.newString((-4068), "com.google.javascript.rhino.jstype.FunctionType$Kind");
      Node node4 = new Node(2297, node0, node2, node2, node3, 0, (-115));
      node4.getJSDocInfo();
      node3.cloneNode();
      node1.isCall();
      node0.isUnscopedQualifiedName();
      node4.isParamList();
      node4.isQualifiedName();
      node3.getJSDocInfo();
      node3.isGetterDef();
      node4.isInstanceOf();
      Node node5 = Node.newString("com.google.javascript.rhino.jstype.FunctionType$Kind", 0, 122);
      Node node6 = node4.removeChildren();
      Node node7 = new Node(4, node5, node1);
      node3.isTry();
      Node.newString("Z3z>");
      node6.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = new Node(31, 31, 119);
      Node node1 = node0.clonePropsFrom(node0);
      node1.getAncestors();
      node0.isQuotedString();
      node1.isCall();
      Node node2 = new Node(93);
      node0.isGetterDef();
      node0.isEquivalentToShallow(node1);
      node1.srcrefTree(node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node.newNumber((double) 8, 982, 15);
      node1.mayMutateGlobalStateOrThrow();
      node1.isTypeOf();
      node0.isNot();
      node2.getIntProp(152);
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = new Node((-463), (-463), (-463));
      Node node1 = Node.newString(50, "/w");
      node0.isSyntheticBlock();
      Node node2 = node1.clonePropsFrom(node0);
      node2.isFunction();
      node2.isCall();
      Node node3 = new Node(39, node0, node0, node2);
      node2.isDebugger();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      LinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();
      linkedHashSet1.add("<NOPjmDsz");
      node2.getJSDocInfo();
      node1.isAdd();
      // Undeclared exception!
      try { 
        node3.setDouble(2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newNumber((-145.11255946097));
      node0.isFor();
      Node node1 = new Node(52, node0);
      node0.addChildToFront(node1);
      node1.hasOneChild();
      node0.isEquivalentTo(node1, false, true, true);
      node0.isEquivalentTo(node1, true, true, true);
      node1.mayMutateGlobalStateOrThrow();
      node1.getAncestor(40);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = new Node((-1280));
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node0.mayMutateArguments();
      node0.isEquivalentTo(node1, false, true, true);
      node1.isLocalResultCall();
      node2.hasOneChild();
      node0.isLocalResultCall();
      node0.isSetterDef();
      Node node3 = node0.useSourceInfoFrom(node2);
      node2.isOnlyModifiesArgumentsCall();
      node2.isAssignAdd();
      node3.isWith();
      node2.isSetterDef();
      node3.isTrue();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      node0.cloneNode();
      int int0 = Node.OPT_ARG_NAME;
      node0.isQualifiedName();
      node0.getStaticSourceFile();
      node0.getAncestors();
      Node node2 = new Node(4095, node0, node0);
      node1.isEquivalentTo(node2);
      node1.isVar();
      node2.isDo();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.setNoCompile(false);
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = new Node(45);
      Node node1 = new Node((-2195), node0);
      Node node2 = new Node(45, node1, node1, 48, 50);
      node1.isUnscopedQualifiedName();
      node1.removeProp(1);
      node2.isGetElem();
      node1.isUnscopedQualifiedName();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newNumber((-145.11255946097));
      node0.isFor();
      Node node1 = new Node(52, node0);
      node1.useSourceInfoFromForTree(node0);
      node0.addChildToFront(node1);
      node1.hasOneChild();
      node1.putIntProp(2, 48);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(53);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 53
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = new Node(110);
      node0.cloneTree();
      InputId inputId0 = new InputId("");
      inputId0.toString();
      node0.isInc();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SWITCH is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newString(89, "1 Ur");
      node0.getAncestors();
      Node node1 = new Node(130, 4095, 36);
      node1.cloneNode();
      node1.isSwitch();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newNumber((-145.11255946097));
      node0.isFor();
      node0.getLength();
      Node node1 = new Node(54, node0, node0, node0, node0, 30, 15);
      node0.addChildToFront(node1);
      node1.hasOneChild();
      Node node2 = node0.removeFirstChild();
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 54
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = new Node(3544, 3544, 32);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-18);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isOptionalArg();
      Node node1 = new Node(3544, node0, 8, 155);
      node0.getJsDocBuilderForNode();
      node1.putIntProp(57, 12);
      node0.isTrue();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = new Node(86, 86, 86);
      Node node1 = Node.newString(831, "VKB8`(y3;/AnzLzdbp");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node2.isEmpty();
      node2.getAncestors();
      node0.isComma();
      node0.getJSDocInfo();
      Node node3 = node1.cloneNode();
      node2.isCall();
      node0.isUnscopedQualifiedName();
      node0.isParamList();
      node3.isSyntheticBlock();
      node2.isQualifiedName();
      node1.getJSDocInfo();
      node1.isGetterDef();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node4 = new Node(122, nodeArray0);
      node4.isSetterDef();
      Node node5 = node2.useSourceInfoFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      Node node6 = Node.newString("VKB8`(y3;/AnzLzdbp");
      node6.isAssignAdd();
      node5.isWith();
      node2.isSetterDef();
      Node node7 = Node.newNumber((double) 36);
      node7.isTrue();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node8 = jSTypeRegistry0.createParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node3.addChildAfter(node1, node8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      boolean boolean0 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = Node.newString((-1993), "a6BJe");
      Node.newString("", 4, 52);
      Node node1 = new Node((-1993), node0, node0, 31, 0);
      node1.getBooleanProp(1);
      Node node2 = Node.newString(31, "a6BJe");
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      node1.cloneNode();
      Node node2 = new Node(38, 2350, 38);
      node2.isNoSideEffectsCall();
      Node node3 = node0.clonePropsFrom(node2);
      InputId inputId0 = new InputId("ATG!C8:Ytl");
      node2.setInputId(inputId0);
      Node node4 = Node.newString("VKB8`(y3;/AnzLzdbp");
      Node.newString("VKB8`(y3;/AnzLzdbp", 51, 57);
      node3.getSideEffectFlags();
      node1.isEquivalentTo(node4, true, false, false);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node3;
      nodeArray0[1] = node1;
      Node node5 = new Node(31, nodeArray0, 31, 39);
      node0.isEquivalentTo(node5, false, false, false);
      node0.isFromExterns();
      node4.mayMutateGlobalStateOrThrow();
      node1.isFromExterns();
      node4.getAncestor(55);
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.isCall();
      Node node3 = new Node(29, node2, node2, node0);
      node0.isBlock();
      node1.isNoSideEffectsCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.getStaticSourceFile();
      node1.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node3.isLabel();
      Node node4 = Node.newString(83, "second new child has existing parent");
      node3.addChildrenAfter(node4, node2);
      node3.getAncestor(0);
      node3.getChildCount();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = new Node(321);
      Node node1 = Node.newString(31, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = Node.newString(36, "<NOPjmDsz");
      Node node3 = new Node((-1967), node0, node0, node0, node2, (-2170), 47);
      node3.isGetterDef();
      node2.getAncestors();
      node1.isNumber();
      node3.getJSDocInfo();
      node2.isCall();
      node1.isIn();
      Node node4 = Node.newNumber((double) 1);
      node0.setSourceEncodedPosition(36);
      node2.isObjectLit();
      node1.putIntProp(1, 147);
      node1.isCall();
      node0.getParent();
      node4.isGetElem();
      // Undeclared exception!
      try { 
        node3.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1967
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node(35, 35, 89);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor1.caseStringType();
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_FUNCTION_TYPE;
      JSType jSType1 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType1);
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = node0.cloneNode();
      Node node2 = new Node((-2198), node1);
      node2.isTrue();
      node0.getSideEffectFlags();
      node1.isQualifiedName();
      node2.isLocalResultCall();
      node1.getStaticSourceFile();
      node1.isHook();
      node0.isUnscopedQualifiedName();
      Node node3 = Node.newString(8160, "KkhK6n1#9O8");
      node3.isFromExterns();
      node2.hasChild(node0);
      node3.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = new Node(31);
      Node node1 = node0.cloneNode();
      node0.isLabelName();
      node0.checkTreeEquals(node1);
      node0.getSideEffectFlags();
      node0.isQuotedString();
      node0.isBlock();
      node1.isOptionalArg();
      node1.isContinue();
      Node node2 = Node.newNumber((double) 2, (-1495), 38);
      node2.isTrue();
      node2.isQuotedString();
      node0.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = new Node(45);
      Node node1 = new Node((-2195), node0);
      Node node2 = new Node(45, node1, node1, 48, 50);
      node1.addChildrenToFront(node2);
      node1.isUnscopedQualifiedName();
      node1.removeProp(1);
      node2.isGetElem();
      node1.isUnscopedQualifiedName();
      Node.extractCharno(40);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      Node node1 = new Node(98, node0, 193, 162);
      node1.removeChild(node0);
      node0.isCast();
      node1.cloneNode();
      node0.isSwitch();
      node0.isVar();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      Node node1 = new Node(98, node0, 193, 162);
      node1.removeChild(node0);
      node0.isCast();
      Node node2 = new Node(43, node0, node1);
      node2.isEquivalentTo(node2);
      node0.isVar();
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = new Node(0, 0, 1711);
      Node node1 = Node.newString(54, "Hd");
      Node node2 = node0.clonePropsFrom(node1);
      node1.getProp((-414));
      node1.isOnlyModifiesArgumentsCall();
      node2.isBreak();
      node0.isCall();
      node2.isSwitch();
      node1.isNoSideEffectsCall();
      node0.getStaticSourceFile();
      Node node3 = Node.newString(30, "");
      Node node4 = new Node(41, node1, node3, node3, 101, 48);
      node0.isSwitch();
      node0.isComma();
      node2.useSourceInfoFromForTree(node3);
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[6];
      JSTypeNative jSTypeNative0 = JSTypeNative.NUMBER_STRING;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.REFERENCE_ERROR_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.SYNTAX_ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.NULL_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSTypeNative jSTypeNative4 = JSTypeNative.GLOBAL_THIS;
      jSTypeNativeArray0[4] = jSTypeNative4;
      JSTypeNative jSTypeNative5 = JSTypeNative.STRING_OBJECT_TYPE;
      jSTypeNativeArray0[5] = jSTypeNative5;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(120, node0, node0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node2 = jSTypeRegistry1.createParameters((List<JSType>) linkedList0);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      EnumType enumType0 = jSTypeRegistry1.createEnumType("\"\"kQ6\"", node0, jSTypeArray0[0]);
      enumType0.toMaybeEnumType();
      node1.isLabel();
      node2.wasEmptyNode();
      node3.isFunction();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = new Node(2601);
      Node node1 = Node.newString(37, "T)$x5@WEPhLRsMOb");
      node1.setSideEffectFlags(55);
      node0.getSourcePosition();
      node1.isBlock();
      Node node2 = new Node(1133, node0, node1, 56, (-2053));
      node2.isLabel();
      Node node3 = new Node(1102, node2, 8, 1307);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "q\u0003]F%1@#c;uh");
      node3.isIn();
      Node node4 = node3.cloneTree();
      node4.getJSType();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(112, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node(86, 3, 3);
      Node node1 = new Node(49, node0, 2, 46);
      node0.setJSType((JSType) null);
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isBreak();
      node1.getJSDocInfo();
      node2.isCall();
      node1.isQuotedString();
      node2.getJsDocBuilderForNode();
      node0.getJSType();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.getObjectElementKey();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      node0.isQuotedString();
      node0.isBlock();
      node0.isOptionalArg();
      node0.isLabel();
      node0.isContinue();
      node0.isTrue();
      node0.isQuotedString();
      Node node1 = new Node(55, node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isNull();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = new Node(105);
      node0.getSourceFileName();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node((-4006), node0, node0, node0, 2, 37);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = new Node(89);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      Node node2 = new Node(30, node0, node0);
      node1.getBooleanProp(57);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node2.isLabel();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("7W:$m`O|2P.#%");
      node2.getChildAtIndex((-1202));
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ASSIGN_BITAND [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000008] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      node0.isQualifiedName();
      node0.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node1 = new Node((-2752));
      node1.isBlock();
      node1.isNoSideEffectsCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.getStaticSourceFile();
      node1.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.isLabel();
      Node node2 = Node.newString((-2551), "Object#Element");
      Node node3 = new Node(56, node1, node0);
      node1.addChildrenAfter(node3, (Node) null);
      node2.getAncestor(42);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = new Node(118, 41, 118);
      Node node1 = node0.cloneNode();
      node0.getSideEffectFlags();
      node0.isQuotedString();
      node1.isQualifiedName();
      node1.isLocalResultCall();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node1.isInc();
      node1.isNoSideEffectsCall();
      node0.getStaticSourceFile();
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node1.isEquivalentTo(node0, true, false, false);
      int int0 = Node.JSDOC_INFO_PROP;
      Node node2 = new Node(37, node0, node1, node1);
      node2.isFor();
      node1.isSetterDef();
      node2.isThis();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // VAR 41 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = new Node(129, (-2401), 125);
      Node node1 = node0.cloneNode();
      node1.getSideEffectFlags();
      Node node2 = new Node(3619, node1, 1024, 4095);
      node2.isQuotedString();
      node2.isQualifiedName();
      node2.isLocalResultCall();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node0.isBlock();
      node0.isNoSideEffectsCall();
      node2.getStaticSourceFile();
      node2.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.isEquivalentTo(node2, true, false, true);
      int int0 = Node.JSDOC_INFO_PROP;
      node0.isFor();
      node2.isSetterDef();
      node1.isThis();
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 129
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor1.caseAllType();
      JSType jSType0 = modificationVisitor1.caseStringType();
      ImmutableList.of(jSType0, jSType0, jSType0);
      Node node1 = new Node(40, node0, node0, node0, node0, 43, 48);
      node1.isNoSideEffectsCall();
      node0.isParamList();
      node0.getJsDocBuilderForNode();
      node0.isQualifiedName();
      node1.isFor();
      node0.getSideEffectFlags();
      node1.copyInformationFrom(node0);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 1.4670034406342007 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = new Node(4, node0, node0, 561, 3961);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isQualifiedName();
      Node node2 = null;
      try {
        node2 = new Node(31, node0, node0, node0, 54, 5760);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newString("Q");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("Q");
      node0.setDirectives(linkedHashSet0);
      node0.isOnlyModifiesThisCall();
      node0.isUnscopedQualifiedName();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(580);
      node0.getDirectives();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node0.isUnscopedQualifiedName();
      node0.isThis();
      node0.isAssignAdd();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newString("{7", (-47), (-47));
      Node node1 = new Node((-47), node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      jSDocInfo0.setAssociatedNode(node1);
      Node node3 = jSDocInfo0.getAssociatedNode();
      node2.isLabel();
      node2.isContinue();
      node0.isTrue();
      node2.isUnscopedQualifiedName();
      node0.cloneNode();
      node3.getSourcePosition();
      Node node4 = Node.newString("{7", 43, 40);
      node1.srcref(node4);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      int int0 = (-2190);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zL~_y 2/JW");
      Node node0 = Node.newString(50, "zL~_y 2/JW");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(30);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = Node.newString(54, "<NOPjmDsz");
      node2.isGetterDef();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node0.isInc();
      node0.isNot();
      node2.getJSDocInfo();
      node2.isAnd();
      node0.useSourceInfoFrom(node2);
      try { 
        node0.setDouble((-1.0));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEW is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = Node.newString("ye0?<", (-325), (-325));
      Node node1 = new Node(2, node0, node0);
      node1.isReturn();
      node1.addChildBefore(node1, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node2 = null;
      try {
        node2 = new Node(46, node1, 30, 36);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newString("VKB8`(y3;/AnzLzdbp");
      Node node1 = Node.newString(110, "1 UrR");
      Node node2 = node1.cloneTree();
      InputId inputId0 = new InputId("1 UrR");
      inputId0.toString();
      node0.isLocalResultCall();
      node0.getStaticSourceFile();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      Node node3 = new Node(37, 12, 1);
      Node node4 = node3.cloneNode();
      node4.useSourceInfoIfMissingFromForTree(node0);
      node2.isSwitch();
      node1.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(892);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node3.setSideEffectFlags(node_SideEffectFlags1);
      Node.extractCharno(32);
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node0.mayMutateArguments();
      node0.isEquivalentTo(node1, false, true, true);
      node1.isLocalResultCall();
      node0.isEquivalentTo(node2, true, false, false);
      node2.hasOneChild();
      node0.isLocalResultCall();
      node0.isSetterDef();
      Node node3 = node0.useSourceInfoFrom(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      node2.isLabel();
      Node node4 = new Node(587, node3, node2, node3);
      node0.isContinue();
      node3.isTrue();
      node3.isQuotedString();
      node4.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(4);
      InputId inputId0 = new InputId("cU:<+T1");
      node0.setInputId(inputId0);
      node2.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isHook();
      node0.isOnlyModifiesThisCall();
      node0.isUnscopedQualifiedName();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(13);
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node2.isRegExp();
      node2.isThis();
      node1.isAssignAdd();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = new Node(103, 103, 103);
      Node node1 = new Node(48, node0, 30, 8);
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = Node.newNumber((double) 37, 16, 101);
      node3.getAncestors();
      node3.isBreak();
      node2.isCall();
      Node node4 = new Node(114);
      node0.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node4);
      Node node5 = Node.newNumber((double) 51, (-480), 40);
      node2.mayMutateGlobalStateOrThrow();
      node5.isTypeOf();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = new Node(112);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQuotedString();
      node0.isEquivalentTo(node1, false, false, true);
      node1.isLocalResultCall();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-126);
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte) (-18);
      byteArray0[4] = (byte)89;
      byteArray0[5] = (byte) (-18);
      byteArray0[6] = (byte)89;
      byteArray0[7] = (byte) (-3);
      node2.hasChildren();
      node0.isOptionalArg();
      Node node3 = new Node(56, node1, 1966, 133);
      node0.getJsDocBuilderForNode();
      node0.putIntProp(52, 0);
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newString("second new child has existing parent");
      Node node1 = Node.newString(55, "com.google.common.collect.Lists$RandomAccessPartition");
      Node node2 = node0.cloneTree();
      node0.isEquivalentToShallow(node2);
      node0.isHook();
      Node node3 = new Node(1295, 44, 1808);
      node3.isNot();
      node2.getJSDocInfo();
      node3.isGetterDef();
      Node node4 = Node.newString(4095, ": ", 32, 55);
      node4.isInstanceOf();
      Node node5 = new Node((-3789), node0, node4, node1, 43, 1);
      Node node6 = new Node((-1171), node5, node5);
      node2.isTry();
      node5.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.isCall();
      Node node3 = new Node(29, node2, node2, node0);
      node3.isDebugger();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node3.getChildBefore(node0);
      linkedHashSet0.add("<NOPjmDsz");
      node0.getJSDocInfo();
      node3.isAdd();
      try { 
        node3.setDouble(0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEG is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newString(63, "VKB8`Ky3;/AnzLzdbpF", 63, 63);
      node0.setIsSyntheticBlock(true);
      node0.toStringTree();
      Node node1 = new Node((-20), node0, 0, 120);
      node1.getJsDocBuilderForNode();
      node0.checkTreeEqualsImpl(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("direct_eval", true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "";
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "-nth6W[{S</'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isTry();
      node0.getLength();
      node0.getStaticSourceFile();
      node0.isQuotedString();
      node0.isSwitch();
      node0.isNoSideEffectsCall();
      node0.getStaticSourceFile();
      Node node1 = new Node(4, node0, node0, node0, (-3167), 4);
      node1.isSwitch();
      node0.isComma();
      node1.useSourceInfoFromForTree(node0);
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(4);
      node1.isEquivalentToShallow(node0);
      node1.isBreak();
      node1.getJSDocInfo();
      Node node3 = node2.cloneNode();
      node0.isCall();
      node3.isUnscopedQualifiedName();
      node1.isParamList();
      node2.isQualifiedName();
      node1.getJSDocInfo();
      node0.isGetterDef();
      node3.isInstanceOf();
      Node node4 = Node.newString("_1\"H}M!LT5EBkjD\"G", 54, 47);
      Node node5 = new Node(1362, node1, node1);
      node3.isTry();
      Node.newString("_1\"H}M!LT5EBkjD\"G");
      node0.isInstanceOf();
      // Undeclared exception!
      try { 
        node4.addChildBefore(node1, node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = new Node(93, (-782), 93);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      int int0 = Node.OPT_ARG_NAME;
      node1.isQualifiedName();
      node2.isLocalResultCall();
      node2.getStaticSourceFile();
      node1.getAncestors();
      node0.cloneNode();
      node2.isSwitch();
      node0.isVar();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      Node node2 = node0.cloneNode();
      int int0 = Node.OPT_ARG_NAME;
      node0.isQualifiedName();
      node1.isLocalResultCall();
      node0.getStaticSourceFile();
      node0.getAncestors();
      node1.getAncestors();
      node0.isNoSideEffectsCall();
      node2.getStaticSourceFile();
      node0.isSwitch();
      node1.isComma();
      node2.hasChild(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      JSTypeNative jSTypeNative0 = JSTypeNative.U2U_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) functionType0;
      LinkedHashSet<JSType> linkedHashSet0 = new LinkedHashSet<JSType>();
      Iterator<JSType> iterator0 = linkedHashSet0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      TemplateTypeMap templateTypeMap0 = jSTypeRegistry0.createTemplateTypeMap((ImmutableList<TemplateType>) null, immutableList0);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, templateTypeMap0);
      JSType jSType0 = templateTypeMapReplacer0.caseNumberType();
      jSTypeArray0[1] = jSType0;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType1 = jSTypeRegistry1.createFunctionType((ObjectType) functionType0, (JSType) functionType0, (List<JSType>) immutableList0);
      jSTypeArray0[2] = jSType1;
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node3.useSourceInfoFromForTree(node2);
      node3.isStringKey();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node0.getJSDocInfo();
      node2.isCall();
      Node node3 = new Node(29, node2, node2, node0);
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node3.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2474));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node3.isWhile();
      node0.hasOneChild();
      node3.getSourcePosition();
      node1.isDo();
      node_SideEffectFlags1.areAllFlagsSet();
      node2.toString(true, false, false);
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = Node.newNumber((-145.11255946097));
      node0.isFor();
      Node node1 = new Node(52, node0);
      node0.addChildToFront(node1);
      node1.hasOneChild();
      node1.getIntProp(428);
      node1.setChangeTime(55);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      node0.isEmpty();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isTry();
      node0.isFor();
      node0.getLength();
      node0.addChildToFront(node0);
      node0.getStaticSourceFile();
      node0.isQuotedString();
      Node.newNumber((-1.0), 37, 4095);
      node0.isDefaultCase();
      Node node1 = Node.newString(38, "\"ZLC:x@Unv(.", 2727, 38);
      node1.isFromExterns();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newString(1, "uHpgU~6a", 1, 124);
      Node node1 = new Node(3, 831, (-44));
      node1.addChildToBack(node0);
      node0.addChildToBack(node1);
      node0.isFunction();
      // Undeclared exception!
      try { 
        node0.setSourceEncodedPositionForTree(3967);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = new Node(2367);
      Node node1 = new Node(12, 51, 40);
      node1.addChildrenToFront(node1);
      node1.getAncestor(8);
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = new Node(35, 35, (-966));
      Node node1 = Node.newString((-1), "r!.`\"$Q#xU9 ");
      node1.getJSDocInfo();
      node0.isQualifiedName();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node1.isCatch();
      node0.useSourceInfoFromForTree(node1);
      node0.isOptionalArg();
      Node node2 = new Node(50, node1, 101, 37);
      node0.getJsDocBuilderForNode();
      node0.putIntProp(2, 9);
      node2.getIndexOfChild(node0);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node.newString("    ");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = Node.newString(16, "\n\nTree2:\n", 9, 55);
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      Node node2 = node0.cloneNode();
      node2.isLabelName();
      node2.getSideEffectFlags();
      node0.isQualifiedName();
      node1.isLocalResultCall();
      node0.getStaticSourceFile();
      node0.isHook();
      node2.isUnscopedQualifiedName();
      Node.newString(32, "KkhK6n1#9O8");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags5.setMutatesArguments();
      node2.isThis();
      Node node3 = new Node(4095, (-1617), 37);
      node3.isAssignAdd();
      node3.isOr();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = new Node(31, (-480), 31);
      Node node1 = Node.newString(130, "<NOPjmDsz");
      node0.isSyntheticBlock();
      Node node2 = node1.clonePropsFrom(node0);
      node0.isFunction();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node2.isSwitch();
      Node node3 = Node.newString("Object#Key");
      Node node4 = new Node(50, node1, 354, 43);
      Node node5 = new Node(15);
      node1.isExprResult();
      node0.isEquivalentToShallow(node2);
      node1.putIntProp(15, 49);
      node4.getIndexOfChild(node1);
      node3.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      Node node1 = new Node(98, node0, 193, 162);
      node1.removeChild(node0);
      node0.isCast();
      Node node2 = new Node(43, node0, node1);
      node2.children();
      node0.detachFromParent();
      node2.detachChildren();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newString("ORDINARY", (-463), (-3129));
      node0.isDelProp();
      node0.setSourceEncodedPositionForTree(0);
      node0.getLength();
      node0.isThis();
      Node node1 = new Node(1543, node0, node0, node0, (-3784), 48);
      node1.isUnscopedQualifiedName();
      node1.isDefaultCase();
      node1.isQualifiedName();
      node1.isName();
      node1.copyInformationFrom(node0);
      Node node2 = null;
      try {
        node2 = new Node(57, node0, 43, 3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node0.isNew();
      Node node2 = Node.newString(54, "<NOPjmDsz");
      node2.isGetterDef();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node2.isIn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isWhile();
      node2.hasOneChild();
      node1.getSourcePosition();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newString("VKB8`(y3;/AnzLzdbp");
      Node node1 = Node.newString(110, "1 UrR");
      Node node2 = node1.cloneTree();
      InputId inputId0 = new InputId("1 UrR");
      inputId0.toString();
      node0.isLocalResultCall();
      node0.getStaticSourceFile();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      Node node3 = new Node(37, 12, 1);
      node3.cloneNode();
      node2.isSwitch();
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      InputId inputId0 = new InputId("[Ogh,R#U");
      Node node0 = Node.newString(55, "[Ogh,R#U", 55, 55);
      Node node1 = new Node(55, node0, node0);
      node1.isEquivalentTo(node0, true, true, true);
      node1.getInputId();
      node1.isWhile();
      node0.isBlock();
      node0.isArrayLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      node_SideEffectFlags0.setAllFlags();
      node1.removeChild(node0);
      node_SideEffectFlags0.setMutatesThis();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.setSourceEncodedPosition(132);
      node1.isQuotedString();
      node1.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(1340);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = new Node(86, 3, 86);
      node0.isDec();
      node0.isCall();
      node0.isQuotedString();
      Node node1 = Node.newNumber((double) 47, 4095, 1415);
      node1.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.isAssign();
      node0.hasOneChild();
      node0.isCase();
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      node0.clonePropsFrom(node0);
      node0.isFunction();
      Node node1 = node0.cloneTree();
      Node node2 = new Node(43);
      Node node3 = new Node(15, node0, node0, 53, 49);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = new Node(86, 86, 86);
      Node node1 = Node.newString(831, "VKB8`(y3;/AnzLzdbp");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node0.isUnscopedQualifiedName();
      node0.isParamList();
      node0.setSourceEncodedPosition(829);
      node2.isQualifiedName();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = Node.newString(37, ":$]X]qllTq+G3F", (-762), 69);
      node3.setType(1610612736);
      node1.isInstanceOf();
      Node node4 = new Node((-505), node0, node0);
      node4.useSourceInfoIfMissingFrom(node1);
      node2.isTry();
      // Undeclared exception!
      try { 
        node3.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1610612736
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      String string0 = "EMPTY";
      Node node0 = Node.newString("EMPTY", 145, 21);
      Node node1 = new Node((-1399), node0, node0, node0);
      Node node2 = node1.cloneNode();
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1399
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      node1.isEquivalentToShallow(node0);
      node0.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQuotedString();
      node1.isQualifiedName();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte) (-105);
      byteArray0[2] = (byte)32;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.isLocalResultCall();
      node0.srcref(node1);
      node0.hasOneChild();
      node0.getJSDocInfo();
      node1.isAdd();
      node0.isQuotedString();
      node1.isNull();
      node1.isLabel();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newString("VKB8`(y3;/AnzLzdbp");
      Node node1 = Node.newString(110, "1 UrR");
      Node node2 = node1.cloneTree();
      InputId inputId0 = new InputId("");
      inputId0.toString();
      node1.isInc();
      node0.isNot();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      Node node3 = node2.cloneNode();
      node2.isSwitch();
      Node.newString("}gHPxNR7l=uJYr5xB?h");
      Node node4 = new Node(50, node3, 102, 29);
      Node node5 = new Node(49);
      node5.isExprResult();
      node4.isVar();
      node1.putIntProp((-201), 57);
      node4.getIndexOfChild(node1);
      node4.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      String string0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newString("Z3z>");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z3z>");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        node0.appendStringTree(pipedWriter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor1.caseStringType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.addChildrenToBack(node0);
      node0.isBlock();
      node1.isLabel();
      Node node2 = null;
      try {
        node2 = new Node(1829, node0, 91, (-399));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = new Node(85, 26, 85);
      Node node1 = Node.newString(12, " .~");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = node0.clonePropsFrom(node1);
      Node node3 = new Node(15, node1);
      node3.isFunction();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node3.isCall();
      Node node4 = new Node(621);
      node1.isDebugger();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      node2.isBlock();
      node1.isOptionalArg();
      node1.isLabel();
      node0.hasMoreThanOneChild();
      Node.newNumber((double) 12, 32, (-1141));
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      Node node1 = Node.newString("[Ogh,R#U");
      node1.isQuotedString();
      Node node2 = new Node(16, node0, node0, node0);
      node2.isEquivalentToShallow(node2);
      node2.isInc();
      node1.isNot();
      node2.getJSDocInfo();
      node2.isGetterDef();
      node0.isInstanceOf();
      Node node3 = new Node(10, node2, node1);
      node3.isTry();
      node0.isDec();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = new Node(3544, 3544, 32);
      node0.addSuppression((String) null);
      Node node1 = new Node(31);
      node1.addChildrenToBack(node0);
      node0.isComma();
      node1.hasChild(node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "Hd");
      node1.isFunction();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Node node2 = new Node(93, node0, node0, node0, 4, 50);
      node2.getJSDocInfo();
      node2.isCall();
      Node node3 = new Node(51);
      node2.isDebugger();
      node2.isDebugger();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      Node node4 = node1.cloneNode();
      node4.isSwitch();
      Node node5 = Node.newString("}gHPxNR7l=uJYr5xB?h");
      Node node6 = new Node(1, node5, 2, (-2390));
      node6.isExprResult();
      node5.isVar();
      node4.putIntProp(8, (-2588));
      node6.getIndexOfChild(node1);
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = Node.newString("VKB8`(y3;/AnzLzdbp");
      Node node1 = node0.cloneTree();
      InputId inputId0 = new InputId("");
      inputId0.toString();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-92);
      node1.getProp(53);
      node1.isOnlyModifiesArgumentsCall();
      node0.isThis();
      node0.isBreak();
      node1.isCall();
      node0.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("nc+y.{d+yU@");
      node_FileLevelJsDocBuilder0.append("$>cTSg$q");
      node0.isCatch();
      Node node2 = new Node((byte) (-92), node1, node0, node1, node0);
      node0.isThrow();
      node2.cloneTree();
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = new Node(31, 31, 79);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node0.isIf();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.getJSDocInfo();
      node0.wasEmptyNode();
      Node node3 = Node.newString("<NOPjmDsz", 50, 31);
      node3.isDebugger();
      node0.isLocalResultCall();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node4 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node4.getAncestors();
      node1.isBlock();
      Node node5 = Node.newNumber((double) 49);
      node2.isNoSideEffectsCall();
      node3.getStaticSourceFile();
      node5.isSwitch();
      node5.isOptionalArg();
      node0.isComma();
      node1.hasChild(node2);
      node4.useSourceInfoFromForTree(node0);
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node0.isIf();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.isBreak();
      node0.isCall();
      Node node3 = new Node((-1393));
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node1.isBlock();
      node1.isOptionalArg();
      node3.mayMutateGlobalStateOrThrow();
      node1.isLabel();
      node2.isGetProp();
      node3.isEmpty();
      node2.isGetterDef();
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = new Node(86, 3, 92);
      Node node1 = Node.newString(50, "");
      node0.isCase();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node0.isBreak();
      Node node3 = Node.newString(49, "", 86, 36);
      node2.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      Node node4 = new Node(2, node3, node3);
      node0.isEquivalentTo(node2, false, false, false);
      node2.mayMutateGlobalStateOrThrow();
      node1.isGetElem();
      node1.getString();
      node4.isNew();
      node2.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node0.cloneNode();
      node2.isLabelName();
      node2.getSideEffectFlags();
      node0.isQualifiedName();
      node1.isLocalResultCall();
      node0.getStaticSourceFile();
      node0.isHook();
      node2.isUnscopedQualifiedName();
      node2.setChangeTime(32);
      Node node3 = Node.newString("+2>z[4cS:>QQ%");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node3);
      node1.isEmpty();
      Node node4 = Node.newString("+2>z[4cS:>QQ%");
      node4.isName();
      Node node5 = node2.copyInformationFrom(node3);
      node1.isCast();
      Node node6 = new Node(29, node5, node4, node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newString((-802), "is_constant_name");
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.children();
      Node node3 = new Node(12, node1, node2, node0);
      node3.isNE();
      int int0 = Node.POST_FLAG;
      Node node4 = node1.clonePropsFrom(node0);
      node1.getIntProp(0);
      node3.setChangeTime(49);
      node3.checkTreeEqualsImpl(node3);
      node3.isEmpty();
      node2.isName();
      node0.copyInformationFrom(node2);
      node1.isCast();
      node4.children();
      node1.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = new Node(116, 116, 86);
      Node node1 = node0.cloneNode();
      Node node2 = Node.newNumber((double) 38);
      node2.checkTreeEquals(node0);
      int int0 = Node.COLUMN_MASK;
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node1.isQualifiedName();
      node3.isLocalResultCall();
      node1.getAncestors();
      node1.isBlock();
      Node node4 = Node.newNumber(0.7);
      node4.isNoSideEffectsCall();
      node3.getStaticSourceFile();
      node1.isSwitch();
      node3.isOptionalArg();
      node3.isComma();
      node0.hasChild(node1);
      node2.useSourceInfoFromForTree(node3);
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("second new child has existing parent");
      Node node1 = Node.newString("ORDINARY", 42, 47);
      node1.isNoSideEffectsCall();
      node1.isCall();
      node0.isQuotedString();
      node1.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("Mzd<!6|9-p}+k");
      node_FileLevelJsDocBuilder0.append("second new child has existing parent");
      node0.isCatch();
      Node node2 = new Node(31, node0, node0, node1, node1);
      // Undeclared exception!
      try { 
        node2.addChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("second new child has existing parent");
      Node node1 = Node.newString("ORDINARY", 42, 47);
      node1.isNoSideEffectsCall();
      node1.isSyntheticBlock();
      node0.getQualifiedName();
      node1.isFalse();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*CQ'Iyc^DtY8*");
      Node node2 = new Node(108, node0, node0, node1, node1);
      node2.hasMoreThanOneChild();
      Node node3 = node2.getFirstChild();
      node3.isIn();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = new Node(86, 3, 116);
      Node node1 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      int int0 = Node.COLUMN_MASK;
      node1.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      int int1 = Node.POST_FLAG;
      Node node3 = node2.clonePropsFrom(node0);
      node1.getIntProp(16);
      node1.setChangeTime(12);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      node3.isEmpty();
      node2.isName();
      Node node4 = node0.copyInformationFrom(node1);
      node3.isCast();
      Node node5 = new Node(0, node1, node3, node4);
      Iterable<Node> iterable0 = new PriorityQueue<Node>();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node0.cloneNode();
      node2.isLabelName();
      node2.getSideEffectFlags();
      node0.isQualifiedName();
      node1.isLocalResultCall();
      node0.getStaticSourceFile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node2.getJsDocBuilderForNode();
      node1.isTypeOf();
      node1.isThis();
      node1.isUnscopedQualifiedName();
      node1.isDefaultCase();
      node2.isQualifiedName();
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = new Node(86, 3, 86);
      Node node1 = Node.newString(50, "");
      node1.getSideEffectFlags();
      node1.isQuotedString();
      Node node2 = Node.newNumber(1.0);
      node2.isQualifiedName();
      node2.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isBlock();
      node1.isNoSideEffectsCall();
      node0.getStaticSourceFile();
      Node node3 = new Node(43);
      node3.isDebugger();
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      node3.cloneNode();
      node2.isSwitch();
      Node node4 = Node.newString("");
      node0.isExprResult();
      node4.isVar();
      Node node5 = Node.newNumber((double) 32);
      node5.getNext();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-709), (-709));
      node0.isNoSideEffectsCall();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      Node node1 = new Node(1, 36, (-627));
      nodeArray0[1] = node1;
      Node node2 = new Node(0, nodeArray0);
      Node node3 = node0.clonePropsFrom(node2);
      node1.isOnlyModifiesArgumentsCall();
      node2.getAncestors();
      node0.isHook();
      node0.isOnlyModifiesThisCall();
      node3.isUnscopedQualifiedName();
      node1.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setAllFlags();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte) (-19);
      byteArray0[4] = (byte)36;
      byteArray0[5] = (byte) (-87);
      byteArray0[6] = (byte)77;
      byteArray0[7] = (byte)52;
      byteArray0[8] = (byte)51;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      node1.isThis();
      node0.isAssignAdd();
      node1.isOr();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "VKB8`Ky3;/AnzLzdbpF");
      Node node0 = new Node(92, 3, 96);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesArgumentsCall();
      node0.getAncestors();
      node0.isHook();
      node0.isOnlyModifiesThisCall();
      node0.isUnscopedQualifiedName();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node0.getJsDocBuilderForNode();
      node0.isTypeOf();
      node0.isThis();
      node0.isUnscopedQualifiedName();
      node0.isDefaultCase();
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = new Node(129, 129, 129);
      Node node1 = node0.cloneNode();
      node1.checkTreeEquals(node0);
      node0.getSideEffectFlags();
      node1.isQuotedString();
      node0.isQualifiedName();
      node1.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node1.isBlock();
      node0.isNoSideEffectsCall();
      node0.getStaticSourceFile();
      node1.isDebugger();
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isGetElem();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isEquivalentTo(node2);
      node1.isLabel();
      node0.hasChild(node1);
      node2.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node0.getSideEffectFlags();
      Node node2 = new Node(13, node0, node0);
      node2.isQualifiedName();
      node1.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node2.isBlock();
      node2.isLabel();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("7W:$m`O|2P.%");
      node2.getChildAtIndex((-1202));
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DELPROP 31 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000008] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte)110;
      byteArray0[4] = (byte) (-15);
      byteArray0[5] = (byte) (-42);
      byteArray0[6] = (byte)19;
      byteArray0[7] = (byte)86;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node3 = new Node(38, 2350, 38);
      node3.isNoSideEffectsCall();
      Node node4 = node0.clonePropsFrom(node3);
      node2.isBreak();
      node4.getInputId();
      node1.isWhile();
      node2.isArrayLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node5 = new Node(57, node4, 832, 46);
      // Undeclared exception!
      try { 
        node3.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 2350 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = new Node(3, 120, 120);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(39, node0, node0, node0, 15, 103);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isOnlyModifiesArgumentsCall();
      node2.getAncestors();
      Node node3 = null;
      try {
        node3 = new Node(51, node0, node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = new Node(31, (-480), 31);
      Node node1 = Node.newString(130, "<NOPjmDsz");
      node0.isSyntheticBlock();
      Node node2 = node1.clonePropsFrom(node0);
      node0.isFunction();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node0.getJSDocInfo();
      node0.isCall();
      Node node3 = new Node(46);
      node2.isDebugger();
      node0.isDebugger();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node2);
      Node node4 = node2.cloneNode();
      node1.isSwitch();
      Node.newString("<NOPjmDsz");
      node4.isExprResult();
      node1.isVar();
      Node.newNumber((double) 1);
      Node node5 = new Node(50, node3, 39, 54);
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      InputId inputId0 = new InputId("[Ogh,R#U");
      Node node0 = Node.newString(55, "[Ogh,R#U", 55, 55);
      Node node1 = new Node(55, node0, node0);
      node1.getInputId();
      node1.isWhile();
      node0.isBlock();
      node0.isArrayLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.setSourceEncodedPosition(132);
      node1.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("[Ogh,R#U");
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(1340);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newNumber((-145.11255946097));
      node0.isFor();
      Node node1 = new Node(52, node0);
      node0.addChildToFront(node1);
      node1.hasOneChild();
      Node node2 = node0.removeFirstChild();
      node1.putIntProp(2, 48);
      node0.isWith();
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 2
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isLabelName();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQuotedString();
      node1.isQualifiedName();
      node0.isEquivalentTo(node1, false, false, true);
      node1.isLocalResultCall();
      node0.isEquivalentTo(node2, true, false, true);
      int int0 = Node.JSDOC_INFO_PROP;
      node2.hasOneChild();
      node1.isFor();
      node0.isSetterDef();
      Node node3 = node0.useSourceInfoFrom(node2);
      node2.isOnlyModifiesArgumentsCall();
      node1.isThis();
      node2.isAssignAdd();
      node3.isWith();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = new Node(86, 3, 86);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      node0.isDec();
      node1.getInputId();
      Node.newString("", 1822, 8);
      node0.getQualifiedName();
      node0.getSourceOffset();
      Node.newNumber((double) 46);
      node0.getNext();
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newString("ye0?<", (-47), (-47));
      Node node1 = new Node((-47), node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      jSDocInfo0.setAssociatedNode(node1);
      Node node3 = jSDocInfo0.getAssociatedNode();
      node3.addChildToBack(node2);
      node3.putProp(92, jSDocInfo0);
      node1.setLength((-3356));
      node2.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(36, 2, 307);
      Node node3 = Node.newString(1, "<NOPjmDsz");
      node2.isSyntheticBlock();
      Node node4 = node2.clonePropsFrom(node1);
      node0.getAncestors();
      node4.isOnlyModifiesThisCall();
      node3.isInstanceOf();
      node3.isNull();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      node0.isNoSideEffectsCall();
      Node node1 = node0.clonePropsFrom(node0);
      node0.isOnlyModifiesArgumentsCall();
      node0.checkTreeEquals(node1);
      node0.getAncestors();
      node1.isHook();
      node1.cloneTree();
      node0.isOnlyModifiesThisCall();
      node1.isUnscopedQualifiedName();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isGetElem();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getSourceOffset();
      // Undeclared exception!
      try { 
        node2.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      node0.isVoid();
      Node node1 = Node.newString("Node has existing properties.");
      node1.setIsSyntheticBlock(true);
      node0.isString();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      String string0 = "is_constant_name";
      Node node0 = Node.newString(120, ",a}g!LC[");
      Node node1 = Node.newString("VKB8`(y3;/AnzLzdbp");
      Node node2 = node1.cloneTree();
      Node node3 = Node.newString(",a}g!LC[");
      node0.isDec();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node3, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(55, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.getJSDocInfo();
      node2.isCall();
      Node node3 = new Node(38);
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node1);
      node2.isCatch();
      node1.isOptionalArg();
      Node node4 = new Node(51);
      node1.isDebugger();
      Node.AncestorIterable node_AncestorIterable2 = new Node.AncestorIterable(node1);
      Node node5 = node4.cloneNode();
      node3.isSwitch();
      node5.isOptionalArg();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node6 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node6.isComma();
      Node node7 = Node.newString("-g$jg|Jpb4g9~Dt");
      node2.isExprResult();
      node7.isVar();
      Node.newNumber(0.0);
      node2.isContinue();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = new Node(31);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isDo();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node0.isQualifiedName();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add(" \u00A0\u00AD\u0604\u06DD\u070F\u1680\u180E\u200F\u202F\u2064\u206F\u3000\uF8FF\uFEFF\uFFF9\uFFFB");
      node2.getJSDocInfo();
      node0.isAdd();
      node2.isQuotedString();
      // Undeclared exception!
      try { 
        node1.setDouble(32);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 831
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(4);
      node1.isEquivalentToShallow(node0);
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node2.isQuotedString();
      node2.isQualifiedName();
      Node node3 = new Node(873, (-256), (-1391));
      node3.isBlock();
      Node node4 = new Node(12, node1, node0, 110, 42);
      node2.isNull();
      node3.isStringKey();
      // Undeclared exception!
      try { 
        node2.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = new Node(57);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node1.isVarArgs();
      node0.getJSDocInfo();
      node2.isCall();
      Node node3 = new Node(93);
      node0.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.isBlock();
      node1.isCall();
      node0.isUnscopedQualifiedName();
      node2.getJsDocBuilderForNode();
      node3.putIntProp(30, 51);
      node2.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = new Node(2, node0, node0, 55, 52);
      Node node2 = node1.cloneNode();
      node0.getSourceFileName();
      Node.newNumber(0.0, 2, 51);
      node2.checkTreeEqualsImpl(node2);
      Node node3 = new Node(31, node2, node1, node1, 96, 5760);
      node3.isStringKey();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType(" is not a string node", node3, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isLabelName();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQualifiedName();
      node1.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node2.isBlock();
      node0.isOptionalArg();
      node2.isLabel();
      node2.hasMoreThanOneChild();
      node1.isContinue();
      node1.isTypeOf();
      node0.addSuppression("7{Gw,C7FU*k2D");
      node0.isNull();
      Node node3 = Node.newString("7{Gw,C7FU*k2D");
      Node node4 = new Node(50, node1, node3, node3, node1, 42, (-88));
      node1.copyInformationFromForTree(node4);
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = new Node(86, 3, 116);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = Node.newString(50, "");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.isNoSideEffectsCall();
      // Undeclared exception!
      try { 
        node0.clonePropsFrom(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isInstanceOf();
      Node node1 = new Node(89, node0, node0, node0, node0);
      Node node2 = node0.copyInformationFrom(node1);
      node2.detachChildren();
      node0.isInstanceOf();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = Node.newNumber((-145.11255946097));
      node0.isFor();
      node0.getLength();
      Node node1 = new Node(52, node0);
      node0.addChildToFront(node1);
      node1.hasOneChild();
      Node node2 = node0.removeFirstChild();
      node2.checkTreeEquals(node0);
      node1.putIntProp(2, 48);
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = new Node(120);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getSourceFileName();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(31, node0, node0, node0, 54, 30);
      node1.useSourceInfoFrom(node0);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got DELPROP
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      node0.isNoSideEffectsCall();
      Node node1 = node0.clonePropsFrom(node0);
      node0.isOnlyModifiesArgumentsCall();
      node0.getAncestors();
      node1.isHook();
      node0.isOnlyModifiesThisCall();
      node1.isUnscopedQualifiedName();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node1.isThis();
      node1.isAssignAdd();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node2.isNoSideEffectsCall();
      Node node3 = node1.clonePropsFrom(node0);
      node3.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node1.isHook();
      node3.isOnlyModifiesThisCall();
      node2.isUnscopedQualifiedName();
      node1.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags((-2195));
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      node1.isThis();
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = new Node((-2626));
      Node node1 = node0.cloneNode();
      Node node2 = node0.cloneNode();
      node1.isLabelName();
      node0.checkTreeEquals(node1);
      node2.getSideEffectFlags();
      node1.isQuotedString();
      node1.isQualifiedName();
      node2.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.isBlock();
      node0.isLabel();
      Node node3 = new Node(48, node1, 16, 49);
      node3.isFromExterns();
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newNumber((-2684.93661), 26, (-4528));
      node0.isBlock();
      node0.isLabel();
      Node node1 = new Node(2036, node0, 29, 3355);
      node1.isFromExterns();
      Node node2 = new Node(21, node1, node1);
      node2.removeChild(node1);
      node1.isNull();
      node0.isStringKey();
      node2.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isLabelName();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node2.isQuotedString();
      node0.isQualifiedName();
      node2.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node2.isBlock();
      node1.isLabel();
      Node node3 = new Node(51, node2, 250, 47);
      node3.isFromExterns();
      // Undeclared exception!
      try { 
        node3.removeChild(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = new Node(130, 130, 130);
      Node node1 = new Node(1, 39, 1573);
      node0.isScript();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node1.cloneTree();
      node_AncestorIterable0.iterator();
      node0.getAncestors();
      Node node2 = new Node(55, node1, node1);
      node0.setVarArgs(false);
      node1.isEquivalentTo(node0, false, true, false);
      node0.mayMutateGlobalStateOrThrow();
      node2.isCase();
      node1.getAncestor(53);
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = new Node(132, 30, 1074);
      Node node1 = new Node(833, 0, 1968);
      node0.isScript();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      // Undeclared exception!
      try { 
        node_AncestorIterable0.forEach((Consumer<? super Node>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = new Node(9, 9, 116);
      Node node1 = Node.newString(4095, "");
      node1.isNoSideEffectsCall();
      Node node2 = node1.clonePropsFrom(node0);
      node0.isBreak();
      node2.getInputId();
      node1.isWhile();
      node0.isBlock();
      node0.isArrayLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node3 = new Node(54, node2, 9, 26);
      node1.getQualifiedName();
      Node.newNumber((-462.0), 4095, (-709));
      node1.isLabelName();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("Q");
      Node node1 = Node.newString("#$MT_bMVt|{d?h#KHx;", 55, 39);
      Node node2 = new Node((-1578), node1, 16, 58);
      node0.addChildToFront(node2);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1578
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = new Node(27, 27, (-171));
      node0.addSuppression("");
      node0.getJSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.isThis();
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = new Node(10, node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      String string0 = "{]U\"&39|!]uBi-w@{N";
      JSType jSType0 = null;
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newString((-802), "is_constant_name");
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.children();
      Node node3 = new Node(31, node1, node1, (-792), 29);
      node3.isNE();
      node3.getChildCount();
      node1.getIntProp(26);
      node0.checkTreeEqualsImpl(node2);
      node3.isDebugger();
      node2.isName();
      node0.isNumber();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -802
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "VKB8`Ky3;/AnzLzdbpF");
      Node node0 = new Node(86, 3, 96);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesArgumentsCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isHook();
      node0.isOnlyModifiesThisCall();
      node0.isUnscopedQualifiedName();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node0.getJsDocBuilderForNode();
      node0.isTypeOf();
      node0.isThis();
      Node node1 = new Node(57, node0, node0, node0, node0, 64, 2097152);
      Node node2 = node0.clonePropsFrom(node1);
      node1.isCast();
      node1.children();
      node2.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      Node node1 = Node.newString(393, "5");
      node1.isVoid();
      Node node2 = node1.clonePropsFrom(node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getAncestors();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z3z>");
      node0.isBreak();
      node2.isCall();
      node1.getJSDocInfo();
      Node node3 = new Node((-24));
      node0.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      Node node4 = node1.cloneNode();
      node4.isSwitch();
      node2.isOptionalArg();
      node2.isComma();
      Node.newString("CONTINUE");
      node3.isExprResult();
      node2.isVar();
      Node.newNumber((double) 31);
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(4);
      node1.isEquivalentToShallow(node0);
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQuotedString();
      node1.isQualifiedName();
      node1.isLocalResultCall();
      node2.getSideEffectFlags();
      node2.hasOneChild();
      node2.getJSDocInfo();
      node2.isAdd();
      node0.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Node tree inequality:\nTree1:\nRETURN\n\n\nTree2:\nCATCH\n\n\nSubtree1: RETURN\n\n\nSubtree2: CATCH\n");
      node_FileLevelJsDocBuilder0.append("),w");
      node1.isCatch();
      Node node3 = new Node((-981), node1, node2, node0, node0);
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newNumber(1.4670034406342007, (-709), (-709));
      node0.putBooleanProp((-709), false);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      node0.isQualifiedName();
      node0.isLocalResultCall();
      Node node1 = new Node(977, 26, 4720);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node1.isBlock();
      node0.isOptionalArg();
      node1.isLabel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.hasMoreThanOneChild();
      Node node2 = Node.newNumber((double) 2, 0, 4720);
      node2.isTypeOf();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter((Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node.newString("VKB8`Ky3;/AnzLzdbpF");
      Node node0 = Node.newString(110, "1 UrR");
      node0.cloneTree();
      InputId inputId0 = new InputId("");
      inputId0.toString();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte) (-92);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node1 = null;
      try {
        node1 = new Node(1, (Node) null, node0, (Node) null, 0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      node0.isNoSideEffectsCall();
      Node node1 = node0.clonePropsFrom(node0);
      node0.isOnlyModifiesArgumentsCall();
      node0.getAncestors();
      node1.isHook();
      node0.isOnlyModifiesThisCall();
      Node node2 = Node.newNumber((-379.910897851));
      node2.setSourceEncodedPosition((-2404));
      node0.isObjectLit();
      node0.getJSDocInfo();
      node0.isCall();
      node0.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder1.append("");
      Node node3 = new Node(51, node2, 52, 49);
      node3.isCatch();
      Node node4 = new Node(350, node1, node1);
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(49);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "Hd");
      node0.isStringKey();
      node0.getAncestors();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Hd");
      node0.isBreak();
      node0.isCall();
      node1.getJSDocInfo();
      Node node2 = new Node(40);
      Node node3 = new Node(46, node1, node1);
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      Node node4 = new Node(39, node3, node2, node0);
      node4.cloneNode();
      node4.isSwitch();
      node1.isOptionalArg();
      node2.isComma();
      Node node5 = Node.newString("Z3z>");
      node5.isExprResult();
      node3.isVar();
      Node.newNumber((double) 53);
      Node node6 = Node.newNumber(1896.260651655, 57, 2);
      node6.isContinue();
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newString((-944), "1LAVL< |!d^)Lm`", 2329, (-944));
      Node node1 = new Node((-944), node0, node0);
      node1.isLocalResultCall();
      node0.isSwitch();
      Node node2 = node1.copyInformationFrom(node0);
      Node node3 = node2.cloneNode();
      node0.isFromExterns();
      node1.isLocalResultCall();
      // Undeclared exception!
      try { 
        node3.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = new Node(89, 89, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node0.isQualifiedName();
      Node node3 = Node.newNumber(1715.80218878511);
      node3.setSourceEncodedPosition(39);
      node0.hasChild(node3);
      node0.getJSDocInfo();
      node0.isCall();
      node3.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node3.isLabelName();
      node0.getLastSibling();
      Node.mergeLineCharNo((-654), 37);
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("Should not happen\n");
      Node node1 = new Node(4);
      node0.getQualifiedName();
      node0.setLineno(37);
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newString((-3341), "}',X9&[_*NU");
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString("G+#b+LL7Zm^F[RCBB<@");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.children();
      Node node3 = new Node(12, node2, node0, (-706), 57);
      node1.isNE();
      node2.getChildCount();
      node3.getIntProp(27591);
      node2.checkTreeEqualsImpl(node1);
      node0.isEmpty();
      node1.isName();
      node3.copyInformationFrom(node3);
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = new Node(89, 89, 89);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node2.isUnscopedQualifiedName();
      node0.isParamList();
      node0.isRegExp();
      node1.checkTreeEqualsImpl(node2);
      node0.isEquivalentTo(node0, false, false, false);
      node2.isName();
      node2.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      String string0 = "Hd";
      Node node1 = Node.newString(50, "Hd");
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.addChildrenToFront(node1);
      node1.isNoSideEffectsCall();
      Node node3 = node0.clonePropsFrom(node1);
      node1.getProp(30);
      node1.isOnlyModifiesArgumentsCall();
      node3.isThis();
      node0.isBreak();
      node1.getJSDocInfo();
      node3.isCall();
      // Undeclared exception!
      try { 
        node3.addChildrenToBack(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = new Node(30);
      node0.getSideEffectFlags();
      Node node1 = new Node((-653), node0, node0, node0);
      node0.removeProp(301);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.getJsDocBuilderForNode();
      node0.getBooleanProp(49);
      node1.getProp(12);
      node2.addSuppression("");
      Node node3 = Node.newString(2364, "7~jE|b&JmL\"B5j", 102, 31);
      node1.addChildToFront(node3);
      node1.setCharno(57);
      node2.siblings();
      node2.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isLabelName();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQuotedString();
      node1.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      Node node3 = node2.useSourceInfoFromForTree(node0);
      node1.isGetElem();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node3.getSourceOffset();
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = new Node(1, node0);
      node0.isBreak();
      node0.isCall();
      node1.useSourceInfoFromForTree(node0);
      node1.isGetElem();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.getSourceOffset();
      node0.detachFromParent();
      node0.isContinue();
      // Undeclared exception!
      try { 
        node1.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "VKB8`Ky3;/AnzLzdbpF");
      Node node0 = new Node(86, 3, 96);
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesArgumentsCall();
      node0.getAncestors();
      node0.isHook();
      node0.isOnlyModifiesThisCall();
      node0.isUnscopedQualifiedName();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node0.getJsDocBuilderForNode();
      node0.isTypeOf();
      node0.isThis();
      Node node1 = new Node(57, node0, node0, node0, node0, 64, (-4312));
      node0.clonePropsFrom(node1);
      node1.isCast();
      node1.children();
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = new Node(2601);
      node0.isNumber();
      Node node1 = Node.newString(37, "T)$x5@WEPhLRsMOb");
      node1.setString("com.google.avscript.rhino.jstype.FunctionType");
      node1.setSideEffectFlags(55);
      node0.getSourcePosition();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T)$x5@WEPhLRsMOb");
      Node node2 = new Node(50, node0, 36, (-3033));
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CALL com.google.avscript.rhino.jstype.FunctionType [side_effect_flags: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isLabelName();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQuotedString();
      node1.isQualifiedName();
      node0.isEquivalentTo(node1, false, false, true);
      node1.isLocalResultCall();
      node0.isEquivalentTo(node2, true, false, true);
      int int0 = Node.JSDOC_INFO_PROP;
      node2.hasOneChild();
      node1.isFor();
      node0.isSetterDef();
      node0.useSourceInfoFrom(node2);
      node1.isThis();
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isLabelName();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQuotedString();
      node1.isQualifiedName();
      node1.isLocalResultCall();
      node1.toString(false, false, true);
      node2.mayMutateGlobalStateOrThrow();
      node1.isFalse();
      node2.isAnd();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isLabelName();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node2.isQuotedString();
      node0.isQualifiedName();
      node2.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node2.isBlock();
      node2.isOptionalArg();
      node1.isLabel();
      Node node3 = new Node(51, node2, 250, 47);
      node3.hasMoreThanOneChild();
      Node node4 = Node.newNumber((double) 37, (-1), 529);
      node4.isContinue();
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newString("4?(E", (-463), 0);
      node0.isDelProp();
      node0.setSourceEncodedPositionForTree(812);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      MockPrintStream mockPrintStream0 = new MockPrintStream("4?(E");
      node_SideEffectFlags1.setMutatesThis();
      node0.getLineno();
      Node node1 = Node.newNumber((double) 30, 152, 812);
      node1.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = Node.newString(152, "com.google.common.base.CharMatcher");
      Node node1 = null;
      try {
        node1 = new Node(558, (Node) null, (Node) null, node0, (Node) null, (-802), 15);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-709), (-709));
      node0.putBooleanProp((-709), true);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor1.caseStringType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node2 = Node.newString(0, "Not declared as a type name", 52, (-3055));
      node1.isNoSideEffectsCall();
      node2.getStaticSourceFile();
      Node node3 = new Node(98, node0, 193, 127);
      node3.isDefaultCase();
      node0.getLength();
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      // Undeclared exception!
      try { 
        node4.replaceChildAfter(node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newString("", 3, 86);
      node0.setSourceEncodedPositionForTree(86);
      node0.getLength();
      node0.getAncestors();
      node0.isBreak();
      Node node1 = new Node(54, node0, node0, node0, node0);
      node1.getJSDocInfo();
      node1.isCall();
      Node node2 = new Node(53);
      node0.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node2.isBlock();
      node0.isOptionalArg();
      node0.isLabel();
      node2.hasMoreThanOneChild();
      Node.newNumber(0.7, 230, 40);
      node0.isContinue();
      node1.isTypeOf();
      node2.putProp(2527, (Object) null);
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.mergeLineCharNo(2832, 2832);
      String string0 = "7~jE|b&JmL\"B5j";
      Node.newString("7~jE|b&JmL\"B5j");
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(55, (Node) null, 52, 37);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = new Node(1, 4, 1573);
      node0.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node2.getJSDocInfo();
      node1.isCall();
      Node node3 = new Node(9);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node1.isBlock();
      node2.isOptionalArg();
      node3.isLabel();
      node0.isGetProp();
      Node.newNumber(270.2, 113, 46);
      node3.isContinue();
      Node node4 = Node.newNumber((double) 1, 2, 29);
      node4.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = Node.newString(831, "<NOPjmDsz");
      node0.isSyntheticBlock();
      node0.isFunction();
      Node node1 = Node.newNumber(1715.80218878511);
      node1.isQuotedString();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isLabelName();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQuotedString();
      node1.isQualifiedName();
      node1.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node2.isBlock();
      node0.isOptionalArg();
      node2.isLabel();
      node2.hasMoreThanOneChild();
      Node.newNumber((double) 36, 100, 2649);
      node1.isContinue();
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      node0.isNoSideEffectsCall();
      Node node1 = node0.clonePropsFrom(node0);
      node0.isOnlyModifiesArgumentsCall();
      node0.getAncestors();
      node1.isHook();
      node0.isOnlyModifiesThisCall();
      node1.isUnscopedQualifiedName();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node1.isThis();
      node1.isAssignAdd();
      node_SideEffectFlags0.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isLabelName();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQuotedString();
      node1.isQualifiedName();
      node1.isLocalResultCall();
      node0.isEquivalentTo(node2, true, false, true);
      int int0 = Node.JSDOC_INFO_PROP;
      node2.hasOneChild();
      node1.isFor();
      node0.isSetterDef();
      node0.isName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node1.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = new Node(86, 3, 116);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      node1.isCall();
      Node node2 = new Node((-1855));
      node0.isDec();
      node2.getInputId();
      node1.isScript();
      node2.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder1.append((String) null);
      node1.isCatch();
      node0.getLastSibling();
      node2.isThrow();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "VKB8`Ky3;/AnzLzdbpF");
      Node node0 = new Node(86, 3, 96);
      node0.isNoSideEffectsCall();
      Node node1 = node0.clonePropsFrom(node0);
      node0.isOnlyModifiesArgumentsCall();
      node0.getAncestors();
      node1.isHook();
      node0.isOnlyModifiesThisCall();
      node1.isUnscopedQualifiedName();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node1.getJsDocBuilderForNode();
      node1.isTypeOf();
      node0.isThis();
      Node node2 = new Node(1627, node0, node0, node0, node0, 64, (-4312));
      node0.clonePropsFrom(node2);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newNumber(0.9049017103733468);
      node0.isFor();
      node0.getLength();
      node0.addChildToFront(node0);
      Node node1 = Node.newString("7~jE|b&JmL\"B5j");
      node0.hasOneChild();
      node1.hasOneChild();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.getSourceOffset();
      Node node2 = node0.detachFromParent();
      node0.isContinue();
      node2.isString();
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(57, "");
      node1.isQualifiedName();
      node1.getAncestors();
      node0.isBreak();
      node1.isFalse();
      Node node2 = node0.copyInformationFromForTree(node0);
      node2.removeProp(85);
      node0.isBlock();
      node0.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.getQualifiedName();
      node1.setLineno(43);
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = Node.newString((-802), "is_constant_name");
      Node node1 = node0.cloneTree();
      InputId inputId0 = new InputId("WITH");
      inputId0.toString();
      node1.setInputId(inputId0);
      node1.setInputId(inputId0);
      Node node2 = new Node(30, node1, node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Iterable<Node> iterable0 = new ArrayList<Node>(30);
      node1.isNE();
      node1.getChildCount();
      node2.srcref(node1);
      node1.getIntProp(40);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node2);
      node_NodeMismatch0.equals((Object) null);
      node2.isName();
      node0.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = new Node(100, (-5), 124);
      Node node1 = Node.newString(50, "p5kN'gqq>nS{>7F");
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node0.isBreak();
      node2.isCall();
      Node node3 = new Node(42, node0, node1, node2);
      Node.newString("p5kN'gqq>nS{>7F");
      node3.isDebugger();
      Node node4 = Node.newString(39, "p5kN'gqq>nS{>7F", 31, (-1714));
      Node node5 = new Node(43, node4, node4, 40, 55);
      Node node6 = Node.newNumber((double) 53);
      node6.isNull();
      node0.isStringKey();
      node4.isCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(13);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("Q");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(52, 4095);
      node0.setDirectives(linkedHashSet0);
      node0.getInputId();
      node0.wasEmptyNode();
      node0.setIsSyntheticBlock(false);
      node0.isBlock();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node2 = Node.newString("5M;2~@%b}~,$Z}QBE^");
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node2.isNew();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node(20);
      Node node1 = new Node(20, node0, node0, 53, 49);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Node node2 = node1.removeChildren();
      node2.isObjectLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-4252));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.getIntProp(917);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got URSH
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = new Node(89, 89, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node0.isUnscopedQualifiedName();
      node0.isParamList();
      node0.isRegExp();
      node0.getNext();
      node1.isOnlyModifiesThisCall();
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(1095);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 1095
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      Node node1 = Node.newString(393, "");
      node1.isVoid();
      Node node2 = Node.newString(57, "Node has existing properties.", 874, 38);
      Node node3 = node2.clonePropsFrom(node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.getAncestors();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z3z>");
      node0.isBreak();
      node3.isCall();
      node1.getJSDocInfo();
      Node node4 = new Node((-24));
      node0.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      Node node5 = node2.cloneNode();
      node5.isSwitch();
      node3.isOptionalArg();
      node3.isLabel();
      Node.newString("CONTINUE");
      node4.isExprResult();
      node3.isVar();
      Node.newNumber((double) 31);
      node3.hasOneChild();
      node5.isBlock();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = Node.newNumber(0.9049017103733468);
      node0.isFor();
      node0.getLength();
      node0.addChildToFront(node0);
      Node node1 = Node.newString("7~jE|b&JmL\"B5j");
      node0.hasOneChild();
      node1.hasOneChild();
      node0.removeFirstChild();
      node0.putIntProp(30, 108);
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(54);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 54
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = new Node(302);
      Node node1 = Node.newString((-2240), "<NOPjmDsz");
      node1.isEquivalentToShallow(node0);
      node0.isSyntheticBlock();
      Node node2 = Node.newNumber(1400.87772183546, 8, 1487);
      Node node3 = node0.clonePropsFrom(node2);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)105;
      byteArray0[2] = (byte)63;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node2.isFunction();
      node1.getAncestors();
      node3.isBreak();
      Node node4 = Node.newString("f7jzfe", 15, 47);
      node1.getQualifiedName();
      node4.setLineno(126);
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = new Node(152, 302, (-2711));
      Node node1 = Node.newString((-2240), "<NOPjmDsz");
      node0.isSyntheticBlock();
      Node node2 = Node.newNumber(1400.87772183546, 8, 1487);
      Node node3 = node0.clonePropsFrom(node2);
      node2.isFunction();
      node1.getAncestors();
      node3.isBreak();
      node2.getJSDocInfo();
      node0.isCall();
      Node node4 = new Node(124);
      node4.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node1.isBlock();
      node0.isOptionalArg();
      node2.isLabel();
      node2.isGetProp();
      Node.newNumber((-697.9113), 8, 56);
      node1.isContinue();
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = Node.newString(102, "no next sibling.");
      Node node1 = new Node(1, node0, 40, 39);
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isUnscopedQualifiedName();
      node1.isQuotedString();
      node1.isQualifiedName();
      node0.detachChildren();
      node2.isTry();
      node2.getSideEffectFlags();
      node2.hasOneChild();
      node0.getSideEffectFlags();
      node2.isDebugger();
      node1.getSourceOffset();
      node1.getLength();
      Node.newString("#|Ce1<D3v^w");
      Node node3 = Node.newString("NOT_NULL");
      node1.isEquivalentTo(node2, false, true, true);
      node3.isNE();
      node3.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = new Node(89, 89, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node0.isQualifiedName();
      Node node3 = Node.newNumber(1715.80218878511);
      node3.setSourceEncodedPosition(39);
      node0.hasChild(node3);
      node3.isEquivalentTo(node0);
      node0.getJSDocInfo();
      node0.isCall();
      node3.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node0.isCatch();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(1487, 3077, 1573);
      node0.isScript();
      Node node1 = new Node(47, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      // Undeclared exception!
      try { 
        node_AncestorIterable0.forEach((Consumer<? super Node>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = new Node(130);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isOptionalArg();
      node0.isNot();
      Node.newString("(W,6");
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = new Node(100, (-5), 124);
      Node node1 = Node.newString(50, "p5kN'gqq>nS{>7F");
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node0.isBreak();
      node2.isCall();
      Node node3 = new Node(93);
      node3.isDebugger();
      Node.newString(39, "p5kN'gqq>nS{>7F", 31, (-1714));
      Node node4 = new Node((-2630), node2, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node3.isBlock();
      node1.isOptionalArg();
      node0.children();
      node0.isAssignAdd();
      node4.isAssign();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = Node.newString(456, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node0.isGetterDef();
      node0.getAncestors();
      node1.isBreak();
      node2.getJSDocInfo();
      node1.isCall();
      node0.isQualifiedName();
      Node node3 = Node.newNumber((double) 50);
      node1.setSourceEncodedPosition(8);
      node0.isObjectLit();
      node3.getJSDocInfo();
      node1.isCall();
      node3.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node0.isCatch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("<NOPjmDsz", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = new Node(40, 42, 51);
      node1.isNoSideEffectsCall();
      Node node2 = node1.clonePropsFrom(node0);
      node0.isOnlyModifiesArgumentsCall();
      node0.getAncestors();
      node0.isHook();
      node2.isOnlyModifiesThisCall();
      Node node3 = Node.newNumber(883.27121828361, (-3627), 12);
      node3.isUnscopedQualifiedName();
      node2.getInputId();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node3.isCatch();
      node3.getProp(47);
      node3.setLineno(53);
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = new Node(89, 89, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node0.isQualifiedName();
      Node node3 = Node.newNumber(1715.80218878511);
      node3.setSourceEncodedPosition(39);
      node3.getChangeTime();
      node0.hasChild(node3);
      node2.setJSDocInfo((JSDocInfo) null);
      node0.getJSDocInfo();
      node0.isCall();
      node3.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node0.isCatch();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(53, 2616, 56);
      Node node2 = Node.newString("+GBt9Ic2$U", (-1371), 4);
      node2.addChildrenToFront(node1);
      node1.setWasEmptyNode(false);
      node2.setQuotedString();
      node1.isAssignAdd();
      node0.isBlock();
      node2.isOptionalArg();
      node1.isArrayLit();
      node1.isLabel();
      node0.isGetProp();
      node2.isContinue();
      Node node3 = new Node(55, node2, node2, node2, node0, 130, 36);
      node2.copyInformationFromForTree(node0);
      node3.getLastChild();
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newString((-802), "is_constant_name");
      Node node1 = node0.cloneTree();
      InputId inputId0 = new InputId("WITH");
      inputId0.toString();
      node1.setInputId(inputId0);
      node1.setInputId(inputId0);
      Node node2 = Node.newString("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.children();
      Node node3 = new Node(31, node1, node1, (-792), 29);
      node3.isNE();
      node3.getChildCount();
      node1.getIntProp(40);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node2);
      node_NodeMismatch0.equals((Object) null);
      node2.isName();
      node0.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node node0 = new Node(31);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node2.isGetterDef();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node0.isQualifiedName();
      Node node3 = Node.newNumber(1715.80218878511);
      node3.setSourceEncodedPosition(39);
      node2.isObjectLit();
      node0.getJSDocInfo();
      node0.isCall();
      node3.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node0.isCatch();
      Node node4 = new Node(1, node0, node2);
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(38);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Node node0 = Node.newString("new:");
      Node node1 = Node.newNumber((double) 0);
      node0.mayMutateArguments();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.children();
      node0.isNE();
      node0.getChildCount();
      node0.getIntProp(1577);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      node_NodeMismatch0.equals((Object) null);
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = Node.newString(".");
      Node node1 = node0.cloneNode();
      Node node2 = Node.newString(8, ".");
      node1.getInputId();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      Node node3 = Node.newString(".", 4095, (-167));
      node3.getAncestor(50);
      node3.isAssign();
      node3.getInputId();
      node3.wasEmptyNode();
      node0.isEquivalentToTyped(node0);
      node2.isOptionalArg();
      Node node4 = Node.newString(93, ".");
      node4.checkTreeEqualsImpl(node3);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("Ij?1A-l");
      EnumType enumType0 = jSTypeRegistry0.createEnumType(".", node4, templateType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      jSTypeArray0[0] = (JSType) enumElementType0;
      Node node5 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.useSourceInfoIfMissingFromForTree(node5);
      // Undeclared exception!
      try { 
        node4.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isLabelName();
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQuotedString();
      node1.isQualifiedName();
      node1.isLocalResultCall();
      node0.isEquivalentTo(node2, true, false, true);
      node2.getSideEffectFlags();
      node2.hasOneChild();
      node0.isCall();
      node0.isSetterDef();
      node0.getJsDocBuilderForNode();
      node2.putIntProp(30, 12);
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = new Node(86, 3, 116);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node0.isSetterDef();
      node1.getAncestors();
      node0.isBreak();
      node1.getInputId();
      node2.isWhile();
      node1.isCall();
      node0.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      node2.isCatch();
      Node node3 = new Node(308, node1, node0);
      node0.getChildAtIndex((-2188));
      try { 
        node3.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LB is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newString("", 3, 86);
      node0.setSourceEncodedPositionForTree(86);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node node1 = new Node(16, node0, node0, node0, node0);
      node0.getInputId();
      Node node2 = null;
      try {
        node2 = new Node((-1586), node1, node1, node0, node0, (-3148), 54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte) (-53);
      byteArray0[3] = (byte) (-82);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-4716), nodeArray0);
      node0.isLocalResultCall();
      Node node1 = Node.newString("z_voCXcM", 2, 627);
      Node node2 = node1.cloneNode();
      node0.clonePropsFrom(node1);
      node1.isVarArgs();
      node2.getSourcePosition();
      node0.children();
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newString(".");
      Node node1 = node0.cloneNode();
      node0.removeProp((-2334));
      Node node2 = Node.newString(8, ".");
      node1.getInputId();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      Node node3 = Node.newString(".", 4095, (-167));
      node3.getAncestor(50);
      node3.isAssign();
      node1.isInstanceOf();
      Node node4 = node2.getLastSibling();
      node4.setLineno(36);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node1.checkTreeEqualsImpl(node2);
      // Undeclared exception!
      try { 
        node1.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      String string0 = "";
      Node node0 = new Node(96, 77, 154);
      Node node1 = Node.newString(47, "");
      Node node2 = new Node(126, node0, node1, node1, 1307, 427);
      node2.isSyntheticBlock();
      node2.clonePropsFrom(node1);
      node2.isFunction();
      Node node3 = null;
      try {
        node3 = new Node(42, node2, node1, node1, node0, (-744), 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString((-728), "VYc,m,Avo", 49, (-728));
      nodeArray0[0] = node0;
      Node node1 = new Node(0, nodeArray0, 1017, 38);
      node1.isLabel();
      node1.isThis();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(53, 2616, 56);
      Node node2 = Node.newString("+GBt9Ic2$U", (-1371), 4);
      node2.addChildrenToFront(node1);
      node2.setQuotedString();
      node1.isAssignAdd();
      node0.isBlock();
      node2.isOptionalArg();
      node1.isArrayLit();
      node0.isLabel();
      node0.isGetProp();
      node2.isContinue();
      node1.isTrue();
      node2.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = Node.newString("", 1573, 3356);
      node0.getQualifiedName();
      node0.setLineno(27);
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = new Node(100, (-5), 124);
      Node node1 = Node.newString(50, "p5kN'gqq>nS{>7F");
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node0.isBreak();
      node2.isCall();
      Node node3 = new Node(93);
      node3.isDebugger();
      Node node4 = Node.newString(39, "p5kN'gqq>nS{>7F", 31, (-1714));
      Node node5 = new Node((-2630), node2, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node3.isBlock();
      node1.isOptionalArg();
      node0.children();
      // Undeclared exception!
      try { 
        node4.replaceChild(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(4);
      node1.isEquivalentToShallow(node0);
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQuotedString();
      node1.isQualifiedName();
      node1.isLocalResultCall();
      node2.getSideEffectFlags();
      node2.hasOneChild();
      node2.getJSDocInfo();
      node2.isAdd();
      node0.isQuotedString();
      node1.isNull();
      node2.isLabel();
      node0.isEmpty();
      node2.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = new Node(31);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      Node.AncestorIterable node_AncestorIterable0 = node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node_AncestorIterable0.iterator();
      node2.getAncestors();
      Node node3 = new Node(846, node2, node1);
      node3.isEquivalentTo(node2, false, true, true);
      node3.mayMutateGlobalStateOrThrow();
      node2.isCase();
      node0.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isVoid();
      Node node2 = node0.clonePropsFrom(node1);
      node2.getAncestors();
      node0.isBreak();
      node2.isCall();
      node1.getJSDocInfo();
      node1.isCall();
      Node node3 = new Node(42);
      node1.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      node0.isSwitch();
      node3.isArrayLit();
      node2.isLabel();
      Node node4 = Node.newString(40, "", 32, 32);
      node4.isGetProp();
      node1.isContinue();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newString("ORDINARY", 47, 47);
      Node node1 = new Node(39, node0, 4095, 57);
      node0.setString("ORDINARY");
      node0.isWith();
      // Undeclared exception!
      try { 
        node1.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node node0 = Node.newString("DEFAULT_CASE", 0, 0);
      node0.setSourceFileForTesting("DEFAULT_CASE");
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = node0.cloneNode();
      Node node2 = new Node(4);
      node1.isEquivalentToShallow(node0);
      node2.checkTreeEquals(node0);
      node1.getSideEffectFlags();
      node1.isQuotedString();
      node1.isQualifiedName();
      node1.isLocalResultCall();
      node2.getSideEffectFlags();
      node2.hasOneChild();
      node2.getJSDocInfo();
      node2.isAdd();
      node0.isQuotedString();
      node1.isNull();
      node2.children();
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      InputId inputId0 = new InputId("wO");
      Node node1 = Node.newString("    ");
      node0.addChildToFront(node1);
      node0.useSourceInfoFromForTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) templateType0;
      FunctionType functionType0 = jSTypeRegistry1.createFunctionType((JSType) templateType0, false, jSTypeArray0);
      modificationVisitor0.caseFunctionType(functionType0);
      ImmutableList.copyOf(jSTypeArray0);
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isUnscopedQualifiedName();
      node1.isQuotedString();
      node1.isQualifiedName();
      node0.detachChildren();
      node1.isLocalResultCall();
      node2.getSideEffectFlags();
      node2.hasOneChild();
      node0.getSideEffectFlags();
      node2.isDebugger();
      node1.getSourceOffset();
      node1.getLength();
      Node.newString("#|Ce1<D3v^w");
      Node node3 = Node.newString("COTNULL");
      node1.isEquivalentTo(node2, false, true, true);
      node3.isNE();
      node3.isArrayLit();
      node3.isString();
      Node.newNumber(4702.1428707457, 49, 108);
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = Node.newString("VKB8`Ky3;/AnzLzdbpF");
      node0.getChildAtIndex(0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("free_call", false);
      char[] charArray0 = new char[4];
      charArray0[0] = 'K';
      charArray0[1] = 'U';
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = new Node(31);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node0.isQualifiedName();
      Node node3 = Node.newNumber(1715.80218878511);
      node3.setSourceEncodedPosition(39);
      node1.isBreak();
      node0.getJSDocInfo();
      node0.isCall();
      node3.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node0.isCatch();
      Node node4 = new Node(1, node0, node2);
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(38);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(53, 2616, 56);
      node1.isScript();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node_AncestorIterable0.iterator();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      Node node2 = new Node(4351, node1, node1);
      node0.isEquivalentTo(node1, true, false, true);
      node0.mayMutateGlobalStateOrThrow();
      node2.isFromExterns();
      node1.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = Node.newString("4?(E", (-463), 0);
      node0.isDelProp();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.setSourceEncodedPositionForTree(812);
      node0.getLength();
      node0.isCatch();
      Node node1 = Node.newString("4?(E", 56, 665);
      node1.mayMutateGlobalStateOrThrow();
      node1.isFalse();
      Node node2 = new Node(37, node1, node1, 793, (-1590));
      node2.isAnd();
      node1.isCase();
      node1.getAncestors();
      node2.toStringTree();
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      String string0 = "_qN:]T";
      Node node0 = Node.newString("_qN:]T");
      node0.getSourceFileName();
      Node node1 = new Node(55, node0, node0, node0, node0, 27591, 15);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = Node.newString("", 3, 86);
      node0.setSourceEncodedPositionForTree(86);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node node1 = new Node(16, node0, node0, node0, node0);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      int int0 = Node.FREE_CALL;
      node0.isParamList();
      node0.isRegExp();
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = new Node(86, 3, 3);
      Node node1 = Node.newString(50, "");
      node1.isVoid();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node0.isBreak();
      node2.isCall();
      Node node3 = new Node(8, node0, node2, node0, node1, 397, 0);
      Node.newString("i");
      Node node4 = new Node((-4096));
      node4.isInstanceOf();
      Node.newString((-2207), "", 41, 1);
      node0.useSourceInfoFromForTree(node4);
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      Node.newNumber(3525.7428, 1345, (-600));
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node1.isFor();
      node1.isOptionalArg();
      node2.isLabel();
      node0.isGetProp();
      Node node3 = Node.newNumber((-2892.0), (-74), 3998);
      node3.isContinue();
      node3.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      node0.getInputId();
      Node node1 = new Node(36, node0, node0, node0);
      node0.srcref(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wO");
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(57, nodeArray0);
      node2.cloneTree();
      node0.isWith();
      node1.isEquivalentToShallow(node2);
      Node node3 = null;
      try {
        node3 = new Node(37, node0, node2, 46, 53);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = Node.newString("ORDINARY", 47, 47);
      Node node1 = Node.newString("Z3z>");
      node0.setString("ORDINARY");
      node0.isWith();
      node0.setInputId((InputId) null);
      Node node2 = Node.newString("ORDINARY");
      node0.addChildToFront(node1);
      Node node3 = null;
      try {
        node3 = new Node(15, node0, node2, node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = new Node(49, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getProp(30);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node1.isQualifiedName();
      node2.setSourceEncodedPosition(56);
      Node node3 = Node.newString("ZRh15");
      Node node4 = Node.newNumber((-1467.9));
      node4.isInstanceOf();
      Node.newString(37, "", 956, 30);
      node3.useSourceInfoFromForTree(node2);
      node2.isCall();
      Node.newNumber((double) 8);
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isLabelName();
      node2.checkTreeEquals(node0);
      node1.isQuotedString();
      node1.isQualifiedName();
      node0.detachChildren();
      node1.isLocalResultCall();
      node2.getSideEffectFlags();
      node2.hasOneChild();
      node2.getJSDocInfo();
      node2.isAdd();
      node0.isQuotedString();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      node0.isNoSideEffectsCall();
      Node node1 = node0.clonePropsFrom(node0);
      JSTypeNative jSTypeNative0 = JSTypeNative.TOP_LEVEL_PROTOTYPE;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node1.setJSType(objectType0);
      node1.isIn();
      node0.getLastSibling();
      node0.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(133);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      int int0 = Node.JSDOC_INFO_PROP;
      Node node2 = Node.newNumber(3525.7428, (-912), 119);
      Node node3 = Node.newNumber(1.0, 47, 49);
      node3.checkTreeEquals(node2);
      node3.isIf();
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = new Node(89, 89, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node0.isQualifiedName();
      Node node3 = Node.newNumber(1715.80218878511);
      node3.setSourceEncodedPosition(39);
      node1.isBreak();
      node0.getJSDocInfo();
      node0.isCall();
      node3.isQuotedString();
      node2.getJsDocBuilderForNode();
      Node node4 = Node.newString("", 51, 48);
      Node node5 = new Node(36, node2, node1, node0, node4, 32, 31);
      node0.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      node1.getProp(30);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node1.isQualifiedName();
      node1.setSourceEncodedPosition(56);
      node0.isBreak();
      node1.isCall();
      node1.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      node0.isCatch();
      Node node2 = node1.getLastSibling();
      Node node3 = node2.copyInformationFrom(node0);
      node3.getStaticSourceFile();
      node3.setStaticSourceFile((StaticSourceFile) null);
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.setIsSyntheticBlock(false);
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      Node node3 = new Node(93);
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.isBlock();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node2);
      node1.isInc();
      node2.isLabel();
      node2.isGetProp();
      node0.getJSDocInfo();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("Q");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(52, 4095);
      node0.setDirectives(linkedHashSet0);
      node0.getInputId();
      node0.wasEmptyNode();
      node0.isBlock();
      node0.isOptionalArg();
      node0.isArrayLit();
      node0.isLabel();
      node0.isGetProp();
      node0.isContinue();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node1.isUnscopedQualifiedName();
      node1.isQuotedString();
      node1.isQualifiedName();
      node0.detachChildren();
      node1.isLocalResultCall();
      node2.getSideEffectFlags();
      node2.hasOneChild();
      node0.getSideEffectFlags();
      node2.isDebugger();
      node1.getSourceOffset();
      node1.getLength();
      Node.newString("#|Ce1<D3v^w");
      Node node3 = Node.newString("NOT_NULL");
      node1.isEquivalentTo(node2, false, true, true);
      node3.isNE();
      node3.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = new Node(48, 48, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      node1.isFunction();
      node1.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node1.isCall();
      Node node2 = new Node(93);
      node2.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node1.isBlock();
      node2.hasChildren();
      node0.isLabel();
      node0.isQuotedString();
      Node node3 = Node.newNumber((-2892.0), (-74), 4095);
      node3.isContinue();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isBreak();
      node2.toString(false, false, false);
      node1.getJSDocInfo();
      Node node3 = new Node(785, node0);
      node0.isInc();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node2.isCatch();
      Node node4 = node0.getLastSibling();
      node4.isVarArgs();
      node2.isThrow();
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "originalname");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node1.getJSDocInfo();
      node1.isCall();
      Node node3 = new Node(40);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node2.isBlock();
      node1.isOptionalArg();
      node3.isLabel();
      Node node4 = new Node((-114), node3);
      node4.isInc();
      node3.isLabel();
      node1.isGetProp();
      node0.isSetterDef();
      node3.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = new Node(89, 89, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      node1.isFunction();
      node1.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node0.isCall();
      node0.isQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(49, nodeArray0, 32, (-4528));
      node2.useSourceInfoFromForTree(node0);
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THROW 89 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = Node.newString(".");
      Node node1 = node0.cloneNode();
      Node node2 = Node.newString(8, ".");
      node1.getInputId();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      Node node3 = new Node(4095, node2, node0, node1);
      node3.getAncestor(50);
      node3.isAssign();
      node1.isInstanceOf();
      Node node4 = node2.getLastSibling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      // Undeclared exception!
      try { 
        node4.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(105);
      Node node1 = null;
      try {
        node1 = new Node((-1714), (Node) null, node0, 53, 38);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newString("DEFAULT_CASE", 0, 0);
      node0.setSourceFileForTesting("DEFAULT_CASE");
      InputId inputId0 = new InputId("NUMBER_STRING_BOOLEAN");
      node0.setInputId(inputId0);
      Node node1 = Node.newString("NUMBER_STRING_BOOLEAN");
      node1.addChildToFront(node0);
      node0.useSourceInfoFromForTree(node1);
      node1.isGetElem();
      node1.getString();
      Node node2 = Node.newString("DEFAULT_CASE");
      node0.isExprResult();
      node2.isVar();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(8, 13.0F);
      linkedHashSet0.add("com.google.javascript.rhino.Node$SiblingNodeIterable");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2924);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node node1 = new Node(1985, node0, node0, node0, node0);
      node0.isCatch();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      int int0 = Node.FREE_CALL;
      node0.isParamList();
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = Node.newString("hRVFN", 0, 0);
      node0.setSourceFileForTesting("hRVFN");
      node0.isLocalResultCall();
      node0.detachChildren();
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString("jsdoc_info", 36, 2166);
      // Undeclared exception!
      try { 
        node0.clonePropsFrom(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      InputId inputId0 = new InputId("wO");
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.isStringKey();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.TOP_LEVEL_PROTOTYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      node0.isIn();
      Node node1 = node0.getLastSibling();
      node1.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(749);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesThis();
      int int0 = Node.JSDOC_INFO_PROP;
      Node node2 = Node.newNumber((double) 56, 37, (-2125));
      Node node3 = Node.newNumber(3269.66987893758, 36, 12);
      node3.checkTreeEquals(node2);
      node3.isGetProp();
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("side_effect_flags");
      node0.getSideEffectFlags();
      node0.isUnscopedQualifiedName();
      node0.isQuotedString();
      node0.isQualifiedName();
      node0.detachChildren();
      node0.isLocalResultCall();
      node0.getSideEffectFlags();
      node0.hasOneChild();
      node0.getSideEffectFlags();
      node0.isDebugger();
      node0.getSourceOffset();
      node0.getLength();
      Node node1 = Node.newString("side_effect_flags");
      Node.newString("NOT_NULL");
      node0.isEquivalentTo(node1, false, false, false);
      node1.isNE();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newString("ORDINARY", 47, 47);
      Node node1 = Node.newString("Z3z>");
      node0.setString("ORDINARY");
      node0.isWith();
      node1.toString(false, false, false);
      Node node2 = node0.srcref(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+{<G.k!Pf8@nnF9j");
      Node node3 = node2.cloneTree();
      node0.isWith();
      node2.isEquivalentToShallow(node1);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node0.isDec();
      node3.wasEmptyNode();
      node0.isDec();
      node2.getInputId();
      node2.isScript();
      node1.mayMutateGlobalStateOrThrow();
      Node node4 = Node.newString("J,\"", 50, 17);
      Node node5 = new Node((-511), node1, node4, node0, node3, 42, 57);
      node1.copyInformationFromForTree(node5);
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = new Node(29, 29, 29);
      node0.getSideEffectFlags();
      Node node1 = new Node(29, node0, node0);
      node1.removeProp(88);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.getJsDocBuilderForNode();
      node0.getBooleanProp(91);
      node1.getProp(4095);
      node0.addSuppression("");
      node2.addChildToFront(node1);
      node1.setCharno(32);
      node0.siblings();
      node2.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = Node.newString("hRVFN", 0, 0);
      node0.setSourceFileForTesting("hRVFN");
      node0.isLocalResultCall();
      node0.detachChildren();
      node0.setString("jsdoc_info");
      node0.mayMutateGlobalStateOrThrow();
      node0.setString("jsdoc_info");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Node node1 = new Node(2);
      node1.getAncestors();
      String string0 = null;
      // Undeclared exception!
      try { 
        Node.newString(50, (String) null, 48, 4095);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isBreak();
      node1.getInputId();
      node2.isWhile();
      node0.isBlock();
      // Undeclared exception!
      try { 
        node1.toString(false, true, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 50
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = Node.newString((-802), "is_constant_name");
      Node node1 = node0.cloneTree();
      InputId inputId0 = new InputId("WITH");
      inputId0.toString();
      node1.setInputId(inputId0);
      node1.setInputId(inputId0);
      Node.newString("");
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(56, nodeArray0);
      node1.addChildToFront(node2);
      Node node3 = Node.newString("is_constant_name", 46, 2);
      node3.isOnlyModifiesThisCall();
      node2.getJSDocInfo();
      node3.isCall();
      node2.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("WITH");
      node_FileLevelJsDocBuilder0.append("bQ!2{!`dlO(k&+$n'");
      Node node4 = null;
      try {
        node4 = new Node(2441, node2, 49, 3019);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node2.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2087);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node1.isCatch();
      node0.isEquivalentTo(node1, false, false, false);
      Node node3 = Node.newString(40, ">}dv.jC|.JmTK9w#g");
      node3.isFromExterns();
      Node node4 = node2.cloneNode();
      node3.getJSDocInfo();
      // Undeclared exception!
      try { 
        node4.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = Node.newString("4?(E", (-463), 0);
      node0.isDelProp();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.setSourceEncodedPositionForTree(812);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.getJSDocInfo();
      node0.isCall();
      Node node1 = new Node(41);
      node0.isDebugger();
      Node node2 = new Node(410, 36, 52);
      node2.isOptionalArg();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node0.isBlock();
      node2.isOptionalArg();
      node2.isLabel();
      node0.isGetProp();
      Node node3 = Node.newNumber((-236.4572645654), 2451, (-1687));
      node3.isContinue();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.TOP_LEVEL_PROTOTYPE;
      jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      Node node0 = Node.newString("");
      node0.hasOneChild();
      node0.hasOneChild();
      node0.removeFirstChild();
      node0.isQualifiedName();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node2.isHook();
      node1.isOnlyModifiesThisCall();
      node2.isUnscopedQualifiedName();
      node0.getInputId();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.isCatch();
      node0.getProp(42);
      node0.isQualifiedName();
      node0.isCall();
      node2.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "", 47, 42);
      node1.setSourceEncodedPositionForTree(1537);
      node1.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node0.isCatch();
      node0.isEquivalentTo(node1, false, false, true);
      node1.isFromExterns();
      node0.cloneNode();
      node0.getJSDocInfo();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      Node node2 = null;
      try {
        node2 = new Node(31, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = new Node(35);
      node0.cloneNode();
      node0.cloneNode();
      node0.getSourceFileName();
      JSType jSType0 = null;
      Node.newNumber(1.0, 53, 48);
      // Undeclared exception!
      try { 
        Node.newString(42, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(3, 42);
      node0.isDebugger();
      Node node1 = new Node(1846);
      node1.setDirectives(linkedHashSet0);
      node1.getInputId();
      node1.wasEmptyNode();
      node1.isBlock();
      node1.isOptionalArg();
      Node node2 = new Node(47, node0, node0, 31, (-325));
      node2.isNull();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-709), (-709));
      node0.putBooleanProp((-709), false);
      node0.isOnlyModifiesArgumentsCall();
      node0.getAncestors();
      Node node1 = new Node(42, 48, 1077);
      node1.isQualifiedName();
      node0.setSourceEncodedPosition(0);
      node1.isBreak();
      node1.getJSDocInfo();
      node0.isCall();
      node0.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("jeZLwJNKtu#[v");
      node_FileLevelJsDocBuilder0.append((String) null);
      node1.isCatch();
      node0.getLastSibling();
      node1.isVarArgs();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getProp(30);
      Node.newString(8, "Rosoc.c%TAdJ+C3jr", 23, 44);
      Node node3 = node0.srcref(node2);
      node3.wasEmptyNode();
      try { 
        node0.setDouble(47);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ASSIGN 3 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = Node.newString("VKB8`Ky3;/AnzLzdbpF");
      node0.getChildAtIndex((-19));
      MockFileWriter mockFileWriter0 = new MockFileWriter("free_call", false);
      Node node1 = Node.newNumber((double) 15, 3021, (-19));
      Node node2 = Node.newString(52, "VKB8`Ky3;/AnzLzdbpF");
      Node node3 = new Node(36, node0, node1, node2, 31, 39);
      Node node4 = node3.srcref(node1);
      Node.extractLineno(1);
      node4.getBooleanProp(56);
      // Undeclared exception!
      try { 
        node4.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      Node node3 = new Node(93);
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.isBlock();
      node1.isOptionalArg();
      node2.isLabel();
      node0.isGetProp();
      Node node4 = Node.newNumber((-2892.0), (-74), 3998);
      node4.isContinue();
      node2.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = Node.newString("wO");
      node0.addChildToFront(node1);
      node1.useSourceInfoFromForTree(node0);
      node1.isOnlyModifiesThisCall();
      node1.mayMutateGlobalStateOrThrow();
      node0.isFalse();
      node1.children();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newString((-3403), "");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNot();
      Node node1 = new Node((-2341), node0, node0, node0, node0, 2031, 105);
      Node node2 = node0.srcref(node1);
      Node.extractLineno((-818));
      node2.getBooleanProp(40);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getProp(49);
      node0.addSuppression("oo%#PjbB3mvsh>");
      // Undeclared exception!
      try { 
        node2.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = new Node(3, (-2981), 3);
      Node node1 = Node.newNumber((-67.03459));
      node1.getAncestors();
      node0.isBreak();
      node1.getBooleanProp(29);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getProp(2147483645);
      node1.addSuppression("");
      Node node2 = Node.newString("", 132, 51);
      Node node3 = new Node(3182, node0, node0, node0, node2);
      node3.addChildToFront(node1);
      node1.setCharno(37);
      node2.siblings();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node3.isEquivalentToShallow(node2);
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = new Node(3544, 3544, 32);
      String string0 = null;
      node0.addSuppression((String) null);
      Node node1 = new Node(55, node0, node0);
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-709), (-709));
      node0.putBooleanProp((-709), false);
      Node node1 = Node.newString((-1305), "", 27, 541);
      node0.srcref(node1);
      node0.wasEmptyNode();
      node0.setDouble(0.0);
      node0.isAdd();
      node0.isAssignAdd();
      node0.isNumber();
      node0.isLabel();
      node1.getAncestors();
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getProp(30);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node1.isQualifiedName();
      node2.setSourceEncodedPosition(56);
      node0.isBreak();
      node1.getJSDocInfo();
      node2.isCall();
      node1.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      node0.isCatch();
      node1.getLastSibling();
      node2.isVarArgs();
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString("", 3, 86);
      node0.setSourceEncodedPositionForTree(86);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node node1 = new Node(16, node0, node0, node0, node0);
      node1.isCatch();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      int int0 = Node.FREE_CALL;
      node0.isParamList();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = new Node(512, 124, 122);
      Node node1 = Node.newString(118, "");
      node0.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node0.getProp((-3564));
      Node node3 = new Node(1, node0, node0, node0);
      node3.isOnlyModifiesArgumentsCall();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node2.isQualifiedName();
      node2.setSourceEncodedPosition(120);
      node3.isBreak();
      node2.getJSDocInfo();
      node1.isCall();
      node1.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      node3.isCatch();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(8, 13.0F);
      linkedHashSet0.add("com.google.javascript.rhino.Node$SiblingNodeIterable");
      node0.setDirectives(linkedHashSet0);
      node0.getInputId();
      node0.wasEmptyNode();
      node0.isBlock();
      node0.toString(true, true, false);
      node0.isOptionalArg();
      node0.isLabel();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      node0.clonePropsFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isBreak();
      node1.getJSDocInfo();
      Node node2 = new Node(4, node0, node0, 126, 124);
      node0.isNull();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = Node.newString(130, "", 1, (-2946));
      // Undeclared exception!
      try { 
        node0.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newString(1085, "");
      node0.getInputId();
      node0.getChangeTime();
      Node.newNumber((double) 1);
      node0.getString();
      node0.setWasEmptyNode(false);
      node0.getAncestors();
      node0.getInputId();
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(53, 2616, 56);
      Node node2 = Node.newString("+GBt9Ic2$U", (-1371), 4);
      node2.setQuotedString();
      node1.isAssignAdd();
      node2.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1074));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags3.valueOf();
      node0.getLastChild();
      node1.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = new Node(2632);
      node0.isNumber();
      Node node1 = Node.newString(43, "T)$x5@WEPhLRsdOb");
      node1.setString("com.google.javascript.rhino.jstype.FunctionType");
      node1.toString();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(55);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got FALSE
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = new Node(2632);
      node0.isNumber();
      Node node1 = Node.newString(37, "T)$x5@WEPhLRsdOb");
      node1.setString("com.google.avscript.rhino.jstype.FunctionType");
      node1.setSideEffectFlags(55);
      node0.getSourcePosition();
      Node node2 = new Node(50, node0, 36, (-3033));
      node2.isGetProp();
      Node node3 = null;
      try {
        node3 = new Node(26, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.isOptionalArg();
      node0.isNot();
      Node node1 = new Node(56, node0, node0, node0, node0, 2, 52);
      node0.srcref(node1);
      Node.extractLineno(50);
      node0.isReturn();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isVoid();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node0.isBreak();
      node2.isCall();
      Node node3 = new Node(93);
      node3.isDebugger();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "}0(qYR$";
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Not declared as a constructor");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setThrows();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node node0 = new Node(102);
      Node node1 = new Node(102, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      InputId inputId0 = new InputId("wO");
      node0.setInputId(inputId0);
      Node node1 = Node.newString("wO");
      Node node2 = Node.newString("[Ogh,R#U", 2824, (-1630));
      node0.isScript();
      node1.addSuppression("[Ogh,R#U");
      Node node3 = Node.newString(15, "COiH");
      Node.AncestorIterable node_AncestorIterable0 = node2.getAncestors();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      node_AncestorIterable0.iterator();
      Node node4 = new Node(607);
      Node node5 = new Node(607, node3);
      node1.isSwitch();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.getJsDocBuilderForNode();
      node5.isIf();
      node0.isComma();
      node4.isCall();
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = Node.newString("4?(E", (-463), 0);
      node0.isDelProp();
      node0.setSourceEncodedPositionForTree(812);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      MockPrintStream mockPrintStream0 = new MockPrintStream("4?(E");
      node0.appendStringTree(mockPrintStream0);
      Node node1 = node0.getAncestor(0);
      node1.isLabel();
      node0.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = Node.newString("ye0?<", (-325), (-325));
      Node node1 = new Node(2, node0, node0);
      Node node2 = node0.srcref(node1);
      Node.extractLineno(2);
      node1.isReturn();
      node2.getAncestors();
      node2.isBreak();
      node2.getJSDocInfo();
      node0.isCall();
      Node node3 = new Node(2807);
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node2.isBlock();
      node3.isOptionalArg();
      node2.isLabel();
      node0.isGetProp();
      Node.newNumber(629.0556, 37, 47);
      node2.isContinue();
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.setVarArgs(true);
      node0.isTry();
      node0.isFor();
      Node node1 = new Node((-1714), node0, node0, node0, node0, 124, 2924);
      node1.getLength();
      node0.addChildToFront(node1);
      node1.getStaticSourceFile();
      node1.isHook();
      node0.isOnlyModifiesThisCall();
      node0.isUnscopedQualifiedName();
      node0.getInputId();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.isCatch();
      node1.getProp(31);
      node0.isQualifiedName();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-99);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleErrorReporter0.warning("", "com.google.common.collect.Maps$KeySet", 36, 781);
      jSTypeRegistry0.hasNamespace("");
      node0.getChildCount();
      node0.getType();
      node0.getStaticSourceFile();
      Node.newString("Object", 2, 4);
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = Node.newString("u0R", 512, 512);
      node0.getIntProp(65536);
      Node node1 = new Node(31, node0, node0);
      node0.detachChildren();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.addChildToFront(node1);
      node0.mayMutateArguments();
      node1.children();
      node1.isWith();
      node1.isExprResult();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = Node.newString("4?(E", (-463), 0);
      node0.isDelProp();
      node0.isNoSideEffectsCall();
      node0.addSuppression("4?(E");
      Node node1 = Node.newString((-4129), "\n\nTree2:\n");
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node_AncestorIterable0.iterator();
      Node node2 = new Node((-2197));
      Node node3 = new Node(54, node1);
      Node node4 = new Node(152, node3);
      node3.isWhile();
      node0.isArrayLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node5 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node5.isLabel();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isBreak();
      node1.getInputId();
      node2.isWhile();
      node0.isBlock();
      node2.isArrayLit();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ASSIGN 3 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      InputId inputId0 = new InputId("wO");
      node0.setInputId(inputId0);
      Node node1 = Node.newString("wO");
      node0.addChildToFront(node1);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isGetElem();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node3 = new Node(32, node0);
      Node node4 = null;
      try {
        node4 = new Node((-50), node0, node3, node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = Node.newString("4?(E", (-463), 0);
      node0.isDelProp();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.setSourceEncodedPositionForTree(812);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      MockPrintStream mockPrintStream0 = new MockPrintStream("4?(E");
      node0.appendStringTree(mockPrintStream0);
      node0.isCatch();
      Node node1 = Node.newString("4?(E", 32, 47);
      node1.isEquivalentTo(node0, false, true, false);
      node1.isFromExterns();
      node0.cloneNode();
      node0.getJSDocInfo();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = Node.newNumber((double) 29);
      node0.getSideEffectFlags();
      Node node1 = new Node(29, node0, node0);
      node1.removeProp(82);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.getJsDocBuilderForNode();
      node0.getBooleanProp(91);
      node1.getProp(4095);
      node0.addSuppression("");
      node2.addChildToFront(node1);
      node1.setCharno(32);
      node0.siblings();
      node2.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = Node.newString("hRVFN", 0, 0);
      node0.wasEmptyNode();
      node0.setSourceFileForTesting("hRVFN");
      node0.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(false);
      node0.isLocalResultCall();
      JSTypeNative jSTypeNative0 = JSTypeNative.TOP_LEVEL_PROTOTYPE;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      Node node1 = new Node(0, node0, node0, node0, (-536870912), (-299));
      node1.setJSType(objectType0);
      Node node2 = node1.getLastSibling();
      node0.mayMutateArguments();
      node2.setLineno(48);
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = new Node(33);
      Node node1 = Node.newString(56, "~l");
      node0.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node0.getAncestors();
      node2.isBreak();
      node2.getJSDocInfo();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node2;
      Node node3 = null;
      try {
        node3 = new Node(0, nodeArray0, 51, (-975));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node.newString(0, "[Ogh,R#U");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node(2, (Node) null, 30, 43);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node0.isBreak();
      node2.isCall();
      Node node3 = new Node(93);
      node2.isOnlyModifiesThisCall();
      Node.newString("slash_v", 4095, (-884));
      node0.mayMutateGlobalStateOrThrow();
      node1.isFalse();
      node1.isAnd();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      String string0 = "4?(E";
      Node node0 = Node.newString("4?(E", (-463), 0);
      node0.isDelProp();
      node0.isNoSideEffectsCall();
      node0.addSuppression("4?(E");
      Node node1 = Node.newString((-4129), "\n\nTree2:\n");
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node2 = Node.newString("4?(E");
      node2.addChildToFront(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node4 = node1.useSourceInfoFromForTree(node3);
      node4.isGetElem();
      try { 
        node3.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = Node.newString("hRVFN", 0, 0);
      node0.wasEmptyNode();
      node0.setSourceFileForTesting("hRVFN");
      node0.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(false);
      node0.isLocalResultCall();
      node0.setLineno(739);
      // Undeclared exception!
      try { 
        node0.addChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isBreak();
      node1.getJSDocInfo();
      Node node3 = new Node(785, node0);
      node3.isEquivalentTo(node1, false, false, false);
      node0.isInc();
      node2.isArrayLit();
      node3.isLabel();
      node2.isGetProp();
      Node node4 = new Node(43, 2, 42);
      node4.isLabel();
      node2.isGetProp();
      node2.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isSyntheticBlock();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      node0.isQualifiedName();
      Node node3 = Node.newNumber(1715.80218878511);
      node3.setSourceEncodedPosition(39);
      node1.isBreak();
      node0.getJSDocInfo();
      node0.isCall();
      node3.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node_FileLevelJsDocBuilder0.append("<NOPjmDsz");
      node0.isCatch();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = Node.newString(124, "");
      node0.toStringTree();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.type = 124;
      Node node1 = new Node(4517, node0, node0, node0, 15, (-129));
      int int0 = 24;
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = Node.newString("7hx7D+Boii)9'}a", 1905, 1905);
      node0.setType((-683));
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(53, 2616, 56);
      node1.isScript();
      Node node2 = new Node(2616, node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node_AncestorIterable0.iterator();
      Node.newString(52, "\n\nTree2:\n", 39, 51);
      Node node3 = new Node(47, node2);
      Node node4 = null;
      try {
        node4 = new Node(57, node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = new Node(76, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isBreak();
      node1.getJSDocInfo();
      node0.isFunction();
      node1.isQuotedString();
      node2.getJsDocBuilderForNode();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      node0.clonePropsFrom(node1);
      node1.getAncestors();
      node1.getBooleanProp(32);
      node1.setLineno((-1714));
      node1.addChildAfter(node0, (Node) null);
      Node.extractCharno(152);
      Node.newString(29, "6pH0JX1'h2J");
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      Node node3 = new Node(93);
      Node.newString(102, "<NOPjmDsz", 47, 16);
      node3.isDebugger();
      // Undeclared exception!
      try { 
        node1.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 831
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      node0.getInputId();
      Node node1 = Node.newString("");
      Node.newString("", 39, 16777216);
      node0.getBooleanProp(0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.wasEmptyNode();
      Node node3 = new Node(0, node1, node1, node1);
      node3.clonePropsFrom(node1);
      // Undeclared exception!
      try { 
        node3.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "originalname");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node0.isBreak();
      node1.getJSDocInfo();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node((-178), nodeArray0, 46, 607);
      node0.addChildrenToFront(node1);
      node3.getJSDocInfo();
      node1.isCall();
      node2.isQuotedString();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 50
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node0.isBreak();
      node2.isCall();
      Node node3 = new Node(93);
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node4 = new Node(2, node3, node3);
      node0.isEquivalentTo(node2, false, false, false);
      node2.mayMutateGlobalStateOrThrow();
      node3.isFromExterns();
      // Undeclared exception!
      try { 
        node4.getAncestor((-671));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      InputId inputId0 = new InputId("wO");
      Node node1 = Node.newString("    ");
      node0.addChildToFront(node1);
      node1.useSourceInfoFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[0] = (JSType) templateType0;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, false, jSTypeArray0);
      // Undeclared exception!
      try { 
        modificationVisitor0.caseFunctionType(functionType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      InputId inputId0 = new InputId("wFO");
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.setInputId(inputId0);
      Node node1 = Node.newString("");
      node1.addChildToFront(node0);
      Node node2 = Node.newString("wFO", 55, 49);
      node1.isOnlyModifiesThisCall();
      Node node3 = Node.newString("missing prop: ", 4, 55);
      node3.mayMutateGlobalStateOrThrow();
      node2.isFalse();
      node1.isAnd();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("Q");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(52, 4095);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Q", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = Node.newString(15, "Q", 758, 1478);
      node0.isEquivalentToShallow(node1);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LE Q 758 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NE");
      Node node0 = new Node(40, (-5778), (-1572));
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = Node.newString("4?(E", (-463), 0);
      node0.isDelProp();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.setSourceEncodedPositionForTree(812);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      MockPrintStream mockPrintStream0 = new MockPrintStream("4?(E");
      node0.appendStringTree(mockPrintStream0);
      node0.isCatch();
      Node node1 = Node.newString("4?(E", 32, 47);
      node1.isEquivalentTo(node0, false, true, false);
      node1.isFromExterns();
      node0.cloneNode();
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      InputId inputId0 = new InputId("wO");
      node0.setInputId(inputId0);
      Node node1 = Node.newString("wO");
      node0.addChildToFront(node1);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.isOnlyModifiesThisCall();
      node1.mayMutateGlobalStateOrThrow();
      node0.isFalse();
      node2.isEmpty();
      Node node3 = new Node(131072, 2, 1);
      node3.isAnd();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node.extractCharno(0);
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isBreak();
      node1.getJSDocInfo();
      Node node3 = new Node(785, node0);
      node0.isInc();
      node2.isArrayLit();
      node3.isLabel();
      node2.isGetProp();
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = new Node(2632);
      node0.isLabelName();
      Node node1 = Node.newString(43, "T)$x5@WEPhLRsdOb");
      node1.setString("com.google.javascript.rhino.jstype.FunctionType");
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(55);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got FALSE
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node((-4255));
      node0.isHook();
      Node.newString(2, "\"z");
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(110);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -4255
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = new Node(2, node0, node0, 55, 52);
      Node node2 = node1.cloneNode();
      node0.getSourceFileName();
      Node node3 = Node.newNumber(0.0, 2, 51);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      Node node4 = new Node(31, node2, node1, node1, 96, 5760);
      node4.isStringKey();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType(" is not a string node", node4, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = Node.newString("hRVFN", 0, 0);
      node0.setSourceFileForTesting("hRVFN");
      node0.isLocalResultCall();
      node0.detachChildren();
      node0.setString("jsdoc_info");
      node0.mayMutateGlobalStateOrThrow();
      node0.setString("jsdoc_info");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = new Node(2);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.iterator();
      Node node2 = new Node(1229);
      Node node3 = new Node(132, node0);
      node2.isSwitch();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node3.getJsDocBuilderForNode();
      Node node4 = new Node(39, node2, (-299), (-2390));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jsdoc_info");
      node1.isComma();
      node3.hasChildren();
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(255, nodeArray0, 1077, 0);
      Node node1 = new Node((-1294), node0, node0, 31, 2);
      Node node2 = new Node(502, node1, (-1294), 1);
      node1.siblings();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = Node.newString(".");
      Node node1 = node0.cloneNode();
      Node node2 = Node.newString(8, ".");
      node1.getInputId();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      Node node3 = Node.newString(".", 4095, (-167));
      node3.getAncestor(50);
      node3.isAssign();
      node1.isInstanceOf();
      Node node4 = node2.getLastSibling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      // Undeclared exception!
      try { 
        node4.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 8
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = new Node(31, 31, 89);
      Node node1 = Node.newString(831, "<NOPjmDsz");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isFunction();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      Node node3 = new Node(93);
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Node node4 = new Node((-2588), node0, node1);
      node4.isEquivalentTo(node3, false, false, true);
      node4.isOptionalArg();
      node0.isFromExterns();
      node4.isCatch();
      node4.getSourceOffset();
      node4.isGetProp();
      node2.srcrefTree(node4);
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node0.getSourceFileName();
      JSType jSType0 = null;
      Node node3 = Node.newNumber(0.0, 2, 51);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      Node node4 = new Node(31, node2, node1, node1, 96, 5760);
      // Undeclared exception!
      try { 
        node4.setSideEffectFlags(31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got DELPROP
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString((-728), "VYc,m,Avo", 49, (-728));
      nodeArray0[0] = node0;
      node0.setQuotedString();
      Node node1 = new Node(303, nodeArray0, 56, 49);
      node0.isUnscopedQualifiedName();
      node0.isGetElem();
      node0.getString();
      node0.isExprResult();
      node1.isVar();
      Node node2 = new Node(1, (-423), 47);
      node2.hasOneChild();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = Node.newString("4?(E", (-463), (-463));
      node0.isDelProp();
      node0.setSourceEncodedPositionForTree(812);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(188);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(15);
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      int int0 = Node.JSDOC_INFO_PROP;
      Node node1 = Node.newNumber(1.0, 57, (-15));
      Node node2 = Node.newNumber((double) 47, (-1845), (-15));
      node1.checkTreeEquals(node2);
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newString("4?(E", (-463), 0);
      node0.isDelProp();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(1, 57, 2601);
      Node node2 = node0.clonePropsFrom(node1);
      node2.getAncestors();
      node1.isBreak();
      node2.getJSDocInfo();
      Node node3 = Node.newNumber((double) 1);
      node3.isCall();
      node0.isQuotedString();
      node3.getDouble();
      Node node4 = new Node((-725), node3, node2, (-1845), 8);
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = Node.newNumber(3269.66987893758, (-526), (-526));
      Node node1 = node0.cloneNode();
      Node node2 = new Node(2, 31, 15);
      node2.getSourceFileName();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node2.getJSDocInfo();
      node2.setJSType((JSType) null);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = new Node(120);
      String string0 = "";
      Node.newString(417, "");
      Node node1 = node0.cloneTree();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = new Node(2632);
      node0.isNumber();
      Node node1 = Node.newString(43, "T)$x5@WEPhLRsdOb");
      node1.setString("com.google.javascript.rhino.jstype.FunctionType");
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(55);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got FALSE
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node node0 = new Node(31, 31, 86);
      Node node1 = Node.newString(821, "<NOPjmDsz");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node0.isOnlyModifiesArgumentsCall();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      Node node3 = new Node(93);
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Node node4 = new Node((-2588), node0, node1);
      node4.isEquivalentTo(node3, false, false, true);
      node1.getJSDocInfo();
      node1.mayMutateGlobalStateOrThrow();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      // Undeclared exception!
      try { 
        node4.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2588
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = new Node(3, (-2981), 3);
      Node node1 = Node.newString(1, "E?97S3rB.x");
      node1.isNoSideEffectsCall();
      Node node2 = Node.newNumber((-67.03459));
      node2.getAncestors();
      node0.isBreak();
      node1.getJSDocInfo();
      Node.newString(" [", (-775), (-278));
      node2.isQuotedString();
      node2.getDouble();
      Node node3 = new Node((-2050), node0, node1, 1024, 15);
      node2.isLabelName();
      Node.extractLineno((-2607));
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NE");
      Node node0 = new Node(33, (-5778), (-1572));
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // GETPROP is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      InputId inputId0 = new InputId("wO");
      node0.setInputId(inputId0);
      Node node1 = Node.newString("wO");
      node0.addChildToFront(node1);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isGetElem();
      node0.getString();
      Node node3 = Node.newString("[Ogh,R#U");
      node3.isExprResult();
      node1.isVar();
      node1.hasOneChild();
      node2.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString((-728), "", 49, (-728));
      nodeArray0[0] = node0;
      node0.setQuotedString();
      Node node1 = new Node(303, nodeArray0, 56, 49);
      node1.isUnscopedQualifiedName();
      node1.isGetElem();
      node0.getString();
      node0.isExprResult();
      node0.isVar();
      node0.hasOneChild();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = Node.newString((-299), "", (-299), 37);
      Node node1 = new Node(37, node0, node0, (-298), 4095);
      node1.getSideEffectFlags();
      node1.getIntProp(292);
      Node node2 = new Node(37, node1);
      node2.getParent();
      node1.isStringKey();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.TOP_LEVEL_PROTOTYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      node0.isIn();
      node1.getLastSibling();
      node2.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1024);
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      int int0 = Node.JSDOC_INFO_PROP;
      Node.newNumber((double) 47, 0, 0);
      Node node3 = Node.newNumber(0.0, 48, 379);
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -299
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = new Node(12288);
      node0.isHook();
      // Undeclared exception!
      try { 
        node0.setString("com.google.javascript.rhino.jstype.FunctionType");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 12288
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1270));
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      MockPrintStream mockPrintStream0 = new MockPrintStream("RANGE_ERROR_FUNCTION_TYPE");
      Node node0 = Node.newNumber((double) (-1270), 32, 16777216);
      node0.setSourceFileForTesting("RANGE_ERROR_FUNCTION_TYPE");
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      node0.getInputId();
      Node node1 = Node.newString("");
      Node.newString("", 39, 16777216);
      node0.getBooleanProp(0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.wasEmptyNode();
      node2.setQuotedString();
      node0.isAssignAdd();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.valueOf();
      node2.hasMoreThanOneChild();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("Q");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(52, 4095);
      linkedHashSet0.add("=TZ--(Uf$ny'fVr0b");
      node0.setDirectives(linkedHashSet0);
      node0.getInputId();
      node0.wasEmptyNode();
      node0.isBlock();
      node0.isOptionalArg();
      node0.isLabel();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = new Node(3, (-2981), 3);
      Node node1 = Node.newString(1, "E?97S3rB.x");
      node1.isNoSideEffectsCall();
      Node node2 = Node.newNumber((-67.03459));
      node2.getAncestors();
      node0.isBreak();
      node1.getJSDocInfo();
      Node.newString(" [", (-775), (-278));
      node2.isQuotedString();
      node2.getDouble();
      Node node3 = new Node((-2050), node0, node1, 1024, 15);
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = new Node(31, 31, 86);
      Node node1 = Node.newString(821, "<NOPjmDsz");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node0.isOnlyModifiesArgumentsCall();
      node2.getAncestors();
      node0.isBreak();
      node0.getJSDocInfo();
      node2.isCall();
      Node node3 = new Node(93);
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Node node4 = new Node((-2588), node0, node1);
      node4.isEquivalentTo(node3, false, false, true);
      node1.mayMutateGlobalStateOrThrow();
      node0.isFromExterns();
      node4.isCatch();
      node4.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>(1);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.isOptionalArg();
      node0.isNot();
      Node node1 = new Node(8, node0, node0, node0);
      node0.srcref(node1);
      Node.extractLineno(50);
      node0.isReturn();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      String string0 = "[Ogh,R#U";
      Node node0 = Node.newString(0, "[Ogh,R#U");
      InputId inputId0 = new InputId("wO");
      node0.setInputId(inputId0);
      node0.getBooleanProp((-3963));
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = Node.newString("4?(E", (-463), 0);
      node0.isDelProp();
      node0.setSourceEncodedPositionForTree(812);
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      MockPrintStream mockPrintStream0 = new MockPrintStream("4?(E");
      node0.appendStringTree(mockPrintStream0);
      node0.isCatch();
      Node node1 = new Node(17, node0, node0, node0, node0);
      node1.getSourceOffset();
      node0.detachFromParent();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setString("Number node not created with Node.newNumber");
      node0.getBooleanProp((-191));
      node0.setLineno((-191));
      // Undeclared exception!
      try { 
        node0.addChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("U");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(52, 4095);
      linkedHashSet0.add("=TZ--(U$ny'fVr0b");
      node0.setDirectives(linkedHashSet0);
      node0.getInputId();
      node0.wasEmptyNode();
      node0.isBlock();
      node0.setVarArgs(false);
      node0.isOptionalArg();
      node0.isArrayLit();
      node0.isLabel();
      node0.isGetProp();
      node0.isContinue();
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.JSDocInfo", (-2404), 2418);
      Node node1 = new Node(38, node0, node0, node0);
      node0.clonePropsFrom(node1);
      node0.setString("com.google.javascript.rhino.JSDocInfo");
      node0.isDo();
      node0.getFirstChild();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = new Node(12288);
      node0.isHook();
      Node node1 = Node.newString(43, "T)$x5@WEPhLRsdOb");
      node1.setString("com.google.javascript.rhino.jstype.FunctionType");
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(55);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got FALSE
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = new Node(3, 3, 124);
      Node node1 = Node.newString(31, "");
      node0.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node2.isBreak();
      node2.getJSDocInfo();
      node0.isCall();
      node1.isQuotedString();
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = Node.newString(".");
      Node node1 = node0.cloneNode();
      Node node2 = Node.newString(8, ".");
      node1.getInputId();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      Node node3 = Node.newString(".", 4095, (-167));
      node3.getAncestor(50);
      node2.isEquivalentTo(node0, false, false, false);
      node3.isAssign();
      node2.getLastSibling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      Node node4 = new Node(111, node0, 53, 39);
      Node node5 = new Node(57);
      node5.getSourceFileName();
      node5.isGetProp();
      Node node6 = null;
      try {
        node6 = new Node(55, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(53, 2616, 56);
      Node node2 = Node.newString("", 15, (-703));
      node1.isScript();
      node2.addSuppression("");
      Node node3 = Node.newString(8, "\n\nTree2:\n");
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node_AncestorIterable0.iterator();
      Node node4 = new Node(41);
      Node node5 = new Node(47, node3);
      Node node6 = new Node(55, node5);
      node1.isInc();
      Node.newString("", 36, 8);
      Node node7 = null;
      try {
        node7 = new Node(36, node5, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      int int0 = (-1270);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1270));
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      MockPrintStream mockPrintStream0 = new MockPrintStream("RANGE_ERROR_FUNCTION_TYPE");
      Node node0 = Node.newString("RANGE_ERROR_FUNCTION_TYPE");
      Node node1 = new Node(32, node0);
      node1.isInc();
      int int1 = 120;
      Node node2 = null;
      try {
        node2 = new Node(1368, node0, node1, (-7), (-325));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      InputId inputId0 = new InputId("wO");
      node0.setInputId(inputId0);
      Node node1 = Node.newString("wO");
      node0.addChildToFront(node1);
      node1.useSourceInfoFromForTree(node0);
      node1.isOnlyModifiesThisCall();
      node1.mayMutateGlobalStateOrThrow();
      node0.isFalse();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isBreak();
      node2.isCall();
      Node node3 = new Node((-39));
      node3.isDebugger();
      node3.setSourceEncodedPosition((-39));
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      Node node4 = new Node(43, node0, node1);
      node4.isEquivalentTo(node0, true, false, false);
      node3.mayMutateGlobalStateOrThrow();
      node2.isFromExterns();
      node0.isNoSideEffectsCall();
      node1.isCatch();
      node3.getDirectives();
      node4.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString((-728), "VYc,m,Avo", 49, (-728));
      nodeArray0[0] = node0;
      node0.setQuotedString();
      Node node1 = new Node(303, nodeArray0, 56, 49);
      node1.isUnscopedQualifiedName();
      node1.isGetElem();
      node0.getString();
      node0.isExprResult();
      node0.isVar();
      node0.hasOneChild();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node.newString((-3403), "");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseStringType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString("[Ogh,R#U", 0, 0);
      node0.setString("Vm`8ONB#s@0{%kFWX#");
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = Node.newString("VKB8`Ky3;/AnzLzdbpF");
      node0.getChildAtIndex(0);
      String string0 = "free_call";
      Node node1 = Node.newString(41, "free_call");
      node1.isNoSideEffectsCall();
      // Undeclared exception!
      try { 
        node1.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = Node.newNumber((-2684.93661), 26, (-4528));
      String string0 = "com.google.common.base.CharMatcher$5";
      Locale locale0 = new Locale("com.google.common.base.CharMatcher$5", "com.google.common.base.CharMatcher$5", "com.google.common.base.CharMatcher$5");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      node0.setDirectives(set0);
      node0.getInputId();
      node0.wasEmptyNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = Node.newString((-1313), "is_constant_name", 130, 2789);
      node0.removeChildren();
      Node node1 = new Node(130, node0, node0);
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      InputId inputId0 = new InputId("wO");
      node0.setInputId(inputId0);
      Node node1 = Node.newString("wO");
      node0.addChildToFront(node1);
      node1.isOnlyModifiesThisCall();
      node1.mayMutateGlobalStateOrThrow();
      node0.isFalse();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = Node.newNumber((-2684.93661), 26, (-4528));
      try { 
        node0.setString("Vm`8ONB#s@0{%kFWX#");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -2684.93661 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = new Node(934);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isQuotedString();
      Node node1 = new Node((-114), node0, node0, node0, node0, 57, 4095);
      node1.isFromExterns();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -114
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node node0 = Node.newString("hRVFN", 0, 0);
      node0.wasEmptyNode();
      node0.setSourceFileForTesting("hRVFN");
      node0.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(false);
      node0.isLocalResultCall();
      node0.isFor();
      try { 
        node0.setDouble(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING hRVFN 0 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isBreak();
      node1.getJSDocInfo();
      node2.isCall();
      Node node3 = new Node((-39));
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      Node node4 = new Node(43, node0, node1);
      node4.isEquivalentTo(node0, true, false, false);
      node3.mayMutateGlobalStateOrThrow();
      node2.isFromExterns();
      node0.isNoSideEffectsCall();
      node1.isCatch();
      node3.getDirectives();
      node4.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      node0.getInputId();
      Node node1 = Node.newString("");
      Node.newString("", 39, 16777216);
      node0.getBooleanProp(0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.wasEmptyNode();
      node2.setQuotedString();
      node0.isAssignAdd();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node[] nodeArray0 = new Node[2];
      Node node3 = new Node((-2681), 1905, 88);
      nodeArray0[0] = node3;
      nodeArray0[1] = node2;
      Node node4 = new Node((-1716), nodeArray0);
      node2.isLabel();
      node3.isGetProp();
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setThrows();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node node0 = Node.newString("", 102, 35);
      node0.isScript();
      node0.addSuppression("");
      Node node1 = Node.newString(30, "\n\nTree2:\n");
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node_AncestorIterable0.iterator();
      Node node2 = new Node((-154));
      Node node3 = new Node(49, node2);
      Node node4 = null;
      try {
        node4 = new Node(38, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getProp(30);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node1.isQualifiedName();
      node0.isBreak();
      node1.getJSDocInfo();
      node2.isCall();
      node1.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      node0.getParent();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(53, 2616, 56);
      node1.getInputId();
      String string0 = "Vm`8ONB#s@0{%kFWX#";
      node1.setChangeTime((-4848));
      // Undeclared exception!
      try { 
        node1.appendStringTree((Appendable) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = Node.newString((-299), "", (-299), 37);
      Node node1 = new Node(37, node0, node0, (-298), 4095);
      node1.getSideEffectFlags();
      Node node2 = Node.newString("");
      node0.isEquivalentToShallow(node2);
      node1.getIntProp(292);
      node1.isReturn();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      Node.newNumber(0.0, 46, 36);
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node node0 = Node.newString("ye0?<", (-325), (-325));
      Node node1 = new Node(2, node0, node0);
      Node node2 = node0.srcref(node1);
      Node.extractLineno(2);
      node1.isReturn();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      int int0 = 64;
      int int1 = (-3076);
      Node node0 = Node.newNumber(1705.0159909);
      Node node1 = new Node((-3076), node0);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node1;
      nodeArray0[6] = node1;
      nodeArray0[7] = node0;
      Node node2 = null;
      try {
        node2 = new Node(57, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = Node.newString(62, "%o\"q,1U[ix)", (-204), 62);
      Node node1 = new Node((-204), node0, node0, node0, node0);
      node1.isDefaultCase();
      node0.isVarArgs();
      Node node2 = null;
      try {
        node2 = new Node(30, node1, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = Node.newString("hRVFN", 0, 0);
      Node node1 = new Node(0, node0, node0, node0, node0, 0, 32);
      node0.wasEmptyNode();
      node0.setSourceFileForTesting("hRVFN");
      node1.setWasEmptyNode(false);
      node1.getSideEffectFlags();
      node1.getIntProp(15);
      int int0 = (-2313);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = null;
      try {
        node2 = new Node(40, node1, node0, node1, node0, 46, 42);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setThrows();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node node0 = Node.newString("", 102, 35);
      node0.isScript();
      node0.addSuppression("");
      Node node1 = Node.newString(30, "\n\nTree2:\n");
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node_AncestorIterable0.iterator();
      Node node2 = new Node((-154));
      Node node3 = new Node(49, node2);
      node0.isSwitch();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.getJsDocBuilderForNode();
      node3.isIf();
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = new Node(30);
      // Undeclared exception!
      try { 
        Node.newString((String) null, 1543, 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = Node.newNumber((-2684.93661), 26, (-4528));
      node0.setDouble(2599.154674846);
      node0.isCall();
      node0.isQuotedString();
      node0.getJsDocBuilderForNode();
      node0.putIntProp(50, 51);
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      node0.getInputId();
      Node node1 = Node.newString("");
      Node node2 = Node.newString("", 39, 16777216);
      node1.setQuotedString();
      Node[] nodeArray0 = new Node[9];
      Node node3 = new Node(303, node0, (-1121), 15);
      nodeArray0[0] = node3;
      nodeArray0[1] = node2;
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node1;
      nodeArray0[6] = node2;
      nodeArray0[7] = node0;
      nodeArray0[8] = node0;
      Node node4 = null;
      try {
        node4 = new Node(43, nodeArray0, 624, 1619);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      String string0 = "[Ogh,R#U";
      Node node0 = Node.newString(0, "[Ogh,R#U");
      Node.newString("[Ogh,R#U", 9, 12);
      // Undeclared exception!
      try { 
        node0.setDouble(2847.0822477);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      Node node0 = Node.newString((-299), "", (-299), 37);
      Node node1 = new Node(37, node0, node0, (-298), 4095);
      node1.getSideEffectFlags();
      node1.getIntProp(292);
      Node node2 = new Node(37, node1);
      node2.getParent();
      node1.isStringKey();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.TOP_LEVEL_PROTOTYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      node0.isIn();
      Node node3 = node1.getLastSibling();
      node2.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1024);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      assertTrue(node_SideEffectFlags0.areAllFlagsSet());
      
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesThis();
      node3.getLineno();
      Node node4 = Node.newNumber((double) 47, 0, 0);
      assertEquals(0, node4.getSourcePosition());
      
      Node.extractCharno((-299));
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(53, 2616, 56);
      node1.getInputId();
      try { 
        node0.setString("Vm`8ONB#s@0{%kFWX#");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEW is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      InputId inputId0 = new InputId("wO");
      node0.setInputId(inputId0);
      Node node1 = Node.newString("wO");
      node0.addChildToFront(node1);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING wO is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      Node node0 = Node.newString("ye0?<", 0, 0);
      Node node1 = new Node(0, node0, node0);
      node0.srcref(node1);
      Node.extractLineno((-1121));
      node0.getParent();
      node1.isStringKey();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.TOP_LEVEL_PROTOTYPE;
      jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      Node node2 = null;
      try {
        node2 = new Node((-5861), node0, node0, node1, (-1121), 105);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("Q");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(52, 4095);
      linkedHashSet0.add("=TZ--(Uf$ny'fVr0b");
      node0.setDirectives(linkedHashSet0);
      node0.getInputId();
      node0.wasEmptyNode();
      node0.isBlock();
      node0.isOptionalArg();
      node0.isArrayLit();
      node0.isLabel();
      node0.isGetProp();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = Node.newString((-299), "", (-299), 37);
      Node node1 = new Node(37, node0, node0, (-298), 4095);
      node1.getSideEffectFlags();
      node1.getIntProp(292);
      Node node2 = new Node(37, node1);
      node2.getParent();
      node1.isStringKey();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.TOP_LEVEL_PROTOTYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      node0.setJSType(objectType0);
      node0.isIn();
      node1.getLastSibling();
      node2.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1024);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesThis();
      int int0 = Node.FREE_CALL;
      node2.isParamList();
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      int int0 = 739;
      Node node0 = Node.newNumber(0.0, 739, 739);
      Node node1 = null;
      node0.detachChildren();
      // Undeclared exception!
      try { 
        node0.addChildBefore((Node) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = Node.newNumber(1219.48953);
      Node node1 = null;
      try {
        node1 = new Node((-476), node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node node0 = Node.newString(0, "[Ogh,R#U");
      node0.setString("Vm`8ONB#s@0{%kFWX#");
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node node0 = new Node(37, (-1373), 37);
      Node node1 = new Node(4030, node0, node0);
      node1.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = Node.newString((-1313), "is_constant_name", 130, 2789);
      Node node1 = new Node(130, node0, node0);
      node1.copyInformationFromForTree(node0);
      node1.hasChild((Node) null);
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString((-728), "VYc,m,Avo", 49, (-728));
      nodeArray0[0] = node0;
      node0.setQuotedString();
      Node node1 = new Node(303, nodeArray0, 56, 49);
      node1.isUnscopedQualifiedName();
      node1.isGetElem();
      node0.getString();
      Node node2 = null;
      try {
        node2 = new Node(0, node1, node0, 57, 37);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("Q");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(52, 4095);
      linkedHashSet0.add("=TZ--(Uf$ny'fVr0b");
      node0.setDirectives(linkedHashSet0);
      node0.getInputId();
      node0.wasEmptyNode();
      node0.isBlock();
      node0.isArrayLit();
      node0.isLabel();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newString("ye0?<", 0, (-1));
      try { 
        node0.setDouble(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING ye0?< is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node node0 = Node.newString("", 102, 35);
      node0.isScript();
      node0.addSuppression("");
      Node node1 = Node.newString(13, "\n\nTree2:\n");
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.iterator();
      Node node2 = new Node((-154));
      Node node3 = node0.useSourceInfoIfMissingFrom(node2);
      node0.isSwitch();
      node3.isInc();
      Node.newString("\n\nTree2:\n", 1, (-476));
      node3.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = Node.newString((-802), "");
      node0.cloneTree();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newString("ye0?<", 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      jSDocInfo0.setAssociatedNode(node1);
      Node node3 = jSDocInfo0.getAssociatedNode();
      node3.addChildToBack(node2);
      node3.putProp(92, jSDocInfo0);
      node1.setLength((-3356));
      node2.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("Q");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(52, 4095);
      linkedHashSet0.add("=TZ--(Uf$ny'fVr0b");
      node0.setDirectives(linkedHashSet0);
      node0.getInputId();
      node0.wasEmptyNode();
      node0.isBlock();
      node0.getType();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      Node node1 = null;
      try {
        node1 = new Node(15, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = Node.newString(" is not a string node", (-522), (-522));
      InputId inputId0 = new InputId(" is not a string node");
      Node node1 = new Node(86, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      nodeArray0[1] = node0;
      Node node2 = null;
      try {
        node2 = new Node(39, nodeArray0, 40, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newString("ye0?<", 0, 0);
      Node node1 = Node.newString(50, "f1gXr3[s#@,xJ!X#va", (-1457), 48);
      Node node2 = new Node(15, node1, node0, node1, node1);
      node2.useSourceInfoFromForTree(node0);
      node1.removeChildren();
      InputId inputId0 = new InputId("RwlO");
      inputId0.toString();
      node1.setInputId((InputId) null);
      node1.setOptionalArg(false);
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      // Undeclared exception!
      try { 
        node0.setString("Vm`8ONB#s@0{%kFWX#");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = new Node(32, 812, 125);
      Node node2 = Node.newString(55, "GETTER_DEF");
      node1.isNoSideEffectsCall();
      Node node3 = node1.clonePropsFrom(node0);
      node2.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isBreak();
      node3.getJSDocInfo();
      Node node4 = new Node(57, 47, 1);
      node4.isCall();
      node0.isQuotedString();
      node2.getJsDocBuilderForNode();
      node3.isIf();
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("Q");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(52, 4095);
      linkedHashSet0.add("=TZ--(Uf$ny'fVr0b");
      node0.setDirectives(linkedHashSet0);
      node0.getInputId();
      node0.wasEmptyNode();
      node0.isBlock();
      node0.isGetProp();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      Node node0 = Node.newString((-1313), "is_constant_name", 130, 2789);
      Node node1 = new Node(130, node0, node0);
      node1.hasChild((Node) null);
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      Node node0 = new Node(3544, 3544, 32);
      node0.addSuppression((String) null);
      Node node1 = new Node(57);
      node1.addChildrenToBack(node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.isFromExterns();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.type = 8;
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = Node.newString("ye0?<", 0, 0);
      Node node1 = new Node(0, node0, node0);
      Node node2 = node0.srcref(node1);
      Node.extractLineno((-1121));
      node0.isReturn();
      // Undeclared exception!
      try { 
        node2.addChildBefore(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      String string0 = "hRVFN";
      Node node0 = Node.newString("hRVFN", 0, 0);
      Node node1 = Node.newString(888, "", 4095, 37);
      Node node2 = new Node(16);
      Node node3 = new Node((-728), node2, node1, node2);
      Node node4 = null;
      try {
        node4 = new Node(37, node3, node0, node1, (-780), (-550));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isUnscopedQualifiedName();
      node0.type = 0;
      Node node1 = Node.newString(113, "a?e%jaQ=}QQX-v*pNr=", 38, 119);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = null;
      nodeArray0[2] = node1;
      nodeArray0[3] = null;
      nodeArray0[4] = null;
      Node node2 = null;
      try {
        node2 = new Node(53, nodeArray0, 0, (-858));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node0.getSourceFileName();
      Node node3 = Node.newNumber(0.0, 2, 51);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node0.getJSDocInfo();
      node0.setJSType((JSType) null);
      node3.getChangeTime();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = node0.cloneNode();
      node0.cloneNode();
      node1.getSourceFileName();
      JSType jSType0 = null;
      Node.newNumber((-2159.0), 16, 29);
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      Node node0 = Node.newNumber((double) 29);
      node0.getSideEffectFlags();
      Node node1 = new Node(29, node0, node0);
      node1.removeProp(82);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.getJsDocBuilderForNode();
      node0.getBooleanProp(91);
      node0.isEquivalentToShallow(node1);
      node1.getProp(4095);
      node0.addSuppression("");
      node2.addChildToFront(node1);
      node1.setCharno(32);
      node0.siblings();
      Node.newString(4095, "com.google.javascript.rhino.jstype.TemplateTypeMap", 54, 55);
      node1.isNoSideEffectsCall();
      Node[] nodeArray0 = new Node[5];
      Node node3 = null;
      try {
        node3 = new Node(4095, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString((-728), "VYc,m,Avo", (-728), (-728));
      nodeArray0[0] = node0;
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isBreak();
      node1.getJSDocInfo();
      node2.isCall();
      node1.isQuotedString();
      node2.getJsDocBuilderForNode();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.isOnlyModifiesArgumentsCall();
      node1.getAncestors();
      node0.isBreak();
      node1.getJSDocInfo();
      node2.isCall();
      node1.isQuotedString();
      node2.getJsDocBuilderForNode();
      node2.putIntProp(36, 0);
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      node1.getAncestors();
      node0.isBreak();
      node1.getJSDocInfo();
      node2.isCall();
      Node node3 = new Node((-39));
      node3.isDebugger();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      Node node4 = new Node(43, node0, node1);
      node4.isEquivalentTo(node0, true, false, false);
      node3.mayMutateGlobalStateOrThrow();
      node2.isFromExterns();
      node0.getAncestor(124);
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toString(true, false, false);
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        Node.newString(9, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      Node node0 = Node.newString((-3361), "Ll;lC{?&T-k*!b");
      // Undeclared exception!
      try { 
        node0.getAncestor((-1992));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      Node node0 = new Node(3544, 3544, 32);
      node0.addSuppression((String) null);
      Node node1 = new Node(57);
      node1.addChildrenToBack(node0);
      // Undeclared exception!
      try { 
        node0.setDouble(1.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3544
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      String string0 = "Y(bIhGf";
      int int0 = (-787);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-14), (Node) null, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.Node$FileLevelJsDocBuilder";
      Node node0 = Node.newString(0, "com.google.javascript.rhino.Node$FileLevelJsDocBuilder", 4211, 4211);
      Node node1 = new Node(39);
      Node node2 = new Node(0, node0, node1, node1);
      Node node3 = null;
      try {
        node3 = new Node(8232, node0, node2, node1, 0, 31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1031);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags5.valueOf();
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      boolean boolean0 = false;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node((-2925), (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      int int0 = (-70);
      Node node0 = new Node((-70));
      node0.isQualifiedName();
      Node node1 = node0.cloneNode();
      node1.getSideEffectFlags();
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isUnscopedQualifiedName();
      Node node1 = null;
      node0.type = 0;
      // Undeclared exception!
      try { 
        node0.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node node0 = Node.newString("", 102, 35);
      node0.isScript();
      node0.addSuppression("");
      Node.newString(13, "\n\nTree2:\n");
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null, false, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test680()  throws Throwable  {
      Node node0 = Node.newString(" is not a string node", (-522), (-522));
      InputId inputId0 = new InputId(" is not a string node");
      Node node1 = Node.newString(3692, " is not a string node", 1, 47);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.removeChildren();
      inputId0.toString();
      node0.setInputId(inputId0);
      node2.setOptionalArg(false);
  }

  @Test(timeout = 4000)
  public void test681()  throws Throwable  {
      Node node0 = Node.newNumber((double) 29);
      node0.getSideEffectFlags();
      Node node1 = new Node(29, node0, node0);
      node1.removeProp(82);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.getJsDocBuilderForNode();
      node0.getBooleanProp(91);
      node0.isEquivalentToShallow(node1);
      node1.getProp(4095);
      node0.addSuppression("");
      node2.addChildToFront(node1);
      node1.setCharno(32);
      node0.siblings();
      Node.newString(4095, "com.google.javascript.rhino.jstype.TemplateTypeMap", 54, 55);
      node1.isNoSideEffectsCall();
      node1.getStaticSourceFile();
      node2.isDefaultCase();
      node0.getLength();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test682()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(53, 2616, 56);
      node1.getInputId();
      node1.setInputId((InputId) null);
      node0.addChildToFront(node1);
      node0.useSourceInfoFromForTree(node1);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEW 2616 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test683()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, 0, 0);
      node0.isLocalResultCall();
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test684()  throws Throwable  {
      Node node0 = Node.newString(39, "x");
      node0.isOptionalArg();
      node0.isFromExterns();
      node0.getString();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test685()  throws Throwable  {
      Node node0 = Node.newString("VKB8`Ky3;/AnzLzdbpF");
      node0.getChildAtIndex(0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("free_call", false);
      char[] charArray0 = new char[4];
      charArray0[0] = 'K';
      charArray0[1] = 'U';
      charArray0[2] = 'v';
      charArray0[3] = '4';
      // Undeclared exception!
      try { 
        mockFileWriter0.write(charArray0, 0, 30);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test686()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-588));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.setMutatesGlobalState();
      int int0 = 2521;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[4];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<AllType> linkedList0 = new LinkedList<AllType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) linkedList0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) immutableList0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFromTypeNodes(node0, "Object#Key", (StaticScope<JSType>) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected node in type expression: PARAM_LIST
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test687()  throws Throwable  {
      Node node0 = Node.newString((-802), "");
      Node node1 = new Node((-299), node0, node0, 57, 43);
      node0.addChildToFront(node1);
      // Undeclared exception!
      try { 
        node1.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test688()  throws Throwable  {
      Node node0 = Node.newString("jKA's0$DS");
      node0.getSourceFileName();
      Node node1 = new Node(702, node0, node0, node0, node0, 1851, (-919));
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(51);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 51
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test689()  throws Throwable  {
      int int0 = 419;
      Node node0 = Node.newNumber(0.0, 739, 419);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null, false, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test690()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node0 = Node.newString("ye0?<", 0, 0);
      Node node1 = new Node(0, node0, node0);
      jSDocInfo0.setAssociatedNode(node1);
      Node node2 = jSDocInfo0.getAssociatedNode();
      node2.putProp(92, jSDocInfo0);
      node1.setLength((-3356));
      assertEquals(0, node1.getType());
      assertEquals((-1), node1.getSourcePosition());
      assertEquals(40, node0.getType());
      assertEquals(0, node0.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test691()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = node0.cloneNode();
      Node node2 = node1.cloneNode();
      node0.getSourceFileName();
      Node node3 = Node.newNumber(0.0, 2, 51);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node0.getJSDocInfo();
      node0.setJSType((JSType) null);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test692()  throws Throwable  {
      int int0 = 31;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      String string0 = null;
      Node node0 = null;
      try {
        node0 = new Node(31, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test693()  throws Throwable  {
      int int0 = 1098;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "is_dispatcher";
      Node node0 = new Node(117);
      Node node1 = new Node(1098, node0);
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "bor(Y5ac&/\fS");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test694()  throws Throwable  {
      String string0 = "hRVFN";
      Node node0 = Node.newString("hRVFN", 0, 0);
      Node node1 = new Node(0, node0, node0, node0, node0, 0, 32);
      node0.wasEmptyNode();
      node0.setSourceFileForTesting("hRVFN");
      node1.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(false);
      node1.isLocalResultCall();
      node1.isFor();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType((String) null, node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test695()  throws Throwable  {
      int int0 = 117;
      int int1 = (-357);
      Node node0 = null;
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      nodeArray0[4] = null;
      nodeArray0[5] = null;
      Node node1 = null;
      try {
        node1 = new Node(117, nodeArray0, 116, 117);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test696()  throws Throwable  {
      Node node0 = Node.newString((-1513), "node is not a child", (-3182), (-3182));
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-3182));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1513
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test697()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      node0.getInputId();
      Node node1 = Node.newString("");
      Node.newString("", 39, 16777216);
      node0.getBooleanProp(0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.wasEmptyNode();
      node2.setQuotedString();
      node0.isAssignAdd();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      int int0 = node_SideEffectFlags5.valueOf();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test698()  throws Throwable  {
      int int0 = (-1462);
      Node[] nodeArray0 = new Node[6];
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<AllType> arrayList0 = new ArrayList<AllType>();
      ListIterator<AllType> listIterator0 = arrayList0.listIterator(0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) listIterator0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      nodeArray0[0] = node0;
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      nodeArray0[1] = node1;
      Node node2 = Node.newNumber((double) 2, 113, 0);
      nodeArray0[2] = node2;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createUnionType((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test699()  throws Throwable  {
      Node node0 = Node.newNumber((-2684.93661), 26, (-4528));
      node0.setDouble(2599.154674846);
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test700()  throws Throwable  {
      Node node0 = new Node(86, 3, 124);
      Node node1 = Node.newString(50, "");
      node1.isNoSideEffectsCall();
      Node node2 = node0.clonePropsFrom(node1);
      boolean boolean0 = node1.isOnlyModifiesArgumentsCall();
      assertFalse(boolean0);
      
      node1.getAncestors();
      node0.isBreak();
      node1.getJSDocInfo();
      node2.isCall();
      node1.isQuotedString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      assertEquals((-1), node1.getLineno());
      assertEquals(12412, node2.getSourcePosition());
      assertTrue(node2.isAssign());
      assertEquals(50, node1.getType());
      assertEquals(3, node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test701()  throws Throwable  {
      int int0 = 335;
      Node node0 = Node.newNumber((double) 335);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType jSType0 = null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("p#-`uzFOmGPyP4&a9>p", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }
}
