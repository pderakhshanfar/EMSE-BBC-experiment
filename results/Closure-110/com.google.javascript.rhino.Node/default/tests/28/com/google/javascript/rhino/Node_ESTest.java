/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 31 08:28:27 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import java.io.BufferedWriter;
import java.io.File;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      Node node1 = new Node(22, node0, node0);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node0.setLength(0);
      node1.isBlock();
      node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node1.isIf();
      Node node2 = node0.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.setJSDocInfo(jSDocInfo0);
      node0.setInputId((InputId) null);
      node0.setQuotedString();
      node0.isEquivalentTo(node1);
      node0.isAssign();
      node1.hasOneChild();
      node0.isFalse();
      // Undeclared exception!
      try { 
        node_AncestorIterable0.iterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(17, "Object#Element", (-1956), (-1956));
      Node node1 = Node.newNumber((double) 2);
      Node node2 = new Node(31, node1, node0, node1, node0, 12, (-572));
      node0.isVar();
      Node node3 = node2.srcrefTree(node0);
      node3.cloneTree();
      node2.setChangeTime(4095);
      node3.isNE();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isHook();
      node0.isDefaultCase();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = Node.newNumber((-1565.0));
      node0.putIntProp(16, 16);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber((-4485.1275909));
      Node node1 = node0.cloneTree();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(111, 8, 111);
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = Node.newString("");
      int int0 = Node.ORIGINALNAME_PROP;
      node0.isEquivalentToShallow(node0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isDebugger();
      node0.isBlock();
      node0.setLineno(40);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      Node node1 = new Node(1, node0, node0);
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(50, node0, node0, node0, 31, (-2315));
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.children();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newNumber(3096.557997819);
      node0.siblings();
      node0.addSuppression("3mmz_BQ`B#KD!d");
      node0.isFunction();
      node0.getQualifiedName();
      node0.getJSDocInfo();
      node0.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-17), (-17));
      node0.isCall();
      node0.isSwitch();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = new Node((-2928), (-2928), (-2928));
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newNumber(52.0);
      node0.isSyntheticBlock();
      node0.addSuppression("VOID_TYPE");
      node0.getSourceFileName();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isScript();
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node.newNumber((double) 2, 2, 36);
      node0.setInputId((InputId) null);
      Node node1 = Node.newString(1, "\"_wItqxn");
      node1.isCase();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node.newNumber(0.0);
      Node node0 = Node.newNumber((double) 32);
      node0.setQuotedString();
      int int0 = (-3601);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = Node.newNumber((-4666.783133));
      Node node1 = new Node(38, node0, node0, node0, node0, 43, 47);
      node0.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newString("", (-41), (-41));
      int int0 = Node.IS_CONSTANT_NAME;
      node0.isLocalResultCall();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(136);
      node0.setLength(1457);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node1.isDo();
      node0.isHook();
      node1.isVar();
      Node node2 = node1.srcrefTree(node0);
      node2.cloneTree();
      Node node3 = new Node(93);
      node3.isDebugger();
      node1.replaceChild(node0, node2);
      node3.siblings();
      node3.setChangeTime(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setChangeTime(51);
      node2.getQualifiedName();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.setWasEmptyNode(false);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = Node.newString(124, "unexpected prop id ");
      node0.isObjectLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(767);
      node1.setWasEmptyNode(false);
      node1.setWasEmptyNode(false);
      node0.isLabel();
      Node node2 = new Node(125, node1, node0, 154, 53);
      node2.isBlock();
      node1.mayMutateGlobalStateOrThrow();
      node2.isInstanceOf();
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = new Node((-2214));
      Node node1 = new Node(545, node0, (-1069), 29);
      Node node2 = new Node(126, node1, node0);
      node2.srcrefTree(node1);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        node2.setLineno(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newString("\"$ns.E)=CjIK");
      node0.setIsSyntheticBlock(false);
      node0.isString();
      node0.isLabel();
      Node node1 = Node.newString(37, "\"$ns.E)=CjIK", 2, 56);
      node1.isFor();
      node0.isVar();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(37);
      node3.isEquivalentTo(node1, false, true, true);
      node0.replaceChild(node3, node1);
      node1.siblings();
      node1.setChangeTime(node2.SIDE_EFFECT_FLAGS);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node3.setChangeTime(node1.FREE_CALL);
      // Undeclared exception!
      try { 
        node1.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node0.setSideEffectFlags(node_SideEffectFlags4);
      File file0 = null;
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2154));
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node((-205));
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node.newNumber(0.3443197034);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(3520);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1063));
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(80);
      Node node0 = Node.newString(".");
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node.newNumber((-4666.783133));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isEquivalentTo(node0);
      node0.isTrue();
      node0.isQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node0.setSideEffectFlags(node_SideEffectFlags0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(161);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node0.setSideEffectFlags(node_SideEffectFlags3);
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.areAllFlagsSet();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = Node.newString(1035, "53&wb(");
      Node node1 = new Node(36, node0, node0, node0);
      node1.replaceChild(node0, node0);
      node0.siblings();
      // Undeclared exception!
      try { 
        node1.setChangeTime(node0.FLAG_ARGUMENTS_UNMODIFIED);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = new Node(37, 37, 37);
      Node node1 = Node.newNumber((double) 55);
      Node node2 = Node.newNumber((double) 2, 37, 37);
      InputId inputId0 = new InputId("@9XFW_<.FUD{(");
      node2.setInputId(inputId0);
      node2.addChildrenAfter(node0, node0);
      node0.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node0.copyInformationFrom(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(2877);
      node0.setType(40);
      Node node1 = new Node(32, node0, node0, 2, 12);
      node1.addChildAfter(node0, node0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = Node.newNumber((double) 1, 57, 1);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newString(124, "La)~", 124, 124);
      node0.isEquivalentToShallow(node0);
      node0.isTrue();
      node0.hasOneChild();
      node0.isTry();
      Node node1 = Node.newString("La)~", 47, 51);
      node0.addChildrenAfter(node1, node1);
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = Node.newNumber((-238.2119), (-536870912), (-536870912));
      Node.newNumber((double) 32, (-2644), 1945);
      boolean boolean0 = node0.isCast();
      Node node1 = Node.newString(4, "", (-403), (-1838));
      Node node2 = Node.newNumber(2875.1);
      node2.addChildrenToBack(node0);
      node0.setSourceFileForTesting("");
      Node node3 = node1.detachFromParent();
      node3.isAdd();
      boolean boolean1 = true;
      node2.toString(boolean0, boolean1, boolean1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node1.SIDE_EFFECTS_FLAGS_MASK);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString(75, "");
      Node node1 = Node.newNumber((-1604.53812));
      node1.addChildrenToBack(node0);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.setSourceFileForTesting("");
      node0.isCast();
      node0.isName();
      node0.isTrue();
      node0.isSyntheticBlock();
      node0.getString();
      Node node1 = new Node((-904), node0, node0, node0, node0);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = Node.newString(779, "r,0(1c#hPIT2+2V3");
      node0.addChildrenToBack((Node) null);
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = Node.newNumber(1792.99055);
      node0.isCast();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = Node.newString((-358), "|", (-358), 85);
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = (-3146);
      Node node0 = new Node((-3146), (-3146), (-3146));
      node0.putIntProp((-3146), (-3146));
      node0.isDebugger();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      Node node1 = new Node(22, node0, node0);
      node1.getAncestors();
      node0.setLength(0);
      node1.isBlock();
      Node node2 = node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node1.isIf();
      node1.addChildrenAfter(node0, node0);
      node1.getStaticSourceFile();
      node1.copyInformationFrom(node2);
      String string0 = "VOID_TYPE";
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = Node.newNumber((double) 2, 2, 36);
      node0.addChildToBack(node1);
      node1.isRegExp();
      node0.siblings();
      node0.isFromExterns();
      Node node2 = node1.detachFromParent();
      node1.isAdd();
      node0.isDec();
      node2.isTrue();
      Node node3 = Node.newNumber(0.0, 37, 1);
      Node node4 = new Node((-110), node3, node3, node1);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node3);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      node0.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.getProp((-1516));
      Node node2 = Node.newString(15, "thisType");
      node2.isEquivalentToTyped(node0);
      jSDocInfo0.setStruct();
      node0.setDirectives((Set<String>) null);
      int int0 = (-344);
      node1.getExistingIntProp((-344));
      node1.setDouble(node0.QUOTED_PROP);
      int int1 = (-3409);
      node1.checkTreeEqualsImpl(node0);
      Node.extractLineno(int1);
      // Undeclared exception!
      try { 
        node1.isBreak();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -344
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = new Node(2877);
      node0.isQualifiedName();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newNumber((-1565.0));
      node0.putIntProp(8, 8);
      node0.getSourceFileName();
      node0.setString((String) null);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newString((-4655), "$ws?e`b[5.");
      node0.getExistingIntProp(31);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = Node.newNumber((-4666.783133));
      Node node1 = Node.newNumber((double) 48, 57, 8232);
      node0.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node.newString("C,dU1(L4J!t_g", (-59), 711);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newNumber((-1565.0));
      node0.putIntProp(8, 8);
      node0.setDirectives((Set<String>) null);
      node0.getSourceFileName();
      node0.isGetElem();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(12, node0, node0);
      node0.getQualifiedName();
      node0.checkTreeEqualsImpl(node1);
      node0.isDefaultCase();
      node0.replaceChildAfter(node1, node1);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      int int0 = 114;
      Node node0 = Node.newString("8'", 0, 114);
      node0.toStringTree();
      node0.addSuppression("8'");
      Node node1 = null;
      node0.setLineno(114);
      node0.isOnlyModifiesThisCall();
      node0.isVarArgs();
      node0.toString(true, true, true);
      node0.isVarArgs();
      node0.isUnscopedQualifiedName();
      node0.detachChildren();
      node0.getJsDocBuilderForNode();
      node0.isEquivalentToTyped((Node) null);
      node0.checkTreeEquals(node1);
      int int1 = 0;
      int int2 = 0;
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = new Node(37, 37, 37);
      Node.newNumber((double) 55);
      Node node1 = Node.newNumber((double) 2, 37, 37);
      InputId inputId0 = new InputId("@9XFW_<.FUD{(");
      node1.setInputId(inputId0);
      Node node2 = node1.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node3 = node2.setJSDocInfo(jSDocInfo0);
      node3.setInputId(inputId0);
      node2.setQuotedString();
      double double0 = 1.2;
      Node node4 = Node.newNumber(double0);
      // Undeclared exception!
      try { 
        node4.isEquivalentTo(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getString();
      Node node1 = new Node(36, 57, 0);
      Node node2 = node1.getAncestor(52);
      node0.hasChild(node1);
      node1.isParamList();
      Node node3 = node0.copyInformationFrom((Node) null);
      node1.setChangeTime(node3.COLUMN_MASK);
      // Undeclared exception!
      try { 
        node2.isExprResult();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newString((-4655), "$ws?e`b[5.");
      node0.getString();
      node0.getExistingIntProp(31);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      node0.siblings();
      node0.getAncestor(93);
      node0.addSuppression("3mmz_BQ`B#KD!d");
      node0.isFunction();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = Node.newString("liLUa", 678, 678);
      Node node1 = new Node(30, node0);
      Node node2 = Node.newNumber((double) 42);
      node0.hasChild(node1);
      node2.isParamList();
      Node node3 = node1.copyInformationFrom(node0);
      node2.setChangeTime(1);
      node3.isExprResult();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node((-862048943));
      node0.isParamList();
      node0.copyInformationFrom(node0);
      node0.setChangeTime((-18));
      node0.isExprResult();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getString();
      Node node1 = new Node(36, 57, 0);
      Node node2 = node1.getAncestor(52);
      Node node3 = node0.copyInformationFrom((Node) null);
      node1.setChangeTime(node3.COLUMN_MASK);
      // Undeclared exception!
      try { 
        node2.isExprResult();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node(114, (Node[]) null);
      node0.isOnlyModifiesThisCall();
      // Undeclared exception!
      try { 
        node0.getLastSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      int int0 = 556;
      Node node0 = new Node((-2446), (Node[]) null);
      Node node1 = new Node(int0, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.getSourceOffset();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      jSTypeArray0[0] = (JSType) templateType0;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      jSTypeArray0[1] = jSType0;
      jSType0.isBooleanObjectType();
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node0, jSTypeArray0[1]);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      JSType.toMaybeTemplatizedType((JSType) objectType0);
      modificationVisitor0.caseTemplatizedType((TemplatizedType) null);
      // Undeclared exception!
      try { 
        enumElementType0.getRootNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = new Node(2856, 2856, 2856);
      node0.setType(40);
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isQualifiedName();
      node0.isVarArgs();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = Node.newNumber((-1604.53812266));
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      int int0 = 1187;
      Node node0 = new Node(1187, (Node[]) null, 1187, 1187);
      int int1 = 16384;
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      node0.isDec();
      // Undeclared exception!
      try { 
        node0.hasChildren();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int int0 = 2407;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[3];
      Node node0 = Node.newNumber((double) 2407, 2407, (-2320));
      EnumType enumType0 = jSTypeRegistry0.createEnumType("<m[fQG3Qbwk", node0, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      // Undeclared exception!
      try { 
        enumElementType0.toMaybeEnumElementType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      int int0 = 0;
      String string0 = "\"$ns.E)=CjIK";
      Node node1 = Node.newString("\"$ns.E)=CjIK");
      Node.newNumber((double) 52);
      node1.setDouble((-400.18));
      node0.getBooleanProp(int0);
      int int1 = 30;
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newString("", (-41), (-41));
      Node.newNumber((double) 55, 4095, 52);
      node0.isQualifiedName();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String string0 = "](xkvC~";
      Node node0 = Node.newString("](xkvC~");
      node0.setDouble(0.7);
      // Undeclared exception!
      try { 
        Node.newString(node0.DIRECT_EVAL, string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING ](xkvC~ is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newNumber((-238.2119), (-536870912), (-536870912));
      Node.newNumber((double) 32, (-2644), 32);
      node0.isCast();
      Node.newString(4, "", (-403), (-1838));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node0.hasOneChild();
      node0.setString("/l->@Q{ai+F,Cb5");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      node0.toString(false, false, false);
      Node node1 = new Node(39, node0, node0, node0, node0, 4, (-2316));
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = Node.newString("lIY5{(YIV-}9=?v. ", 1, 115);
      node3.toStringTree();
      node2.setType(35);
      int int0 = Node.COLUMN_BITS;
      node2.getDouble();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newNumber(42.0, (-4165), 39);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(39, node0);
      node1.getChangeTime();
      node1.setDouble(4095);
      node0.isTypeOf();
      node1.isVar();
      // Undeclared exception!
      try { 
        node0.isCatch();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-689));
      Node node0 = Node.newNumber((double) (-689));
      node0.siblings();
      Node node1 = Node.newString(2, "");
      node1.detachChildren();
      Node node2 = Node.newString((-1548), "", 0, 37);
      node2.addChildBefore(node0, node1);
      Node node3 = node2.useSourceInfoFromForTree(node1);
      Node node4 = node3.removeFirstChild();
      // Undeclared exception!
      try { 
        node4.getStaticSourceFile();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      node0.isVar();
      Node node1 = new Node(43);
      node1.detachChildren();
      node1.isOnlyModifiesArgumentsCall();
      node0.isLocalResultCall();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newString("\"$ns.E)=CjIK");
      node0.getIntProp(30);
      Node node1 = new Node(48, node0);
      node0.addChildBefore(node1, node1);
      node0.replaceChildAfter(node1, node1);
      // Undeclared exception!
      try { 
        node0.isOptionalArg();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.isDo();
      node0.isHook();
      node1.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      node_SideEffectFlags0.setAllFlags();
      Node.newString(131, "");
      Node node2 = Node.newString("", 1109, (-2940));
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(1945, nodeArray0);
      node3.isInstanceOf();
      node1.isHook();
      node1.detachChildren();
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(300, 37, 2670);
      Node node2 = new Node(50, node0, node1);
      node2.addChildBefore(node1, node1);
      Node node3 = new Node(node2.INFERRED_FUNCTION, node0, node2, node2);
      node0.hasOneChild();
      // Undeclared exception!
      try { 
        node0.isName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newString(29, "");
      Node node1 = new Node(29, node0, node0, node0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(50, node0, node0, node0, 3991, (-2315));
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString(4260, "oICH:(4%Puz");
      node0.putProp(128, "oICH:(4%Puz");
      ErrorReporter errorReporter0 = null;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[3];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      JSType jSType0 = jSTypeRegistry1.createUnionType(jSTypeArray0);
      jSTypeArray0[0] = jSType0;
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(errorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry2);
      // Undeclared exception!
      try { 
        modificationVisitor0.caseAllType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.UnionTypeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int int0 = Node.extractLineno(0);
      Node node0 = Node.newString((String) null);
      node0.setLength(int0);
      int int1 = 310;
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node.newString(305, (String) null);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int int0 = 8202;
      int int1 = 108;
      Node node0 = Node.newString((String) null);
      Node node1 = null;
      try {
        node1 = new Node(int1, node0, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(1670, node0, node0);
      node0.addChildToBack(node1);
      node1.isRegExp();
      node0.siblings();
      node0.isFromExterns();
      node0.isObjectLit();
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node0.setSideEffectFlags(node_SideEffectFlags3);
      String string0 = null;
      int int0 = 289;
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node((-2928), (-2928), (-1032));
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = Node.newString(147, "The new child node has siblings.");
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString(1716, "f{m4Wnb}mRS");
      node0.isDebugger();
      node0.isWith();
      node0.isBlock();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1035);
      Node.newNumber((-1011.0), 47, (-212));
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString(123, "");
      node0.srcrefTree((Node) null);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node((-1826));
      Node node1 = new Node(0, node0, node0, node0, (-183), 0);
      node1.setChangeTime(54);
      node1.isDo();
      node0.isFor();
      node0.isVar();
      Node node2 = node0.srcrefTree(node1);
      node2.isDebugger();
      node1.replaceChild(node2, node2);
      node0.siblings();
      int int0 = 0;
      node1.setChangeTime(int0);
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString(118, "unexpected prop id ");
      node0.isFor();
      node0.isWith();
      node0.isBlock();
      node0.isAssign();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(751);
      Node node1 = new Node(38, node0, node0, node0, 2, 30);
      node1.isNull();
      node1.setChangeTime(2);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(111, 111, 111);
      node0.siblings();
      node0.addSuppression("F:zcD4");
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-1457));
      node0.hasOneChild();
      String string0 = "A&";
      node0.isIn();
      node0.replaceChild(node0, node0);
      node0.setString(string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newNumber((-1691.213617), (-846), 96);
      Node node1 = Node.newNumber((double) 36);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      Node node1 = new Node(22, node0, node0);
      node1.getAncestors();
      node0.setLength(0);
      node1.isBlock();
      Node node2 = node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      Node node3 = new Node(39);
      node3.isDebugger();
      node3.replaceChild(node0, node1);
      node0.siblings();
      node2.setChangeTime(node1.COLUMN_MASK);
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node((-862048920));
      node0.isParamList();
      Node node1 = node0.copyInformationFrom(node0);
      Node node2 = Node.newString(115, "", 111, 108);
      node2.isFor();
      node1.isVar();
      node2.srcrefTree(node1);
      Node node3 = new Node(47);
      node0.setChangeTime(32);
      node0.isExprResult();
      node2.isOr();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newString(0, "(#`dPDa)|D", (-2410), 0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags4.setThrows();
      node0.setSideEffectFlags(node_SideEffectFlags4);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isNE();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      JSDocInfo jSDocInfo0 = null;
      try {
        jSDocInfo0 = new JSDocInfo();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString(1144, "", 48, 2);
      Node node1 = new Node(57, node0, 31, 4095);
      node1.isObjectLit();
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node0.setLength(node1.INFERRED_FUNCTION);
      node0.getString();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.getStaticSourceFile();
      node0.isLabel();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(272, (Node) null, 127, 0);
      int int0 = 192;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.setMutatesThis();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getBooleanProp(32);
      node0.getIntProp(30);
      Node node1 = new Node(48, node0, 57, 1);
      int int0 = Node.IS_CONSTANT_NAME;
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = null;
      Node node1 = new Node(105, (Node) null, (-695), (-1719));
      Node node2 = node1.getChildBefore(node0);
      node1.removeChildAfter(node2);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.getSourceOffset();
      Node node1 = new Node(38, (-1920), 1985);
      Node node2 = new Node(37, node1, node1);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      node3.setSideEffectFlags((-54));
      node0.detachChildren();
      node0.getLastChild();
      String string0 = null;
      node0.addSuppression(string0);
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      node0.isQualifiedName();
      Node node1 = new Node(52, 701, 38);
      Node node2 = new Node((-1317), node1, node0);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node1.setSideEffectFlags(48);
      node0.detachChildren();
      node3.getLastChild();
      String string0 = "com.google.common.collect.Maps";
      // Undeclared exception!
      try { 
        node3.addSuppression(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got INSTANCEOF
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString(118, "unexpected prop id ");
      Node node1 = Node.newString("unexpected prop id ");
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isWith();
      node0.isBlock();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = new Node(22, 22, 22);
      Node node1 = new Node(22, node0, node0);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.useSourceInfoIfMissingFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString(65, "-");
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(2877, 2866, 2866);
      node0.setSideEffectFlags((-1067));
      node0.setType(node0.ORIGINALNAME_PROP);
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString((-4080), "", (-4080), 0);
      Node[] nodeArray0 = null;
      node0.getDouble();
      Node node1 = new Node(node0.FLAG_NO_THROWS, nodeArray0);
      String string1 = "CharMatcher.SINGLE_WIDTH";
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newString(121, "");
      node0.isCatch();
      node0.isReturn();
      node0.isQualifiedName();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("", 3951, (-160));
      node0.getChangeTime();
      nodeArray0[0] = node0;
      Node node1 = new Node((-160), nodeArray0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = 2097152;
      Node[] nodeArray0 = new Node[6];
      Node node0 = null;
      try {
        node0 = new Node(2097152, nodeArray0, 2097152, 2097152);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node[] nodeArray0 = new Node[6];
      Node node0 = new Node(2097158, nodeArray0, 2097158, 2097158);
      nodeArray0[0] = node0;
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = Node.newNumber((-238.2119), (-536870934), (-536870934));
      node0.setSourceEncodedPositionForTree((-536870934));
      Node[] nodeArray0 = new Node[19];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      Node node1 = new Node(1, nodeArray0, 0, 57);
      String string0 = "q`v1aC8n~UN";
      // Undeclared exception!
      try { 
        Node.newString(string0, node1.INFERRED_FUNCTION, node0.EMPTY_BLOCK);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node.mergeLineCharNo(65535, 65535);
      Node node0 = Node.newNumber(0.0, 301, 1544);
      Node node1 = new Node(65535, node0, node0);
      node1.getChangeTime();
      Node node2 = new Node(40, node0);
      node2.getChangeTime();
      node1.getIndexOfChild(node2);
      node0.getLineno();
      // Undeclared exception!
      try { 
        node0.getStaticSourceFile();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = new Node(744);
      Node node1 = new Node(38, node0, node0, node0, 2, 30);
      node1.isNull();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = new Node(54, node0, 46, 43);
      // Undeclared exception!
      try { 
        node0.isInstanceOf();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(111, 111, 111);
      node0.getChangeTime();
      node0.isDo();
      node0.isIn();
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node(22, 22, 22);
      Node node1 = new Node(57, node0);
      Node node2 = new Node(55, node0);
      node0.siblings();
      String string0 = "";
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newString("", 678, 55);
      Node node1 = Node.newString("", 16, 262144);
      node0.getType();
      boolean boolean0 = false;
      node0.getDouble();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.setIsSyntheticBlock(boolean0);
      node0.isString();
      node0.isLabel();
      int int0 = 0;
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  678 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = new Node(25, 30, 25);
      Node node1 = new Node(30, node0, node0);
      node1.getAncestors();
      node0.setLength(0);
      node1.isBlock();
      node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node0.setString("boolean");
      node1.isIf();
      node0.cloneTree();
      boolean boolean0 = false;
      JSDocInfo jSDocInfo0 = null;
      try {
        jSDocInfo0 = new JSDocInfo(boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // MOD 30 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(38, node0);
      node1.getQualifiedName();
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl(node1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString(324, (String) null, 110, 1131);
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString(3048, (String) null, 0, 0);
      node0.getProp(int0);
      int int1 = (-3074);
      double double0 = 2400.092;
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = new Node(120);
      node0.getFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node(2, 14, 0);
      Node node1 = new Node(98, node0);
      nodeArray0[0] = node1;
      Node node2 = new Node((-1036));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node0, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      String string0 = null;
      JSDocInfo jSDocInfo0 = enumElementType1.getOwnPropertyJSDocInfo(string0);
      node2.setJSDocInfo(jSDocInfo0);
      nodeArray0[1] = node2;
      Node node3 = null;
      try {
        node3 = new Node(int0, nodeArray0, node0.LAST_PROP, node1.INFERRED_FUNCTION);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      Node.newNumber((double) 51, 57, 124);
      node0.removeProp(2048);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-646));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.valueOf();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = null;
      JSType.toMaybeFunctionType((JSType) null);
      JSType jSType1 = modificationVisitor0.caseFunctionType((FunctionType) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType1, jSType0, jSType0, jSType0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      // Undeclared exception!
      try { 
        node0.mayMutateArguments();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node0 = jSDocInfo0.getAssociatedNode();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = null;
      Node node1 = new Node(15, nodeArray0, 30, 63);
      node0.clonePropsFrom(node1);
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.putBooleanProp(27, true);
      boolean boolean0 = node0.isLabelName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      SimpleErrorReporter.getMessage0("Object#Element");
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      jSTypeArray0[0] = (JSType) templateType0;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionType(jSTypeArray0[0], boolean0, jSTypeArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property Object#Element
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isScript();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      simpleErrorReporter0.warning("Object#Element", "Object#Key", 34, 57);
      node1.putBooleanProp(47, false);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isDebugger();
      node0.isDo();
      node0.isLabelName();
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString(96, "");
      node0.isCatch();
      node0.isNull();
      node0.setQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(4095, node0, node0, node0, 47, 0);
      node0.isOr();
      node0.isEmpty();
      node1.isRegExp();
      Node node2 = Node.newString(38, "");
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node0 = new Node(4, 22, 4);
      Node node1 = new Node(46, node0, node0, node0, node0, 40, 49);
      node1.getAncestors();
      node0.setLength(19);
      node1.isDec();
      Node node2 = node0.cloneNode();
      node2.addSuppression("-l_pP:Ts{t35");
      Node node3 = node2.cloneNode();
      node3.isQualifiedName();
      node2.getDouble();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = Node.newString(678, "");
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newString((-4655), "&F)]s-Kg1@<~I~");
      node0.getLength();
      node0.getJsDocBuilderForNode();
      int int0 = Node.FLAG_THIS_UNMODIFIED;
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = new Node(751);
      Node node1 = new Node(38, node0, node0, node0, 2, 50);
      node1.isNull();
      node1.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node1.setChangeTime(2);
      node0.getSourceFileName();
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = new Node(32, 32, 32);
      Node node1 = new Node(15, node0, node0, node0, node0, 2, 39);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isQualifiedName();
      node1.setLineno(15);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = new Node(2877, 2877, 2877);
      node0.setType(40);
      node0.isIn();
      node0.siblings();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node((-656), (-656), (-3860));
      Node node1 = new Node(32, node0, node0, node0, node0, 43, 86);
      node1.setLength(37);
      node0.isCall();
      Node node2 = node1.cloneNode();
      node2.addSuppression("<aH3");
      node2.addSuppression(" is not a string node");
      node0.isVarArgs();
      node2.hasMoreThanOneChild();
      node1.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(17, "Object#Element", (-1956), (-1956));
      Node node1 = Node.newNumber((double) 2);
      node0.isLocalResultCall();
      node0.setLineno(17);
      node0.addChildrenToBack(node1);
      node1.removeProp(1088);
      node1.isOr();
      node0.isThrow();
      node0.removeChild(node1);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node1.isDo();
      node1.setChangeTime(123);
      node1.checkTreeEquals(node0);
      node0.isDo();
      node1.isFor();
      node1.isVar();
      // Undeclared exception!
      try { 
        node1.srcrefTree(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 678
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-107);
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte)22;
      byteArray0[3] = (byte) (-18);
      byteArray0[4] = (byte) (-107);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newNumber(1436.854525);
      node0.toStringTree();
      Node node1 = null;
      node0.isEquivalentToTyped((Node) null);
      node0.isNew();
      node0.isBreak();
      Node node2 = node0.removeChildAfter(node1);
      node2.children();
      node0.isCatch();
      node0.cloneTree();
      // Undeclared exception!
      try { 
        node0.isOnlyModifiesArgumentsCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = new Node((-3146), (-3146), (-3146));
      node0.putIntProp((-3146), (-3146));
      node0.mayMutateArguments();
      node0.isGetterDef();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      Node node1 = new Node(22, node0, node0);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node0.setLength(0);
      node1.isBlock();
      node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node1.isIf();
      Node node2 = node0.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node3 = node2.setJSDocInfo(jSDocInfo0);
      node3.mayMutateArguments();
      node0.setInputId((InputId) null);
      node0.setQuotedString();
      node0.isEquivalentTo(node1);
      node0.isAssign();
      node1.hasOneChild();
      node0.isFalse();
      // Undeclared exception!
      try { 
        node_AncestorIterable0.iterator();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node1.isDo();
      node1.isFor();
      node1.isVar();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(93);
      node3.isDebugger();
      node1.replaceChild(node0, node2);
      node3.siblings();
      node3.setChangeTime(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, 15);
      node0.isDo();
      node1.isFor();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(93);
      node3.isDebugger();
      node1.replaceChild(node0, node2);
      node3.siblings();
      node3.setChangeTime(38);
      node1.isScript();
      node3.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = new Node(135, 135, 135);
      node0.isThrow();
      Node node1 = new Node(31, node0, 40, 57);
      node1.isOnlyModifiesArgumentsCall();
      node0.isStringKey();
      node1.getNext();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = new Node(751);
      Node node1 = new Node(38, node0, node0, node0, 2, 30);
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(2);
      node1.isDebugger();
      node2.siblings();
      node1.setChangeTime(15);
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = new Node(2877, 2877, 2877);
      node0.setType(40);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newString(53, "STAR");
      node1.getSourceOffset();
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node((-1826));
      Node node1 = new Node(0, node0, node0, node0, (-183), 0);
      Node.newString(40, " is not a string node", 119, 57);
      node1.setChangeTime(54);
      node0.checkTreeEquals(node1);
      node1.isDo();
      node0.isFor();
      node0.isVar();
      Node node2 = node0.srcrefTree(node1);
      node2.isDebugger();
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1826
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber((-4485.1275909));
      node0.isEquivalentToTyped(node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newString(88, "");
      node0.isQuotedString();
      node0.isReturn();
      node0.isNull();
      node0.setQuotedString();
      Node node1 = node0.cloneNode();
      node0.isIf();
      node1.checkTreeEquals(node0);
      node1.addChildrenAfter(node0, node0);
      node0.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node0.copyInformationFrom(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = new Node(2877);
      node0.setType(40);
      node0.setString("");
      int int0 = Node.IS_CONSTANT_NAME;
      // Undeclared exception!
      try { 
        node0.isLocalResultCall();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      node0.isEquivalentTo(node0);
      node0.setString(" ");
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      String string0 = "";
      Node node0 = new Node(1408, 105, 105);
      Node node1 = new Node(52, node0, node0);
      node0.getAncestors();
      node0.setLength(39);
      node0.isBlock();
      node1.cloneNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType.toMaybeTemplateType((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node1, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      // Undeclared exception!
      try { 
        enumElementType1.getPropertyNode(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = Node.newNumber((double) 2, 2, 36);
      node0.addChildToBack(node1);
      node1.isRegExp();
      node0.siblings();
      node0.isFromExterns();
      node0.isObjectLit();
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node0.setSideEffectFlags(node_SideEffectFlags3);
      String string0 = null;
      int int0 = 289;
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newNumber((-238.2119), (-536870912), (-536870912));
      Node node1 = Node.newNumber((double) 32, (-2644), 1945);
      node0.isCast();
      node0.getLastSibling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) null);
      node2.removeChild(node1);
      node2.isArrayLit();
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newString("\"$ns.E)=CjIK");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getIntProp(30);
      Node node1 = new Node(48, node0);
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isTry();
      Node node3 = Node.newString(30, "\"$ns.E)=CjIK");
      node3.setDouble(49);
      node2.getJSType();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = new Node(67);
      Node node1 = Node.newNumber(2344.4601246477673);
      node0.isSyntheticBlock();
      node1.setSideEffectFlags((-1377));
      node0.children();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node.newString("", (-41), (-41));
      Node node0 = Node.newNumber((double) 55, 4095, 52);
      node0.setChangeTime(103);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setChangeTime(57);
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      int int0 = 132;
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(541, (Node) null);
      nodeArray0[0] = node0;
      Node node1 = null;
      try {
        node1 = new Node(int0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = new Node(16777216, (-3558), 16777216);
      node0.setVarArgs(true);
      Node node1 = new Node((-3558), node0, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.clonePropsFrom(node1);
      Node.newNumber((double) node0.DIRECTIVES);
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      int int0 = 114;
      Node node0 = Node.newString("8'", 0, 114);
      node0.toStringTree();
      node0.addSuppression("8'");
      Node node1 = null;
      node0.clonePropsFrom((Node) null);
      node0.setLineno(int0);
      // Undeclared exception!
      try { 
        node0.isOnlyModifiesThisCall();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = Node.newNumber((-2724.752173));
      node0.isNoSideEffectsCall();
      node0.isVarArgs();
      Node node1 = new Node(2, node0, 39, 42);
      Node node2 = Node.newString("F^j/4^v");
      Node node3 = node1.clonePropsFrom(node0);
      node0.setIsSyntheticBlock(false);
      node0.isEquivalentTo(node1, false, false, false);
      node3.isTypeOf();
      node2.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node1.isDo();
      node1.isFor();
      node1.isVar();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(93);
      node3.isDebugger();
      node1.replaceChild(node0, node2);
      node3.siblings();
      node3.setChangeTime(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setChangeTime(51);
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newString(96, "");
      node0.isCatch();
      node0.isNull();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(4095, node0, node0, node0, 47, 0);
      node0.isOr();
      node0.isEmpty();
      node1.isRegExp();
      Node node2 = Node.newString(38, "");
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, 15);
      node0.isDo();
      node1.isFor();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(93);
      node3.isDebugger();
      node1.replaceChild(node0, node2);
      node3.siblings();
      node3.setChangeTime(38);
      node2.isUnscopedQualifiedName();
      node3.hasChildren();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      node0.removeFirstChild();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getString();
      Node node1 = new Node(36, 57, 0);
      node0.getAncestor(42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      SimpleErrorReporter.getMessage0("c6^bXof");
      JSType[] jSTypeArray0 = null;
      jSTypeRegistry0.createParameters(jSTypeArray0);
      int int0 = 1270;
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newString("", 16, 16);
      Node node1 = Node.newNumber((-1918.899197439323), 4095, 52);
      node0.isQualifiedName();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("", (-79), 30);
      String string0 = node1.toStringTree();
      node0.addSuppression("");
      node0.setLineno(2);
      node1.isOnlyModifiesThisCall();
      node1.isVarArgs();
      Node node2 = Node.newNumber((double) 37);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Node node3 = new Node(115, node1, node0, node0, node2);
      node3.hasOneChild();
      node1.isIn();
      node2.replaceChild(node1, node1);
      node1.setString(string0);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(19, "com.google.javascript.rhino.jstype.ProxyObjectType");
      node0.isDo();
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newNumber((-238.2119), (-536870912), (-536870912));
      Node node1 = Node.newNumber((double) 32, (-2644), 1945);
      node0.isCast();
      Node node2 = Node.newString(4, "", (-403), (-1838));
      Node node3 = new Node(56, node1, node2, node2, 54, (-403));
      node3.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      Node node1 = Node.newNumber((double) 8);
      node1.removeChild(node0);
      // Undeclared exception!
      try { 
        node0.hasOneChild();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node1.isDo();
      node1.isFor();
      node1.isVar();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(93);
      node3.isDebugger();
      node1.replaceChild(node0, node2);
      node3.siblings();
      node3.setChangeTime(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node3.getSourceFileName();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      Node node1 = Node.newNumber((double) 42);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.setIsSyntheticBlock(false);
      node1.isString();
      node0.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags5.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags6.setThrows();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesGlobalState();
      node_SideEffectFlags7.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node1.hasOneChild();
      node0.setString("com.google.javascript.rhino.Node$NumberNode");
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node.newNumber((double) 2, 2, 36);
      node0.setInputId((InputId) null);
      Node node1 = Node.newString(1, "\"_wItqxn");
      node1.isString();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newString(48, "", 48, 2);
      Node node1 = new Node(57, node0, 31, 4095);
      node1.isObjectLit();
      node1.setIsSyntheticBlock(false);
      node1.isThis();
      node1.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      Node node1 = Node.newNumber((double) 42);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isTypeOf();
      node0.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("", 57, 57);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getSourceFileName();
      node0.removeProp((-2315));
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.hasOneChild();
      node0.isName();
      node0.isTrue();
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = new Node(4, (-3558), 4);
      Node node1 = new Node((-3558), node0, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.setLength(0);
      node1.isBlock();
      Node node2 = new Node(40, node1, node0, 0, 32);
      node0.isEquivalentToShallow(node1);
      node1.isIf();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newString("|");
      Node node1 = new Node(4, node0, node0, node0, node0);
      Node node2 = new Node(1177, node0, node1, 1, 56);
      Node node3 = new Node(node0.SLASH_V, node0, node0, node2);
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      node0.siblings();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node_SideEffectFlags0.setMutatesArguments();
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getBooleanProp(0);
      node0.getIntProp(30);
      node0.putBooleanProp(306, true);
      node0.isOnlyModifiesArgumentsCall();
      node0.getExistingIntProp(409);
      node0.mayMutateArguments();
      node0.isFalse();
      node0.isUnscopedQualifiedName();
      node0.getDouble();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      Node node1 = new Node(43);
      node1.isOnlyModifiesArgumentsCall();
      node0.isLocalResultCall();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.type = (-3571);
      node0.isScript();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
      Node node0 = Node.newString(2393, "SHNE", 123, 27591);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isFromExterns();
      JSType[] jSTypeArray0 = new JSType[0];
      SimpleErrorReporter.getMessage("Object#Element", jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.addChildrenToBack(node1);
      node0.isGetElem();
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.clearAllFlags();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property Object#Element
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      Node node1 = new Node(16, nodeArray0);
      node0.addChildToFront(node1);
      node0.isArrayLit();
      node1.isEquivalentToShallow(node0);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = new Node((-2073), 2877, (-2073));
      Node node1 = Node.newString(57, "is_namespace");
      node1.addChildToFront(node0);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      Node node1 = Node.newNumber((double) 42);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isTypeOf();
      node0.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.setThrows();
      node0.removeProp(46);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node1.isDo();
      node1.isFor();
      node1.isVar();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(93);
      node3.isDebugger();
      node1.replaceChild(node0, node2);
      node3.siblings();
      node3.setChangeTime(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node3.setString("3rp,=D");
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newString("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.hasOneChild();
      node1.isName();
      node0.isTrue();
      node0.isSyntheticBlock();
      node0.toString(false, false, true);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      node0.toString(false, false, false);
      Node node1 = new Node(39, node0, node0, node0, node0, 4, (-2316));
      node0.copyInformationFrom(node1);
      Node node2 = new Node((-249), node1, node1, node0, (-249), 1812);
      node0.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newString("", 678, 678);
      Node node1 = new Node(103, node0);
      Node node2 = Node.newNumber((double) 36);
      node2.hasChild(node1);
      node0.isParamList();
      node2.copyInformationFrom(node0);
      node1.setChangeTime(29);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(719, 112, 719);
      node0.isScript();
      Node node1 = new Node(83, node0, 4095, 36);
      boolean boolean0 = node0.isStringKey();
      Node node2 = new Node(57, node1, node1, node1, node0);
      int int0 = (-987);
      Node node3 = node2.getAncestor(int0);
      node3.setOptionalArg(boolean0);
      // Undeclared exception!
      try { 
        node2.isDelProp();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      node0.getSourcePosition();
      node0.isLabelName();
      Node node1 = new Node(3027);
      Node node2 = new Node(46, node1);
      node2.addChildToBack(node0);
      Node node3 = new Node((-2642), 46, 57);
      node3.hasChild(node0);
      node1.isExprResult();
      Node node4 = new Node(2511, node3, node2, node2, node0, 4, 32);
      node4.removeChildren();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = new Node(170, 170, 170);
      node0.isScript();
      Node node1 = new Node(31, node0, 40, 57);
      Node node2 = new Node(53, node1, node0, node0, node0, 4, Integer.MAX_VALUE);
      node1.removeProp(node2.INFERRED_FUNCTION);
      node2.hasMoreThanOneChild();
      // Undeclared exception!
      try { 
        node1.isOnlyModifiesThisCall();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-689));
      Node node0 = Node.newNumber((double) (-689));
      node0.siblings();
      Locale locale0 = Locale.CANADA;
      locale0.getUnicodeLocaleKeys();
      node0.isNew();
      node0.mayMutateGlobalStateOrThrow();
      node0.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.setNoSideEffects(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = node1.cloneNode();
      node2.setVarArgs(false);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = new Node(1073741828);
      node0.isAnd();
      node0.setString(" ");
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isContinue();
      node0.isTrue();
      Node node1 = new Node(16);
      node1.isDebugger();
      node1.isNew();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      node0.getAncestors();
      node0.setLength(0);
      node0.isBlock();
      Node node1 = node0.cloneNode();
      node0.isEquivalentToShallow(node0);
      node0.isIf();
      node0.addChildrenAfter(node0, node0);
      node0.getStaticSourceFile();
      node0.copyInformationFrom(node1);
      // Undeclared exception!
      try { 
        node1.isStringKey();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = new Node(16777216, (-3558), 16777216);
      node0.setVarArgs(false);
      Node node1 = new Node(52, node0, 53, 46);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.clonePropsFrom(node1);
      Node.newNumber((double) 48);
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(2753.4038989012747, 2103, 3593);
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.getString();
      Node node1 = new Node(4095);
      Node node2 = node1.getAncestor(52);
      node0.hasChild(node1);
      node1.isParamList();
      Node node3 = node0.copyInformationFrom((Node) null);
      node1.setChangeTime(node3.COLUMN_MASK);
      // Undeclared exception!
      try { 
        node2.isExprResult();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node((-2083), 678, (-2083));
      Node node1 = new Node(1, node0, node0);
      node1.getAncestors();
      node0.setLength((-37));
      Node node2 = new Node(54, node1, node1, node1, (-2005), 1613);
      node2.isBlock();
      Node node3 = node2.cloneNode();
      node3.isEquivalentToShallow(node1);
      Node node4 = new Node(55);
      node2.isDebugger();
      node1.replaceChild(node3, node3);
      node0.siblings();
      int int0 = (-81);
      node1.setChangeTime(int0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setThrows();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      jSTypeArray0[0] = jSType0;
      Node node0 = new Node(1, 0, 1);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("RKP", node0, jSTypeArray0[0]);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      jSTypeArray0[1] = (JSType) enumType1;
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      enumType1.autoboxesTo();
      Node node2 = node1.getChildBefore(node0);
      node0.putProp(node1.DECR_FLAG, node1);
      node2.removeFirstChild();
      // Undeclared exception!
      try { 
        node1.getJSType();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, 12);
      Node node2 = Node.newNumber((double) 15, 32, 127);
      node0.isCast();
      node1.removeChild(node1);
      node2.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = new Node(0, (-1826), (-1826));
      Node node1 = new Node(0, node0, node0, node0, (-183), 0);
      Node.newString(40, " is not a string node", 119, 57);
      node1.setChangeTime(54);
      node0.checkTreeEquals(node1);
      node1.isDo();
      node0.isFor();
      node0.isVar();
      Node node2 = node0.srcrefTree(node1);
      node2.isDebugger();
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newNumber(25.3061246501092);
      Node node1 = new Node(56, node0, node0);
      node1.getAncestors();
      Node node2 = new Node(8, node1);
      node2.setLength(1457);
      node1.isEquivalentToShallow(node1);
      node2.isLocalResultCall();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newString((-1965), ")M_@", (-1965), 130);
      Node node1 = new Node((-1965), node0, node0, node0, 40, 57);
      node0.getIntProp(32);
      node0.isQualifiedName();
      node1.setSourceEncodedPositionForTree(57);
      node1.isEquivalentToTyped(node0);
      node1.getBooleanProp(38);
      node0.getString();
      node1.getStaticSourceFile();
      node0.hasChildren();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = Node.newString(1035, "53&wb(");
      node0.isCase();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      Node node1 = new Node(22, node0, node0);
      node1.getAncestors();
      node0.setLength(0);
      node1.isBlock();
      Node node2 = node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node1.isIf();
      node1.getStaticSourceFile();
      node1.copyInformationFrom(node0);
      Node node3 = new Node(32, node2, node0, node1, node0, 83, 4);
      int int0 = 4478;
      node3.setChangeTime(int0);
      node3.isExprResult();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node1.isDo();
      node1.isFor();
      node1.isVar();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(93);
      node3.isDebugger();
      node0.toString();
      node1.replaceChild(node0, node2);
      node3.siblings();
      node3.setChangeTime(node1.SYNTHETIC_BLOCK_PROP);
      // Undeclared exception!
      try { 
        node0.isScript();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 678
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = Node.newString(48, "", 48, 2);
      Node node1 = new Node(57, node0, 31, 4095);
      node1.checkTreeEqualsImpl(node0);
      node1.isObjectLit();
      node1.isThis();
      node1.srcrefTree(node0);
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = new Node(22, 22, 22);
      Node node1 = new Node(30, node0);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node.newString(55, "Object#Element");
      node1.addChildAfter(node2, node0);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(22, 22, 22);
      Node node1 = new Node(22, node0, node0);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node.newNumber(698.415840904115, 8, 1255);
      node1.addChildAfter(node2, node0);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node.extractCharno((-1596));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      Node node0 = new Node((-1596), (Node) null, (Node) null, 39, 41);
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = new Node((-1826));
      Node node1 = new Node(0, node0, node0, node0, (-183), 0);
      node1.isEquivalentTo(node0);
      Node.newString(40, " is not a string node", 119, 57);
      node1.setChangeTime(54);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.areAllFlagsSet();
      node0.checkTreeEquals(node1);
      node1.isDo();
      node0.isFor();
      node0.isVar();
      Node node2 = node0.srcrefTree(node1);
      node2.isDebugger();
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1826
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = new Node((-1826));
      Node node1 = new Node(0, node0, node0, node0, (-183), 0);
      Node node2 = Node.newString(40, " is not a string node", 119, 57);
      node0.isFor();
      node2.isVar();
      Node node3 = node1.srcrefTree(node0);
      Node node4 = new Node(421);
      node2.isDebugger();
      node3.replaceChild(node2, node0);
      node4.siblings();
      node2.setChangeTime(node3.OPT_ARG_NAME);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = (-1583);
      node1.setChangeTime(int0);
      // Undeclared exception!
      try { 
        node2.isUnscopedQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isReturn();
      Node node1 = new Node(153, node0, node0);
      node1.isIf();
      node1.checkTreeEquals(node0);
      node1.getBooleanProp(0);
      node1.isQualifiedName();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = Node.newNumber((double) 1, 57, 1);
      node1.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node1.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newString("8'", 0, 114);
      node0.toStringTree();
      node0.addSuppression("8'");
      node0.setLineno(114);
      node0.isOnlyModifiesThisCall();
      node0.isVarArgs();
      node0.toString(true, true, true);
      node0.isTry();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("STRING 8' 0\n", true);
      SimpleSourceFile simpleSourceFile1 = new SimpleSourceFile("STRING 8' 114 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]", false);
      simpleSourceFile1.getLineOffset(46);
      SimpleSourceFile simpleSourceFile2 = new SimpleSourceFile(":iY", false);
      simpleSourceFile2.getLineOffset(55);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.setChangeTime((-1114));
      node0.isNE();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newString(111, "La)~");
      node0.isEquivalentToShallow(node0);
      node0.isNE();
      node0.isVoid();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.removeProp(155);
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(16, nodeArray0);
      node0.addChildToFront(node1);
      node0.isArrayLit();
      node1.isDelProp();
      node1.getChildCount();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.getType("0*u");
      node0.setJSType((JSType) null);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = Node.newNumber((-238.2119), (-536870912), (-536870912));
      Node node1 = Node.newNumber((double) 32, (-2644), 1945);
      node1.isHook();
      Node.newString(4, "\"", (-403), (-1838));
      Node node2 = Node.newNumber(2875.1);
      node2.addChildrenToBack(node0);
      node0.removeProp(101);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newString(98, "");
      node0.isHook();
      node0.isNull();
      node0.isAdd();
      Node node1 = node0.cloneNode();
      node0.isQualifiedName();
      node1.getDouble();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      Node node1 = Node.newNumber((double) 51, 57, 124);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isDec();
      node0.hasChildren();
      node1.isTrue();
      Node node2 = new Node(46, node0, node1, node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node2);
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = new Node(69);
      node0.isTrue();
      Iterable<Node> iterable0 = new Stack<Node>();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.hasChildren();
      node0.isVarArgs();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newString(44, "La)~");
      node0.isTrue();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(1, node0, node0);
      node1.hasChildren();
      node1.getExistingIntProp(42);
      // Undeclared exception!
      try { 
        node0.isRegExp();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 42
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      node0.setType((-1342));
      Node node1 = new Node(22, node0, node0);
      node1.getAncestors();
      node0.setLength(0);
      node1.isBlock();
      Node node2 = node0.cloneNode();
      node0.isEquivalentToShallow(node1);
      node1.isIf();
      node1.addChildrenAfter(node0, node0);
      node1.getStaticSourceFile();
      Node node3 = node1.copyInformationFrom(node2);
      node3.setLineno(node2.FLAG_ARGUMENTS_UNMODIFIED);
      int int0 = null;
      try {  
      int0 = Node.COLUMN_BITS;
      } catch(MockIllegalArgumentException e) {}
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      node0.isOptionalArg();
      node0.toStringTree();
      Node node1 = new Node(node0.FLAG_LOCAL_RESULTS, nodeArray0);
      // Undeclared exception!
      try { 
        node0.addChildToFront(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1024
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      node0.isQualifiedName();
      Node node1 = Node.newString(15, "thisType");
      node1.isEquivalentToTyped(node0);
      node0.setDirectives((Set<String>) null);
      Node.extractLineno((-3409));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node0.isDec();
      node0.hasChildren();
      Node node2 = new Node((-344));
      node1.checkTreeEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      Node node1 = new Node(22, node0, node0);
      node1.getAncestors();
      node0.getJSDocInfo();
      node0.setLength(0);
      node1.isBlock();
      Node node2 = node0.cloneNode();
      node1.isIf();
      node2.checkTreeEquals(node1);
      node1.addChildrenAfter(node0, node0);
      node1.getStaticSourceFile();
      Node node3 = node1.copyInformationFrom(node2);
      // Undeclared exception!
      try { 
        node3.removeFirstChild();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = Node.newNumber((-2724.752173));
      node0.isNoSideEffectsCall();
      node0.isVarArgs();
      Node node1 = Node.newNumber((-2724.752173));
      Node node2 = new Node(30, node1, 39, 42);
      node0.isDo();
      node2.isFor();
      node2.isVar();
      node2.srcrefTree(node0);
      node0.isDebugger();
      node0.replaceChild(node2, node2);
      // Undeclared exception!
      try { 
        node0.isName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      Node node1 = new Node(16, nodeArray0);
      node0.addChildToFront(node1);
      node0.isOptionalArg();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = Node.newString(1035, "53&wb(");
      node0.isCase();
      node0.isContinue();
      node0.isThrow();
      node0.getQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node1 = new Node(50, node0, node0, (Node) null, 132, (-2834));
      node0.addChildAfter(node1, node1);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      Node node1 = Node.newString("unexpected prop id ", 57, 98);
      node1.addChildrenToFront(node0);
      node0.isEquivalentToShallow(node1);
      node0.isLocalResultCall();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      Node node1 = new Node(22, node0, node0);
      node1.addChildrenToFront(node0);
      node1.getAncestors();
      int int0 = 0;
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(101);
      node0.isOnlyModifiesThisCall();
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(148);
      Node node1 = Node.newNumber((double) 4095);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node node2 = new Node(47, node0, node1);
      node2.isThis();
      node2.addChildrenToFront(node0);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newString("CATCH", 126, 5695);
      Node node1 = new Node(1, node0, node0, node0);
      node1.addChildrenToFront(node1);
      node0.removeChild(node1);
      node0.mayMutateArguments();
      node0.clonePropsFrom(node1);
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString((-2542), "^_");
      Node node1 = new Node(3202, node0);
      node1.children();
      node1.putIntProp(53, (-183));
      node1.mayMutateArguments();
      node1.getChildCount();
      node0.isSwitch();
      node0.isSwitch();
      node0.isGetterDef();
      Node node2 = node1.getLastChild();
      node2.setSideEffectFlags(29);
      node2.addChildAfter(node1, node1);
      node1.detachFromParent();
      int int0 = 991;
      // Undeclared exception!
      try { 
        node2.getBooleanProp(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2542
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newString(48, "", 48, 2);
      Node node1 = new Node(57, node0, 31, 4095);
      node1.children();
      node1.isObjectLit();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = Node.newString(128, "rexvn3QX[qt4");
      Node node1 = new Node(57);
      node1.isDebugger();
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags((-3406));
      Node node2 = Node.newString(110, "SETTER_DEF", 49, 4095);
      node1.getJSDocInfo();
      node2.isSwitch();
      node0.isAssign();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node1.getLength();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = new Node((-3146), (-3146), (-536870912));
      node0.putIntProp((-536870912), (-536870912));
      node0.mayMutateArguments();
      node0.isGetterDef();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = Node.newNumber((-1592.255));
      node0.isIf();
      node0.isVarArgs();
      Node node1 = new Node(4095, node0, node0);
      node1.toString(false, true, false);
      String string0 = "F^j/4^v";
      Node node2 = Node.newString(string0);
      // Undeclared exception!
      try { 
        node2.isScript();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(16, nodeArray0);
      node0.addChildToFront(node1);
      node0.isArrayLit();
      node1.isDelProp();
      node1.getChildCount();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString(1024, "com.google.javascript.rhino.jstype.ProxyObjectType");
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setOptionalArg(false);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      jSTypeRegistry0.getType("^4W%u");
      node0.setJSType((JSType) null);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newNumber((-238.2119), (-536870934), (-536870934));
      node0.setSourceEncodedPositionForTree((-536870934));
      Node node1 = Node.newNumber((double) 53);
      Node node2 = new Node(51, node1, node0);
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newNumber((-238.2119), (-536870934), (-536870934));
      node0.setSourceEncodedPositionForTree((-536870934));
      Node node1 = Node.newNumber((double) 32, (-2644), 1945);
      node0.isCast();
      Node node2 = Node.newNumber((double) 30, (-536870934), 8);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.clearTemplateTypeNames();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) null);
      node3.removeChild(node1);
      node3.isArrayLit();
      node0.getType();
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("4$[x>8rV");
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isContinue();
      Node node1 = Node.newString(38, "U_yGc!T{W@@g9");
      node1.getExistingIntProp(50);
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isContinue();
      node0.isThrow();
      int int0 = Node.IS_CONSTANT_NAME;
      node0.isLocalResultCall();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = Node.newNumber((double) 4095);
      Node node1 = new Node(36, node0, (Node) null, (Node) null, 126, 596);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      Node.newNumber((double) 2, 2, (-2452));
      node1.isCast();
      Node node2 = node0.getLastSibling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) null);
      node0.removeChild(node2);
      node1.isArrayLit();
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newString("8'", 0, 114);
      node0.toStringTree();
      node0.addSuppression("8'");
      node0.setLineno(114);
      node0.isOnlyModifiesThisCall();
      node0.isVarArgs();
      node0.toString(true, true, true);
      node0.isTry();
      Node node1 = Node.newString((-219), "STRING 8' 114 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]");
      Node node2 = new Node(130, node0, node1, node1, 33, 117);
      Node node3 = new Node(32781, node2, node2, node1);
      node3.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString((-2918), "pP1$~5oeJIh#I");
      int int0 = (-4096);
      Node node1 = new Node((-4096), node0);
      Node node2 = new Node(4095, node0, node0, node1);
      node1.getProp(int0);
      // Undeclared exception!
      try { 
        node1.useSourceInfoFromForTree(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = new Node(28, 28, 28);
      Node node1 = Node.newNumber((double) 36, 32, 2284);
      node1.getInputId();
      node0.addChildAfter(node1, node1);
      int int0 = 132;
      // Undeclared exception!
      try { 
        node1.putIntProp(node0.INPUT_ID, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newString(106, "unexpected prop id ");
      node0.getInputId();
      node0.isObjectLit();
      node0.isWith();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newString(88, "");
      node0.isQuotedString();
      node0.isReturn();
      node0.isNull();
      node0.setQuotedString();
      node0.setWasEmptyNode(false);
      node0.cloneTree();
      node0.setWasEmptyNode(false);
      node0.setWasEmptyNode(false);
      node0.isGetterDef();
      node0.isBlock();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newString(96, "");
      node0.isCatch();
      node0.isNull();
      node0.setQuotedString();
      node0.isWith();
      node0.isBlock();
      node0.isAssign();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newString(121, "");
      node0.isQuotedString();
      node0.isCatch();
      node0.isReturn();
      Stack<JSType> stack0 = new Stack<JSType>();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      Node node1 = new Node(46, node0, node0, node0, node0, 40, 49);
      node1.getAncestors();
      node0.setLength(19);
      node1.isDec();
      Node node2 = node0.cloneNode();
      node2.addSuppression("-l_pP:Ts{t35");
      node2.isReturn();
      Stack<JSType> stack0 = new Stack<JSType>();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node1.isDo();
      node1.isFor();
      node1.isVar();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(57, node1, node1, node0, node0);
      node3.removeProp(node2.INFERRED_FUNCTION);
      node3.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = new Node(751);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.isNull();
      Node node2 = new Node(2905, node1, node1, node0, node1);
      node2.isDelProp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node0.COLUMN_MASK);
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.clearAllFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = new Node(135, 135, 135);
      node0.isScript();
      Node node1 = new Node(31, node0, 40, 57);
      node0.isStringKey();
      Node node2 = new Node(4095, node0, node1, node0, node0);
      // Undeclared exception!
      try { 
        node2.isDelProp();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.mayMutateGlobalStateOrThrow();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(50, nodeArray0);
      node0.addChildToFront(node1);
      node1.isArrayLit();
      node1.isDelProp();
      node0.getChildCount();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newString(19, "com.google.javascript.rhino.jstype.ProxyObjectType");
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(16, nodeArray0);
      node0.addChildToFront(node1);
      node0.isArrayLit();
      node1.isDelProp();
      node1.getChildCount();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString(1024, "com.google.javascript.rhino.jstype.ProxyObjectType");
      node2.setCharno(57);
      node2.isScript();
      node1.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, 12);
      Node node2 = Node.newNumber((double) 15, 32, 127);
      Node.newString(51, "com.google.javascript.rhino.jstype.ProxyObjectType");
      node2.setCharno(38);
      node2.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      node0.isQualifiedName();
      Node node1 = Node.newString(15, "thisType");
      node1.isEquivalentToTyped(node0);
      node0.setDirectives((Set<String>) null);
      Node.extractLineno((-3409));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = Node.newString(48, "thisType", 110, (-3409));
      Node node3 = Node.newNumber((double) 46);
      node1.addChildrenToBack(node3);
      node3.removeProp(57);
      node2.isOr();
      node2.isThrow();
      node3.removeChild(node1);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = new Node((-2083), 678, (-2083));
      Node node1 = new Node(1, node0, node0);
      node1.getAncestors();
      node0.setLength((-37));
      Node node2 = new Node(54, node1, node1, node1, (-2005), 1613);
      node2.isBlock();
      Node node3 = node2.cloneNode();
      node3.isSyntheticBlock();
      Node node4 = new Node(55);
      node4.getLastChild();
      Node node5 = node2.useSourceInfoIfMissingFrom(node0);
      Node.extractCharno(56);
      node0.getInputId();
      node0.isNoSideEffectsCall();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node4.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("`2{J~eH");
      node5.isString();
      node3.isDec();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      node0.isEquivalentToShallow(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Ta");
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(118);
      node0.setType(93);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append(",|~jg)o");
      node_FileLevelJsDocBuilder0.append("mDOMI_^.5p;rO;vh");
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("Type names cannot contain template annotations.");
      node0.getBooleanProp(4095);
      node0.isDec();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-689));
      Node node0 = Node.newNumber((double) (-689));
      node0.siblings();
      Locale locale0 = Locale.CANADA;
      locale0.getUnicodeLocaleKeys();
      node0.isNew();
      node0.mayMutateGlobalStateOrThrow();
      node0.isAnd();
      node0.setWasEmptyNode(true);
      node0.isGetterDef();
      node0.isBlock();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node0.getJSType();
      Node node1 = Node.newString("");
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newString(96, "");
      node0.siblings();
      node0.isReturn();
      node0.setQuotedString();
      node0.isDelProp();
      node0.isFromExterns();
      node0.isObjectLit();
      node0.isLabel();
      node0.isQuotedString();
      node0.getBooleanProp(1073741823);
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newString(88, "");
      node0.isQuotedString();
      node0.isReturn();
      node0.isNull();
      node0.setQuotedString();
      node0.setWasEmptyNode(false);
      Node node1 = node0.cloneTree();
      node0.setWasEmptyNode(false);
      node1.removeFirstChild();
      node0.setWasEmptyNode(false);
      node0.isGetterDef();
      node0.isBlock();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node1.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = new Node((-5213), 10, 10);
      node0.isOnlyModifiesThisCall();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = new Node(1, nodeArray0);
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newString("GLOBAL_THIS");
      node0.isSetterDef();
      Node node1 = new Node(1465);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = new Node(26, node1, node0, node1, (-212), 50);
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      Node node3 = new Node(1, nodeArray0, 0, 4);
      node1.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node(4, (-3558), 4);
      Node node1 = new Node((-3558), node0, node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.setLength(0);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      Node node2 = new Node((-3436), nodeArray0, 43, 4095);
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1501));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(29, nodeArray0, 38, 52);
      node2.isDec();
      // Undeclared exception!
      try { 
        nodeArray0[0].cloneNode();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newString(",gzfRKo72-%}ol-!LFf", 43, 77);
      Node node1 = new Node(4575, node0);
      Node node2 = Node.newNumber((-2720.0));
      node1.hasChild(node2);
      node2.isParamList();
      node1.copyInformationFrom(node0);
      node1.setChangeTime((-1626));
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = new Node(132);
      Node node1 = new Node(36, node0, node0, node0, 2067, (-1359));
      Node node2 = Node.newString(31, "QcHAf\"WMi3i", 36, 51);
      node1.isFor();
      node2.isVar();
      node0.srcrefTree(node1);
      Node node3 = new Node(56);
      node3.isDebugger();
      node0.replaceChild(node1, node1);
      node1.siblings();
      node0.setChangeTime(node1.MAX_COLUMN_NUMBER);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node1.setChangeTime(node3.CHANGE_TIME);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = new Node(152, 152, 152);
      Node node1 = new Node(152, node0);
      node1.checkTreeEqualsImpl(node0);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node1.toStringTree();
      boolean boolean0 = node0.isDebugger();
      boolean boolean1 = false;
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("'&KYkn,] 1nL!wP~$+#", true);
      node0.putProp((-35), simpleSourceFile0);
      node1.isLocalResultCall();
      node1.isFromExterns();
      node0.getExistingIntProp(53);
      node1.isEquivalentTo(node0, boolean0, boolean0, boolean1);
      node1.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      int int0 = 152;
      Node node0 = new Node(152, 152, 152);
      Node node1 = new Node(152, node0);
      node1.checkTreeEqualsImpl(node0);
      node0.getSideEffectFlags();
      node1.getSourceFileName();
      node0.isDebugger();
      int int1 = (-35);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("'&KYkn,] 1nL!wP~$+#", true);
      simpleSourceFile0.getLineOffset(0);
      // Undeclared exception!
      try { 
        node0.putProp(int1, simpleSourceFile0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number 0
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = new Node(2877);
      node0.setType(40);
      int int0 = Node.IS_CONSTANT_NAME;
      node0.isLocalResultCall();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newString("\"$ns.E)=CjIK");
      node0.setIsSyntheticBlock(false);
      node0.isString();
      node0.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(726);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags6.setThrows();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags7.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags6.setMutatesGlobalState();
      node0.hasOneChild();
      node0.setString("com.google.javascript.rhino.Node$NumberNode");
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("wHX>c0MgC=6D`tGL", 0, 0);
      Node node1 = new Node(36, node0);
      Node node2 = new Node(52);
      node0.isString();
      node1.isNew();
      node1.isOnlyModifiesThisCall();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = new Node(67);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node2 = Node.newString(0, "Object#Key");
      node2.setString("Object#Element");
      node0.addChildAfter(node1, node2);
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      Node node1 = Node.newNumber((double) 42);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setDouble((-2275.62719186));
      Node node2 = Node.newString(46, "");
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("hNQSZ 4>Z)", true);
      node0.hasChild(node1);
      node1.isParamList();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node2;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      nodeArray0[4] = node1;
      Node node3 = Node.newString("(a5_");
      nodeArray0[5] = node3;
      nodeArray0[6] = node0;
      Node node4 = new Node(37, nodeArray0);
      node1.copyInformationFrom(node4);
      nodeArray0[4].isExprResult();
      node0.setSideEffectFlags(node4.OPT_ARG_NAME);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.putBooleanProp(27, true);
      node0.isLabelName();
      Node node1 = Node.newNumber((double) 38, 1207, 57);
      node1.setDouble((-4969.187879796113));
      node0.isCall();
      node0.addChildAfter(node1, node1);
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newString(124, "unexpected prop id ");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(0, nodeArray0, 124, (-3865));
      Node node2 = new Node(16, nodeArray0);
      node2.addChildToFront(node0);
      nodeArray0[0].isArrayLit();
      // Undeclared exception!
      try { 
        node2.isEquivalentToShallow(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node((-1826));
      Node node1 = new Node(128, node0, node0, node0, 12, (-2070));
      Node node2 = Node.newString(1078, " is not a string node", 37, 4095);
      node0.isFor();
      node0.isVar();
      Node node3 = node2.srcrefTree(node1);
      Node node4 = new Node(52);
      node2.isDebugger();
      Node node5 = new Node(15);
      node3.replaceChild(node5, node5);
      node2.siblings();
      int int0 = 9;
      node3.setChangeTime(int0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node5.setChangeTime(node3.FLAG_GLOBAL_STATE_UNMODIFIED);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = new Node((-1826));
      Node node1 = new Node(0, node0, node0, node0, (-183), 0);
      Node node2 = Node.newString(40, " is not a string node", 119, 57);
      node0.isFor();
      node2.isVar();
      Node node3 = node1.srcrefTree(node0);
      Node node4 = new Node(421);
      node0.isEquivalentTo(node3, false, false, false);
      node3.replaceChild(node2, node0);
      node4.siblings();
      node2.setChangeTime(node3.OPT_ARG_NAME);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = (-1583);
      node1.setChangeTime(int0);
      // Undeclared exception!
      try { 
        node2.isUnscopedQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      Node node1 = new Node(36, node0);
      Node node2 = new Node(120);
      node2.children();
      node1.putIntProp(0, 1196);
      node1.mayMutateArguments();
      node1.getChildCount();
      node2.isSwitch();
      node2.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node node3 = new Node(47, node1, node1, (-1775), 57);
      Node node4 = new Node(2, node1, node1, (-618), 16);
      node4.isDec();
      node4.hasChildren();
      node1.isTrue();
      int int0 = 9;
      Node node5 = new Node(int0, node4, node0, node3);
      Node.NodeMismatch node_NodeMismatch0 = null;
      try {
        node_NodeMismatch0 = new Node.NodeMismatch(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = null;
      node0.removeChild((Node) null);
      node0.replaceChild(node1, node1);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node((-862048943));
      node0.isParamList();
      Node node1 = node0.copyInformationFrom(node0);
      node0.addChildrenToBack(node1);
      node1.removeProp(48);
      node0.isOr();
      node1.isThrow();
      node0.removeChild(node1);
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      Node node2 = Node.newNumber(42.0, 32, 115);
      node0.isCast();
      Node node3 = Node.newNumber((double) 47, (-1513), 16);
      node1.removeChild(node3);
      node1.isArrayLit();
      node1.getType();
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = new Node(9, 9, 9);
      node0.isTry();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.getProp((-1516));
      Node node2 = Node.newString(15, "thisType");
      jSDocInfo0.setStruct();
      node0.setDirectives((Set<String>) null);
      node1.getExistingIntProp((-344));
      int int0 = (-3441);
      Node.extractLineno(int0);
      node1.isBreak();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      // Undeclared exception!
      try { 
        node2.siblings();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -344
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = new Node(111, 111, 111);
      node0.isIn();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.mayMutateGlobalStateOrThrow();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(50, nodeArray0);
      node0.addChildToFront(node1);
      node1.isArrayLit();
      node1.isDelProp();
      node0.getChildCount();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString(19, "com.google.javascript.rhino.jstype.ProxyObjectType");
      node2.getBooleanProp(1796);
      node0.isScript();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = Node.newNumber((-238.2119), (-536870934), (-536870934));
      node0.setSourceEncodedPositionForTree((-536870934));
      Node[] nodeArray0 = new Node[19];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      Node node1 = Node.newString("q`v1aC8n~UN", 55, 39);
      node1.setType(331);
      int int0 = Node.COLUMN_BITS;
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      Node node1 = Node.newNumber(1.0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.setIsSyntheticBlock(false);
      node1.isString();
      node0.isLabel();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags5.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags7.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node1.hasOneChild();
      node0.setString("(n");
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-171), nodeArray0, (-171), 1);
      node0.useSourceInfoFromForTree((Node) null);
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.mayMutateGlobalStateOrThrow();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(50, nodeArray0);
      node0.addChildToFront(node1);
      node1.isArrayLit();
      node1.isDelProp();
      node0.getChildCount();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString(19, "com.google.javascript.rhino.jstype.ProxyObjectType");
      node2.getBooleanProp(1796);
      node0.isScript();
      node2.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = new Node(22, 22, 22);
      Node node1 = new Node(22, node0, node0);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node2 = Node.newString(55, "Object#Element");
      node1.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = Node.newString(96, "");
      node0.isHook();
      node0.isNull();
      node0.isAdd();
      Node node1 = Node.newString(49, "CharMatcher.isNot('");
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isCase();
      node0.isWhile();
      node0.hasOneChild();
      node0.isName();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setStruct();
      Node.extractLineno((-3409));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node0 = Node.newString("Y=V", 63, 132);
      node0.isCase();
      node0.isWhile();
      node0.hasOneChild();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getBooleanProp((-719));
      node0.getIntProp(30);
      Node node1 = new Node(46, node0, node0, node0, node0, 30, 15);
      node1.removeProp(15);
      node0.isInstanceOf();
      Node node2 = new Node(113);
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = new Node((-689), (-689), (-689));
      Node node1 = new Node(32, node0, node0, node0, node0);
      Node node2 = Node.newString(29, "OVw()nPOq-6bn/i-G%b", 43, 12);
      Node node3 = node2.srcrefTree(node0);
      Node node4 = new Node(57, node1, node0, node0);
      node3.isDebugger();
      node2.isBlock();
      // Undeclared exception!
      try { 
        node0.isAssign();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = new Node((-1826));
      Node node1 = new Node(0, node0, node0, node0, (-183), 0);
      Node node2 = Node.newString(40, " is not a string node", 119, 57);
      node0.isFor();
      node2.isVar();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.setMutatesGlobalState();
      node0.isDec();
      node0.hasChildren();
      node2.isTrue();
      Node node3 = new Node((-789), node2, node0, node2);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node1);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node0.siblings();
      Locale locale0 = Locale.CANADA;
      locale0.getUnicodeLocaleKeys();
      node0.isNew();
      node1.mayMutateGlobalStateOrThrow();
      node0.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.setConsistentIdGenerator(false);
      jSDocInfo0.setNoSideEffects(true);
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("4$[x>8rV");
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.mayMutateGlobalStateOrThrow();
      node0.isCatch();
      Node node1 = new Node(15, node0, node0, node0, node0);
      node0.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node0 = Node.newString("", 0, 0);
      Node node1 = new Node(2981, node0, 1305, 8);
      Node node2 = new Node(0, node1);
      Node node3 = Node.newNumber((double) 42);
      node3.hasChild(node1);
      node3.isParamList();
      Node node4 = node3.copyInformationFrom(node1);
      node4.setChangeTime(2);
      node3.isExprResult();
      node4.isFunction();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newString("jzj,SF8");
      node0.isDo();
      Node node1 = new Node(29, node0);
      node1.toString();
      node1.isAdd();
      int int0 = Node.CHANGE_TIME;
      node0.isTrue();
      Node node2 = new Node(4095, node0, node1, node0, 2, 53);
      // Undeclared exception!
      try { 
        node2.isDec();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = Node.newNumber((double) 2, 2, 36);
      node0.addChildToBack(node1);
      Node node2 = Node.newNumber(0.0);
      node1.isRegExp();
      node0.siblings();
      node0.isFromExterns();
      node0.isObjectLit();
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node3 = jSDocInfo0.getAssociatedNode();
      Node node4 = new Node((-771), node1, node1, (Node) null, 7, 4095);
      node3.addChildAfter(node0, node0);
      node2.isDec();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newString(0, "o7>I%-5MM\"t");
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1035);
      node0.removeProp(108);
      node0.hasMoreThanOneChild();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = new Node((-183));
      node0.addChildAfter((Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.isDo();
      node0.isString();
      node1.replaceChildAfter(node0, node0);
      node0.isIn();
      // Undeclared exception!
      try { 
        node1.isNull();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = Node.newString("", 16, (-2647));
      node0.getString();
      Node node1 = new Node((-2647), node0, node0, node0, 1136, 56);
      node1.replaceChildAfter(node0, node0);
      Node node2 = node0.removeChildAfter(node1);
      boolean boolean0 = true;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString("Object#Key", (-2804), (-2804));
      Node node1 = Node.newNumber((-506.26682069978887));
      node0.replaceChildAfter(node1, node1);
      node0.removeChildAfter(node1);
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString("");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(2, node0);
      node0.getDirectives();
      node0.checkTreeEqualsImpl(node0);
      node0.getInputId();
      Node node2 = Node.newString(32, "");
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newString(88, "");
      node0.isQuotedString();
      node0.isReturn();
      node0.setQuotedString();
      Node node1 = new Node(4, node0, node0);
      node0.isIf();
      node0.checkTreeEquals(node0);
      node1.siblings();
      node1.addSuppression("'(");
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = new Node(4, 18, 4);
      Node node1 = new Node(18, node0, node0);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node0.getJSDocInfo();
      node0.setLength(0);
      node1.isBlock();
      Node node2 = new Node(37, 16, 51);
      node2.setWasEmptyNode(false);
      node2.cloneTree();
      node2.setWasEmptyNode(false);
      node1.setWasEmptyNode(false);
      Node node3 = new Node(1882, node1, node0, node2);
      node3.isGetterDef();
      node2.isBlock();
      node2.getAncestors();
      node_AncestorIterable0.iterator();
      node1.isDo();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      node0.isDec();
      node0.hasChildren();
      node0.isTrue();
      Node node1 = new Node(40, nodeArray0, (-249), 38);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node1.isDo();
      node0.isHook();
      node1.isVar();
      Node node2 = node1.srcrefTree(node0);
      node2.cloneTree();
      Node node3 = new Node(93);
      node1.isParamList();
      node2.copyInformationFrom(node1);
      node2.setChangeTime(51);
      node3.isExprResult();
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      node0.toString(false, false, false);
      Node node1 = new Node(39, node0, node0, node0, node0, 4, (-2316));
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = Node.newString("lIY5{(YIV-}9=?v. ", 1, 115);
      node3.toStringTree();
      node1.checkTreeEquals(node0);
      int int0 = 35;
      node2.setType(int0);
      int int1 = Node.COLUMN_BITS;
      node2.getDouble();
      node2.isComma();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(111, 111, 111);
      node0.isDo();
      node0.isIn();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(39, node0, node0, node0, node0, 36, (-466));
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      int int0 = 2033;
      Node node0 = new Node(100, 2033, 100);
      node0.setVarArgs(true);
      node0.setWasEmptyNode(true);
      node0.setDouble(1.2);
      node0.getIntProp(int0);
      node0.isFunction();
      // Undeclared exception!
      try { 
        node0.isEmpty();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // OR 2033 [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      String string0 = "\"$ns.E)=CjIK";
      Node node0 = Node.newString("\"$ns.E)=CjIK");
      node0.setVarArgs(true);
      node0.setDouble((-400.18));
      String string1 = "";
      // Undeclared exception!
      try { 
        Node.newString(node0.DIRECTIVES, string1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING \"$ns.E)=CjIK [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = new Node(678);
      node0.setChangeTime(44);
      node0.isDo();
      node0.isFor();
      node0.isVar();
      Node node1 = node0.srcrefTree(node0);
      Node node2 = new Node(93);
      node2.isDebugger();
      node0.replaceChild(node0, node1);
      node2.siblings();
      node1.isArrayLit();
      node0.getType();
      // Undeclared exception!
      try { 
        Node.newNumber((double) node0.INFERRED_FUNCTION);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node1.isDo();
      node0.isHook();
      node1.isVar();
      Node node2 = node1.srcrefTree(node0);
      node2.hasChild(node0);
      node0.isParamList();
      Node node3 = node2.copyInformationFrom(node0);
      Node node4 = new Node(54, node2, node0, (-4684), (-2542));
      node4.setChangeTime(node3.LAST_PROP);
      node4.isExprResult();
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node1.isDo();
      node0.isHook();
      Node node2 = node1.srcrefTree(node0);
      node2.hasChild(node0);
      node0.isParamList();
      Node node3 = node2.copyInformationFrom(node0);
      Node node4 = new Node(54, node2, node0, (-4684), (-2542));
      node4.setChangeTime(node3.LAST_PROP);
      node4.isExprResult();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = new Node(4, (-2297), 4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node0.isAdd();
      Node.newString(4, "com.google.common.base.Predicates$NotPredicate");
      Node node1 = new Node(32, node0, node0, 29, 47);
      node1.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(17, "Object#Element", (-1956), (-1956));
      Node node1 = Node.newNumber((double) 2);
      node0.isLocalResultCall();
      node0.setLineno(17);
      node0.addChildrenToBack(node1);
      node1.removeProp(1088);
      node1.isOr();
      node1.isEquivalentTo(node0, false, false, false);
      node0.getIndexOfChild(node1);
      node0.getSourcePosition();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newString(",gzfRKo72-%}ol-!LFf", 43, 77);
      Node node1 = new Node(4575, node0);
      Node node2 = Node.newNumber((-2720.0));
      node1.hasChild(node2);
      node2.isParamList();
      node1.copyInformationFrom(node0);
      Node.newNumber((double) 15);
      node1.isNE();
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.useSourceInfoFromForTree(node1);
      Node.newNumber(1.0, 36, 12);
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      node0.setChangeTime(3162);
      node0.isDo();
      node0.isHook();
      Node node1 = new Node(117, node0, node0, node0, node0, 840, 40);
      node0.isVar();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = node0.cloneTree();
      Node node4 = new Node(1873);
      node1.isDebugger();
      node3.replaceChild(node4, node4);
      node4.siblings();
      node1.setChangeTime(node3.COLUMN_BITS);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node5 = new Node(node3.EMPTY_BLOCK, node2);
      node5.isEquivalentTo(node4);
      int int0 = 306654252;
      // Undeclared exception!
      try { 
        node2.setChangeTime(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newString("CATCH", 126, 147);
      Node node1 = new Node(1, node0, node0, node0);
      node1.addChildrenToFront((Node) null);
      node0.removeChild(node1);
      node0.mayMutateArguments();
      node0.clonePropsFrom(node1);
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      node0.isEquivalentToShallow(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("Ta");
      node0.isInstanceOf();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = jSDocInfo0.getAssociatedNode();
      node0.addChildrenToFront((Node) null);
      node1.addChildToFront(node0);
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      Node node1 = Node.newNumber(1.0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.setIsSyntheticBlock(false);
      node1.isString();
      node0.isLabel();
      node1.removeProp(1);
      node1.hasMoreThanOneChild();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isEquivalentTo(node0);
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = Node.newNumber(1792.99055);
      node0.isCast();
      Node node1 = new Node(123, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isEquivalentTo(node0);
      node0.getChildBefore(node1);
      int int0 = (-2422);
      // Undeclared exception!
      try { 
        Node.extractCharno(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-689));
      node0.isQualifiedName();
      Node node1 = Node.newString(1, "thisType");
      Node node2 = Node.newString("", 147, 50);
      Node node3 = new Node(56);
      node2.isEquivalentToTyped(node3);
      Locale locale0 = Locale.KOREAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node2.setDirectives(set0);
      Node.extractLineno(56);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node4 = Node.newString(4, "", 38, 4095);
      Node.newNumber((double) 56);
      node4.addChildrenToBack(node3);
      node1.removeProp((-1303));
      node0.isOr();
      node4.isThrow();
      node4.toString();
      node0.isThrow();
      node3.removeChild(node2);
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("|", 57, 57);
      node1.isVar();
      Node node2 = new Node(36, node1, node1, 29, 0);
      node1.isEquivalentToShallow(node2);
      node0.isTrue();
      node2.hasOneChild();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = Node.newString((-2542), "^_");
      Node node1 = new Node(3202, node0);
      node1.children();
      node1.putIntProp(53, (-183));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(79);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags5.setMutatesGlobalState();
      node1.hasOneChild();
      node1.setString("^_");
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString("");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(50, nodeArray0);
      Node.newString("U_yGc!T{W@@g9");
      node1.isArrayLit();
      node0.getChildCount();
      Node.newNumber((-293.6764321085));
      node0.addChildrenToBack(node0);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      Node node2 = Node.newNumber((double) 15, 32, 115);
      node0.useSourceInfoFromForTree(node2);
      node0.isCast();
      node1.removeChild(node1);
      String string0 = "e0=>~/}V7V&Ed";
      node0.addSuppression(string0);
      // Undeclared exception!
      try { 
        node1.isArrayLit();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      Node node1 = Node.newString("1", 1, 48);
      node1.setType(40);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      node0.isString();
      node0.isDec();
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isContinue();
      node0.isThrow();
      node0.isInc();
      EvoSuiteFile evoSuiteFile0 = null;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node0.replaceChildAfter((Node) null, (Node) null);
      String string0 = null;
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newString((-2542), "^_");
      Node node1 = new Node(3202, node0);
      node1.children();
      node1.putIntProp(53, (-183));
      node0.isDo();
      node0.isHook();
      node0.isVar();
      Node node2 = node0.srcrefTree(node1);
      Node node3 = Node.newString(1649, "");
      Node node4 = new Node(49, node0, node2, node3, node3, 42, 2);
      Node node5 = node4.cloneTree();
      int int0 = 14;
      Node node6 = new Node(int0);
      node5.isParamList();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newNumber((-1565.0));
      node0.getLength();
      node0.putIntProp(16, 16);
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Iterator<JSType> iterator0 = (Iterator<JSType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      node0.getLength();
      jSTypeRegistry0.hasNamespace("NUMBER_STRING");
      Node node1 = new Node(925, node0);
      node1.getIntProp((-4115));
      templateType0.getSlot("NUMBER_STRING");
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node1, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.autoboxesTo();
      immutableList0.add((JSType) null);
      node0.addChildrenToFront(node1);
      node0.checkTreeEqualsImpl(node1);
      node1.isSetterDef();
      node0.getJSType();
      // Undeclared exception!
      try { 
        node1.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.ImmutableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(105, node0, node0, node0, 105, 33);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.getProp((-1715));
      Set<String> set0 = null;
      Node.newString(54, "thisType");
      node0.isEquivalentToTyped(node2);
      jSDocInfo0.setStruct();
      Node node3 = new Node(130, node1, node0, 56, (-1438));
      node3.setDirectives(set0);
      int int0 = 125;
      Node node4 = new Node(node0.FLAG_THIS_UNMODIFIED, node0, node1, node1, int0, int0);
      int int1 = 110;
      node4.getExistingIntProp(int1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setMutatesThis();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = new Node((-6), (-6), 0);
      Node node1 = new Node(38, (-1920), 1985);
      Node node2 = new Node(37, node1, node1);
      node0.useSourceInfoIfMissingFromForTree(node2);
      node2.putIntProp(8, 47);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.hasOneChild();
      node2.setString("");
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getBooleanProp(4);
      node0.getIntProp(30);
      Node node1 = new Node(46, node0, node0, node0, node0, 30, 15);
      node1.removeProp(15);
      node1.hasMoreThanOneChild();
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getBooleanProp((-719));
      node0.getIntProp(30);
      Node node1 = new Node(46, node0, node0, node0, node0, 30, 15);
      node1.removeProp(15);
      node1.hasMoreThanOneChild();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1035);
      node0.removeProp(108);
      Node node1 = node0.removeFirstChild();
      node0.hasMoreThanOneChild();
      node0.isInc();
      node0.isAdd();
      Node node2 = Node.newString(305, (String) null);
      node1.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newNumber(25.3061246501092);
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node.newString((String) null, (-1920), (-2402));
      Stack<JSType> stack0 = new Stack<JSType>();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(3639);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node0.isComma();
      node0.siblings();
      node_SideEffectFlags3.setMutatesArguments();
      Node node1 = Node.newString(4095, "", 843, 4040);
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      int int0 = 2392;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[7];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      jSTypeArray0[0] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType(jSType0, false, jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      JSType jSType1 = jSTypeRegistry0.getGreatestSubtypeWithProperty(jSType0, "53&wb(");
      jSTypeArray0[2] = jSType1;
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      JSType jSType2 = modificationVisitor0.caseTemplateType(templateType0);
      jSTypeArray0[3] = jSType2;
      ObjectType objectType0 = FunctionType.getTopDefiningInterface(templateType0, "Named type with empty name component");
      jSTypeArray0[4] = (JSType) objectType0;
      Node node0 = Node.newString("j4$V:aG9^E");
      JSType jSType3 = node0.getJSType();
      jSTypeArray0[5] = null;
      JSType jSType4 = jSTypeRegistry0.getGreatestSubtypeWithProperty(jSTypeArray0[0], "Not declared as a constructor");
      jSTypeArray0[6] = jSType4;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      int int1 = 37;
      Node node2 = new Node(int0, node1, node0.VAR_ARGS_NAME, int1);
      OutputStream outputStream0 = null;
      Charset charset0 = Charset.forName(jSType3.EMPTY_TYPE_COMPONENT);
      CharsetEncoder charsetEncoder0 = charset0.newEncoder();
      OutputStreamWriter outputStreamWriter0 = null;
      try {
        outputStreamWriter0 = new OutputStreamWriter(outputStream0, charsetEncoder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      Node node1 = Node.newNumber((double) 51, 57, 124);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(32);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesThis();
      node0.siblings();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags5.setMutatesArguments();
      node1.mayMutateGlobalStateOrThrow();
      Node.mergeLineCharNo(15, (-1568));
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.mayMutateGlobalStateOrThrow();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(50, nodeArray0);
      node0.addChildToFront(node1);
      node1.isArrayLit();
      node1.isDelProp();
      node0.getChildCount();
      Node node2 = Node.newNumber((double) 47);
      node2.hasChild(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node3.isParamList();
      node2.copyInformationFrom(node0);
      node3.isExprResult();
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(17, "Object#Element", (-1956), (-1956));
      Node node1 = Node.newNumber((double) 2);
      node0.isLocalResultCall();
      node0.setLineno(17);
      node0.addChildrenToBack(node0);
      node1.removeProp(1088);
      node1.isOr();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setChangeTime(42);
      node1.getQualifiedName();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = new Node((-4655));
      node0.isDebugger();
      node0.isBlock();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      Node node1 = Node.newNumber((double) 51, 57, 124);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(32);
      node0.addChildrenToFront(node1);
      node1.removeChild(node0);
      node0.mayMutateArguments();
      // Undeclared exception!
      try { 
        node0.clonePropsFrom(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getBooleanProp((-719));
      Node node1 = Node.newString(42, "@[");
      Node node2 = Node.newString(892, "prev is not a child of this node.", 87, (-707));
      node2.hasChild(node0);
      Node node3 = new Node(32, node2, node1, node1, node1, 55, 100);
      Node node4 = node3.copyInformationFrom(node2);
      node3.isExprResult();
      node4.getExistingIntProp(51);
      String string0 = node2.toString();
      node2.isThrow();
      Node node5 = new Node(node2.SIDE_EFFECTS_ALL, node1, node1, node3);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node4.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append(string0);
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(118);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.isEquivalentTo(node0);
      node0.setString(" ");
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(660, nodeArray0);
      node0.isVar();
      Node node1 = Node.newNumber(1365.882, 0, 40);
      Node node2 = node0.srcrefTree(node1);
      Node node3 = new Node((-252));
      node3.isDebugger();
      node1.replaceChild(node3, node0);
      node1.siblings();
      node2.setChangeTime(node0.LAST_PROP);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node3.setChangeTime(node0.FLAG_THIS_UNMODIFIED);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = Node.newString(4260, "oICH:(4%Puz");
      node0.putProp(56, "oICH:(4%Puz");
      node0.addSuppression("inferred");
      ErrorReporter errorReporter0 = null;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      node0.addChildBefore((Node) null, (Node) null);
      JSType[] jSTypeArray0 = new JSType[3];
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeArray0);
      jSTypeArray0[2] = jSType0;
      JSTypeRegistry jSTypeRegistry1 = null;
      try {
        jSTypeRegistry1 = new JSTypeRegistry(errorReporter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("`t[4NRr#w1<b", "d{`5g<;?x(Wgl&%oA", 39, 39);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Locale locale0 = Locale.CANADA;
      locale0.getUnicodeLocaleKeys();
      Node node0 = new Node((-1548));
      node0.isNew();
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newNumber((double) 15);
      node1.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.setJaggerProvide(true);
      jSDocInfo0.setNoSideEffects(true);
      node1.setJSDocInfo(jSDocInfo0);
      node0.siblings();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newString(96, "");
      node0.isCatch();
      node0.isReturn();
      node0.isNull();
      node0.setQuotedString();
      node0.isArrayLit();
      node0.isDelProp();
      node0.isFromExterns();
      node0.isObjectLit();
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(806);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(2);
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node0.setSideEffectFlags(node_SideEffectFlags5);
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = Node.newNumber((-346.68));
      node0.checkTreeTypeAwareEqualsImpl((Node) null);
      boolean boolean0 = false;
      String string0 = "com.google.common.base.Predicates$InstanceOfPredicate";
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = Node.newString(121, "");
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1457));
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags((-1457));
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newNumber((double) (-1457));
      Node node1 = new Node((-3409), node0, node0, node0, node0);
      node1.hasOneChild();
      String string0 = "";
      node0.isIn();
      node1.replaceChild(node0, node0);
      node1.setString(string0);
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      int int0 = (-3146);
      Node node0 = new Node((-3146), (-3146), (-3146));
      // Undeclared exception!
      try { 
        node0.setDouble((-3146));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3146
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = new Node(4, (-2297), 4);
      Node node1 = Node.newNumber((double) 8, 8, 39);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.getAncestor(4);
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.hasOneChild();
      Node node2 = node0.cloneTree();
      Node node3 = new Node(56);
      node3.checkTreeEqualsImpl(node0);
      node3.isParamList();
      Node node4 = node0.copyInformationFrom(node2);
      node1.setChangeTime(111);
      node4.isExprResult();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = new Node(93);
      Node node1 = new Node(50, node0, node0, node0, 37, 1073741824);
      Node node2 = Node.newString(47, " is not a string node", 2927, (-2109));
      node2.setQuotedString();
      node1.setWasEmptyNode(false);
      Node node3 = node0.cloneTree();
      node0.setWasEmptyNode(false);
      node3.setWasEmptyNode(false);
      node3.isGetterDef();
      node0.isBlock();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newNumber((-1420.2));
      Node node1 = new Node(56, node0, node0);
      node1.getAncestors();
      Node node2 = new Node(136);
      node2.setLength(1457);
      node2.isBlock();
      Node node3 = Node.newString(53, "");
      node3.isEquivalentToTyped(node0);
      node1.checkTreeEqualsImpl(node3);
      Node node4 = node0.cloneNode();
      node0.isEquivalentToShallow(node2);
      node4.isNew();
      node0.mayMutateGlobalStateOrThrow();
      node0.isAnd();
      node0.checkTreeEqualsImpl(node4);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.setNoSideEffects(false);
      node0.setJSDocInfo(jSDocInfo0);
      node2.isNew();
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1136, 1136, (-245));
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(31);
      node1.setChangeTime(44);
      node1.isDo();
      node0.isHook();
      node1.isVar();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = node2.cloneTree();
      Node node4 = new Node(93);
      node1.isParamList();
      node2.copyInformationFrom(node1);
      node2.setChangeTime(51);
      node4.isExprResult();
      node3.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(2, (Node) null, (Node) null, (Node) null);
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2100);
      Node node0 = Node.newNumber(1.0);
      node0.siblings();
      Locale locale0 = Locale.CANADA;
      locale0.getUnicodeLocaleKeys();
      node0.isNew();
      node0.mayMutateGlobalStateOrThrow();
      node0.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.setNoSideEffects(false);
      node0.copyInformationFromForTree((Node) null);
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = new Node(22, 22, 22);
      Node node1 = new Node(22, node0, node0);
      Stack<JSType> stack0 = new Stack<JSType>();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.setSideEffectFlags(54);
      // Undeclared exception!
      try { 
        node0.detachChildren();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got SUB
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      node0.addChildToFront((Node) null);
      node0.isOnlyModifiesThisCall();
      Node node1 = node0.getLastSibling();
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "s");
      Node node0 = Node.newString("s", 120, 31);
      Node node1 = new Node(120, node0);
      node0.isEquivalentTo(node1);
      node0.isNew();
      Node node2 = node1.srcref(node0);
      node2.isFromExterns();
      node0.getProp(56);
      node2.putProp((-2329), (Object) null);
      node1.setDouble((-2350.240686052147));
      node2.isThrow();
      node1.checkTreeEquals(node2);
      Node node3 = node2.getNext();
      node3.wasEmptyNode();
      node2.isNew();
      node3.getType();
      node3.addChildrenToFront(node1);
      // Undeclared exception!
      try { 
        node0.getBooleanProp(node3.ORIGINALNAME_PROP);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CATCH 120 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = new Node((-3146), (-3146), (-3146));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(0);
      node0.setWasEmptyNode(true);
      node1.isLabel();
      node1.isBlock();
      node1.mayMutateGlobalStateOrThrow();
      node0.mayMutateArguments();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newString(48, "", 48, 2);
      node0.isDefaultCase();
      node0.isEmpty();
      node0.isRegExp();
      node0.isFalse();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-689));
      Node node0 = Node.newNumber((double) (-689));
      node0.setChangeTime(0);
      node0.isDo();
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(54, node0, node0, node0, node0, 3666, 40);
      node1.isVar();
      Node node2 = node0.srcrefTree(node1);
      Node node3 = node2.cloneTree();
      node1.isFalse();
      node0.isUnscopedQualifiedName();
      node1.getDouble();
      node0.isAnd();
      node3.isNumber();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      node0.isVar();
      Node node1 = new Node(43);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("U_yGc!T{W@@g9", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      node1.getInputId();
      node1.isFalse();
      node1.isCall();
      node0.isOr();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = new Node(690, 690, 690);
      Node node1 = new Node(31);
      node1.setChangeTime(44);
      node0.isQualifiedName();
      node0.isHook();
      node1.isVar();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(93);
      node1.isParamList();
      node2.copyInformationFrom(node1);
      node2.setChangeTime(51);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(32);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node0.setSideEffectFlags(node_SideEffectFlags1);
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(17, "Object#Element", (-1956), (-1956));
      node0.isLocalResultCall();
      node0.setLineno(17);
      node0.addChildrenToBack(node0);
      node0.removeProp(1088);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setChangeTime(42);
      node0.getQualifiedName();
      node0.isUnscopedQualifiedName();
      node0.isComma();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte)31;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node((-201), (Node) null, (Node) null);
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = Node.newNumber((double) 32);
      node0.getBooleanProp((-4096));
      node1.getIntProp(43);
      Node node2 = new Node(4095, node0, (Node) null, node0, node0, 51, 36);
      node1.removeProp(node0.FLAG_THIS_UNMODIFIED);
      node0.hasMoreThanOneChild();
      int int0 = 37;
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1457));
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags((-1457));
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newNumber((double) (-1457));
      Node node1 = new Node((-3409), node0, node0, node0, node0);
      node1.useSourceInfoFromForTree(node0);
      node1.hasOneChild();
      node0.isIn();
      node1.isArrayLit();
      Node node2 = new Node(904, node1, node1, 57, 57);
      node2.getType();
      node0.toString(false, false, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(12, nodeArray0);
      node3.isTrue();
      node1.setSourceEncodedPosition(4);
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = Node.newString((-106), "bVT=~");
      node0.setSourceEncodedPosition(52);
      node0.siblings();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      Node node1 = new Node(36, node0);
      Node node2 = new Node(120);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node1.isObjectLit();
      node2.isWith();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(112);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      node2.setChangeTime(271);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1136, 1136, (-245));
      node0.getAncestors();
      node0.setType((-946));
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getBooleanProp((-719));
      Node node1 = new Node(2167);
      node1.setType(50);
      int int0 = Node.IS_CONSTANT_NAME;
      node1.isLocalResultCall();
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = new Node(2877, 2877, 2877);
      node0.getIntProp(8202);
      Node node1 = new Node(16, node0, node0, node0, node0, 2209, 2877);
      node1.removeProp(125);
      node0.hasMoreThanOneChild();
      node0.isInc();
      node0.hasOneChild();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      Node node1 = new Node(36, node0);
      Node node2 = new Node(120);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node1.isObjectLit();
      node2.isWith();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(112);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      node2.useSourceInfoFromForTree(node0);
      node2.setChangeTime(271);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = Node.newString("String node not created with Node.newString", 170, 0);
      Node node1 = new Node(54, node0, node0, node0);
      Node node2 = new Node(8);
      node2.isObjectLit();
      node0.isNew();
      node0.isOnlyModifiesThisCall();
      node2.isDo();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-689));
      Node node0 = Node.newNumber((double) (-689));
      node0.setChangeTime(0);
      node0.isDo();
      node0.isHook();
      Node node1 = new Node(54, node0, node0, node0, node0, 3666, 40);
      node1.isVar();
      Node node2 = node0.srcrefTree(node1);
      Node node3 = node2.cloneTree();
      node3.cloneNode();
      node1.setChangeTime(118);
      node0.isNE();
      Node.newNumber(721.3, 46, 125);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newString(1035, "53&wb(");
      node0.isCase();
      node0.isContinue();
      node0.isThrow();
      node0.getQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(36);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags6.setMutatesGlobalState();
      node0.hasOneChild();
      node0.setString((String) null);
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("direct_eval", 50, 50);
      node0.isOnlyModifiesThisCall();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node0.removeProp(1311);
      node0.setLineno(50);
      String string0 = "-?#uOL5Hl~~3";
      Node node1 = Node.newString("-?#uOL5Hl~~3", 51, (-3746));
      node1.setIsSyntheticBlock(false);
      node1.removeChildren();
      node1.useSourceInfoFromForTree((Node) null);
      Node node2 = node1.srcref(node0);
      node2.getString();
      node_FileLevelJsDocBuilder0.append(string0);
      // Undeclared exception!
      try { 
        node2.mayMutateGlobalStateOrThrow();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      node0.isDebugger();
      node0.isWith();
      node0.isNot();
      node0.isAssign();
      node0.isScript();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      Node node1 = new Node(22, node0, node0);
      node1.getAncestors();
      node0.setLength(19);
      node1.isDec();
      Node node2 = node0.cloneNode();
      node0.setIsSyntheticBlock(false);
      Node node3 = node1.removeChildren();
      Node node4 = node2.useSourceInfoFromForTree(node3);
      Node node5 = node1.srcref(node2);
      node5.setOptionalArg(false);
      node4.getString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      String string0 = "Ta";
      // Undeclared exception!
      try { 
        node_FileLevelJsDocBuilder0.append(string0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // RETURN 22 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node1.isDo();
      node0.isHook();
      node0.isEquivalentToShallow(node0);
      Node node2 = node1.srcrefTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node2.setSideEffectFlags(node_SideEffectFlags1);
      node0.isString();
      node1.copyInformationFromForTree(node0);
      JSDocInfo jSDocInfo0 = null;
      try {
        jSDocInfo0 = new JSDocInfo();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NAME
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      Node.newNumber((double) 15, 32, 115);
      node0.isCast();
      node1.setString("lpNb3h)@");
      node1.removeChild(node1);
      int int0 = (-7437);
      Node node2 = new Node(int0);
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newNumber(25.3061246501092);
      Node node1 = new Node(56, node0, node0);
      node1.getAncestors();
      Node node2 = new Node(136);
      node2.setLength(1457);
      node2.isSwitch();
      Node node3 = Node.newString(53, "");
      node3.isEquivalentToTyped(node0);
      node1.checkTreeEqualsImpl(node3);
      Node node4 = node0.cloneNode();
      node0.isEquivalentToShallow(node2);
      node4.isNew();
      node0.mayMutateGlobalStateOrThrow();
      node0.isAnd();
      Node node5 = Node.newString("", 43, 56);
      node0.isCase();
      node3.isWhile();
      node4.hasOneChild();
      node5.isAnd();
      node2.useSourceInfoIfMissingFrom(node4);
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      node0.isDo();
      node0.isHook();
      Node node1 = new Node(50, node0, node0, node0, node0, 50, 1024);
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node3 = node2.srcrefTree(node1);
      Node node4 = node2.cloneTree();
      node4.setChangeTime(2);
      node3.isNE();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1035);
      Node node1 = Node.newNumber((-1011.0), 47, (-212));
      Node node2 = Node.newString("-|EoV4rG[W}xjri");
      Node node3 = new Node(50, node2, node0);
      node3.addChildToBack(node1);
      node2.isSetterDef();
      node2.siblings();
      node2.isFromExterns();
      node0.isObjectLit();
      node3.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      node3.setSideEffectFlags(node_SideEffectFlags3);
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newString((-247), "CharMatcher.JAVA_UPPER_CASE", 117, (-272));
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.getStaticSourceFile();
      Node node1 = new Node(2, node0, node0, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.putIntProp(49, 39);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.isEquivalentTo(node0);
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node1.isDo();
      node1.isFor();
      node1.isVar();
      Node node2 = node1.srcrefTree(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node3 = new Node(93);
      node3.getAncestor(32);
      node3.isDebugger();
      node1.replaceChild(node0, node2);
      node3.siblings();
      node3.setChangeTime(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node3.srcref(node2);
      node0.setChangeTime(51);
      node2.setString("change_time");
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node((-862048943));
      Node node1 = new Node(57, node0, node0, 51, 57);
      node1.isParamList();
      node0.copyInformationFrom(node1);
      node0.setChangeTime((-18));
      node0.isExprResult();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = Node.newString((-1769), ".LV)iH/{`>LA?C");
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      node0.siblings();
      node0.addSuppression("3mmz_BQ`B#KD!d");
      node0.isFunction();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = new Node(2877, 2877, 2877);
      node0.setType(40);
      node0.isQualifiedName();
      node0.isScript();
      node0.getSideEffectFlags();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("", (-79), 30);
      node1.toStringTree();
      node0.addSuppression("");
      node0.setLineno(2);
      node1.isOnlyModifiesThisCall();
      Node node2 = Node.newString((-1), "#9lO[JjjFmNLN2");
      node1.isEquivalentToTyped(node0);
      node1.checkTreeEqualsImpl(node2);
      Node node3 = Node.newString("#9lO[JjjFmNLN2");
      Node node4 = node3.cloneNode();
      int int0 = 1395;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node5 = jSTypeRegistry0.createParameters((List<JSType>) null);
      int int1 = 103;
      int int2 = (-1276);
      Node node6 = new Node(int0, node5, node1, node4, node4, int1, int2);
      node1.isEquivalentToShallow(node6);
      // Undeclared exception!
      try { 
        node1.isNew();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(31);
      node1.setChangeTime(44);
      node1.isDo();
      node0.isArrayLit();
      node0.isDelProp();
      node0.isQuotedString();
      node0.isObjectLit();
      node1.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(119);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(57);
      Node node2 = Node.newNumber(0.0);
      node1.setWasEmptyNode(false);
      node2.setWasEmptyNode(true);
      Node node3 = new Node(2147483645, 306654252, 37);
      node3.isGetterDef();
      node3.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = node2.getAncestors();
      node_AncestorIterable0.iterator();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(31);
      node1.setChangeTime(44);
      node1.isDo();
      node0.isHook();
      Node node2 = new Node(29, node0, node1, node1);
      node0.getProp(1628);
      node0.useSourceInfoFromForTree(node2);
      node0.isDec();
      node2.isBreak();
      node0.toString(true, false, true);
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(31);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      node1.setType(118);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("r[#Kz]");
      node_FileLevelJsDocBuilder0.append("Type names cannot contain template annotations.");
      node0.isString();
      node0.isDec();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = Node.newString("m]vET(!i)`IoE", 16, (-2647));
      node0.getString();
      Node node1 = new Node(29, (Node[]) null, 1730, 47);
      String string0 = "FbL$S";
      Node node2 = Node.newString(string0, node1.FLAG_NO_THROWS, node0.QUOTED_PROP);
      node2.useSourceInfoIfMissingFromForTree(node0);
      node1.setType(node0.QUOTED_PROP);
      int int0 = null;
      try {  
      int0 = Node.SIDE_EFFECT_FLAGS;
      } catch(NullPointerException e) {}
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newString(1035, "53&wb(");
      node0.isCase();
      node0.isComma();
      node0.siblings();
      node0.addSuppression("53&wb(");
      node0.isFunction();
      node0.isEmpty();
      node0.setDouble(48.0);
      node0.getSourceOffset();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isContinue();
      node0.isThrow();
      node0.getQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = jSDocInfo0.getAssociatedNode();
      Node node2 = new Node(53, node0, (Node) null, (Node) null, 8, 54);
      node1.addChildAfter(node2, node0);
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(31);
      node1.setChangeTime(44);
      node1.isDo();
      node0.isHook();
      Node node2 = new Node(29, node0, node1, node1);
      node0.getProp(1628);
      node0.useSourceInfoFromForTree(node2);
      node0.isDec();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      node2.isBreak();
      node1.isNull();
      node0.toString(true, false, true);
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      node0.isDec();
      node0.hasChildren();
      node0.isTrue();
      Node node1 = new Node(40, nodeArray0, (-249), 38);
      node1.getQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.getCharno();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node.extractLineno((-3409));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString(799, "com.google.javascript.rhino.JSDocInfo$Visibility", 4095, (-212));
      node0.isOr();
      node0.isAnd();
      node0.setLength(110);
      node0.useSourceInfoIfMissingFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newString(128, "");
      node0.wasEmptyNode();
      Node.extractLineno((-1277));
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-689));
      Node node0 = Node.newNumber((double) (-689));
      node0.setChangeTime(0);
      node0.isDo();
      node0.isHook();
      Node node1 = new Node(54, node0, node0, node0, node0, 3666, 40);
      node1.isVar();
      Node node2 = Node.newString("com.google.javascript.rhino.Node$SiblingNodeIterable", (-2743), 56);
      node2.isCase();
      node0.isWhile();
      node2.hasOneChild();
      node1.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      Node node1 = Node.newNumber(900.0);
      node0.isDo();
      node0.isHook();
      Node node2 = new Node(56, node1, node1, node0);
      node0.getProp(3965);
      node2.useSourceInfoFromForTree(node0);
      node0.isDec();
      node2.isBreak();
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = new Node(130);
      node0.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(6454);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node0.isNot();
      node0.isLocalResultCall();
      Node.newString("com.google.javascript.rhino.Node$NodeMismatch", (-250), 36);
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      Node node1 = new Node(22, node0, node0);
      node1.getAncestors();
      node0.setLength(19);
      node1.isDec();
      Node node2 = node0.cloneNode();
      node1.isFalse();
      node1.isIf();
      node1.addChildrenAfter(node0, node0);
      node1.getStaticSourceFile();
      Node node3 = node1.copyInformationFrom(node2);
      // Undeclared exception!
      try { 
        node3.removeFirstChild();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, 46);
      node1.setChangeTime(44);
      node1.isDo();
      node0.isHook();
      node1.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node2 = Node.newNumber((double) 32);
      node1.hasOneChild();
      String string0 = "";
      node0.isIn();
      node0.replaceChild(node1, node2);
      node2.setString(string0);
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = new Node(2877, 2866, 2866);
      node0.setType(40);
      node0.isName();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, 15);
      node0.isDo();
      node1.isFor();
      Node node2 = node1.srcrefTree(node0);
      node2.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(997);
      node_SideEffectFlags0.setAllFlags();
      Node.newNumber((double) 55);
      node0.isVar();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setIsSyntheticBlock(false);
      node0.isString();
      node0.isLabel();
      Node node1 = Node.newString(111, "", 4095, 111);
      node1.isFor();
      node0.isVar();
      Node node2 = node0.srcrefTree(node1);
      Node node3 = new Node((-1512));
      node0.isEquivalentTo(node2, false, false, true);
      node0.replaceChild(node3, node2);
      node1.siblings();
      int int0 = 4152;
      node0.setChangeTime(int0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setChangeTime(node0.DECR_FLAG);
      // Undeclared exception!
      try { 
        node2.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      String string0 = "";
      int int0 = 16;
      Node node0 = Node.newString(16, "");
      Node node1 = new Node(53, node0, node0);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newString("", 16, 16);
      Node node1 = new Node(53, node0, node0);
      Node node2 = node0.removeChildAfter(node1);
      node0.isWhile();
      // Undeclared exception!
      try { 
        node2.removeChild(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = Node.newString("NoResolvedType", 21, 10);
      Node node1 = new Node(16, node0, node0);
      Node node2 = node1.removeChildAfter(node0);
      node0.isWhile();
      node0.removeChild(node2);
      // Undeclared exception!
      try { 
        node0.hasOneChild();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newString("NoResolvedType", 21, 10);
      Node node1 = new Node(16, node0, node0);
      node1.removeChildAfter(node0);
      node0.isWhile();
      Stack<JSType> stack0 = new Stack<JSType>();
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(2, 48, 50);
      node1.setChangeTime(44);
      node1.isDo();
      node0.isHook();
      node1.isVar();
      Node node2 = new Node(48, 53, 46);
      Node node3 = node2.cloneTree();
      Node node4 = new Node(4, node2, node1, node2, node3, 4095, 39);
      node3.isAdd();
      node3.addChildToBack(node1);
      node2.copyInformationFrom(node1);
      // Undeclared exception!
      try { 
        node2.setChangeTime(node0.STATIC_SOURCE_FILE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = Node.newNumber((-3407.061), 4, 37);
      Node node2 = Node.newString("-|EoV4rG[W}xjri");
      Node node3 = new Node(4194342, node0, node1);
      node0.addChildToBack(node1);
      node2.isSetterDef();
      node2.siblings();
      node2.isFromExterns();
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node3.isWith();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(31);
      node1.setChangeTime(44);
      node1.isDo();
      node0.isHook();
      Node node2 = new Node(29, node0, node1, node1);
      Node node3 = Node.newNumber((double) 8, 38, 4);
      node3.isVar();
      Node node4 = node2.srcrefTree(node1);
      Node node5 = node3.cloneTree();
      Node node6 = new Node(31);
      node2.isParamList();
      node1.copyInformationFrom(node4);
      node5.setChangeTime((-1438));
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getBooleanProp((-719));
      node0.getIntProp(29);
      Node node1 = new Node(15, node0);
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node((-2193));
      Node node4 = Node.newString((-829), "Z");
      node4.setDouble(55);
      String string0 = "k9/l(u\"K_<<gr+\\PU";
      int int0 = (-213);
      int int1 = (-1488);
      Node.newString(node1.STATIC_SOURCE_FILE, string0, int0, int1);
      node2.isCall();
      // Undeclared exception!
      try { 
        node4.addChildAfter(node1, node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -829
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(6454);
      node_SideEffectFlags0.setThrows();
      node0.isVarArgs();
      node0.toString(false, true, true);
      node0.isTry();
      Node node1 = Node.newString(36, "KY\"Jh_&xh1");
      node1.siblings();
      node1.setChangeTime((-1391));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node2 = new Node(15, node0, node0, node0);
      node2.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = Node.newString("", (-41), (-41));
      Node.newNumber((double) 55, 4095, 52);
      node0.isQualifiedName();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.mayMutateGlobalStateOrThrow();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(50, nodeArray0);
      node0.addChildToFront(node1);
      node1.isArrayLit();
      node1.isDelProp();
      node0.getChildCount();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newNumber(1385.8026254501565, 51, (-2478));
      node0.removeChild(node1);
      node0.isArrayLit();
      node0.getType();
      node0.checkTreeEqualsImpl(node2);
      node0.isTrue();
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node((-862048943));
      node0.isParamList();
      Node node1 = node0.copyInformationFrom(node0);
      node1.isEquivalentTo(node0, false, true, true);
      node0.replaceChild(node1, node1);
      node1.siblings();
      int int0 = 57;
      // Undeclared exception!
      try { 
        node1.setChangeTime(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(17, "Object#Element", (-1956), (-1956));
      Node node1 = Node.newNumber((double) 2);
      node0.isLocalResultCall();
      node0.setLineno(17);
      node1.getDouble();
      node0.addChildrenToBack(node0);
      node1.removeProp(1088);
      node1.isOr();
      SimpleErrorReporter.getMessage0("Object#Element");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setChangeTime(node1.SIDE_EFFECT_FLAGS);
      // Undeclared exception!
      try { 
        node1.getQualifiedName();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property Object#Element
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber((-4485.1275909));
      node0.isEquivalentToTyped(node0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node0);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node.extractLineno((-1314));
      Node node0 = Node.newNumber((double) (-1314));
      Node node1 = new Node((-2649), node0, node0, node0);
      node0.isOptionalArg();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CharMatcher.WHITESPACE");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getBaseType();
      jSDocInfo0.setReturnType((JSTypeExpression) null);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node0.isOnlyModifiesArgumentsCall();
      node_NodeMismatch0.equals(node0);
      jSDocInfo0.documentBlock("var_args_name");
      node0.isSetterDef();
      node1.getLength();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node3 = Node.newNumber((-1.0), 3154, (-894));
      node1.children();
      node2.getDouble();
      node1.isFromExterns();
      Node node4 = null;
      node3.addChildToBack(node4);
      node0.getProp(node1.ORIGINALNAME_PROP);
      node0.mayMutateGlobalStateOrThrow();
      Node node5 = node3.removeFirstChild();
      node5.getLastSibling();
      String string0 = "H";
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2649
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = Node.newString("", (-353), 38);
      node0.detachChildren();
      Node node1 = Node.newString(4095, "", 4, 100);
      Node node2 = node0.cloneNode();
      node2.addChildrenToFront(node0);
      node0.addChildrenToBack(node1);
      node0.isAssign();
      node1.getSourceFileName();
      node1.isFromExterns();
      node0.isObjectLit();
      node1.addSuppression("");
      node1.getIntProp(29);
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = new Node(2877);
      node0.setType(40);
      Node node1 = new Node(247, node0, node0, node0, node0);
      node1.removeProp(55);
      node0.hasMoreThanOneChild();
      node1.isInc();
      node1.isAssign();
      Node node2 = new Node((-212), node0, node0);
      node2.getInputId();
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = new Node(93);
      boolean boolean0 = node0.isComma();
      node0.isLabelName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(33);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(122);
      Node node1 = Node.newNumber(1352.7129921238206);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node2 = new Node(49, nodeArray0);
      boolean boolean1 = false;
      JSDocInfo jSDocInfo0 = new JSDocInfo(boolean1);
      node1.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node0.setWasEmptyNode(boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      node0.isDo();
      node0.isInc();
      node0.isAdd();
      node0.isInstanceOf();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
      node1.setChangeTime(44);
      node0.isHook();
      node1.isVar();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(93);
      node3.isDebugger();
      node1.replaceChild(node0, node2);
      node3.srcrefTree(node0);
      node3.siblings();
      node3.setChangeTime(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setChangeTime(51);
      node0.toString();
      node2.getQualifiedName();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(43);
      node1.isComma();
      node0.getString();
      // Undeclared exception!
      try { 
        node0.isLabelName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 678
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = new Node(911);
      Node node1 = new Node(39, node0, node0, node0, (-4591), 911);
      node1.isNull();
      node1.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.setChangeTime(307);
      node1.getSourceFileName();
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node.extractLineno((-1314));
      Node node0 = Node.newNumber((double) (-1314));
      node0.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setMutatesThis();
      node0.isTrue();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(49, nodeArray0, 1936, 1936);
      node1.isEquivalentToTyped(node0);
      node0.getQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      node0.getCharno();
      node0.getInputId();
      node0.isSetterDef();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      Node node1 = Node.newString("1", 1, 48);
      node1.setType(40);
      int int0 = Node.COLUMN_BITS;
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = new Node((-3146), (-3146), (-3146));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.putIntProp((-3146), (-3146));
      node0.mayMutateArguments();
      node0.isGetterDef();
      node0.isThis();
      node0.getParent();
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = Node.newString(96, "");
      node0.isCatch();
      node0.isReturn();
      Node node1 = Node.newString(1907, "", 119, (-222));
      Node node2 = new Node(1, node0, 49, (-2940));
      node2.isObjectLit();
      node0.setSideEffectFlags((Node.SideEffectFlags) null);
      node2.setLength(node0.DIRECTIVES);
      int int0 = 154;
      int int1 = 1396;
      Node node3 = new Node(int0, node2, node1, node2, int1, node0.FLAG_LOCAL_RESULTS);
      node0.checkTreeEqualsImpl(node3);
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1024, nodeArray0, 2886, 1024);
      node0.isDec();
      node0.hasChildren();
      node0.isTrue();
      Node node1 = new Node(40, nodeArray0, 57, 38);
      node1.getQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isWhile();
      node1.hasOneChild();
      node0.isAnd();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString(121, "");
      node0.isCatch();
      node0.isReturn();
      node0.isNull();
      node0.setQuotedString();
      node0.isHook();
      node0.isVar();
      int int0 = (-5682);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType jSType0 = null;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node0, (JSType) null);
      node0.toStringTree();
      // Undeclared exception!
      try { 
        enumType0.toMaybeEnumType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getBooleanProp((-719));
      node0.getIntProp(30);
      Node node1 = new Node(48, node0, 57, 1);
      node1.removeProp(15);
      node1.hasMoreThanOneChild();
      node0.isInc();
      node1.isAssign();
      node0.getInputId();
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((double) (-1519));
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      node0.isDo();
      node0.isInc();
      node0.isAdd();
      Node node1 = Node.newString(4095, "Q?;gbE{JFgon^");
      Node node2 = Node.newString("%\"d8,\u0007'oc9O1`CgBJ", 113, 4095);
      node2.isInstanceOf();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newString((-4655), "unexpected prop id ");
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = Node.newString(96, "");
      node0.isCatch();
      node0.isReturn();
      node0.isNull();
      node0.setQuotedString();
      Node.extractLineno(679);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString(2, "I!]QV\"+18nQwyRN", 96, 0);
      node0.isOr();
      node0.isThrow();
      node0.isDefaultCase();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString(122, "", 48, 2);
      Node node1 = new Node(57, node0, 31, 4095);
      node1.isObjectLit();
      node0.isVoid();
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node1.isGetProp();
      node0.setLength(node1.INFERRED_FUNCTION);
      node0.addChildToFront(node1);
      int int0 = (-2334);
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = Node.newString("\"$ns.E)=CjIK");
      node0.setIsSyntheticBlock(false);
      node0.isString();
      Node node1 = new Node(30, node0, 55, 1236);
      node1.isObjectLit();
      boolean boolean0 = node1.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node1.setSideEffectFlags(node_SideEffectFlags4);
      node0.setLength(0);
      Node node2 = new Node(46, node1, node0, node0, 57, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      JSType jSType0 = null;
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      node0.isDo();
      node0.isInc();
      node0.isAdd();
      node0.hasMoreThanOneChild();
      node0.isInc();
      Node node1 = Node.newString(30, "com.google.common.collect.SingletonImmutableList");
      node1.setSideEffectFlags((-1496));
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = Node.newString((-1965), ")M_@", (-1965), 130);
      Node node1 = new Node((-1965), node0, node0, node0, 40, 57);
      node0.getIntProp(32);
      node0.isQualifiedName();
      node1.setSourceEncodedPositionForTree(57);
      node1.isEquivalentToTyped(node0);
      node0.isGetElem();
      node0.getString();
      node1.getStaticSourceFile();
      node0.hasChildren();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1035);
      node0.setIsSyntheticBlock(false);
      node0.isString();
      node0.isLabel();
      Node node1 = Node.newString(16, "", 4, 39);
      node1.isFor();
      node0.isVar();
      node1.srcrefTree(node0);
      Node node2 = new Node(52);
      node2.useSourceInfoFromForTree(node1);
      node1.isCase();
      node2.isTrue();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(36, node0);
      Node node2 = new Node(120);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node1.isObjectLit();
      node2.isWith();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(112);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      node2.setChangeTime(271);
      node0.isExprResult();
      node1.isTypeOf();
      node2.getIntProp(449);
      node2.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node((-862048943));
      node0.hasMoreThanOneChild();
      Node node1 = node0.copyInformationFrom(node0);
      node1.isInc();
      node1.isAdd();
      Node node2 = new Node(4);
      node2.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = new Node(93);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte) (-15);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isComma();
      Node.extractLineno((-2215));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString(31, "Tm]*9g>aKU/IugL~", 46, 12);
      node1.mayMutateArguments();
      Node node2 = new Node(49, node0, node1, node0);
      node2.isThrow();
      node2.isDefaultCase();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node1 = new Node(49, 50, 4);
      node0.isContinue();
      node1.isThrow();
      node1.isInc();
      node1.isIf();
      node0.getLength();
      Node node2 = new Node((-2170), 42, 49);
      Node node3 = new Node(49, node0, 2, (-1780));
      node2.replaceChild(node1, node3);
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = new Node(1035);
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newNumber((-1011.0), 47, 15);
      Node node2 = Node.newString("-|EoV4rG[W}xjri");
      Node node3 = new Node(50, node2, node0);
      node3.addChildToBack(node1);
      node3.isRegExp();
      node2.siblings();
      node2.isFromExterns();
      node0.isObjectLit();
      node3.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesThis();
      node1.hasOneChild();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)73;
      byteArray0[1] = (byte) (-116);
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte) (-10);
      byteArray0[4] = (byte)110;
      byteArray0[5] = (byte)101;
      byteArray0[6] = (byte)43;
      byteArray0[7] = (byte)125;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node3.isExprResult();
      node1.isNot();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setIsSyntheticBlock(false);
      node0.wasEmptyNode();
      Node node1 = Node.newString(123, "", 4095, 111);
      node0.isVar();
      Node node2 = node0.srcrefTree(node1);
      node2.setChangeTime(4);
      node2.cloneTree();
      Node node3 = Node.newString(57, " : ");
      Node node4 = new Node(53, node1, node0, 12, 32);
      node4.addChildAfter(node1, node3);
      node3.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = new Node(22, 22, 22);
      Node node1 = new Node(30, node0);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isFromExterns();
      Node node2 = null;
      node1.addChildToBack((Node) null);
      node0.getProp(node1.OPT_ARG_NAME);
      // Undeclared exception!
      try { 
        node0.mayMutateGlobalStateOrThrow();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      Node node0 = new Node(1457);
      Node node1 = new Node(39, 55, 32);
      node0.children();
      node1.getLastSibling();
      node1.isString();
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = Node.newNumber(25.3061246501092);
      Node node1 = new Node(56, node0, node0);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      Node node2 = new Node(136);
      node2.setLength(1457);
      node1.isEquivalentToShallow(node1);
      Node node3 = Node.newString(53, "");
      node3.isEquivalentToTyped(node0);
      node1.checkTreeEqualsImpl(node3);
      Node node4 = node0.cloneNode();
      node0.isEquivalentToShallow(node2);
      node4.isNew();
      node4.isEquivalentTo(node3, false, false, false);
      node0.isAnd();
      Node node5 = Node.newString("", 43, 56);
      node0.isCase();
      node3.isWhile();
      node4.hasOneChild();
      node5.isAnd();
      node_AncestorIterable0.iterator();
      node3.isGetElem();
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.setIsSyntheticBlock(false);
      node0.isString();
      Node node1 = Node.newString(16, "Fi-'mD", 21, 1100);
      node0.isNull();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node2 = Node.newString("com.google.javascript.rhino.Node$ObjectPropListItem", 2147483645, 2745);
      node2.getSourceFileName();
      node1.removeProp(4194304);
      node2.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node((-862048943));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      node0.isBlock();
      Node node1 = node0.copyInformationFrom(node0);
      node1.isEquivalentTo(node0, false, false, false);
      node0.removeProp((-5581));
      node0.replaceChild(node1, node1);
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newString(88, "", 88, 88);
      node0.children();
      Node.newString(55, "");
      node0.isDec();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("", (-79), 30);
      node1.toStringTree();
      node0.addSuppression("");
      node0.setLineno(2);
      node1.isOnlyModifiesThisCall();
      node1.isVarArgs();
      node1.toString(true, false, false);
      node0.isTry();
      Node node2 = Node.newString(29, "");
      node2.siblings();
      node0.isDec();
      node0.isBreak();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      node0.isVar();
      Node node1 = new Node(56, 117, 1);
      Node node2 = node0.cloneTree();
      Node node3 = new Node(57, node2, node2, node0, node0, 45, 309);
      node0.replaceChild(node2, node2);
      int int0 = (-4096);
      Node node4 = new Node(int0, node3);
      node4.clonePropsFrom(node2);
      // Undeclared exception!
      try { 
        node1.isQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = Node.newString("", 1455, 1455);
      Node node1 = new Node(16, (Node) null, node0, (Node) null, node0);
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = new Node((-2297));
      node0.isDelProp();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newString(44, "com.google.javascript.rhino.Node$SideEffectFlags");
      node0.isLocalResultCall();
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = node0.useSourceInfoIfMissingFrom((Node) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      node3.getLength();
      Node.mergeLineCharNo(node3.FLAG_THIS_UNMODIFIED, node1.INPUT_ID);
      // Undeclared exception!
      try { 
        node3.getChildBefore(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = Node.newString("", (-62), (-62));
      Node node1 = node0.getAncestor((-41));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node0.LAST_PROP);
      node1.addChildBefore(node0, node0);
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setMutatesThis();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = new Node((-2297), (-2297), (-2297));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node node1 = node0.getAncestor((-2297));
      // Undeclared exception!
      try { 
        node1.isTrue();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isOr();
      Node node1 = new Node(56, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node1);
      node2.isTry();
      Node node3 = node1.copyInformationFrom(node0);
      node3.isArrayLit();
      node2.isCall();
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      Node node1 = new Node(46, node0, node0, node0, node0, 40, 49);
      node1.getAncestors();
      node0.setLength(19);
      node1.isDec();
      Node node2 = node0.cloneNode();
      node2.isQualifiedName();
      node2.getDouble();
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isQualifiedName();
      node0.getString();
      // Undeclared exception!
      try { 
        node0.isVarArgs();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = new Node(80);
      node0.isComma();
      node0.isDo();
      node0.isInc();
      node0.isAdd();
      Node node1 = Node.newNumber((-1420.2), 44, 37);
      node0.isQualifiedName();
      Node node2 = new Node(53, node1, 57, 50);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node2);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      node_NodeMismatch0.equals(node2);
      Node.extractLineno(2);
      Node node3 = Node.newNumber((double) 36);
      node3.getNext();
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getBooleanProp(4);
      node0.getIntProp(30);
      Node node1 = new Node(46, node0, node0, node0, node0, 30, 15);
      node1.removeProp(15);
      node1.hasMoreThanOneChild();
      node1.detachChildren();
      node0.getJSDocInfo();
      node1.isFalse();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node0 = new Node(101);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(112);
      node0.isEquivalentTo((Node) null, false, true, false);
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString(17, "Object#Element", 17, 17);
      Node node1 = Node.newNumber((double) 2);
      node0.isLocalResultCall();
      node0.setLineno(17);
      node1.getQualifiedName();
      node0.addChildrenToBack(node1);
      node1.removeProp(1088);
      node1.isOr();
      node0.isThrow();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isVarArgs();
      node0.getChildAtIndex(1441);
      int int0 = 85;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setMutatesThis();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(121, "");
      node0.isCatch();
      node0.isQualifiedName();
      node0.getChildAtIndex(121);
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      Node node1 = Node.newString("unexpected prop id ", 57, 98);
      node0.isEquivalentToShallow(node1);
      node0.isLocalResultCall();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("|", 57, 57);
      node1.isVar();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isBreak();
      node0.isWhile();
      node1.hasOneChild();
      Node.newString(0, "|");
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("|", 57, 57);
      node1.isVar();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.removeChild(node1);
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString((-689), "");
      boolean boolean0 = node0.isReturn();
      int int0 = 1396;
      Node node1 = null;
      Node node2 = new Node(4095, node0, node0, (Node) null, 119, 51);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      JSType[] jSTypeArray0 = null;
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newString(88, "");
      node0.isQuotedString();
      node0.isReturn();
      node0.setQuotedString();
      Node node1 = new Node(4, node0, node0);
      node0.isIf();
      node1.checkTreeEquals(node0);
      node0.isQualifiedName();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      int int0 = 88;
      Node node0 = Node.newString(88, "");
      node0.isQuotedString();
      node0.isReturn();
      node0.setQuotedString();
      Node node1 = new Node(4, node0, node0);
      node0.isIf();
      node1.checkTreeEquals(node0);
      node1.setLineno(1);
      Node node2 = Node.newString("Node tree inequality:\nTree1:\nRETURN\n    ASSIGN_BITXOR  [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000002]\n\n\nTree2:\nASSIGN_BITXOR  [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000002]\n\n\nSubtree1: RETURN\n    ASSIGN_BITXOR  [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000002]\n\n\nSubtree2: ASSIGN_BITXOR  [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000002]\n");
      node1.wasEmptyNode();
      Node node3 = new Node((-178), node1, node2, node2, 39, 29);
      node1.addChildAfter(node3, node2);
      node0.setLineno(int0);
      // Undeclared exception!
      try { 
        node3.isGetElem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1321);
      Node node1 = new Node(1321, node0, node0, 358, 16);
      node1.getIntProp(54);
      node1.addChildToFront(node0);
      node1.isSetterDef();
      // Undeclared exception!
      try { 
        node0.getIndexOfChild(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = Node.newNumber(125.58298671367916);
      node0.getChangeTime();
      Node node1 = new Node(114, node0, node0);
      node0.isEquivalentToShallow(node1);
      node0.isIn();
      node1.addChildToFront(node0);
      node0.isCatch();
      // Undeclared exception!
      try { 
        node1.cloneNode();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString("", 57, 57);
      node1.setLength(36);
      Node node2 = new Node(93, node1, node0);
      node2.isDec();
      Node node3 = node2.cloneNode();
      node2.isIf();
      node0.addChildrenAfter(node2, node3);
      node2.getStaticSourceFile();
      node2.copyInformationFrom(node1);
      // Undeclared exception!
      try { 
        node3.removeFirstChild();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(6454);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node0.setChangeTime(6454);
      node_SideEffectFlags2.setThrows();
      node0.setChangeTime(1331);
      Node node1 = new Node((-1256), node0, 4095, 896);
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node node0 = Node.newString("|");
      node0.isReturn();
      node0.setQuotedString();
      Node node1 = node0.cloneNode();
      node1.getStaticSourceFile();
      Node node2 = new Node(0, node1, node0, node1, 4, 8);
      node1.isNumber();
      node2.isOnlyModifiesArgumentsCall();
      node2.isThis();
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.getBooleanProp(4);
      node0.getIntProp(30);
      node0.isQuotedString();
      Node node1 = new Node(46, node0, node0, node0, node0, 30, 15);
      node1.removeProp(15);
      node1.hasMoreThanOneChild();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node.extractCharno(0);
      Node node0 = new Node(0);
      String string0 = "directives";
      node0.putProp((-1094), "directives");
      node0.isGetProp();
      node0.getExistingIntProp(0);
      node0.isWhile();
      // Undeclared exception!
      try { 
        node0.addSuppression(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 0
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = new Node(117);
      Node node1 = new Node((-59), 111, 1);
      node0.setChangeTime(93);
      node0.isHook();
      node0.isVar();
      Node node2 = new Node(45, 34, 1);
      Node node3 = node0.cloneTree();
      Node node4 = new Node(0, node2, node1, node3, node1, 43, 32);
      node1.isAdd();
      Node node5 = node3.copyInformationFrom(node1);
      node1.setChangeTime(31);
      node4.isExprResult();
      node5.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      Node node1 = new Node(36, node0);
      node0.setChangeTime((-1638));
      node0.isDo();
      node1.isHook();
      node0.isVar();
      Node node2 = new Node((-579), 56, 910);
      Node node3 = node2.cloneTree();
      Node node4 = new Node(821, node1, node3, node3, node0, 51, 1021);
      node4.isAdd();
      Node node5 = node1.copyInformationFrom(node4);
      int int0 = 279;
      node5.setChangeTime(int0);
      node3.isExprResult();
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = new Node((-862048943));
      node0.isParamList();
      Node node1 = Node.newString("[c+~S\";J", 36, 624);
      Node node2 = node0.copyInformationFrom(node1);
      node0.isEquivalentTo(node2, true, true, false);
      node2.replaceChild(node1, node0);
      node0.siblings();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      Node node1 = new Node(36, node0);
      Node node2 = new Node(101);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node1.isObjectLit();
      node1.isNew();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node3 = Node.newNumber((double) 4, 40, 1194);
      node3.isQualifiedName();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node((-3616), node0, node0, node0, node0);
      node0.useSourceInfoFromForTree(node1);
      node1.isQualifiedName();
      node1.setQuotedString();
      node0.isLocalResultCall();
      // Undeclared exception!
      try { 
        node1.isAdd();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isSwitch();
      node0.setChangeTime(6454);
      Node node1 = null;
      node0.checkTreeEquals((Node) null);
      node0.addChildrenAfter(node1, node1);
      // Undeclared exception!
      try { 
        node0.getStaticSourceFile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = new Node(4, 22, 4);
      Node node1 = new Node(46, node0, node0, node0, node0, 40, 49);
      node1.getAncestors();
      node0.setLength(19);
      node1.isDec();
      Node node2 = node0.cloneNode();
      node2.addSuppression("-l_pP:Ts{t35");
      node1.isFunction();
      node2.copyInformationFrom(node0);
      node1.removeFirstChild();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(111, 111, 111);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F:zcD4");
      Node node1 = Node.newString(102, "F:zcD4");
      node1.isAnd();
      Node.newString(43, "|", 45, 4095);
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = new Node(80);
      node0.isComma();
      node0.isDo();
      node0.isInc();
      node0.isAdd();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = Node.newNumber((-1420.2), 44, 37);
      node0.isQualifiedName();
      Node node2 = new Node(53, node1, 57, 50);
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node2);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      node_NodeMismatch0.equals(node2);
      Node.extractLineno(2);
      PipedReader pipedReader0 = new PipedReader();
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      node1.appendStringTree(pipedWriter0);
      node2.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      Node node1 = new Node(36, node0);
      Node node2 = new Node(101);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setThrows();
      node1.isObjectLit();
      node1.isNew();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node3 = Node.newNumber((double) 4, 40, 1194);
      node3.isQualifiedName();
      node0.isIf();
      node2.srcrefTree(node1);
      node3.isWhile();
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(6454);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = Node.newNumber((double) 39, 0, (-4282));
      Node node2 = node0.srcrefTree(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node3 = new Node(53, (Node) null, node2, node0);
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "|";
      // Undeclared exception!
      try { 
        FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      Node node1 = Node.newString("|", 57, 57);
      node1.isVar();
      node0.setLength(30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.GLOBAL_THIS;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node2.isDec();
      Node node3 = node2.cloneNode();
      node1.isIf();
      node3.addChildrenAfter(node0, node0);
      // Undeclared exception!
      try { 
        node2.getStaticSourceFile();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isOr();
      Node node1 = new Node((-951), node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isTry();
      node0.setDouble(0.5);
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      node0.isDo();
      node0.isInc();
      node0.isAdd();
      Node node1 = Node.newString(4095, "Q?;gbE{JFgon^");
      Node node2 = new Node(43);
      node2.isInstanceOf();
      node0.isExprResult();
      node1.isNot();
      Node node3 = new Node(0, node2, node1, 52, 1);
      node0.useSourceInfoFrom(node3);
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = Node.newString("W*Nf?/jF6>dcX", 22, 22);
      node0.isNoSideEffectsCall();
      node0.getQualifiedName();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = new Node((-373));
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isDebugger();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isAssignAdd();
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = new Node(22, 22, 22);
      Node node1 = new Node(22, node0, node0);
      node1.getAncestors();
      node0.setLength(19);
      node1.isDec();
      Node node2 = node0.cloneNode();
      node0.setIsSyntheticBlock(false);
      Node node3 = node1.removeChildren();
      Node node4 = node2.useSourceInfoFromForTree(node3);
      Node node5 = node1.srcref(node2);
      node5.setOptionalArg(false);
      node4.getString();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      // Undeclared exception!
      try { 
        node5.isLocalResultCall();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SUB 22 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = Node.newString("W*Nf?/jF6>dcX", 22, 22);
      node0.isNoSideEffectsCall();
      node0.cloneTree();
      node0.getQualifiedName();
      node0.isAssignAdd();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = new Node(678, 678, 678);
      Node node1 = new Node(40, (-85), (-1631));
      Node node2 = new Node(132, node1, node1, node1, node1, 29, 83);
      node2.getAncestors();
      node1.setLength(49);
      node2.isDec();
      Node node3 = node2.cloneNode();
      node0.isFunction();
      node0.isEmpty();
      node3.isRegExp();
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node0.isObjectLit();
      node0.isLabel();
      node0.getBooleanProp(901);
      node0.isExprResult();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node0.isNot();
      Node node1 = new Node(4, node0, 26, 2902);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isFunction();
      node0.setLineno((-1141));
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node((-655), (-655), (-3860));
      Node node1 = new Node(32, node0, node0, node0, node0, 43, 86);
      node1.setLength(37);
      node1.isDec();
      Node node2 = node1.cloneNode();
      node2.addSuppression("aHz3");
      node1.isFunction();
      node0.isEmpty();
      node2.isRegExp();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node((-655), (-655), (-3860));
      Node node1 = new Node(32, node0, node0, node0, node0, 43, 86);
      node1.setLength(37);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.srcref(node0);
      node1.setOptionalArg(false);
      node1.getString();
      int int0 = 101;
      Node[] nodeArray0 = new Node[1];
      int int1 = 130;
      Node node3 = null;
      try {
        node3 = new Node(int0, nodeArray0, node0.STATIC_SOURCE_FILE, int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TYPEOF [length: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      node0.isDebugger();
      node0.isWith();
      Node.newString(146, "");
      Node node1 = new Node((-1976));
      Node.newString(134, "R.$Vg");
      node0.isInstanceOf();
      node1.isExprResult();
      node1.isNE();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node((-3374), 44, 85);
      Node node1 = new Node(37, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = node2.clonePropsFrom(node1);
      node3.isEquivalentTo(node2, true, true, true);
      node0.replaceChildAfter(node1, node1);
      Node node4 = node0.removeChildren();
      node4.addChildrenToBack(node1);
      node4.isIn();
      // Undeclared exception!
      try { 
        node4.isAnd();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, (-1501));
      InputId inputId0 = new InputId("jsdoc_info");
      node0.isStringKey();
      node1.isDelProp();
      node1.isQuotedString();
      node1.setChangeTime((-1811));
      node0.isNE();
      Node node2 = new Node(4096);
      node2.replaceChildAfter(node0, node1);
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = new Node(2877, 2877, 2877);
      node0.setType(40);
      Node node1 = new Node(2877, 1, 16);
      Node node2 = node0.cloneTree();
      Node node3 = new Node(55, node2, node2, node0, node1, 167, 27);
      node3.srcrefTree(node0);
      node1.replaceChild(node0, node2);
      Node node4 = new Node(node1.OPT_ARG_NAME, node0);
      node4.clonePropsFrom(node1);
      // Undeclared exception!
      try { 
        node2.isQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node0.removeProp(255);
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(31);
      node1.setChangeTime(44);
      node1.isDo();
      node0.isArrayLit();
      node0.isDelProp();
      node0.isQuotedString();
      node0.isObjectLit();
      node1.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(119);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(57);
      Node node2 = Node.newNumber(0.0);
      node1.setWasEmptyNode(false);
      node2.setWasEmptyNode(true);
      Node node3 = new Node(2147483645, 306654252, 37);
      node3.isGetterDef();
      node3.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = node2.getAncestors();
      node2.setSourceFileForTesting("ERROR_TYPE");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node0.isDec();
      Node node1 = node0.cloneNode();
      node0.addSuppression("Lq%");
      node0.isFunction();
      Node node2 = new Node(30, node1, node1, 35, (-1207));
      node2.isEmpty();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      node0.isLabelName();
      Node node1 = Node.newNumber((double) 36, 39, 0);
      node0.children();
      Node node2 = Node.newString(2, "");
      node2.isDec();
      node1.isGetProp();
      node0.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(337, 337, 122);
      node0.isAnd();
      Node.newString(31, "G|VqO\"Jr6ZyyJe", (-3359), 430);
      Node.newString(64, "G|VqO\"Jr6ZyyJe");
      node0.isEmpty();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = Node.newString((-4399), "U_yGc!T{W@@g9", 23, (-41));
      Node node1 = Node.newNumber(1591.29);
      Node node2 = new Node(1600, node0, node0, node0, node1);
      node2.removeChild(node0);
      node1.setString("UG~`1 0nYl._$2i@1");
      Node.extractCharno(node0.STATIC_SOURCE_FILE);
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "Y!>";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      node2.isContinue();
      node2.isFromExterns();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node2, node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 1591.29 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1035);
      node0.setIsSyntheticBlock(true);
      node0.isLabel();
      Node node1 = Node.newString(16, "", 4, 39);
      node1.isFor();
      Node node2 = node1.srcref(node0);
      node0.isVar();
      node0.useSourceInfoFromForTree(node1);
      node1.isCase();
      node2.isTrue();
      node1.isQualifiedName();
      node2.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1035);
      node0.setIsSyntheticBlock(true);
      node0.isIn();
      node0.isLabel();
      Node node1 = Node.newString(16, "", 4, 39);
      node1.isFor();
      Node node2 = node1.srcref(node0);
      node0.isVar();
      node1.srcrefTree(node0);
      Node node3 = new Node(52);
      node3.useSourceInfoFromForTree(node1);
      node1.isCase();
      node3.isTrue();
      node1.isQualifiedName();
      node2.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isSwitch();
      Node node1 = new Node(112, node0, node0, node0, node0, 22, 57);
      node1.getAncestors();
      node1.setLength(16);
      node1.isDec();
      node1.cloneNode();
      node1.isQualifiedName();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Node node0 = new Node(678);
          Node node1 = new Node(38, node0, node0, node0, 2, (-1513));
          node1.setChangeTime(44);
          node1.isDo();
          node1.isFor();
          node1.isVar();
          Node node2 = node1.srcrefTree(node0);
          node1.isThrow();
          SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
          JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
          node2.cloneNode();
          node1.getChildAtIndex(8);
          Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node2.FLAG_THIS_UNMODIFIED);
          node_SideEffectFlags0.clearAllFlags();
          Node node3 = node0.copyInformationFrom(node2);
          // Undeclared exception!
          try { 
            node3.removeFirstChild();
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             verifyException("com.google.javascript.rhino.Node", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newString("");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(50, nodeArray0);
      node0.addChildToFront(node1);
      node1.isArrayLit();
      node0.getChildCount();
      node0.isName();
      node1.isTrue();
      node0.isDec();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = Node.newString(2877, "_1{Gae2LNy ");
      Node node1 = new Node(98, node0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.isAnd();
      Node.newString(117, "_1{Gae2LNy ", 2866, (-855));
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = Node.newString("");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(50, nodeArray0);
      node0.getQualifiedName();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.getCharno();
      node0.getInputId();
      node0.isFalse();
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node((-3374), 44, 85);
      Node node1 = node0.copyInformationFromForTree(node0);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isEquivalentTo(node1, true, true, true);
      node0.replaceChildAfter(node0, node0);
      Node node3 = node0.removeChildren();
      node2.getAncestor(node3.SIDE_EFFECT_FLAGS);
      double double0 = (-1392.218629707797);
      int int0 = 98;
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = Node.newString(124, "com.google.javascript.rhino.Node$AbstractPropListItem");
      node0.isObjectLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(0);
      Node node1 = new Node(31);
      node1.setWasEmptyNode(false);
      node1.isGetterDef();
      node1.isBlock();
      node1.getAncestors();
      node1.clonePropsFrom(node0);
      node1.isCall();
      node1.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isContinue();
      node0.isThrow();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~[v!#K#>?");
      node0.getBooleanProp(306654252);
      node0.getLength();
      InputId inputId0 = new InputId("unexpected prop id ");
      node0.isStringKey();
      node0.isDelProp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      node_SideEffectFlags0.clearAllFlags();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isContinue();
      node0.isThrow();
      Node node1 = Node.newString(8, "");
      Node node2 = Node.newString((-2297), "");
      Node node3 = new Node(39, node2);
      node1.isAnd();
      Node node4 = node2.cloneTree();
      node4.wasEmptyNode();
      Node.newString(37, "", 1, (-2297));
      node3.isQualifiedName();
      node3.getParent();
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = Node.newString(124, "La)~", 124, 124);
      node0.isEquivalentToShallow(node0);
      node0.setLength(11742002);
      node0.isDec();
      Node node1 = node0.cloneNode();
      node1.addSuppression("s&a'2PQp7");
      node1.isFunction();
      node0.isEmpty();
      node0.isRegExp();
      node0.isUnscopedQualifiedName();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = Node.newString(1035, "53&wb(");
      Node node1 = new Node(36, node0, node0, node0);
      node1.useSourceInfoFrom(node0);
      node0.getProp(1457);
      node0.useSourceInfoFromForTree(node1);
      node0.isCase();
      node0.isBreak();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = new Node(120);
      node0.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(6454);
      Node node1 = new Node(15);
      Node node2 = new Node(4095);
      Node node3 = Node.newString(50, "??");
      File file0 = MockFile.createTempFile("T-I;i~yEFjp|EU5i^/", ";J$>,5");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockPrintWriter0);
      node3.appendStringTree(bufferedWriter0);
      node1.getSourceOffset();
      node1.checkTreeEquals(node3);
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      node0.isObjectLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1063));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(80);
      node0.isBlock();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      int int0 = 2033;
      Node node0 = new Node(100, 2033, 100);
      node0.setVarArgs(true);
      node0.setWasEmptyNode(true);
      node0.setDouble(1.2);
      node0.getIntProp(int0);
      int int1 = (-2223);
      Node node1 = null;
      try {
        node1 = new Node(int1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // OR 2033 [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = Node.newString(121, "");
      node0.isAssignAdd();
      Node node1 = new Node((-860), node0, node0, (-860), 36);
      Node node2 = new Node(29, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node(300, 37, 2674);
      Node node2 = new Node(50, node0, node1);
      node0.useSourceInfoIfMissingFromForTree(node2);
      node0.hasOneChild();
      node0.isName();
      node0.isTrue();
      node0.hasChildren();
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(149, 470, 1439);
      Node node2 = new Node(0, node0, node0, node1, node0, 53, 48);
      node1.getAncestors();
      node1.setLength(51);
      node2.isDec();
      node2.cloneNode();
      node0.isQualifiedName();
      Node node3 = Node.newString("=tSacjc+ /;R]2", (-83), 1974);
      node3.getDouble();
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isComma();
      node0.isLabelName();
      Node node1 = Node.newNumber((double) 36, 39, 0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-40);
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte) (-33);
      byteArray0[4] = (byte)123;
      byteArray0[5] = (byte)26;
      byteArray0[6] = (byte) (-116);
      byteArray0[7] = (byte)51;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.getDouble();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "|");
      node1.getQualifiedName();
      node1.isCase();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.getType();
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = new Node(678);
      Node node1 = new Node(38, node0, node0, node0, 2, 15);
      node0.isDo();
      node1.isFor();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(93);
      node3.isDebugger();
      node1.getProp((-349));
      node1.useSourceInfoFromForTree(node3);
      node0.isCase();
      node2.isBreak();
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(111, 111, 111);
      node0.isDo();
      node0.isHook();
      node0.getChangeTime();
      node0.isSyntheticBlock();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(148);
      node_SideEffectFlags0.setAllFlags();
      node0.setSideEffectFlags(node_SideEffectFlags0);
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpNcted prop id ");
      Node node1 = Node.newString((-4655), "unexpNcted prop id ");
      Node node2 = new Node(37, node0);
      node2.isAnd();
      Node.newString(1, "unexpNcted prop id ", 43, 52);
      node1.getType();
      node1.isCast();
      node1.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = new Node(100, 1648, 126);
      node0.isContinue();
      node0.isThrow();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      node0.getBooleanProp(39);
      node0.getLength();
      InputId inputId0 = new InputId("jsdoc_info");
      node0.isStringKey();
      node0.isDelProp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node_SideEffectFlags0.clearAllFlags();
      node0.isDec();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(111, 111, 111);
      node0.getIntProp(111);
      Node node1 = new Node(0);
      node1.isCase();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node2 = node1.useSourceInfoIfMissingFromForTree((Node) null);
      // Undeclared exception!
      try { 
        node2.getType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = new Node(111, 111, (-721));
      Node node1 = new Node(54, node0, node0, node0, node0, 134, (-753));
      node0.getAncestors();
      node1.checkTreeEqualsImpl(node0);
      node1.setLength(1947);
      node0.isDec();
      Node node2 = node0.cloneNode();
      node0.isQualifiedName();
      node2.getDouble();
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2241);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node1 = new Node(4);
      node1.isSyntheticBlock();
      node0.setWasEmptyNode(true);
      Node node2 = new Node(119);
      node0.isInstanceOf();
      node2.isExprResult();
      node2.isVarArgs();
      node2.isBreak();
      node0.isNot();
      node2.useSourceInfoFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2869);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(36, node0, node0, 40, 50);
      node0.addChildToFront(node1);
      node0.isArrayLit();
      node1.isDelProp();
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isCast();
      node1.removeChild((Node) null);
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = new Node(1485);
      Node node1 = new Node((-449), node0, node0, node0, node0);
      Node node2 = node1.removeChildren();
      Node.newNumber(127.9549);
      node2.detachChildren();
      node2.addChildAfter(node0, node1);
      node1.isInstanceOf();
      node1.getType();
      // Undeclared exception!
      try { 
        node0.getNext();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node((-656), (-656), (-3860));
      Node node1 = new Node(32, node0, node0, node0, node0, 43, 86);
      node1.setLength(37);
      node0.isCall();
      Node node2 = node1.cloneNode();
      node2.addSuppression("<aH3");
      node1.isFunction();
      node1.addSuppression("<aH3");
      node2.setSourceFileForTesting("<aH3");
      node0.isEmpty();
      node1.removeFirstChild();
      node2.isRegExp();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node node0 = new Node(3186);
      node0.setSourceFileForTesting("slash_v");
      node0.getProp(4095);
      node0.getSourceOffset();
      node0.getDirectives();
      node0.isOr();
      node0.isEmpty();
      node0.isRegExp();
      Node.newString(1534, "slash_v");
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = new Node(3186);
      node0.setSourceFileForTesting("slash_v");
      node0.getBooleanProp(1177);
      node0.getProp(1177);
      node0.getSourceOffset();
      node0.isTypeOf();
      node0.getDirectives();
      Node node1 = Node.newString(307, "slash_v");
      node1.getChangeTime();
      node0.isEquivalentTo(node1, true, false, false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-51);
      byteArray0[2] = (byte)22;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.getProp(47);
      Node node2 = node0.srcref(node1);
      node0.wasEmptyNode();
      node1.isUnscopedQualifiedName();
      node0.getChildBefore(node2);
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(111, 111, 111);
      Node node1 = Node.newString(57, "com.google.common.collect.AbstractMapBasedMultimap$AsMap");
      Node node2 = new Node(51);
      Node node3 = node2.cloneNode();
      node0.isExprResult();
      node1.isNE();
      node0.isScript();
      node3.getLength();
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry1.createTemplateType("#+o&jP+$.i");
      jSTypeRegistry0.identifyNonNullableName("Not declared as a type name");
      jSTypeArray0[0] = (JSType) templateType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("@46w>+zv\"oYtB+", node0, templateType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getOwnPropertyJSDocInfo("Unknown class name");
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node node2 = Node.newString("wRbm}P;L");
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(1499, nodeArray0);
      Node node4 = new Node(105, node1, node2, node3);
      node0.checkTreeEquals(node4);
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(0.5, 1514, 1514);
      Node node1 = Node.newString("|");
      Node node2 = new Node((byte)0, node0, node1, node1);
      node2.hasChildren();
      node2.mayMutateGlobalStateOrThrow();
      node2.cloneTree();
      node2.isVarArgs();
      node2.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = new Node(100, 1648, 126);
      node0.isContinue();
      node0.isThrow();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      node0.getBooleanProp(39);
      node0.getLength();
      InputId inputId0 = new InputId("jsdoc_info");
      Node node1 = new Node(29, node0, node0, node0, node0, (-2602), 36);
      node0.copyInformationFrom(node1);
      node0.isOptionalArg();
      node0.isReturn();
      Stack<JSType> stack0 = new Stack<JSType>();
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = new Node(132, 88, 132);
      Node node1 = new Node(31, node0, node0, node0, node0, 2391, 29);
      node1.getAncestors();
      node0.setLength((-3122));
      node0.isDec();
      Node node2 = new Node(12, node1, node1, node1, node1, 43, 0);
      node2.cloneNode();
      node0.isQualifiedName();
      node2.getDouble();
      String string0 = " N(6}gIXHp";
      Node node3 = Node.newString(string0);
      node2.useSourceInfoFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      Node node1 = new Node(36, node0);
      Node.newString(30, "String node not created with Node.newString");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      Node node2 = Node.newNumber(1.0, 29, (-889));
      node0.getAncestor(1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = Node.newNumber((-1168.95720545));
      node0.getBooleanProp(4);
      node0.getIntProp(30);
      Node node1 = node0.getAncestor(0);
      Node node2 = new Node(46, node0, node0, node0, node0, 30, 15);
      node1.copyInformationFrom(node0);
      node1.isVar();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = Node.newString(88, "");
      Node node1 = Node.newNumber((-1604.53812266));
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.iterator();
      node1.removeProp(255);
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-679));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags((-679));
      Node node0 = Node.newNumber(25.3061246501092);
      node0.setWasEmptyNode(true);
      node0.setWasEmptyNode(true);
      node0.isGetterDef();
      node0.isLocalResultCall();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node0.wasEmptyNode();
      node0.isEquivalentTo((Node) null);
      node_AncestorIterable0.forEach(consumer1);
      node_AncestorIterable0.iterator();
      String string0 = ".`Reiz`&";
      // Undeclared exception!
      try { 
        node0.addSuppression(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = new Node(3186);
      node0.setSourceFileForTesting("slash_v");
      node0.getBooleanProp(1177);
      Node node1 = Node.newString(15, "(ZiYQ/HBkZBfdgp");
      node1.isAnd();
      Node node2 = Node.newString((-698), "(ZiYQ/HBkZBfdgp", (-2165), 48);
      node1.isQualifiedName();
      Node node3 = Node.newString(35, "");
      Node node4 = new Node(4095, node1, node3, node1, 1, 8);
      node0.copyInformationFrom(node4);
      node2.isOptionalArg();
      node2.isReturn();
      Stack<JSType> stack0 = new Stack<JSType>();
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      Node node1 = new Node(43);
      node1.cloneNode();
      node0.isLocalResultCall();
      node1.isThis();
      node0.setLineno(2027);
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      Node node1 = new Node(36, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J-]dX");
      Node.newString(1, "J-]dX", 46, 36);
      node0.isOnlyModifiesArgumentsCall();
      node0.isStringKey();
      node1.isThis();
      node0.getLineno();
      node1.getIntProp(51);
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(39, 44, 85);
      Node node1 = node0.copyInformationFromForTree(node0);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isEquivalentTo(node1, true, true, true);
      node0.replaceChildAfter(node0, node0);
      Node node3 = node0.removeChildren();
      node2.getAncestor(node3.SIDE_EFFECT_FLAGS);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      node0.isDebugger();
      node0.isWith();
      Node.newString(55, "");
      Node.newString((-1419), "agKa;>D4]]si|l1t&");
      Node node1 = new Node(4095, node0);
      node0.isAnd();
      Node node2 = Node.newString(35, "agKa;>D4]]si|l1t&", 39, 4095);
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      String string0 = "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ";
      Node node0 = Node.newString(1240, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 1240, 93);
      node0.setSourceEncodedPosition(93);
      Node node1 = new Node(93, node0, node0, node0);
      node1.mayMutateArguments();
      Node.newNumber((-2736.359462));
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.addMarker();
      node0.getStaticSourceFile();
      node1.setJSDocInfo(jSDocInfo0);
      Node node2 = node1.srcref(node0);
      node1.isSetterDef();
      node0.replaceChildAfter(node1, node2);
      double double0 = 40.0;
      node1.setDouble(double0);
      // Undeclared exception!
      try { 
        node1.copyInformationFromForTree(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(101);
      node0.isOnlyModifiesThisCall();
      node0.isHook();
      node0.isDefaultCase();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals("^");
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = new Node(32, 32, 32);
      Node node1 = new Node(15, node0, node0, node0, node0, 2, 39);
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-889));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      Node node2 = node1.copyInformationFrom(node0);
      node1.removeFirstChild();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.isAssign();
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = Node.newString(16, "prototype", 2610, 1416);
      Node node2 = node0.srcrefTree(node1);
      Node node3 = new Node(11, node2, node2, node0, 1, 54);
      Node node4 = new Node(126, node0, node3, node2);
      node4.getIntProp(node3.IS_NAMESPACE);
      int int0 = 63;
      node2.setChangeTime(int0);
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "|";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      // Undeclared exception!
      try { 
        node3.isExprResult();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(39, 44, 85);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = node0.copyInformationFromForTree(node0);
      Node node2 = node1.clonePropsFrom(node0);
      boolean boolean1 = true;
      node2.isEquivalentTo(node1, boolean0, boolean1, boolean0);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2241);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node1 = new Node(53, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isTry();
      node2.copyInformationFrom(node1);
      node1.isOptionalArg();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(55, 37, 2670);
      Node node2 = new Node(50, node0, node1);
      node2.addChildBefore(node1, node1);
      Node node3 = new Node(node2.INFERRED_FUNCTION, node0, node2, node2);
      // Undeclared exception!
      try { 
        node0.hasOneChild();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = Node.newString("W*Nf?/jF6>dcX", (-1719), 1470);
      Node node1 = new Node(110, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isTry();
      Node node3 = new Node(8, node1, 63, 12);
      Node node4 = node3.copyInformationFrom(node0);
      node3.isOptionalArg();
      Node node5 = node1.cloneTree();
      node5.setSourceFileForTesting("-0 xnNnIyU\"z:");
      node4.getLength();
      node4.isComma();
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = new Node(32, 32, 32);
      Node node1 = new Node(15, node0, node0, node0, node0, 2, 39);
      Node node2 = new Node(8, (-739), 55);
      Node node3 = node0.copyInformationFromForTree(node2);
      Node node4 = node2.clonePropsFrom(node0);
      node1.isEquivalentTo(node4, false, true, true);
      Node node5 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch");
      node4.replaceChildAfter(node5, node3);
      node2.removeChildren();
      node3.getAncestor(node1.IS_CONSTANT_NAME);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = null;
      try {
        jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node.extractCharno((-131));
      Node node0 = Node.newString(3965, "com.google.common.base.CharMatcher$Or");
      node0.isOptionalArg();
      node0.getString();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node((-2867), node0, node0, node0, 12, 21);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?fL1");
      Node node3 = Node.newString(21, "com.google.common.base.CharMatcher$Or", 46, (-1479));
      node0.addChildToFront(node3);
      node3.isDec();
      Node node4 = node0.getParent();
      node4.setSourceFileForTesting("com.google.common.base.CharMatcher$Or");
      Node node5 = node2.getFirstChild();
      node5.isFunction();
      Node.newNumber((double) (-131), 30, (-1190));
      node3.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = new Node((-1719), (-1719), 1470);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) arrayList0);
      node1.srcref(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node0.setSideEffectFlags(node_SideEffectFlags4);
      int int0 = 120;
      node0.setChangeTime(int0);
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = Node.newString(15, "unexpected prop id ");
      node0.isDebugger();
      node0.isDo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node0.setChangeTime(271);
      node0.isExprResult();
      node0.isTypeOf();
      node0.isBreak();
      node0.removeChildAfter((Node) null);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(38, node0);
      node1.hasMoreThanOneChild();
      node1.putProp(1048576, node0);
      node1.getQualifiedName();
      node1.getDirectives();
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 1048576
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isHook();
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node node1 = Node.newNumber((double) 38);
      node0.addChildrenToBack(node1);
      node1.isAssignAdd();
      node0.isStringKey();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = Node.newString(96, "");
      node0.isCatch();
      node0.isNull();
      node0.setQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(4095, node0, node0, node0, 47, 0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals("");
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("String node not created with Node.newString", 0, 0);
      Node node1 = new Node(36, node0);
      Node node2 = new Node(52);
      Node node3 = Node.newString(37, "String node not created with Node.newString", 50, 16);
      node1.isQualifiedName();
      node2.copyInformationFrom(node1);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[3];
      EnumType enumType0 = jSTypeRegistry0.createEnumType("8Qx8P5Pk+Ho", node3, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      ObjectType objectType0 = enumElementType0.getImplicitPrototype();
      jSTypeArray0[0] = (JSType) objectType0;
      JSType jSType0 = enumElementType0.getTypeOfThis();
      jSTypeArray0[1] = jSType0;
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node node0 = Node.newNumber((-1168.95720545));
      node0.getBooleanProp(4);
      node0.getIntProp(30);
      Node node1 = node0.getAncestor(0);
      Node node2 = new Node(46, node0, node0, node0, node0, 30, 15);
      node2.removeProp(15);
      node2.hasMoreThanOneChild();
      node2.isOnlyModifiesThisCall();
      node1.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      Node node1 = new Node(43);
      node0.isNull();
      node1.setChangeTime(42);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = new Node(111);
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      node0.isDec();
      node0.isCase();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isBreak();
      node0.getExistingIntProp(111);
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(41, ": Q|K");
      node0.isCatch();
      node0.isNull();
      node0.setQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(31, node0, node0, node0, 1, 4);
      node0.isOr();
      node0.isEmpty();
      node0.isRegExp();
      Node.newString(55, ": Q|K");
      Node node2 = Node.newString("", 39, 93);
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(101);
      node0.isOnlyModifiesThisCall();
      node0.isHook();
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(148);
      node_SideEffectFlags0.setAllFlags();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node0.isIf();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "|");
      node0.srcref((Node) null);
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = new Node(158);
      Node node1 = new Node(37, node0, node0, node0, (-1137), 105);
      node0.isNull();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node1.setSideEffectFlags(node_SideEffectFlags1);
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = new Node(32, 32, 32);
      Node.newString(77, "com.google.common.base.CharMatcher$NegatedFastMatcher");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(3342);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(1150);
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node0.setChangeTime((-3498));
      node0.isSwitch();
      node0.isTypeOf();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node node0 = Node.newString(117, "unexpected prop id ");
      node0.isVar();
      Node node1 = new Node(43);
      node1.isOnlyModifiesArgumentsCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node0.isLocalResultCall();
      node1.isThis();
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = new Node(103, (-1508), 62);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(130);
      node_SideEffectFlags0.setThrows();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      Node node1 = new Node(105, node0, node0, node0, node0, (-1542), 40);
      node0.isDec();
      node1.isCast();
      node0.isAssign();
      Node.newString(40, "L%8}%K@=s{ow4,>");
  }
}
