/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 31 08:27:06 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.UnmodifiableIterator;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Comparator;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      int int0 = 39;
      Node[] nodeArray0 = new Node[6];
      Node node0 = null;
      Node node1 = Node.newString(39, "");
      Node node2 = null;
      Node node3 = new Node(39, (Node) null, node1, (Node) null, node1, 90, 725);
      nodeArray0[0] = node3;
      int int1 = 26;
      Node node4 = null;
      try {
        node4 = new Node(int1, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 127);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(31, node1, 50, 1);
      node0.getIntProp(30);
      node1.addChildrenToBack(node2);
      node1.cloneNode();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = Node.newString((-2649), "com.google.javascript.rhino.jstype.FunctionType$PropAccess");
      node0.getNext();
      Node.newString("X");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('-');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "com.google.javascript.rhino.jstype.FunctionType$PropAccess");
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) "com.google.javascript.rhino.jstype.FunctionType$PropAccess", 4, 55);
      node0.appendStringTree(stringWriter3);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = new Node((-2701), (Node) null, (Node) null, (Node) null, (Node) null, (-2701), (-2701));
      int int0 = 492;
      node0.getIntProp(int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = Node.newString((String) null);
      int int0 = 898;
      Node node2 = null;
      try {
        node2 = new Node(node0.POST_FLAG, node0, node1, node0, node0, int0, node0.SYNTHETIC_BLOCK_PROP);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParameters((JSType[]) null);
      // Undeclared exception!
      try { 
        node0.getSourceOffset();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newString("new child has existing parent");
      Node node1 = new Node(2, node0, node0, node0);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newString((String) null);
      node0.isIn();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newString((-238), "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition(1287);
      node0.getProp(45);
      Node node1 = new Node(0, node0, 79, (-3693));
      node1.isCatch();
      node0.isOnlyModifiesThisCall();
      node1.isAnd();
      node1.children();
      node1.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      node1.putIntProp(1654, 1);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.newString("u+zn^Vi!");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = Node.newString(0, "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition((-919));
      node0.getProp(45);
      Node node1 = new Node(6720, node0, 54, 1);
      node1.isCatch();
      node0.isOnlyModifiesThisCall();
      node1.isAnd();
      node0.children();
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = new Node((-446));
      node0.isWhile();
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newString("");
      node0.isTry();
      Node node1 = Node.newString("");
      node0.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString("");
      Node node1 = Node.newString(53, "", 12, 1);
      node0.isEmpty();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = Node.newString(52, "qcIJ~|Z+b]'>WJB:L");
      node0.setSourceEncodedPosition(52);
      node0.removeFirstChild();
      node0.srcrefTree((Node) null);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newString("x{y>SEk@$gt|qc6\"bbX");
      node0.toString(true, true, true);
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newString(",", 0, 1479);
      Node node1 = new Node(0, node0, node0);
      node1.setIsSyntheticBlock(false);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("`\"WcwbA<-8aT7");
      node0.isOnlyModifiesThisCall();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = new Node(111, 111, 111);
      node0.isNew();
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(50);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node1.getInputId();
      node1.children();
      Node.newString("0N9Rn/\"");
      node1.getAncestor(31);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = new Node(102);
      node0.getExistingIntProp(102);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = Node.newString("eMHVTW");
      Node node1 = new Node(660, node0);
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = Node.newString("");
      node0.isContinue();
      node0.setDouble(57);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.getLength();
      Node node1 = new Node(4095, 808, 12);
      node1.isGetProp();
      node1.isAnd();
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node1.isExprResult();
      node0.children();
      node0.getAncestor(51);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Node node1 = new Node(39);
      node0.isOnlyModifiesThisCall();
      node0.isTypeOf();
      node1.getInputId();
      node1.isScript();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setSourceEncodedPosition((-3232));
      Node node1 = new Node(91, node0, 57, (-2197));
      node1.getChildAtIndex(1);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node(102);
      node0.getDirectives();
      node0.getExistingIntProp(102);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF", 4, (-72));
      node0.isRegExp();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.isOptionalArg();
      node0.getDirectives();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      node0.isOptionalArg();
      node0.getDirectives();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = Node.newString(2255, "STAR");
      Node node1 = new Node(4095, node0, node0, 4, 29);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = Node.newString("l*", (-1958), (-1958));
      node0.isRegExp();
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.valueOf();
      int int0 = 0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) null);
      int int1 = 0;
      Node node1 = null;
      try {
        node1 = new Node(node0.POST_FLAG, node0.SLASH_V, int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      node0.setSideEffectFlags(node_SideEffectFlags1);
      // Undeclared exception!
      try { 
        node0.getInputId();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(109);
      node0.getExistingIntProp(51);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = Node.newNumber((-5154.73845940216));
      Node node1 = Node.newNumber((double) 37, 33, 2152);
      node1.getQualifiedName();
      Node node2 = new Node(4095, node0, node0, node1, (-1781), 1);
      node0.replaceChild(node2, node1);
      node2.addChildAfter(node0, node1);
      node2.checkTreeEquals(node0);
      node0.getJSDocInfo();
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node(11, 11, 11);
      Node node1 = new Node(49, node0, node0, node0, node0);
      Node node2 = Node.newString("StringNode: str is null", 1942, 1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 1080;
      node2.replaceChild(node0, node0);
      node0.getBooleanProp(int0);
      node1.isObjectLit();
      node1.getString();
      node0.isInstanceOf();
      // Undeclared exception!
      try { 
        node2.isGetElem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newNumber(2573.6200043474078, (-963), (-963));
      node0.setType((-963));
      node0.isCall();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = new Node(4095, node0, node0, node0, 1929, 53);
      node1.setSourceFileForTesting("NO_TYPE");
      node1.isVoid();
      node0.isIf();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(125);
      node0.getQualifiedName();
      Locale locale0 = Locale.FRENCH;
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node0 = Node.newString("foa]Dq+`P;ZF");
      Node node1 = Node.newNumber((double) 37);
      node0.replaceChild(node1, node1);
      node0.isLabel();
      node0.getLength();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Object object0 = null;
      try {
        object0 = new Object();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String string0 = "length";
      Node node0 = Node.newString("length");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(39, node0, node0, node0, 32, 0);
      node0.getInputId();
      node2.getSourceFileName();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      node1.useSourceInfoFrom(node3);
      node3.isSyntheticBlock();
      node3.isOnlyModifiesArgumentsCall();
      Node node4 = new Node(0, node0, node3, node2, 2, 32);
      // Undeclared exception!
      try { 
        node3.isVarArgs();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(11);
      Node node1 = new Node(42);
      String string0 = "StringNode: str is null";
      Node node2 = Node.newString("StringNode: str is null", 1946, 1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 1047;
      Node node3 = new Node(55, node1, node2, node0, node1);
      node2.replaceChild(node3, node0);
      node0.getBooleanProp(int0);
      node1.isOnlyModifiesThisCall();
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      Node.mergeLineCharNo(0, 0);
      Node node0 = Node.newNumber((double) 0);
      node0.detachFromParent();
      String string0 = "p3sz~?xzD";
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      String string0 = "";
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString("");
      Node node1 = Node.newString(53, "", 12, 1);
      node0.isEmpty();
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newNumber((double) 29);
      node0.setDouble(29);
      Node node1 = new Node(29, node0, node0, node0, node0, 43, 40);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getStaticSourceFile();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node2.addChildrenToFront(node1);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node2, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 16, 16);
      node0.setDouble(38);
      Node node1 = node0.getLastSibling();
      node0.mayMutateGlobalStateOrThrow();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node.extractCharno(35);
      Node node0 = Node.newString("foa]Dq+`P;ZF");
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.hasMoreThanOneChild();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(39);
      Node node2 = new Node(29, node1, node1, node0, node1);
      node0.children();
      Node node3 = Node.newNumber(0.0, 224, 0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      node2.isThrow();
      Node node4 = Node.newNumber((double) 42, 53, 8);
      Node node5 = new Node(2, node3, node4, node0, node0);
      node5.isIn();
      node5.isVoid();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.isQualifiedName();
      Node node1 = new Node(0, (-789), 15);
      Node node2 = new Node(29, node1, node1, node0, node1);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      Node node4 = null;
      Node node5 = new Node(48, node0, node1, node3, (Node) null, 2, 54);
      Node node6 = null;
      int int0 = (-1655);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newNumber(756.52880673357);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node2 = new Node((-778), node0, node0, node1, node0, 2, 1964);
      node2.isString();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isString();
      node0.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      int int0 = 2609;
      String string0 = "com.google.javascript.rhino.jstype.ObjectType";
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.ObjectType", 512, (-533));
      Node node1 = new Node(2609, node0, node0, 0, 43);
      Node node2 = new Node(2609, node1, node0, node1);
      int int1 = (-2240);
      Node node3 = Node.newString(int1, string0);
      Node node4 = null;
      try {
        node4 = new Node(int0, node2, node1, node3, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      ImmutableList<JSType> immutableList1 = immutableList0.reverse();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) immutableList0;
      objectArray0[1] = (Object) immutableList1;
      objectArray0[2] = (Object) simpleErrorReporter0;
      objectArray0[3] = (Object) jSTypeRegistry0;
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      Node node1 = new Node(2228, node0, node0, node0);
      node1.getProp((-2691));
      objectArray0[4] = null;
      objectArray0[5] = (Object) "a:K{?:.[<(Y";
      objectArray0[6] = (Object) jSTypeRegistry0;
      objectArray0[7] = (Object) simpleErrorReporter0;
      SimpleErrorReporter.getMessage("a:K{?:.[<(Y", objectArray0);
      jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      Object[] objectArray1 = new Object[2];
      objectArray1[0] = (Object) jSTypeRegistry0;
      Object object0 = null;
      try {
        object0 = new Object();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property a:K\\{?:.[\\<(Y
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newString(1998, "Hcq^", (-1343), (-1343));
      Node node1 = node0.cloneTree();
      boolean boolean0 = node1.isOnlyModifiesArgumentsCall();
      node1.setLength(346);
      Node node2 = Node.newString(55, "Hcq^");
      node1.getChildBefore(node0);
      boolean boolean1 = false;
      node1.setIsSyntheticBlock(boolean1);
      node2.setWasEmptyNode(boolean0);
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node(77);
      node0.isBlock();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.cloneTree();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node0.children();
      node0.getAncestor(536);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newString("hz?fr)qEml9:RZc_S", 114, 147);
      Node node1 = Node.newNumber((double) 4095);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(39);
      Node node2 = new Node(29, node1, node1, node0, node1);
      node0.isOnlyModifiesThisCall();
      node2.isTypeOf();
      node1.getInputId();
      node2.isNot();
      node1.isScript();
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newString("foa}FDm+`P;uF");
      node0.isOnlyModifiesArgumentsCall();
      node0.isArrayLit();
      node0.useSourceInfoIfMissingFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node.newString("");
      Node node0 = Node.newString(53, "", 12, 177);
      node0.wasEmptyNode();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = Node.newString(1998, "Hcq^", (-1343), (-1343));
      Node node1 = node0.cloneTree();
      node0.setVarArgs(true);
      node1.isOnlyModifiesArgumentsCall();
      node1.setLength(346);
      Node.newString(55, "Hcq^");
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      node1.addSuppression("foaDm+`P;ZF");
      Node node2 = new Node(29, 153, 52);
      Node node3 = Node.newString(112, "foaDm+`P;ZF");
      node1.toStringTree();
      Node node4 = new Node(479, node2, node1, node3, node1, (-332), 2);
      node0.setQuotedString();
      node3.isTry();
      Node node5 = Node.newString("foaDm+`P;ZF");
      node2.isName();
      node5.isFromExterns();
      node4.cloneTree();
      node5.isDec();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      String string0 = "GLOBAL_THIS";
      node1.addSuppression("GLOBAL_THIS");
      Node node2 = new Node(29, 153, 52);
      Node node3 = Node.newString(112, "foaDm+`P;ZF");
      Node node4 = new Node(479, node2, node1, node3, node1, (-332), 2);
      node4.putBooleanProp(52, true);
      node0.setType(1610612736);
      Vector<Node> vector0 = new Vector<Node>();
      node3.isFunction();
      node2.isNew();
      node4.removeChild(node0);
      Node node5 = new Node(node1.QUOTED_PROP, node2, node0, node0);
      node5.isTry();
      Node.newString(string0);
      node4.checkTreeEqualsImpl(node0);
      node1.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String string0 = "length";
      Node node0 = Node.newString("length");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(39, node0, node0, node0, 32, 0);
      node0.getInputId();
      node2.getSourceFileName();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      node1.useSourceInfoFrom(node3);
      node3.isSyntheticBlock();
      node3.isOnlyModifiesArgumentsCall();
      node0.useSourceInfoFrom(node1);
      node3.isVarArgs();
      node0.mayMutateArguments();
      node2.getJsDocBuilderForNode();
      node2.children();
      node3.isCatch();
      node2.toStringTree();
      // Undeclared exception!
      try { 
        node0.setSourceFileForTesting(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getLength();
      node0.getInputId();
      node0.setSourceFileForTesting((String) null);
      node0.getSourceFileName();
      node0.isNot();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.extractCharno(1);
      Node node1 = Node.newString((-756), (String) null);
      node1.getJSType();
      node0.isAssign();
      // Undeclared exception!
      try { 
        node1.getJSType();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Integer integer0 = new Integer((-1153));
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node node0 = Node.newString("B5");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(47);
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.getJSDocInfo();
      node0.isFromExterns();
      node0.isName();
      int int0 = 1698;
      boolean boolean0 = false;
      SimpleErrorReporter.getMessage("jgK%aXn/{-", jSTypeArray0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.setLastGeneration(boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property jgK%aXn/{-
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      Node node2 = new Node(29, 153, 52);
      Node node3 = Node.newString("8lz`WLp@^bw[O");
      Node node4 = new Node(52, node1, node1, node3);
      node2.isTry();
      Node.newString("8lz`WLp@^bw[O");
      node1.isName();
      node0.isFromExterns();
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = Node.newString("com.goole.javascript.rhino.Node$StringNo@e");
      node0.getLength();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Object object0 = new Object();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(50);
      node0.getInputId();
      node0.setSourceFileForTesting("1fxD Yb?#Sz#)7az");
      node0.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      Node node1 = Node.newString("fa}PH&0W<Y_G");
      node1.children();
      Node node2 = new Node(42, 3237, 8);
      node2.getAncestor(54);
      node2.isVar();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = new Node(77);
      int int0 = Node.ORIGINALNAME_PROP;
      node0.getInputId();
      node0.setSourceFileForTesting("YU/mSHzX@");
      node0.isNot();
      Node.newString(42, (String) null);
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = null;
      Node node1 = new Node((-271), (Node) null, (Node) null);
      // Undeclared exception!
      try { 
        node1.useSourceInfoFrom(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 16, 16);
      node0.setString("LsncJ}4Z5");
      double double0 = 629.1137502;
      node0.setDouble(double0);
      String string0 = "Node tree inequality:\nTree1:\n";
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isTrue();
      node0.isAdd();
      node0.isLabel();
      node0.setDouble(1);
      // Undeclared exception!
      try { 
        node0.isBreak();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING foaDm+`P;ZF is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.setString("LsncJ}4Z5");
      double double0 = 629.1137502;
      try { 
        node0.setDouble(double0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newNumber(756.52880673357);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = new Node(29, 50, 65);
      node0.isContinue();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node.extractLineno(428);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Node node1 = new Node(56, (-722), 456);
      Node node2 = new Node(29, node0);
      node0.isLabel();
      node2.setDouble(16);
      node2.isBreak();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = 8287;
      Node node0 = Node.newNumber(2911.9, 8287, 8287);
      String string0 = "F+H@,0(?";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(string0);
      String string1 = "hz?fr)qEml9:RZc_S";
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) node0;
      PrintWriter printWriter0 = mockPrintWriter0.printf(string1, objectArray0);
      node0.appendStringTree(printWriter0);
      Node node1 = new Node(int0, node0, node0, node0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = Node.newString(0, "{=Gc&?[/9E1", 0, 0);
      Node node1 = new Node(108, node0, node0);
      node0.isEquivalentToShallow(node1);
      node1.isLabel();
      node1.setDouble(1.0);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      String string0 = "<EDKadFe,";
      Node node0 = Node.newString("<EDKadFe,", 0, 0);
      node0.setDouble(0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        node0.toString(boolean0, boolean0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING <EDKadFe, 0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.toString(false, false, false);
      node0.setVarArgs(true);
      Node node1 = new Node(709, node0, node0);
      Node node2 = Node.newString("STRING foaDm+`P;ZF", 53, 4);
      node0.children();
      Node.newNumber(0.0, 56, 54);
      node2.checkTreeEqualsImpl(node0);
      node0.getDirectives();
      node0.getDouble();
      node2.isHook();
      String string0 = " is not a string node";
      Node.newString(node2.SLASH_V, string0, node2.INFERRED_FUNCTION, node2.SIDE_EFFECT_FLAGS);
      node0.isWhile();
      int int0 = 445;
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING foaDm+`P;ZF [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = 1227;
      Node node0 = null;
      Node node1 = new Node(111, (Node) null, (Node) null, (Node) null);
      Node node2 = null;
      try {
        node2 = new Node(int0, node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.ensureCapacity(472);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(31);
      ImmutableList<Integer> immutableList0 = ImmutableList.of((Integer) 1, (Integer) 38, (Integer) 1, (Integer) 53, integer0, (Integer) 4, integer1);
      stack0.removeAll(immutableList0);
      node0.isComma();
      SimpleErrorReporter.getMessage0("");
      int int0 = 146;
      node0.setLength(int0);
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      int int0 = (-4406);
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node(0, nodeArray0, 133, 0);
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        nodeArray0[1].srcrefTree(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(50, (-446), (-2736));
      nodeArray0[0] = node0;
      Node node1 = new Node(50, nodeArray0);
      Node node2 = new Node(12, node0, node1, 1217, 38);
      node1.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(2694);
      nodeArray0[0] = node0;
      Node node1 = new Node(25, nodeArray0, (-2526), 53);
      Node node2 = new Node((-1723), node1, node0, node0);
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int int0 = (-1723);
      Node[] nodeArray0 = new Node[14];
      Node node0 = new Node(2694);
      nodeArray0[0] = node0;
      Node node1 = new Node(25, nodeArray0, (-2526), 53);
      Node node2 = new Node(int0, node1, nodeArray0[0], node0);
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node0.setSideEffectFlags(node_SideEffectFlags3);
      node0.getInputId();
      // Undeclared exception!
      try { 
        node0.getInputId();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = new Node(50);
      node0.isWhile();
      node0.setSideEffectFlags(38);
      node0.isReturn();
      // Undeclared exception!
      try { 
        node0.isReturn();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 50
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node0.setSideEffectFlags(node_SideEffectFlags2);
      node0.getInputId();
      // Undeclared exception!
      try { 
        node0.isNot();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int int0 = 34;
      Node node0 = null;
      Node node1 = Node.newString("u4}P1Z", 304, 304);
      int int1 = 741;
      node1.useSourceInfoIfMissingFromForTree((Node) null);
      Node node2 = new Node(int0, node0, node1, int1, node1.OPT_ARG_NAME);
      // Undeclared exception!
      try { 
        node2.getLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = Node.newString("length");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(39, node0, node0, node0, 32, 0);
      node0.getInputId();
      node2.getSourceFileName();
      node1.useSourceInfoIfMissingFromForTree((Node) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setMutatesGlobalState();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString("f8oaDm+`P;ZF");
      Node node1 = new Node(15);
      node0.isFalse();
      Node node2 = new Node(0, node0, node1, node0, 36, 15);
      node1.isEquivalentTo(node2, false, false, true);
      node1.addChildToBack(node0);
      node1.isQuotedString();
      node1.getAncestor(node1.FLAG_NO_THROWS);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      int int0 = (-1662);
      Node node0 = Node.newNumber(144.69542031751408);
      Node node1 = new Node((-892), node0, node0, node0, node0);
      Node node2 = new Node((-1662), node1);
      node2.getChangeTime();
      int int1 = (-188);
      int int2 = 0;
      node2.addChildToBack(node1);
      double double0 = 0.0;
      // Undeclared exception!
      try { 
        node0.setDouble(double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 16, 16);
      node0.setDouble(629.1137502);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isUnscopedQualifiedName();
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newString("foa}FDm+`P;uF");
      node0.isTrue();
      node0.useSourceInfoIfMissingFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(1818);
      node0.isNot();
      node0.isTrue();
      node0.isAdd();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String string0 = ")_0%";
      Node node0 = Node.newString(")_0%", (-1484), (-1484));
      node0.getInputId();
      node0.setQuotedString();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = jSDocInfo0.getAssociatedNode();
      node0.isEquivalentTo((Node) null);
      node0.removeChild(node1);
      // Undeclared exception!
      try { 
        node0.isAssignAdd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setQuotedString();
      Node node1 = node0.getLastSibling();
      node0.isFalse();
      node1.isDelProp();
      node1.setOptionalArg(false);
      node1.removeChildren();
      node1.isObjectLit();
      Node node2 = new Node(2, 12, 53);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isEquivalentTo(node0);
      node0.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isOptionalArg();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node node1 = Node.newString("");
      node1.useSourceInfoIfMissingFrom(node0);
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newString((String) null, 0, 0);
      Node node1 = null;
      try {
        node1 = new Node(int0, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.getDouble();
      node0.getDouble();
      Node node1 = new Node(0, node0, 13, 29);
      node1.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.appendStringTree((Appendable) null);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.setMutatesArguments();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.getLength();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node1.isThis();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.getLastSibling();
      node0.isCall();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      node1.addSuppression("GLOBAL_THIS");
      Node node2 = new Node(29, 153, 52);
      Node node3 = Node.newString(112, "foaDm+`P;ZF");
      Node node4 = new Node(479, node2, node1, node3, node1, (-332), 2);
      node4.putBooleanProp(52, true);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node5 = Node.newString((-598), "foaDm+`P;ZF", 1191, 57);
      node4.isBlock();
      node1.checkTreeEquals(node3);
      node5.isCase();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      Node node0 = Node.newString(0, "", (-3257), 2752);
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.areAllFlagsSet();
      Node.newString(825, "", 825, 825);
      Node.newString(29, "", 4095, 38);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.areAllFlagsSet();
      int int0 = 0;
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(0, (Node) null, (Node) null, (Node) null, (Node) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = Node.newString("", (-3314), (-1404));
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = Node.newString("", (-3314), (-3314));
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(114);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags((-673));
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      Node node1 = Node.newString(16, "{=Gc&?[/9E1", 50, 1);
      Node node2 = new Node(39, node0, node1);
      node1.isEquivalentToShallow(node2);
      node0.isName();
      node1.setSourceFileForTesting(")");
      node2.isLabel();
      node2.setDouble(57);
      String string0 = "com.google.common.base.Predicates$InPredicate";
      Node.newString(string0);
      node2.isBreak();
      double double0 = 0.0;
      int int0 = 2671;
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString(0, "Z", (-2295), 0);
      nodeArray0[0] = node0;
      Node node1 = Node.newString("Z", 1713, 812);
      nodeArray0[1] = node1;
      Node node2 = new Node(844, node1, node1, node1);
      nodeArray0[2] = node2;
      Node node3 = new Node(15);
      nodeArray0[3] = node3;
      Node node4 = new Node(0, nodeArray0);
      Node node5 = new Node(int0, node4, nodeArray0[1]);
      node5.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      node0.isQualifiedName();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node1 = new Node((-320), nodeArray0);
      node0.addChildToFront(node1);
      // Undeclared exception!
      try { 
        node0.isLabelName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node0.putIntProp((-1343), (-1852));
      node0.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newString("length");
      node0.cloneNode();
      Node node1 = new Node(39, node0, node0, node0, 32, 0);
      node1.getSourceFileName();
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node_SideEffectFlags0.setReturnsTainted();
      Node node2 = node0.cloneNode();
      node2.getExistingIntProp(1117);
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.isNumber();
      node0.isUnscopedQualifiedName();
      node0.isVarArgs();
      node0.isEmpty();
      node0.isTypeOf();
      node0.putProp(41, "foaDm+`P;ZF");
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      String string0 = "length";
      Node node0 = Node.newString("length");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(39, node0, node0, node0, 32, 0);
      node0.getInputId();
      node2.getSourceFileName();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      node1.useSourceInfoFrom(node3);
      node3.isSyntheticBlock();
      node3.isOnlyModifiesArgumentsCall();
      node3.isVarArgs();
      node0.mayMutateArguments();
      node2.getJsDocBuilderForNode();
      node2.children();
      node3.isCatch();
      node2.toStringTree();
      // Undeclared exception!
      try { 
        node0.setSourceFileForTesting(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("Node tree inequality:\nTree1:\n");
      Node node1 = Node.newString("Node tree inequality:\nTree1:\n");
      node1.isBlock();
      node1.checkTreeEquals(node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber((double) 42);
      node0.isQuotedString();
      Node node1 = new Node(42, node0, node0, 47, (-204));
      node0.isSyntheticBlock();
      node0.isVarArgs();
      node0.getJsDocBuilderForNode();
      node1.children();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.toStringTree();
      node1.setDouble(42.0);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newString("length");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(39, node0, node0, node0, 32, 0);
      node0.getInputId();
      node2.getSourceFileName();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node1.setSideEffectFlags(node_SideEffectFlags4);
      node3.getInputId();
      // Undeclared exception!
      try { 
        node0.isNot();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(50);
      Locale locale0 = Locale.FRANCE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = node0.getLastSibling();
      node1.isCall();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      int int0 = 127;
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      String string0 = "c%8q5(";
      node1.setSourceFileForTesting("c%8q5(");
      node1.setQuotedString();
      Node node2 = new Node(int0, node1);
      int int1 = 0;
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(50, (-446), 50);
      nodeArray0[0] = node0;
      node0.isEquivalentTo(node0, true, true, true);
      node0.isTry();
      Node node1 = Node.newString("K=Nd+${~fRa@IkF>");
      node0.setQuotedString();
      node1.wasEmptyNode();
      String string0 = "<^\"e*x:=uj\"t~XR*7";
      Node node2 = Node.newString(string0);
      Node node3 = new Node(node1.POST_FLAG, node0, node0, node2, node2);
      Node node4 = null;
      try {
        node4 = new Node(node0.REFLECTED_OBJECT, node2, node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString(0, "Z", (-2295), 0);
      nodeArray0[0] = node0;
      Node node1 = Node.newString("Z", 1713, 812);
      nodeArray0[1] = node1;
      node1.wasEmptyNode();
      node1.toString();
      node1.getDouble();
      nodeArray0[0].getSideEffectFlags();
      node1.getLastSibling();
      nodeArray0[0].isFalse();
      node1.isDelProp();
      // Undeclared exception!
      try { 
        node0.getJSDocInfo();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING Z 1713 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("x");
      ObjectType objectType0 = FunctionType.getTopDefiningInterface(templateType0, "Object#Element");
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node(1818);
      node0.isNot();
      node0.isTrue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags6.valueOf();
      node0.getJSDocInfo();
      node0.getExistingIntProp((-3257));
      node0.getLength();
      // Undeclared exception!
      try { 
        node0.removeFirstChild();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -3257
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = Node.newString("    ", 40, 15);
      node0.getJSDocInfo();
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.ensureCapacity(472);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.isOptionalArg();
      node0.getDirectives();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = Node.newString("");
      Node node1 = Node.newString(53, "", 12, 177);
      node1.isContinue();
      node0.setDouble(57);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = new Node(4296, 4296, 4296);
      Locale locale0 = Locale.forLanguageTag("SZ");
      locale0.getUnicodeLocaleAttributes();
      node0.children();
      node0.getAncestor((-446));
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = Node.newString("DELPROP");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = node0.getLastSibling();
      node0.isFalse();
      node1.putIntProp(4, 102);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      Node node0 = Node.newString(0, "", (-3257), 2752);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      int int0 = 894;
      Node node0 = Node.newNumber(38.0, 101, 8);
      Node node1 = new Node(4755, node0, 32, 31);
      Node node2 = new Node(894, node1, node0, 39, 125);
      int int1 = 122;
      Node node3 = new Node(int0, node2, node0, node0, node1, node2.SIDE_EFFECT_FLAGS, int1);
      node3.getString();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node[] nodeArray0 = new Node[4];
      Node node0 = Node.newString(0, "Z", (-2295), 0);
      nodeArray0[0] = node0;
      Node node1 = Node.newString("Z", 1713, 812);
      nodeArray0[1] = node1;
      Node node2 = new Node(844, node1, node1, node1);
      nodeArray0[2] = node2;
      Node node3 = new Node(15);
      nodeArray0[3] = node3;
      Node node4 = Node.newString(51, "Z");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node5 = new Node(0, node4, node1);
      node5.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int int0 = 691;
      Node node0 = Node.newNumber((-5285.0));
      Node node1 = new Node(39, node0);
      Node node2 = new Node(857, node0, node1);
      int int1 = 43;
      int int2 = (-943);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newString("fFaDm+`P;ZF");
      node0.setString("B;]]o$<6O?pYdn");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.clonePropsFrom(node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = Node.newNumber(756.52880673357);
      node0.getJSDocInfo();
      node0.setOptionalArg(true);
      Node node1 = Node.newNumber((double) 50);
      node0.getProp(630);
      node0.isVarArgs();
      Node node2 = new Node(1318, node1, node0, (-778), 36);
      node2.getAncestors();
      node0.setSideEffectFlags(40);
      node0.setQuotedString();
      node2.isWith();
      String string0 = "com.google.common.base.CharMatcher$13";
      node1.addSuppression(string0);
      node0.isThis();
      Node node3 = new Node(node0.FLAG_NO_THROWS, node2, node0, node2, node2, node0.SIDE_EFFECT_FLAGS, node0.INCRDECR_PROP);
      // Undeclared exception!
      try { 
        node3.wasEmptyNode();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("'o~");
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.getLength();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Object object0 = new Object();
      Integer integer0 = new Integer(51);
      node_NodeMismatch0.equals((Object) null);
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(113, 113, 113);
      String string0 = null;
      int int0 = (-9);
      node0.setSideEffectFlags((-9));
      int int1 = (-520);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = Node.newString("Qbn6v-^Os8+}S_z3P", 2137, 2137);
      node0.getInputId();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.addSuppression("Qbn6v-^Os8+}S_z3P");
      node0.addChildToBack((Node) null);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String string0 = "    ";
      Node node0 = Node.newString((-238), "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition(1287);
      node0.getProp(45);
      Node node1 = new Node(0, node0, 79, (-3693));
      node0.isOnlyModifiesThisCall();
      node1.addSuppression("    ");
      node1.isThis();
      Node node2 = new Node((-1208), node0, (-3117), 30);
      Node node3 = node2.removeChildren();
      node2.wasEmptyNode();
      node3.toString();
      node3.getDouble();
      node2.getSideEffectFlags();
      node3.getLastSibling();
      node2.isFalse();
      node0.isDelProp();
      // Undeclared exception!
      try { 
        node2.getJSDocInfo();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = new Node(12, node0, 127, 4095);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Node node2 = new Node(32, node0);
      node0.copyInformationFromForTree(node1);
      // Undeclared exception!
      try { 
        node2.isInstanceOf();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("STRING foaDm+`P;ZF");
      node0.addSuppression((String) null);
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isAdd();
      node0.isLabelName();
      node0.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      node0.isTry();
      Node node2 = Node.newString("Should not happen\n");
      node2.checkTreeEqualsImpl(node1);
      node0.isOnlyModifiesThisCall();
      node0.addSuppression("_H3'&+CMlCw-(o%J");
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Stack<JSType> stack0 = new Stack<JSType>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "STRING foa]Dq+`P;ZF";
      Node node0 = Node.newString("STRING foa]Dq+`P;ZF", 3764, (-1705));
      Node node1 = new Node((-2282), node0, node0, 83, 40);
      node0.clonePropsFrom(node1);
      node0.isFalse();
      Node node2 = new Node(16, node0, 3063, (-1705));
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeEqualsImpl(node0);
      node_NodeMismatch0.equals(string0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.isTrue();
      node0.isAdd();
      node0.isLabelName();
      node0.getChildAtIndex(124);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newString("zxVwPDur@W~tu^");
      node0.isNot();
      node0.setChangeTime((-1074));
      node0.removeFirstChild();
      node0.hasChild((Node) null);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(30);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node0.getSourceOffset();
      node1.getInputId();
      Locale locale0 = Locale.forLanguageTag("");
      locale0.getUnicodeLocaleAttributes();
      node1.isString();
      Node.newString(4095, "");
      Node node2 = new Node(15, node0, node0, node0, 127, 49);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a`sB3VHYD_DW@");
      Node node0 = Node.newString((-1378), "?", 43, 32);
      Node node1 = new Node(2075, node0, node0, node0);
      Node node2 = new Node((-1378), node1, node0, node0, 2, 56);
      Node node3 = node2.getChildBefore(node0);
      node1.addChildrenAfter(node3, node0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = new Node(0);
      node0.getLength();
      node0.getInputId();
      node0.setSourceFileForTesting((String) null);
      String string0 = node0.getSourceFileName();
      node0.isNot();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.extractCharno(1);
      Node node1 = new Node(53);
      node1.getJSType();
      node0.isAssign();
      node1.getJSType();
      node_SideEffectFlags1.setThrows();
      File file0 = MockFile.createTempFile("Named type with empty name component", "    ");
      node0.isFromExterns();
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0, string0);
      Locale locale0 = Locale.FRENCH;
      String string1 = "com.google.javascript.rhino.jstype.EquivalenceMethod";
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) locale0;
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Stack<JSType> stack0 = new Stack<JSType>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOptionalArg();
      node0.isScript();
      Node node1 = node0.getLastSibling();
      node0.isInstanceOf();
      node1.isGetElem();
      node0.isUnscopedQualifiedName();
      node1.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      Node node0 = Node.newNumber((double) 153);
      Node node1 = new Node(153, node0, 3020, 1465);
      node1.isOptionalArg();
      node1.getDirectives();
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      String string0 = "foaDm+`P;ZF";
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node.mergeLineCharNo(153, 57);
      Node node1 = Node.newNumber(0.0);
      node1.detachFromParent();
      Node.newString(string0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      String string0 = "length";
      Node node0 = Node.newString("length");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(39, node0, node0, node0, 32, 0);
      node0.getInputId();
      node2.getSourceFileName();
      Node node3 = new Node(53, 0, 51);
      node1.useSourceInfoFrom(node3);
      node3.isSyntheticBlock();
      node3.isOnlyModifiesArgumentsCall();
      node0.useSourceInfoFrom(node1);
      node3.isVarArgs();
      node0.mayMutateArguments();
      node2.getJsDocBuilderForNode();
      node2.children();
      node3.isCatch();
      node2.toStringTree();
      // Undeclared exception!
      try { 
        node0.setSourceFileForTesting(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node node0 = Node.newString((-3257), "c ?5", 1930, 2752);
      node0.isEmpty();
      node0.getStaticSourceFile();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node((-9), (-9), (-9));
      Node node1 = new Node(108, node0, node0);
      node1.isLabel();
      node1.isOr();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.isQualifiedName();
      node0.isAdd();
      node0.isLabelName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node0.putIntProp((-1852), 431);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = Node.newString("");
      Node node1 = Node.newString(53, "", 12, 177);
      node1.wasEmptyNode();
      node0.isLabel();
      node0.setDouble(57);
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node node0 = Node.newString(1479, "STRUCT", (-3257), 2819);
      node0.isContinue();
      node0.setDouble(177);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node.newString("");
      Node node0 = Node.newString(53, "", 30, 177);
      node0.isContinue();
      node0.setDouble(8);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(50, (-446), 50);
      nodeArray0[0] = node0;
      Locale locale0 = Locale.forLanguageTag("");
      locale0.getUnicodeLocaleAttributes();
      node0.isString();
      node0.isLocalResultCall();
      node0.getDouble();
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(39);
      Node node2 = new Node(29, node1, node1, node0, node1);
      node0.isOnlyModifiesThisCall();
      node2.isTypeOf();
      node1.getInputId();
      node2.isNot();
      node2.isWhile();
      node0.isParamList();
      node0.isLabelName();
      node2.getDouble();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1228));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString(2728, "length", 124, (-1228));
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newString(")_0%", (-1484), (-1484));
      node0.getInputId();
      node0.setQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = Node.newString(32, "H{l {z", 101, 12);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node1;
      Node node2 = new Node(105, nodeArray0, 0, 96);
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newNumber(32.0);
      Node node1 = Node.newString("Ly;");
      Node node2 = node0.clonePropsFrom(node1);
      node0.isIn();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node2;
      Node node3 = new Node(86, node0, node0, node2, node1);
      nodeArray0[1] = node3;
      nodeArray0[2] = node1;
      nodeArray0[3] = node2;
      nodeArray0[4] = node2;
      Node node4 = new Node((-1435), nodeArray0, 77, 43);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node4);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node_NodeMismatch0.equals(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      String string0 = "    ";
      Node node0 = Node.newString((-238), "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition(1287);
      node0.getProp(45);
      Node node1 = new Node(0, node0, 79, (-3693));
      node0.isOnlyModifiesThisCall();
      node1.addSuppression("    ");
      node1.isThis();
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node((-1208), node0, (-3117), 30);
      node2.isParamList();
      Node node3 = node2.removeChildren();
      node2.wasEmptyNode();
      node3.toString();
      node3.getDouble();
      node2.getSideEffectFlags();
      node3.getLastSibling();
      node2.isFalse();
      // Undeclared exception!
      try { 
        node0.isDelProp();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = Node.newNumber(1001.6641);
      node0.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newString(18, "fk!~jVg|(Rq!x%cI");
      Node node1 = Node.newString("STRING foa]Dq+`P;ZF");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 16, 16);
      node0.setDouble(629.1137502);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString("Node tree inequality:\nTree1:\n");
      node0.addChildrenToBack(node1);
      Node node2 = Node.newNumber((double) 16, (-3924), 2473);
      node2.checkTreeEqualsImpl(node0);
      node1.getDirectives();
      Node node3 = new Node(31, node0, node2, node2);
      node0.getDouble();
      Node.newString((-3450), "Node tree inequality:\nTree1:\n", 33, 40);
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      int int0 = (-4781);
      Node node0 = null;
      int int1 = 153;
      Node node1 = null;
      try {
        node1 = new Node((-4781), (Node) null, (Node) null, 153, 153);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = Node.newString(1998, "Hcq^", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node0.setVarArgs(true);
      node1.isOnlyModifiesArgumentsCall();
      node1.setLength(50);
      Node.newString(48, "", 36, 37);
      node0.isEmpty();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.ensureCapacity(472);
      Node node0 = Node.newString(472, "Object#Key", 472, 472);
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(31);
      ImmutableList<Integer> immutableList0 = ImmutableList.of((Integer) 1, (Integer) 38, (Integer) 1, (Integer) 53, integer0, (Integer) 4, integer1);
      stack0.removeAll(immutableList0);
      node0.isComma();
      SimpleErrorReporter.getMessage0("");
      int int0 = 146;
      node0.setLength(int0);
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "    ");
      Node node0 = new Node(707);
      Node node1 = new Node(13, node0, node0);
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString("com.google.common.collect.Sets$3");
      Node node1 = Node.newString(37, (String) null, (-1088), 12);
      node1.wasEmptyNode();
      int int0 = 16;
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString("");
      node_SideEffectFlags0.setMutatesArguments();
      Node node1 = Node.newString(53, "", 12, 1);
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node1.toString();
      // Undeclared exception!
      try { 
        node_SideEffectFlags2.setMutatesGlobalState();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newString((-238), "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition(1287);
      node0.getProp(45);
      Node node1 = new Node(0, node0, 79, (-3693));
      node1.isCatch();
      node0.isOnlyModifiesThisCall();
      node1.isAnd();
      node1.children();
      node1.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.setCharno(2728);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      node1.putIntProp(1654, 1);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.getLength();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString("CharMatcher.JAVA_ISO_CONTROL");
      Node node2 = new Node(32, node0);
      node2.mayMutateArguments();
      node1.checkTreeEqualsImpl(node2);
      Node node3 = new Node(1);
      Node node4 = node3.copyInformationFrom(node2);
      node4.setCharno(2240);
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(50, nodeArray0);
      String string0 = "";
      Locale locale0 = Locale.forLanguageTag(string0);
      // Undeclared exception!
      try { 
        locale0.getUnicodeLocaleAttributes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber(2643.0, 1005, 4095);
      node0.getLastChild();
      node0.getJSDocInfo();
      String string0 = node0.getSourceFileName();
      Node node1 = node0.useSourceInfoFrom((Node) null);
      Node node2 = Node.newString(string0);
      node2.getInputId();
      // Undeclared exception!
      try { 
        node1.getIntProp(node0.COLUMN_BITS);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newString("end-char: ");
      node0.isArrayLit();
      node0.useSourceInfoIfMissingFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isTrue();
      node0.isArrayLit();
      node0.isLabelName();
      node0.useSourceInfoIfMissingFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = Node.newString("");
      node0.children();
      Node node1 = Node.newString(12, "=^0>:Z+0", 32768, 1930);
      node1.isEmpty();
      node1.getStaticSourceFile();
      node0.isOr();
      node1.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("l7[3VzE7P>\"bB8z", 2308, 2308);
      Node node1 = new Node(53, node0, node0, node0, 15, 55);
      node0.isEquivalentTo(node1);
      node1.addSuppression("Zz&C44v`('1?*'y<!:");
      node0.getSourceOffset();
      node1.toString(true, true, true);
      boolean boolean0 = false;
      node1.setVarArgs(boolean0);
      Node node2 = node0.removeFirstChild();
      // Undeclared exception!
      try { 
        node2.children();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      node0.getSourceOffset();
      node0.getInputId();
      node0.setSourceFileForTesting("Tuj9g[]~]7-6)(_|pb<");
      node0.isOptionalArg();
      node0.isScript();
      Node node1 = node0.getLastSibling();
      node1.mayMutateGlobalStateOrThrow();
      node1.isGetElem();
      Node node2 = new Node(4095, node0, 2, (-1831));
      node2.isUnscopedQualifiedName();
      node1.isStringKey();
      Node node3 = Node.newNumber((double) 50, 50, (-155));
      Node node4 = new Node(43, node3);
      node4.isEquivalentTo(node2);
      Node.newNumber(0.0);
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node.newString(660, "eMHVTW");
      Node node0 = Node.newString("eMHVTW");
      Node node1 = new Node(660, node0);
      node1.getIntProp(8);
      node1.getLastChild();
      node1.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")uC1");
      Node node0 = Node.newString((-2574), ")uC1", (-2574), (-2574));
      node0.toString(true, true, true);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = Node.newString(4, "", 112, 113);
      node0.isEquivalentToShallow(node0);
      node0.isLabel();
      node0.setDouble((-1.0));
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newString("eMHVTW");
      Node node1 = Node.newString(31, "O}MOYz");
      node1.isEquivalentToShallow(node0);
      node0.srcref(node1);
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = Node.newString(124, "", 112, 113);
      node0.isEquivalentToShallow(node0);
      node0.isLabel();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\n\nSubtree2: ");
      int int0 = 90;
      Node node0 = Node.newNumber(41.26471870591759, 90, 90);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[2];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;
      JSType jSType0 = jSTypeRegistry1.getNativeType(jSTypeNative0);
      jSTypeArray0[0] = jSType0;
      TemplateType templateType0 = jSTypeRegistry1.getObjectIndexKey();
      jSTypeArray0[1] = (JSType) templateType0;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.setChangeTime(int0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        node0.removeFirstChild();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ProxyObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = Node.newString(1998, "Hcq^", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node1.isOnlyModifiesArgumentsCall();
      node1.setLength(50);
      node1.setOptionalArg(true);
      Node node2 = Node.newString("Hcq^", (-536870912), 48);
      node2.isReturn();
      node2.isObjectLit();
      node2.isThrow();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = new Node(28, (-1286), 1021);
      Node node1 = new Node((-1286), node0, 4095, 15);
      Node node2 = new Node(1021, node1);
      Node node3 = new Node((-1286), node2, node2);
      node3.isCast();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.getLength();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.isExprResult();
      node0.isReturn();
      node0.getChangeTime();
      node1.isParamList();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("l7[3VzE7P>\"bB8z", 2308, 2308);
      Node node1 = new Node(53, node0, node0, node0, 15, 55);
      node0.isNew();
      node1.addSuppression("Zz&C44v`('1?*'y<!:");
      node0.getSourceOffset();
      node1.toString(true, true, true);
      boolean boolean0 = false;
      node1.setVarArgs(boolean0);
      Node node2 = node0.removeFirstChild();
      // Undeclared exception!
      try { 
        node2.children();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.isQualifiedName();
      node0.isAdd();
      node0.isLabelName();
      node0.isOptionalArg();
      node0.getDirectives();
      Node node1 = new Node(57);
      node0.isEquivalentToShallow(node1);
      node0.isLabel();
      node1.setDouble(0.0);
      node0.isBreak();
      // Undeclared exception!
      try { 
        node1.isThrow();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 57
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = Node.newString(1998, "Hcq^", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node0.setLineno(52);
      node0.setWasEmptyNode(true);
      node1.isOnlyModifiesArgumentsCall();
      node1.setLength(50);
      Node.newString(48, "", 36, 37);
      node0.isEmpty();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newString(1996, ")e{6cK\"HnaB.", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node0.setLineno(52);
      Node node2 = Node.newString(55, "NoObject", 48, (-814));
      node0.isEquivalentToShallow(node1);
      node2.setSideEffectFlags(2);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node(31, 50, 2580);
      Node node1 = new Node(83, node0, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isGetElem();
      node1.setOptionalArg(false);
      Node node3 = Node.newNumber((double) 49);
      node3.setWasEmptyNode(false);
      node3.addChildBefore(node1, node2);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(2);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(0, node1, 50, 1);
      node0.getIntProp(30);
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node3 = new Node(46, node2, node1, node2, node0, 49, 35);
      node3.isCast();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      String string0 = "    ";
      Node node0 = Node.newString((-238), "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition(1287);
      node0.getProp(45);
      Node node1 = new Node(0, node0, 79, (-3693));
      node1.isCatch();
      node0.isOnlyModifiesThisCall();
      node1.isAnd();
      node1.children();
      Locale locale0 = Locale.FRENCH;
      String string1 = "CharMatcher.WHITESPACE";
      node0.setString("com.google.javascript.rhino.jstype.EquivalenceMethod");
      Object object0 = new Object();
      File file0 = MockFile.createTempFile("com.google.javascript.rhino.jstype.EquivalenceMethod", "    ");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = object0;
      objectArray0[1] = (Object) string0;
      PrintStream printStream0 = mockPrintStream0.format(locale0, string1, objectArray0);
      int int0 = 177;
      int int1 = 1610;
      Node node2 = new Node(int0, node1, node0, node0, node0, node1.FLAG_ARGUMENTS_UNMODIFIED, int1);
      node2.appendStringTree(printStream0);
      node1.isSwitch();
      int int2 = (-3447);
      Node node3 = new Node(node0.DECR_FLAG, node0, node1, node2, node0, int2, int1);
      node3.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = Node.newString(660, "eMHVTW");
      Node node1 = Node.newString("eMHVTW");
      Node node2 = new Node(660, node1);
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString(15, "eMHVTW");
      Node node4 = new Node(132, node0, node3, node1, node0, 120, 40);
      node4.isCast();
      node2.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node.extractLineno(49);
      Node node0 = Node.newString((-1305), "7J5F");
      node0.isHook();
      node0.type = (-700);
      boolean boolean0 = node0.isOnlyModifiesArgumentsCall();
      node0.putBooleanProp(29, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7J5F");
      Node node1 = new Node(21, (Node[]) null);
      boolean boolean1 = false;
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder(evoSuiteFile0);
      String string0 = node1.toString(boolean0, boolean1, boolean0);
      node0.addChildrenAfter(node1, node1);
      node1.setSourceFileForTesting(string0);
      int int0 = 100;
      // Undeclared exception!
      try { 
        node1.getAncestor(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = Node.newString("com.google.javascript.rhino.Node");
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayName(locale1);
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node.mergeLineCharNo(153, 57);
      Node.newNumber(0.0);
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString((-238), "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition(1287);
      node0.getProp(45);
      Node node1 = new Node(0, node0, 79, (-3693));
      node1.isCatch();
      node0.isOnlyModifiesThisCall();
      node1.isAnd();
      node1.children();
      node1.setIsSyntheticBlock(true);
      Node.newString((-5021), "    ", 2, 147);
      Node.newString("", 27, 1638);
      node1.wasEmptyNode();
      node0.getChildAtIndex((-1587));
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = new Node(77, (-2736), (-1754));
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node(148, nodeArray0);
      String string0 = "";
      Locale.forLanguageTag(string0);
      node1.isWith();
      // Undeclared exception!
      try { 
        nodeArray0[0].getDouble();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      String string0 = "    ";
      Node node0 = Node.newString((-238), "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition(1287);
      node0.getProp(45);
      Node node1 = new Node(0, node0, 79, (-3693));
      node1.isCatch();
      node0.isOnlyModifiesThisCall();
      node1.isAnd();
      node1.children();
      Locale locale0 = Locale.FRENCH;
      node0.setString("com.google.javascript.rhino.jstype.EquivalenceMethod");
      Object object0 = new Object();
      File file0 = MockFile.createTempFile("com.google.javascript.rhino.jstype.EquivalenceMethod", "    ");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = object0;
      objectArray0[1] = (Object) string0;
      Node node2 = new Node(node1.POST_FLAG);
      int int0 = 120;
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node2;
      nodeArray0[1] = node1;
      nodeArray0[2] = node2;
      Node node3 = new Node(int0, nodeArray0);
      Node node4 = new Node(node1.FLAG_NO_THROWS, node3, node1);
      nodeArray0[2].isDefaultCase();
      node0.setLineno(node2.IS_DISPATCHER);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.isQualifiedName();
      Node node1 = new Node(0, (-789), 15);
      Node node2 = new Node(29, node1, node1, node0, node1);
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags((-372));
      node0.isOnlyModifiesThisCall();
      Node.newString("None", 41, 2);
      node3.isReturn();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node4.isObjectLit();
      node1.isThrow();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = Node.newString(124, "", 112, 113);
      node0.isEquivalentToShallow(node0);
      node0.isLabel();
      node_SideEffectFlags0.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags((-1463));
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags();
      node_SideEffectFlags7.areAllFlagsSet();
      Node node0 = Node.newString(2035, "", (-1372), 130);
      Node node1 = new Node(197, node0);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = new Node((-452), (-432), (-2486));
      Node node1 = new Node(1, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.isGetElem();
      node2.addChildBefore(node1, node0);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node((-2295), (-1715), 85);
      node0.getQualifiedName();
      Node node1 = new Node(1638, node0, node0, node0, 434, 4095);
      node0.replaceChild(node1, node1);
      node1.addChildAfter(node0, node0);
      node1.checkTreeEquals(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Node node1 = node0.getLastSibling();
      node0.isFalse();
      node1.isUnscopedQualifiedName();
      node1.isDelProp();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isScript();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node.mergeLineCharNo(153, 57);
      Node node1 = node0.getLastSibling();
      node0.isFalse();
      node1.isDelProp();
      node0.getJSDocInfo();
      node1.setOptionalArg(false);
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.isQualifiedName();
      node0.isAdd();
      node0.isLabelName();
      node0.isOptionalArg();
      Set<String> set0 = new LinkedHashSet<String>();
      Node node1 = Node.newString("");
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.getLength();
      Node node1 = new Node(4095, 808, 12);
      node1.isGetProp();
      node1.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node1.isExprResult();
      Node node2 = new Node(123, node1);
      node2.useSourceInfoIfMissingFromForTree(node1);
      node2.isIn();
      Integer integer0 = new Integer(8);
      node1.putProp(8, integer0);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString(169, "    ", 3471, 3471);
      Node node1 = new Node((-1734), node0, node0, node0);
      Node node2 = new Node(169, node1);
      Node node3 = new Node((-1318), node2, (-3186), (-150));
      node3.siblings();
      node0.isLocalResultCall();
      node0.isLocalResultCall();
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newString(130, "foaDm+`P;ZF", (-515), (-5540));
      node0.putProp(16, "foaDm+`P;ZF");
      Node node1 = new Node((-515), node0);
      Node node2 = node1.cloneTree();
      node2.getIntProp((-1055));
      Node node3 = node1.getLastChild();
      node0.getSourceOffset();
      node3.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      String string0 = "length";
      Node node0 = Node.newString("length");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(39, node0, node0, node0, 32, 0);
      node0.getInputId();
      node2.getSourceFileName();
      Node node3 = new Node(53, 0, 51);
      node1.useSourceInfoFrom(node3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node3.isSyntheticBlock();
      node3.isOnlyModifiesArgumentsCall();
      Node node4 = node0.useSourceInfoFrom(node1);
      node3.isVarArgs();
      node4.isDefaultCase();
      node2.getJsDocBuilderForNode();
      node2.children();
      node3.isCatch();
      node2.toStringTree();
      // Undeclared exception!
      try { 
        node0.setSourceFileForTesting(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node node0 = Node.newString("zxVwPDur@W~tu^");
      node0.isNot();
      node0.setChangeTime((-1074));
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.putIntProp(1654, (-1074));
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = Node.newString((-238), "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition(1287);
      node0.getProp(45);
      Node node1 = new Node(0, node0, 79, (-3693));
      node1.isCatch();
      node0.isOnlyModifiesThisCall();
      node1.isAnd();
      node1.children();
      node1.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node0.removeFirstChild();
      node1.hasChild((Node) null);
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = Node.newString((-393), "    ", 0, 27591);
      Node node1 = new Node(46, node0, node0);
      node0.isEquivalentToShallow(node1);
      node1.isLabel();
      node0.setDouble(49);
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newNumber((-5154.73845940216));
      Node node1 = Node.newNumber((double) 37, 33, 53);
      node1.getQualifiedName();
      Node node2 = new Node(4095, node0, node0, node1, (-1781), 1);
      node0.isAdd();
      Node node3 = Node.newString(1110, "4Kr 4Na^(nY5[", 16, 55);
      node3.isLabelName();
      node2.isLabel();
      node0.setDouble((-2623.0));
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = Node.newString("end-char: ");
      node0.isArrayLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.isBreak();
      node0.getAncestor((-2202));
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = new Node((-9), (-9), (-9));
      Node node1 = new Node(108, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString("v@0O9Q;\\gu");
      Node node3 = new Node((-9), node2, node2, node2);
      node3.isTry();
      Node.newString("v@0O9Q;\\gu");
      node3.isName();
      node2.isFromExterns();
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(38, (-438), (-2736));
      nodeArray0[0] = node0;
      node0.isGetProp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.isDebugger();
      node0.isDec();
      node1.isName();
      node0.isFromExterns();
      node0.getChangeTime();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.isNumber();
      node0.isAdd();
      node0.isLabelName();
      node0.isOptionalArg();
      node0.getDirectives();
      node0.isEmpty();
      node0.isNull();
      node0.putProp(41, "foaDm+`P;ZF");
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = Node.newString(18, "fk!~jVg|(Rq!x%cI");
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node.mergeLineCharNo(153, 57);
      Node node1 = node0.getLastSibling();
      node1.isTypeOf();
      node1.isDelProp();
      node1.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node2.isObjectLit();
      node1.isThrow();
      Node node3 = new Node(148, node1, node1, node0, node1, 49, 1);
      node3.isCast();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(39);
      Node node2 = new Node(32);
      node1.isAssignAdd();
      node2.isTypeOf();
      node1.getInputId();
      node2.isNot();
      node1.isScript();
      node0.isParamList();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = Node.newString(825, "", 825, 2035);
      Node node1 = new Node(115, node0);
      node1.isWhile();
      node1.hasChildren();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = Node.newString(825, "", 825, 2035);
      Node node1 = new Node(111, node0);
      node1.isWhile();
      node1.hasChildren();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.newString(825, "", 825, 2035);
      Node node0 = Node.newString("");
      node0.isWhile();
      node0.hasChildren();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 127);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(31, node1, 50, 1);
      node1.removeFirstChild();
      node0.getIntProp(30);
      node1.addChildrenToBack(node2);
      Node node3 = new Node(54, node0, 57, 40);
      node1.hasMoreThanOneChild();
      node0.setDouble(0.5);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = new Node(102);
      node0.toString(false, true, false);
      node0.getExistingIntProp(102);
      int int0 = (-1023);
      Node.extractLineno(int0);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newString("fFaDm+`P;ZF");
      node0.isBreak();
      node0.toString(false, false, false);
      node0.setString(",B;]]o$<6O?pYdn");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.clonePropsFrom(node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.isQualifiedName();
      node0.toString(false, false, false);
      node0.setVarArgs(true);
      Node node1 = new Node(709, node0, node0);
      Node node2 = node1.removeFirstChild();
      node0.children();
      Node node3 = Node.newNumber(0.0, 47, 1460);
      Node.newNumber(0.0, 56, 54);
      node2.checkTreeEqualsImpl(node0);
      node0.getDirectives();
      node3.getDouble();
      node2.isOnlyModifiesArgumentsCall();
      Node.newString(308, " is not a string node", 56, 42);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newString("end-char: ");
      node0.getBooleanProp(8);
      node0.isIf();
      node0.getChildBefore((Node) null);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newString(127, "second new child has existing sibling");
      node0.getInputId();
      node0.getProp(2043);
      node0.getInputId();
      node0.setSourceEncodedPosition(127);
      node0.isFor();
      Node node1 = Node.newNumber((double) 38);
      Node node2 = new Node((-1), node1, node0, node0);
      Node node3 = node2.srcrefTree(node0);
      node2.checkTreeEqualsImpl(node1);
      node1.isFalse();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isString();
      Node node4 = node2.useSourceInfoIfMissingFrom(node0);
      node4.checkTreeEqualsImpl(node3);
      node1.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = new Locale("foaDm+`P;ZF", "foaDm+`P;ZF", "foaDm+`P;ZF");
      locale0.getUnicodeLocaleAttributes();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      Node node1 = Node.newString("");
      node1.getQualifiedName();
      node1.isTry();
      Node.newString("");
      node0.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`\"WcwbA<-8aT7");
      Node node0 = Node.newString("foa}FDm+`P;uF");
      node0.isTrue();
      Node node1 = Node.newString(56, "");
      node1.isEquivalentTo(node0, true, false, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.isThrow();
      Node node2 = new Node(4095, node1, node1, node1, node0, 31, 1246);
      node2.isCast();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber((double) 42);
      Node node1 = new Node(42, node0, node0, 47, 103);
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.isVarArgs();
      node1.isDefaultCase();
      node2.getJsDocBuilderForNode();
      node1.children();
      node0.isCatch();
      node0.toStringTree();
      node1.setSourceFileForTesting("");
      node1.isOr();
      node0.addChildBefore(node1, node1);
      node0.isName();
      int int0 = 1163;
      // Undeclared exception!
      try { 
        Node.extractLineno(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = new Node((-1));
      Node node1 = new Node(126, node0, node0, node0, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node0.isGetElem();
      node1.addChildBefore(node0, node0);
      Node node3 = node0.useSourceInfoIfMissingFrom(node2);
      Node node4 = node3.cloneTree();
      node2.useSourceInfoFromForTree(node4);
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newString("length");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(39, node0, node0, node0, 32, 0);
      node0.getInputId();
      node2.getSourceFileName();
      Node node3 = new Node(53, 0, 51);
      node1.useSourceInfoFrom(node3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node3.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      Node.newString("qbJ");
      Node node4 = Node.newString(46, "o#cH$RoBf2$a/>:R[", 4, 37);
      node4.wasEmptyNode();
      node2.getChildAtIndex(57);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = new Node(207, 31, (-452));
      Node node1 = new Node(36, node0, node0);
      node0.copyInformationFromForTree(node1);
      node0.isExprResult();
      node1.isRegExp();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newString(130, "foaDm+`P;ZF", (-515), (-5540));
      node0.putProp(16, "foaDm+`P;ZF");
      Node node1 = new Node((-515), node0);
      node1.cloneTree();
      Vector<Node> vector0 = new Stack<Node>();
      node1.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.isExprResult();
      node1.isReturn();
      node1.getChangeTime();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node((-9), (-9), (-9));
      Node node1 = new Node(108, node0, node0);
      node1.isLabel();
      node1.isThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node3 = new Node(53, node0, node2, node1, node0, 1, 31);
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newString((-238), "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition(1287);
      node0.getProp(45);
      Node node1 = new Node(0, node0, 79, (-3693));
      node1.isCatch();
      node0.isOnlyModifiesThisCall();
      node1.isAnd();
      node1.children();
      node1.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node0.addChildrenToBack(node1);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      node1.putIntProp(1654, 1);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newString(35, "AK");
      node0.setCharno(35);
      Node node1 = new Node(35, node0, node0, node0, node0);
      node1.addChildrenToBack(node0);
      node1.replaceChild(node0, node0);
      // Undeclared exception!
      try { 
        node1.clonePropsFrom(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      Node.newString("");
      Node node0 = Node.newString(53, "", 12, 145);
      node0.isContinue();
      Node node1 = new Node(38);
      node1.setDouble(32);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayName(locale1);
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node.mergeLineCharNo(153, 57);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.removeFirstChild();
      node0.hasChild((Node) null);
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      Node node1 = new Node(1349, node0, node0, node0, (-1965), 49);
      node1.getInputId();
      node1.getSourceFileName();
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(2135);
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node1.setSideEffectFlags(node_SideEffectFlags4);
      node0.getInputId();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getLength();
      node0.getInputId();
      node0.setSourceFileForTesting("YU/mSHzX@");
      node0.getSourceFileName();
      node0.isNot();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(125);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.extractCharno(29);
      Node node1 = new Node(125);
      node0.getJSType();
      node0.isAssign();
      node1.getJSType();
      node_SideEffectFlags3.setThrows();
      File file0 = MockFile.createTempFile("+O|lg# %j", (String) null);
      node0.isFromExterns();
      String string0 = " A68F&HMNbtqljt{|";
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0, string0);
      boolean boolean0 = false;
      node0.setIsSyntheticBlock(boolean0);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      // Undeclared exception!
      try { 
        node_SideEffectFlags5.clearAllFlags();
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         //  A68F&HMNbtqljt{|
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      node1.setSourceFileForTesting("c&8q5(");
      Node node2 = new Node(127, node1);
      node2.addSuppression("c&8q5(");
      node2.putBooleanProp(0, false);
      node0.setType(0);
      node2.addChildBefore(node1, node0);
      node1.children();
      node2.isFunction();
      node2.isNew();
      node2.removeChild(node0);
      node2.isQuotedString();
      String string0 = "";
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString(47, "");
      Node node1 = new Node(47, node0);
      node1.getSourceOffset();
      Node node2 = node1.getAncestor((-1619));
      node2.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = Node.newString((-1032), "", (-1032), 2145);
      node0.setType(2145);
      Node node1 = new Node(38, node0, 557, (-671));
      node1.getIntProp(148);
      node1.isEquivalentTo(node0, true, true, true);
      node0.addChildToBack(node1);
      node0.isQuotedString();
      Node node2 = Node.newString(2, "");
      Node node3 = node1.getAncestor(636);
      node3.isVar();
      node2.isAdd();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newString((-238), "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition(1287);
      node0.getProp(45);
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(40);
      node0.isNew();
      node0.setLineno(16);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = Node.newString((-1900), "8", 54, 54);
      Node node1 = node0.cloneTree();
      node1.setLineno(46);
      node1.setWasEmptyNode(true);
      node1.isOnlyModifiesArgumentsCall();
      node0.setLength((-1224));
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      node0.isObjectLit();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      node1.setType((-1407));
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("Object#Element");
      node0.detachFromParent();
      Node.newString("");
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node.mergeLineCharNo(153, 57);
      Node node1 = node0.getLastSibling();
      node1.isTypeOf();
      node1.isDelProp();
      node1.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node2.isObjectLit();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("M&{x'I65Wu;R@5C");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.detachFromParent();
      String string0 = ";.#M,UI|";
      Node.newString(string0);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(30);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node1.getInputId();
      node0.setSourceFileForTesting("YU/mSHzX@");
      node0.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      Node node2 = Node.newString("YU/mSHzX@");
      node0.children();
      Node node3 = Node.newString(47, "YU/mSHzX@", 2, 4095);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("NAME");
      node1.getCharno();
      node_FileLevelJsDocBuilder0.append((String) null);
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("hz?fr)qEml9:RZc_S");
      node0.isTry();
      Node node1 = Node.newString("`\"WcwbA<-8aT7");
      node0.checkTreeEqualsImpl(node1);
      node0.isIf();
      node1.isOnlyModifiesThisCall();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newString((-238), "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition(1287);
      node0.getProp(45);
      Node node1 = new Node(0, node0, 79, (-3693));
      node1.isCatch();
      node1.isAnd();
      node1.children();
      node1.setIsSyntheticBlock(true);
      node0.isNull();
      node0.putProp(79, (Object) null);
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newString(1998, "Hcq^", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node1.isQuotedString();
      String string0 = " (";
      Node node2 = Node.newString(" (", (-1793), 1932);
      node0.wasEmptyNode();
      Node node3 = new Node(3014, (Node[]) null);
      node3.toString();
      node0.getDouble();
      node3.getSideEffectFlags();
      node2.detachFromParent();
      Node.newString(string0);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isFalse();
      Node node1 = Node.newString("foaDm+`P;ZF");
      node1.getIntProp(46);
      node0.isEquivalentTo(node1, false, false, true);
      node0.isQuotedString();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = new Node(77);
      node0.isBlock();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node0.children();
      node0.getAncestor(536);
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString(120, "U");
      node0.setType(120);
      Node node1 = new Node(38, node0, 557, (-671));
      node1.getIntProp(32);
      node1.isEquivalentTo(node0, true, true, true);
      node0.addChildToBack(node1);
      node0.isQuotedString();
      Node node2 = Node.newString(2, "U");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.isVar();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newString(120, "U");
      node0.setType(120);
      Node node1 = new Node(38, node0, 557, (-671));
      node1.getIntProp(32);
      node0.addChildToBack(node1);
      node0.isQuotedString();
      Node.newString(2, "U");
      Node node2 = node1.getAncestor(624);
      node2.isVar();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      String string0 = "eMHVTW";
      Node node0 = Node.newString("eMHVTW");
      Node node1 = new Node((-4194), node0, 33, (-2236));
      Node node2 = new Node(660, node1);
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = new Node(1738, node2, node2);
      node3.addChildAfter(node0, node2);
      int int0 = 40;
      int int1 = 165;
      Node.newString(string0, int0, int1);
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayName(locale1);
      Node.mergeLineCharNo((-1939), 52);
      Node node1 = new Node(0, node0, 39, 30);
      node1.getIntProp(53);
      node1.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.addChildrenToBack(node0);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.setThrows();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = new Node(3588, 52, (-2804));
      Node node1 = Node.newString(2203, "not a StringNode", 49, 1378);
      node0.isEquivalentTo(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node1.setSideEffectFlags(node_SideEffectFlags1);
      node1.isCall();
      node1.isStringKey();
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.setType(1);
      node0.isHook();
      node0.isInc();
      node0.isLabelName();
      node0.isLabel();
      node0.setDouble((-2623.0));
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node((-9), (-9), (-9));
      Node node1 = new Node(108, node0, node0);
      node0.addChildrenToFront(node1);
      node1.isLabel();
      node1.setDouble(1.0);
      node0.isBreak();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      node0.wasEmptyNode();
      node0.addSuppression("foaDm+`P;ZF");
      node0.getSourceOffset();
      node0.isAdd();
      node0.isLabelName();
      Node node1 = Node.newString(47, "F=2[6.Z;Pc}", 53, 51);
      node1.setSourceFileForTesting("F=2[6.Z;Pc}");
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.sort((Comparator<? super JSType>) null);
      Node node2 = Node.newString(344, "Zz&C44v`('1?*'y<!:", 52, 1473);
      node1.isEmpty();
      node2.isNull();
      node0.addChildrenToFront(node1);
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newNumber(756.52880673357);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = new Node(29, 50, 65);
      node1.putIntProp(46, 15);
      node0.isContinue();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayName(locale1);
      Node node1 = new Node(57, node0, node0, node0);
      Node node2 = node1.removeFirstChild();
      node1.children();
      Node node3 = Node.newNumber((double) 12, 56, (-2126));
      Node node4 = Node.newNumber((double) 15, 51, 3026);
      node3.checkTreeEqualsImpl(node2);
      node2.getDirectives();
      node4.getDouble();
      node3.isOnlyModifiesArgumentsCall();
      Node.newString(40, ":Xjq}.0=AR", 50, 52);
      node0.isWhile();
      node4.isOnlyModifiesThisCall();
      node4.addSuppression("foaDm+`P;ZF");
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = node0.getLastSibling();
      node0.isFalse();
      node1.isDelProp();
      node1.setOptionalArg(false);
      node1.removeChildren();
      node1.isObjectLit();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      String string0 = "eMHVTW";
      Node node0 = Node.newString("eMHVTW");
      Node node1 = new Node(12, node0);
      Node node2 = new Node(660, node1);
      node1.removeChildren();
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString(15, "eMHVTW");
      node3.addChildAfter(node0, node2);
      int int0 = 40;
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newString(39, "fk!~jVg|(Rq!x%cI");
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node node0 = Node.newString("zxVwPDur@W~tu^");
      node0.isNot();
      node0.setChangeTime((-1074));
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.putIntProp(1654, (-1074));
      node0.isFunction();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.getUnicodeLocaleAttributes();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      Node node0 = new Node(840);
      node0.isFunction();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayName(locale1);
      Node.mergeLineCharNo((-1939), 52);
      Node node1 = new Node(56, node0, node0, node0, 16, 48);
      Node node2 = node1.getLastSibling();
      Node node3 = Node.newString("*2,WR}pipFHkUQu4Kd");
      node3.isTypeOf();
      node0.isDelProp();
      node1.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node1.isObjectLit();
      node1.isThrow();
      Node node5 = new Node(1, node0, node1, node4, node2, 1029, 83);
      node3.isCast();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      node1.setType((-1407));
      Node node2 = new Node(512, node1, 50, 1);
      node0.getIntProp(30);
      node1.isEquivalentTo(node2, true, true, false);
      node0.addChildToBack(node2);
      node1.isQuotedString();
      Node.newString(98, "c&8q5(");
      Node node3 = node2.getAncestor((-1337));
      node2.type = node3.DECR_FLAG;
      int int0 = 54;
      Node node4 = new Node(int0, node3.FREE_CALL, node3.DECR_FLAG);
      node4.isHook();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Node node1 = new Node(15);
      node0.isFalse();
      Node node2 = Node.newString("foaDm+`P;ZF");
      node1.isEquivalentTo(node2, false, false, true);
      node1.addChildToBack(node0);
      node1.isQuotedString();
      Node.newString(50, "(h>7z8>_\"nYaJL*%}");
      node1.getAncestor(8);
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isDec();
      Node node1 = new Node(0, (-789), 15);
      Node node2 = new Node(29, node1, node1, node0, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node2.setSideEffectFlags(node_SideEffectFlags2);
      node1.getInputId();
      node2.isNot();
      // Undeclared exception!
      try { 
        node1.isScript();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NEG
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(46, 43, 37);
      Node node2 = new Node(29, node1, node1, node0, node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node2.isTypeOf();
      node1.getInputId();
      node2.isDec();
      node1.isScript();
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.extractCharno((-481));
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getLength();
      node0.mayMutateGlobalStateOrThrow();
      node0.getInputId();
      node0.setSourceFileForTesting("YU/mSHzX@");
      node0.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node node1 = Node.newString("DATE_FUNCTION_TYPE");
      node0.children();
      Node node2 = Node.newString(113, "YU/mSHzX@", 57, 51);
      node2.isEmpty();
      node2.getStaticSourceFile();
      node2.isOr();
      Node node3 = new Node(1, node1, node1, 120, 57);
      node3.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newNumber(756.52880673357);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString("STRING foaDm+`P;ZF");
      Node node2 = node1.cloneTree();
      Node.newString(46, "STRING foaDm+`P;ZF");
      node1.addChildToFront(node2);
      node0.isOnlyModifiesThisCall();
      node1.checkTreeEqualsImpl(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.isExprResult();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.InstanceObjectType");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.InstanceObjectType");
      Node node0 = Node.newString("STRING foaDm+`P;ZF");
      node0.isVarArgs();
      node0.cloneTree();
      Node node1 = Node.newString(670, "STRING foaDm+`P;ZF");
      node1.addChildToFront(node0);
      node1.checkTreeEqualsImpl(node0);
      Node node2 = new Node(16, node0, node1);
      node0.getInputId();
      node0.removeChild(node2);
      node1.isDebugger();
      // Undeclared exception!
      try { 
        node0.clonePropsFrom(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("hz?fr)qEml9:RZc_S");
      node0.isTry();
      Node node1 = new Node(47, node0, 37, 1432);
      node1.getIntProp((-940));
      node0.isEquivalentTo(node1, true, false, false);
      node0.addChildToBack(node1);
      node1.isQuotedString();
      Node node2 = Node.newString(98, "hz?fr)qEml9:RZc_S");
      node2.checkTreeEqualsImpl(node1);
      node1.getAncestor(29);
      node2.isVar();
      node1.isEquivalentTo(node0, false, true, true);
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isFromExterns();
      Node node1 = Node.newString("STRING oaDm+`PZF");
      Node node2 = node0.cloneTree();
      Node node3 = Node.newString(1, ";<P2OK");
      Node node4 = new Node(29, node0, node3, node1, node0, 1, 29);
      node4.addChildToFront(node2);
      node2.isOnlyModifiesThisCall();
      Node node5 = Node.newString("d)CWgLk>_.:");
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeEqualsImpl(node2);
      Node node6 = Node.newString("p", 57, 43);
      node6.isIf();
      node5.putBooleanProp((-1311), true);
      node5.isOnlyModifiesThisCall();
      node0.isIf();
      node_NodeMismatch0.equals(node5);
      node4.getLength();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newString("eMHVTW");
      Node node1 = Node.newString("eMHVTW");
      Node node2 = new Node(660, node1);
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString(15, "eMHVTW");
      node3.addChildAfter(node0, node2);
      node0.checkTreeEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString(1850, "first new child has existing parent");
      Node node1 = Node.newString(8287, "= 54#W", 780, 3519);
      node1.getBooleanProp(51);
      node0.addSuppression("n8vLBDiMUu");
      node0.getQualifiedName();
      node1.setChangeTime(48);
      Locale locale0 = Locale.FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node1.setDirectives(set0);
      node0.addChildrenAfter(node1, node1);
      node0.copyInformationFromForTree(node1);
      node0.isInstanceOf();
      int int0 = (-19);
      Node.extractLineno(int0);
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(50, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale locale0 = Locale.forLanguageTag("");
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.addChildrenAfter(node0, node0);
      Node node1 = node0.copyInformationFromForTree(nodeArray0[0]);
      node1.isInstanceOf();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(39, "fk!~jVg|(Rq!x%cI");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isNumber();
      node0.getChildAtIndex(39);
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags((-1463));
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      Node node0 = Node.newString("wq_n5.]1ir[@rK");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = node0.detachFromParent();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.isQualifiedName();
      node0.toString(false, false, false);
      node0.setVarArgs(true);
      Node node1 = new Node(709, node0, node0);
      Node node2 = Node.newString("STRING foaDm+`P;ZF", 53, 4);
      node0.children();
      Node node3 = Node.newNumber(0.0, 47, 1460);
      node3.isQuotedString();
      InputId inputId0 = new InputId("String has leading or trailing whitespace");
      inputId0.toString();
      node2.setInputId(inputId0);
      Node node4 = node1.getChildAtIndex(32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node4.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      node3.isQualifiedName();
      // Undeclared exception!
      try { 
        node1.isFunction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getBooleanProp(2);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(0, node1, 50, 1);
      node0.getIntProp(30);
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isAdd();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(40);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      node1.setSourceFileForTesting("c&8q5(");
      Node node2 = new Node(127, node1);
      node2.addSuppression("c&8q5(");
      node2.putBooleanProp(0, false);
      node0.setType(0);
      node1.children();
      node2.isFunction();
      node2.isNew();
      node2.removeChild(node0);
      double double0 = 0.0;
      int int0 = 1000;
      Node.newNumber(double0, int0, node1.DIRECTIVES);
      node0.checkTreeEqualsImpl(node1);
      // Undeclared exception!
      try { 
        node2.getDirectives();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node(50);
      node0.isWhile();
      node0.isOr();
      Node node1 = new Node(49, node0, node0, 49, 54);
      Node node2 = new Node(4095, 48, 56);
      Node node3 = new Node(13, node1, node1, node1);
      node3.isTry();
      node3.isOnlyModifiesThisCall();
      node3.isIf();
      node1.getChildBefore(node3);
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node((-9), (-9), (-9));
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node node1 = Node.newString(182, "gA~}#Rbx1e&", 15, 17);
      Node node2 = new Node(1, node1);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      node0.isIf();
      Node node3 = new Node((-2556), node2, 36, 153);
      node3.removeChild(node1);
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newString((-1032), "", (-1032), 2145);
      node0.setType(2145);
      Node node1 = new Node(38, node0, 557, (-671));
      node1.getIntProp(148);
      node1.isEquivalentTo(node0, true, true, true);
      node1.isObjectLit();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node2 = node1.getFirstChild();
      node1.getNext();
      node2.setLength(54);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node2;
      nodeArray0[1] = node0;
      nodeArray0[2] = null;
      nodeArray0[3] = node2;
      nodeArray0[4] = null;
      nodeArray0[5] = null;
      nodeArray0[6] = null;
      nodeArray0[7] = node0;
      Node node3 = new Node(2102, nodeArray0);
      node3.isNoSideEffectsCall();
      nodeArray0[7].isComma();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = Node.newString(0, "Z", (-2295), 0);
      Node node1 = Node.newString("Z", 1713, 812);
      node0.isDelProp();
      node0.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isObjectLit();
      node0.isThrow();
      Node node3 = new Node(29, node0, node0, node1, node1, 8, Integer.MIN_VALUE);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("");
      FunctionType.getTopDefiningInterface(templateType0, "Named type with empty name component");
      Node node1 = Node.newString("SHEQ");
      node0.isThis();
      node0.isAssign();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node.mergeLineCharNo(153, 57);
      Node node1 = node0.getLastSibling();
      node1.isTypeOf();
      node1.isDelProp();
      node1.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      node0.isEquivalentTo(node1, false, true, true);
      node1.addChildToBack(node0);
      node0.isQuotedString();
      Node.newString((-2988), "foaDm+`P;ZF");
      node1.getAncestor(50);
      Node node2 = new Node(9, 1498, (-2211));
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node0 = jSDocInfo0.getAssociatedNode();
      Node node1 = new Node(5, (Node) null, (Node) null, (Node) null, (-2026), 12);
      node0.detachChildren();
      node1.getAncestors();
      // Undeclared exception!
      try { 
        node1.isVoid();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = Node.newString((-238), "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition(1287);
      node0.getProp(45);
      Node node1 = new Node(0, node0, 79, (-3693));
      node1.isCatch();
      node0.isOnlyModifiesThisCall();
      node1.isAnd();
      node1.children();
      node1.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node0.addChildrenToBack(node1);
      node_SideEffectFlags2.setAllFlags();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node1.detachFromParent();
      Node.newString("02uCDcPg&YT6L]1(");
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = new Node(50);
      node0.isWhile();
      Node node1 = node0.getLastSibling();
      node1.isTypeOf();
      node0.isDelProp();
      node1.getJSDocInfo();
      Node node2 = new Node(103, 46, 46);
      node2.isThrow();
      Node node3 = new Node(32, node1, node1, node0, node2, 148, 48);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = Node.newString("lengt");
      Node node1 = node0.cloneNode();
      node0.getInputId();
      node0.getSourceFileName();
      Node node2 = new Node(32, node0, node0, node1, node0, 48, 49);
      node1.isSyntheticBlock();
      node1.isOnlyModifiesArgumentsCall();
      node1.isVarArgs();
      node0.mayMutateArguments();
      node1.getJsDocBuilderForNode();
      node1.isLocalResultCall();
      node0.children();
      node1.isCatch();
      node1.toStringTree();
      node0.setSourceFileForTesting("lengt");
      node2.getJsDocBuilderForNode();
      node1.isArrayLit();
      node0.addChildBefore(node1, node1);
      node1.isName();
      int int0 = 3459;
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = Node.newString((-1251), "`\"WcwbA<-8aT7", (-1560), (-2108));
      node0.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(512, node1, 50, 1);
      node0.getIntProp(30);
      node1.isEquivalentTo(node2, true, true, false);
      node0.addChildToBack(node2);
      Node node3 = Node.newString(98, "c&8q5(");
      int int0 = 1247;
      node3.addChildrenToFront(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node2.addChildrenToBack(node3);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = null;
      try {
        simpleErrorReporter0 = new SimpleErrorReporter();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.isQualifiedName();
      node0.toString(false, false, false);
      node0.setVarArgs(true);
      Node node1 = new Node(709, node0, node0);
      Node node2 = Node.newString("STRING foaDm+`P;ZF", 53, 4);
      node0.children();
      Node node3 = Node.newNumber(0.0, 47, 1460);
      node3.isQuotedString();
      InputId inputId0 = new InputId("String has leading or trailing whitespace");
      Node.newString(53, "STRING foaDm+`P;ZF", 86, 1007);
      node3.setSourceFileForTesting("String has leading or trailing whitespace");
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.sort((Comparator<? super JSType>) null);
      Node.newString(1220, "STRING foaDm+`P;ZF", 54, (-3078));
      node3.isEmpty();
      Node node4 = new Node(79, node2, node2, node3);
      node4.isNull();
      node1.addChildrenToFront(node2);
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      node1.setType((-1407));
      Node node2 = new Node(512, node1, 50, 1);
      node0.getIntProp(30);
      node1.isEquivalentTo(node2, true, true, false);
      node0.addChildToBack(node2);
      node1.isQuotedString();
      Node node3 = Node.newString(98, "c&8q5(");
      node3.removeChildAfter(node0);
      int int0 = (-1337);
      Node node4 = node2.getAncestor(int0);
      node2.type = node4.DECR_FLAG;
      int int1 = 54;
      Node node5 = new Node(int1, node4.FREE_CALL, node4.DECR_FLAG);
      node5.isHook();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = Node.newString("foa}FDm+`P;uF");
      node0.isTrue();
      Node node1 = Node.newString(56, "");
      node1.isEquivalentTo(node0, true, false, false);
      node0.isQuotedString();
      Node node2 = Node.newString(39, "eCAk-Z*d3+&xDl");
      Node node3 = node0.removeChildAfter(node1);
      node2.isScript();
      node3.getLastSibling();
      node1.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newString("foa}FDm+`P;uF");
      node0.isTrue();
      Node node1 = Node.newString(56, "");
      node1.isEquivalentTo(node0, true, false, false);
      node0.addChildToBack(node1);
      node0.isQuotedString();
      Node node2 = Node.newString(39, "eCAk-Z*d3+&xDl");
      Node node3 = node0.removeChildAfter(node1);
      node2.isScript();
      node3.getLastSibling();
      node1.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.mergeLineCharNo((-2605), (-2605));
      Node node0 = new Node(903);
      int int0 = node0.getChangeTime();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      node0.isEquivalentToShallow((Node) null);
      node0.getBooleanProp(int0);
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newString(1850, "first new child has existing parent");
      Node node1 = Node.newString(8287, "= 54#W", 780, 3519);
      node1.getBooleanProp(51);
      node0.addSuppression("n8vLBDiMUu");
      node0.getQualifiedName();
      node1.setChangeTime(48);
      Locale locale0 = Locale.FRENCH;
      Node node2 = new Node(46, node1, node0, 15, 1007);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(512, node1, 50, 1);
      node0.getIntProp(30);
      node1.isEquivalentTo(node2, true, true, false);
      node0.addChildToBack(node2);
      Node node3 = Node.newString(98, "c&8q5(");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1247);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node2.addChildrenToBack(node3);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node4 = jSTypeRegistry0.createOptionalParameters((JSType[]) null);
      int int0 = 56;
      node4.putIntProp(int0, node1.SIDE_EFFECTS_ALL);
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newString(1998, ")e{6cK\"HnaB.", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node0.setLineno(52);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node node2 = Node.newString("");
      node2.getQualifiedName();
      Node node3 = Node.newString("(kCj`u?D&3c;f2", 15, 32);
      node3.isTry();
      Node node4 = Node.newString("");
      Node node5 = new Node(15, node3, node3, node4, node1);
      Node node6 = Node.newString("", 29, 16);
      node1.checkTreeEqualsImpl(node5);
      node2.isRegExp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node7 = jSTypeRegistry0.createParameters((List<JSType>) null);
      node6.srcrefTree(node7);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      InputId inputId0 = new InputId("");
      node0.getProp(102);
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      Node node1 = new Node(4194304, node0, 48, 488);
      Locale locale0 = Locale.ENGLISH;
      locale0.getUnicodeLocaleAttributes();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.putIntProp(1908, 54);
      node0.isGetterDef();
      node1.checkTreeEqualsImpl(node1);
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newString(1998, ")e{6cK\"HnaB.", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node0.setLineno(52);
      node0.isVarArgs();
      Node.newNumber((double) 1, 110, 7);
      Node node2 = Node.newNumber((double) 39, 16, 3866);
      node0.checkTreeEqualsImpl(node1);
      node0.getDirectives();
      node0.getDouble();
      node2.isOnlyModifiesArgumentsCall();
      int int0 = (-2134);
      String string0 = null;
      int int1 = 53;
      int int2 = 130;
      // Undeclared exception!
      try { 
        Node.newString(int0, string0, int1, int2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1998
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      Node node2 = new Node(29, 153, 52);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      Node node3 = Node.newString("STRING foaDm+`P;ZF");
      node1.isThis();
      node1.isAssign();
      node2.removeChild(node1);
      node3.isComma();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newString((-238), "    ");
      node0.getInputId();
      node0.setSourceEncodedPosition(1287);
      node0.getProp(45);
      Node node1 = new Node(0, node0, 79, (-3693));
      node1.isCatch();
      node0.isOnlyModifiesThisCall();
      node1.isAnd();
      node1.getChildBefore(node0);
      node1.children();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.putIntProp(46, 15);
      node1.isGetProp();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayName(locale1);
      Node.mergeLineCharNo((-1939), 52);
      Node node1 = new Node(56, node0, node0, node0, 16, 48);
      node1.getLastSibling();
      node1.isFor();
      node1.isNull();
      node0.putProp(57, locale0);
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node[] nodeArray0 = new Node[4];
      Node.newString(0, "Z", (-2295), 0);
      Node node0 = Node.newString("Z", 1713, 794);
      nodeArray0[1] = node0;
      node0.isFor();
      node0.toString();
      node0.getDouble();
      nodeArray0[0].getSideEffectFlags();
      Node node1 = nodeArray0[1].detachFromParent();
      node1.getChildBefore(nodeArray0[1]);
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      String string0 = "foaDm+`P;ZF";
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node.mergeLineCharNo(153, 57);
      Node node1 = node0.getLastSibling();
      node1.isTypeOf();
      node1.isDelProp();
      Node node2 = new Node(42, node0, (-962), 1054);
      node1.getIntProp(54);
      node1.isEquivalentTo(node0, true, false, false);
      node1.addChildToBack(node0);
      node2.isQuotedString();
      Node node3 = Node.newString(node0.REFLECTED_OBJECT, string0);
      node2.removeChildAfter(node3);
      int int0 = 123;
      // Undeclared exception!
      try { 
        node2.getAncestor(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      Node node1 = new Node(1272, node0, 55, 12);
      Node node2 = Node.newString(56, "GoA?rJ/+RVMf");
      node2.isCatch();
      node0.isOnlyModifiesThisCall();
      node1.isAnd();
      node2.children();
      Node node3 = Node.newString(2, "foaDm+`P;ZF", 4, 148);
      node3.setSourceFileForTesting("GoA?rJ/+RVMf");
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.sort((Comparator<? super JSType>) null);
      Node.newString(7017242, "GoA?rJ/+RVMf", 46, (-4225));
      node0.isEmpty();
      node0.isNull();
      node1.addChildrenToFront(node3);
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      String string0 = "LuB:@XQ}G xc=a1`p\\";
      Node node0 = Node.newString("LuB:@XQ}G xc=a1`p");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayName(locale1);
      Node node1 = new Node(57, node0, node0, node0);
      Node node2 = node1.removeFirstChild();
      node1.children();
      Node node3 = Node.newNumber((double) 12, 56, (-2126));
      Node.newNumber((double) 15, 51, 3026);
      node0.replaceChildAfter(node1, node3);
      node3.checkTreeEqualsImpl(node2);
      // Undeclared exception!
      try { 
        node2.getDirectives();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = Node.newString("", 152, 31);
      node0.replaceChildAfter(node1, node1);
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = Node.newString(0, "{=Gc&?[/9E1", 0, 0);
      Node node1 = new Node(108, node0, node0);
      node0.isEquivalentToShallow(node1);
      node0.isName();
      node0.setSourceFileForTesting("{=Gc&?[/9E1");
      node1.isLabel();
      node1.setDouble(1.0);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(40);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node.mergeLineCharNo(30, 8);
      Node node2 = node1.getLastSibling();
      node2.isTypeOf();
      node2.isDelProp();
      node0.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node2.isThrow();
      Node node3 = new Node(8, node2, node2, node1, node0, 4095, (-1579));
      node1.isCast();
      node3.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.isQualifiedName();
      node0.toString(false, false, false);
      node0.setVarArgs(true);
      Node node1 = new Node(709, node0, node0);
      Node node2 = new Node(37, node1, node1, node1, node0);
      node0.children();
      double double0 = 0.0;
      int int0 = 1460;
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      node1.addSuppression("GLOBAL_THIS");
      node1.setOptionalArg(true);
      Node node2 = new Node(31, node0, node1, node1, node1);
      double double0 = 1.0;
      node2.setDouble(double0);
      Node.AncestorIterable node_AncestorIterable0 = null;
      try {
        node_AncestorIterable0 = new Node.AncestorIterable(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = Node.newString(825, "", 825, 2035);
      Node node1 = new Node(111, node0);
      node1.isWhile();
      node1.hasChildren();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber((double) 42);
      Node node1 = new Node(4095, node0, node0, node0, node0);
      node0.isOnlyModifiesArgumentsCall();
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.isVarArgs();
      node1.isInc();
      node2.getJsDocBuilderForNode();
      node1.children();
      node0.isCatch();
      node0.toStringTree();
      node1.setSourceFileForTesting("");
      node1.isOr();
      node0.addChildBefore(node1, node1);
      node0.isName();
      int int0 = 1163;
      // Undeclared exception!
      try { 
        Node.extractLineno(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("x");
      FunctionType.getTopDefiningInterface(templateType0, "Not declared as a constructor");
      Node node0 = Node.newNumber(0.0, 1, (-4356));
      Node node1 = new Node(0, node0, node0, 42, 4095);
      node1.isDelProp();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.putIntProp(53, 1998);
      Node node2 = new Node(1, node1, node1, node0);
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = node0.getLastSibling();
      node0.isFalse();
      node1.isUnscopedQualifiedName();
      node1.isDelProp();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isScript();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 16, 16);
      Node node1 = new Node((-1126), node0);
      node0.addSuppression("LsncJ}4Z5");
      node0.putBooleanProp(55, true);
      node1.setType(16);
      node0.children();
      node1.isFunction();
      Node node2 = Node.newString(47, "?>", 115, 36);
      node2.isNew();
      node1.removeChild(node2);
      double double0 = (-1724.07664247);
      int int0 = (-789);
      Node node3 = Node.newNumber(double0, node1.DECR_FLAG, int0);
      node3.checkTreeEqualsImpl(node0);
      node1.getDirectives();
      int int1 = (-389);
      Node node4 = null;
      try {
        node4 = new Node(int1, node2, node0, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = new Node(8);
      node0.getLength();
      node0.mayMutateGlobalStateOrThrow();
      node0.getInputId();
      node0.setSourceFileForTesting("first new child has existing sibling");
      node0.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = Node.newString(" pt]Ad");
      node0.children();
      Node node2 = Node.newString(56, "YUmSHzX@", 38, 118);
      node2.isUnscopedQualifiedName();
      node1.isEmpty();
      node0.getStaticSourceFile();
      node0.isOr();
      Node node3 = new Node(43, node0, node0, 40, 1911);
      node2.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newString(1998, ")e{6cK\"HnaB.", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node0.setLineno(52);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.newString("");
      node0.children();
      Node node2 = Node.newString((-2763), ")e{6cK\"HnaB.", 4, 46);
      node1.isEmpty();
      node2.getStaticSourceFile();
      node0.isOr();
      Node node3 = new Node(43, node1, node1, (-1789), 16);
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newString(1998, "Hcq^", (-1367), (-1367));
      Locale locale0 = Locale.GERMAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = node0.getLastSibling();
      node1.isFalse();
      node0.isDelProp();
      node0.setOptionalArg(false);
      Node node2 = node1.removeChildren();
      node0.isObjectLit();
      int int0 = 33;
      int int1 = 37;
      Node node3 = new Node(33, (Node[]) null);
      Node node4 = new Node(int1, node3, node2, node3, node2, node3.REFLECTED_OBJECT, node1.SIDE_EFFECT_FLAGS);
      int int2 = 821;
      Node node5 = new Node(int0, node1, node2, node4, node3.FLAG_NO_THROWS, int2);
      node5.isGetElem();
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Node node1 = node0.cloneTree();
      node0.isOnlyModifiesArgumentsCall();
      node0.setOptionalArg(false);
      Node node2 = Node.newString("com.google.javascript.rhino.Node$AbstractPropListItem", (-333), 29);
      node2.isReturn();
      Node node3 = new Node(1052, node0);
      node3.isObjectLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node1.putIntProp((-1160), 1);
      node3.isExprResult();
      node3.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newString("first new child has existing parent", 1850, 1850);
      Node node1 = Node.newString(8287, "= 54#W", 780, 3519);
      node0.isNE();
      node0.addSuppression("n8vLBDiMUu");
      node0.getQualifiedName();
      node1.setChangeTime(2);
      Locale locale0 = Locale.FRENCH;
      Node node2 = new Node(46, node1, node0, 15, 1007);
      node0.useSourceInfoFromForTree(node1);
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = new Node(1437);
      Node node1 = new Node(461845907, node0, node0, node0);
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newString(1998, "Hq", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node1.isOnlyModifiesArgumentsCall();
      node1.setOptionalArg(false);
      Node node2 = Node.newString("Hq", (-536870912), 48);
      node2.isReturn();
      node2.isObjectLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setThrows();
      node0.putIntProp(30, (-797));
      node2.isExprResult();
      node1.getChangeTime();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = new Node((-1718));
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newString(41, "h(Nk_W&q;");
      node0.isVoid();
      Node node1 = Node.newString(4095, "foaDm+`P;ZF");
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      node0.wasEmptyNode();
      node0.addSuppression("foaDm+`P;ZF");
      node0.getSourceOffset();
      node0.isAdd();
      node0.isLabelName();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList1);
      node1.putIntProp(31, 29);
      Node.newNumber(1067.9390463688046);
      node0.isIn();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newString(1998, ")e{6cK\"HnaB.", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node0.setLineno(52);
      Node node2 = node0.srcref(node1);
      node2.checkTreeEqualsImpl(node1);
      node0.setWasEmptyNode(true);
      node1.isOnlyModifiesArgumentsCall();
      node1.setLength(50);
      Node node3 = Node.newString(48, "", 36, 37);
      Node node4 = Node.newString(871, ")e{6cK\"HnaB.", 1110, 30);
      node3.isThrow();
      node4.isComma();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      node0.wasEmptyNode();
      node0.addSuppression("foaDm+`P;ZF");
      node0.getSourceOffset();
      node0.isAdd();
      node0.isLabelName();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList1);
      node1.putIntProp(31, 29);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      node0.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString("foa]Dq+`P;ZMxF");
      node0.isNot();
      node0.toString(false, false, false);
      node0.setVarArgs(true);
      Node node1 = new Node(50, node0, node0);
      Node.newString("STRING foa]Dq+`P;ZMxF", 53, 4);
      node0.children();
      Node node2 = Node.newNumber((-0.13762105484901055), 56, 54);
      node0.isWith();
      node0.getDouble();
      node1.getSideEffectFlags();
      node1.detachFromParent();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING foa]Dq+`P;ZMxF [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("fFaDm+`P;ZF");
      node0.setString("fFaDm+`P;ZF");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setOptionalArg(true);
      Node node1 = new Node(40, node0, node0, node0, node0);
      node0.setDouble(29);
      Node.AncestorIterable node_AncestorIterable0 = null;
      try {
        node_AncestorIterable0 = new Node.AncestorIterable(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING fFaDm+`P;ZF [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags((-1463));
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newNumber((double) (-1463));
      node0.addSuppression((String) null);
      node0.getQualifiedName();
      node0.setChangeTime(4787);
      Locale locale0 = Locale.FRENCH;
      Node node1 = new Node(32, node0, node0, 40, 55);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.isOnlyModifiesThisCall();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString("eMHVTW");
      Node node1 = new Node((-4194), node0, 33, (-2236));
      Node node2 = new Node(660, node1);
      node1.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.isBreak();
      node2.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DZ3S0C?mm");
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.setLineno(4095);
      Node node1 = new Node(4095, node0, node0, 29, 36);
      Node node2 = node1.copyInformationFrom(node0);
      node2.children();
      node2.isSyntheticBlock();
      node2.isBreak();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      node1.setType((-1407));
      node0.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node3 = Node.newString(42, "_H3'&+CMlCw-(o%J");
      node2.getAncestor(47);
      Node node4 = new Node((-1996), 19, 816);
      node2.isHook();
      node3.isOr();
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      boolean boolean0 = node0.getBooleanProp(8);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      String string0 = "a";
      node0.removeProp(15);
      node1.setType((-1407));
      int int0 = 512;
      node1.setQuotedString();
      Node node2 = new Node(int0, node1, node0.FREE_CALL, node1.FLAG_GLOBAL_STATE_UNMODIFIED);
      node0.getIntProp(node2.VAR_ARGS_NAME);
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        node1.isEquivalentTo(node2, boolean1, boolean1, boolean0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      int int0 = (-1372);
      Node node0 = new Node((-1372));
      boolean boolean0 = true;
      boolean boolean1 = false;
      boolean boolean2 = false;
      Node node1 = Node.newString(42, "com.google.common.collect.RegularImmutableList", 105, 36);
      node0.replaceChildAfter((Node) null, node1);
      node0.toString(boolean0, boolean1, boolean2);
      boolean boolean3 = false;
      // Undeclared exception!
      try { 
        node0.putBooleanProp(int0, boolean3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      int int0 = 11;
      Node node0 = new Node(11);
      Node node1 = new Node((-1));
      Node node2 = Node.newString("StringNode: str is null", 1946, 1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getBooleanProp(1047);
      node1.isOnlyModifiesThisCall();
      node1.getString();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.cloneNode();
      node0.getExistingIntProp(int0);
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      Node.mergeLineCharNo(132, 55);
      Node node1 = new Node((-1664), node0, node0, node0, 92, 31);
      node1.getLastSibling();
      Node node2 = Node.newString("");
      node2.isTypeOf();
      node0.isDelProp();
      node2.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.isObjectLit();
      Node.newString(53, "foaDm+`P;ZF", (-1), 40);
      node3.isThrow();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node.mergeLineCharNo(153, 57);
      node0.isTypeOf();
      node0.isDelProp();
      node0.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isThrow();
      Node node1 = Node.newString("Object#Element");
      node1.isIn();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      node0.wasEmptyNode();
      node0.addSuppression("foaDm+`P;ZF");
      node0.getSourceOffset();
      node0.isAdd();
      node0.isLabelName();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList1);
      node1.putIntProp(31, 29);
      node1.isOnlyModifiesThisCall();
      Node.newNumber(1067.9390463688046);
      node0.isIn();
      node1.isVoid();
      node1.getAncestors();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(512, node1, 50, 1);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node1.setDirectives(treeSet0);
      Node.mergeLineCharNo(0, 15);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node node3 = node2.removeFirstChild();
      Node node4 = new Node(4, (Node) null, 17, (-582));
      node4.hasChild(node3);
      node4.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node node0 = null;
      Node node1 = new Node(126, (Node) null, 126, 27591);
      node1.addChildrenToBack(node0);
      // Undeclared exception!
      try { 
        node_SideEffectFlags2.setReturnsTainted();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      node1.addSuppression("GLOBAL_THIS");
      Node node2 = Node.newString("foaDm+`P;ZF");
      Node node3 = new Node(51, node1, node2);
      node2.isLabel();
      node1.setDouble((-546.99906));
      node0.isBreak();
      node2.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newString("first new child has existing parent", 1850, 1850);
      node0.children();
      Node node1 = Node.newString(8287, "= 54#W", 780, 3519);
      node0.isNE();
      node0.addSuppression("n8vLBDiMUu");
      node0.getQualifiedName();
      node1.setChangeTime(2);
      Locale locale0 = Locale.FRENCH;
      node0.setDouble(55);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      int int0 = (-1852);
      node0.isEquivalentTo((Node) null, true, true, true);
      int int1 = (-1343);
      node0.putIntProp(int1, int0);
      // Undeclared exception!
      try { 
        node0.getJsDocBuilderForNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags((-1463));
      node_SideEffectFlags5.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags();
      node_SideEffectFlags7.areAllFlagsSet();
      Node node0 = Node.newString(2035, "", (-1372), 130);
      Node node1 = new Node(197, node0);
      node0.isWhile();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("K28{");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayName(locale1);
      node0.isNoSideEffectsCall();
      Node.mergeLineCharNo(2525, 30);
      Node node1 = new Node(56, node0, node0, node0, 57, 36);
      Node node2 = node1.getLastSibling();
      Node node3 = Node.newString(" : ");
      node0.isTypeOf();
      node1.isDelProp();
      node2.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node2.isObjectLit();
      Node.newString(1, " : ", 42, 39);
      node3.isThrow();
      node4.isCall();
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Stack<JSType> stack0 = new Stack<JSType>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOptionalArg();
      node0.isNoSideEffectsCall();
      Node node1 = node0.getLastSibling();
      node0.isInstanceOf();
      node1.isGetElem();
      node0.isUnscopedQualifiedName();
      node1.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = Node.newString(1998, "Hq", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = Node.newString("Hq", (-536870912), 48);
      node2.isReturn();
      node2.isObjectLit();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node0.putIntProp(30, (-797));
      node2.isExprResult();
      node1.getChangeTime();
      node1.isIf();
      node1.isCase();
      node_SideEffectFlags4.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(111, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale.forLanguageTag("");
      Node node1 = node0.copyInformationFromForTree(node0);
      Node node2 = Node.newNumber((-2461.7285), 40, 12);
      node2.getLength();
      node2.getLength();
      node1.isInstanceOf();
      node0.isGetElem();
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node1.isDebugger();
      node3.isDec();
      node0.isIf();
      node1.isCase();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = new Node(184, (Node) null);
      node0.getSideEffectFlags();
      // Undeclared exception!
      try { 
        node0.removeFirstChild();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((-108.8659877620495), 9, 153);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      node0.setSourceEncodedPosition(9);
      node0.copyInformationFromForTree((Node) null);
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "JQ";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node((-33), (-33), (-2436));
      Locale locale0 = Locale.forLanguageTag("U,");
      locale0.getUnicodeLocaleAttributes();
      Node node1 = node0.copyInformationFromForTree((Node) null);
      node1.isInstanceOf();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.ensureCapacity(472);
      Node node0 = Node.newString(472, "Object#Key", 472, 472);
      Integer integer0 = new Integer(31);
      node0.isFor();
      SimpleErrorReporter.getMessage0("");
      int int0 = 146;
      // Undeclared exception!
      try { 
        node0.setLength(int0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(512, node1, 50, 1);
      node0.getIntProp(30);
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node1.addChildrenToBack(node2);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      Node.newNumber((-1659.5823732027));
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("hz?fr)qEml9:RZc_S");
      node0.isTry();
      Node node1 = Node.newString("`\"WcwbA<-8aT7");
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesThisCall();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getLength();
      node0.getInputId();
      node0.setSourceFileForTesting("YU/mSHzX@");
      node0.getSourceFileName();
      node0.isNot();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(125);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(125);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node0.putIntProp((-797), 125);
      node0.isExprResult();
      node0.getChangeTime();
      node0.isIf();
      node0.isCase();
      node_SideEffectFlags3.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isTypeOf();
      node0.isDelProp();
      node0.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.getInputId();
      node0.isNot();
      node0.isScript();
      Node node1 = new Node(52, node0, node0, 4095, (-2125));
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      Node node0 = new Node(4);
      Node node1 = new Node(50, node0, node0, node0, node0, 40, 31);
      node1.cloneNode();
      int int0 = Node.REFLECTED_OBJECT;
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = Node.newString("length");
      Node node1 = node0.cloneNode();
      Node node2 = new Node(39, node0, node0, node0, 32, 0);
      node2.getSourceFileName();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(16);
      Node.newString((-434), "length", 12, 4218);
      node1.isEquivalentToShallow(node2);
      node3.isLabel();
      node2.isCast();
      node3.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = Node.newNumber(756.52880673357);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = node0.getLastSibling();
      node1.isFor();
      node1.isScript();
      Node node2 = node1.getLastSibling();
      node2.getDouble();
      node2.hasMoreThanOneChild();
      node0.hasChildren();
      node0.removeFirstChild();
      node0.isCatch();
      Node.newString("Object#Element");
      node0.copyInformationFromForTree(node1);
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 127);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      node1.setType((-1407));
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString("foaDm+`P;ZF", 16, (-1407));
      Node node3 = Node.newNumber(0.0, (-1391), 1428);
      node3.isTry();
      Node.newString("Qf]Lz=p'Mi-_k");
      Node node4 = new Node(49, node3, node3, node2, node2);
      Node node5 = Node.newString("com.google.javascript.rhino.jstype.StringType", 37, 110);
      node2.checkTreeEqualsImpl(node0);
      node0.isRegExp();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node1.srcrefTree(node2);
      node5.isCast();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      String string0 = "{=Gc&?[/9E1";
      Node node0 = Node.newString(0, "{=Gc&?[/9E1", 0, 0);
      Node.extractCharno(303);
      node0.isWith();
      node0.getDouble();
      node0.getSideEffectFlags();
      Node node1 = node0.detachFromParent();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newString("hz?fr)qEml9:RZc_S");
      node0.isTry();
      Node node1 = Node.newString("`\"WcwbA<-8aT7");
      node1.checkTreeEqualsImpl(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = Node.newNumber((double) 40, (-438), 39);
      node1.isWith();
      node2.getExistingIntProp(48);
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getLength();
      node0.getInputId();
      Node node1 = new Node(8, node0, node0, node0, 2, (-567));
      node1.getSourceFileName();
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags5.setAllFlags();
      node0.setSideEffectFlags(node_SideEffectFlags4);
      node0.getInputId();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.ensureCapacity(472);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Integer integer0 = new Integer(31);
      node0.isSwitch();
      SimpleErrorReporter.getMessage0("");
      int int0 = 146;
      // Undeclared exception!
      try { 
        node0.setLength(int0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newNumber(756.52880673357);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isGetElem();
      node0.isUnscopedQualifiedName();
      node0.isSwitch();
      node0.isSetterDef();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(110);
      node0.getInputId();
      node0.isOptionalArg();
      node0.isScript();
      node0.isInstanceOf();
      node0.isGetElem();
      node0.isUnscopedQualifiedName();
      node0.isSwitch();
      node0.isComma();
      Node node1 = new Node(53, 8, 4);
      node0.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newString("first new child has existing parent", 1998, 1998);
      node0.children();
      Node node1 = Node.newString(31, "VALUE_MISMATCH", 62, 48);
      node1.isNE();
      node0.addSuppression("foa]Dq+`P;ZF");
      node1.getQualifiedName();
      node1.setChangeTime(39);
      Locale locale0 = Locale.FRENCH;
      node1.setDouble(53);
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = Node.newString(0, "{=Gc&?[/9E1", 0, 0);
      Node node1 = new Node(108, node0, node0);
      node0.isEquivalentToShallow(node1);
      node0.isName();
      node0.setSourceFileForTesting("{=Gc&?[/9E1");
      node1.setChangeTime(55);
      node1.isLabel();
      node1.siblings();
      node1.isName();
      node1.setDouble(1.0);
      node0.isParamList();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.getUnicodeLocaleAttributes();
      Locale.forLanguageTag(".negate()");
      Node node1 = new Node(16, node0, node0, node0, node0, 1, 8287);
      node1.copyInformationFromForTree(node0);
      Node node2 = Node.newNumber(1.0, 37, 192);
      node0.getLength();
      node1.isInstanceOf();
      node1.isGetElem();
      node0.useSourceInfoFromForTree(node1);
      node0.isString();
      Node node3 = Node.newNumber((double) 50);
      node3.isDec();
      node2.srcref(node3);
      node2.checkTreeEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber((double) 42);
      Node node1 = new Node(42, node0, node0, 47, 103);
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.isVarArgs();
      node1.isDefaultCase();
      node2.getJsDocBuilderForNode();
      node1.children();
      node0.isCatch();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.iterator();
      Node.newString(49, "NO_OBJECT_TYPE", 43, 56);
      Node node3 = Node.newNumber(1352.2595217178757, 48, 47);
      node3.isEquivalentToShallow(node2);
      node1.isLabel();
      Node node4 = new Node(12, (Node) null, node2, (Node) null, node1, (-1541), 110);
      node4.isNull();
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) stack0);
      ImmutableList<JSType> immutableList1 = immutableList0.reverse();
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList1);
      Node node0 = new Node(32, 997, 53);
      node0.isHook();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node.mergeLineCharNo(153, 57);
      Node node1 = node0.getLastSibling();
      node1.isTypeOf();
      Locale.forLanguageTag("_i)");
      Locale locale1 = Locale.CHINESE;
      Set<String> set1 = locale1.getUnicodeLocaleAttributes();
      node1.setDirectives(set1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.CanCastToVisitor");
      node1.addChildrenAfter(node0, node0);
      node1.copyInformationFromForTree(node0);
      node1.isInstanceOf();
      int int0 = 41;
      Node.extractLineno(int0);
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newString(")e{6cK\"HnaB.");
      node0.isNot();
      node0.isNumber();
      node0.isAdd();
      node0.isOptionalArg();
      node0.isEmpty();
      node0.isNull();
      Integer integer0 = new Integer(46);
      node0.putProp(41, integer0);
      node0.putIntProp(41, 44);
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "foa]Dq+`P;ZF");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1943));
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = new Node(76, (-1943), (-1943));
      node0.children();
      node0.toString();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node node0 = Node.newString("");
      Node node1 = Node.newString(53, "", 12, 177);
      boolean boolean0 = node1.wasEmptyNode();
      node1.setSourceEncodedPositionForTree(49);
      node0.isLabel();
      node0.setDouble(57);
      node1.setVarArgs(boolean0);
      int int0 = (-882);
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayName(locale1);
      Node node1 = new Node(57, node0, node0, node0);
      node1.removeFirstChild();
      node1.children();
      Node node2 = Node.newNumber((double) 12, 56, (-2126));
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isThrow();
      Node node3 = new Node(670, node1, node1, node1, node0, 54, 46);
      node2.isCast();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = node0.getLastSibling();
      node0.isFalse();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.putIntProp(8199, (-2592));
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newString(1998, ")e{6cK\"HnaB.", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node0.setLineno(52);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node node2 = Node.newString((-1853), "");
      node0.isString();
      node2.addChildToBack(node0);
      node1.isQuotedString();
      Node node3 = Node.newString(48, "");
      Node node4 = new Node(50, node3, node1, node1, node1, 112, 1365);
      node3.removeChildAfter(node4);
      node1.isScript();
      node1.getLastSibling();
      node2.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      node0.getJSDocInfo();
      node0.setOptionalArg(false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = Node.newString(39, "String node not created with Node.newString", 4, 1729);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.isOptionalArg();
      node1.isScript();
      Node node3 = node2.getLastSibling();
      node1.wasEmptyNode();
      node1.isAssignAdd();
      node0.removeFirstChild();
      node3.addChildrenAfter(node0, (Node) null);
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(50, (-446), (-2736));
      nodeArray0[0] = node0;
      Node node1 = new Node(50, nodeArray0);
      Locale locale0 = Locale.forLanguageTag("");
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.getString();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = nodeArray0[0].cloneNode();
      int int0 = (-3737);
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 50
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = new Node((-9), (-9), (-9));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = new Node((-1703), 29, 40);
      node0.putIntProp(42, 0);
      node1.isContinue();
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "fAC\"aAck/&X(");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)52;
      byteArray0[4] = (byte)64;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%xL&)A4x`wJd^P");
      Node.extractCharno(103);
      Node node0 = Node.newNumber(0.0);
      node0.isOptionalArg();
      node0.isNumber();
      node0.isInstanceOf();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(102, node0, 52, 50);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.isLabel();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isCase();
      node1.getLength();
      node3.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newString(39, "fk!~jVg|(Rq!x%cI");
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = Node.newString("LuB:@XQ}G xc=a1`p");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags6.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags7.setMutatesThis();
      node_SideEffectFlags7.areAllFlagsSet();
      Node node1 = Node.newString((-1360), "foa]Dq+`P;ZF", 56, 19);
      Node node2 = new Node(8, node1);
      node0.isWhile();
      node2.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node((-9));
      Node node1 = new Node(36, node0);
      node1.isLabel();
      node1.cloneTree();
      node1.setDouble(1.0);
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString((-422), "Object#Element", 63, 63);
      Node node1 = new Node(4, node0, node0, node0);
      Node node2 = node1.cloneTree();
      node2.setLineno(47);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node node3 = Node.newString("");
      node3.children();
      Node.newString(4667, "com.google.javascript.rhino.Node$FileLevelJsDocBuilder", 42, 47);
      node0.isEmpty();
      node2.getStaticSourceFile();
      node0.isOr();
      Node node4 = new Node(88, node3, node2, 3618, 40);
      Node node5 = Node.newString((-1216), "Object#Key");
      node5.checkTreeTypeAwareEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayName(locale1);
      Node node1 = new Node(56, node0, node0, node0, 16, 48);
      Node node2 = node1.getLastSibling();
      Node.newString("\u4E2D\u6587 (\u4E2D\u570B)");
      Node node3 = Node.newString("foaDm+`P;ZF");
      Node node4 = new Node(45, 4, 605);
      Node node5 = new Node(31, node2, node4, node4);
      node3.isTry();
      Node node6 = Node.newString("com.google.javascript.rhino.Node$AncestorIterable$1");
      node1.checkTreeEqualsImpl(node3);
      node6.isOnlyModifiesThisCall();
      node2.isIf();
      node1.getChildBefore(node3);
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newString("first new child has existing parent", 1998, (-3489));
      node0.children();
      Node node1 = Node.newString(31, "VALUE_MISMATCH", 62, 48);
      node1.isNE();
      node1.isDelProp();
      node0.setOptionalArg(true);
      Node node2 = new Node(50, node1, node1, node1);
      node2.removeChildren();
      Node node3 = new Node(39, node0, node0, node0, 686, 50);
      node3.isObjectLit();
      node2.isNull();
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2043, 1492, 83);
      node0.getBooleanProp(2043);
      Node node1 = new Node((-695), node0, node0, node0, node0, 42, 64);
      Node node2 = new Node(0, node1, node1, node1);
      node2.getJSDocInfo();
      node2.setOptionalArg(false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node3 = Node.newString(36, "i`4 ZU$A{]`5f", 302, 126);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node3.isOptionalArg();
      node2.isScript();
      node1.getLastSibling();
      node2.wasEmptyNode();
      node2.isAssignAdd();
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = node0.getLastSibling();
      node0.isFalse();
      node0.isDelProp();
      node1.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node2.isObjectLit();
      Node.newString(8, "sga\"+'H8Y\"#>T@c", 12, 38);
      Node node3 = new Node(49);
      node3.isThrow();
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.getDisplayName(locale0);
      node0.getProp(21);
      Node.mergeLineCharNo(55, 1306);
      Node node1 = new Node(13, node0, node0, node0, 31, 51);
      Node node2 = node1.getLastSibling();
      Node node3 = new Node(47, node2, node0, node1);
      Node node4 = null;
      int int0 = (-7);
      Node node5 = new Node(node1.JSDOC_INFO_PROP, node4, node4, node0, node0.SLASH_V, int0);
      node5.isTypeOf();
      node1.isDelProp();
      // Undeclared exception!
      try { 
        node1.getJSDocInfo();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = Node.newString("LuB:@XQ}G xc=a1`p");
      Node node1 = Node.newNumber((double) 1, Integer.MAX_VALUE, 29);
      node1.getQualifiedName();
      node1.isNew();
      node0.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1, false);
      TemplateType templateType0 = jSTypeRegistry1.getObjectElementKey();
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter2, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[4];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of(templateType0, templateType0, templateType0, templateType0, templateType0, templateType0, templateType0, templateType0, templateType0);
      UnmodifiableIterator<TemplateType> unmodifiableIterator0 = immutableList0.iterator();
      ImmutableList<TemplateType> immutableList1 = ImmutableList.copyOf((Iterator<? extends TemplateType>) unmodifiableIterator0);
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType("({:", node1, node0, jSTypeArray0[0], immutableList1);
      jSTypeArray0[1] = (JSType) functionType0;
      jSTypeArray0[3] = (JSType) templateType0;
      Node node2 = jSTypeRegistry2.createParametersWithVarArgs(jSTypeArray0);
      // Undeclared exception!
      try { 
        node2.clonePropsFrom(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newString(":`HA@[J,=v[", (-219), (-219));
      Node node1 = new Node(119, node0, node0);
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newNumber(756.52880673357);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      simpleErrorReporter0.error("Object#Key", "M", 54, 55);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node1.isScript();
      Node node2 = node1.getLastSibling();
      node1.wasEmptyNode();
      node0.isAssignAdd();
      simpleErrorReporter0.error("    ", "    ", 29, 53);
      node0.removeFirstChild();
      node2.isReturn();
      node1.setLineno(50);
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = Node.newString("fFaDm+`P;ZF");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.setString("fFaDm+`P;ZF");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(40, node0, node0, node0, node0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.setDouble(29);
      Node.AncestorIterable node_AncestorIterable0 = null;
      try {
        node_AncestorIterable0 = new Node.AncestorIterable(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING fFaDm+`P;ZF is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = new Node(45, 4, 35);
      node0.isCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry1.getObjectElementKey();
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry2);
      node0.clonePropsFrom(node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Node node1 = new Node(21, node0, node0, 151, (-1176));
      Node node2 = node1.cloneNode();
      Node node3 = new Node(43, node1, node0, node1, 15, (-3830));
      int int0 = (-91);
      node0.wasEmptyNode();
      Node node4 = new Node(int0, node0);
      node4.getSourceFileName();
      // Undeclared exception!
      try { 
        node2.useSourceInfoIfMissingFromForTree(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = Node.newString("length");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayName(locale1);
      Node.mergeLineCharNo(775, (-918));
      Node node1 = new Node((-1939), node0, node0, node0, 392, 0);
      Node node2 = node1.getLastSibling();
      Node.newString("*2,WR}pipFHkUQu4Kd", 4095, 4095);
      node1.isTypeOf();
      node2.isDelProp();
      node2.setOptionalArg(true);
      Node node3 = new Node((-232), node2, node2, node2, (-4663), (-1345));
      Node node4 = node3.removeChildren();
      node4.isObjectLit();
      node4.isGetElem();
      Node.extractCharno(1);
      node3.addChildrenAfter(node0, node2);
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = Node.newString(1998, ")e{6cK\"HnaB.", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node0.setLineno(52);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isThrow();
      Node.newString(")e{6cK\"HnaB.");
      node1.isIn();
      node1.isParamList();
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(39);
      Node node2 = new Node(29, node1, node1, node0, node1);
      node0.isOnlyModifiesThisCall();
      node2.isTypeOf();
      node1.getInputId();
      node2.isNot();
      node1.isScript();
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      Node node0 = Node.newString((-393), "    ", 0, 27591);
      Node node1 = new Node(46, node0, node0);
      node0.isEquivalentToShallow(node1);
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.setThrows();
      node1.isBreak();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node.mergeLineCharNo(1134, 57);
      Node node1 = node0.getLastSibling();
      node1.isTypeOf();
      node1.isDelProp();
      node1.getJSDocInfo();
      node1.setSourceEncodedPositionForTree((-662));
      boolean boolean0 = node0.isLabel();
      node1.setDouble(1577.7940289);
      node0.setVarArgs(boolean0);
      int int0 = 735;
      Node.mergeLineCharNo(node1.IS_DISPATCHER, int0);
      // Undeclared exception!
      try { 
        node1.isBreak();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING foaDm+`P;ZF 1048575 [directives: com.google.javascript.rhino.Node$ObjectPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = node0.getLastSibling();
      node0.isFalse();
      node1.isEquivalentTo(node0, true, true, false);
      node1.addChildToBack(node0);
      node0.isQuotedString();
      Node.newString(51, "foaDm+`P;ZF");
      Node node2 = node0.removeChildAfter((Node) null);
      double double0 = 1.0;
      int int0 = (-2040);
      Node node3 = Node.newNumber(double0, int0, node1.CHANGE_TIME);
      node3.isScript();
      // Undeclared exception!
      try { 
        node2.getLastSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = new Node(15);
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = Node.newString(56, "STRING foaDm+`P;ZF");
      node1.addSuppression("");
      node2.getQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(2, nodeArray0, 4095, 48);
      node3.setChangeTime(12);
      Locale locale1 = Locale.FRENCH;
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(42, nodeArray0);
      node0.isInc();
      node0.isQualifiedName();
      node0.isOr();
      Node node1 = new Node(42, node0);
      Node node2 = node0.srcref(node1);
      Node node3 = new Node(32, node2, node2);
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(50, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale locale0 = Locale.forLanguageTag("");
      locale0.getUnicodeLocaleAttributes();
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.isInstanceOf();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Integer integer0 = new Integer(31);
      node0.isFor();
      Node.newString(1151, "Object#Key", 3944, 37);
      boolean boolean0 = node0.wasEmptyNode();
      Node node1 = new Node(8, node0);
      node1.setSourceEncodedPositionForTree(0);
      Node node2 = new Node(30, node0, node1, node1);
      node2.isLabel();
      node2.setDouble(node0.SLASH_V);
      node1.setVarArgs(boolean0);
      int int0 = 54;
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = Node.newString(127, "{=Gc&?[/9E1", 13, 110);
      Node node1 = new Node(43, node0, node0, node0, node0, 55, 2);
      node0.isEquivalentToShallow(node1);
      node1.isName();
      node1.setSourceFileForTesting("INHERITED");
      node0.isLabel();
      node1.setDouble(8);
      node0.isContinue();
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = new Node(77);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      String string0 = "{=Gc&?[/9E1";
      Node node1 = Node.newString(4095, "{=Gc&?[/9E1", 4095, 115);
      Node node2 = new Node(4, node0, node0);
      node0.isEquivalentToShallow(node1);
      node0.isName();
      node2.setSourceFileForTesting("$u`r(Hr+ 0");
      node1.isLabel();
      node2.setDouble(1.0);
      Node node3 = Node.newString(string0);
      node3.isBreak();
      int int0 = 154;
      // Undeclared exception!
      try { 
        Node.newNumber((double) node2.VAR_ARGS_NAME, node1.COLUMN_BITS, int0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // RETURN [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000006] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = Node.newString("opt_arg");
      node0.addSuppression("_H3'&+CMlCw-(o%J");
      Node node1 = new Node((-2114), node0, node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.siblings();
      Node node2 = Node.newString("opt_arg");
      Node node3 = node1.copyInformationFrom(node2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.isOptionalArg();
      node3.setOptionalArg(true);
      node3.getJSDocInfo();
      node3.isOnlyModifiesArgumentsCall();
      node0.removeChildren();
      node3.appendStringTree((Appendable) null);
      Node node4 = node0.useSourceInfoIfMissingFromForTree(node3);
      node2.checkTreeTypeAwareEqualsImpl(node3);
      node1.replaceChildAfter(node3, node3);
      node0.isAssignAdd();
      node2.isIn();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node4, node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2114
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.getDisplayName(locale0);
      node0.getProp(21);
      Node node1 = new Node(38, node0, 36, 1186);
      Node node2 = Node.newString(85, "rhino_ast.java.com.google.javascript.rhino.Messages");
      node2.isCatch();
      node2.isGetProp();
      node2.isAnd();
      Vector<Node> vector0 = new Vector<Node>(56);
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node2.isOptionalArg();
      node0.isScript();
      node2.getLastSibling();
      node2.isRegExp();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = new Node(11);
      Node node1 = new Node((-1));
      Node.newString("StringNode: str is null", 1922, 1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale locale0 = Locale.forLanguageTag("StringNode: str is null");
      locale0.getUnicodeLocaleAttributes();
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isInstanceOf();
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(40);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      node1.setSourceFileForTesting("!TX#+?U1cR5Lb5&W?");
      Node node2 = new Node(127, node1);
      node2.addSuppression("!TX#+?U1cR5Lb5&W?");
      node2.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node2.isAdd();
      jSTypeRegistry0.getType("'Tx.xoltFT8J-0b[6+]");
      jSTypeRegistry0.resetImplicitPrototype((JSType) null, (ObjectType) null);
      node0.isLabelName();
      node0.isOptionalArg();
      node0.isOnlyModifiesThisCall();
      node2.getDirectives();
      Node.newString(2043, "Object#Key", 1922, 57);
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node node0 = new Node(42, 42, 42);
      Node node1 = new Node(42, node0, node0, 47, 103);
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.isVarArgs();
      node1.isDefaultCase();
      node2.getJsDocBuilderForNode();
      node1.children();
      node0.isCatch();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setAllFlags();
      node2.putIntProp(57, 29);
      node1.isExprResult();
      node0.getChangeTime();
      node0.isIf();
      node1.isCase();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getLength();
      node0.getInputId();
      node0.setSourceFileForTesting("YU/mSHzX@");
      Node node1 = Node.newNumber((double) 1);
      node0.srcrefTree(node1);
      node0.isNot();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.iterator();
      Node node2 = Node.newString(93, "NO_OBJECT_TYPE", 111, 108);
      Node node3 = Node.newNumber(0.0, 47, 14);
      node2.isEquivalentToShallow(node3);
      node2.isLabel();
      Node node4 = new Node(154, node3, (Node) null, node2, node3, 54, 108);
      int int0 = 123;
      String string0 = " Np?kR~e[km`T*va2kY";
      Node node5 = Node.newString(int0, string0);
      node5.isNull();
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      Node node1 = new Node(42, node0, node0, node0, node0, 50, 50);
      Node node2 = new Node(4194304, node1, 48, 488);
      node2.isCatch();
      node0.isOnlyModifiesThisCall();
      node0.isAnd();
      node0.children();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node node3 = node2.removeFirstChild();
      node3.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.KOREAN;
      locale0.getDisplayName(locale1);
      Node node0 = Node.newString(38, "foaDm+`P;ZF", 51, 12);
      Node node1 = new Node(47, node0, node0);
      node1.isEquivalentToShallow(node0);
      node1.isName();
      node1.setSourceFileForTesting("$8q=J{Fiw");
      node1.hasChild(node0);
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.iterator();
      Node node2 = Node.newString(55, "B0AUq'#Sfk(, zS-~/", 55, 100);
      Node node3 = new Node((-1542));
      node3.isOptionalArg();
      node2.getDirectives();
      Node.newString(100, "zk ]ZV", 16, 57);
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newString(1998, "Hcq^", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node1.isOnlyModifiesArgumentsCall();
      node1.setLength(50);
      node1.getJSDocInfo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isThrow();
      Node node2 = new Node(29, node0, node0, node1, node1, 53, 120);
      node2.isCast();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      Node node2 = new Node(29, 153, 52);
      Node node3 = Node.newString(12, "foaDm+`P;ZF");
      Locale locale0 = Locale.forLanguageTag("z");
      locale0.getUnicodeLocaleAttributes();
      node0.copyInformationFromForTree(node2);
      node3.isInstanceOf();
      node3.isFromExterns();
      node2.isGetElem();
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = Node.newNumber(756.52880673357);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.setDouble(31);
      Node node2 = new Node(29, 50, 91);
      node2.putIntProp(46, 15);
      Node node3 = new Node(57, node0, node1, node2);
      node1.isIn();
      node0.isParamList();
      node2.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = Node.newString(2020, ")e{6cK\"HnaB.", (-1367), (-1367));
      Node node1 = node0.cloneTree();
      node0.setLineno(52);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isThrow();
      node0.isContinue();
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(50, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale locale0 = Locale.forLanguageTag("");
      locale0.getUnicodeLocaleAttributes();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.putIntProp(99, 99);
      node0.isGetterDef();
      node0.copyInformationFromForTree(node0);
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte)50;
      byteArray0[3] = (byte)127;
      byteArray0[4] = (byte)86;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newNumber((-1.0), 57, 49);
      node0.getQualifiedName();
      node0.getLastSibling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node1 = Node.newNumber((double) 46);
      node1.isFalse();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.putIntProp(51, 52);
      node0.isGetProp();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.mayMutateArguments();
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      node0.getJSDocInfo();
      node0.setOptionalArg(true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = new Node(39, 32, 39);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.isOptionalArg();
      node1.isScript();
      node2.getLastSibling();
      node1.wasEmptyNode();
      node1.isAssignAdd();
      Node.newString("String node not created with Node.newString");
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.ensureCapacity(472);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Integer integer0 = new Integer(31);
      Node node1 = Node.newNumber((double) 52, 127, 46);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isVarArgs();
      node2.isInc();
      node1.getJsDocBuilderForNode();
      node0.children();
      node2.isCatch();
      node2.toStringTree();
      node1.setSourceFileForTesting(" [");
      node1.addChildBefore(node2, node2);
      node2.isName();
      int int0 = 51;
      // Undeclared exception!
      try { 
        Node.extractLineno(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newString("side_effect_flags", (-492), (-492));
      Node node1 = Node.newString("com.google.common.collect.Lists$1");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = node2.srcrefTree(node1);
      node3.removeProp(118);
      node0.getType();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      node_NodeMismatch0.equals("side_effect_flags");
      node2.getExistingIntProp(43);
      node1.isWhile();
      Node node4 = node3.removeChildAfter(node1);
      node4.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node2.isFalse();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 43
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.getLength();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Object object0 = new Object();
      node_NodeMismatch0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)64;
      byteArray0[3] = (byte)52;
      byteArray0[4] = (byte)64;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%xL&)A4x`wJd^P");
      Node.extractCharno(103);
      Node node0 = Node.newNumber(0.0);
      node0.isOptionalArg();
      node0.isNumber();
      node0.isInstanceOf();
      node0.isNoSideEffectsCall();
      Node node1 = Node.newString("+J~%bS=8qx?55");
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesThisCall();
      node1.isBreak();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.hasMoreThanOneChild();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(39);
      Node node2 = new Node(29, node1, node1, node0, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node2.isTypeOf();
      node2.setSideEffectFlags(node_SideEffectFlags2);
      // Undeclared exception!
      try { 
        node1.getInputId();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NEG
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isOnlyModifiesThisCall();
      node0.isTypeOf();
      node0.getInputId();
      node0.isNot();
      node0.isIf();
      node0.getLastChild();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 127);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(31, node1, 50, 1);
      node0.getIntProp(30);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.addChildrenToBack(node2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      node1.cloneNode();
      node1.getInputId();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      Node node0 = new Node(110);
      node0.isCatch();
      node0.isGetProp();
      node0.isAnd();
      Vector<Node> vector0 = new Vector<Node>(49);
      node0.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags5.clearAllFlags();
      node0.isOptionalArg();
      node0.isScript();
      Node node1 = node0.getLastSibling();
      node1.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(26, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale.forLanguageTag("change_time");
      node0.getDirectives();
      Node node1 = node0.copyInformationFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isAdd();
      node1.isLabelName();
      node1.isLabelName();
      node0.getDirectives();
      node0.isReturn();
      node0.getLastChild();
      node0.checkTreeEqualsImpl((Node) null);
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.remove(node0);
      node0.setDirectives(linkedHashSet0);
      Node node1 = node0.getLastSibling();
      node1.isFalse();
      node0.addSuppression("foaDm+`P;ZF");
      node1.getQualifiedName();
      Node node2 = Node.newString("foaDm+`P;ZF", 21, (-895));
      node2.setChangeTime((-2151));
      node2.isBreak();
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = node1.clonePropsFrom(node2);
      node3.isAssign();
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      Node node0 = new Node(110);
      node0.isCatch();
      node0.isGetProp();
      node0.isAnd();
      Vector<Node> vector0 = new Vector<Node>(49);
      node0.setIsSyntheticBlock(true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      Node.newString("Object#Element");
      JSType[] jSTypeArray0 = new JSType[1];
      JSType jSType0 = modificationVisitor0.caseVoidType();
      jSTypeArray0[0] = jSType0;
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.clonePropsFrom(node1);
      int int0 = 309;
      int int1 = 8;
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node node0 = new Node(77);
      node0.isBlock();
      node0.getInputId();
      node0.setSourceFileForTesting("YU/mSHzX@");
      node0.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      Node.newString("DATE_FUNCTION_TYPE");
      node0.children();
      Node node1 = Node.newString(113, "YU/mSHzX@", 57, 51);
      node1.isOr();
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = new Node((-4096), (-4096), 572);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = Node.newNumber(756.52880673357);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(57, 52, 12);
      Node node2 = new Node(40, node0, node1);
      node2.copyInformationFromForTree(node0);
      node0.isGetElem();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      Node node2 = new Node(29, 153, 52);
      Node node3 = Node.newString(12, "foaDm+`P;ZF");
      Node node4 = new Node(479, node2, node1, node3, node1, 52, 2);
      node0.setType(1610612736);
      Vector<Node> vector0 = new Vector<Node>();
      node3.isFunction();
      node2.isNew();
      node4.removeChild(node0);
      node0.isVar();
      node4.toString();
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      Node node1 = new Node(42, node0, node0, node0, node0, 50, 51);
      Node node2 = new Node(4194304, node1, 48, 488);
      node2.isCatch();
      node0.isOnlyModifiesThisCall();
      node0.isAnd();
      node0.children();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node node3 = node2.removeFirstChild();
      node3.isParamList();
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = Node.newString(130, "foaDm+`P;ZF", (-515), (-5540));
      node0.putProp(2278, "foaDm+`P;ZF");
      Node node1 = new Node((-515), node0);
      Node node2 = node1.cloneTree();
      node2.getIntProp((-1055));
      Node node3 = node1.getLastChild();
      node0.getSourceOffset();
      node3.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = new Node(45, 4, 35);
      node0.isCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = new Node((-530), node0, node0, node0);
      node0.srcref(node1);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry1.getObjectElementKey();
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry2);
      node0.clonePropsFrom(node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = Node.newString(130, "foaDm+`P;ZF", (-515), (-5540));
      node0.putProp(2278, "foaDm+`P;ZF");
      Node node1 = new Node((-515), node0);
      Node node2 = node1.cloneTree();
      node2.getIntProp(2);
      Node node3 = node1.getLastChild();
      node0.getSourceOffset();
      node3.isDefaultCase();
      node0.hasMoreThanOneChild();
      node3.isThis();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.hasMoreThanOneChild();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(39);
      Node node2 = new Node(29, node1, node1, node0, node1);
      Node node3 = node2.useSourceInfoFrom(node0);
      node0.isVarArgs();
      node0.isInc();
      node1.getJsDocBuilderForNode();
      node3.children();
      node0.toStringTree();
      node3.setSourceFileForTesting("STRING foaDm+`P;ZF\n");
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(50, nodeArray0, 2, 2081);
      node4.addChildBefore(node0, node0);
      node0.isName();
      // Undeclared exception!
      try { 
        Node.extractLineno(node1.FLAG_GLOBAL_STATE_UNMODIFIED);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayName(locale1);
      Node.mergeLineCharNo((-1939), 52);
      Node node1 = new Node(56, node0, node0, node0, 16, 48);
      Node node2 = node1.getLastSibling();
      Node node3 = new Node(39, node1, 16, 37);
      node3.isTypeOf();
      node2.isInstanceOf();
      node0.isNoSideEffectsCall();
      Locale locale2 = Locale.FRENCH;
      node1.setDouble(0.0);
      node3.isGetElem();
      node1.getType();
      int int0 = 42;
      int int1 = 5056;
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = Node.newNumber(2408.258);
      Node node1 = new Node(0, node0, node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.ProxyObjectType");
      node1.getLength();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.getSourceFileName();
      node2.wasEmptyNode();
      Node node3 = node1.copyInformationFromForTree(node2);
      Node node4 = node0.srcref(node1);
      node4.isOptionalArg();
      node4.putBooleanProp(42, false);
      node1.isLocalResultCall();
      node4.isFromExterns();
      node3.getJSDocInfo();
      node1.toString(false, true, false);
      node1.isEquivalentToTyped(node3);
      node3.children();
      node1.addChildToFront(node2);
      node4.isTypeOf();
      node4.removeChildAfter(node0);
      // Undeclared exception!
      try { 
        node2.copyInformationFrom(node4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)64;
      byteArray0[4] = (byte)52;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.extractCharno((byte)64);
      Node node0 = Node.newNumber((-1136.7689485838));
      node0.isOptionalArg();
      node0.isNumber();
      node0.isInstanceOf();
      node0.isNoSideEffectsCall();
      Locale locale0 = Locale.FRENCH;
      node0.setDouble(42.0);
      node0.isGetElem();
      Node node1 = new Node(16, node0, node0, node0, node0, 16, 1616);
      node0.copyInformationFrom(node1);
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(40);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      String string0 = "!TX#+?U1cR5Lb5&W?";
      Node node2 = new Node(127, node1);
      node2.addSuppression("!TX#+?U1cR5Lb5&W?");
      node2.isSwitch();
      SimpleErrorReporter.getMessage0("!TX#+?U1cR5Lb5&W?");
      Node node3 = Node.newString(string0);
      // Undeclared exception!
      try { 
        node3.children();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property !TX#+?U1cR5Lb5&W?
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      node0.getJSDocInfo();
      node0.setOptionalArg(false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = Node.newString(39, "String node not created with Node.newString", 4, 1729);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.isOptionalArg();
      node1.isScript();
      Node node3 = node2.getLastSibling();
      node1.wasEmptyNode();
      node1.isAssignAdd();
      node3.hasChild(node1);
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(30);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node1.getInputId();
      node0.setSourceFileForTesting("YU/mSHzX@");
      node0.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      Node.newString("#!");
      Node node2 = node1.clonePropsFrom(node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString("2[bw>/");
      node0.isTry();
      Node node1 = new Node(31, node0, (-2105), 175);
      node1.isDebugger();
      Node node2 = node0.clonePropsFrom(node1);
      node1.checkTreeEqualsImpl(node0);
      node1.isThis();
      node1.isBlock();
      Node node3 = node2.getLastSibling();
      node3.mayMutateGlobalStateOrThrow();
      Node node4 = node1.useSourceInfoFrom(node0);
      node1.getString();
      node4.isQuotedString();
      node3.isComma();
      // Undeclared exception!
      try { 
        node3.getJSType();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DELPROP is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node.newNumber((double) 127);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = new Node(49, 52, 4095);
      node0.putIntProp(12, 123);
      node0.isContinue();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isFalse();
      Node node1 = Node.newString("foaDm+`P;ZF");
      node1.putBooleanProp(53, false);
      node0.isEquivalentTo(node1, false, false, true);
      node0.addChildToBack(node0);
      node0.isQuotedString();
      Node.newString(50, "(h>7z8>_\"nYaJL*%}");
      Node node2 = node0.getAncestor(8);
      JSTypeNative jSTypeNative0 = JSTypeNative.STRING_TYPE;
      node2.putProp(4, jSTypeNative0);
      node2.mayMutateGlobalStateOrThrow();
      node0.isVar();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newNumber(756.52880673357);
      node0.getJSDocInfo();
      node0.setOptionalArg(true);
      Node node1 = Node.newNumber((double) 50);
      node0.getProp(630);
      node0.isVarArgs();
      Node node2 = new Node(1318, node1, node0, (-778), 36);
      Node node3 = node2.srcrefTree(node1);
      node2.getAncestors();
      node0.isWhile();
      node3.setDouble((-1796.0));
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(26, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale.forLanguageTag("change_time");
      node0.getDirectives();
      Node node1 = node0.copyInformationFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isAdd();
      node1.isLabelName();
      node0.isOptionalArg();
      node0.getDirectives();
      Node.newString(5639, "l}`Ih;F", 42, 33);
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      node0.wasEmptyNode();
      node0.addSuppression("foaDm+`P;ZF");
      node0.getSourceOffset();
      node0.isAdd();
      node0.isLabelName();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      Node node1 = new Node(2776, node0);
      node1.isEmpty();
      Node node2 = new Node(52, node1, node1, 50, 39);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node node0 = new Node(110, 110, 110);
      node0.isGetProp();
      node0.isAnd();
      node0.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node0.isExprResult();
      node0.isContinue();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(110);
      node0.isCatch();
      node0.isGetProp();
      node0.isAnd();
      Vector<Node> vector0 = new Vector<Node>(49);
      node0.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearAllFlags();
      node0.putIntProp(898, 110);
      node0.isContinue();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("&w%0wf9r");
      Node node1 = new Node(47, 125, 40);
      Node node2 = node1.cloneTree();
      Node node3 = Node.newString(0, "B}5x9");
      node1.addChildToFront(node3);
      node2.checkTreeEqualsImpl(node1);
      int int0 = 1;
      LinkedHashSet<JSType> linkedHashSet0 = new LinkedHashSet<JSType>();
      linkedList0.addAll(49, (Collection<? extends JSType>) linkedHashSet0);
      Node node4 = new Node(int0, node2, node2);
      node4.getInputId();
      Node node5 = new Node(node0.IS_CONSTANT_NAME, node1);
      // Undeclared exception!
      try { 
        node1.removeChild(node5);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 49, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("STRING foaDm+`P;ZF");
      Node node1 = node0.cloneTree();
      Node node2 = Node.newString(56, "STRING foaDm+`P;ZF");
      node2.addChildToFront(node0);
      node2.checkTreeEqualsImpl(node0);
      Node node3 = Node.newString(2078, "com.google.javascript.rhino.Node$FileLevelJsDocBuilder", 53, 2310);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isOptionalArg();
      node0.isScript();
      node3.getLastSibling();
      node3.wasEmptyNode();
      node0.isAssignAdd();
      node1.removeFirstChild();
      node0.addChildrenAfter(node2, (Node) null);
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(30);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node0.getSourceOffset();
      node1.getInputId();
      node0.setSourceFileForTesting("YU/mSHzX@");
      node0.isOptionalArg();
      node0.isScript();
      node0.getLastSibling();
      node0.isInstanceOf();
      node1.isGetElem();
      node1.isUnscopedQualifiedName();
      node0.isSwitch();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber((double) 42);
      Node node1 = new Node(42, node0, node0, 47, (-260));
      node0.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(4, node1, node1, node1, node1);
      node2.isVarArgs();
      node2.getJsDocBuilderForNode();
      node1.children();
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.toStringTree();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node1.detachFromParent();
      node0.getChildBefore(node2);
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Object object0 = new Object();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[7];
      JSTypeNative jSTypeNative0 = JSTypeNative.ARRAY_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) objectType0;
      JSTypeNative jSTypeNative1 = JSTypeNative.OBJECT_FUNCTION_TYPE;
      jSTypeRegistry0.getNativeFunctionType(jSTypeNative1);
      Node node0 = new Node(17, 1, 1);
      Node.newNumber((double) 1, 467, 299);
      Node node1 = new Node(39, node0, node0, node0, node0);
      node1.isCall();
      node1.setDouble(1665.1552648285);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newNumber(756.52880673357);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(31, 50, 43);
      Locale locale0 = Locale.forLanguageTag("");
      locale0.getUnicodeLocaleAttributes();
      Node node2 = node1.copyInformationFromForTree(node0);
      node0.isInstanceOf();
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = node0.getLastSibling();
      node0.isFalse();
      node1.addSuppression("`\"WcwbA<-8aT7");
      node1.getQualifiedName();
      node1.putIntProp(48, 11);
      node0.isContinue();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      Node node1 = new Node(124, node0, node0, node0, node0);
      Node node2 = new Node((-492));
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.setString("uf-pQCj,o_w5~");
      node0.isFromExterns();
      node0.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node1.checkTreeTypeAwareEqualsImpl(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // EMPTY is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Integer integer0 = new Integer(31);
      node0.getProp(111);
      Node node1 = new Node(32, node0, 4, 46);
      node1.isCatch();
      node1.isAnd();
      node0.children();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      Node node2 = node1.removeFirstChild();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = new Node(127, 120, 127);
      Locale locale0 = Locale.forLanguageTag("");
      locale0.getUnicodeLocaleAttributes();
      Node node1 = new Node((-446), node0, node0, 4, 115);
      node1.copyInformationFromForTree(node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node1.isInstanceOf();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node0 = jSDocInfo0.getAssociatedNode();
      String string0 = "foa]Dq+`P;ZF";
      Node node1 = Node.newString("foa]Dq+`P;ZF", 154, (-980));
      node1.srcref((Node) null);
      Node node2 = Node.newString(string0);
      node0.useSourceInfoIfMissingFromForTree(node2);
      // Undeclared exception!
      try { 
        node2.isTry();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(50, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale.forLanguageTag("");
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.isInstanceOf();
      node0.isGetElem();
      node1.useSourceInfoFromForTree(node0);
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = node0.getLastSibling();
      node0.useSourceInfoFromForTree((Node) null);
      node0.isFalse();
      String string0 = "`\"WcwbA<-8aT7";
      // Undeclared exception!
      try { 
        node1.addSuppression(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.getProp(102);
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.isFor();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = Node.newString(2, "String node not created with Node.newString", 35, 40);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.getAncestors();
      node1.isOptionalArg();
      node0.isScript();
      Node node2 = node0.getLastSibling();
      node2.wasEmptyNode();
      node1.isAssignAdd();
      node1.hasChild(node2);
      node2.hasOneChild();
      node1.setJSType((JSType) null);
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^}^5S,>[F]");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.extractLineno(34);
      Node node0 = Node.newString("^}^5S,>[F]", (-104), (-3220));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node0.copyInformationFrom((Node) null);
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = Node.newString("hz?fr)qEml9:RZc_S");
      node0.isTry();
      Node node1 = Node.newString("`\"WcwbA<-8aT7");
      node1.checkTreeEqualsImpl(node0);
      node0.isIf();
      Node node2 = new Node(37, node0);
      node1.isWhile();
      node2.isBlock();
      node0.checkTreeEquals(node2);
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getLength();
      node0.getInputId();
      node0.setSourceFileForTesting("YU/mSHzX@");
      node0.isNot();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.putIntProp((-797), 125);
      node0.isExprResult();
      node0.getDirectives();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)122;
      byteArray0[3] = (byte) (-93);
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)125;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = Node.newString(38, "N2X]i{G1G2)b", 2, (-1797));
      node0.isBlock();
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("inferred");
      Node node1 = Node.newString("inferred", 56, 43);
      Node node2 = Node.newString(56, "inferred");
      node2.addChildToFront(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = Node.newString(2078, "inferred", 53, 2310);
      Node node4 = node3.srcref(node2);
      node4.getAncestor(57);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node3.checkTreeEquals(node4);
      node3.getLastSibling();
      node2.isOptionalArg();
      node3.wasEmptyNode();
      node1.isLabelName();
      node1.removeFirstChild();
      node0.addChildrenAfter(node2, (Node) null);
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = Node.newString(127, "{=Gc&?[/9E1", 13, 110);
      Node node1 = new Node(43, node0, node0, node0, node0, 55, 2);
      node0.checkTreeEquals(node1);
      node0.isEquivalentToShallow(node1);
      node1.isName();
      String string0 = "INHERITED";
      // Undeclared exception!
      try { 
        node1.setSourceFileForTesting(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 127
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2pau,>+-t-GD%D");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber((-536.06634));
      node0.putIntProp(53, 53);
      node0.getSourceOffset();
      node0.setVarArgs(false);
      node0.isCast();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(111, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale.forLanguageTag("");
      Node node1 = node0.copyInformationFromForTree(node0);
      Node node2 = Node.newNumber((-2461.7285), 40, 12);
      node2.getLength();
      node1.isInstanceOf();
      node0.isGetElem();
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node1.isDebugger();
      node3.isDec();
      node0.srcref(node0);
      node0.checkTreeEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 16, 16);
      node0.setDouble(629.1137502);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString("Node tree inequality:\nTree1:\n");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2583);
      node_SideEffectFlags0.setReturnsTainted();
      node0.isThrow();
      Node node2 = new Node(2, node0, node1, node1, node0, 2, 87);
      node1.isCast();
      Node node3 = node1.detachFromParent();
      node3.isFor();
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(56);
      Node node2 = new Node(53, node0, node0, node0, node1);
      node1.isOnlyModifiesThisCall();
      node2.isTypeOf();
      node2.getInputId();
      node1.isNot();
      node2.isScript();
      node2.isParamList();
      node2.isExprResult();
      node2.getLastChild();
      node0.getAncestor(1);
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = new Node(50, 5760, 55);
      Locale.forLanguageTag("eMHVTW");
      Node node1 = new Node(38, node0, 56, 16384);
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.isInstanceOf();
      node0.isGetElem();
      node2.useSourceInfoFromForTree(node1);
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString(12, "=E#Oq8!%M=%K");
      node0.getInputId();
      node0.setSourceEncodedPosition(12);
      node0.getProp(102);
      node0.wasEmptyNode();
      node0.addSuppression("7~YVY`%,aDQd-R9_Wl");
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isAdd();
      node0.isLabelName();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = new Node(1174, node0, node0, node0, node0);
      node1.isTry();
      Node.newString("5(j");
      node0.checkTreeEqualsImpl(node1);
      node1.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = new Node(130);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      node0.appendStringTree(stringWriter0);
      node0.isInc();
      Node node1 = new Node(152, node0, node0, node0, 49, 57);
      node0.addChildAfter(node1, node1);
      String string0 = "com.google.javascript.rhino.jstype.NoResolvedType";
      Node.newString(string0);
      // Undeclared exception!
      try { 
        node0.isFor();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      node0.wasEmptyNode();
      Locale locale0 = new Locale("", "", "");
      Locale locale1 = Locale.KOREA;
      locale0.getDisplayName(locale1);
      Node.mergeLineCharNo(30, 39);
      Node node1 = new Node(31, node0, node0, node0, 4, 48);
      Node node2 = node1.getLastSibling();
      node1.getSideEffectFlags();
      node2.isFor();
      node0.isDelProp();
      Node node3 = node2.removeChildren();
      node2.isObjectLit();
      node3.isGetElem();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(110);
      node0.isGetProp();
      node0.isAnd();
      Vector<Node> vector0 = new Vector<Node>(49);
      node0.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node0.isGetElem();
      node0.getType();
      Node node1 = new Node(119, node0);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = new Node(115);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = new Node(115, node0, node0, node0, 1287, 1343);
      Node node2 = node1.detachFromParent();
      node1.setChangeTime(node0.JSDOC_INFO_PROP);
      node2.getJsDocBuilderForNode();
      String string0 = "STRING foaDm+`P;ZF";
      // Undeclared exception!
      try { 
        node2.setString(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node((-9), (-9), (-9));
      Vector<Node> vector0 = new Vector<Node>(43);
      node0.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.isAssignAdd();
      node0.removeFirstChild();
      node0.addChildrenAfter((Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = new Node(45, 45, 62);
      node0.isCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.detachChildren();
      jSTypeRegistry1.getObjectElementKey();
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry2);
      Node node1 = node0.clonePropsFrom(node0);
      node1.getInputId();
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node.newNumber((-1.0), 57, 49);
      Node node0 = new Node(4007);
      node0.detachChildren();
      node0.isGetProp();
      node0.isAnd();
      Vector<Node> vector0 = new Vector<Node>(100);
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.getDisplayScript();
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.setDirectives(set0);
      Node node1 = node0.getLastSibling();
      node1.isTypeOf();
      node1.isDelProp();
      node1.getJSDocInfo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isThrow();
      Node node2 = new Node(148, node1, node1, node0, node1, 49, 1);
      node2.clonePropsFrom(node1);
      node2.isCast();
      node2.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getLength();
      node0.getInputId();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wCZ");
      node0.setSourceFileForTesting("YU/mSHzX@");
      node0.isNot();
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setAllFlags();
      Node node1 = node0.cloneNode();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node1.isRegExp();
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(110);
      Node node1 = new Node(49, 29, 120);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newNumber((double) 42, 32, (-897));
      node2.getLength();
      Node node4 = new Node(42, node3, node0, node0, node3);
      Node node5 = new Node((-1375), node1, node4, node4, node4, 2, 0);
      node4.isInstanceOf();
      node5.isGetElem();
      Node node6 = node4.useSourceInfoFromForTree(node0);
      node4.isDebugger();
      node6.isDec();
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node.newNumber(756.52880673357);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(43);
      Node node1 = node0.getLastSibling();
      Node node2 = Node.newString("{io^W$KpHSuy?");
      Node node3 = new Node(37, (-3931), 418);
      Node node4 = new Node(12, node0, node2, node1);
      node1.isTry();
      node1.isOnlyModifiesThisCall();
      node4.isString();
      node2.getChildBefore(node3);
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(64);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(512, node1, 50, 1);
      node0.getIntProp(30);
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isAdd();
      node1.isScript();
      Node node3 = node0.getLastSibling();
      node3.wasEmptyNode();
      node3.isAssignAdd();
      node1.hasChild(node2);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      EnumType enumType0 = jSTypeRegistry1.createEnumType("STRING foa]Dq+`P;ZMxF", node0, jSType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      JSType jSType1 = modificationVisitor0.caseEnumElementType(enumElementType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType1, jSType0, jSType1, jSType1, (JSType) enumElementType0, (JSType) enumElementType0, (JSType) enumType0, jSType0);
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node4.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(111, (-446), (-2736));
      nodeArray0[0] = node0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.getObjectElementKey();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter1, false);
      SimpleErrorReporter simpleErrorReporter2 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry3 = new JSTypeRegistry(simpleErrorReporter2, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry3);
      node0.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("hz?fr)qEml9:RZc_S");
      node0.getBooleanProp(8);
      Node node1 = new Node(90, node0, node0, node0, node0, 55, 40);
      node1.setSourceFileForTesting("hz?fr)qEml9:RZc_S");
      Node node2 = new Node(46, node1);
      node2.addSuppression("hz?fr)qEml9:RZc_S");
      node2.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.getType("!TX#+?U1cR5Lb5&W?");
      Locale.forLanguageTag("Object#Key");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.getUnicodeLocaleAttributes();
      node0.isString();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node.newString("!TX#+?U1cR5Lb5&W?", 52, 0);
      node1.isName();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newString("eMHVTW");
      Node node1 = Node.newString("eMHVTW", 36, 47);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isAdd();
      jSTypeRegistry0.getType("'Tx.xoltFT8J-0b[6+]");
      Locale locale0 = Locale.forLanguageTag("Tsfe?4sGDBN");
      locale0.getUnicodeLocaleAttributes();
      node0.isString();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.checkTreeEqualsImpl(node2);
      node2.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node((-9), (-9), (-9));
      Node node1 = new Node(108, node0, node0);
      node1.isLabel();
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node1.addChildrenAfter(node0, node0);
      int int0 = 16;
      int int1 = (-4510);
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(50);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node1.getInputId();
      node0.setSourceFileForTesting("YU/mSHzX@");
      node0.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node0.children();
      Node.newString(47, "YU/mSHzX@", 2, 4095);
      node1.isEmpty();
      node1.isOr();
      node1.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getBooleanProp(40);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      node1.setSourceFileForTesting("!TX#+?U1cR5Lb5&W?");
      Node node2 = new Node(127, node1);
      node2.addSuppression("!TX#+?U1cR5Lb5&W?");
      node2.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node2.isAdd();
      jSTypeRegistry0.getType("'Tx.xoltFT8J-0b[6+]");
      Locale locale0 = Locale.forLanguageTag("Not declared as a constructor");
      locale0.getUnicodeLocaleAttributes();
      node2.isString();
      node0.useSourceInfoIfMissingFrom(node2);
      node2.checkTreeEqualsImpl(node1);
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getLength();
      node0.getInputId();
      node0.getSourceFileName();
      node0.isNot();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node.extractCharno(29);
      Node node1 = new Node(125);
      node0.isAssign();
      node1.addSuppression((String) null);
      node1.getQualifiedName();
      Node node2 = new Node((-32), 4095, 3351);
      node2.isInstanceOf();
      node1.isGetElem();
      Node node3 = node0.useSourceInfoFromForTree(node2);
      node0.isDebugger();
      node3.isDec();
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      node0.wasEmptyNode();
      Node node1 = new Node((-882), 49, 16777216);
      Locale locale0 = Locale.forLanguageTag("");
      locale0.getUnicodeLocaleAttributes();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(30);
      Node node1 = Node.newString(42, "B;]]o$<6O?pYdn", 2, 31);
      Node node2 = new Node(15, node0, node1, node0, node1);
      node0.getInputId();
      node2.setSourceFileForTesting((String) null);
      node0.isOptionalArg();
      node2.isScript();
      Node node3 = node2.getLastSibling();
      node3.isInstanceOf();
      node2.isGetElem();
      node0.isUnscopedQualifiedName();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(111, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale.forLanguageTag("");
      node0.isGetProp();
      node0.isDebugger();
      Vector<Node> vector0 = new Vector<Node>(102);
      Node node1 = new Node((-1735), node0, node0, node0, 56, 0);
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node1.setString("]zm=Mnc]>0S)HbpEQ");
      node_SideEffectFlags1.clearAllFlags();
      nodeArray0[0].isBreak();
      node1.isTry();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = Node.newString(130, "foaDm+`P;ZF", (-515), (-5540));
      node0.putProp(2278, "foaDm+`P;ZF");
      Node node1 = new Node((-515), node0);
      Node node2 = node1.cloneTree();
      node2.setString("%AXFEz");
      int int0 = (-1055);
      node2.getIntProp(int0);
      Node node3 = node1.getLastChild();
      node0.getSourceOffset();
      node3.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      String string0 = "not a StringNode";
      Node node0 = Node.newString("not a StringNode");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Node node1 = new Node(47);
      Node node2 = new Node(132, node1, node0, node1, node1);
      node0.getInputId();
      node1.setSourceFileForTesting("YU/mSHzX@");
      node0.isOptionalArg();
      node0.isScript();
      node2.getLastSibling();
      node0.isInstanceOf();
      node2.isGetElem();
      node0.isUnscopedQualifiedName();
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node(30);
      Node node1 = null;
      Node node2 = new Node(16, node0, (Node) null, (Node) null, (Node) null);
      // Undeclared exception!
      try { 
        node2.isCatch();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = new Node(45, 45, 35);
      node0.isCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry1.getObjectElementKey();
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry2);
      Node node1 = node0.clonePropsFrom(node0);
      node1.getInputId();
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = Node.newNumber(127.0);
      Node node1 = Node.newString(53, "pcAJlDo[&");
      Node.newString(1023, "first new child has existing parent", 49, 132);
      Node node2 = Node.newString((-2447), "pcAJlDo[&");
      node1.detachChildren();
      node0.srcref(node1);
      node2.useSourceInfoFromForTree(node1);
      node0.isReturn();
      node0.isReturn();
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(30);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node1.getInputId();
      node0.isOptionalArg();
      node0.isScript();
      node0.isInstanceOf();
      node1.isGetElem();
      node0.isUnscopedQualifiedName();
      node1.isSwitch();
      node0.isComma();
      Node node2 = new Node(4095, 8, 32);
      node0.checkTreeEqualsImpl(node2);
      node1.detachChildren();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Node node1 = new Node(41, node0, node0, node0, 16, 48);
      node1.getLastSibling();
      Node node2 = Node.newString("foaDm+`P;ZF");
      Node node3 = new Node(45, 4, 605);
      Node.newString("foaDm+`P;ZF");
      node2.isTry();
      node1.getInputId();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = new Node(15);
      node0.addSuppression("foaDm+`P;ZF");
      node1.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isAdd();
      jSTypeRegistry0.getType("foaDm+`P;ZF");
      Locale.forLanguageTag("B;]]o$<6O?pYdn");
      locale0.getUnicodeLocaleAttributes();
      node1.isString();
      node0.checkTreeEqualsImpl(node1);
      Node node2 = new Node(28, node1, 702, 31);
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node3.checkTreeEqualsImpl(node0);
      node3.isOnlyModifiesThisCall();
      node2.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(111, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale locale0 = Locale.forLanguageTag("");
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.isAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry0.getType("#v@5");
      Locale.forLanguageTag("Unknown class name");
      locale0.getUnicodeLocaleAttributes();
      node0.isString();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.isName();
      node2.isFromExterns();
      node1.isNull();
      node0.addSuppression("hz?fr)qEml9:RZc_S");
      node0.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = Node.newString(825, "com.google.common.base.CharMatcher$FastMatcher", 825, 825);
      Node node1 = new Node(115, node0);
      node1.isWhile();
      node1.isInc();
      node1.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = new Node(45, 45, 35);
      node0.isCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      jSTypeRegistry1.getObjectElementKey();
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry2);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isGetElem();
      node1.getType();
      node0.copyInformationFrom(node1);
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(0.0, 26, 2283);
      node0.getSourceFileName();
      node0.getJSDocInfo();
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isOptionalArg();
      Node node1 = new Node(38);
      node1.isScript();
      node0.isInstanceOf();
      node1.isCast();
      node1.isUnscopedQualifiedName();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getExistingIntProp(node1.CHANGE_TIME);
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(0.0, 26, 2283);
      node0.getSourceFileName();
      node0.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Stack<JSType> stack0 = new Stack<JSType>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOptionalArg();
      Node node1 = new Node(38);
      node1.isScript();
      Node node2 = node1.getLastSibling();
      node0.isInstanceOf();
      node0.isGetElem();
      node2.isUnscopedQualifiedName();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.getExistingIntProp(node2.CHANGE_TIME);
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(127);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node1.getInputId();
      node1.isLocalResultCall();
      node0.setSourceFileForTesting("YU/mSHzX@");
      Node node2 = new Node(0, (-1607), 30);
      Locale locale0 = Locale.forLanguageTag("new child has existing sibling");
      locale0.getUnicodeLocaleAttributes();
      node2.isString();
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      node3.checkTreeEqualsImpl(node1);
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      node1.addSuppression("GLOBAL_THIS");
      Node node2 = new Node(29, 153, 52);
      Node node3 = Node.newString(112, "foaDm+`P;ZF");
      Node node4 = new Node(479, node2, node1, node3, node1, (-332), 2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      node4.clonePropsFrom(node0);
      node0.getInputId();
      node3.isStringKey();
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(111, 111, (-2736));
      nodeArray0[0] = node0;
      Locale.forLanguageTag("");
      Node node1 = node0.copyInformationFromForTree(node0);
      Node.newNumber((-2461.7285), 40, 12);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType jSType0 = jSTypeRegistry0.getType("`\"WcwbA<-8aT7");
      Locale.forLanguageTag("new child has existing sibling");
      node0.putIntProp(51, 29);
      node0.isGetProp();
      MockFileWriter mockFileWriter0 = new MockFileWriter(jSType0.UNKNOWN_NAME);
      BufferedWriter bufferedWriter0 = new BufferedWriter(mockFileWriter0);
      int int0 = 43;
      CharBuffer charBuffer0 = CharBuffer.allocate(int0);
      node1.appendStringTree(charBuffer0);
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[5];
      Node node0 = Node.newString("}YkvL'0o{Lic0ot>{$");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "}YkvL'0o{Lic0ot>{$");
      nodeArray0[0] = node0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) linkedList0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.isOnlyModifiesArgumentsCall();
      nodeArray0[1] = node1;
      Node node2 = Node.newNumber((double) 37);
      nodeArray0[2] = node2;
      Node node3 = Node.newNumber((double) 38);
      nodeArray0[3] = node3;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "XO0i1r]M&e8");
      Node node4 = Node.newString(2, "XO0i1r]M&e8", (-1578), 57);
      nodeArray0[4] = node4;
      Node node5 = new Node(40, nodeArray0, 41, 47);
      int int1 = 375;
      node5.checkTreeEquals(node0);
      Node node6 = new Node(int0, node5, nodeArray0[1], node1, node2.INFERRED_FUNCTION, int1);
      ImmutableList.of(nodeArray0[1], nodeArray0[2], node0, node4, nodeArray0[0], nodeArray0[0], node0, nodeArray0[0], node0, nodeArray0[3], nodeArray0[2]);
      node6.isName();
      Node node7 = nodeArray0[4].srcref(nodeArray0[0]);
      int int2 = 30;
      node7.setCharno(int2);
      int int3 = (-1389);
      int int4 = 2020;
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newString("zxVwPDur@W~tu^");
      node0.isNot();
      node0.setChangeTime(47);
      node0.removeFirstChild();
      node0.addChildAfter((Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(50);
      Node node1 = new Node(127, node0, node0, node0, node0);
      int int0 = Node.DIRECT_EVAL;
      node0.addChildToBack(node1);
      node0.isQuotedString();
      Node node2 = Node.newString(0, "synthetic");
      node2.getAncestor(3397);
      node0.isVar();
      node2.checkTreeTypeAwareEqualsImpl((Node) null);
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      Node node1 = node0.getLastSibling();
      node1.isTypeOf();
      node0.setSourceFileForTesting("YU/mSHzX@");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node1.putIntProp(30, 16);
      node1.isExprResult();
      node0.getChangeTime();
      node0.isIf();
      node0.isCase();
      node1.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("fFaDm+`P;ZF");
      node0.setString("fFaDm+`P;ZF");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setOptionalArg(true);
      Node node1 = new Node(40, node0, node0, node0, node0);
      node0.isOptionalArg();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.isDebugger();
      node2.isDec();
      node0.getAncestors();
      node0.wasEmptyNode();
      node2.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.isQualifiedName();
      Node node1 = node0.getLastSibling();
      node1.addSuppression("foaDm+`P;ZF");
      node1.addSuppression("foaDm+`P;ZF");
      node1.getQualifiedName();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      node0.wasEmptyNode();
      node0.addSuppression("foaDm+`P;ZF");
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isAdd();
      node0.isLabelName();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = new Node(57, node0, node0, node0, node0);
      node1.isTry();
      Node.newString("Object#Key");
      node1.copyInformationFromForTree(node0);
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node((-169), 26, (-446));
      Locale.forLanguageTag("");
      Node node1 = new Node((-1725));
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newNumber(1365.0, 549, 36);
      node2.getLength();
      node1.isInstanceOf();
      node3.isGetElem();
      Node node4 = node0.useSourceInfoFromForTree(node1);
      node3.isDebugger();
      node4.isDec();
      Node node5 = node0.srcref(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node5, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      String string0 = "jsdoc_info";
      Node node6 = enumElementType1.getPropertyNode(string0);
      node2.checkTreeEqualsImpl(node6);
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(30);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node1.getInputId();
      node0.isOptionalArg();
      node0.isScript();
      node0.isInstanceOf();
      node1.isGetElem();
      node0.isUnscopedQualifiedName();
      node1.isSwitch();
      node0.isComma();
      Node.newNumber(1791.31137093);
      Node node2 = new Node(4095, 8, 32);
      node0.checkTreeEqualsImpl(node2);
      node0.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getLength();
      node0.getInputId();
      node0.getProp(77);
      node0.wasEmptyNode();
      node0.addSuppression((String) null);
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isAdd();
      node0.isLabelName();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = new Node(2, node0, node0, node0, node0);
      node0.isTry();
      Node node2 = Node.newString("is_namespace");
      node1.copyInformationFromForTree(node2);
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = Node.newString("oaD:tm+P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setSourceFileForTesting("oaD:tm+P;ZF");
      Node node1 = new Node(29, node0);
      node1.addSuppression("GLOBAL_THIS");
      Node node2 = new Node(29, 153, 52);
      Node node3 = Node.newString(2, "oaD:tm+P;ZF");
      Node node4 = new Node(486, node2, node1, node3, node1, (-332), 2);
      node4.putBooleanProp(52, true);
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.newString((-598), "oaD:tm+P;ZF", 1191, 57);
      node4.isInc();
      node2.getIndexOfChild(node3);
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = new Node((-1785), 42, 64);
      node1.isGetProp();
      node0.isAnd();
      node0.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node1.isExprResult();
      Node node2 = new Node(54, node0);
      node0.isContinue();
      node1.isGetElem();
      node1.hasMoreThanOneChild();
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(111, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale.forLanguageTag("");
      node0.copyInformationFromForTree(node0);
      Node node1 = Node.newString((-1216), "", (-559), 40);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isOptionalArg();
      node0.isScript();
      node0.getLastSibling();
      node1.wasEmptyNode();
      node0.isAssignAdd();
      node0.removeFirstChild();
      node0.addChildrenAfter(node0, node1);
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(110);
      node0.isCatch();
      node0.isGetProp();
      node0.isAnd();
      Vector<Node> vector0 = new Vector<Node>(49);
      node0.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node0.setLength(110);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearAllFlags();
      Node node1 = new Node(12, node0, (-91), 39);
      node1.isBreak();
      Node node2 = Node.newNumber((-183.05200010389), 39, 51);
      node2.getInputId();
      node1.useSourceInfoIfMissingFrom(node0);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Locale.forLanguageTag("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node node0 = Node.newString(1604, "");
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.isNot();
      node0.isNumber();
      node0.isAdd();
      node0.isOptionalArg();
      node0.isEmpty();
      node0.isNull();
      node0.putProp(16, "foaDm+`P;ZF");
      node0.getProp(16);
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      node0.getSourceOffset();
      node0.getInputId();
      node0.setSourceFileForTesting("Tuj9g[]~]7-6)(_|pb<");
      node0.isOptionalArg();
      node0.isScript();
      Node node1 = node0.getLastSibling();
      node1.mayMutateGlobalStateOrThrow();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(100);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node0.isExprResult();
      node1.isRegExp();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      InputId inputId0 = new InputId("");
      node0.getProp(102);
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      Node node1 = new Node(4194304, node0, 48, 488);
      Locale locale0 = Locale.ENGLISH;
      locale0.getUnicodeLocaleAttributes();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.putIntProp(1908, 54);
      node0.isGetterDef();
      node0.isStringKey();
      node1.isEquivalentTo(node0);
      node1.isStringKey();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(38, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale.forLanguageTag("");
      Node node1 = node0.copyInformationFromForTree(node0);
      Node node2 = Node.newNumber((-2461.7285), 40, 12);
      node2.getLength();
      node1.isInstanceOf();
      node0.isGetElem();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node1.isDebugger();
      node3.isDec();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      Node node0 = Node.newString(127, "{=Gc&?[/9E1", 13, 110);
      Node node1 = new Node(57, node0, node0);
      node1.isEquivalentToShallow(node1);
      node0.addChildToBack(node1);
      node0.putIntProp(48, 94);
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
          Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
          node_SideEffectFlags0.clearAllFlags();
          Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
          node_SideEffectFlags0.setAllFlags();
          Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
          node_SideEffectFlags3.setThrows();
          Node node0 = Node.newString(127, "{=Gc&?[/9E1", 13, 110);
          Node node1 = new Node(57, node0, node0);
          node1.isEquivalentToShallow(node1);
          node0.addChildToBack(node1);
          node0.isQuotedString();
          Node node2 = Node.newString(127, "<invalid>");
          Node node3 = node0.getAncestor(4095);
          node2.isVar();
          node2.checkTreeTypeAwareEqualsImpl(node3);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      node1.addSuppression("GLOBAL_THIS");
      Node node2 = new Node(29, 153, 52);
      Node node3 = Node.newString(112, "foaDm+`P;ZF");
      node1.toStringTree();
      Node node4 = new Node(479, node2, node1, node3, node1, (-332), 2);
      node4.putBooleanProp(52, true);
      node0.setType(1610612736);
      node4.isNot();
      node4.isScript();
      node3.isParamList();
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = new Node(111, (-446), (-2736));
      Locale.forLanguageTag("sDM]QyvI/.2");
      node0.getDirectives();
      Node node1 = Node.newString("BOOLEAN_OBJECT_TYPE");
      Node node2 = node0.copyInformationFromForTree(node1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Node node3 = new Node(4095, node1, node2, node2, node1, 57, 42);
      node0.isIn();
      node3.isVoid();
      node3.isIf();
      node3.isVoid();
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.isDelProp();
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(127, node1);
      node2.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node2.isAssignAdd();
      Node.newString(51, "com.google.common.base.CharMatcher$FastMatcher", 32, 12);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node4 = new Node(42, node3);
      node3.isWhile();
      node1.isInc();
      node4.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.isDelProp();
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(127, node1);
      node2.wasEmptyNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags3.areAllFlagsSet();
      Node.newString(51, "com.google.common.base.CharMatcher$FastMatcher", 32, 12);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      Node node4 = new Node(37, node3);
      node3.isWhile();
      node1.isInc();
      node4.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = new Node(111, (-446), (-2736));
      Locale locale0 = Locale.CHINA;
      Locale locale1 = Locale.UK;
      locale0.getDisplayName(locale1);
      Node.mergeLineCharNo(30, 46);
      Node node1 = new Node(37, node0, node0, node0, 3402, 3402);
      Node node2 = node1.getLastSibling();
      Node node3 = null;
      Node node4 = new Node(803, (Node) null, node1, node2, node0, 98, 4095);
      node4.isFor();
      node0.isDelProp();
      int int0 = 85;
      int int1 = 2619;
      Node node5 = new Node(int0, node1, node0, node3, node1, node1.OPT_ARG_NAME, int1);
      // Undeclared exception!
      try { 
        node5.removeChildren();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      node1.addSuppression("GLOBAL_THIS");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node2 = new Node(29, 153, 52);
      Node node3 = Node.newString(12, "foaDm+`P;ZF");
      Node node4 = new Node(479, node2, node1, node3, node1, 52, 2);
      node0.setType(1610612736);
      Vector<Node> vector0 = new Vector<Node>();
      node3.isFunction();
      node2.isNew();
      node1.isVoid();
      node2.isIf();
      node4.getLastChild();
      node4.isWith();
      Node.newString(4095, "foaDm+`P;ZF");
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-58);
      byteArray0[4] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newNumber((double) (byte) (-58), (int) (byte)0, (int) (byte)70);
      node0.isSetterDef();
      node0.isBlock();
      node0.getLineno();
      node0.isVar();
      Node node1 = new Node(1610612736, node0, node0, node0);
      node1.isSyntheticBlock();
      node1.isSyntheticBlock();
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString((-2237), "BOOLEAN_OBJECT_TYPE");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = jSDocInfo0.getAssociatedNode();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-88);
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte)74;
      byteArray0[3] = (byte) (-94);
      byteArray0[4] = (byte)56;
      byteArray0[5] = (byte)52;
      node0.removeChildren();
      byteArray0[6] = (byte)37;
      byteArray0[7] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.checkTreeEquals((Node) null);
      node1.isEquivalentTo(node0);
      int int0 = (-2137);
      node1.removeProp(int0);
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newString(21, "second new child has existing parent");
      node0.getSourcePosition();
      Node node1 = new Node((-2613), node0, node0, 145, 942);
      Node node2 = node1.removeChildren();
      Node node3 = new Node(512, node0, node1, node1, node0);
      node1.getSideEffectFlags();
      node3.getInputId();
      node3.setType(1);
      node0.replaceChildAfter(node3, node1);
      node2.useSourceInfoFrom(node1);
      node0.isExprResult();
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      node1.addSuppression("GLOBAL_THIS");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags3.areAllFlagsSet();
      Node node2 = Node.newString(63, "gA~}#Rbx1e&", (-2552), 1);
      Node node3 = new Node(1, node1);
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags7.clearAllFlags();
      node2.isBreak();
      Node node4 = new Node((-1850), node3, 113, (-1219));
      node4.getAncestor(54);
      node4.removeChild(node3);
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node(127);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node0.getSourceOffset();
      node1.getInputId();
      node0.setSourceFileForTesting("YU/mSHzX@");
      node0.isOptionalArg();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      jSTypeRegistry1.getType("Object#Element");
      Locale.forLanguageTag("Object#Element");
      Locale locale0 = Locale.ITALY;
      locale0.getUnicodeLocaleAttributes();
      node1.isString();
      node0.useSourceInfoIfMissingFrom(node1);
      node1.isName();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((double) 26);
      node0.getSourceFileName();
      node0.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Stack<JSType> stack0 = new Stack<JSType>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean1 = node0.isOptionalArg();
      Node node1 = new Node(38);
      node1.isScript();
      Node node2 = node1.getLastSibling();
      node0.getInputId();
      node0.isEquivalentToTyped((Node) null);
      boolean boolean2 = true;
      node2.isEquivalentTo(node0, boolean1, boolean2, boolean0);
      // Undeclared exception!
      try { 
        node0.isTry();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node node0 = new Node(110, 110, 110);
      node0.isGetProp();
      node0.isAnd();
      node_SideEffectFlags1.setThrows();
      node0.children();
      Node node1 = Node.newString(110, "", 4, 48);
      node1.isEmpty();
      node0.isOr();
      node1.checkTreeEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node((-9), (-9), (-9));
      Node node1 = new Node(108, node0, node0);
      node1.isLabel();
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node1.useSourceInfoFromForTree(node0);
      Node node2 = Node.newNumber((-4493.153), 40, 1214);
      node1.isWith();
      node2.getDouble();
      node0.isSyntheticBlock();
      node0.getSideEffectFlags();
      node1.isComma();
      Node node3 = new Node(39, 1, 736);
      node3.checkTreeEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(30);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node1.getInputId();
      node0.isOptionalArg();
      node0.isScript();
      node0.isInstanceOf();
      node1.isGetElem();
      node0.isUnscopedQualifiedName();
      node1.isSwitch();
      Node node2 = node0.detachFromParent();
      node2.getChildBefore(node1);
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(50, (-446), (-2736));
      nodeArray0[0] = node0;
      Node node1 = new Node(52);
      node1.addChildrenToBack(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(13);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node1.cloneNode();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node1.isRegExp();
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = Node.newNumber((double) 150, 150, 157);
      Node node1 = new Node(150, node0, node0, node0, node0, 30, 43);
      node0.getIntProp(30);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node1.addChildrenToBack(node1);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      boolean boolean0 = node1.isBreak();
      Node node2 = node1.getAncestor(4);
      node1.getSourcePosition();
      node1.getString();
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        node1.isEquivalentTo(node2, boolean0, boolean1, boolean0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 150
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      InputId inputId0 = new InputId("");
      node0.getProp(102);
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      Node node1 = new Node(4194304, node0, 48, 488);
      node1.isCatch();
      node0.isAnd();
      node0.children();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.getDirectives();
      node1.isObjectLit();
      node0.putIntProp(488, 0);
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = new Node(148, (-446), 50);
      Locale locale0 = Locale.forLanguageTag("%CIwI-Jk");
      locale0.getUnicodeLocaleAttributes();
      Node node1 = Node.newNumber((double) 39, 16, 43);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isInstanceOf();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      String string0 = "QL";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "QL");
      Node node0 = Node.newString(3702, "F(w~)Q5p6U[", 3702, 3702);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F(w~)Q5p6U[");
      Node node1 = Node.newString(30, "F(w~)Q5p6U[", 57, (-22));
      Node node2 = Node.newString("F(w~)Q5p6U[", 1490, 42);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.addChildToBack(node2);
      node0.isOnlyModifiesThisCall();
      node0.siblings();
      node2.setLineno(4095);
      node1.isName();
      node0.isQuotedString();
      Node.extractLineno((-1609));
      node2.getType();
      node0.setSideEffectFlags(2724);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.setAllFlags();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3702
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      node0.wasEmptyNode();
      Node node1 = new Node(30);
      node0.addChildrenToBack(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags4.setAllFlags();
      node1.cloneNode();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(30);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node1.getInputId();
      node0.isOptionalArg();
      node0.isScript();
      node0.isInstanceOf();
      Node node2 = Node.newString("P}NJwa;O}$O2o'N", (-1055), 43);
      node1.checkTreeEqualsImpl(node2);
      node0.isFalse();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isString();
      node0.useSourceInfoIfMissingFrom(node1);
      node2.checkTreeEqualsImpl(node1);
      Node node3 = Node.newString(4, "r");
      node3.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale1.getDisplayName(locale0);
      locale0.getDisplayName(locale1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "foaDm+`P;ZF");
      int int0 = Node.CHANGE_TIME;
      node0.getJSDocInfo();
      node0.isOptionalArg();
      Node node1 = new Node(41);
      Node node2 = new Node(43, node1, node1, node1, node0, 2, 49);
      node0.isCast();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node node0 = new Node(1578);
      Node node1 = new Node(914, node0, 914, 52);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node0.getIntProp(376);
      jSDocInfo0.setAssociatedNode(node1);
      node0.removeChildAfter(node1);
      node2.wasEmptyNode();
      String string0 = "LJezUhp";
      // Undeclared exception!
      try { 
        jSDocInfo0.addSuppression(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      Node node2 = new Node(29, 153, 52);
      Node node3 = Node.newString(12, "foaDm+`P;ZF");
      node3.addChildAfter(node1, (Node) null);
      Node node4 = Node.newString(32, "foaDm+`P;ZF", 39, 8);
      node0.setType(1610612736);
      Vector<Node> vector0 = new Vector<Node>();
      node3.isFunction();
      node2.isNew();
      node4.getChildCount();
      node4.removeChild(node0);
      node0.isVar();
      node1.isOnlyModifiesArgumentsCall();
      node4.toString();
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte) (-99);
      byteArray0[2] = (byte)86;
      byteArray0[3] = (byte) (-8);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(110);
      node0.isCatch();
      node0.isGetProp();
      Node node1 = new Node(4095, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isAnd();
      Vector<Node> vector0 = new Vector<Node>(49);
      node0.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearAllFlags();
      node0.putIntProp(898, 110);
      node0.isContinue();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(50, (-446), 50);
      nodeArray0[0] = node0;
      node0.isEquivalentTo(node0, true, true, true);
      node0.isTry();
      Node node1 = Node.newString("K=Nd+${~fRa@IkF>");
      node1.wasEmptyNode();
      Node node2 = Node.newString("<^\"e*x:=uj\"t~XR*7");
      Node node3 = new Node(2, node0, node0, node2, node2);
      Node node4 = new Node(57, node2, node1, node0);
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = new Node(110);
      node0.isCatch();
      node0.isGetProp();
      Node node1 = Node.newNumber((double) 36, (-3573), 52);
      node0.addChildrenToBack(node1);
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setAllFlags();
      node0.cloneNode();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node0.isRegExp();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.getUnicodeLocaleAttributes();
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      node1.addSuppression("foaDm+`P;ZF");
      Node node2 = new Node(29, 153, 52);
      Node node3 = Node.newString(112, "foaDm+`P;ZF");
      node1.toStringTree();
      node3.setIsSyntheticBlock(true);
      Node node4 = new Node(479, node2, node1, node3, node1, (-332), 2);
      node3.isTry();
      Node.newString("foaDm+`P;ZF");
      node2.isName();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node0.setDirectives(set0);
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      node1.addSuppression("foaDm+`P;ZF");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isGetElem();
      Node node2 = new Node(40);
      node2.getType();
      Node node3 = new Node(47, node2);
      Node node4 = Node.newNumber(0.0, 2, 148);
      node3.copyInformationFrom(node4);
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = new Node(102, (-2338), (-2338));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isGetElem();
      Node node1 = new Node((-2736));
      node1.getType();
      Node node2 = new Node(47, node0);
      node2.checkTreeEqualsImpl(node0);
      node0.copyInformationFrom(node2);
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.getLength();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      Node node1 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.setSideEffectFlags((Node.SideEffectFlags) null);
      node1.getDirectives();
      // Undeclared exception!
      try { 
        node1.isThis();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(1064, "rE@?WqX$D}?r>P=a", 46, 46);
      Node node1 = new Node(1064, node0);
      node1.getChangeTime();
      node1.replaceChildAfter(node0, node0);
      node1.isUnscopedQualifiedName();
      node1.isGetElem();
      node0.isReturn();
      // Undeclared exception!
      try { 
        node1.getChangeTime();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = Node.newNumber((double) 115, (-2208), 524288);
      Node node1 = new Node(115, node0, node0, node0, 47, 43);
      node1.replaceChildAfter(node0, node0);
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(0.0, 26, 2283);
      node0.getJSDocInfo();
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Stack<JSType> stack0 = new Stack<JSType>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOptionalArg();
      Node node1 = new Node(38);
      node1.isScript();
      Node node2 = node1.getLastSibling();
      node0.isInstanceOf();
      node2.useSourceInfoIfMissingFrom(node1);
      node1.isCast();
      node2.isUnscopedQualifiedName();
      node2.isBreak();
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node node0 = Node.newString(130, "foaDm+`P;ZF", (-515), (-5540));
      node0.putProp(2278, "foaDm+`P;ZF");
      Node node1 = new Node(43, node0);
      Node node2 = node1.cloneTree();
      node2.getIntProp(83);
      node2.getLastChild();
      node0.getSourceOffset();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getLength();
      node0.getInputId();
      node0.getSourceFileName();
      node0.isNot();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.extractCharno(29);
      Node node1 = new Node(125);
      node0.isAssign();
      node1.getQualifiedName();
      node0.setChangeTime(54);
      Locale locale0 = Locale.FRENCH;
      node1.isBlock();
      node0.checkTreeEquals(node1);
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(30);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node0.isCatch();
      Locale locale0 = Locale.forLanguageTag("pJdy?f12M+!iFB");
      locale0.getUnicodeLocaleAttributes();
      node0.copyInformationFromForTree(node1);
      node1.isInstanceOf();
      node1.isFromExterns();
      node1.isGetElem();
      node1.isIn();
      node0.isNE();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(30);
      Node node1 = new Node(127, node0, node0, node0, node0);
      node1.getInputId();
      node0.isOptionalArg();
      node0.isScript();
      node0.isInstanceOf();
      node1.isGetElem();
      node1.useSourceInfoFromForTree(node0);
      node0.isReturn();
      node1.isReturn();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = new Node(1640, (-446), 30);
      Locale.forLanguageTag("Sy ^/m");
      Node node1 = Node.newNumber((double) 39);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newNumber(0.7, 31, 42);
      Node node4 = new Node(144, node0, (-863), (-1672));
      node4.getLength();
      node4.isInstanceOf();
      node1.isGetElem();
      Node node5 = node3.useSourceInfoFromForTree(node2);
      node0.isDebugger();
      node4.isDec();
      node1.srcref(node2);
      node5.checkTreeEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = new Node(154, 1706, 154);
      Locale.forLanguageTag("");
      Node node1 = new Node(52, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newNumber((double) 49, 47, 46);
      node3.getLength();
      node0.isInstanceOf();
      node2.isGetElem();
      Node node4 = node1.useSourceInfoFromForTree(node0);
      node4.isDebugger();
      node4.isDec();
      node0.srcref(node2);
      node1.checkTreeEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = new Node((-446), 42, (-1));
      Node node1 = new Node(57);
      node1.addChildrenToBack(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(93);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node0.cloneNode();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node0.isRegExp();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = new Node(108, (-2736), (-892));
      Locale.forLanguageTag("");
      Node node1 = new Node(12);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.getLength();
      node2.isInstanceOf();
      node0.isGetElem();
      Node node3 = new Node(1, node1, 2, 56);
      Node node4 = new Node(32, node0, node1, node0, node3, 127, (-2057));
      Node node5 = node4.useSourceInfoFromForTree(node3);
      node5.isDebugger();
      node1.isDec();
      Node node6 = node4.srcref(node3);
      node1.checkTreeEqualsImpl(node6);
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 127);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(31, node1, 50, 1);
      node0.getIntProp(30);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node1.addChildrenToBack(node2);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      Node node3 = node1.cloneNode();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node2.checkTreeEqualsImpl(node3);
      node0.isOnlyModifiesThisCall();
      node1.getCharno();
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node node0 = Node.newNumber((-1637.0));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = node0.getLastSibling();
      node1.isFor();
      node1.isScript();
      Node node2 = new Node(4, node1);
      Node node3 = node2.getLastSibling();
      node3.getDouble();
      node2.hasMoreThanOneChild();
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow(node2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // RETURN is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1061, nodeArray0, 1061, (-217));
      node0.isReturn();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-QgLs!<tv^wjP^JP) 4");
      node0.children();
      node0.removeFirstChild();
      Node node1 = Node.newNumber((double) 30);
      node0.getLineno();
      node0.getAncestors();
      node0.isEquivalentTo(node1);
      node0.isTrue();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      node0.getSourceOffset();
      node1.getAncestor(1015);
      node0.isQualifiedName();
      node1.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString(825, "com.google.common.base.CharMatcher$FastMatcher", 825, 825);
      Node node1 = new Node(115, node0);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node1.copyInformationFromForTree(node0);
      node0.cloneTree();
      node0.isInstanceOf();
      node1.isGetElem();
      node1.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayName(locale1);
      Node.mergeLineCharNo((-1939), 52);
      Node node1 = new Node(56, node0, node0, node0, 16, 48);
      Node node2 = node1.getLastSibling();
      node1.isFor();
      node0.isDelProp();
      node2.srcrefTree(node1);
      node0.removeChildren();
      node1.isObjectLit();
      node2.isGetElem();
      node2.isNoSideEffectsCall();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node node0 = Node.newString("<UG`>", (-713), (-713));
      node0.addSuppression("<UG`>");
      node0.getJSDocInfo();
      node0.detachChildren();
      node0.isVar();
      node0.getJsDocBuilderForNode();
      node0.wasEmptyNode();
      node0.isNull();
      node0.isDec();
      node0.isParamList();
      CharBuffer charBuffer0 = CharBuffer.wrap((char[]) null, 126, 301);
      node0.appendStringTree(charBuffer0);
      node0.isFunction();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Locale.forLanguageTag("");
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newNumber((-2279.35262), 13, 847);
      nodeArray0[0] = node0;
      Node node1 = Node.newNumber((double) 2);
      nodeArray0[1] = node1;
      Node node2 = new Node(127, nodeArray0);
      Node node3 = node2.copyInformationFromForTree(node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node4 = new Node(2683, node3, node0, node3, node3, 116, 4);
      nodeArray0[0].isIn();
      node2.isVoid();
      nodeArray0[0].isIf();
      node2.getLastChild();
      node2.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(42, nodeArray0);
      node0.isInc();
      node0.isQualifiedName();
      node0.isOr();
      Node node1 = new Node(42, node0);
      node0.srcref(node1);
      node0.getLineno();
      Node node2 = new Node(0, node0, node0, node0);
      // Undeclared exception!
      try { 
        node0.addChildToBack(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString(825, "com.google.common.base.CharMatcher$FastMatcher", 825, 825);
      Node node1 = new Node(37, 30, 56);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node1.copyInformationFromForTree(node0);
      node0.cloneTree();
      node1.isOnlyModifiesArgumentsCall();
      Node.newString("KWTZj8Wa5)Sd5iwlz?H");
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags5.areAllFlagsSet();
      Node node2 = Node.newString(40, "com.google.javascript.rhino.jstype.FunctionType", 124, 4);
      Node node3 = new Node((-1515), node1);
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node2.copyInformationFromForTree(node3);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node4.cloneTree();
      node2.isInstanceOf();
      node3.isGetElem();
      node2.hasMoreThanOneChild();
      node3.isWhile();
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = Node.newString((-2736), "Y<-Kn{l+K;A");
      Node node1 = new Node(40, node0, node0);
      Node node2 = node1.getLastSibling();
      node0.isFor();
      node1.isScript();
      node1.getLastSibling();
      node2.getDouble();
      String string0 = null;
      Node node3 = Node.newString(node2.FLAG_NO_THROWS, string0);
      // Undeclared exception!
      try { 
        node3.hasMoreThanOneChild();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = new Node(50);
      node0.isWhile();
      node0.isOr();
      Node node1 = new Node(49, node0, node0, 49, 54);
      Node node2 = new Node(4095, 48, 56);
      Node node3 = new Node(13, node1, node1, node1);
      node1.getLength();
      node3.isTry();
      node3.isOnlyModifiesThisCall();
      node3.isIf();
      node1.replaceChild(node3, node2);
      node1.getChildBefore(node3);
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      InputId inputId0 = new InputId("");
      node0.getProp(102);
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      Node node1 = new Node(4194304, node0, 48, 488);
      Locale locale0 = Locale.ENGLISH;
      locale0.getUnicodeLocaleAttributes();
      node0.toStringTree();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.putIntProp(1908, 54);
      node0.isGetterDef();
      node1.checkTreeEqualsImpl(node1);
      node0.isOnlyModifiesThisCall();
      node0.getString();
      node1.isComma();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node((-1770), (-2190), (-452));
      Node node1 = new Node(52, node0, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isGetElem();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ObjectType.cast((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("BOOLEAN_OBJECT_TYPE", node1, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      Node node3 = enumElementType1.getRootNode();
      node3.addChildBefore(node2, node1);
      node2.isComma();
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(26, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale.forLanguageTag("change_time");
      node0.getDirectives();
      Node node1 = node0.copyInformationFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node1.isAdd();
      node1.isLabelName();
      node0.isOptionalArg();
      node0.getDirectives();
      node1.getInputId();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = new Node(8192);
      Node node1 = new Node(35, node0, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node0.isGetElem();
      node1.addChildBefore(node2, node2);
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("fFaDm+`P;ZF");
      node0.setString("fFaDm+`P;ZF");
      node0.setOptionalArg(true);
      Node node1 = new Node(40, node0, node0, node0, node0);
      Locale locale0 = Locale.JAPANESE;
      locale0.getUnicodeLocaleAttributes();
      node1.copyInformationFromForTree(node0);
      node1.isFromExterns();
      node0.isGetElem();
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      InputId inputId0 = new InputId("");
      node0.getProp(102);
      node0.getInputId();
      node0.setSourceEncodedPosition(102);
      node0.getProp(102);
      Node node1 = new Node(4194304, node0, 48, 488);
      Locale locale0 = Locale.ENGLISH;
      locale0.getUnicodeLocaleAttributes();
      node0.toStringTree();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.putIntProp(1908, 54);
      node0.isGetterDef();
      node1.checkTreeEqualsImpl(node1);
      node1.isEquivalentTo(node1);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 2043);
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getBooleanProp(2);
      Node node1 = new Node(127, node0, node0, node0, node0, 30, 43);
      Node node2 = new Node(0, node1, 50, 1);
      node0.getIntProp(30);
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node2.isInstanceOf();
      node2.isGetElem();
      node2.hasMoreThanOneChild();
      node2.srcref(node0);
      node2.isEquivalentTo(node0);
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$StringNode");
      node0.getLength();
      Node node1 = new Node(4095, 808, 12);
      node1.isGetProp();
      node1.isAnd();
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node1.isExprResult();
      Node node2 = new Node(123, node1);
      node2.useSourceInfoIfMissingFromForTree(node1);
      node2.isIn();
      node2.isVoid();
      node0.isIf();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(111, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale.forLanguageTag("");
      Node node1 = node0.copyInformationFromForTree(node0);
      Node node2 = Node.newNumber((-2461.7285), 40, 12);
      Node node3 = new Node((-1337), node1, node1, node0, node0, 148, 1590);
      node3.putBooleanProp(31, true);
      Node node4 = node3.useSourceInfoFromForTree(node0);
      node2.isReturn();
      node3.isReturn();
      node4.getLastChild();
      node0.getType();
      node4.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("x");
      ObjectType objectType0 = FunctionType.getTopDefiningInterface(templateType0, "Not declared as a constructor");
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = Node.newString("Not declared as a type name");
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) objectType0, (JSType) objectType0, (JSType) templateType0, jSTypeArray0[0], jSTypeArray0[0], (JSType) objectType0);
      jSTypeRegistry0.createTemplatizedType(objectType0, immutableList0);
      Node node1 = new Node(123, node0, node0, (-466), 1370);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      node_NodeMismatch0.equals(jSTypeRegistry0);
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = new Node(1640, (-446), 30);
      node0.getJSDocInfo();
      Locale.forLanguageTag("Sy ^/m");
      Node node1 = Node.newNumber((double) 39);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newNumber(0.7, 31, 42);
      Node node4 = new Node(144, node0, (-863), (-1672));
      node4.getLength();
      node3.isDelProp();
      node4.removeChildren();
      node2.isObjectLit();
      node2.isGetElem();
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      node0.setSourceFileForTesting("foaDm+`P;ZF");
      Node node1 = new Node(29, node0);
      Node node2 = new Node(29, 153, 52);
      Node node3 = Node.newString(12, "foaDm+`P;ZF");
      Node node4 = new Node(32, node1);
      node4.srcref(node3);
      node2.getLineno();
      Node node5 = new Node(30, node2, node1, node2);
      Node node6 = null;
      // Undeclared exception!
      try { 
        node1.addChildToBack(node6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = new Node(2043);
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getBooleanProp(2);
      Node node1 = new Node(47, node0, node0);
      Node.extractCharno(11);
      node0.isAssign();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-947));
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      node1.cloneNode();
      Node node2 = Node.newNumber(737.0, 30, (-446));
      node2.getInputId();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = new Node(111, (-446), (-2736));
      nodeArray0[0] = node0;
      Locale.forLanguageTag("");
      Node node1 = node0.copyInformationFromForTree(node0);
      Node node2 = Node.newNumber((-2461.7285), 40, 12);
      node2.getLength();
      node2.getLength();
      node1.isInstanceOf();
      node0.isGetElem();
      node1.useSourceInfoFromForTree(node0);
      node2.checkTreeEqualsImpl(node0);
      Node node3 = Node.newString(" is not a string node", 1625, 29);
      Node node4 = Node.newString("");
      node4.clonePropsFrom(node0);
      node0.copyInformationFrom(node4);
      node3.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(30);
      Node node1 = new Node(127, node0, node0, node0, node0);
      Locale locale0 = Locale.forLanguageTag("pJXy?f12MtiFB");
      locale0.getUnicodeLocaleAttributes();
      node1.addChildBefore(node0, node0);
      double double0 = 39.0;
      int int0 = 83;
      // Undeclared exception!
      try { 
        Node.newNumber(double0, int0, node1.IS_CONSTANT_NAME);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = Node.newString(113, "B;]]o$<6O?pYdn");
      node0.getInputId();
      node0.getProp(102);
      node0.getInputId();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      Node node1 = new Node(4);
      node0.isCatch();
      node0.isGetProp();
      node1.isFunction();
      Vector<Node> vector0 = new Vector<Node>(56);
      node0.isThis();
      node0.isAssign();
      node1.getSideEffectFlags();
      node0.setString("woa\"");
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(127);
      Node node1 = new Node(127, node0, node0, node0, node0);
      int int0 = Node.IS_CONSTANT_NAME;
      node1.getInputId();
      node0.isOptionalArg();
      node0.isScript();
      Node node2 = node1.getLastSibling();
      node2.isAdd();
      node2.isLabelName();
      node0.setSourceEncodedPositionForTree(35);
      node2.isLabelName();
      node1.getDirectives();
      node2.isReturn();
      Node node3 = node2.getLastChild();
      node3.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      Node node0 = Node.newString("foaDm+`P;ZF");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(39);
      node0.isOnlyModifiesThisCall();
      node1.isTypeOf();
      node1.isGetElem();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.isDebugger();
      node2.isDec();
      node2.isName();
      node2.isFromExterns();
      node1.getChangeTime();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = new Node((-1785), 42, 64);
      node1.isGetProp();
      node0.isAnd();
      node0.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node1.isExprResult();
      Node node2 = new Node(54, node0);
      node0.isContinue();
      node1.isGetElem();
      node1.hasMoreThanOneChild();
      Node node3 = node2.getLastChild();
      node2.getQualifiedName();
      node3.getAncestor(57);
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node((-9), (-9), (-9));
      Node node1 = new Node(108, node0, node0);
      node1.isLabel();
      node1.setIsSyntheticBlock(false);
      Node node2 = node1.getLastSibling();
      node0.getDouble();
      Node node3 = Node.newNumber((double) node2.SIDE_EFFECTS_ALL);
      Node node4 = null;
      try {
        node4 = new Node(node0.DECR_FLAG, node3, node1.FLAG_NO_THROWS, node2.IS_DISPATCHER);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -9
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }
}
