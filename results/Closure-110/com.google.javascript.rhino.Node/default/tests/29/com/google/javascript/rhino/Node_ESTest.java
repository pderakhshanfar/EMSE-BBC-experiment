/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 31 08:28:35 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.NoObjectType;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.UnionType;
import java.io.IOException;
import java.nio.CharBuffer;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      String string0 = "-L7bO*1ioC[R&1,So";
      Node node0 = Node.newString(29, "-L7bO*1ioC[R&1,So");
      int int0 = 0;
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      node0.removeChild((Node) null);
      Node.newString(string0, int0, node0.INCRDECR_PROP);
      int int1 = 0;
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = Node.newString("WtKbS4N%qKuypX^yY");
      node0.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = Node.newString(79, "u5z2^=@krCSgg`sQ'", 79, 79);
      node0.getQualifiedName();
      Node node1 = node0.getNext();
      node0.removeChild((Node) null);
      node1.isScript();
      int int0 = (-2688);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int int0 = Node.QUOTED_PROP;
      Node.newString(470, "");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = Node.newNumber(419.13164836);
      Node node1 = Node.newNumber((double) 4095);
      node0.removeChild(node1);
      // Undeclared exception!
      try { 
        node0.getStaticSourceFile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags5.setAllFlags();
      Node node0 = Node.newNumber((-171.0), (-1033), (-1033));
      node0.setVarArgs(false);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node0.hasChild((Node) null);
      node_SideEffectFlags4.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = Node.newNumber(418.39211015176534);
      node0.getStaticSourceFile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = new Node(83);
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newNumber((double) 2724, 310, (-974));
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923), 130, 130);
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newString("7>uZaBVe!", (-733), 86);
      Node node1 = new Node((-902), node0, node0, node0, node0);
      Node node2 = new Node((-733), node1, node1, node1);
      node2.isAssign();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node1.hasChild(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setAllFlags();
      Node node0 = Node.newString((-996), "P\"1d#Ru[wXyj5Cz", (-996), 1518);
      node0.isGetProp();
      node0.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = Node.newNumber(414.436955);
      node0.siblings();
      node0.setWasEmptyNode(false);
      node0.children();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newString((-4005), "]TNF31lw'-N'm-44", (-408), (-408));
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(15, 15, 15);
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3122));
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.valueOf();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-3128), nodeArray0);
      Node node1 = new Node(4095, 1, 1);
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newString((-1318), "Y");
      node0.getSourcePosition();
      node0.addSuppression("Y");
      Node node1 = Node.newString("Y", 32, 1);
      node0.hasChild(node1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = Node.newNumber(142.89598698838506);
      Node node1 = new Node(1, node0, node0, node0);
      node1.isAssign();
      node0.hasChild(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      int int0 = (-322);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      jSTypeArray0[0] = jSType0;
      Node node0 = Node.newNumber((double) 0, 0, (-322));
      String string0 = "3pEsWZDSegE|+>6R*!";
      JSType jSType1 = jSTypeRegistry0.createFromTypeNodes(node0, "3pEsWZDSegE|+>6R*!", (StaticScope<JSType>) null);
      jSTypeArray0[1] = jSType1;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters(jSTypeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected node in type expression: NUMBER 0.0
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = Node.newNumber((double) 43, 15, 31);
      node0.toString();
      node0.getStaticSourceFile();
      node0.isParamList();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = Node.newNumber((double) 16, 4, 57);
      node1.toString();
      node1.isDelProp();
      node0.isInstanceOf();
      Node node2 = Node.newNumber((double) 54, 4095, 4095);
      node2.addChildrenToFront(node0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = Node.newString(84, (String) null, 84, (-408));
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(1265);
      node0.isCall();
      node0.setSideEffectFlags(57);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = Node.newString(">-~ &@QED\"C");
      Node node1 = new Node(40, node0, node0, node0);
      node0.addChildrenToFront(node1);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newNumber(418.39211015176534);
      Node.newNumber((double) 57);
      node0.getStaticSourceFile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.valueOf();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = new Node(4);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sJS");
      Node node1 = new Node(458864, node0, node0, node0, 4095, 38);
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(0, node0, node0, (Node) null, 0, 49);
      node1.isWith();
      node0.isAssignAdd();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NumberNode", (-13), (-13));
      Node node1 = new Node((-13), node0, node0, (Node) null, 36, 626);
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("");
      node3.mayMutateGlobalStateOrThrow();
      node3.setVarArgs(true);
      Node node4 = node1.copyInformationFromForTree(node0);
      node3.setWasEmptyNode(true);
      node0.addChildrenToBack(node3);
      Node node5 = Node.newNumber(1.0, 55, 36);
      node1.addChildrenToFront(node0);
      node5.isFromExterns();
      node5.isNot();
      node5.isVar();
      node5.isVarArgs();
      node1.isThrow();
      node2.isNew();
      node0.getString();
      JSDocInfo jSDocInfo0 = null;
      Node node6 = node1.setJSDocInfo(jSDocInfo0);
      Node.newNumber((double) node6.POST_FLAG, node2.VAR_ARGS_NAME, node6.IS_NAMESPACE);
      node4.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(485);
      Node node1 = Node.newNumber((double) 57, 1924, 26);
      node0.replaceChild(node1, node1);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = new Node(3221, 3221, 2381);
      Node node1 = Node.newString("REGEXP_FUNCTION_TYPE");
      node0.copyInformationFromForTree(node1);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(51);
      node1.isGetProp();
      node1.setSourceEncodedPositionForTree(57);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = new Node(1398);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.setSourceFileForTesting("N:qA/&+Y>jn0H\"s/{");
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(8291);
      node0.isFromExterns();
      node0.isEmpty();
      node0.isSetterDef();
      node0.isNew();
      node0.getString();
      String string0 = "com.google.common.collect.AbstractIterator";
      Node node1 = Node.newString(string0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.addChildrenToFront(node0);
      Node node3 = null;
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = Node.newNumber(419.13164836);
      node0.useSourceInfoFromForTree(node0);
      node0.removeChild(node0);
      // Undeclared exception!
      try { 
        node0.getStaticSourceFile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newString((-1735), "com.google.common.collect.ImmutableCollection");
      node0.isSyntheticBlock();
      node0.isFromExterns();
      node0.isOptionalArg();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = Node.newString("Y");
      node0.toString();
      node0.addSuppression(":U0Ra8V8AF4");
      node0.getStaticSourceFile();
      node0.isParamList();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = Node.newString("y7#SaJgyn");
      node0.isWhile();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newNumber(801.42);
      node1.getJSDocInfo();
      node0.addChildrenToBack(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      int int0 = Node.QUOTED_PROP;
      node0.getString();
      // Undeclared exception!
      try { 
        node0.getJsDocBuilderForNode();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.5 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = Node.newString("]TNF31lw'-N'm-44", 77, 77);
      node0.isNoSideEffectsCall();
      node0.setLength(77);
      node0.putIntProp(77, 51);
      node0.setString("]TNF31lw'-N'm-44");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      int int0 = Node.EMPTY_BLOCK;
      node0.isStringKey();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType[] jSTypeArray0 = new JSType[8];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      // Undeclared exception!
      try { 
        node0.isGetProp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newNumber(142.89598698838506);
      Node node1 = new Node(0, node0, node0);
      node1.mayMutateGlobalStateOrThrow();
      node1.isDec();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newNumber(801.42);
      node0.getJSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(53, node0);
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = Node.newNumber((double) 43, 15, 31);
      node0.toString();
      node1.getSourcePosition();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = Node.newNumber(82.9151491);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isOnlyModifiesThisCall();
      node0.setSourceFileForTesting("2");
      node0.isNot();
      node0.getSourceFileName();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      Node node1 = Node.newString(91, "7^Ordinal: ", 12, 48);
      node0.getSideEffectFlags();
      node1.getString();
      node1.isNoSideEffectsCall();
      node1.isNew();
      node0.isOnlyModifiesThisCall();
      node0.isCase();
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("");
      node3.mayMutateGlobalStateOrThrow();
      Node node4 = node1.copyInformationFromForTree(node0);
      node3.setWasEmptyNode(true);
      node0.addChildrenToBack(node3);
      Node node5 = Node.newNumber(1.0, 55, 36);
      node1.addChildrenToFront(node0);
      node5.isFromExterns();
      node5.isNot();
      node5.isVar();
      node5.isVarArgs();
      node2.isNew();
      node2.getDouble();
      node0.isEquivalentToTyped(node2);
      Node node6 = node3.useSourceInfoIfMissingFrom(node4);
      node3.addChildrenToFront(node6);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(115, 124, 115);
      Node node1 = new Node(115, node0, node0, node0, (-847), 49);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.addChildAfter(node0, node0);
      node1.getType();
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = Node.newString(")jy2)-", 1421, 1421);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(8291);
      Node node1 = new Node(40, 52, (-1728));
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isFunction();
      node0.isNew();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isInc();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node0.setSourceEncodedPosition(47);
      node1.isDefaultCase();
      node1.getString();
      Node node3 = node0.getFirstChild();
      int int0 = 0;
      String string0 = "U";
      int int1 = (-620);
      // Undeclared exception!
      try { 
        Node.newString(int0, string0, int1, node3.FREE_CALL);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(118, 118, 3221);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isFunction();
      node1.isIn();
      node1.isSetterDef();
      node1.isEquivalentTo(node1);
      node0.getSourceOffset();
      node0.isCatch();
      node0.isStringKey();
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = new Node((-361));
      node0.setLength(38);
      node0.isComma();
      node0.addChildrenToFront(node0);
      node0.putIntProp(2665, Integer.MIN_VALUE);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      node0.isDebugger();
      node0.isOr();
      InputId inputId0 = new InputId("fTJ<]KS");
      node0.getBooleanProp(1472);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newString(")jy2)-", 1421, 1421);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8287);
      Node node1 = new Node(30, node0, node0, node0, node0, 4095, 2108);
      node1.isVar();
      node0.isVarArgs();
      node1.isNew();
      node1.getString();
      node0.cloneNode();
      String string0 = "LD@=F";
      node1.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node1.getCharno();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NEW 4095 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString(")jy2)-", 1421, 1421);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(44);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(8287);
      node0.isFromExterns();
      node0.isVar();
      node0.isVarArgs();
      node0.isNew();
      node0.getString();
      Node node1 = Node.newString(17, "com.google.common.collect.AbstractIterator", 8287, 30);
      node0.addChildrenToFront(node0);
      node0.addChildrenToFront(node1);
      node0.addChildrenAfter(node1, node1);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 16384);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(2847);
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isFromExterns();
      node0.isVar();
      node0.isVarArgs();
      node0.isNew();
      node0.getString();
      Node node1 = Node.newString(54, "!l',p3/['", 86, 50);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.addChildrenToFront(node0);
      node1.addChildrenAfter(node2, node0);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = null;
      Node node0 = new Node((-354), (Node[]) null);
      JSType jSType0 = null;
      // Undeclared exception!
      try { 
        JSType.toMaybeTemplatizedType(jSType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 85;
      Node node0 = new Node(118, (Node[]) null);
      int int1 = 45;
      Node node1 = null;
      try {
        node1 = new Node(int0, node0, node0, int1, node0.POST_FLAG);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newString(79, "u5z2^=@krCSgg`sQ'", 79, 79);
      node0.getQualifiedName();
      node0.getQualifiedName();
      Node node1 = node0.getNext();
      node0.removeChild((Node) null);
      boolean boolean0 = node1.isScript();
      // Undeclared exception!
      try { 
        node1.setOptionalArg(boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newString("7>uZaBVe!", (-902), 86);
      node0.setSourceEncodedPositionForTree(2881);
      InputId inputId0 = new InputId("fTJ<]KS");
      node0.isString();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3122));
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.valueOf();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-3128), nodeArray0);
      Node node1 = new Node(2342, node0, node0, node0, node0);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      int int0 = 4178;
      Node node0 = new Node(4178);
      Node[] nodeArray0 = new Node[3];
      Node node1 = new Node(125, node0, node0);
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node2 = new Node(43, nodeArray0, (-40), 12);
      Node node3 = new Node(int0, node0, node0, node0, node2);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "";
      Node node0 = null;
      String string1 = "\\U;I<K";
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = null;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      nodeArray0[4] = null;
      nodeArray0[5] = null;
      nodeArray0[6] = null;
      nodeArray0[7] = null;
      Node node1 = new Node(0, nodeArray0);
      // Undeclared exception!
      try { 
        node1.getInputId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node((-2786));
      nodeArray0[0] = node0;
      Node node1 = new Node(57, 15, 0);
      nodeArray0[1] = node1;
      Node node2 = Node.newString(1, "<#");
      nodeArray0[2] = node2;
      Node node3 = new Node((-2786), nodeArray0, (-5404), 47);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("<#");
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3122));
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.valueOf();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-3128), nodeArray0);
      Node node1 = new Node(2342, node0, node0, node0, node0);
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newString((String) null);
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node.newString((-257), (String) null);
      ErrorReporter errorReporter0 = null;
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node.newString(36, (String) null);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = Node.newString("i8.9u'C(Ac>(NnT-", 9, 9);
      Node node1 = new Node(0);
      node1.putProp(18, "i8.9u'C(Ac>(NnT-");
      node0.addChildToBack(node1);
      node0.setCharno(8388608);
      node0.isQuotedString();
      Node node2 = Node.newString(46, "i8.9u'C(Ac>(NnT-");
      Node node3 = node0.removeChildAfter(node2);
      node3.getJSDocInfo();
      node3.removeChildren();
      node3.getIntProp(node2.STATIC_SOURCE_FILE);
      node3.setQuotedString();
      // Undeclared exception!
      try { 
        node2.mayMutateGlobalStateOrThrow();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = Node.newString(611, "Y", 1213, 1848);
      node0.isQuotedString();
      node0.isNoSideEffectsCall();
      node0.isBreak();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("com.google.common.collect.AbstractIterator", 2, 2);
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 16384);
      node0.isNoSideEffectsCall();
      node0.isDelProp();
      node0.isNull();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newNumber((double) 91, 91, 91);
      Node node1 = new Node(91, node0, node0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("0x", false);
      simpleSourceFile0.getLineOffset(52);
      boolean boolean0 = node0.isEquivalentToShallow(node1);
      simpleSourceFile0.getLineOffset(39);
      simpleSourceFile0.getLineOffset(36);
      node1.setSourceEncodedPositionForTree(4095);
      simpleSourceFile0.getLineOffset(50);
      simpleSourceFile0.getLineOffset(37);
      node1.setVarArgs(true);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.addChildToBack(node0);
      node1.putProp(node0.DIRECTIVES, simpleSourceFile0);
      node0.addChildToFront(node1);
      node1.setIsSyntheticBlock(boolean0);
      // Undeclared exception!
      try { 
        node1.isOptionalArg();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node.extractLineno((-2943));
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = Node.newNumber(1046.791598447, 4, 1);
      node1.toString();
      node1.isDelProp();
      node0.isInstanceOf();
      Node node2 = Node.newNumber((double) 48, 4095, 4095);
      node2.removeChildAfter(node0);
      node2.addChildrenToFront(node0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node.newString("Y");
      Node node0 = Node.newNumber(1046.791598447, 4, 57);
      node0.setCharno(57);
      node0.toString();
      node0.isComma();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = new Node(31, node1, node1);
      Node node3 = Node.newString("");
      node3.mayMutateGlobalStateOrThrow();
      Node node4 = node1.copyInformationFromForTree(node0);
      node3.setWasEmptyNode(true);
      node0.addChildrenToBack(node3);
      node1.addChildrenToFront(node0);
      node4.isFromExterns();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedHashSet<JSType> linkedHashSet0 = new LinkedHashSet<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) linkedHashSet0);
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.removeChildAfter(node3);
      node2.isNull();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newNumber(2987.38155);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(",", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isArrayLit();
      simpleSourceFile0.getLineOffset(262144);
      Node node1 = new Node(48, node0, node0, node0, (-3003), 93);
      node0.mayMutateGlobalStateOrThrow();
      node1.isQuotedString();
      node0.checkTreeEqualsImpl(node1);
      node1.isUnscopedQualifiedName();
      Node node2 = node0.removeChildren();
      Node.newString((String) null);
      node0.setStaticSourceFile(simpleSourceFile0);
      node2.addChildAfter(node0, node0);
      String string0 = "";
      node1.srcrefTree(node0);
      node0.removeChildren();
      node2.getSourceFileName();
      // Undeclared exception!
      try { 
        node2.addSuppression(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = Node.newNumber(1046.791598447, 4, 57);
      node1.setCharno(57);
      node1.toString();
      node1.isDelProp();
      int int0 = Node.JSDOC_INFO_PROP;
      node0.isArrayLit();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = Node.newString("7>uZaBVe!", (-902), 86);
      Node node1 = new Node((-902), node0, node0, node0, node0);
      node1.isDebugger();
      node0.isOr();
      node1.setSourceEncodedPositionForTree(2881);
      InputId inputId0 = new InputId("com.google.common.collect.Maps$ImprovedAbstractMap");
      node0.getString();
      node1.checkTreeEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 16384);
      node0.isNoSideEffectsCall();
      node0.setLength(3029);
      Node.extractLineno(0);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newNumber(438.9858120244574);
      Node node1 = new Node(4095);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":Y(", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.getStaticSourceFile();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newNumber((-184.71413307793654), 118, 118);
      Node node1 = new Node(16, node0, node0);
      node1.copyInformationFrom(node0);
      node0.isEquivalentToTyped(node1);
      Node node2 = new Node(46, node0, node0, node0);
      int int0 = 118;
      node2.setSideEffectFlags(int0);
      // Undeclared exception!
      try { 
        node1.isNumber();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = new Node(54, 0, 54);
      node0.isThrow();
      node0.isSyntheticBlock();
      node0.setIsSyntheticBlock(false);
      Node node1 = new Node(30, node0, node0, node0, node0);
      node0.getIndexOfChild(node1);
      node1.isObjectLit();
      node0.isOnlyModifiesArgumentsCall();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      Node node1 = Node.newString(91, "Ordinal: ", 12, 48);
      node0.getSideEffectFlags();
      node1.getString();
      node1.isOr();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isGetterDef();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(79);
      node0.isOr();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E", 1595, 110);
      Node node1 = Node.newString("");
      node0.removeFirstChild();
      node0.isQualifiedName();
      node0.setString("");
      Node node2 = Node.newString("OvI'QsZIbW+~V|E", 2, 49);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.checkTreeEqualsImpl(node1);
      jSTypeRegistry0.getTypesWithProperty("!-$H9![OjhaX=sspI4");
      node2.getJSType();
      jSTypeRegistry0.getGreatestSubtypeWithProperty((JSType) null, "Not declared as a constructor");
      Node node3 = Node.newString(103, "x\">~!}S<,P||O");
      node3.isVarArgs();
      node2.isNew();
      node1.getString();
      Node node4 = node1.useSourceInfoIfMissingFrom(node0);
      node2.addChildrenToFront(node4);
      node1.addChildToBack(node0);
      node1.isVoid();
      Node.mergeLineCharNo(4, 4);
      node2.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      node_SideEffectFlags0.clearSideEffectFlags();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(33);
      node0.setLength(118);
      Node.extractLineno(1193);
      Node node1 = Node.newString(15, "ASSIGN_BITXOR", 49, 5128);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node1.getSourceOffset();
      double double0 = 379.6034378355644;
      int int0 = 103;
      Node node2 = Node.newNumber(double0, int0, node0.INFERRED_FUNCTION);
      node2.isGetterDef();
      int int1 = Node.EMPTY_BLOCK;
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1965, 40);
      node0.isVarArgs();
      node0.toString(false, false, false);
      node0.isIf();
      node0.isFromExterns();
      node0.getSourceFileName();
      node0.isNot();
      node0.isVar();
      node0.isVarArgs();
      Node node1 = Node.newNumber((double) 42);
      node1.getDouble();
      node1.isEquivalentToTyped(node0);
      node1.isNE();
      node1.getCharno();
      Node node2 = node1.getChildBefore(node0);
      node0.removeChild(node2);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.setPropertyJSDocInfo("Object#Key", (JSDocInfo) null);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) objectType0;
      jSTypeArray0[1] = (JSType) objectType0;
      jSTypeArray0[2] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.removeChildren();
      node0.isTry();
      node0.isQuotedString();
      node0.setSourceEncodedPositionForTree(67);
      node0.isScript();
      node0.hasMoreThanOneChild();
      Node.newNumber((double) 42, (-48), 30);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("");
      node3.mayMutateGlobalStateOrThrow();
      Node node4 = node1.copyInformationFromForTree(node0);
      node3.setWasEmptyNode(true);
      Node node5 = Node.newNumber(1.0, 55, 36);
      node1.addChildrenToFront(node0);
      node5.isFromExterns();
      node5.getSourceFileName();
      node5.isNot();
      node5.isVar();
      node5.isVarArgs();
      node3.isEquivalentToTyped(node3);
      node2.getDouble();
      node0.isEquivalentToTyped(node2);
      node2.isNE();
      node5.getCharno();
      node4.getChildBefore(node3);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newString("");
      int int0 = 0;
      node0.removeProp(0);
      node0.setSideEffectFlags(0);
      node0.setLineno(int0);
      // Undeclared exception!
      try { 
        node0.isOnlyModifiesThisCall();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(40);
      Node node1 = new Node(50, node0, node0, node0);
      node0.isCall();
      node0.setSideEffectFlags(57);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("", 1421, 16384);
      node0.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1204));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node0.setSideEffectFlags(node_SideEffectFlags2);
      node0.isDelProp();
      node0.isInstanceOf();
      // Undeclared exception!
      try { 
        node0.isDebugger();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      Node.newNumber(2131.612136);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = Node.newNumber((double) 43, 15, 31);
      node0.toString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      node1.setSideEffectFlags(node_SideEffectFlags0);
      // Undeclared exception!
      try { 
        node1.isDelProp();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = new Node(2281, (Node) null, (Node) null);
      int int0 = 1145;
      // Undeclared exception!
      try { 
        node0.setSourceEncodedPositionForTree(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = Node.newString((-490), "", 0, 0);
      Node node1 = new Node((-490), node0, node0, node0, 40, (-1059));
      node1.isGetElem();
      node1.removeProp(461845907);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      Node node1 = Node.newString((-2908), "com.google.common.collect.UnmodifiableIterator");
      node0.useSourceInfoFromForTree(node1);
      node0.isGetElem();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString("y7#SaJgyn");
      node0.isOptionalArg();
      node0.isWhile();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      SimpleErrorReporter.getMessage("Object#Element", (Object[]) null);
      double double0 = 801.42;
      // Undeclared exception!
      try { 
        Node.newNumber(double0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property Object#Element
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.isWhile();
      Node node2 = Node.newNumber((double) 4095, 29, 111);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.common.base.CharMatcher$4");
      node_FileLevelJsDocBuilder0.append("U");
      node1.isComma();
      node2.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString(57, "");
      int int0 = 0;
      String string0 = null;
      node0.getDouble();
      String string1 = "";
      int int1 = 0;
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(1416, "}(T+*", 536870912, 813);
      Node node1 = new Node(2, node0, node0, node0, node0);
      node1.getDouble();
      node1.hasOneChild();
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node((-1934));
      node0.removeFirstChild();
      node0.isCall();
      node0.setSideEffectFlags(52);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(54, 0, 54);
      boolean boolean0 = false;
      node0.setOptionalArg(false);
      node0.isThrow();
      node0.isSyntheticBlock();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-926));
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.setLength((-926));
      node0.getExistingIntProp((-1776));
      node0.setVarArgs(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = Node.newNumber(1046.791598447, 4, 57);
      node1.setCharno(57);
      node1.toString();
      node1.isDelProp();
      node0.getExistingIntProp(8);
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = new Node(54, 0, 54);
      node0.isThrow();
      node0.isSyntheticBlock();
      node0.setIsSyntheticBlock(false);
      node0.setLength((-958));
      node0.isLabelName();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      Node node0 = new Node(113);
      node0.isTrue();
      node0.setLength(113);
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isCatch();
      node0.isCatch();
      node0.getProp(4);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.wasEmptyNode();
      Node node1 = node0.cloneNode();
      node1.toStringTree();
      int int0 = 1576;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.createEnumType((String) null, node1, (JSType) null);
      String string0 = "";
      int int1 = (-551);
      int int2 = (-1203);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(3, 3, (-89));
      node0.getJSDocInfo();
      node0.wasEmptyNode();
      node0.getJSDocInfo();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = new Node((-972));
      node0.toStringTree();
      Node node1 = new Node(node0.DIRECT_EVAL, node0, node0, node0, node0, node0.JSDOC_INFO_PROP, node0.EMPTY_BLOCK);
      // Undeclared exception!
      try { 
        node1.isFunction();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -972
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newString(86, "7>uZaBVe!", (-733), (-893));
      Node node1 = new Node((-893), node0, node0, node0, node0);
      Node node2 = new Node((-733), node1, node1, node1);
      node2.isAssign();
      node1.hasChild(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node2.isCast();
      node0.checkTreeEquals(node2);
      node2.isFunction();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.TYPE_ERROR_FUNCTION_TYPE;
      jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      Node node0 = Node.newNumber((double) 1, 64, 0);
      node0.getSourceFileName();
      node0.isBreak();
      node0.isVar();
      node0.isVarArgs();
      node0.getDouble();
      Node node1 = new Node(148, node0, node0, node0, node0, 548, (-1773));
      Node node2 = new Node(54, 54, 4095);
      node1.checkTreeEquals(node2);
      node1.isNE();
      node1.isGetterDef();
      node0.isAssign();
      node1.getQualifiedName();
      node1.getInputId();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node(4059);
      nodeArray0[0] = node0;
      Node node1 = new Node(57, 15, (-13));
      nodeArray0[1] = node1;
      Node node2 = new Node(4059, nodeArray0, 16, 47);
      nodeArray0[1].isExprResult();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("Y");
      node0.toString();
      node0.getStaticSourceFile();
      node0.isAssign();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Y");
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node(4059);
      nodeArray0[0] = node0;
      Node node1 = new Node(57, 15, (-13));
      nodeArray0[1] = node1;
      Node node2 = Node.newString(1, "<#");
      nodeArray0[2] = node2;
      Node node3 = new Node(4059, nodeArray0, 16, 47);
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      Node.newString(1, ":Y(");
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(32, nodeArray0, (-2854), 0);
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newString("&=%X[De");
      node0.isQualifiedName();
      Node node1 = new Node(37, node0, node0, node0);
      Node.newString("&=%X[De");
      node1.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      simpleErrorReporter0.warning("5f", "Object#Element", 2133, (-829));
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.getDirectives();
      node0.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E", 1595, 110);
      Node node1 = Node.newString("");
      node0.removeFirstChild();
      node0.isQualifiedName();
      node0.setString("");
      Node node2 = Node.newString("OvI'QsZIbW+~V|E", 2, (-1145));
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      SimpleErrorReporter.getMessage("OvI'QsZIbW+~V|E", (Object[]) null);
      node0.checkTreeEqualsImpl(node1);
      String string0 = "!-$H9![OjhaX=ss\\pI4";
      jSTypeRegistry0.getTypesWithProperty(string0);
      JSType jSType0 = node2.getJSType();
      JSType jSType1 = jSTypeRegistry0.getGreatestSubtypeWithProperty(jSType0, jSType0.NOT_A_CLASS);
      jSType1.autoboxesTo();
      // Undeclared exception!
      try { 
        node2.setJSType(jSType1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property OvI'QsZIbW+~V|E
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node.newString(110, "(*");
      Node node0 = Node.newString("");
      node0.isFromExterns();
      node0.cloneTree();
      node0.isCast();
      node0.setString("incrdecr");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(956);
      node0.isUnscopedQualifiedName();
      node0.isOnlyModifiesThisCall();
      node0.setType(956);
      boolean boolean0 = true;
      InputId inputId0 = new InputId((String) null);
      inputId0.toString();
      inputId0.toString();
      node0.isFromExterns();
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.toString(true, true, true);
      node0.isInstanceOf();
      node0.isBreak();
      JSDocInfo jSDocInfo0 = null;
      try {
        jSDocInfo0 = new JSDocInfo();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 956
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newString("7>uZaBVe!", (-733), 86);
      Node node1 = new Node((-902), node0, node0, node0, node0);
      Node node2 = new Node((-733), node1, node1, node1);
      InputId inputId0 = new InputId("7>uZaBVe!");
      node0.setInputId(inputId0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node0.setType(98);
      node0.isSetterDef();
      node0.getIndexOfChild((Node) null);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newString(")jy2)-", 1421, 1398);
      Node node1 = new Node(1598, 1, 4095);
      Node node2 = node1.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(40);
      node0.isArrayLit();
      node0.isGetProp();
      node1.setSourceEncodedPositionForTree(32);
      node1.cloneTree();
      node1.toString(false, true, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isBreak();
      node1.isVoid();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.setPropertyJSDocInfo(".<l!2BpYGOd[LwaY", (JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isQualifiedName();
      Node node1 = new Node((-669), node0);
      node1.getBooleanProp(0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newNumber(801.4);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setAllFlags();
      Node node0 = Node.newString("");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType.toMaybeTemplatizedType((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node0, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      Node node1 = enumElementType0.getRootNode();
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newString("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.valueOf();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = new Node(32768, nodeArray0);
      Node node2 = new Node(node1.OPT_ARG_NAME, node1, nodeArray0[1], nodeArray0[1], node1);
      // Undeclared exception!
      try { 
        node2.cloneTree();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      immutableList0.forEach(consumer0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      nodeArray0[8] = node0;
      Node node1 = new Node(2, nodeArray0, 3000, 51);
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newString(150, "ynsIegIaa=.<=Y");
      Node node1 = new Node(150, node0, node0, node0, node0, 8, 47);
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isTry();
      node0.isQuotedString();
      node0.setSourceEncodedPositionForTree(50);
      node0.hasMoreThanOneChild();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node((-935), (-935), (-935));
      node0.isSwitch();
      node0.isTry();
      node0.isArrayLit();
      node0.isUnscopedQualifiedName();
      Node node1 = null;
      Node node2 = new Node(53, (Node) null, (Node) null, node0);
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = new Node(115, 124, 115);
      Node node1 = new Node(115, node0, node0, node0, (-847), 49);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isSwitch();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node2 = new Node(36);
      node2.isDec();
      node1.getCharno();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.QUOTED_PROP;
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(1093, node1, 0, 54);
      Node node4 = new Node(77);
      node4.isTry();
      node0.detachFromParent();
      node2.getChildCount();
      node0.isIn();
      node4.isGetProp();
      Node node5 = null;
      try {
        node5 = new Node(node2.SLASH_V);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      Node node0 = null;
      Node node1 = new Node((-2451), (Node) null, (Node) null, (Node) null);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node0);
      node0.getIntProp(2186);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
      node0.copyInformationFromForTree(node1);
      node0.isTry();
      node0.getChildCount();
      // Undeclared exception!
      try { 
        node0.isFunction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = Node.QUOTED_PROP;
      Node node0 = Node.newNumber(142.89598698838506);
      Node node1 = Node.newString(470, "");
      Node node2 = new Node((-673), node1, node1, node1, node1);
      node2.hasOneChild();
      node1.srcrefTree(node2);
      node2.mayMutateArguments();
      node0.getQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      node_NodeMismatch0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = new Node((-361));
      node0.setLength(38);
      node0.isComma();
      Node node1 = null;
      node0.addChildrenToFront((Node) null);
      int int0 = 2665;
      int int1 = Integer.MIN_VALUE;
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = new Node((-1240));
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = new Node((-361));
      node0.setLength(38);
      node0.isComma();
      Node node1 = null;
      node0.addChildrenToFront((Node) null);
      int int0 = 2665;
      int int1 = Integer.MIN_VALUE;
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int int0 = (-3583);
      Node node0 = new Node((-3583), (Node[]) null, (-3583), 64);
      Node node1 = new Node(int0, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.isOr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newNumber(419.13164836);
      Node node1 = Node.newNumber((double) 4095);
      node1.useSourceInfoFromForTree(node0);
      node0.removeChild(node1);
      // Undeclared exception!
      try { 
        node0.getStaticSourceFile();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node((-2786));
      nodeArray0[0] = node0;
      Node node1 = new Node(57, 15, 0);
      nodeArray0[1] = node1;
      Node node2 = Node.newString(1, "<#");
      nodeArray0[2] = node2;
      Node node3 = node1.setJSDocInfo((JSDocInfo) null);
      Node node4 = new Node(26);
      Node node5 = node4.copyInformationFromForTree(node1);
      node0.isQualifiedName();
      node2.siblings();
      node0.isUnscopedQualifiedName();
      Node node6 = new Node(38, node0, node4, node0, node3);
      Node node7 = node6.getLastSibling();
      node3.clonePropsFrom(node7);
      node6.getChildCount();
      node5.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      Node node1 = new Node(2);
      Node node2 = new Node(56, 55, 46);
      Node node3 = Node.newString(738, "com.google.common.collect.UnmodifiableIterator");
      Node node4 = node1.setJSDocInfo((JSDocInfo) null);
      Node node5 = node4.copyInformationFromForTree(node0);
      node2.isQualifiedName();
      node1.siblings();
      Node node6 = new Node(113, node5, node5, node2, node0);
      node4.getLastSibling();
      Node node7 = node6.clonePropsFrom(node3);
      node5.getChildCount();
      node7.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = Node.newNumber((double) 43, 15, 31);
      node0.toString();
      node0.getStaticSourceFile();
      node1.getChildCount();
      node1.getSourcePosition();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(39, 47, 12);
      node0.siblings();
      node0.getStaticSourceFile();
      Node node1 = new Node(39, node0, node0, 812, (-81));
      node1.isEquivalentToShallow(node0);
      node1.getBooleanProp((-171));
      node1.setSideEffectFlags(0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node0.putBooleanProp(40, true);
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-926));
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newNumber((double) 0, (-1), (-1));
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newString("i8.9u'C(Ac>(NnT-", 9, 9);
      Node node1 = new Node(55, (-1393), 118);
      node0.setOptionalArg(false);
      node0.isThrow();
      node1.isSyntheticBlock();
      node1.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-321));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node0.getSideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.setLength(64);
      node0.getExistingIntProp(15);
      boolean boolean0 = true;
      node0.setVarArgs(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.setPropertyJSDocInfo(".<l!2BpYGOd[LwaY", (JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isQualifiedName();
      Node node1 = new Node((-669), node0);
      node1.getInputId();
      node0.setInputId((InputId) null);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node((-1907), node0);
      node1.getInputId();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = new Node((-361));
      node0.setLength(38);
      node0.isComma();
      node0.setLength(38);
      Node.extractLineno(13);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      node0.getLastSibling();
      node0.isEmpty();
      node0.isLabelName();
      Node.extractCharno(53);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayDeque<JSType> arrayDeque0 = new ArrayDeque<JSType>();
      Iterator<JSType> iterator0 = arrayDeque0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node1 = new Node(39, node0, 36, 53);
      node1.isQuotedString();
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.setPropertyJSDocInfo(".<l!2BpYGOd[LwaY", (JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isQualifiedName();
      node0.setLength(1);
      Node node1 = new Node(40, node0, 37, 1775);
      node1.getExistingIntProp((-669));
      boolean boolean0 = false;
      node0.setVarArgs(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newString("7>uZaBVe!", (-733), 86);
      Node node1 = new Node((-902), node0, node0, node0, node0);
      node1.isDebugger();
      node0.isOr();
      node1.setSourceEncodedPositionForTree(2881);
      InputId inputId0 = new InputId("fTJ<]KS");
      node1.setInputId(inputId0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isThis();
      node0.addChildToBack(node0);
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.setAllFlags();
      Node node0 = Node.newString(126, "PjE(Q:~l!xWE@`}Jos", 126, 31);
      Node node1 = new Node(48, node0, node0, node0);
      node0.checkTreeEqualsImpl(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.getTypesWithProperty("iM5P2r>ZAI jB)Yo");
      node0.getJSType();
      JSType jSType0 = jSTypeRegistry0.getGreatestSubtypeWithProperty((JSType) null, "Not declared as a constructor");
      jSType0.autoboxesTo();
      node1.setJSType((JSType) null);
      node1.isOnlyModifiesArgumentsCall();
      node1.isTypeOf();
      node1.isDec();
      node1.getCharno();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isDebugger();
      node0.isOr();
      node0.isGetterDef();
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newNumber(419.13164836);
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node1.isOnlyModifiesArgumentsCall();
      node1.toString();
      node0.removeChild(node0);
      // Undeclared exception!
      try { 
        node0.addChildrenToBack(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newNumber((double) 40, 40, 40);
      node0.isFromExterns();
      node0.getSourceFileName();
      node0.isTypeOf();
      node0.getDouble();
      node0.isGetElem();
      node0.isDefaultCase();
      Node.newString((String) null);
      JSDocInfo jSDocInfo0 = null;
      try {
        jSDocInfo0 = new JSDocInfo();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = Node.newNumber((double) 31);
      int int0 = Node.EMPTY_BLOCK;
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newNumber((double) 46, 46, 46);
      Node node1 = node0.copyInformationFrom(node0);
      node0.isEquivalentToTyped(node0);
      Node node2 = new Node(47, node1, node1, node0, node0, 57, 53);
      node0.addChildAfter(node2, node2);
      // Undeclared exception!
      try { 
        node2.isString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(1265);
      node0.removeFirstChild();
      node0.isCall();
      node0.setSideEffectFlags(57);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newString("]TNF31lw'-N'm-44", 77, 77);
      node0.isNoSideEffectsCall();
      node0.setLength(77);
      Node.extractLineno(2);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      Node node1 = node0.getLastSibling();
      node1.setDouble(16);
      node0.isEmpty();
      // Undeclared exception!
      try { 
        node0.isLabelName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING ]TNF31lw'-N'm-44 77 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      node0.isGetElem();
      InputId inputId0 = new InputId("1e[VeC|zf");
      inputId0.toString();
      inputId0.toString();
      node0.siblings();
      inputId0.toString();
      inputId0.toString();
      node0.setInputId(inputId0);
      inputId0.toString();
      node0.removeProp((-5736));
      boolean boolean0 = node0.isFor();
      node0.addSuppression("InputId: 1e[VeC|zf");
      Node node1 = Node.newString("");
      node1.checkTreeEquals(node0);
      node1.getJSDocInfo();
      Node.extractLineno((-879));
      node0.getSourceOffset();
      Node node2 = Node.newString("");
      Node node3 = new Node(49, (Node[]) null, 37, 8);
      Node node4 = null;
      int int0 = (-580);
      Node node5 = new Node(int0, node4, node1, node2, node0);
      node2.setOptionalArg(boolean0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      node0.isGetElem();
      InputId inputId0 = new InputId("1e[VeC|zf");
      inputId0.toString();
      inputId0.toString();
      node0.siblings();
      inputId0.toString();
      inputId0.toString();
      node0.setInputId(inputId0);
      inputId0.toString();
      node0.removeProp((-5736));
      node0.isFor();
      node0.addSuppression("InputId: 1e[VeC|zf");
      Node node1 = Node.newString("Y");
      node1.checkTreeEquals(node0);
      node1.getJSDocInfo();
      Node.extractLineno((-879));
      node0.getSourceOffset();
      Node node2 = Node.newString("Node tree inequality:\nTree1:\nSTRING Y\n\n\nTree2:\nSTRING com.google.common.collect.UnmodifiableIterator [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000006] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004]\n\n\nSubtree1: STRING Y\n\n\nSubtree2: STRING com.google.common.collect.UnmodifiableIterator [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000006] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004]\n", 57, 40);
      node2.setSourceFileForTesting("InputId: 1e[VeC|zf");
      node2.isNoSideEffectsCall();
      node2.setQuotedString();
      node2.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(31);
      Node node1 = new Node(48, node0, node0, node0, node0, 113, 51);
      node0.isFunction();
      Node node2 = new Node(154, 30, 54);
      node2.isFor();
      node2.isComma();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = Node.newString("", (-733), 1353);
      node0.isDelProp();
      node0.isName();
      Node node1 = node0.cloneTree();
      node1.isQuotedString();
      node1.setSourceEncodedPositionForTree(0);
      node1.isEquivalentTo(node1);
      node1.getIndexOfChild(node0);
      node1.isObjectLit();
      node1.siblings();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      int int0 = Node.REFLECTED_OBJECT;
      Node node0 = Node.newNumber((double) 57);
      node0.putIntProp(4313, 29);
      node0.setString((String) null);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(node0.DECR_FLAG);
      int int1 = Node.EMPTY_BLOCK;
      node0.isStringKey();
      // Undeclared exception!
      try { 
        node0.isDec();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 4313
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = Node.newString(")jy2)-", 1421, 1421);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(42);
      node0.isSetterDef();
      node0.isNew();
      Node node1 = Node.newString("com.google.common.collect.AbstractIterator");
      node1.isInc();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isDefaultCase();
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(43);
      node1.isArrayLit();
      node1.isGetProp();
      node0.setCharno(36);
      node1.setSourceEncodedPositionForTree(2965);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isBreak();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(3221, 3221, 3221);
      Node node1 = node0.copyInformationFromForTree(node0);
      node1.isIn();
      node1.isSetterDef();
      node1.isEquivalentTo(node1);
      int int0 = Node.REFLECTED_OBJECT;
      node0.isDo();
      node1.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = new Node(113, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isFunction();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isInc();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.setSourceEncodedPosition(0);
      node0.isDefaultCase();
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.mayMutateArguments();
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node0.isEquivalentTo(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-332));
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      Node node2 = Node.newString("Object#Key");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Object#Element");
      node0.isEquivalentToShallow(node1);
      simpleErrorReporter0.warning("Object#Element", "Object#Element", (-299), 99);
      node1.isFalse();
      node1.srcrefTree(node2);
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3122));
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.valueOf();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-3128), nodeArray0);
      Node node1 = new Node(2342, node0, node0, node0, node0);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      node0.isGetElem();
      InputId inputId0 = new InputId("1e[VeC|zf");
      inputId0.toString();
      inputId0.toString();
      node0.siblings();
      inputId0.toString();
      inputId0.toString();
      node0.setInputId(inputId0);
      inputId0.toString();
      node0.removeProp((-5736));
      node0.isFor();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.setSourceEncodedPositionForTree(53);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = new Node(2263, (Node) null);
      node0.isString();
      // Undeclared exception!
      try { 
        node0.cloneNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.setPropertyJSDocInfo(".<l!2BpYGOd[LwaY", (JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(47, "com.google.common.collect.UnmodifiableIterator", 51, 1);
      node1.getDouble();
      node0.isEquivalentToTyped(node1);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.addChildrenToFront(node2);
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E");
      Node node1 = new Node(37, node0, node0, 46, 29);
      node0.mayMutateGlobalStateOrThrow();
      node1.isTypeOf();
      node1.getDouble();
      // Undeclared exception!
      try { 
        node1.isLabelName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CALL 46 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      node0.isGetElem();
      InputId inputId0 = new InputId("1e[VeC|zf");
      inputId0.toString();
      Node node1 = Node.newString(39, "1e[VeC|zf", 118, (-2609));
      node1.getQualifiedName();
      node0.getQualifiedName();
      Node node2 = node0.getNext();
      node0.removeChild((Node) null);
      node1.isScript();
      int int0 = (-465);
      Node node3 = new Node(int0, node1, node2, node0.SLASH_V, node0.ORIGINALNAME_PROP);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        node3.setOptionalArg(boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node.newString(470, "");
      node2.setJSDocInfo((JSDocInfo) null);
      Node node3 = new Node(4095);
      Node node4 = node0.copyInformationFromForTree(node2);
      node4.isQualifiedName();
      node2.siblings();
      node4.isUnscopedQualifiedName();
      Node node5 = new Node(57, node3, node4, node2, node3);
      node3.getLastSibling();
      node2.getChildCount();
      node3.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newString("7>uZaBVe!", (-902), 86);
      Node node1 = new Node((-902), node0, node0, node0, node0);
      node1.isDebugger();
      node0.isOr();
      node1.setSourceEncodedPositionForTree(2881);
      InputId inputId0 = new InputId("fTJ<]KS");
      node0.getString();
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newString("7>uZaBVe!", (-733), 86);
      Node node1 = new Node((-902), node0, node0, node0, node0);
      Node node2 = new Node((-733), node1, node1, node1);
      node2.isAssign();
      node2.putIntProp((-1598), 3779);
      node2.isString();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.setPropertyJSDocInfo(".<l!2BpYGOd[LwaY", (JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = Node.newString(47, "com.google.common.collect.UnmodifiableIterator", 51, 1);
      node0.getString();
      Node node2 = Node.newNumber((double) node1.INFERRED_FUNCTION);
      double double0 = 772.5217206;
      Node.newNumber(double0, node2.FLAG_LOCAL_RESULTS, node0.EMPTY_BLOCK);
      double double1 = 0.0;
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node1 = new Node(35, node0, node0, node0, node0, 152, 54);
      node1.toString(false, false, false);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newString(103, "", 112, 112);
      Node node1 = new Node(57, node0, node0, node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.mayMutateArguments();
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node0.isEquivalentTo(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-332));
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      Node.newString("Object#Key");
      node1.isFalse();
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = Node.newNumber((double) 43, 15, 31);
      node0.addChildrenToBack(node1);
      node0.addChildrenToFront(node1);
      // Undeclared exception!
      try { 
        node0.isFromExterns();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      node0.isGetElem();
      InputId inputId0 = new InputId("1e[VeC|zf");
      inputId0.toString();
      inputId0.toString();
      node0.siblings();
      inputId0.toString();
      inputId0.toString();
      node0.setInputId(inputId0);
      inputId0.toString();
      node0.removeProp((-5736));
      node0.isFor();
      node0.isName();
      node0.setSideEffectFlags((-307));
      node0.hasChildren();
      node0.mayMutateGlobalStateOrThrow();
      node0.isName();
      // Undeclared exception!
      try { 
        node0.isInstanceOf();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isThis();
      node0.addChildToBack(node0);
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 113, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isIn();
      node1.isNew();
      node0.isOnlyModifiesThisCall();
      Node node2 = new Node(38);
      node1.isTry();
      node1.isCatch();
      node2.isQuotedString();
      node2.isName();
      node1.hasChild(node2);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      node0.isGetElem();
      node0.siblings();
      node0.removeProp(51);
      node0.isFor();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = jSTypeRegistry1.createOptionalParameters(jSTypeArray0);
      node0.isEquivalentToTyped(node1);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.addChildrenToFront(node2);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-926));
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newNumber((double) 0, (-1), (-1));
      Node node1 = Node.newNumber(0.0);
      node0.addChildrenAfter(node1, node1);
      node0.isNull();
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(505, nodeArray0);
      Node node1 = new Node(505, node0);
      node1.isSyntheticBlock();
      node1.addChildrenAfter(node0, node0);
      Node.newNumber((double) node0.FREE_CALL);
      double double0 = 2771.2854133737;
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newString("PWS)xOLNI|a>l-x;<'");
      node0.getSideEffectFlags();
      node0.isNE();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
      node1.getDirectives();
      // Undeclared exception!
      try { 
        node1.getJsDocBuilderForNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      node0.getSourceFileName();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.isVarArgs();
      node0.getIntProp(0);
      Node node1 = new Node(53, node0, 47, (-56));
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node2.setSideEffectFlags(node_SideEffectFlags1);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(47, "", 93, 108);
      Node node2 = Node.newString(42, "");
      node1.isThis();
      node2.addChildToBack(node0);
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = Node.newString("null");
      Node node1 = new Node(93, node0, node0, node0, node0, 30, 39);
      Node node2 = new Node(273, node1, node0, node1, 49, 47);
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      node0.isGetElem();
      InputId inputId0 = new InputId("1e[VeC|zf");
      inputId0.toString();
      Node node1 = Node.newString("com.google.common.collect.UnmodifiableIterator", 2, 0);
      Node node2 = new Node(48, node0, node0, node0, node1);
      Node node3 = new Node(47, node2, node0, node0);
      node3.isAssign();
      int int0 = 823;
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newNumber((-184.71413307793654), 118, 118);
      Node node1 = new Node(16, node0, node0);
      node1.copyInformationFrom(node0);
      Node node2 = new Node(46, node0, node0, node0);
      int int0 = 118;
      node2.setSideEffectFlags(int0);
      // Undeclared exception!
      try { 
        node1.isNumber();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      node0.getSideEffectFlags();
      node0.isLabelName();
      node0.isString();
      Node node1 = Node.newString(".[:");
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newString(86, "7>uZaBVe!", (-733), (-889));
      node0.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      JSType[] jSTypeArray0 = new JSType[0];
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeArray0);
      jSTypeRegistry0.createFunctionType(jSType0, false, jSTypeArray0);
      node1.isVarArgs();
      node0.getIntProp(4095);
      Node node2 = new Node(3290, node1, 0, 31);
      node2.getStaticSourceFile();
      node0.setQuotedString();
      node0.isLabelName();
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newString("PWS)xOLNI|a>l-x;<'");
      node0.getSideEffectFlags();
      node0.isNE();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      simpleErrorReporter0.warning("LT", "Object#Key", 31, (-872));
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      node0.setJSType(jSType0);
      node0.isString();
      node0.putBooleanProp(39, false);
      node0.setSourceFileForTesting((String) null);
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = new Node((-669));
      Node node1 = new Node(38, 38, 1187);
      node0.setString("com.google.common.collect.UnmodifiableIterator");
      String string0 = "698(MVw`K{xil";
      int int0 = (-1);
      Node.newString(string0, int0, node0.LAST_PROP);
      // Undeclared exception!
      try { 
        node0.getDirectives();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -669
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.REFLECTED_OBJECT;
      Node node1 = Node.newNumber((double) 2);
      node0.putIntProp(0, (-544));
      node1.setString((String) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node1.COLUMN_MASK);
      int int1 = Node.EMPTY_BLOCK;
      // Undeclared exception!
      try { 
        node0.isStringKey();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 2.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("");
      node3.mayMutateGlobalStateOrThrow();
      Node node4 = node1.copyInformationFromForTree(node0);
      node3.setWasEmptyNode(true);
      node0.addChildrenToBack(node3);
      Node node5 = Node.newNumber(1.0, 55, 36);
      node1.addChildrenToFront(node0);
      node2.copyInformationFrom(node4);
      node5.isFromExterns();
      node5.isNot();
      node5.isVar();
      node5.isVarArgs();
      node2.isNew();
      node2.getDouble();
      node0.isEquivalentToTyped(node2);
      node3.useSourceInfoIfMissingFrom(node4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node5.setSideEffectFlags(node_SideEffectFlags1);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      Node node1 = new Node(37, node0, node0);
      node1.removeProp(152);
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      int int0 = Node.QUOTED_PROP;
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node.newString(470, "");
      Node node3 = node2.setJSDocInfo((JSDocInfo) null);
      Node node4 = new Node(4095);
      Node node5 = node0.copyInformationFromForTree(node2);
      node5.isQualifiedName();
      node2.siblings();
      node3.isGetProp();
      Node node6 = new Node(57, node4, node5, node2, node4);
      node1.getBooleanProp(2918);
      node6.addChildToFront(node5);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = Node.newNumber((double) 132);
      node0.getSideEffectFlags();
      Node node1 = new Node(132, node0, node0, node0, node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.type = 29;
      node1.addChildToFront(node0);
      JSDocInfo jSDocInfo0 = node1.getJSDocInfo();
      // Undeclared exception!
      try { 
        node0.setJSDocInfo(jSDocInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      node0.isVarArgs();
      node0.getIntProp((-54));
      node0.isQualifiedName();
      node0.siblings();
      node0.isGetProp();
      Node node1 = new Node(44, node0, node0, node0, node0);
      node1.getBooleanProp(100);
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.setPropertyJSDocInfo("com.google.javascript.rhino.Node$AncestorIterable", (JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isDebugger();
      node0.isOr();
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$AncestorIterable");
      Node node1 = node0.getLastSibling();
      node1.getChildCount();
      node1.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.setAllFlags();
      Node.extractLineno(31);
      Node node0 = Node.newString(0, "r*(u<^`4c*", 0, (-1033));
      node0.getSourceOffset();
      Node.newString("*#EtH");
      Node node1 = new Node(39, (Node[]) null, 4095, (-1009));
      Node node2 = null;
      Node node3 = new Node(node1.SLASH_V, node2, node1, node1, node1);
      boolean boolean0 = false;
      node1.setOptionalArg(boolean0);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      node1.copyInformationFromForTree(node0);
      Node node2 = Node.newString("");
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = node1.copyInformationFromForTree(node0);
      node2.setWasEmptyNode(true);
      node0.addChildrenToBack(node2);
      Node node4 = new Node(37, node3, node1, node2);
      node2.isAssign();
      int int0 = 32;
      int int1 = 1583;
      // Undeclared exception!
      try { 
        node1.putIntProp(int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node node0 = Node.newString("");
      Node node1 = new Node(30, node0, node0, node0, node0, 0, 4095);
      int int0 = 132;
      Node node2 = new Node(51, node0, 14, 31);
      int int1 = (-317);
      Node node3 = new Node(int0, node1, node2, int1, node1.SIDE_EFFECTS_FLAGS_MASK);
      int int2 = Node.DECR_FLAG;
      // Undeclared exception!
      try { 
        node3.isAdd();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString("7>uZaBVe!", (-733), 86);
      Node node1 = new Node((-902), node0, node0, node0, node0);
      Node.newNumber((double) 48, 105, 113);
      Node node2 = new Node(8388589, node0);
      node1.addChildrenToFront(node2);
      int int0 = 50;
      Node[] nodeArray0 = null;
      int int1 = 1919;
      int int2 = 685;
      Node node3 = new Node(int0, nodeArray0, int1, int2);
      // Undeclared exception!
      try { 
        node3.isFromExterns();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = new Node(31);
      Node node1 = new Node(792, node0, node0, node0, node0, 29, 31);
      node1.isFunction();
      node0.isAdd();
      Node node2 = Node.newString("beY", 49, 56);
      node2.isNoSideEffectsCall();
      Node node3 = new Node(53, node0);
      node3.isNew();
      node2.isOnlyModifiesThisCall();
      node0.isCase();
      // Undeclared exception!
      try { 
        node3.isNE();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newNumber(418.39211015176534);
      Node.newNumber((double) 57);
      node0.getStaticSourceFile();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      node0.getSideEffectFlags();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      node0.isGetterDef();
      node0.isCast();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newString(86, "7>uZaBVe!", (-733), (-889));
      Node node1 = new Node((-889), node0, node0, node0, node0);
      Node node2 = new Node((-733), node1, node1, node1);
      node2.isAssign();
      node1.hasChild(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = Node.newNumber(419.13164836);
      Node node1 = Node.newNumber((double) 4095);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.getJsDocBuilderForNode();
      node0.removeChild(node1);
      int int0 = (-28);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = Node.newString(470, "");
      JSDocInfo jSDocInfo0 = null;
      node1.setJSDocInfo((JSDocInfo) null);
      Node node3 = new Node(4095);
      Node node4 = node0.copyInformationFromForTree(node1);
      node4.isQualifiedName();
      node1.replaceChild(node0, node3);
      Node[] nodeArray0 = null;
      int int0 = 26;
      Node node5 = new Node(node0.OPT_ARG_NAME, nodeArray0, node2.INCRDECR_PROP, int0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = null;
      try {
        node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newString(8, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isTrue();
      node0.isVar();
      node0.isVarArgs();
      node0.isSyntheticBlock();
      node0.getString();
      Node node1 = Node.newString(54, "!l',p3/['", 86, 50);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      node1.addChildrenToFront(node0);
      node1.addChildrenAfter(node2, node0);
      node2.isCast();
      node2.replaceChild(node0, node0);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newNumber(2928.684067315405);
      Node node1 = new Node(54, node0, node0, node0);
      Node node2 = new Node(3453, node1, node0, 52, 37);
      node2.cloneTree();
      Set<String> set0 = null;
      // Undeclared exception!
      try { 
        node2.setDirectives(set0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = Node.newNumber((double) 8232);
      Node node1 = new Node(8232, node0, node0, 414, 30);
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = new Node(36, node0, node0);
      node1.isFunction();
      Node node2 = new Node(1, 51, 1);
      node1.isLabelName();
      Node node3 = new Node((-446), node0, node1, 48, 15);
      node3.isLabelName();
      // Undeclared exception!
      try { 
        node3.isComma();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = new Node((-935), (-935), (-935));
      node0.isWith();
      node0.isTry();
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = null;
      Node node2 = new Node(53, (Node) null, (Node) null, node0);
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isThis();
      node0.addChildToBack(node0);
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("");
      node3.mayMutateGlobalStateOrThrow();
      node1.copyInformationFromForTree(node0);
      node3.setWasEmptyNode(true);
      node0.addChildrenToBack(node3);
      Node node4 = Node.newNumber(1.0, 55, 36);
      node1.addChildrenToFront(node0);
      node4.isFromExterns();
      node4.getSourceFileName();
      node4.isNot();
      node4.isVar();
      node4.isVarArgs();
      node3.isEquivalentToTyped(node3);
      node2.getDouble();
      node0.isEquivalentToTyped(node2);
      node2.isNE();
      node4.isParamList();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "CharMatcher.JAVA_LETTER_OR_DIGIT";
      Node node0 = Node.newString("CharMatcher.JAVA_LETTER_OR_DIGIT");
      node0.isOnlyModifiesThisCall();
      node0.getQualifiedName();
      node0.isFunction();
      Node node1 = new Node(43, node0, node0, node0, 12, 39);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("CharMatcher.JAVA_LETTER_OR_DIGIT", false);
      simpleSourceFile0.getLineOffset(39);
      simpleSourceFile0.getLineOffset(38);
      node1.setStaticSourceFile(simpleSourceFile0);
      node1.getSourceFileName();
      node0.replaceChildAfter(node1, node1);
      int int0 = (-3642);
      // Undeclared exception!
      try { 
        node0.setLineno(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isAdd();
      node0.isQuotedString();
      Node node1 = Node.newNumber((double) 4, 29, 37);
      node0.toString();
      node0.getStaticSourceFile();
      node0.isParamList();
      node1.getSourceFileName();
      Node node2 = Node.newString("CharMatcher.INVISIBLE", 124, 29);
      Node node3 = new Node(42, node2, node2);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node4.isComma();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = new Node(221, (Node) null, (Node) null, 110, 221);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = new Node(54, 0, 54);
      node0.setString("8+_k|+");
      boolean boolean0 = false;
      node0.setOptionalArg(boolean0);
      // Undeclared exception!
      try { 
        node0.isThrow();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 54
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.setAllFlags();
      Node node0 = Node.newString(126, "PjE(Q:~l!xWE@`}Jos", 126, 31);
      Node node1 = new Node(48, node0, node0, node0);
      node0.checkTreeEqualsImpl(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isEquivalentTo(node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.getTypesWithProperty("iM5P2r>ZAI jB)Yo");
      node0.getJSType();
      JSType jSType0 = jSTypeRegistry0.getGreatestSubtypeWithProperty((JSType) null, "Not declared as a constructor");
      jSType0.autoboxesTo();
      node1.setJSType((JSType) null);
      node1.isOnlyModifiesArgumentsCall();
      node1.isTypeOf();
      node1.isDec();
      node1.getCharno();
      node0.isFalse();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node((-2786));
      nodeArray0[0] = node0;
      Node node1 = new Node(57, 15, 0);
      nodeArray0[1] = node1;
      Node node2 = Node.newString(1, "<#");
      nodeArray0[2] = node2;
      Node node3 = node1.setJSDocInfo((JSDocInfo) null);
      Node node4 = node2.copyInformationFromForTree(node1);
      node2.siblings();
      Node node5 = new Node(38, node0, node2, node0, node3);
      Node node6 = node5.getLastSibling();
      node3.clonePropsFrom(node6);
      node5.getChildCount();
      node4.getSourcePosition();
      node6.isStringKey();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3122));
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.valueOf();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-3128), nodeArray0);
      Node node1 = new Node(2342, node0, node0, node0, node0);
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isFunction();
      Node node2 = new Node(154, 30, 54);
      node2.isStringKey();
      node1.isDec();
      node0.addChildBefore(node2, node2);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = new Node((-627), node0, 113, 4095);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isTry();
      node2.getChildCount();
      node0.isFunction();
      node1.isIn();
      node2.isGetProp();
      Node node3 = new Node(16384);
      Node node4 = node1.removeFirstChild();
      node0.removeProp(103);
      node2.addChildToBack(node3);
      node4.getString();
      node4.isAssign();
      node3.isVar();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = Node.newString("y7#SaJ+yn");
      node0.isWhile();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newNumber(801.42);
      node1.getJSDocInfo();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "y7#SaJ+yn");
      node0.addChildrenToBack(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = node0.clonePropsFrom(node1);
      node2.copyInformationFromForTree(node1);
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newString("7>uZaBVe!", (-733), 86);
      node0.isVarArgs();
      node0.getIntProp(56);
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newString("U");
      Node node4 = new Node(39, node2, node3, node1, node1);
      node4.getLastSibling();
      node2.clonePropsFrom(node0);
      Node node5 = node4.removeFirstChild();
      node3.removeProp(53);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node6 = jSTypeRegistry0.createOptionalParameters((JSType[]) null);
      node6.addChildToBack(node4);
      node5.getString();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E");
      Node node1 = Node.newString(",z", 31, (-2096));
      node1.addChildrenToBack(node0);
      node1.removeChild(node0);
      node0.isString();
      Node.newString(",z", (-2608), 39);
      node0.isNoSideEffectsCall();
      node1.isNew();
      node1.isOnlyModifiesThisCall();
      node0.isCase();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      Node node1 = new Node(1, 16, 579);
      Node node2 = Node.newString((-2622), "com.google.common.collect.RegularImmutableMap");
      Node node3 = node0.setJSDocInfo((JSDocInfo) null);
      Node node4 = node1.copyInformationFromForTree(node2);
      Node node5 = new Node((-926), node0);
      node5.isQualifiedName();
      node3.siblings();
      Node node6 = new Node(8, node2, node2, node2, node4);
      Node node7 = node5.getLastSibling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Iterator<NoObjectType> iterator0 = (Iterator<NoObjectType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      ImmutableList<JSType> immutableList1 = immutableList0.reverse();
      ImmutableList<JSType> immutableList2 = immutableList1.subList(12, 4095);
      int int0 = 55;
      ImmutableList<JSType> immutableList3 = immutableList2.subList(int0, node7.VAR_ARGS_NAME);
      ImmutableList<JSType> immutableList4 = immutableList3.subList(node5.FLAG_THIS_UNMODIFIED, node0.SIDE_EFFECTS_FLAGS_MASK);
      Node node8 = jSTypeRegistry0.createParameters((List<JSType>) immutableList4);
      node2.clonePropsFrom(node8);
      // Undeclared exception!
      try { 
        node0.getChildCount();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // start index (12) must not be greater than size (0)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      node0.isGetElem();
      InputId inputId0 = new InputId("com.google.common.collect.UnmodifiableIterator");
      inputId0.toString();
      Node node1 = Node.newNumber((-1816.378));
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = new Node(2);
      Node node3 = new Node((-1847), 32, 50);
      Node node4 = new Node(31, node2, node3, 57, (-926));
      Node node5 = new Node(35, node3, node4, node4, (-270), 11);
      node5.cloneTree();
      Node node6 = node3.getLastChild();
      node4.setQuotedString();
      node6.setDouble(node5.LAST_PROP);
      node1.isFunction();
      node1.getLength();
      node4.isEmpty();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      Node node0 = new Node((-3565), (-3565), 761);
      Node node1 = new Node((-368), node0, node0, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node0.isTry();
      node1.isFunction();
      Node node3 = new Node(0, node1, node2, node1, node0);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node node0 = Node.newNumber((-2523.6722), 31, 55);
      Node node1 = new Node((-2121), node0, 2, 4095);
      Node node2 = new Node(31, node1, node1, node1, node0);
      int int0 = 57;
      int int1 = 302;
      Node node3 = new Node(int1, node2, node2);
      int int2 = 15;
      int int3 = 1931;
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newString("&aq ?`", 527, 11);
      Node node1 = new Node(2035, node0, node0);
      Node node2 = new Node(2579, node1);
      Node node3 = new Node(2147483645, node2, node1, node2, node1);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString("Y");
      node0.getStaticSourceFile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node1 = Node.newNumber(2131.612136);
      node1.addChildToFront(node0);
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node.newNumber(142.89598698838506);
      Node node0 = new Node(47, 2, 29);
      Node node1 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      Node node2 = new Node(31, node0, node0);
      node2.addChildrenToFront(node1);
      node0.isFromExterns();
      node1.getSourceFileName();
      node0.isVar();
      node0.isVarArgs();
      Node.newNumber((double) 56);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getIntProp(51);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("");
      node3.mayMutateGlobalStateOrThrow();
      Node node4 = node1.copyInformationFromForTree(node0);
      node3.setWasEmptyNode(true);
      node0.addChildrenToBack(node3);
      Node node5 = Node.newNumber(1.0, 55, 36);
      node1.addChildrenToFront(node0);
      node5.isFromExterns();
      node5.isNot();
      node5.isVar();
      node5.isVarArgs();
      node2.isNew();
      node2.getDouble();
      node0.isEquivalentToTyped(node2);
      Node node6 = node4.useSourceInfoIfMissingFrom(node5);
      node1.addChildrenToFront(node4);
      node6.getAncestor(47);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.setPropertyJSDocInfo(".<l!2BpYGOd[LwaY", (JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = Node.newString(47, "com.google.common.collect.UnmodifiableIterator", 51, 1);
      node1.setDouble((-929.4608607197844));
      node1.isFunction();
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newNumber((-650.7429308));
      Node node1 = Node.newString(40, "");
      Node node2 = new Node(56);
      node0.getSourceOffset();
      node1.setDouble((-2419.098842));
      node1.getAncestor(node2.DIRECT_EVAL);
      node0.isGetterDef();
      int int0 = null;
      try {  
      int0 = Node.JSDOC_INFO_PROP;
      } catch(UnsupportedOperationException e) {}
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.setAllFlags();
      Node node0 = Node.newString(126, "PjE(Q:~l!xWE@`}Jos", 126, 31);
      Node node1 = new Node(48, node0, node0, node0);
      node0.checkTreeEqualsImpl(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.getTypesWithProperty("iM5P2r>ZAI jB)Yo");
      node0.getJSType();
      JSType jSType0 = jSTypeRegistry0.getGreatestSubtypeWithProperty((JSType) null, "Not declared as a constructor");
      jSType0.autoboxesTo();
      node1.setJSType((JSType) null);
      node1.isOnlyModifiesArgumentsCall();
      node1.isTypeOf();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.addChildrenToFront(node2);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.QUOTED_PROP;
      node0.isSyntheticBlock();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = Node.newString(470, "");
      node1.addChildrenToFront(node0);
      node0.isVar();
      node1.addChildAfter(node2, node0);
      node1.getType();
      node1.isCatch();
      node2.addChildToBack(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      // Undeclared exception!
      try { 
        node_SideEffectFlags2.setThrows();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 16384);
      node0.isDelProp();
      node0.isNull();
      Node node1 = node0.cloneTree();
      node1.isScript();
      node1.addChildToBack(node0);
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeRegistry0.declareType("]TNF31lw'-N'm-44", objectType0);
      jSTypeRegistry0.getObjectIndexKey();
      objectType0.setPropertyJSDocInfo(".<l!2BpYGOd[LwaY", (JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(32, 51, 43);
      node1.getDouble();
      node0.isEquivalentToTyped(node1);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.isName();
      node1.addChildrenToFront(node2);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 16384);
      node0.isNoSideEffectsCall();
      node0.setLength(3033);
      Node.extractLineno(0);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString("]TNF31lw'-N'm-44", 77, 77);
      node0.isNoSideEffectsCall();
      Node.extractLineno(2);
      node0.isSetterDef();
      node0.getSourceOffset();
      node0.getLastSibling();
      node0.isEmpty();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 16384);
      node0.isNoSideEffectsCall();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.setDirectives(treeSet0);
      node0.isDelProp();
      node0.isNull();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning((String) null, (String) null, 2195, 2195);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = new Node(2195);
      node0.isFunction();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      Node node0 = new Node(118, 3219, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isFunction();
      node0.isUnscopedQualifiedName();
      node1.isEmpty();
      node1.checkTreeEqualsImpl(node0);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2829));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags6.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags8.setAllFlags();
      node_SideEffectFlags8.setThrows();
      node_SideEffectFlags7.setAllFlags();
      node_SideEffectFlags4.setAllFlags();
      Node node0 = Node.newString(126, "PjE(Q:~l!xWE@`}Jos", 54, (-2326));
      Node node1 = new Node(36, node0, node0, node0);
      node1.checkTreeEqualsImpl(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.getTypesWithProperty("PjE(Q:~l!xWE@`}Jos");
      node1.getJSType();
      JSType jSType0 = jSTypeRegistry0.getGreatestSubtypeWithProperty((JSType) null, "Named type with empty name component");
      jSType0.autoboxesTo();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, node0);
      node1.setJSType(functionType0);
      node1.isOnlyModifiesArgumentsCall();
      node0.isTypeOf();
      node0.isDec();
      node0.getCharno();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.setPropertyJSDocInfo(".<l!2BpYGOd[LwaY", (JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      objectType0.toString();
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = Node.newString(47, "com.google.common.collect.UnmodifiableIterator", 51, 1);
      node1.getDouble();
      node0.isEquivalentToTyped(node1);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.isName();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // REGEXP com.google.common.collect.UnmodifiableIterator 51 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 16384);
      node0.isSetterDef();
      node0.setLength(3033);
      Node.extractLineno(0);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      Node node1 = node0.getLastSibling();
      node1.addChildToBack(node0);
      node1.getLength();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("");
      node3.mayMutateGlobalStateOrThrow();
      node1.copyInformationFromForTree(node0);
      node3.setWasEmptyNode(true);
      node0.addChildrenToBack(node3);
      Node node4 = Node.newNumber(1.0, 55, 36);
      node1.addChildrenToFront(node0);
      node4.isFromExterns();
      Node.newString("", 16, 16);
      node4.getSourceFileName();
      node3.clonePropsFrom(node0);
      node4.isNot();
      node4.isVar();
      node4.isVarArgs();
      node3.isEquivalentToTyped(node3);
      node2.getDouble();
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113);
      Node node1 = new Node((-627), node0, 113, 4095);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isTry();
      node2.getStaticSourceFile();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) stack0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-4332));
      Node node1 = new Node((-787), node0, node0, node0, node0);
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node0.isDelProp();
      node1.isInstanceOf();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -787
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.QUOTED_PROP;
      node0.isSyntheticBlock();
      Node node1 = Node.newString(470, "");
      node0.addChildrenToFront(node0);
      node0.isVar();
      node0.addChildAfter(node1, node0);
      node0.isCatch();
      node0.isQuotedString();
      node0.isName();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isThis();
      node0.addChildToBack(node0);
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.setAllFlags();
      Node node0 = Node.newNumber((-171.0), (-1033), (-1033));
      node0.isNoSideEffectsCall();
      node0.setQuotedString();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node((-510), (-510), (-528));
      double double0 = 233.2416;
      node0.setQuotedString();
      Node node1 = Node.newNumber(double0);
      node0.isNull();
      // Undeclared exception!
      try { 
        node1.mayMutateGlobalStateOrThrow();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("");
      node3.mayMutateGlobalStateOrThrow();
      node1.copyInformationFromForTree(node0);
      node3.setWasEmptyNode(true);
      node0.addChildrenToBack(node3);
      Node node4 = Node.newNumber(1.0, 55, 36);
      node1.addChildrenToFront(node0);
      node4.isFromExterns();
      node4.getSourceFileName();
      node4.isNot();
      node4.isVar();
      node4.isVarArgs();
      node3.isEquivalentToTyped(node3);
      node2.getDouble();
      node0.isEquivalentToTyped(node2);
      node2.isNE();
      node3.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.setPropertyJSDocInfo(".<l!2BpYGOd[LwaY", (JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(13);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isQualifiedName();
      node0.siblings();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isGetProp();
      Node node3 = new Node((-1340), node1, node2, node2, node1);
      node1.getBooleanProp(45);
      node0.addChildToFront(node2);
      node1.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newNumber((-958.23293167245), 149, (-2786));
      Node node1 = new Node((-2786));
      nodeArray0[0] = node1;
      Node node2 = new Node(57, 15, (-13));
      nodeArray0[1] = node2;
      Node node3 = Node.newString(1, "<#");
      nodeArray0[2] = node3;
      node2.isScript();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node4 = new Node(4, node0, node1, node2, node2);
      node4.getIndexOfChild(node0);
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      int int0 = Node.QUOTED_PROP;
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString(470, "");
      node2.setJSDocInfo((JSDocInfo) null);
      Node.newString(29, "Y", 46, 49);
      node1.setDouble(32);
      node0.isFunction();
      node3.getLength();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.QUOTED_PROP;
      node0.getIntProp(36);
      Node.extractLineno(53);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      node0.setDouble(799.83638711273);
      Node.newString(53, "'Jj3");
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(1.0);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("");
      node3.mayMutateGlobalStateOrThrow();
      Node node4 = Node.newString(2, "s$1U#|p");
      Node node5 = node4.setJSDocInfo((JSDocInfo) null);
      Node node6 = new Node((-1754));
      node2.copyInformationFromForTree(node6);
      node3.isQualifiedName();
      node1.siblings();
      node0.isGetProp();
      Node node7 = new Node((-905), node0, node5, node0, node0);
      node6.getBooleanProp(49);
      node7.addChildToFront(node3);
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = Node.newString(470, "");
      node1.setJSDocInfo((JSDocInfo) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(117);
      node_SideEffectFlags0.clearSideEffectFlags();
      node1.isFromExterns();
      boolean boolean0 = node2.isVar();
      node0.isVarArgs();
      node1.isNew();
      node0.getString();
      String string0 = "7R9j!6b9";
      int int0 = 560;
      Node.newString(node0.IS_CONSTANT_NAME, string0, node1.QUOTED_PROP, int0);
      boolean boolean1 = false;
      boolean boolean2 = false;
      // Undeclared exception!
      try { 
        node0.toString(boolean1, boolean0, boolean2);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 897.10917 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2829));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags6.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags8.setAllFlags();
      node_SideEffectFlags8.setThrows();
      node_SideEffectFlags7.setAllFlags();
      node_SideEffectFlags4.setAllFlags();
      Node node0 = new Node(126);
      node0.isDelProp();
      node0.isName();
      Node node1 = node0.cloneTree();
      node1.isScript();
      node1.addChildToBack(node0);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      String string0 = "IDzDEU\"&O-";
      Node node0 = Node.newString("IDzDEU\"&O-", 1421, 16377);
      String string1 = "PjE(Q:~l!xWE@`}Jos";
      Node node1 = Node.newString(50, "PjE(Q:~l!xWE@`}Jos", 15, (-1667));
      Node node2 = new Node((-603), node0, node1, node1);
      Node node3 = new Node(12, node1, node2, 49, 29);
      node1.checkTreeEqualsImpl(node3);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.getTypesWithProperty(string1);
      // Undeclared exception!
      try { 
        node1.getJSType();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeRegistry0.declareType("]TNF31lw'-N'm-44", objectType0);
      jSTypeRegistry0.getObjectIndexKey();
      objectType0.setPropertyJSDocInfo(".<l!2BpYGOd[LwaY", (JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node0 = new Node(32, 51, 43);
      Node node1 = Node.newString(16, "Ia^4(", 30, 54);
      node1.setDouble(372.747263557);
      node1.isFunction();
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node((-2786));
      nodeArray0[0] = node0;
      Node node1 = new Node(57, 15, 0);
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      Node node2 = new Node((-2786), nodeArray0, (-5404), 47);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      Node node3 = new Node(node1.IS_NAMESPACE, node0, node1);
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      String string0 = "7>uZaBVe!";
      Node node0 = Node.newString(86, "7>uZaBVe!", (-733), (-889));
      Node node1 = new Node((-889), node0, node0, node0, node0);
      Node node2 = Node.newString("7>uZaBVe!");
      node2.isAssign();
      Node[] nodeArray0 = new Node[1];
      Node node3 = node1.copyInformationFromForTree(node2);
      nodeArray0[0] = node0;
      Node node4 = new Node(2, nodeArray0, 0, 2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append(string0);
      // Undeclared exception!
      try { 
        node3.removeFirstChild();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = Node.newString(3490, "7>uZaBVe!", (-3122), (-3122));
      Node node1 = new Node((-4096), node0, node0, node0, node0);
      Node node2 = Node.newString(";");
      Node node3 = new Node(52, node1, node1, node2);
      node1.isAssign();
      node2.hasChild(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node0.getIntProp(0);
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newNumber((double) 77);
      Node node1 = Node.newString(85, "]TNF31lw'-N'm-44");
      Node node2 = new Node(4095, node1, node1, node1, node1);
      node0.hasOneChild();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString((-996), "P\"1d#Ru[wXyj5Cz", (-996), 2724);
      node0.hasOneChild();
      node0.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = new Node((-900), (-900), (-900));
      node0.detachChildren();
      node0.isQualifiedName();
      node0.getString();
      // Undeclared exception!
      try { 
        node0.cloneNode();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -900
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node(54, 0, 54);
      node0.isThrow();
      node0.isSyntheticBlock();
      node0.setIsSyntheticBlock(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-926));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isFromExterns();
      node0.detachChildren();
      node0.isVar();
      node0.isVarArgs();
      node0.isNew();
      node0.getString();
      int int1 = 805;
      String string0 = "com.google.javascript.rhino.Node$ObjectPropListItem";
      int int2 = 2;
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "HOOK");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(93, node0, node0);
      node1.isBreak();
      node1.detachChildren();
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = Node.newString("IDzDEU\"&O-", 1421, 16384);
      node0.isDelProp();
      node0.isName();
      Node node1 = node0.cloneTree();
      node0.isQuotedString();
      node0.setSourceEncodedPositionForTree(93);
      node0.isScript();
      node0.getIndexOfChild(node1);
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator", 118, 57);
      node0.isDelProp();
      node0.isName();
      Node node1 = node0.cloneTree();
      node1.isQuotedString();
      node1.setSourceEncodedPositionForTree(48);
      node1.isScript();
      node0.getIndexOfChild(node1);
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = Node.newString("7>uZaBVe!", (-733), 86);
      node0.isVarArgs();
      node0.getIntProp((-54));
      Node.newString(31, "7>uZaBVe!");
      node0.isQualifiedName();
      node0.siblings();
      node0.isGetProp();
      Node node1 = new Node(1, node0, node0, node0, node0);
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newString(125, "", 154, 3805);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      jSType0.isNumberObjectType();
      jSType0.isDateType();
      node0.setJSType(jSType0);
      Node node1 = new Node(1761, node0, node0);
      Node node2 = Node.newString(37, "", 1062, 48);
      Node node3 = node0.getChildBefore(node1);
      node0.checkTreeEquals(node1);
      node1.mayMutateArguments();
      node1.getBooleanProp(node3.INCRDECR_PROP);
      node0.isArrayLit();
      node2.getQualifiedName();
      // Undeclared exception!
      try { 
        node1.getLastSibling();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(43);
      node1.isArrayLit();
      node1.isGetProp();
      node1.setSourceEncodedPositionForTree(2965);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isBreak();
      Node node2 = node0.getChildBefore(node1);
      node2.removeChild(node1);
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node((-2786));
      nodeArray0[0] = node0;
      Node node1 = new Node(57, 15, 0);
      nodeArray0[1] = node1;
      Node node2 = new Node(47, node0);
      nodeArray0[2] = node2;
      Node node3 = node1.setJSDocInfo((JSDocInfo) null);
      Node node4 = node2.copyInformationFromForTree(node1);
      node2.siblings();
      Node node5 = new Node(38, node0, node2, node0, node3);
      Node node6 = node5.getLastSibling();
      node3.clonePropsFrom(node6);
      node5.getChildCount();
      // Undeclared exception!
      try { 
        node4.getSourcePosition();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 46, 46);
      node0.isEquivalentToTyped(node0);
      Node node1 = new Node(46, node0, node0, node0);
      Node node2 = new Node(47, node0, node0, node0, node0, 57, 53);
      node0.hasChild(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = null;
      try {
        node_SideEffectFlags0 = new Node.SideEffectFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      node0.getSideEffectFlags();
      node0.isLabelName();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType[] jSTypeArray0 = new JSType[1];
      Node node0 = Node.newString((-4005), "", (-4005), (-4005));
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newString("7>uZaBVe!", (-733), 86);
      node0.isVarArgs();
      node0.getIntProp((-54));
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.siblings();
      Node node3 = Node.newString("U");
      Node node4 = new Node(39, node2, node3, node1, node1);
      Node node5 = node4.getLastSibling();
      node2.clonePropsFrom(node0);
      node5.getChildCount();
      node2.getSourcePosition();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      node0.isGetElem();
      InputId inputId0 = new InputId("e[VeC|zf");
      inputId0.toString();
      inputId0.toString();
      node0.siblings();
      inputId0.toString();
      inputId0.toString();
      node0.setInputId(inputId0);
      inputId0.toString();
      node0.removeProp((-5736));
      node0.isFor();
      node0.addSuppression("InputId: e[VeC|zf");
      node0.checkTreeEquals(node0);
      node0.getJSDocInfo();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      nodeArray0[8] = node0;
      Node node1 = new Node(159, nodeArray0, 47, 49);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = nodeArray0[4].new FileLevelJsDocBuilder();
      String string0 = "";
      node_FileLevelJsDocBuilder0.append(string0);
      nodeArray0[4].removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = Node.newString("2", 31, 31);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newString(40, "98SYqXa3i>ev");
      node0.checkTreeEqualsImpl(node1);
      jSTypeRegistry0.getTypesWithProperty("!-$H9![OjaX=sspI4");
      node0.addSuppression("com.google.javascript.rhino.Node$FileLevelJsDocBuilder");
      Node node2 = Node.newString("2");
      node2.checkTreeEquals(node0);
      node1.getJSDocInfo();
      Node.extractLineno((-1715));
      node0.getSourceOffset();
      Node.newString("98SYqXa3i>ev", 40, (-1319));
      int int0 = Node.POST_FLAG;
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = Node.newString(86, "7>uZaBVe!", (-733), (-733));
      Node node1 = new Node((-733), node0, node0, node0, node0);
      node1.isAssign();
      Node node2 = new Node(54, node0, node1, node0, node1, 57, 30);
      StaticSourceFile staticSourceFile0 = node2.getStaticSourceFile();
      node1.setStaticSourceFile(staticSourceFile0);
      Node node3 = new Node(node1.POST_FLAG);
      // Undeclared exception!
      try { 
        node0.isLocalResultCall();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      Node node1 = Node.newString(91, "Ordinal: ", 12, 48);
      node0.getSideEffectFlags();
      node1.getString();
      node1.isOr();
      node0.isGetterDef();
      int int0 = Node.EMPTY_BLOCK;
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newString("IDzDEU\"&O-", 1421, 16384);
      node0.isDelProp();
      Node node1 = new Node(50, node0, node0, node0, node0, 54, 3805);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node.extractLineno(1073741824);
      node2.getSourceOffset();
      Node node3 = Node.newString("Ez*77^g8C", 48, (-4594));
      node0.setSourceFileForTesting(": ");
      node3.setVarArgs(false);
      Node.newString("com.google.common.collect.UnmodifiableIterator", 53, 1023);
      node3.putIntProp(36, 86);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      JSType[] jSTypeArray0 = new JSType[1];
      Node node0 = new Node(1755, 53, 86);
      Node node1 = new Node(73, node0, node0, node0, 53, 16);
      Node node2 = new Node(86, node1, node0, node0, node0, 4, 1827);
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newNumber(2987.38155);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(",", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isArrayLit();
      simpleSourceFile0.getLineOffset(262144);
      Node node1 = new Node(48, node0, node0, node0, (-3003), 93);
      node0.mayMutateGlobalStateOrThrow();
      node1.isQuotedString();
      node0.checkTreeEqualsImpl(node1);
      node1.isUnscopedQualifiedName();
      Node node2 = node0.removeChildren();
      Node node3 = Node.newString((String) null, 48, 31);
      node0.setStaticSourceFile(simpleSourceFile0);
      node2.addChildAfter(node0, node0);
      node1.srcrefTree(node0);
      node0.removeChildren();
      node2.getSourceFileName();
      int int0 = 19;
      // Undeclared exception!
      try { 
        node3.setCharno(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = Node.newString((String) null, 108, 4261);
      node0.isOr();
      node0.isAdd();
      // Undeclared exception!
      try { 
        node0.isAssignAdd();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = new Node(990);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = Node.newNumber((double) 29);
      node0.isEquivalentTo(node1, true, false, false);
      node0.addChildBefore(node1, node1);
      node0.cloneNode();
      // Undeclared exception!
      try { 
        node1.getLength();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newString(110, "(*");
      Node node1 = Node.newString("");
      node1.isFromExterns();
      node0.addChildBefore(node1, node1);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E", 1595, 99);
      Node node1 = new Node(48, 881, 1365);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("OvI'QsZIbW+~V|E");
      Node node4 = Node.newNumber(46.0, 99, 36);
      Node node5 = Node.newString("CharMatcher.JAVA_LETTER_OR_DIGIT");
      node2.addChildrenToFront(node5);
      node3.isFromExterns();
      node4.getSourceFileName();
      node2.isVar();
      node2.isVarArgs();
      Node.newNumber((double) 4095);
      node4.getDouble();
      Node node6 = Node.newString("XAi9g[{IQ-6");
      Node node7 = new Node(15, node6, node6, node4);
      node7.isEquivalentToTyped(node0);
      node0.isNE();
      node5.getCharno();
      node0.isInstanceOf();
      node0.addChildBefore(node1, (Node) null);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = new Node(11, 110, 11);
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      int int0 = Node.QUOTED_PROP;
      Node.newNumber(142.89598698838506);
      Node node0 = Node.newString(470, "");
      Node node1 = new Node((-673), node0, node0, node0, node0);
      node1.hasOneChild();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(1416, "s(T+m*", 536870912, 813);
      Node node1 = new Node(2, node0, node0, node0, node0);
      node1.hasOneChild();
      node0.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newNumber((double) 2724, 310, (-997));
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newString("IDzDEU\"&O-", 1421, 16384);
      node0.isName();
      node0.isQuotedString();
      node0.getChangeTime();
      node0.setSourceEncodedPositionForTree(93);
      node0.isScript();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node0.isObjectLit();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isCatch();
      node0.getIntProp(2186);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
      node0.copyInformationFromForTree(node1);
      node0.isTry();
      node0.getChildCount();
      // Undeclared exception!
      try { 
        node0.isFunction();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(113);
      Node node0 = new Node(113);
      node0.isName();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isCatch();
      node0.isCatch();
      node0.getProp(4);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newString("`/_.8=6P}3#<U`", 86, 0);
      node0.isNoSideEffectsCall();
      node0.setLength((-1780));
      Node.extractLineno(31);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      Node node1 = node0.getLastSibling();
      node1.isEmpty();
      node1.isLabelName();
      Node.extractCharno(40);
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeRegistry0.declareType("]TNF31lw'-N'm-44", objectType0);
      Node.extractLineno(11);
      Node node0 = Node.newString(0, "Named type with empty name component", 0, (-4966));
      Node node1 = new Node(0, node0, node0);
      node1.isVarArgs();
      Node node2 = new Node(5344, 11, 1965);
      node1.getQualifiedName();
      Node node3 = node2.copyInformationFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node3.setSideEffectFlags(node_SideEffectFlags0);
      Node node4 = node2.useSourceInfoIfMissingFromForTree(node3);
      node4.getLength();
      node0.getJsDocBuilderForNode();
      node0.getFirstChild();
      // Undeclared exception!
      try { 
        node0.mayMutateGlobalStateOrThrow();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 5344
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E", 1595, 110);
      String string0 = "rKy_YPfj";
      Node.newString("rKy_YPfj");
      node0.removeFirstChild();
      node0.isQualifiedName();
      node0.setString("");
      Node node1 = Node.newString("OvI'QsZIbW+~V|E", 2, 49);
      Node node2 = new Node(57, 49, 704);
      Node node3 = Node.newString(50, "`[Q`^:Y1K9Uc_s");
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node1;
      nodeArray0[1] = node2;
      nodeArray0[2] = node3;
      nodeArray0[3] = node0;
      nodeArray0[4] = null;
      node1.detachChildren();
      Node node4 = new Node(49, node0, node3);
      nodeArray0[5] = node4;
      nodeArray0[6] = node1;
      nodeArray0[7] = node2;
      Node node5 = new Node((-4966), nodeArray0, 4095, 117);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = nodeArray0[4].new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append(string0);
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      String string0 = "Y";
      Node node0 = Node.newString((-2718), "Y");
      node0.isAssign();
      node0.putProp((-2718), "Y");
      Node node1 = new Node(144, 1035, 42);
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      int int0 = 205;
      boolean boolean0 = true;
      Node node3 = node2.detachFromParent();
      int int1 = 77;
      node3.addChildrenToFront(node1);
      // Undeclared exception!
      try { 
        Node.newString(string0, int1, node2.POST_FLAG);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      Node node1 = Node.newString("4");
      node0.isQualifiedName();
      node1.copyInformationFrom(node0);
      node0.isAssign();
      int int0 = Node.IS_DISPATCHER;
      node1.isBlock();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1965, 40);
      Node node1 = Node.newString(4095, "j", 57, 50);
      node0.isRegExp();
      node0.wasEmptyNode();
      node0.toString(false, false, false);
      node0.isIf();
      InputId inputId0 = new InputId("j");
      node0.setInputId(inputId0);
      node0.setLineno((-931));
      node0.isNumber();
      node0.isVarArgs();
      node0.getSideEffectFlags();
      node0.getSourceOffset();
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-577));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.areAllFlagsSet();
      node1.addChildToFront(node0);
      node0.getAncestors();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(1416, "s(T+m*", 1416, 813);
      Node node1 = new Node(2, node0, node0, node0, node0);
      node1.hasOneChild();
      node0.isLocalResultCall();
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      node_SideEffectFlags0.areAllFlagsSet();
      Node node0 = Node.newString((String) null);
      node0.siblings();
      boolean boolean0 = false;
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node.newString("7>uZaBVe!");
      Node.extractCharno(53);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newString(110, "(*");
      Node node1 = Node.newString("GP=");
      node1.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = new Node(85, node0, node1, 2, 51);
      node2.isGetProp();
      node2.isQuotedString();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2512, nodeArray0);
      node0.isArrayLit();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.FunctionType");
      node0.getJSDocInfo();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.setLineno(781);
      node0.isDelProp();
      node0.isDefaultCase();
      node0.isDelProp();
      Node node1 = Node.newNumber((double) 57);
      Node node2 = node0.getFirstChild();
      node1.getChildAtIndex(85);
      node2.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newNumber(142.89598698838506);
      Node node1 = new Node(47, 2, 29);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      node3.mayMutateGlobalStateOrThrow();
      node1.setWasEmptyNode(true);
      Node node4 = Node.newNumber((double) 40, 1, 2965);
      node4.addChildrenToFront(node3);
      node2.isFromExterns();
      node3.getSourceFileName();
      node4.isNot();
      node1.isVar();
      node1.isVarArgs();
      node4.isEquivalentToTyped(node1);
      Node node5 = Node.newNumber((double) 56);
      node5.getDouble();
      node5.isEquivalentToTyped(node4);
      node3.isNE();
      node1.getCharno();
      node0.isQualifiedName();
      node1.isRegExp();
      node1.children();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newString("]TNF31lw'-N'm-44", 77, 77);
      node0.isNoSideEffectsCall();
      node0.setLength(77);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node1.isVarArgs();
      node1.getIntProp(111);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node2 = new Node(0, (Node) null, 31, 3290);
      node1.getStaticSourceFile();
      node0.isLabelName();
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newNumber(142.895987);
      Node node1 = new Node(47, 2, 29);
      Node node2 = new Node(48, node1, 2, 54);
      Node node3 = Node.newNumber((double) 40, 1, 2965);
      node3.addChildrenToFront(node2);
      node2.getSourceFileName();
      node3.isNot();
      node1.isVar();
      Node node4 = Node.newNumber((double) 56);
      node4.getDouble();
      node4.isEquivalentToTyped(node3);
      node2.isNE();
      node1.getCharno();
      node3.getChildBefore(node4);
      node2.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.setPropertyJSDocInfo(".<l!2BpYGOd[LwaY", (JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isTry();
      node0.isQuotedString();
      node0.setSourceEncodedPositionForTree(50);
      node0.isScript();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = new Node((-627), node0, 113, 4095);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isTry();
      node2.getChildCount();
      node0.isFunction();
      node1.isIn();
      node2.isGetProp();
      node2.getStaticSourceFile();
      Node node3 = Node.newNumber((double) 52, 1456, 2);
      node3.detachChildren();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node2.clonePropsFrom(node0);
      node1.getChildCount();
      node2.getSourcePosition();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = Node.newString("7>uZaBVe!", (-733), 53);
      node0.isVarArgs();
      node0.getIntProp((-54));
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newString("U");
      Node node4 = new Node(39, node2, node3, node1, node1);
      Node node5 = node4.getLastSibling();
      node2.clonePropsFrom(node0);
      node5.getChildCount();
      int int0 = Node.DECR_FLAG;
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node.newNumber((-958.23293167245), 149, (-2786));
      Node node0 = new Node((-2786));
      nodeArray0[0] = node0;
      Node node1 = new Node(57, 15, (-13));
      nodeArray0[1] = node1;
      Node node2 = Node.newString(1, "<#");
      nodeArray0[2] = node2;
      Node node3 = new Node((-2786), nodeArray0, 16, 47);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("<#");
      node3.isBreak();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 16384);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(2847);
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isFromExterns();
      node0.isVar();
      node0.isVarArgs();
      node0.isNew();
      node0.getString();
      Node node1 = Node.newString(54, "!l',p3/['", 86, 50);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.addChildrenToFront(node0);
      node1.addChildAfter(node0, node2);
      node1.addChildrenAfter(node2, node0);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber((double) 29);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(50, 12, 4261);
      node3.isFunction();
      node3.isIn();
      node1.isRegExp();
      node1.isOptionalArg();
      Node node4 = new Node(16384, node3, node0, node0, 41, 36);
      node2.addChildAfter(node3, node4);
      node0.getType();
      node1.isCatch();
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = new Node(31, 1670, 8221);
      Node node1 = new Node((-3158));
      Node node2 = new Node(46, node0, node1, node1, node0, 55, 30);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setLength(1797);
      node2.isLabelName();
      node2.isHook();
      node2.isCall();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newString((-2718), "Y");
      node0.isAssign();
      node0.putProp((-2718), "Y");
      Node node1 = new Node(37, node0, node0, node0);
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node node3 = node2.detachFromParent();
      node2.isParamList();
      node3.addChildrenToFront(node1);
      Node node4 = Node.newString("Y", 77, 2);
      node4.isQuotedString();
      node3.setWasEmptyNode(true);
      node2.putBooleanProp(205, true);
      node2.getDouble();
      node1.isNull();
      Node node5 = node1.srcrefTree(node2);
      node5.isNoSideEffectsCall();
      node3.isBlock();
      node4.isQualifiedName();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newString(8, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(2847);
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isFromExterns();
      node0.isVar();
      node0.isVarArgs();
      node0.isDo();
      node0.getString();
      Node node1 = Node.newString(54, "!l',p3/['", 86, 50);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.addChildrenToFront(node0);
      node1.addChildrenAfter(node2, node0);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1965, 40);
      Node node1 = Node.newString(4095, "j", 57, 50);
      node0.isRegExp();
      node0.wasEmptyNode();
      node0.toString(false, false, false);
      node0.isIf();
      InputId inputId0 = new InputId("j");
      node0.setInputId(inputId0);
      node0.setLineno((-931));
      node0.isNumber();
      node0.isVarArgs();
      node0.putProp((-255), (Object) null);
      node0.getSideEffectFlags();
      node0.getSourceOffset();
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-577));
      node_SideEffectFlags0.setReturnsTainted();
      node0.isGetProp();
      Node node2 = new Node(110, node0, node0, node0, node1);
      node1.getBooleanProp(127);
      node2.addChildToFront(node0);
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newNumber((double) (-2829), (-2829), 54);
      Node node1 = new Node((-1408), node0, node0);
      Node node2 = node1.copyInformationFrom(node0);
      node0.isEquivalentToTyped(node1);
      Node node3 = new Node(2, node2, node2, node1);
      node3.setSideEffectFlags(32);
      node3.isNumber();
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = Node.newString(")jy2)-", 1421, 1421);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(8291);
      node0.isSetterDef();
      node0.isNew();
      Node node1 = Node.newString("com.google.common.collect.AbstractIterator");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.addChildrenToFront(node0);
      node0.addChildrenAfter(node1, (Node) null);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = Node.newString(")jy2)-", 1421, 1421);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(44);
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(8287);
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isFromExterns();
      node0.isVar();
      node0.isVarArgs();
      node0.isNew();
      node0.getString();
      Node node1 = Node.newString(17, "com.google.common.collect.AbstractIterator", 8287, 30);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.addChildrenToFront(node0);
      node0.addChildrenAfter(node1, (Node) null);
      Node node3 = new Node(1517);
      node3.isCast();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newNumber((-184.71413307793654), 46, 46);
      node0.copyInformationFrom(node0);
      node0.isEquivalentToTyped(node0);
      Node node1 = new Node(46, node0, node0, node0);
      node1.setSideEffectFlags(118);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      String string0 = "CONTINUE";
      // Undeclared exception!
      try { 
        node_FileLevelJsDocBuilder0.append(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got SHNE
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node((-2786));
      nodeArray0[0] = node0;
      Node node1 = new Node(57, 15, (-13));
      nodeArray0[1] = node1;
      Node node2 = Node.newString(1, "<#");
      nodeArray0[2] = node2;
      Node node3 = new Node((-2786), nodeArray0, 16, 47);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      node2.isNumber();
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node((-2786));
      nodeArray0[0] = node0;
      Node node1 = new Node(57, 15, 54);
      nodeArray0[1] = node1;
      Node node2 = new Node(54);
      nodeArray0[2] = node2;
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node2.isNumber();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newString("@[j0N#}*O");
      node0.isLocalResultCall();
      node0.isOnlyModifiesArgumentsCall();
      node0.setVarArgs(false);
      node0.setCharno((-384));
      node0.isInstanceOf();
      node0.isQuotedString();
      Node node1 = node0.removeFirstChild();
      Node node2 = node0.useSourceInfoIfMissingFrom((Node) null);
      node2.removeChildAfter(node1);
      node2.addChildBefore(node1, node0);
      int int0 = 788;
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = Node.newNumber((double) 43, 15, 31);
      node0.toString();
      node1.isDelProp();
      node1.isInstanceOf();
      node0.addChildrenToFront(node1);
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newString("@[j0N#}*O");
      node0.isLocalResultCall();
      node0.isOnlyModifiesArgumentsCall();
      node0.setVarArgs(false);
      node0.setCharno((-384));
      node0.isInstanceOf();
      node0.isQuotedString();
      Node node1 = node0.removeFirstChild();
      Node node2 = node0.useSourceInfoIfMissingFrom((Node) null);
      node2.removeChildAfter(node1);
      node2.addChildBefore(node1, node0);
      int int0 = 788;
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newString((-1115), ";2T4");
      Node node1 = node0.getFirstChild();
      int int0 = 47;
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node2 = new Node(181, node0, 46, 51);
      nodeArray0[3] = node2;
      nodeArray0[4] = node0;
      Node node3 = new Node(51, nodeArray0);
      node1.srcref(node3);
      node1.putProp(int0, node0);
      node0.isLabelName();
      int int1 = (-1512);
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      JSType[] jSTypeArray0 = new JSType[1];
      Node node0 = Node.newNumber((double) 5760, (-2768), 44);
      Node node1 = new Node(5760, node0);
      Node node2 = new Node(5760, node1, node1);
      Node node3 = new Node(5760, node2, node2, node1, node0);
      node3.isContinue();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("");
      node3.mayMutateGlobalStateOrThrow();
      Node node4 = node1.copyInformationFromForTree(node0);
      node3.setWasEmptyNode(true);
      node0.addChildrenToBack(node3);
      node1.addChildrenToFront(node0);
      node4.isFromExterns();
      node2.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node5 = Node.newString(761, "P024'5", 31, 53);
      Node node6 = Node.newString("");
      Node node7 = new Node((-2077), node6, node5, 38, (-2159));
      Node node8 = new Node((-2322), node2, node7, node0, node0);
      node1.hasOneChild();
      node3.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      int int0 = Node.QUOTED_PROP;
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = node1.copyInformationFromForTree(node2);
      node2.setWasEmptyNode(false);
      node2.addChildrenToBack(node1);
      node1.addChildrenToFront(node0);
      node0.isFromExterns();
      node3.isVar();
      node1.isVarArgs();
      node0.isNew();
      node1.isNE();
      node3.getCharno();
      node3.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 110);
      node0.isVarArgs();
      node0.getIntProp(30);
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newString("U");
      Node node4 = new Node(29, node3, node3, node0, node2);
      Node node5 = new Node(53, node4, node4, 83, 42);
      node5.getLastSibling();
      node1.clonePropsFrom(node2);
      node5.getChildCount();
      int int0 = Node.DECR_FLAG;
      node5.isExprResult();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      objectType0.setPropertyJSDocInfo(".<l!2BpYGOd[LwaY", (JSDocInfo) null);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(49);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isQualifiedName();
      node0.siblings();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node2.isGetProp();
      Node node3 = new Node((-1340), node1, node2, node2, node1);
      node1.isDebugger();
      node0.addChildToFront(node2);
      node1.getJSDocInfo();
      node3.isFalse();
      node3.isAssign();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.TYPE_ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[8];
      jSTypeNativeArray0[0] = jSTypeNative0;
      jSTypeNativeArray0[1] = jSTypeNative0;
      jSTypeNativeArray0[2] = jSTypeNative0;
      jSTypeNativeArray0[3] = jSTypeNative0;
      jSTypeNativeArray0[4] = jSTypeNative0;
      jSTypeNativeArray0[5] = jSTypeNative0;
      jSTypeNativeArray0[6] = jSTypeNative0;
      jSTypeNativeArray0[7] = jSTypeNative0;
      jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = (JSType) objectType0;
      jSTypeArray0[1] = (JSType) objectType0;
      jSTypeArray0[2] = (JSType) objectType0;
      jSTypeArray0[3] = (JSType) objectType0;
      jSTypeArray0[4] = (JSType) objectType0;
      jSTypeArray0[5] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isTry();
      node0.isQuotedString();
      node0.setSourceEncodedPositionForTree(0);
      node0.isBlock();
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) objectType0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.QUOTED_PROP;
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString(470, "");
      Node node4 = new Node(4095);
      Node node5 = node0.copyInformationFromForTree(node2);
      node5.isQualifiedName();
      Node node6 = new Node(21, node1, node4, 12, 1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) linkedList0);
      node0.isVarArgs();
      node0.getIntProp(57);
      Node node1 = new Node(53, node0, 50, 30);
      node1.getStaticSourceFile();
      node1.isLabelName();
      node0.isAssignAdd();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = Node.newNumber((double) 46, 46, 46);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isEquivalentToTyped(node0);
      Node node1 = new Node(46, node0, node0, node0);
      node1.removeChildAfter(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = null;
      try {
        node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.UnmodifiableIterator", 118, 57);
      node0.isDelProp();
      node0.setType(5496);
      node0.isName();
      Node node1 = node0.cloneTree();
      node1.isQuotedString();
      node1.setSourceEncodedPositionForTree(48);
      node1.isScript();
      node0.getIndexOfChild(node1);
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = new Node(54, 0, 54);
      boolean boolean0 = false;
      node0.isThrow();
      Node node1 = new Node((-2461), node0);
      node0.clonePropsFrom(node1);
      node0.isSyntheticBlock();
      node0.setIsSyntheticBlock(false);
      node0.setLength((-958));
      node0.getExistingIntProp((-1776));
      node0.setVarArgs(boolean0);
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      int int0 = (-733);
      Node node0 = new Node((-893), 122, 561);
      node0.detachChildren();
      node0.isVar();
      node0.isVarArgs();
      node0.isNew();
      node0.getString();
      node0.cloneNode();
      String string0 = "LD@=F";
      int int1 = (-196);
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.QUOTED_PROP;
      node0.getIntProp(36);
      Node.extractLineno(53);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      node0.setDouble(799.83638711273);
      Node node1 = node0.getAncestor(0);
      node1.setChangeTime(1084);
      node1.getBooleanProp(55);
      Node node2 = new Node(36, node1, node0, node0, node1);
      node2.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newString(5, "Tn@D-t5K 5R5");
      node0.setChangeTime(1400);
      Node.newNumber((double) 57);
      Node node1 = null;
      Node node2 = node0.useSourceInfoIfMissingFrom((Node) null);
      node2.getSourceOffset();
      Node node3 = null;
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      String string0 = "Y";
      Node node0 = Node.newString("Y");
      Node node1 = new Node(36, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = node1.copyInformationFromForTree(node0);
      node1.addChildrenToFront(node0);
      node3.isFromExterns();
      node2.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(unionType0).getAlternates();
      node2.useSourceInfoFromForTree(node3);
      JSType jSType0 = modificationVisitor0.caseUnionType(unionType0);
      jSType0.isEmptyType();
      JSType jSType1 = jSType0.autoboxesTo();
      // Undeclared exception!
      try { 
        node2.setJSType(jSType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newNumber(602.55078931501, (-549), 736);
      Node node1 = new Node(39);
      Node node2 = new Node((-4202), 38, 43);
      Node node3 = Node.newString(38, "<#");
      node0.checkTreeEqualsImpl(node2);
      Node node4 = new Node((-627), node0, node3, node0, node2);
      node4.getIndexOfChild(node0);
      node2.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.isOr();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getBooleanProp(900);
      Node node1 = Node.newNumber((double) 53);
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = Node.newString("`/_.8=6P}3#<U`", 86, 0);
      node0.isReturn();
      node0.setLength((-1780));
      Node.extractLineno(31);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      Node node1 = node0.getLastSibling();
      node1.isEmpty();
      node1.isLabelName();
      Node.extractCharno(40);
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = new Node(53, node0, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      node0.isTrue();
      node1.isReturn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getIntProp(38);
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1965, 40);
      Node node1 = Node.newString(4095, "j", 57, 50);
      node0.isRegExp();
      node0.wasEmptyNode();
      node0.toString(false, false, false);
      node0.isIf();
      InputId inputId0 = new InputId("j");
      node0.setInputId(inputId0);
      node0.setLineno((-931));
      node0.isNumber();
      node0.isVarArgs();
      node0.getSideEffectFlags();
      node0.getSourceOffset();
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-577));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesArguments();
      node1.isLabelName();
      Node node2 = Node.newNumber(3417.113808);
      node2.isAssignAdd();
      node0.isNew();
      node1.isEquivalentTo(node2, true, false, false);
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      node0.isVarArgs();
      node0.getIntProp((-35));
      Node node1 = new Node(53, node0, 47, (-75));
      node0.getStaticSourceFile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node2 = Node.newNumber(1.0);
      node0.addChildToFront(node2);
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1965, 40);
      Node node1 = Node.newString(4095, "j", 57, 50);
      node0.isRegExp();
      node0.wasEmptyNode();
      node0.toString(false, false, false);
      node0.isIf();
      node1.isLocalResultCall();
      InputId inputId0 = new InputId("j");
      node0.setInputId(inputId0);
      node0.setLineno((-931));
      node0.isNumber();
      node0.isVarArgs();
      node0.getSideEffectFlags();
      node0.getSourceOffset();
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-577));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesArguments();
      node1.isLabelName();
      Node node2 = Node.newNumber(3417.113808);
      node2.isAssignAdd();
      node0.isNew();
      node1.isEquivalentTo(node2, true, false, false);
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newString("&=%X[De");
      node0.isQualifiedName();
      Node node1 = new Node(0, 56, 43);
      node0.copyInformationFrom(node1);
      Node.newString("&=%X[De");
      node1.mayMutateArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      node0.isVarArgs();
      Node node1 = Node.newString((-286), "", 93, 108);
      node1.useSourceInfoIfMissingFrom(node0);
      Node node2 = Node.newNumber(0.0);
      node2.mayMutateArguments();
      node2.getDirectives();
      node1.addChildrenToFront(node0);
      node2.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 110);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H{*zMDa5");
      node0.isVarArgs();
      node0.getIntProp(30);
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.setIsSyntheticBlock(false);
      Node node3 = Node.newNumber(0.0);
      node3.getJSDocInfo();
      node2.addChildrenToBack(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.clonePropsFrom(node3);
      node0.hasChildren();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newString(">L{nL}joh>Y)z,WQFu", 1775, 2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">L{nL}joh>Y)z,WQFu");
      node1.getIntProp(57);
      Node node2 = node0.setJSDocInfo((JSDocInfo) null);
      Node node3 = Node.newNumber(0.0);
      node2.getJSDocInfo();
      Node node4 = Node.newString("-_pVB`5.&OBYtk");
      node4.addChildrenToBack(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.hasChildren();
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.QUOTED_PROP;
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(4095);
      Node node4 = node0.copyInformationFromForTree(node2);
      node4.isQualifiedName();
      node2.isQuotedString();
      node1.isDec();
      node1.srcrefTree(node3);
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = Node.newString(8, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node.newString(29, "", 978, 4095);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(2847);
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isFromExterns();
      node0.isVar();
      node0.isVarArgs();
      node0.isDo();
      node0.getString();
      Node node1 = Node.newString(54, "!l',p3/['", 86, 50);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = node2.srcrefTree(node0);
      node2.isGetProp();
      node3.removeChildAfter(node0);
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newString("`/_.8=6P}3#<U`", 86, 86);
      Node node1 = Node.newString("`/_.8=6P}3#<U`");
      node1.isReturn();
      node1.setLength(398);
      Node.extractLineno(1044);
      node0.isSetterDef();
      node1.isUnscopedQualifiedName();
      Node node2 = node1.getLastSibling();
      node2.isEmpty();
      node1.isLabelName();
      Node.extractCharno((-773));
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.GLOBAL_THIS;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      objectType0.setPropertyJSDocInfo("Object#Key", (JSDocInfo) null);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[5];
      Node[] nodeArray0 = new Node[1];
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0, (JSType) objectType0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) immutableList0);
      nodeArray0[0] = node0;
      Node node1 = new Node(97, nodeArray0, 43, 39);
      EnumType enumType0 = jSTypeRegistry1.createEnumType("x+", node1, objectType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.findPropertyType("Object#Key");
      jSTypeArray0[0] = null;
      jSTypeArray0[1] = (JSType) objectType0;
      jSTypeArray0[2] = (JSType) objectType0;
      jSTypeArray0[3] = (JSType) objectType0;
      Node node2 = new Node(43, 48, 54);
      Node node3 = node0.removeFirstChild();
      node0.removeProp((-1711));
      node2.addChildToBack(node1);
      node3.getString();
      node2.isAssign();
      node2.isVar();
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = new Node((-627), node0, 113, 4095);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isTry();
      node2.getChildCount();
      node0.isFunction();
      node1.isIn();
      node2.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isSwitch();
      node3.getIntProp(176);
      node0.isQuotedString();
      node2.setSourceEncodedPositionForTree(31);
      node0.hasMoreThanOneChild();
      Node.extractLineno(39);
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newString(1970, "98SYqXa3i>ev");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node0.removeChildAfter((Node) null);
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isQualifiedName();
      Node node1 = new Node(48, node0, node0, (Node) null, (Node) null);
      String string0 = "O";
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = new Node((-627), node0, 113, 4095);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isTry();
      node2.getChildCount();
      node0.isFunction();
      Node node3 = new Node(13);
      node3.isNot();
      node2.isVar();
      node3.isVarArgs();
      node2.isEquivalentToTyped(node1);
      node2.getDouble();
      node1.isEquivalentToTyped(node3);
      node1.isNE();
      node0.getCharno();
      node2.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) objectType0, (JSType) objectType0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = Node.newString(36, "O!7sKF9Q}-]5^0i8", 38, 55);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.setWasEmptyNode(true);
      Node node3 = null;
      node0.addChildrenToBack((Node) null);
      node2.addChildrenToFront(node3);
      node2.isFromExterns();
      // Undeclared exception!
      try { 
        node2.isVar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = new Node((-627), node0, 113, 4095);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.getLength();
      node1.isTry();
      node2.getChildCount();
      node0.isFunction();
      node1.isIn();
      node2.isGetProp();
      Node node3 = new Node(16384);
      Node node4 = node1.removeFirstChild();
      node4.addChildToFront(node1);
      node1.getJSDocInfo();
      node1.isFalse();
      node3.isAssign();
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node.newString("");
      Node node0 = new Node(8, 52, 37);
      node0.toString();
      node0.isDelProp();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(node0.FLAG_NO_THROWS);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 8
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.useSourceInfoIfMissingFromForTree((Node) null);
      node0.isVarArgs();
      boolean boolean0 = false;
      node0.setVarArgs(boolean0);
      // Undeclared exception!
      try { 
        node0.isCast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = Node.newString("$N9", 711, (-819));
      node0.isNoSideEffectsCall();
      Node node1 = Node.newNumber((-184.71413307793654));
      Node node2 = new Node(42, node1);
      node2.setLength((-526));
      Node.extractLineno(2);
      node0.isSetterDef();
      Node node3 = new Node(83, 4, 32);
      node3.isUnscopedQualifiedName();
      node3.getSourceOffset();
      node2.getLastSibling();
      Node.newString("$N9", 216, 42);
      node3.setDouble((-2147.75128427027));
      node3.isLabelName();
      node2.isBlock();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = Node.newNumber((double) 43, 15, 31);
      node0.toString();
      Node node2 = new Node(2, 26, 56);
      Node node3 = new Node(0, node0, 57, 16);
      Node node4 = node3.copyInformationFromForTree(node2);
      node1.isTry();
      node2.getChildCount();
      node4.isFunction();
      node4.isIn();
      node2.isGetProp();
      Node node5 = new Node(31);
      Node node6 = node2.removeFirstChild();
      node1.removeProp(52);
      Node node7 = Node.newString("T", 15, 54);
      node0.addChildToBack(node7);
      node4.getString();
      node1.isAssign();
      node6.isVar();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newString(86, "7>uZaBVe!", (-733), (-893));
      Node node1 = new Node((-893), node0, node0, node0, node0);
      Node node2 = Node.newNumber((-933.1757520064436));
      Node node3 = new Node(16, node0, node2);
      node0.mayMutateGlobalStateOrThrow();
      boolean boolean0 = true;
      node3.setWasEmptyNode(boolean0);
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags5.setAllFlags();
      Node node0 = new Node(0);
      node0.isDelProp();
      node0.isName();
      Node node1 = node0.cloneTree();
      node1.isScript();
      node1.addChildToBack(node0);
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      node0.isVarArgs();
      node0.getIntProp((-35));
      Node node1 = new Node(53, node0, 47, (-75));
      node0.getStaticSourceFile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = Node.newNumber(1.0);
      node0.addChildToFront(node2);
      node0.isAssignAdd();
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 1421);
      node0.isString();
      Node node1 = Node.newString("", 39, 29);
      node0.isQuotedString();
      node0.setWasEmptyNode(false);
      node0.putBooleanProp(55, true);
      node0.getDouble();
      node1.isNull();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node1.EMPTY_BLOCK);
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setAllFlags();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  1421 [inferred: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 16384);
      node0.isString();
      node0.setLength(3033);
      node0.addChildrenToFront(node0);
      Node node1 = Node.newString("", (-895), 29);
      node0.isQuotedString();
      node0.setWasEmptyNode(false);
      node0.putBooleanProp(55, true);
      node0.getDouble();
      node1.isNull();
      Node node2 = node1.srcrefTree(node0);
      node2.isNoSideEffectsCall();
      node0.isBlock();
      node1.isQualifiedName();
      // Undeclared exception!
      try { 
        node2.isRegExp();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  1421 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002] [inferred: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = new Node((-627), node0, 113, 4095);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isTry();
      node2.getChildCount();
      node0.isFunction();
      node1.isIn();
      node2.isGetProp();
      Node node3 = new Node(16384);
      Node node4 = node1.removeFirstChild();
      node0.removeProp(103);
      node4.isLabelName();
      node4.isAssignAdd();
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = Node.newString(149, "_Ike/");
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = Node.newString(86, "7>uZaBVe!", (-733), (-893));
      Node node1 = new Node((-893), node0, node0, node0, node0);
      Node node2 = new Node(15, (-733), 1);
      node2.isAssign();
      node1.hasChild(node2);
      node1.setDouble((-995.03675844));
      node2.isEmpty();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 16384);
      node0.isNoSideEffectsCall();
      node0.setLength(3033);
      Node.extractLineno(0);
      Node node1 = Node.newNumber(1877.40435412);
      Node node2 = node1.srcref(node0);
      node2.getLength();
      Node node3 = new Node(38, node1, node0, node1, node1, 1, 53);
      node3.useSourceInfoFrom(node1);
      node3.getStaticSourceFile();
      node1.isLabelName();
      node0.isAssignAdd();
      node0.useSourceInfoFromForTree((Node) null);
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 16384);
      node0.isNoSideEffectsCall();
      node0.setLength(3033);
      Node.extractLineno(0);
      Node node1 = Node.newNumber((double) 55);
      Node node2 = node1.srcref(node0);
      node2.getLength();
      Node node3 = new Node(38, node1, node0, node1, node1, 1, 53);
      node3.getStaticSourceFile();
      node1.isLabelName();
      node0.isAssignAdd();
      node0.useSourceInfoFromForTree((Node) null);
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = Node.newNumber((double) (-627), (-627), (-627));
      node0.isFromExterns();
      node0.getSourceFileName();
      node0.isNot();
      Node node1 = new Node(709);
      node1.isVar();
      node0.isVarArgs();
      node0.getDouble();
      node1.isNE();
      node1.isDefaultCase();
      node0.setSideEffectFlags(node_SideEffectFlags0);
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      Node node1 = Node.newString("", 50, 124);
      node0.isNoSideEffectsCall();
      node0.setLength((-3535));
      Node.extractLineno((-2610));
      node1.isSetterDef();
      node1.isUnscopedQualifiedName();
      Node node2 = new Node(49, node1, (-629), 2427);
      node2.getSourceOffset();
      Node node3 = node2.getLastSibling();
      Node node4 = new Node(2427);
      node4.setDouble((-1.0));
      node0.isEmpty();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = new Node((-627), node0, 113, 4095);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isTry();
      node2.getChildCount();
      node1.isIn();
      node2.isGetProp();
      Node node3 = new Node(16384);
      Node node4 = node1.removeFirstChild();
      node0.removeProp(103);
      node4.isLabelName();
      node4.isComma();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = null;
      Node node1 = Node.newString("");
      node1.addChildrenAfter((Node) null, (Node) null);
      // Undeclared exception!
      try { 
        node1.isQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = new Node((-627), node0, 113, 4095);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isTry();
      node0.isFunction();
      node1.isIn();
      node2.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isSwitch();
      node3.srcrefTree(node2);
      node3.getIntProp(176);
      node0.isQuotedString();
      node2.setSourceEncodedPositionForTree(31);
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("tCi");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      nodeArray0[0] = node0;
      node0.siblings();
      node0.setWasEmptyNode(false);
      Node node1 = new Node(751619276, nodeArray0);
      node1.isCall();
      node1.isDo();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isReturn();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "tCi");
      node0.isFalse();
      node0.checkTreeEquals(node1);
      node0.isString();
      node0.isReturn();
      node1.isInstanceOf();
      // Undeclared exception!
      try { 
        node0.isStringKey();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 751619276
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newString(86, "_u|!tCQ UM\"", (-733), (-893));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node((-733), node0, node0, node0);
      node1.isAssign();
      node0.hasChild(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = Node.newString("", 1421, 16384);
      node0.isString();
      node0.addChildrenToFront(node0);
      Node node1 = Node.newString("", (-895), 29);
      node0.isQuotedString();
      node0.setWasEmptyNode(false);
      node0.putBooleanProp(55, true);
      node1.isNull();
      Node node2 = node1.srcrefTree(node0);
      node2.isNoSideEffectsCall();
      node0.isBlock();
      node1.isQualifiedName();
      node2.isRegExp();
      node1.children();
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = null;
      String string0 = "Q";
      Node node1 = new Node((-1263));
      node1.isThis();
      node1.addChildToBack((Node) null);
      SimpleErrorReporter simpleErrorReporter0 = null;
      try {
        simpleErrorReporter0 = new SimpleErrorReporter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isTry();
      node0.isFunction();
      node0.isIn();
      node1.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isSwitch();
      node2.getIntProp(176);
      node0.isQuotedString();
      node0.hasMoreThanOneChild();
      node1.getInputId();
      node1.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = Node.newNumber((double) 51, 51, 51);
      node0.hasChildren();
      node0.isEquivalentToTyped(node0);
      Node node1 = new Node(51, node0, node0, node0);
      node1.removeChildAfter(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = null;
      try {
        node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = new Node((-627), node0, 113, 4095);
      Node node2 = node1.copyInformationFromForTree(node0);
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags4.areAllFlagsSet();
      Node.newNumber((-1.0));
      node0.addChildToFront(node2);
      Node node3 = node0.getLastSibling();
      node3.getExistingIntProp((-1907));
      node3.isGetElem();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType[] jSTypeArray0 = new JSType[0];
      Node.extractCharno(1917);
      Node node0 = Node.newString(64, "com.google.javascript.rhino.Node$ObjectPropListItem", 1917, 47);
      node0.getAncestor(38);
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newNumber((double) 77, 49, 49);
      Node node1 = Node.newNumber((-1639.73323));
      node1.isFromExterns();
      node1.getSourceFileName();
      node0.isDefaultCase();
      node1.isLabelName();
      node1.isAssignAdd();
      Node node2 = node1.getAncestor((-2899));
      node0.isGetterDef();
      int int0 = Node.POST_FLAG;
      node2.isCase();
      int int1 = 956;
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber((double) 29);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isEquivalentToShallow(node1);
      Node node3 = Node.newString("");
      Node node4 = node1.copyInformationFromForTree(node0);
      node0.addChildrenToBack(node3);
      Node node5 = Node.newNumber(1.0, 55, 36);
      node1.addChildrenToFront(node0);
      node5.isSyntheticBlock();
      node5.isFromExterns();
      node5.setSourceFileForTesting("");
      node5.isNot();
      node5.isCall();
      node0.isOnlyModifiesThisCall();
      node2.isCatch();
      node5.getAncestor(39);
      node4.setSideEffectFlags(57);
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.QUOTED_PROP;
      node0.getIntProp(36);
      Node.extractLineno(53);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      node0.setDouble(799.83638711273);
      Node node1 = node0.getAncestor(0);
      node1.isGetterDef();
      int int1 = Node.EMPTY_BLOCK;
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = Node.newString((-925), "com.google.common.collect.ImmutableMap", (-925), 112);
      node0.isInc();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      SimpleErrorReporter.getMessage0("GETPROP");
      String string0 = "%;-\\,x?7K{h?";
      ObjectType objectType0 = null;
      String string1 = " Sc}FEGn'F,[Iow`";
      ObjectType objectType1 = FunctionType.getTopDefiningInterface(objectType0, string1);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType(string0, node0, objectType1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property GETPROP
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(83);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newString(30, "com.google.javascript.rhino.Node$ObjectPropListItem", 64, 53);
      node3.isQualifiedName();
      node3.siblings();
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.checkTreeTypeAwareEqualsImpl(node4);
      node3.isGetProp();
      Node node5 = node2.copyInformationFromForTree(node1);
      node5.copyInformationFrom(node3);
      Node node6 = new Node(299, node2, node2, node0, node2);
      node1.isDebugger();
      node4.addChildToFront(node6);
      node3.getJSDocInfo();
      node6.isFalse();
      node4.isAssign();
      node4.setDouble(1.0);
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = Node.newNumber(897.1);
      int int0 = Node.QUOTED_PROP;
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = new Node(4095, node0, node0, node1, node0);
      node2.setWasEmptyNode(false);
      node2.addChildrenToBack(node1);
      node1.addChildrenToFront(node0);
      node0.isFromExterns();
      // Undeclared exception!
      try { 
        node2.isVar();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.TYPE_ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[8];
      jSTypeNativeArray0[0] = jSTypeNative0;
      jSTypeNativeArray0[1] = jSTypeNative0;
      jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeNativeArray0[2] = jSTypeNative0;
      jSTypeNativeArray0[3] = jSTypeNative0;
      jSTypeNativeArray0[4] = jSTypeNative0;
      jSTypeNativeArray0[5] = jSTypeNative0;
      jSTypeNativeArray0[6] = jSTypeNative0;
      jSTypeNativeArray0[7] = jSTypeNative0;
      jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = (JSType) objectType0;
      jSTypeArray0[1] = (JSType) objectType0;
      jSTypeArray0[2] = (JSType) objectType0;
      jSTypeArray0[3] = (JSType) objectType0;
      jSTypeArray0[4] = (JSType) objectType0;
      jSTypeArray0[5] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isTry();
      node0.isQuotedString();
      node0.setSourceEncodedPositionForTree(0);
      node0.isBlock();
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) objectType0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isNull();
      node2.getProp(15);
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newNumber(142.89598698838506);
      Node node1 = new Node(47, 2, 29);
      Node node2 = Node.newNumber((-250.5190006336575));
      node1.removeProp(55);
      Node node3 = new Node(2933, 108, 47);
      node2.isAssign();
      node0.toStringTree();
      node2.isIn();
      node1.isRegExp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node4 = Node.newString(42, "com.google.common.collect.UnmodifiableIterator");
      node2.addChildrenToFront(node4);
      node0.isFalse();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newString("i48nL_>[Z");
      Node node1 = Node.newNumber((-3072.30498906), (-1180), 57);
      Node node2 = Node.newNumber(0.0);
      node2.isFromExterns();
      node1.getSourceFileName();
      node0.isNot();
      node1.isVar();
      node1.isVarArgs();
      node2.getDouble();
      node2.isNE();
      node2.isDefaultCase();
      node1.isAssign();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1965, 40);
      Node node1 = Node.newString(4095, "j", 57, 50);
      node0.isRegExp();
      node0.wasEmptyNode();
      node0.toString(false, false, false);
      node0.isIf();
      InputId inputId0 = new InputId("j");
      node0.setInputId(inputId0);
      node0.setLineno((-931));
      node0.isNumber();
      node0.isVarArgs();
      node0.getSideEffectFlags();
      node0.getSourceOffset();
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-577));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.areAllFlagsSet();
      node1.addChildToFront(node0);
      node0.getLastSibling();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.putIntProp(1, 3984);
      node0.setString("$N9");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node0.FLAG_GLOBAL_STATE_UNMODIFIED);
      node0.setSideEffectFlags(node_SideEffectFlags0);
      node0.isOptionalArg();
      // Undeclared exception!
      try { 
        node0.isDelProp();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 1
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newNumber(142.89598698838506);
      Node node1 = new Node(47, 2, 29);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      node3.mayMutateGlobalStateOrThrow();
      node1.setWasEmptyNode(true);
      Node node4 = Node.newNumber((double) 40, 1, 2965);
      node4.addChildrenToFront(node3);
      node2.isFromExterns();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node3.setJSDocInfo(jSDocInfo0);
      node3.getSourceFileName();
      node4.isNot();
      node1.isVar();
      node1.isVarArgs();
      node4.isEquivalentToTyped(node1);
      Node node5 = Node.newNumber((double) 56);
      node5.getDouble();
      node5.isEquivalentToTyped(node4);
      node3.isNE();
      node1.getCharno();
      node0.isQualifiedName();
      node1.isRegExp();
      node1.children();
      node2.useSourceInfoFromForTree(node1);
      node5.getJSType();
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      int int0 = 3221;
      Node node0 = new Node(113, 3221, 31);
      Node node1 = new Node(42, node0, node0, node0, node0, 31, 1);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isTry();
      node0.isFunction();
      node1.isIn();
      node2.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = new Node(12, node0, node1);
      node0.isQuotedString();
      node3.setSourceEncodedPositionForTree(int0);
      // Undeclared exception!
      try { 
        node0.isBlock();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2829));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags7.setAllFlags();
      node_SideEffectFlags7.setThrows();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags4.setAllFlags();
      Node node0 = new Node(126);
      node0.isName();
      node0.isScript();
      node0.addChildToBack(node0);
      node0.isLabelName();
      node0.getFirstChild();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = Node.newString(86, "7>uZaBVe!", (-733), (-900));
      node0.isOnlyModifiesThisCall();
      Node.extractLineno(93);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      node0.getCharno();
      node0.isQualifiedName();
      node0.isRegExp();
      node0.children();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(83);
      node0.copyInformationFromForTree(node1);
      Node node2 = Node.newString(30, "com.google.javascript.rhino.Node$ObjectPropListItem", 64, 53);
      node2.isQualifiedName();
      node2.siblings();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node2.isGetProp();
      node2.setQuotedString();
      node1.isDebugger();
      node3.addChildToFront(node1);
      node2.getJSDocInfo();
      node1.isFalse();
      node3.isAssign();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.isQualifiedName();
      node0.copyInformationFrom((Node) null);
      String string0 = "7<9;w{";
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = new Node((-893), (-893), (-893));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      node0.srcref((Node) null);
      node0.detachChildren();
      // Undeclared exception!
      try { 
        node0.isVar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(398, "not a StringNode", 48, 458);
      node1.isOnlyModifiesThisCall();
      Node.extractLineno(4);
      node1.isSetterDef();
      node0.isUnscopedQualifiedName();
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-558));
      node_SideEffectFlags0.setThrows();
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2829));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags7.setAllFlags();
      node_SideEffectFlags7.setThrows();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags4.setAllFlags();
      Node node0 = new Node(126);
      node0.isName();
      node0.isScript();
      node0.addChildToBack(node0);
      node0.isLabelName();
      node0.isTypeOf();
      node0.isDec();
      node0.getCharno();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = Node.newString(86, "7>uZaBVe!", (-733), (-893));
      Node node1 = new Node((-893), node0, node0, node0, node0);
      Node node2 = new Node((-733), node1, node1, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor((JSTypeRegistry) null);
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((JSType) null).when(unionType0).autoboxesTo();
      doReturn((Collection) null).when(unionType0).getAlternates();
      JSType jSType0 = modificationVisitor0.caseUnionType(unionType0);
      jSType0.autoboxesTo();
      node1.setJSType(jSType0);
      Node.newString("Named type with empty name component");
      node1.isOnlyModifiesArgumentsCall();
      node1.isTypeOf();
      node0.isDec();
      node1.getCharno();
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isTry();
      node0.isFunction();
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isIn();
      node1.isSetterDef();
      node0.getString();
      Node node2 = new Node(node1.FLAG_LOCAL_RESULTS, node1);
      node0.useSourceInfoIfMissingFrom(node2);
      int int0 = 2;
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = new Node((-627), node0, 113, 4095);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isTry();
      node2.getChildCount();
      node1.isIn();
      node2.isGetProp();
      Node node3 = new Node(16390);
      Node node4 = node1.removeFirstChild();
      node0.removeProp(103);
      node4.isLabelName();
      node4.isComma();
      node1.useSourceInfoIfMissingFrom(node3);
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newString(8, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(2847);
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isFromExterns();
      node0.isVar();
      node0.isVarArgs();
      node0.isSyntheticBlock();
      node0.getString();
      Node node1 = Node.newString(54, "!l',p3/['", 86, 50);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node1.addChildrenToFront(node0);
      node1.addChildrenAfter(node2, node0);
      node1.children();
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isAdd();
      node0.isQuotedString();
      node0.isVoid();
      Node.mergeLineCharNo(16, 4096);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = Node.newNumber((double) 51, 37, 43);
      EnumType enumType0 = jSTypeRegistry1.createEnumType("opt_arg", node1, jSTypeArray0[0]);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.getRootNode();
      node0.checkTreeEqualsImpl((Node) null);
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isAdd();
      node0.isQuotedString();
      node0.isVoid();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = Node.newNumber((double) 51, 37, 43);
      jSTypeRegistry1.createEnumType("opB_4rg", node1, jSTypeArray0[0]);
      // Undeclared exception!
      try { 
        node1.setLength(node0.DIRECT_EVAL);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = Node.newNumber(1046.791598447, 4, 57);
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = Node.newNumber((double) 1, 318, 52);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseAllType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Y", node2, jSType0);
      enumType0.getElementsType();
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.getRootNode();
      node1.checkTreeEqualsImpl((Node) null);
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E", 1595, 110);
      Node node1 = Node.newString("");
      Node node2 = new Node(2, 37, 52);
      node0.isQualifiedName();
      node0.setString("");
      Node node3 = Node.newString("OvI'QsZIbW+~V|E", 2, 49);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node3);
      jSTypeRegistry0.getTypesWithProperty("!-$H9![OjaX=sspI4");
      node3.getJSType();
      Node node4 = Node.newString(8, "x\">~!}S<,P||O");
      node4.isVarArgs();
      node3.isNew();
      node1.getString();
      Node node5 = node1.useSourceInfoIfMissingFrom(node0);
      node3.addChildrenToFront(node5);
      node1.addChildToBack(node0);
      node5.setSourceEncodedPositionForTree(12);
      node4.isNE();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node0.isCatch();
      node0.getIntProp(2182);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node[] nodeArray0 = new Node[1];
      Node node1 = Node.newNumber(0.0, (-449), 16);
      nodeArray0[0] = node1;
      Node node2 = new Node(16, nodeArray0, 40, 46);
      Node node3 = node2.srcref(node1);
      node3.isQuotedString();
      Node node4 = new Node((-449), node2, node0, node2, node1, (-571), 40);
      boolean boolean1 = false;
      node4.setWasEmptyNode(boolean1);
      Node node5 = node4.copyInformationFrom(node3);
      node5.cloneTree();
      node0.children();
      node2.getAncestors();
      boolean boolean2 = true;
      boolean boolean3 = false;
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber((double) 29);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isEquivalentToShallow(node1);
      Node node3 = Node.newString("");
      node1.copyInformationFromForTree(node0);
      node0.addChildrenToBack(node3);
      Node node4 = Node.newNumber(1.0, 55, 36);
      node1.addChildrenToFront(node0);
      node4.isSyntheticBlock();
      node4.isFromExterns();
      node4.setSourceFileForTesting("");
      node4.isNot();
      node4.isCall();
      node3.isStringKey();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1531);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(1531);
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(1321, "xoc", 1321, 1321);
      node0.isFromExterns();
      node0.isVar();
      node0.isVarArgs();
      Node node1 = Node.newNumber((-50.0), 4095, 56);
      node1.isDo();
      node0.getString();
      Node node2 = Node.newString(35, "!l',p3/['", 48, 12);
      Node node3 = new Node(56, node1, node2, 40, 54);
      Node node4 = new Node((-3536), 54, 572);
      Node node5 = node3.useSourceInfoIfMissingFrom(node4);
      node5.addChildrenToFront(node3);
      Node node6 = new Node(56, 2, 39);
      node1.addChildrenAfter(node6, node2);
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = Node.newString(")jy2)-", 1421, 1421);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(86, node0, node0, node0, node0, 4095, 2118);
      node1.isVar();
      node1.isVarArgs();
      Node node2 = new Node(30, node1, node1, (-781), 8);
      node2.isNew();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isInc();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.setSourceEncodedPosition(2118);
      node2.getString();
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E", 1595, 110);
      Node node1 = Node.newString("");
      node0.removeFirstChild();
      node0.isQualifiedName();
      node0.setString("");
      Node node2 = Node.newString("OvI'QsZIbW+~V|E", 2, 49);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.checkTreeEqualsImpl(node1);
      jSTypeRegistry0.getTypesWithProperty("!-$H9![OjaX=sspI4");
      node2.getJSType();
      Node node3 = Node.newString(8, "x\">~!}S<,P||O");
      node3.isVarArgs();
      node2.isNew();
      node1.getString();
      Node node4 = node1.useSourceInfoIfMissingFrom(node0);
      node2.addChildrenToFront(node4);
      node1.addChildToBack(node0);
      node1.isVoid();
      Node.mergeLineCharNo(4, 4);
      node2.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node node0 = Node.newNumber((double) 31);
      Node node1 = Node.newString(93, "Q)<");
      node0.setSourceEncodedPosition(2);
      node0.replaceChildAfter(node0, node1);
      int int0 = Node.EMPTY_BLOCK;
      node1.isStringKey();
      // Undeclared exception!
      try { 
        node0.isDec();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isTry();
      node0.isFunction();
      node0.isIn();
      node1.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType[] jSTypeArray0 = new JSType[0];
      node0.isSwitch();
      node0.isQuotedString();
      node1.getInputId();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.setSourceEncodedPosition(0);
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(47, "", 93, 108);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      int int0 = Node.EMPTY_BLOCK;
      Node node3 = Node.newString(30, "\n\nTree2:\n");
      node3.isEquivalentTo((Node) null);
      node2.isDefaultCase();
      int int1 = 49;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int1);
      int int2 = Node.SLASH_V;
      LinkedList<JSType> linkedList0 = null;
      try {
        linkedList0 = new LinkedList<JSType>();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node0);
      node0.getIntProp(2186);
      node0.setLength(2186);
      node0.getIntProp(2186);
      Node.extractLineno((-2943));
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      node0.setDouble(31);
      Node node1 = node0.getAncestor(0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.getBooleanProp(900);
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString("");
      node3.mayMutateGlobalStateOrThrow();
      Node node4 = new Node(49);
      node3.setWasEmptyNode(true);
      node0.addChildrenToBack(node3);
      Node node5 = Node.newNumber((double) 46, 55, 36);
      node1.addChildrenToFront(node0);
      node5.isFromExterns();
      node5.isNot();
      node5.isVar();
      node5.isVarArgs();
      node2.isNew();
      node2.getDouble();
      node0.isEquivalentToTyped(node2);
      node4.useSourceInfoIfMissingFrom(node5);
      node1.addChildrenToFront(node4);
      node1.isEmpty();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags6.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags9 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags8.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags6.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags10 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags10.setThrows();
      node_SideEffectFlags7.setMutatesGlobalState();
      node_SideEffectFlags9.setMutatesGlobalState();
      node_SideEffectFlags9.setAllFlags();
      Node node1 = new Node(49);
      node0.isThis();
      node0.isScript();
      node1.addChildToBack(node0);
      node1.isLabelName();
      Node node2 = node1.getFirstChild();
      node2.isWith();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E", 1595, 110);
      Node node1 = Node.newString("");
      node0.removeFirstChild();
      node0.isQualifiedName();
      node0.setString("");
      Node node2 = Node.newString("OvI'QsZIbW+~V|E", 2, 49);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.checkTreeTypeAwareEqualsImpl((Node) null);
      String string0 = "!-$H9![OjaX=ss\\pI4";
      jSTypeRegistry0.getTypesWithProperty(string0);
      node2.getJSType();
      String string1 = "x\">~!}S<,P||O";
      // Undeclared exception!
      try { 
        Node.newString(node1.FLAG_NO_THROWS, string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(57, nodeArray0, 56, 786);
      node0.toStringTree();
      Node node2 = node0.srcref(node0);
      boolean boolean0 = true;
      node0.isQuotedString();
      Node node3 = new Node(297, node0, node2);
      node3.setWasEmptyNode(boolean0);
      // Undeclared exception!
      try { 
        node0.copyInformationFrom(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1531);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(1531);
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(1321, "w`<%|.&\"Yh+H", 1321, 1321);
      node0.isParamList();
      node0.isVar();
      node0.isVarArgs();
      Node node1 = Node.newNumber((-50.0), 4095, 56);
      node1.isDo();
      node0.getString();
      Node node2 = Node.newString(35, "!l',p3/['", 48, 12);
      Node node3 = new Node(56, node1, node2, 40, 54);
      Node node4 = new Node((-3536), 54, 572);
      Node node5 = node3.useSourceInfoIfMissingFrom(node4);
      node5.addChildrenToFront(node3);
      Node node6 = new Node(32, node1, node5, node4, 4095, (-3536));
      node1.addChildrenAfter(node6, node2);
      node4.getIntProp(node3.INPUT_ID);
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isTry();
      node0.isFunction();
      node0.isIn();
      node1.isNew();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isInc();
      node0.isQuotedString();
      node1.getInputId();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.setSourceEncodedPosition(0);
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = Node.newString("i48nL_>[Z");
      Node node1 = Node.newNumber((double) 49, (-887), 3059);
      node0.isRegExp();
      node0.wasEmptyNode();
      node0.toString(true, false, true);
      node0.isExprResult();
      InputId inputId0 = new InputId("i48nL_>[Z");
      node1.setInputId(inputId0);
      node1.setLineno((-3622));
      node0.isNumber();
      node0.isVarArgs();
      node0.getSideEffectFlags();
      node0.getSourceOffset();
      node1.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(46);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags3.setReturnsTainted();
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 46, 46);
      Node node1 = node0.copyInformationFrom(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isEquivalentToTyped(node0);
      Node node2 = new Node(46, node0, node0, node0);
      node2.removeChildAfter(node1);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      // Undeclared exception!
      try { 
        node0.addChildToFront(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.TYPE_ERROR_FUNCTION_TYPE;
      jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[8];
      jSTypeNativeArray0[0] = jSTypeNative0;
      jSTypeNativeArray0[1] = jSTypeNative0;
      jSTypeNativeArray0[2] = jSTypeNative0;
      jSTypeNativeArray0[3] = jSTypeNative0;
      jSTypeNativeArray0[4] = jSTypeNative0;
      jSTypeNativeArray0[5] = jSTypeNative0;
      jSTypeNativeArray0[6] = jSTypeNative0;
      jSTypeNativeArray0[7] = jSTypeNative0;
      Node node0 = new Node(103, 1, 2469);
      Node node1 = new Node(2469, node0, node0, node0);
      Node node2 = new Node(95, node1, node1, node1, 119, 37);
      node2.toString();
      node0.isDelProp();
      Node node3 = new Node(8287, node2, 31, 2048);
      node0.getAncestor(0);
      Node node4 = new Node(38, node3, node3, 52, 2);
      node4.getExistingIntProp((-1992));
      node0.isInstanceOf();
      double double0 = (-184.71413307793654);
      Node.newNumber(double0, node4.POST_FLAG, node3.FLAG_THIS_UNMODIFIED);
      node4.addChildrenToFront(node2);
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(83);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.getJSDocInfo();
      node1.addChildrenToBack(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = Node.newNumber((double) 46, 536870912, 57);
      Node node2 = new Node(38, node0, node0, node0, node1);
      node2.getIntProp(47);
      Node.newString(36, "Object#Element");
      Node node3 = node2.copyInformationFromForTree(node0);
      Node node4 = Node.newString("Object#Element");
      Node node5 = new Node(50, node3, node2, node3, node4);
      Node node6 = new Node(41, node1, node3, 52, (-3020));
      node2.getLastSibling();
      node3.clonePropsFrom(node0);
      node5.getChildCount();
      int int0 = Node.DECR_FLAG;
      // Undeclared exception!
      try { 
        node4.isExprResult();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = Node.newString(")jy2)-", 1421, 1421);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(")jy2)-", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isArrayLit();
      Node node1 = Node.newNumber((double) 32, 16, 91);
      node0.toString();
      node1.isDelProp();
      node0.getExistingIntProp(0);
      node1.isInstanceOf();
      double double0 = 0.0;
      int int0 = 2015;
      // Undeclared exception!
      try { 
        Node.newNumber(double0, node0.FREE_CALL, int0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 0
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(118, 3219, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isTry();
      node0.isFunction();
      node0.isUnscopedQualifiedName();
      node1.isEmpty();
      node1.isLabelName();
      Node.extractCharno(1);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.TYPE_ERROR_FUNCTION_TYPE;
      jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[8];
      jSTypeNativeArray0[0] = jSTypeNative0;
      jSTypeNativeArray0[1] = jSTypeNative0;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = new Node(1, 1, (-895));
      Node node1 = new Node(91, node0, 29, 39);
      Node node2 = new Node(52);
      node1.isTry();
      node0.getChildCount();
      node0.isIn();
      node0.isGetProp();
      Node node3 = new Node(51);
      Node node4 = node1.removeFirstChild();
      node4.removeProp(303);
      node3.isLabelName();
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      Node node1 = Node.newString(91, "Ordinal: ", 12, 48);
      node0.getSideEffectFlags();
      node1.getString();
      node0.isLabelName();
      node1.isAssignAdd();
      node1.isHook();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      Node node1 = Node.newString(91, "Ordinal: ", 12, 48);
      node0.getSideEffectFlags();
      node1.getString();
      node1.setIsSyntheticBlock(false);
      node1.setLength(47);
      node0.isLabelName();
      node1.isAssignAdd();
      node1.isHook();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newNumber((double) 2724, 1957, 2724);
      node0.isNull();
      Node node1 = new Node(405, node0, node0, node0);
      node0.addChildrenToFront(node1);
      node1.isCatch();
      int int0 = 32;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("cAOLAw67@Kkn\"U", (Node) null, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      Node node2 = enumElementType0.getRootNode();
      Node node3 = new Node(int0, node2, node1);
      node3.isBlock();
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(43);
      node0.isTry();
      node1.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isSwitch();
      node0.isQuotedString();
      node1.isDec();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) objectType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isTry();
      node0.isSwitch();
      node0.getIntProp(63);
      node0.isQuotedString();
      Node node1 = new Node(3328, 2184, 36);
      node1.setSourceEncodedPositionForTree((-1908));
      node1.isBreak();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setSideEffectFlags(node_SideEffectFlags0);
      int int0 = 1542;
      String string0 = null;
      Node node2 = Node.newString(int0, string0);
      // Undeclared exception!
      try { 
        node2.isBreak();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.QUOTED_PROP;
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString(470, "");
      node1.addChildrenToFront(node0);
      node3.isFromExterns();
      node2.isVar();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.addChildAfter(node3, node0);
      node2.getType();
      node2.isCatch();
      node0.isCatch();
      node0.getProp(2191);
      node3.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1531);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(1531);
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = Node.newString(1321, "xoc", 1321, 1321);
      node0.isFromExterns();
      node0.isVar();
      node0.isVarArgs();
      Node node1 = Node.newNumber((-50.0), 4095, 56);
      node1.isDo();
      node0.getString();
      Node node2 = Node.newString(35, "!l',p3/['", 48, 12);
      Node node3 = new Node(56, node1, node2, 40, 54);
      Node node4 = new Node((-3536), 54, 572);
      Node node5 = node3.useSourceInfoIfMissingFrom(node4);
      node5.addChildrenToFront(node3);
      int int0 = Node.EMPTY_BLOCK;
      node0.isStringKey();
      node3.isDec();
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      int int0 = (-2353);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-2353), (Node) null, (Node) null, (Node) null, (Node) null, (-2353), (-2353));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-693.8395332733));
      node0.removeProp(1021);
      Node node1 = new Node(545, node0, node0, node0, 29, 50);
      node0.addChildToBack(node1);
      Node node2 = node1.cloneNode();
      Node node3 = node1.removeChildAfter(node2);
      node3.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[19];
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isAdd();
      node0.isQuotedString();
      node0.hasMoreThanOneChild();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = Node.newNumber((double) 51, 37, 43);
      EnumType enumType0 = jSTypeRegistry1.createEnumType("opB_4rg", node1, jSTypeArray0[0]);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      // Undeclared exception!
      try { 
        enumElementType0.toMaybeEnumElementType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isThis();
      node0.addChildToBack(node0);
      int int0 = Node.EMPTY_BLOCK;
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(0.0, (-1947), 154);
      node0.setType(41);
      Node node1 = Node.newNumber((double) 51);
      String string0 = "change_time";
      MockFileWriter mockFileWriter0 = new MockFileWriter(string0);
      node1.appendStringTree(mockFileWriter0);
      node0.isExprResult();
      node0.isOnlyModifiesThisCall();
      node0.isCase();
      int int0 = (-1300);
      node0.getExistingIntProp(int0);
      node0.isTrue();
      node0.isFor();
      EvoSuiteFile evoSuiteFile0 = null;
      String string1 = null;
      // Undeclared exception!
      try { 
        FileSystemHandling.appendStringToFile(evoSuiteFile0, string1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -1300
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber((double) 46, 46, 46);
      Node node1 = node0.copyInformationFrom(node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isEquivalentToTyped(node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newString(1, "");
      Node node4 = new Node(130);
      Node node5 = node4.copyInformationFromForTree(node0);
      node2.isQualifiedName();
      node2.useSourceInfoIfMissingFrom(node3);
      node1.addChildrenToFront(node4);
      node2.isGetElem();
      node1.getString();
      node5.copyInformationFrom(node3);
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node.newNumber(0.5);
      Node node0 = Node.newString(91, "Ordinal: ", 12, 48);
      node0.putBooleanProp(49, true);
      node0.getDouble();
      double double0 = 0.0;
      int int0 = 31;
      Node node1 = Node.newNumber(double0, int0, node0.DIRECTIVES);
      // Undeclared exception!
      try { 
        node1.isNull();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ASSIGN_RSH Ordinal:  12 [direct_eval: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node.newNumber(0.5);
      Node node0 = Node.newString(91, "Ordinal: ", 12, 48);
      node0.putBooleanProp(49, true);
      node0.getDouble();
      double double0 = 0.0;
      int int0 = 31;
      Node node1 = Node.newNumber(double0, int0, node0.DIRECTIVES);
      // Undeclared exception!
      try { 
        node1.isNull();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ASSIGN_RSH Ordinal:  12 [direct_eval: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = Node.newNumber((double) 31);
      Node node1 = Node.newString(93, "Q)<");
      node0.replaceChildAfter(node0, node1);
      int int0 = Node.EMPTY_BLOCK;
      node1.isStringKey();
      // Undeclared exception!
      try { 
        node0.isDec();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = Node.newString(8, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node0.isTrue();
      node0.isVar();
      node0.isVarArgs();
      node0.isSyntheticBlock();
      node0.getString();
      Node node1 = Node.newString(54, "!l',p3/['", 86, 50);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      node1.addChildrenToFront(node0);
      node1.addChildrenAfter(node2, node0);
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newString(")jy2)-", 1421, 1421);
      Node.newString("lvm/*");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(44);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(8287);
      node0.isFromExterns();
      node0.isEmpty();
      node0.isVarArgs();
      node0.isNew();
      node0.getString();
      Node node1 = Node.newString("com.google.common.collect.AbstractIterator");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.addChildrenToFront(node0);
      Node node3 = new Node(1517);
      node3.getIntProp(1517);
      node3.isCast();
      node3.isAnd();
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      node0.isVarArgs();
      Node node1 = Node.newString(47, "", 93, 108);
      node1.useSourceInfoIfMissingFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      Node.newString("ASSIGN_BITXOR");
      node1.isFalse();
      node0.isNull();
      Node node2 = Node.newString(38, "");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      node_NodeMismatch0.equals("ASSIGN_BITXOR");
      Node node3 = node2.getChildAtIndex(4);
      node3.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node node0 = new Node(31, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isTry();
      node0.isIn();
      node1.isSetterDef();
      node0.isUnscopedQualifiedName();
      Node node2 = Node.newString(54, "$N9");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node2);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      node_NodeMismatch0.equals(locale_Category0);
      node2.getChildAtIndex(40);
      node1.getLastSibling();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E");
      Node node1 = Node.newString("OvI'QsZIbW+~V|E", 51, 4095);
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = Node.newString((-2273), "gU>s&}b!", 1, 1040);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.wasEmptyNode();
      node2.getLength();
      Node node3 = node0.srcrefTree((Node) null);
      node3.getDouble();
      String string0 = "1";
      Locale locale0 = Locale.forLanguageTag(string0);
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      // Undeclared exception!
      try { 
        node3.setDirectives(set0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.QUOTED_PROP;
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(3367, (-33), 1848);
      Node node4 = new Node((-923), node0, node1, node3, 153, 15);
      node1.isLocalResultCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.setVarArgs(false);
      node0.getQualifiedName();
      node4.getIndexOfChild(node3);
      node0.getAncestor(103);
      node2.isLabel();
      node1.isFunction();
      node2.isAdd();
      Node node5 = Node.newString(12, (String) null, 42, 29);
      node1.removeProp(node5.JSDOC_INFO_PROP);
      node3.isFromExterns();
      InputId inputId0 = node4.getInputId();
      node0.setInputId(inputId0);
      node2.getAncestors();
      node3.isThrow();
      Node node6 = new Node(node5.IS_CONSTANT_NAME);
      node6.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        node3.srcrefTree(node5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      node0.isEquivalentToTyped((Node) null);
      int int0 = 16;
      Node node1 = null;
      try {
        node1 = new Node(int0, node0, node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      Node node1 = Node.newNumber((double) 36, 103, 103);
      node0.setType(37);
      Node node2 = Node.newNumber((double) 50);
      Node.newNumber(3157.84332309, (-543), 2108);
      String string0 = "change_time";
      MockFileWriter mockFileWriter0 = new MockFileWriter(string0);
      mockFileWriter0.close();
      node1.appendStringTree(mockFileWriter0);
      node0.isExprResult();
      node0.isOnlyModifiesThisCall();
      node2.isCase();
      node1.isDelProp();
      // Undeclared exception!
      try { 
        node1.isInstanceOf();
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = Node.newString(86, "7>uZaBVe!", (-733), (-893));
      Node node1 = new Node((-893), node0, node0, node0, node0);
      Node node2 = new Node((-733), node1, node1, node1);
      node2.isAssign();
      node1.hasChild(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node2.removeChildren();
      node_SideEffectFlags0.setThrows();
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = Node.newString(")jy2)-", 1421, 1421);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(")jy2)-", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isArrayLit();
      Node node1 = Node.newNumber((double) 32, 16, 91);
      node0.toString();
      node1.isDelProp();
      node0.getIntProp(4095);
      Node node2 = new Node(4, node1, 4095, 957);
      node0.getStaticSourceFile();
      node0.isLabelName();
      node2.isAssignAdd();
      node2.isContinue();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("CharMatcher.JAVA_LETTER_OR_DIGIT");
      node0.isOnlyModifiesThisCall();
      node0.getQualifiedName();
      node0.isQuotedString();
      node0.setWasEmptyNode(true);
      node0.putBooleanProp((-31), false);
      node0.getDouble();
      node0.isNull();
      // Undeclared exception!
      try { 
        node0.isLabelName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING CharMatcher.JAVA_LETTER_OR_DIGIT [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("CharMatcher.JAVA_LETTER_OR_DIGIT");
      node0.isOnlyModifiesThisCall();
      node0.getQualifiedName();
      node0.isQuotedString();
      node0.setWasEmptyNode(true);
      node0.putBooleanProp(15, false);
      node0.getDouble();
      node0.isNull();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node0.FLAG_ARGUMENTS_UNMODIFIED);
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setAllFlags();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING CharMatcher.JAVA_LETTER_OR_DIGIT [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E", 1595, 110);
      Node node1 = Node.newString("");
      Node node2 = new Node(2, 37, 52);
      node0.isQualifiedName();
      node0.setString("");
      Node node3 = Node.newString("OvI'QsZIbW+~V|E", 2, 49);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      Node node4 = new Node(54, (-1436), (-3044));
      Node node5 = new Node(1975, node3, node4, node3);
      node1.copyInformationFromForTree(node3);
      node0.isTry();
      node0.isFunction();
      node1.isUnscopedQualifiedName();
      node5.isEmpty();
      node0.isLabelName();
      Node.extractCharno(57);
      node1.isBlock();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      int int0 = Node.POST_FLAG;
      Node node1 = Node.newNumber((double) 4);
      node1.checkTreeEqualsImpl(node0);
      node0.putIntProp((-1123), 1);
      node1.isNot();
      node0.isReturn();
      node1.setString((String) null);
      int int1 = 1312;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int1);
      int int2 = null;
      try {  
      int2 = Node.EMPTY_BLOCK;
      } catch(UnsupportedOperationException e) {}
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(4261, "Ordinal: ", 1965, 1965);
      node0.getSideEffectFlags();
      Node node1 = Node.newString(16, "OvI'QsZIbW+~V|E", 4095, 48);
      node1.getString();
      node0.setIsSyntheticBlock(true);
      node1.setLength(0);
      node0.isLabelName();
      node1.isAssignAdd();
      node0.isHook();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = new Node(1421);
      node0.isString();
      Node node1 = Node.newString("", 39, 29);
      node0.isQuotedString();
      node0.setWasEmptyNode(false);
      node0.putBooleanProp(55, true);
      node0.getDouble();
      node1.isNull();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node1.EMPTY_BLOCK);
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setAllFlags();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1421
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags6.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags8.setAllFlags();
      node_SideEffectFlags3.setThrows();
      Node node0 = new Node(31);
      node0.isThis();
      Node node1 = new Node((-1442), node0, node0, node0, 0, 4095);
      node0.addChildToBack(node1);
      node0.isLabelName();
      Node node2 = node1.getFirstChild();
      node1.isNoSideEffectsCall();
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3800));
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node0 = Node.newString("com.google.common.collect.AbstractIterator");
      node0.copyInformationFromForTree((Node) null);
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(31);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags6.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags7.setMutatesThis();
      node_SideEffectFlags4.setAllFlags();
      Node node0 = new Node(113, 31, 113);
      Node node1 = new Node(36, node0, node0, node0);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node1.isTry();
      node1.isFunction();
      node2.isUnscopedQualifiedName();
      node1.isEmpty();
      node1.isLabelName();
      Node.extractCharno((-1012));
      node2.isBlock();
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isFunction();
      node0.isIn();
      node1.isNew();
      node0.isOnlyModifiesThisCall();
      node0.isCase();
      node1.getExistingIntProp(4095);
      node0.removeChild(node1);
      node1.isCall();
      // Undeclared exception!
      try { 
        node1.isDo();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 4095
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 46, 46);
      Node node1 = node0.copyInformationFrom(node0);
      node0.setIsSyntheticBlock(true);
      String string0 = "a!iB|.d/u{PG432o&<`";
      MockFileWriter mockFileWriter0 = new MockFileWriter(string0);
      char char0 = 'h';
      char char1 = 'S';
      char char2 = 'b';
      char char3 = '#';
      char char4 = '<';
      char[] charArray0 = new char[8];
      charArray0[0] = char2;
      charArray0[1] = char0;
      charArray0[2] = char1;
      charArray0[3] = char0;
      charArray0[4] = char3;
      charArray0[5] = char3;
      charArray0[6] = char2;
      charArray0[7] = char4;
      mockFileWriter0.write(charArray0);
      node1.appendStringTree(mockFileWriter0);
      node0.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isInc();
      node1.getInputId();
      EvoSuiteFile evoSuiteFile0 = null;
      String string1 = "2";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string1);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = null;
      jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(0.0, (-1947), 154);
      node0.setType(41);
      Node node1 = Node.newNumber((double) 51);
      String string0 = "change_time";
      node1.setIsSyntheticBlock(true);
      MockFileWriter mockFileWriter0 = new MockFileWriter(string0);
      char[] charArray0 = new char[6];
      char char0 = 'h';
      charArray0[0] = char0;
      char char1 = 'S';
      charArray0[1] = char1;
      char char2 = 'b';
      charArray0[2] = char2;
      char char3 = '5';
      charArray0[3] = char3;
      char char4 = '#';
      charArray0[4] = char4;
      char char5 = '<';
      charArray0[5] = char5;
      mockFileWriter0.write(charArray0);
      node1.appendStringTree(mockFileWriter0);
      node0.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isInc();
      node0.getInputId();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = null;
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.setSourceEncodedPosition(node1.SIDE_EFFECT_FLAGS);
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(1670, "    ");
      nodeArray0[0] = node0;
      node0.isEquivalentToTyped(node0);
      Node node1 = new Node(1670, nodeArray0, 16, 46);
      node0.setOptionalArg(false);
      node1.getJsDocBuilderForNode();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isDec();
      InputId inputId0 = new InputId("00yW}|");
      node1.setInputId(inputId0);
      node1.addChildrenToFront(node0);
      node1.getSideEffectFlags();
      nodeArray0[0].isFalse();
      node0.removeChildAfter(nodeArray0[0]);
      // Undeclared exception!
      try { 
        node0.removeFirstChild();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      int int0 = Node.REFLECTED_OBJECT;
      Node node1 = Node.newNumber(0.0);
      node0.putIntProp((-2154), 1);
      node1.type = 49;
      node1.isAnd();
      node1.setString((String) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node0.SIDE_EFFECT_FLAGS);
      int int1 = Node.EMPTY_BLOCK;
      node0.isStringKey();
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1452));
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearAllFlags();
      Node node0 = new Node(465, (-1452), 1787);
      node0.isFunction();
      node0.isUnscopedQualifiedName();
      node0.isEmpty();
      Node node1 = new Node(2, 31, 4095);
      node1.isLabelName();
      node0.isSyntheticBlock();
      Node.extractCharno(30);
      node1.isLabelName();
      node1.isComma();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = jSDocInfo0.getAssociatedNode();
      Node node1 = Node.newString(31, "jsdoc_info");
      node1.getString();
      node1.addChildAfter((Node) null, (Node) null);
      node1.isQualifiedName();
      node0.setDouble(node1.STATIC_SOURCE_FILE);
      // Undeclared exception!
      try { 
        node0.wasEmptyNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setAllFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.isVarArgs();
      node0.getIntProp((-242));
      Node node1 = new Node(306654252, node0, 29, 36);
      node1.isLabelName();
      node1.isAssignAdd();
      node0.isContinue();
      node0.getAncestors();
      node1.getChildAtIndex(57);
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(43);
      node0.isTry();
      node1.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      node1.removeProp(56);
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isSwitch();
      node0.isQuotedString();
      node1.isDec();
      node2.isDec();
      node2.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = new Node(8);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node node1 = new Node(12, 32, 2169);
      node0.isFunction();
      node1.srcrefTree(node0);
      node1.isUnscopedQualifiedName();
      node0.isEmpty();
      node0.isNew();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = new Node(38, 10, 31);
      node2.isInc();
      node0.getInputId();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.setSourceEncodedPosition(57);
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2829));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags6.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags5.setAllFlags();
      Node node0 = new Node(126);
      node0.isName();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isCatch();
      node0.isCatch();
      node0.getProp(53);
      node0.getStaticSourceFile();
      node0.isDo();
      Node node1 = new Node(57, 64, 53);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(43);
      node1.isArrayLit();
      node1.isGetProp();
      node1.setSourceEncodedPositionForTree(2965);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isBreak();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)83;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isVarArgs();
      Node node1 = Node.newString(47, "", 93, 108);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node node3 = Node.newString("ASSIGN_BITXOR");
      node1.isFalse();
      node0.isNull();
      Node.newString(38, "");
      node0.isEquivalentToTyped(node3);
      node3.isNE();
      node1.getCharno();
      node2.isInstanceOf();
      Node node4 = Node.newString(42, "98SYqXa3i>ev", 308, 0);
      node1.addChildrenToFront(node4);
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      Node node0 = new Node(31, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isTry();
      node0.isIn();
      node1.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      node1.setDouble(4);
      node0.isEmpty();
      // Undeclared exception!
      try { 
        node0.getCharno();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DELPROP 3221 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.ImmutableList$SubList", (-1227), 64);
      node0.isNoSideEffectsCall();
      node0.setLength((-1227));
      Node.extractLineno((-1));
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      Node node1 = node0.getLastSibling();
      node1.setDouble(1.0);
      node1.isEmpty();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(47, "", 93, 108);
      node1.useSourceInfoIfMissingFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node node2 = Node.newString("ASSIGN_BITXOR");
      node1.isFalse();
      node0.isNull();
      node0.setSourceFileForTesting("");
      Node.newNumber((double) 56, 57, 43);
      Node node3 = Node.newString("ASSIGN_BITXOR");
      node2.replaceChild(node3, node0);
      int int0 = 3694;
      Node.mergeLineCharNo(int0, node2.IS_DISPATCHER);
      node2.isInc();
      // Undeclared exception!
      try { 
        node2.isAnd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(43);
      node1.isArrayLit();
      node1.isGetProp();
      Node node2 = node0.getLastSibling();
      node1.setDouble(0.0);
      node2.isEmpty();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      Node node1 = Node.newString(91, "Ordinal: ", 12, 48);
      node0.copyInformationFromForTree(node1);
      Node node2 = Node.newString("3MtRarkPlj,}D'");
      Node node3 = new Node(16, node1, node1, node1, node2);
      Node node4 = Node.newString("Ordinal: ", 31, 148);
      Node node5 = new Node(32, node4, node3, 1023, 42);
      Node node6 = node5.getLastSibling();
      int int0 = Node.DECR_FLAG;
      node4.isExprResult();
      node6.getLength();
      node4.isCast();
      node6.isAnd();
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E");
      Node node1 = Node.newString(",z", 31, (-2096));
      node0.isString();
      Node node2 = Node.newString(",z", (-2608), 39);
      node1.putBooleanProp(56, true);
      node1.getDouble();
      node0.isNull();
      node2.isGetterDef();
      int int0 = Node.JSDOC_INFO_PROP;
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = Node.newString(",z", 31, (-2096));
      node0.isString();
      Node.newString(",z", (-2614), 39);
      node0.isQuotedString();
      node0.setWasEmptyNode(true);
      node1.putBooleanProp(56, true);
      node1.getDouble();
      node0.isNull();
      int int0 = 607;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.setMutatesGlobalState();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING ,z [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.getIntProp(2186);
      node0.getIntProp(2186);
      Node node1 = new Node(2186, node0, node0, 8, 1);
      node1.isTrue();
      node0.isVar();
      node0.isVarArgs();
      node0.isSyntheticBlock();
      node1.getString();
      String string0 = "{(";
      int int0 = 1238;
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(43);
      node1.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSType[] jSTypeArray0 = new JSType[0];
      node0.isSwitch();
      node0.srcrefTree(node1);
      node0.isQuotedString();
      node1.isDec();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(47, "", 93, 108);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      Node node3 = new Node(8, 8221, 54);
      Node node4 = Node.newNumber(46.0, 29, 55);
      Node node5 = new Node(43, node4, node2, node0);
      node5.copyInformationFromForTree(node2);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isTry();
      node4.isFunction();
      node4.isUnscopedQualifiedName();
      node1.isEmpty();
      node0.isLabelName();
      Node.extractCharno(1365);
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = Node.newNumber(82.9151491);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags7.clearAllFlags();
      node_SideEffectFlags7.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags9 = new Node.SideEffectFlags(883);
      node_SideEffectFlags9.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags10 = node_SideEffectFlags6.setThrows();
      Node.SideEffectFlags node_SideEffectFlags11 = node_SideEffectFlags8.setMutatesGlobalState();
      node_SideEffectFlags11.setAllFlags();
      node_SideEffectFlags10.setThrows();
      Node node1 = new Node(102);
      node1.isThis();
      node0.addChildToBack(node1);
      node0.isLabelName();
      node0.getFirstChild();
      node0.isNoSideEffectsCall();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = Node.newString(":Y(", 1421, 110);
      node0.isIf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1645);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      Node node1 = new Node(39, 51, 51);
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isLocalResultCall();
      node1.isIn();
      node1.isNew();
      node2.isOnlyModifiesThisCall();
      node1.isCase();
      node2.getExistingIntProp(54);
      node0.removeChild(node2);
      node1.isCall();
      node0.isDo();
      node2.isNot();
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      Node node0 = Node.newString(1416, "}(T+*", 1416, 813);
      Node node1 = new Node(2, node0, node0, node0, node0);
      node1.hasOneChild();
      node1.isVar();
      node0.isSetterDef();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node node0 = new Node(93, 83, 119);
      Node node1 = new Node(83, node0, node0, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.isLocalResultCall();
      node0.isNew();
      node2.isOnlyModifiesThisCall();
      node1.isCase();
      node2.getExistingIntProp(0);
      node2.isCall();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node node0 = new Node(31, 3221, 31);
      node0.isQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.copyInformationFrom(node1);
      Node.newString("4");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(49, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Object#Key");
      Node node3 = Node.newString((-1829), "`~?WtE6", 29, 51);
      node1.useSourceInfoFrom(node2);
      node2.isQualifiedName();
      Node node4 = Node.newString(690, "Object#Key");
      node4.srcref(node1);
      node4.siblings();
      jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isLabelName();
      node0.isSyntheticBlock();
      Node.extractCharno(29);
      node3.isLabelName();
      Node node5 = new Node(1);
      node5.isComma();
      node1.isDefaultCase();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2829));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags5.setThrows();
      node_SideEffectFlags6.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags5.setAllFlags();
      Node node0 = new Node(126);
      node0.isName();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isCatch();
      node0.isCatch();
      node0.getProp(53);
      node0.getStaticSourceFile();
      node0.isDo();
      node0.getLastSibling();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString((-793), "change_time");
      node0.isLocalResultCall();
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      node0.isLabelName();
      node0.isAdd();
      node0.isSwitch();
      node0.mayMutateArguments();
      node0.getParent();
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(1413, 1413, 1413);
      Node node1 = Node.newNumber((double) 53);
      Node node2 = Node.newString(91, "", 42, 2);
      node1.isEquivalentToShallow(node2);
      Node node3 = new Node(1413, node0, node0, node0, node0, 39, 939);
      node0.detachChildren();
      node0.setDirectives((Set<String>) null);
      Node node4 = node3.srcrefTree(node0);
      node4.getInputId();
      Node node5 = Node.newNumber((double) 49);
      node5.detachChildren();
      node3.isAnd();
      node0.isVar();
      node0.isOnlyModifiesArgumentsCall();
      node3.removeChildren();
      node3.getFirstChild();
      node0.hasChild(node1);
      node4.hasChild(node2);
      node1.replaceChild(node0, (Node) null);
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(25);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = new Node(113);
      node0.isOptionalArg();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isCatch();
      node0.isCatch();
      node0.getProp((-368));
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = Node.newString("]TNF31lw'-N!m-44", 77, 77);
      node0.isNoSideEffectsCall();
      node0.setLength(77);
      Node.extractLineno(2);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node0.getSourceOffset();
      Node node1 = new Node(4, 49, 37);
      node1.setSourceEncodedPositionForTree(8388608);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.setDouble(16);
      node0.isEmpty();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      simpleErrorReporter0.warning("Object#Element", "Z@zg+;YO)R<`", 29, 29);
      JSType[] jSTypeArray0 = new JSType[1];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.mayMutateArguments();
      node0.isGetterDef();
      int int0 = Node.EMPTY_BLOCK;
      node0.isEquivalentTo(node0);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-332));
      int int1 = Node.EMPTY_BLOCK;
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node1.isStringKey();
      node1.isDec();
      node0.useSourceInfoFrom(node1);
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collec.UnmodifiableIterator");
      node0.isGetElem();
      InputId inputId0 = new InputId("1e[VeC|zf");
      inputId0.toString();
      inputId0.toString();
      node0.siblings();
      inputId0.toString();
      inputId0.toString();
      node0.setInputId(inputId0);
      inputId0.toString();
      node0.removeProp((-5736));
      node0.isFor();
      node0.getJSType();
      Node node1 = new Node(48, node0, node0, node0, 42, 1);
      node1.isVarArgs();
      node1.isNew();
      node0.isNew();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isInc();
      node0.getInputId();
      Node node2 = new Node(37, 0, 15);
      node0.isNoSideEffectsCall();
      node2.isDefaultCase();
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = Node.newString((-785), "sw50}r8exRtZ3Uid1", (-785), (-785));
      node0.getJSDocInfo();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      node0.setSourceFileForTesting("VkN");
      node0.isEquivalentTo(node0, true, true, true);
      node0.getSourceOffset();
      node0.addChildrenAfter(node0, node0);
      node0.getJsDocBuilderForNode();
      int int0 = 126;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
      node0.isStringKey();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = Node.newString((-785), "sw50}r8exRtZ3Uid1", (-785), (-785));
      node0.getJSDocInfo();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Node node1 = new Node(38);
      node0.setSourceFileForTesting("is_constant_name");
      node0.isEquivalentTo(node1, true, true, true);
      node0.getSourceOffset();
      node1.addChildrenAfter(node0, node0);
      node1.getJsDocBuilderForNode();
      int int0 = 2965;
      int int1 = 64;
      int int2 = 32;
      node1.putIntProp(int1, int2);
      node1.isOnlyModifiesThisCall();
      node0.setCharno(int0);
      node0.isGetElem();
      node0.isDebugger();
      int int3 = 37;
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2186);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = Node.newString("ASSIGN_BITXOR");
      Node node1 = Node.newString(42, "ASSIGN_BITXOR");
      node0.setType(1);
      node0.removeProp(37);
      Node node2 = new Node(112);
      node1.isQuotedString();
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.QUOTED_PROP;
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(3367, 2, 1848);
      Node node4 = new Node((-923), node0, node1, node3, 153, 15);
      Node node5 = node4.removeChildAfter(node2);
      Node node6 = node5.copyInformationFromForTree(node3);
      node0.setWasEmptyNode(true);
      Node.newString(42, (String) null);
      Node node7 = new Node(node6.REFLECTED_OBJECT);
      Node node8 = node1.copyInformationFromForTree(node6);
      node5.isQualifiedName();
      node8.isQuotedString();
      node4.isDec();
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.QUOTED_PROP;
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(37, 2, 1848);
      Node node4 = new Node((-923), node0, node1, node3, 153, 15);
      Node node5 = node4.removeChildAfter(node2);
      Node node6 = node5.copyInformationFromForTree(node3);
      Node.newString(42, (String) null);
      Node node7 = new Node(node6.REFLECTED_OBJECT);
      Node node8 = node1.copyInformationFromForTree(node6);
      node5.isQualifiedName();
      node8.isQuotedString();
      node4.isDec();
      node1.isNE();
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E");
      node0.removeProp(1421);
      node0.isOnlyModifiesThisCall();
      Node node1 = Node.newString(4, "OvI'QsZIbW+~V|E", 42, 23);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1187);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node node3 = Node.newString("OvI'QsZIbW+~V|E");
      node3.isFalse();
      node1.isNull();
      Node.newString((-677), "OvI'QsZIbW+~V|E");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node0);
      node_NodeMismatch0.equals(node_SideEffectFlags0);
      node2.getChildAtIndex((-4096));
      node3.getLastSibling();
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(43);
      node0.isTry();
      node1.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.hasOneChild();
      node1.isAnd();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = Node.newString("&,P8;e,v{WSli7bL", 102, 31);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node node1 = new Node(1096, node0, node0, node0, node0, 50, (-1060));
      node0.isVar();
      node1.isVarArgs();
      node1.isWhile();
      Node node2 = new Node(0, node0, 47, (-2399));
      Node node3 = new Node(node1.INCRDECR_PROP);
      node1.isTry();
      node0.getChildCount();
      String string0 = "com.google.common.collect.UnmodifiableIterator";
      Node node4 = Node.newString(string0);
      // Undeclared exception!
      try { 
        node4.isAssign();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = new Node(113);
      node0.toString();
      node0.isName();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isCatch();
      node0.isCatch();
      node0.isQuotedString();
      node0.isDec();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(43);
      node1.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isSwitch();
      node0.isQuotedString();
      node1.isDec();
      node1.isWith();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags1.setThrows();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isFor();
      node0.addSuppression("DD~]QFx+@");
      Node node1 = Node.newString("ASSIGN_BITXOR");
      node0.checkTreeEquals(node1);
      node1.getJSDocInfo();
      Node.extractLineno((-3800));
      node0.getSourceOffset();
      Node node2 = Node.newString("DD~]QFx+@", 1126, 30);
      node0.setSourceFileForTesting("input_id");
      node0.setVarArgs(false);
      node2.putIntProp(55, 2481);
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = Node.newString("]TNF31lw'-N'm-44", 77, 77);
      node0.isNoSideEffectsCall();
      node0.isNoSideEffectsCall();
      node0.setLength((-1152));
      Node.extractLineno((-589));
      Node node1 = Node.newString(57, "Y5\"o(", 37, (-1324));
      node1.isSetterDef();
      node0.isUnscopedQualifiedName();
      Node node2 = new Node(32);
      node2.getSourceOffset();
      node2.isGetterDef();
      int int0 = Node.EMPTY_BLOCK;
      node0.isCase();
      node1.setString((String) null);
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(31);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = new Node(48, node0, node0, node0, node0, 113, 51);
      node0.isFunction();
      Node node3 = new Node(154, 30, 54);
      node0.isLabelName();
      node3.isLabelName();
      node3.isComma();
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(113, 113, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.siblings();
      node0.isTry();
      node0.isString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isSwitch();
      node0.isQuotedString();
      node1.isDec();
      node0.isDo();
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      Node node1 = new Node(126, 47, 2);
      Node node2 = node1.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(113);
      node0.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isSwitch();
      node2.isQuotedString();
      node1.isDec();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3122));
      node_SideEffectFlags0.setMutatesGlobalState();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-3122), 93, 761);
      Node node1 = new Node(102, node0, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node2.cloneTree();
      node0.isTry();
      node0.isFunction();
      Node node3 = new Node(29, node1, node2, node1, node2);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = Node.newNumber((-755.8923));
      int int0 = Node.QUOTED_PROP;
      Node node1 = Node.newNumber(142.89598698838506);
      Node node2 = new Node(3367, 2, 1848);
      Node node3 = new Node((-923), node0, node1, node2, 42, 15);
      Node node4 = node3.removeChildAfter(node0);
      node4.copyInformationFromForTree(node2);
      node0.setWasEmptyNode(true);
      String string0 = null;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[8];
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("d{");
      JSType jSType0 = templateTypeMapReplacer0.caseTemplateType(templateType0);
      jSTypeArray0[0] = jSType0;
      JSTypeNative jSTypeNative0 = JSTypeNative.EVAL_ERROR_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
      jSTypeArray0[1] = (JSType) objectType0;
      JSTypeNative jSTypeNative1 = JSTypeNative.ALL_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative1);
      jSTypeArray0[2] = (JSType) functionType0;
      // Undeclared exception!
      try { 
        templateTypeMapReplacer0.caseNumberType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.TemplateTypeMapReplacer", e);
      }
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(634);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags6.setAllFlags();
      Node node0 = new Node(40);
      Node node1 = new Node(40, node0, node0, node0, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(1252);
      node0.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isSwitch();
      Node node3 = new Node(31, (-216), 40);
      node3.isQuotedString();
      node2.isDec();
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E", 1595, 99);
      Node node1 = Node.newString(16, "OvI'QsZIbW+~V|E");
      Node node2 = new Node(2, 37, 52);
      node0.setString("");
      Node node3 = Node.newString("OvI'QsZIbW+~V|E", 2, 49);
      node0.getDirectives();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.getSourceFileName();
      node1.checkTreeEquals((Node) null);
      node3.isVar();
      String string0 = "";
      int int0 = (-670);
      int int1 = 130;
      // Undeclared exception!
      try { 
        Node.newString(string0, int0, int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags6.setReturnsTainted();
      Node node1 = new Node(4095, 4095, 42);
      Node node2 = new Node(38);
      Node node3 = new Node(39, node2, node0, node0, node2, 51, 48);
      Node node4 = node3.copyInformationFromForTree(node2);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      node2.isArrayLit();
      node3.isGetProp();
      node0.setSourceEncodedPositionForTree((-198));
      node0.mayMutateArguments();
      node4.getQualifiedName();
      node2.cloneNode();
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1421);
      Node node0 = new Node(118, 118, 3221);
      Node node1 = Node.newString("CqV", 42, 0);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.isTry();
      node0.isFunction();
      node2.putBooleanProp(4, false);
      node2.isNull();
      Node.newString(124, "CqV");
      node0.useSourceInfoIfMissingFrom(node2);
      node1.isQuotedString();
      node1.isDec();
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber((double) 29);
      Node node2 = new Node(50, 12, 4261);
      node2.isFunction();
      node2.isIn();
      node2.getInputId();
      node0.setInputId((InputId) null);
      node1.getAncestors();
      node2.getJsDocBuilderForNode();
      node1.isThrow();
      Node node3 = new Node(30);
      Node node4 = node3.clonePropsFrom(node0);
      node4.getJsDocBuilderForNode();
      Node node5 = node2.srcrefTree(node1);
      node5.getDouble();
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-1808), nodeArray0);
      Node node1 = new Node(2189, nodeArray0, 0, 122);
      node1.mayMutateArguments();
      Node node2 = Node.newString(":Y(");
      Node node3 = node0.copyInformationFromForTree(node1);
      node1.mayMutateArguments();
      Node node4 = Node.newNumber(0.7);
      node0.isEquivalentToShallow(node1);
      node3.isWith();
      Node node5 = new Node(49, nodeArray0, 43, 38);
      Node node6 = new Node(15, node5, node2, node3, (-4544), 52);
      node0.setCharno(41);
      node4.addChildBefore(node5, node6);
      int int0 = 3000;
      node1.setChangeTime(int0);
      node4.checkTreeEquals(node3);
      node1.isUnscopedQualifiedName();
      node0.isFunction();
      node3.isInstanceOf();
      // Undeclared exception!
      try { 
        node1.getType();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = new Node(102);
      node0.siblings();
      node0.isThis();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.removeProp(12);
      node0.setLineno(52);
      node0.isOnlyModifiesThisCall();
      node0.useSourceInfoIfMissingFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(49);
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = Node.newString("ASSIGN_BITXOR");
      Node.newString(46, "ASSIGN_BITXOR");
      node1.setType(32);
      Node node2 = new Node(12);
      node1.getBooleanProp(16);
      Node node3 = Node.newString("ASSIGN_BITXOR");
      node2.checkTreeTypeAwareEqualsImpl(node3);
      node3.isTry();
      node2.isFunction();
      Node node4 = Node.newNumber((double) 43);
      Node node5 = Node.newNumber(561.4, 43, 56);
      Node node6 = new Node(1540, node2, node3, node4, node5);
      node6.cloneTree();
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      Node node0 = new Node((-3158));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node3 = new Node(98, node0, node1, node0, node2, 47, (-3519));
      Node node4 = new Node(102, 37, 4123);
      Node node5 = node4.copyInformationFromForTree(node2);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      node0.isArrayLit();
      node3.isGetProp();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) null);
      node5.setSourceEncodedPositionForTree(node1.MAX_COLUMN_NUMBER);
      node3.mayMutateArguments();
      node3.getQualifiedName();
      node2.useSourceInfoIfMissingFromForTree(node5);
      node4.isLabel();
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(126);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = Node.newString(108, ":Y(", 4204, 126);
      Node node1 = new Node(15, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(51);
      node1.isTrue();
      node0.isReturn();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("length", true);
      SimpleSourceFile simpleSourceFile1 = new SimpleSourceFile(":Y(", false);
      node1.putProp(126, simpleSourceFile1);
      node0.isVarArgs();
      node0.isSyntheticBlock();
      node0.getString();
      Node node3 = node0.getParent();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node4.isAssignAdd();
      node3.isHook();
      node2.isCall();
      node4.isDo();
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = Node.newNumber((double) 40, 40, 40);
      node0.isFromExterns();
      node0.getSourceFileName();
      node0.isNumber();
      node0.getDouble();
      node0.isGetElem();
      node0.isDefaultCase();
      node0.setInputId((InputId) null);
      node0.getAncestors();
      node0.isThrow();
      Node node1 = new Node((-185));
      Node node2 = node1.clonePropsFrom(node0);
      node2.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      int int0 = 86;
      Node node0 = Node.newString((-112), "Node has existing properties.");
      Node node1 = new Node(147, node0, 98, 33);
      node1.copyInformationFromForTree(node0);
      int int1 = 148;
      Node node2 = new Node(147, node0, node1, 13, 148);
      int int2 = 114;
      Node node3 = new Node(int0, node2, node0, node1, node1, int1, int2);
      node0.children();
      node3.getChildCount();
      int int3 = 361;
      // Undeclared exception!
      try { 
        Node.mergeLineCharNo(int3, node1.MAX_COLUMN_NUMBER);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node node0 = new Node(111, (-1849), 111);
      Node node1 = Node.newString("4", 30, 102);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.isTry();
      node1.isFunction();
      node1.isIn();
      node0.isSetterDef();
      node2.isUnscopedQualifiedName();
      node2.getSourceOffset();
      node0.isCatch();
      Node node3 = new Node(55, node2, node0, node2, node1, 57, (-1005));
      node3.isQuotedString();
      node3.isName();
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(43);
      node0.getJSDocInfo();
      node1.isArrayLit();
      Node node2 = Node.newString(1170, "is_constant_name", 132, 662);
      node0.isSetterDef();
      node0.isUnscopedQualifiedName();
      node1.getSourceOffset();
      node2.isGetterDef();
      int int0 = Node.EMPTY_BLOCK;
      node1.isCase();
      node2.isEquivalentTo(node1, true, true, true);
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      Node node2 = new Node(64, 3221, 8);
      Node node3 = node2.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>((-1));
      node2.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isSwitch();
      node3.isQuotedString();
      node2.isDec();
      // Undeclared exception!
      try { 
        node1.isWith();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PriorityQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      Node node2 = new Node(38);
      Node node3 = node1.copyInformationFromForTree(node2);
      Node.newString(132, "com.google.javascript.rhino.Node$StringNode", 105, 43);
      node2.isQualifiedName();
      node3.siblings();
      node1.getDouble();
      node3.isNull();
      node3.isGetterDef();
      int int0 = Node.JSDOC_INFO_PROP;
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      Node node2 = new Node(38);
      Node node3 = node1.copyInformationFromForTree(node2);
      Node.newString(132, "com.google.javascript.rhino.Node$StringNode", 105, 43);
      node2.isQualifiedName();
      node3.siblings();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      String string0 = "\"lEr)/>C\\";
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      TemplatizedType templatizedType0 = null;
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      Node node1 = new Node(40, 4, 52);
      node0.putIntProp((-1123), 1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1757);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      Node.newString("=_5FgWG6^M");
      Node.newString(36, "=_5FgWG6^M");
      node0.setType(31);
      Node node2 = new Node(12);
      node2.getBooleanProp(101);
      Node node3 = new Node(51, 57, 144);
      Node node4 = node3.copyInformationFromForTree(node1);
      node4.isQualifiedName();
      node1.isQuotedString();
      node4.isDec();
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = Node.newString((-785), "sw50}r8exRtZ3Uid1", (-785), (-785));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.clearSideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setAllFlags();
      Node node1 = new Node(53, 57, 53);
      int int0 = Node.EMPTY_BLOCK;
      Node node2 = Node.newString(0, "%w#uQTNOF{");
      Node node3 = Node.newNumber(0.0, 38, 117);
      node3.isEquivalentTo(node2);
      node3.isDefaultCase();
      node_SideEffectFlags3.setMutatesThis();
      int int1 = Node.EMPTY_BLOCK;
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node4 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node4.isStringKey();
      node3.isDec();
      node2.getAncestor(4);
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      Node node0 = Node.newNumber(3047.752365);
      Node node1 = new Node(876, node0, 12, 6);
      node0.addChildrenToFront(node1);
      node1.getSourceFileName();
      node1.isNot();
      node1.isVar();
      node1.isVarArgs();
      Node node2 = Node.newNumber(0.0);
      node2.getDouble();
      node1.isEquivalentToTyped(node2);
      node1.isNE();
      node1.getCharno();
      node0.getChildBefore(node1);
      node1.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(118, 118, 3221);
      Node node1 = Node.newString(49158, "IhzBAuF AZ]K0,");
      node0.isReturn();
      Node node2 = node0.srcref(node1);
      node2.isOnlyModifiesArgumentsCall();
      Node node3 = node0.copyInformationFrom(node1);
      node0.cloneTree();
      node3.children();
      int int0 = Node.EMPTY_BLOCK;
      node1.isStringKey();
      node2.addChildBefore(node1, node3);
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      String string0 = "tvR";
      Node node0 = Node.newString(147, "tvR");
      Node node1 = null;
      node0.toStringTree();
      node0.replaceChildAfter((Node) null, (Node) null);
      EvoSuiteFile evoSuiteFile0 = null;
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.mayMutateArguments();
      int int0 = Node.FLAG_GLOBAL_STATE_UNMODIFIED;
      node0.isEquivalentTo(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-332));
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      Node node2 = Node.newString("Object#Key");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Object#Element");
      node0.isEquivalentToShallow(node1);
      simpleErrorReporter0.warning("Object#Element", "Object#Element", (-299), 99);
      node1.isFalse();
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = Node.newNumber(897.10917);
      node0.getType();
      Node node1 = Node.newNumber((double) 29);
      Node node2 = new Node(50, 12, 4261);
      node2.isFunction();
      node2.isIn();
      node0.addChildrenToFront(node1);
      node1.isFalse();
      node1.isArrayLit();
      Node.mergeLineCharNo(12, (-440));
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = new Node(32);
      node0.isWith();
      node0.isEquivalentTo(node0, false, false, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = new Node(57, 183, 2);
      Node node2 = node0.copyInformationFromForTree(node1);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(46);
      node2.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node3 = Node.newString("#");
      node3.getExistingIntProp((-1633));
      node3.isSwitch();
      node3.isQuotedString();
      node2.isDec();
      // Undeclared exception!
      try { 
        node0.isWith();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -1633
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      node_SideEffectFlags0.clearSideEffectFlags();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node node0 = new Node(108, 388, 31);
      Node node1 = new Node(37);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.isIn();
      node0.isNew();
      node2.isOnlyModifiesThisCall();
      node1.isCase();
      Node node3 = new Node(44, node1);
      node3.getExistingIntProp(153);
      node1.isDec();
      node3.isLabel();
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = Node.newString("Y");
      Node node1 = new Node(36, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = Node.newString("Y");
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      Node node3 = new Node((-160), 2331, 8);
      node3.copyInformationFromForTree(node2);
      node2.isFunction();
      node0.appendStringTree((Appendable) null);
      node1.isUnscopedQualifiedName();
      node1.isEmpty();
      Node node4 = null;
      // Undeclared exception!
      try { 
        node1.checkTreeTypeAwareEqualsImpl(node4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newNumber(142.89598698838506);
      Node node1 = new Node(47, 2, 29);
      Node node2 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      Node.newString("com.google.common.collect.UnmodifiableIterator");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node2.isSetterDef();
      node1.isNew();
      Node node3 = Node.newString("value");
      Node node4 = node1.useSourceInfoIfMissingFrom(node2);
      node1.addChildrenToFront(node4);
      Node[] nodeArray0 = new Node[0];
      Node node5 = new Node(40, nodeArray0);
      Node node6 = new Node(388, node2, node1, node5, (Node) null);
      node6.addChildrenAfter(node0, node0);
      node3.isVoid();
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(83);
      node0.setSourceFileForTesting("&MZ^R/s.~!");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isEquivalentTo(node1, true, true, false);
      int int0 = node0.getSourceOffset();
      node1.addChildrenAfter(node0, node0);
      node1.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(int0);
      node0.isStringKey();
      node0.isDec();
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isBlock();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      node0.getJsDocBuilderForNode();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isDelProp();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isOptionalArg();
      node0.isIn();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node0.isObjectLit();
      Node node1 = node0.detachFromParent();
      int int0 = 110;
      node1.setChangeTime(int0);
      node1.isEquivalentTo(node0);
      Node node2 = node0.getFirstChild();
      StaticSourceFile staticSourceFile0 = node2.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node1.setStaticSourceFile(staticSourceFile0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      Node node0 = new Node(132, 132, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isIn();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append((String) null);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      nodeArray0[3] = node2;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node3 = new Node(401, nodeArray0, 2, 10);
      node3.isComma();
      nodeArray0[0].getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = Node.newString("OvI'QsZIbW+~V|E");
      Node node1 = new Node(37, node0, node0, 46, 29);
      node0.mayMutateGlobalStateOrThrow();
      node1.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      Node node2 = new Node(30, 4095, 31);
      Node node3 = node2.copyInformationFromForTree(node1);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(54);
      node1.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node3.isSwitch();
      node3.isQuotedString();
      node2.isContinue();
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = Node.newString(1003, "com.google.common.collect.UnmodifiableIterator", 3204, (-506));
      Node node1 = new Node(31, node0, node0, node0, 32, 54);
      node1.isSetterDef();
      node1.isNew();
      String string0 = "EvalError";
      Node node2 = Node.newString("EvalError");
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      Node node4 = Node.newNumber((-106.234));
      node2.addChildrenToFront(node4);
      int int0 = 103;
      int int1 = (-3118);
      char[] charArray0 = new char[9];
      charArray0[0] = '`';
      charArray0[1] = '[';
      charArray0[2] = 'l';
      charArray0[3] = '5';
      charArray0[4] = 'Y';
      charArray0[5] = '~';
      charArray0[6] = ':';
      charArray0[7] = 'l';
      charArray0[8] = 'O';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      node4.appendStringTree(charBuffer0);
      Node node5 = Node.newString(string0, int1, node4.COLUMN_MASK);
      Node node6 = new Node(int0, node3, node5, node3);
      node6.addChildrenAfter(node2, node5);
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = new Node(47);
      Node node1 = new Node(31, node0, node0, node0, node0, (-2770), 31);
      Node node2 = new Node(37, 37, 36);
      Node node3 = node2.copyInformationFromForTree(node1);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      node0.isArrayLit();
      Node node4 = new Node(774);
      node4.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node4.isSyntheticBlock();
      Node.extractCharno(4);
      node0.isLabelName();
      node3.srcrefTree(node2);
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags6.setThrows();
      node_SideEffectFlags7.setMutatesGlobalState();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags8.setMutatesThis();
      Node node0 = new Node(492);
      Node node1 = Node.newString(155, "");
      node1.isName();
      node1.isScript();
      Node node2 = new Node(40, node1, 63, 1105);
      Node node3 = node2.getLastSibling();
      node3.isVoid();
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber(2044.56, 3600, 3600);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.documentBlock((String) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte) (-27);
      byteArray0[2] = (byte)95;
      byteArray0[3] = (byte)93;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = jSDocInfo0.getAssociatedNode();
      Node node2 = node0.useSourceInfoFrom((Node) null);
      node1.isSyntheticBlock();
      Node node3 = node1.useSourceInfoFrom(node0);
      node0.checkTreeEquals(node2);
      node2.mayMutateArguments();
      node3.removeProp(node1.INCRDECR_PROP);
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = Node.newNumber(142.89598698838506);
      Node node1 = new Node(47, 2, 29);
      Node node2 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      Node node3 = new Node(31, node1, node1);
      node3.addChildrenToFront(node2);
      node1.isFromExterns();
      node2.getSourceFileName();
      node1.isVar();
      node1.isVarArgs();
      Node node4 = Node.newNumber((double) 56);
      node4.getDouble();
      node4.isEquivalentToTyped(node3);
      node1.isName();
      node1.isScript();
      Node node5 = new Node(256, node4, 33, 37);
      node5.getLastSibling();
      node2.isVoid();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(10);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags((-3615));
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node_SideEffectFlags6.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      Node node0 = new Node(126);
      node0.isName();
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isCatch();
      node0.isEmpty();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[5];
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("@;JJ/qZ@> f>KT1YIl", node0, objectType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      jSTypeArray0[0] = (JSType) enumElementType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) enumType0, false, jSTypeArray0);
      jSTypeArray0[1] = (JSType) functionType0;
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewReturnType(functionType0, (JSType) null);
      jSTypeArray0[2] = (JSType) functionType1;
      enumElementType0.getTypeOfThis();
      jSTypeArray0[3] = null;
      node0.getJSType();
      jSTypeArray0[4] = null;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node node0 = Node.newString(86, "7>uZaBVe!", (-733), (-893));
      Node node1 = new Node((-893), node0, node0, node0, node0);
      Node node2 = new Node((-733), node1, node1, node1);
      node2.isAssign();
      node1.hasChild(node2);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node3 = node1.setJSDocInfo(jSDocInfo0);
      node3.getBooleanProp((-285));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node2.isCast();
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      Node node0 = new Node(115, 3221, 31);
      Node node1 = node0.copyInformationFromForTree(node0);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>(43);
      node1.isGetProp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isSwitch();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isQuotedString();
      node1.isDec();
      node1.isWith();
      node2.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = Node.newNumber(142.89598698838506);
      Node node1 = new Node(47, 2, 29);
      Node node2 = Node.newString("com.google.common.collect.UnmodifiableIterator");
      Node node3 = new Node(31, node1, node1);
      node3.addChildrenToFront(node2);
      node1.isFromExterns();
      node2.getSourceFileName();
      node1.isVar();
      node1.isVarArgs();
      Node.newNumber((double) 56);
      Node node4 = Node.newString(130, "com.google.common.collect.UnmodifiableIterator");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node3, node3);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);
      simpleSourceFile0.getLineOffset(1);
      node_NodeMismatch0.equals(simpleSourceFile0);
      Node node5 = new Node(53, node0, node0, node4);
      node2.getLastSibling();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(118, 118, 3221);
      Node node1 = node0.copyInformationFromForTree(node0);
      node0.isFunction();
      node1.isIn();
      node1.isSetterDef();
      node1.isEquivalentTo(node1);
      node0.getSourceOffset();
      node0.getLastSibling();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("com.google.javascript.rhino.jstype.JSTypeRegistry$1", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node2 = Node.newNumber((double) 43, 105, 38);
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node((-67), (-67), (-1304));
      node0.isFunction();
      node0.getJSType();
      node0.setJSType((JSType) null);
      Node node1 = Node.newString("Hn4r^pS[*U).w}2iPi.");
      node0.srcref(node1);
  }
}
