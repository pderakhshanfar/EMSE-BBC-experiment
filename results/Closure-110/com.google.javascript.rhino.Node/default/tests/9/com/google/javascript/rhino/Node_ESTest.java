/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 04 04:57:30 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.UnmodifiableListIterator;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import java.io.CharArrayWriter;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.CharBuffer;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = Node.newNumber(1015.29244705438);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setInterface(true);
      Node node1 = Node.newString("");
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = new Node(24, 24, 24);
      node0.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = Node.newString("d@`gL'iY'MUmj?}");
      node0.getQualifiedName();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(105, node0);
      node1.isAnd();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = Node.newNumber(1526.2861517808788);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(24);
      Node node1 = new Node(8, node0, node0, node0, 53, 40);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node(42, 42, 573);
      Node node1 = new Node(573, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.wasEmptyNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 12, 39);
      Node node1 = new Node(329, node0, 15, 54);
      Node[] nodeArray0 = new Node[0];
      node1.getDirectives();
      Node node2 = new Node(1, nodeArray0);
      node1.isNE();
      node1.replaceChild(node0, node2);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      int int0 = (-1948);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(0, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = new Node(42, 42, 42);
      Node node1 = null;
      try {
        node1 = new Node(32, (Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2786);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setMutatesThis();
      Node node0 = Node.newNumber(0.0);
      node0.isContinue();
      node0.isOr();
      Node node1 = null;
      Node node2 = null;
      try {
        node2 = new Node(4366, (Node) null, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = new Node(157);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = new Node(125);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Vector<JSType> vector0 = new Vector<JSType>();
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = new Node(897);
      node0.isOr();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = new Node(38);
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(102);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(16, (Node) null, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      int int0 = 148;
      Node node0 = null;
      try {
        node0 = new Node(148, (Node[]) null, 148, 148);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(117, nodeArray0, 117, 117);
      node0.toString(false, false, false);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = Node.newNumber(1522.8);
      Node node1 = Node.newNumber((double) 42);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node_NodeMismatch0.equals(node0);
      Node node2 = null;
      try {
        node2 = new Node(12, (Node[]) null, (-52), 42);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.shouldAllThrowIOExceptions();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newNumber((-557.9));
      int int1 = 3321;
      int int2 = (-536870912);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newNumber(1125.26442514);
      node0.wasEmptyNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = new Node(107, 3427, 107);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(3427);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 107
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 925, 0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      node0.toStringTree();
      node0.setChangeTime(905);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node.newNumber((-184.361090849), 111, 111);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = new Node(173, 173, 173);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(2044);
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newString(5, "");
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int int0 = 3400;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setLineno(0);
      Node node1 = new Node(53, node0, node0, (-1161), 128);
      int int1 = 246;
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node(42, 42, 573);
      Node node1 = new Node(4095, node0, node0);
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isFor();
      Node.extractCharno(118);
      node0.setLineno(125);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = Node.newNumber(2781.9976, 2492, 2492);
      node0.getCharno();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = Node.newString(", ", (-194), (-194));
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, 4095);
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(42, 42, 42);
      Node node1 = new Node(42, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = new Node(42, 42, 42);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = new Node(42, 42, 573);
      node0.setVarArgs(true);
      Node node1 = node0.cloneNode();
      Node node2 = Node.newString("unexpected prop id ", 305, 305);
      node2.setLineno(50);
      Node node3 = new Node((-408), node2, node0, 49, (-2234));
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = 7395;
      Node node0 = new Node((-884), 7395, (-884));
      node0.isOptionalArg();
      Node node1 = new Node(38, node0);
      node0.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(46);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -884
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.getProp((-450));
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(596, (-3599), 596);
      node0.isOnlyModifiesArgumentsCall();
      node0.isOptionalArg();
      node0.putIntProp((-3599), (-626));
      node0.setType((-2234));
      node0.getInputId();
      node0.putProp(596, (Object) null);
      node0.getChangeTime();
      node0.isFunction();
      node0.getChildAtIndex((-3599));
      node0.isNumber();
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = new Node(33);
      Node node1 = new Node(31, node0, node0, node0);
      node1.setVarArgs(true);
      node1.isIn();
      node0.siblings();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = new Node(113);
      node0.setLength(2002);
      node0.isContinue();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = new Node(107);
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isNumber();
      node0.getAncestor(0);
      node0.isInc();
      Node.extractCharno(51);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isFor();
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = new Node(57, 56, 56);
      Node node1 = new Node(51, node0);
      node1.putProp(373, node0);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isVar();
      node0.isOptionalArg();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J");
      node0.getQualifiedName();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = new Node(41, 41, 83);
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(107);
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newString("I&\u0004_r7$e^<{");
      node0.setType(21);
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.getChangeTime();
      node0.mayMutateGlobalStateOrThrow();
      node0.isTry();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING &qpxu'qP'cT0v+!J 122 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      Node.newString("Jc]8-9@I )lb:4?");
      node1.isSetterDef();
      node1.isObjectLit();
      node1.getChildAtIndex(1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newString(105, "", 117, (-4443));
      node0.putBooleanProp(329, true);
      node0.isQualifiedName();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node0.getString();
      node0.siblings();
      node0.isFunction();
      node0.getNext();
      node0.isSwitch();
      Node.extractLineno((-1008));
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newString(39, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node2 = new Node(1112, node1, node1, 4095, 39);
      Node node3 = node2.copyInformationFrom(node1);
      node3.getSourceFileName();
      node1.getJsDocBuilderForNode();
      node2.isNew();
      node0.isNumber();
      node1.getLineno();
      Node node4 = Node.newString("Duplicate record field ");
      node4.isQuotedString();
      node1.isOnlyModifiesArgumentsCall();
      node4.isThis();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(596, 596, 596);
      node0.isOnlyModifiesArgumentsCall();
      node0.isOptionalArg();
      node0.putIntProp(596, 57);
      node0.setType((-2234));
      node0.getInputId();
      node0.putProp(596, (Object) null);
      int int0 = Node.LENGTH;
      node0.isFunction();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(596);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[5];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = Node.newNumber((-10.1560572550958), 56, 56);
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createEnumType("DICT", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = new Node(122);
      node0.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString((-544), "");
      boolean boolean0 = true;
      node0.isQuotedString();
      node0.mayMutateArguments();
      node0.setVarArgs(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -544
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = Node.newString("ZWW15eI");
      node0.isThis();
      node0.isQuotedString();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(599, 599, 599);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 599
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = new Node(461845907);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node2.isLocalResultCall();
      node0.setDirectives(hashSet0);
      int int0 = Integer.MIN_VALUE;
      try { 
        MockURI.URI("B%t|(_`KLx", ".negate()", "@&49(c/%/qCDB!p");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 1: B%t|(_`KLx:.negate()#@&49(c/%25/qCDB!p
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = Node.newString(43, "Object#Key");
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newNumber((double) 38, 12, 38);
      Node node1 = Node.newNumber((double) 4095);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = Node.newString(275, "I<7v@9-:ye`qB6\nh");
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = Node.newNumber((-91.41493183545067));
      node0.addSuppression("1Dvdw[=.3?>kew#,");
      node0.isRegExp();
      node0.setLineno((-2012));
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 77, 77);
      Node node1 = new Node(77, node0, node0, 32, (-968));
      Node node2 = Node.newString("Jc]8-9@I )lb:4?");
      Node node3 = new Node(77, node1);
      node3.isArrayLit();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      node0.isEquivalentTo(node2);
      node1.isEquivalentTo(node3, true, true, false);
      Node node4 = null;
      try {
        node4 = new Node(2, node3, node0, node2, node2, 47, 55);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.isLocalResultCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Set<String> set0 = jSDocInfo0.getModifies();
      node0.setDirectives(set0);
      Node node1 = new Node(46, node0, node0, node0, 122, 122);
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(107);
      Node node1 = new Node(54);
      node0.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = new Node(59);
      Node node1 = node0.srcrefTree(node0);
      node0.isLocalResultCall();
      Node node2 = new Node(16, node0);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node0 = Node.newNumber(1931.88);
      Node node1 = node0.cloneNode();
      node0.addChildToBack(node1);
      node1.setDouble((-1906.97207));
      node0.isOnlyModifiesArgumentsCall();
      node1.isEquivalentToShallow(node0);
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = new Node(42, 42, 573);
      Node node1 = node0.cloneNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("v^aMi6e+", true);
      simpleSourceFile0.getLineOffset(8);
      simpleSourceFile0.getLineOffset(2);
      simpleSourceFile0.getLineOffset(51);
      simpleSourceFile0.getLineOffset(53);
      simpleSourceFile0.getLineOffset(54);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.detachChildren();
      node0.isQuotedString();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = new Node(89);
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = new Node(3023);
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = new Node(24);
      node0.detachChildren();
      Node node1 = new Node(8, node0, node0, node0, 53, 40);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(24, 24, 24);
      node0.cloneNode();
      node0.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isQuotedString();
      node0.isOnlyModifiesThisCall();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newNumber((-1744.6286), 7, 394);
      Node node1 = new Node((-2203), node0, node0, node0, node0);
      node1.isDebugger();
      node1.isScript();
      node0.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2203
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(42, 42, 42);
      Node node1 = new Node(42, node0, node0, node0, node0);
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.putBooleanProp(122, false);
      node0.isSetterDef();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber((-258.42664879));
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.wasEmptyNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newString(")4y9..oT[$");
      node0.isFalse();
      node0.setChangeTime(0);
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int int0 = 1501;
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node.newString("Use SerializedForm", 122, 122);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node(24);
      Node node1 = new Node(8, node0, node0, node0, 53, 40);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[8];
      Node node0 = Node.newString("g)#JlQo jFh*V`i");
      nodeArray0[0] = node0;
      Node node1 = new Node(20, node0, node0, node0, 30, 29);
      nodeArray0[1] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createTemplatizedType((ObjectType) null, jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = new Node(46, 46, 46);
      Node node1 = new Node(12, node0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isTry();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(125, node0);
      node1.getLineno();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newString(12, "Se3=473z");
      node0.setChangeTime(12);
      node0.putBooleanProp(302, false);
      Node.newString(38, "Oy:)Oln`");
      node0.toString(false, false, false);
      node0.setOptionalArg(true);
      Node node1 = new Node(54, node0, 4, 57);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(57, 57, 57);
      Node node1 = new Node(2, node0, 39, 29);
      node1.getStaticSourceFile();
      node0.isHook();
      node0.isDefaultCase();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.mayMutateGlobalStateOrThrow();
      node0.isTry();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING &qpxu'qP'cT0v+!J 122 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newNumber(2628.9);
      node0.setIsSyntheticBlock(true);
      node0.isDec();
      node0.toString(true, true, false);
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = new Node(57);
      Node node1 = new Node(2, node0, 39, 29);
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(57, node0, node0, node0, (-5), 0);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      int int0 = (-304);
      // Undeclared exception!
      try { 
        Node.newString((String) null, 49, (-304));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      int int0 = 3297;
      // Undeclared exception!
      try { 
        Node.newString((String) null, 4689, 3297);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(39, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = Node.newString("x`Hy*l[':W");
      Node node1 = new Node(10, node0, node0, node0);
      JSType jSType0 = null;
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("iLce$zvel$", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newString("", (-4661), (-4661));
      node0.getAncestors();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 2042);
      Node node1 = new Node(309, node0, node0, node0);
      node1.getAncestors();
      node0.isEquivalentToTyped(node1);
      node0.setLength((-915));
      node0.setChangeTime(25);
      node0.siblings();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      Iterable<Node> iterable0 = new HashSet<Node>(4095);
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(48);
      node0.isLabelName();
      node0.siblings();
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newString("/RK\"H4");
      Node node1 = new Node(48, node0, node0, node0);
      node1.isArrayLit();
      node0.isEquivalentTo(node1);
      node1.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node.newString(120, "k(cb#V,7<]pm*ar6", 120, 120);
      Node.newString(31, "k(cb#V,7<]pm*ar6", (-2847), 53);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString(2588, (String) null, 112, 2379);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = null;
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch((Node) null, (Node) null);
      // Undeclared exception!
      try { 
        Node.newString((String) null, 132, 132);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newNumber(1495.01464098327);
      Node node1 = Node.newNumber((double) 42);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = new Node((-841));
      Node node1 = null;
      try {
        node1 = new Node(40, (Node) null, (Node) null, node0, 29, 18);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = new Node(57);
      Node node1 = new Node(51, node0);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = new Node(57, 54, 54);
      Node node1 = new Node(16, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = Node.newNumber((double) 39, 1, 51);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node[] nodeArray0 = new Node[7];
      Node node0 = null;
      try {
        node0 = new Node((-1508), nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(306, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 306, (-82));
      Node node1 = new Node(1659, node0, 2690, 37);
      nodeArray0[0] = node1;
      Node node2 = new Node(1659, nodeArray0);
      Node node3 = null;
      try {
        node3 = new Node(306, node2, node2, node0, 0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 12, 39);
      Node node1 = new Node(32, node0, 15, 54);
      node1.isTry();
      node0.isFromExterns();
      Node node2 = null;
      try {
        node2 = new Node(51, node1, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = null;
      try {
        node0 = new Node(1659, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 12, 39);
      Node node1 = new Node(329, node0, 15, 54);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(1, nodeArray0);
      Node node3 = null;
      try {
        node3 = new Node(30, node0, node0, node0, 2203, 14);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newString("ZWW15eI");
      node0.isOnlyModifiesThisCall();
      node0.isQuotedString();
      node0.isQuotedString();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(54, nodeArray0, 12, (-5157));
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 12, 12);
      Node node1 = new Node(329, node0, 15, 54);
      Node node2 = null;
      try {
        node2 = new Node(30, node0, node0, node0, 31, 52);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 882);
      Node node1 = new Node(0, node0, node0, node0, node0);
      Node node2 = new Node(882, node1);
      node2.setIsSyntheticBlock(false);
      // Undeclared exception!
      try { 
        node2.addChildToFront(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newNumber(2628.9);
      Node node1 = new Node(52, node0, node0);
      node0.setIsSyntheticBlock(true);
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.setMutatesArguments();
      Node node0 = Node.newNumber((-2140.020365), (-1890), 46);
      Node node1 = new Node(323, node0, node0, node0, node0, 37, 1);
      node0.isEquivalentToTyped(node1);
      Node node2 = node0.getParent();
      node2.type = 1;
      node0.siblings();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newNumber(2628.9);
      node0.setLength(52);
      Node node1 = new Node(52, node0, node0);
      node0.checkTreeEquals(node1);
      Node node2 = null;
      try {
        node2 = new Node(49, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = new Node(107);
      Node node1 = new Node(8, node0, node0, node0, node0, 4095, 57);
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.areAllFlagsSet();
      Node node0 = Node.newNumber(363.181322554);
      Node node1 = Node.newNumber((double) 37, 52, 36);
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      int int0 = 420;
      Node node0 = Node.newNumber((double) 420, 420, 420);
      Node node1 = Node.newString("-U8bRwsA+FmJ2~RGH0", 21, 57);
      node0.toStringTree();
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newString(1659, "i:kG5dg<bK!Jur");
      Node node1 = new Node(306, node0, node0, node0, 119, 29);
      try { 
        node1.setDouble(0.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BANG 119 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node.extractLineno((-4595));
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isVar();
      node0.hasChildren();
      node0.isEmpty();
      node0.isQualifiedName();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getLength();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newString("BOOLEAN_OBJECT_FUNCTION_TYPE", (-247), 0);
      node0.setCharno(151);
      node0.putBooleanProp(0, false);
      node0.isQualifiedName();
      node0.getLength();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = 1141;
      node0.type = 1141;
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setReturnsTainted();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1141
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(4096);
      node0.setCharno(4096);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      nodeArray0[0] = node0;
      node0.putBooleanProp(86, false);
      // Undeclared exception!
      try { 
        node0.isQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = new Node(42, 42, 589);
      node0.setVarArgs(true);
      Node node1 = node0.cloneNode();
      node0.putBooleanProp(804, true);
      node1.isQualifiedName();
      node0.isQuotedString();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = null;
      try {
        node2 = new Node(50, node0, node0, node1, (Node) null, 123, 38);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newString(122, "", 122, 122);
      node0.isScript();
      node0.isWith();
      node0.setQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newString("Qz R_w.", 0, 0);
      node0.setQuotedString();
      node0.setCharno(1115);
      Node.newString("p9xoqhk_r$l");
      node0.setLength(0);
      Node node1 = Node.newString(87855567, "Qz R_w.");
      node0.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newString("setIsNoSideEffectsCal only supports CALL and NEW nodes, got ", (-940), (-940));
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newString("k(cb#V,7<]pm*ar6", 125, 125);
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newString("setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", (-940), (-1626));
      Node node1 = new Node((-82), node0, 8, 56);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      int int0 = (-862048943);
      Node node0 = Node.newString("", (-862048943), (-1600));
      try { 
        node0.setDouble(745.92423);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = new Node(123);
      node0.getLength();
      node0.isTry();
      // Undeclared exception!
      try { 
        node0.setDouble(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 123
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.mayMutateGlobalStateOrThrow();
      node0.isTry();
      try { 
        node0.setDouble(122);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING &qpxu'qP'cT0v+!J 122 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = Node.newString("", 0, 1116);
      node0.setQuotedString();
      node0.setCharno(1116);
      Node node1 = Node.newString("p9xoqhk_r$l");
      node1.setLength(47);
      Node node2 = new Node(42, node1);
      boolean boolean0 = true;
      Node node3 = null;
      try {
        node3 = new Node(1918, node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isContinue();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setReturnsTainted();
      Node node0 = Node.newString("U0O=H]");
      node0.isFalse();
      Node node1 = new Node(774, node0, node0, node0, (-1483), (-1284));
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      Node node2 = null;
      try {
        node2 = new Node(56, nodeArray0, 120, (-2974));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = new Node(461845907);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node2.isLocalResultCall();
      node0.setDirectives(hashSet0);
      node0.setOptionalArg(false);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      Node node3 = null;
      try {
        node3 = new Node(4, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newString("ZWW15eI");
      node0.isOnlyModifiesThisCall();
      node0.isQuotedString();
      node0.detachChildren();
      node0.isQuotedString();
      Node[] nodeArray0 = new Node[19];
      nodeArray0[0] = node0;
      Node node1 = null;
      try {
        node1 = new Node(103, nodeArray0, 12, (-5165));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString("Object#Key");
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      Node node1 = new Node(43, node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      linkedList0.stream();
      node1.setWasEmptyNode(false);
      node1.isFalse();
      Node node2 = node1.getLastSibling();
      node2.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = null;
      try {
        node3 = new Node(55, node0, 2, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", Integer.MAX_VALUE, 41);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      node1.getAncestor(1);
      Node node2 = new Node(152, node1);
      node2.getDirectives();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = null;
      nodeArray0[2] = node2;
      Node node3 = null;
      try {
        node3 = new Node(49, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry1.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      node0.isQuotedString();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node(39, nodeArray0, 152, 52);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newString("BOOLEAN_OBJECT_FUNCTION_TYPE", (-247), 0);
      node0.setCharno(151);
      node0.putBooleanProp(0, false);
      node0.isQualifiedName();
      node0.getLength();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.type = 52;
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = new Node((-150));
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = new Node((-1143), (-2414), (-1143));
      node0.getAncestor(105);
      Node.extractLineno(0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = Node.newString("/RK\"H4");
      Node node1 = new Node(48, node0, node0, node0);
      node1.isArrayLit();
      node0.isEquivalentTo(node1);
      node0.getAncestor(40);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = new Node(42, 42, 573);
      Node node1 = new Node(4095, node0, node0);
      node0.isAnd();
      Node node2 = null;
      try {
        node2 = new Node(306, node0, node0, node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = Node.newString("BOOLEAN_OBJECT_FUNCTION_TYPE", (-247), 0);
      node0.setCharno(151);
      node0.putBooleanProp(0, false);
      node0.isQualifiedName();
      node0.getLength();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags4.setMutatesArguments();
      Node node1 = Node.newNumber((double) 4095, 54, 0);
      Node node2 = new Node(2506, node1, node1, node0, node1, 0, (-247));
      Node node3 = null;
      try {
        node3 = new Node(56, node0, node2, node2, node0, 48, 26);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = Node.newNumber(2805.1, 4425, 2147483644);
      Node node1 = new Node(120, node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(31, node1, node1, node0, node1, 48, 29);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = new Node(461845907);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node2.isLocalResultCall();
      node0.setDirectives(hashSet0);
      node0.setOptionalArg(false);
      Node node3 = new Node((-464), node1, 56, (-2480));
      Node node4 = new Node(12, node2, node3);
      Node node5 = Node.newNumber((double) 50, (-164), 30);
      node4.addChildAfter(node5, node2);
      // Undeclared exception!
      try { 
        node2.addChildBefore(node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = new Node(42, 42, 42);
      node0.isOnlyModifiesArgumentsCall();
      node0.getSideEffectFlags();
      Node node1 = new Node(42, node0, node0, node0, node0);
      node0.isNull();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newString("dw1cIuAi85", 123, 123);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(30, node0);
      Node node2 = Node.newString("dw1cIuAi85");
      node2.isQuotedString();
      node2.putBooleanProp((-1515), false);
      node1.addChildrenToBack(node2);
      node0.wasEmptyNode();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newString(1224, "&", 273, 1224);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = new Node(461845907);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node2.isLocalResultCall();
      node0.setDirectives(hashSet0);
      node0.setOptionalArg(false);
      Node node3 = new Node((-464), node1, 56, (-2480));
      Node node4 = new Node(12, node2, node3);
      Node node5 = Node.newNumber((double) 50, (-164), 30);
      node4.addChildAfter(node5, node2);
      // Undeclared exception!
      try { 
        node2.addChildBefore(node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newNumber((-306.0));
      Node node1 = new Node(113, node0, node0, node0, node0, 15, 4095);
      node0.addChildrenToBack(node1);
      node1.wasEmptyNode();
      node0.isFalse();
      node1.setLineno(2214);
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newString(3024, ";fiCZs2 klL");
      Node node1 = new Node(115, node0);
      Node.newString(";fiCZs2 klL");
      node1.isQuotedString();
      node1.putBooleanProp((-1234), false);
      node0.addChildrenToBack(node1);
      node1.isEmpty();
      node1.wasEmptyNode();
      node1.wasEmptyNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got FOR
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = Node.newString("Qz R_w.", 0, 0);
      node0.setQuotedString();
      node0.setCharno(1115);
      Node node1 = Node.newString("p9xoqhk_r$l");
      node0.setLength(0);
      Node node2 = new Node(462, node0);
      node1.setIsSyntheticBlock(true);
      node2.addChildToFront(node1);
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(30);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 30
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = new Node(42, 42, 589);
      node0.addChildToFront(node0);
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = new Node(0);
      Node node1 = Node.newNumber((double) 39, 1, (-2016));
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newNumber(1015.29244705438);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setInterface(true);
      node0.getQualifiedName();
      String string0 = "";
      // Undeclared exception!
      try { 
        node0.replaceChild(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = new Node(42, 42, 589);
      Node node1 = new Node(51, node0, node0, node0);
      node0.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.wasEmptyNode();
      node0.isFor();
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isOptionalArg();
      node0.wasEmptyNode();
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = new Node(0);
      node0.siblings();
      node0.getDirectives();
      Node.newString("!;)lONqIoJ4", (-3663), 49);
      node0.getCharno();
      node0.setIsSyntheticBlock(false);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = new Node((-4));
      node0.hasChildren();
      node0.getSideEffectFlags();
      Node.newString(53, "7_a[dQu~+n?");
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = new Node((-427));
      Node node1 = new Node(49, node0, node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(15, node1, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newString("", 306, 306);
      Node node1 = new Node(306, node0);
      Node node2 = node1.clonePropsFrom(node0);
      Node node3 = node1.useSourceInfoIfMissingFrom(node0);
      node3.getProp(15);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newString("this");
      node0.isQualifiedName();
      node0.getQualifiedName();
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newString((-50), "L2`O`'G", (-50), (-50));
      Node node1 = Node.newString("L2`O`'G");
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newString(", ", (-194), (-194));
      Node node1 = new Node(1511, node0, (-940), (-1626));
      node0.isEquivalentTo(node1);
      node0.getSourceFileName();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newNumber((double) 122);
      node0.wasEmptyNode();
      Node node1 = Node.newNumber((double) 30, 2, 49);
      node1.isEquivalentTo(node0);
      node1.getDouble();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = new Node(122);
      node0.isName();
      node0.isTry();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // VOID is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isIf();
      node0.isTry();
      Node[] nodeArray0 = new Node[3];
      Node node1 = Node.newString("gq]w");
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node2 = null;
      try {
        node2 = new Node(51, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = new Node(48);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node1.isLocalResultCall();
      node1.setDirectives(hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("B%t|(_`KLx", true);
      simpleSourceFile0.getLineOffset(51);
      simpleSourceFile0.getLineOffset(814);
      simpleSourceFile0.getLineOffset(1803);
      node2.setStaticSourceFile(simpleSourceFile0);
      node2.detachChildren();
      Node.newNumber((double) 57);
      node1.isQuotedString();
      node2.isNull();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = new Node(461845907);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node2.isLocalResultCall();
      node0.setDirectives(hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("B%t|(_`KLx", true);
      simpleSourceFile0.getLineOffset(43);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(525);
      node1.setStaticSourceFile(simpleSourceFile0);
      node2.detachChildren();
      Node node3 = Node.newNumber((double) 51);
      node3.isQuotedString();
      node0.isNull();
      node3.isRegExp();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newNumber((-91.41493183545067));
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(47, 12, 46);
      Node node2 = new Node((-261), node1);
      node0.isAnd();
      node2.isTry();
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = Node.newString("ZWW15eI");
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags6.clearAllFlags();
      node_SideEffectFlags7.clearSideEffectFlags();
      node_SideEffectFlags5.setMutatesArguments();
      Node.newNumber(1.2, 2336, 57);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) vector0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node2 = new Node(39, node0, node0, node1, node1, 55, 2593);
      node2.isEquivalentToTyped(node0);
      Node node3 = node0.getParent();
      node3.siblings();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      int int0 = 105;
      Node node0 = new Node(3636);
      Node node1 = new Node(3636, node0, node0, node0, node0, 48, 12);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(105, node0);
      node1.detachChildren();
      node1.isAnd();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.setMutatesArguments();
      Node node0 = Node.newNumber((-2140.020365), (-1890), 46);
      Node node1 = new Node(323, node0, node0, node0, node0, 37, 1);
      node0.isEquivalentToTyped(node1);
      Node node2 = node0.getParent();
      node2.detachChildren();
      node2.type = 1;
      node0.siblings();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      int int0 = 125;
      Node node0 = new Node(125);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BLOCK is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = Node.newString("ZWW15eI");
      node0.isOnlyModifiesThisCall();
      node0.isQuotedString();
      node0.getQualifiedName();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.removeFirstChild();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newNumber((-2006.034086621898));
      node0.removeFirstChild();
      node0.isTrue();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node.extractCharno((-968));
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = new Node(125);
      node0.removeChildren();
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.areAllFlagsSet();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node.newString("B%t|(_`KLx");
      Node node0 = new Node(51);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-229), nodeArray0);
      Node node1 = new Node((-229), node0, node0, node0, 4095, 47);
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-4));
      node0.getQualifiedName();
      node0.removeFirstChild();
      node0.setDouble(1297.185949015);
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = new Node(897);
      node0.isFor();
      node0.isCast();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = Node.newNumber(1931.88);
      Node node1 = node0.cloneNode();
      node1.isEquivalentToShallow(node0);
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newString("Object#Element");
      Node node1 = Node.newString("com.google.common.collect.Lists$Partition", 2646, 30);
      node0.addChildrenToFront(node1);
      node0.isNoSideEffectsCall();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = new Node(39);
      node0.isThis();
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.hasChildren();
      Node node1 = Node.newString(52, ")4y9..oT[$", 2588, 38);
      Node.newString("unexpected prop id ");
      node0.addChildrenToFront(node1);
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = new Node(113);
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = Node.newNumber(1522.8);
      Node node1 = new Node(53, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node_NodeMismatch0.equals(node0);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 1
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(105, node0);
      Node node2 = null;
      try {
        node2 = new Node(2583, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newString("BOOLEAN_OBJECT_FUNCTION_TYPE", (-247), 0);
      node0.setCharno(151);
      node0.putBooleanProp(0, false);
      node0.isQualifiedName();
      node0.getLength();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.type = 52;
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node0.getString();
      node0.siblings();
      node0.isFunction();
      node0.getNext();
      node0.isSwitch();
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = new Node(53);
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = Node.newString("ZWW15eI");
      node0.isOnlyModifiesThisCall();
      node0.isQuotedString();
      node0.getQualifiedName();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.detachChildren();
      node0.isQuotedString();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.hasChildren();
      Node node1 = new Node(0, node0, node0, node0, 4095, 31);
      Node.newString("unexpected prop id ");
      node0.addChildrenToFront(node1);
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      nodeArray0[0] = node0;
      Node node1 = new Node(52, 880, (-1901));
      nodeArray0[1] = node1;
      Node node2 = new Node(246, nodeArray0);
      node2.siblings();
      node1.toString(false, false, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("unexpected prop id ");
      node2.isFunction();
      node1.setSourceEncodedPosition(2);
      node0.mayMutateGlobalStateOrThrow();
      node0.getCharno();
      node1.setIsSyntheticBlock(true);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = Node.newString("second new child has existing sibling");
      node0.useSourceInfoFrom(node1);
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newNumber(4024.0);
      node0.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newNumber(1522.8);
      node0.getStaticSourceFile();
      node0.isAdd();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append(" L7(lg t<yoY");
      node0.setChangeTime(29);
      node0.isGetProp();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(125);
      node0.setSourceEncodedPosition(125);
      Node node1 = Node.newString("second new child has existing sibling");
      node0.useSourceInfoFrom(node1);
      node0.isVar();
      node0.isExprResult();
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isIf();
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = Node.newNumber(1931.88);
      Node node1 = new Node(38, node0, 37, 55);
      node1.isEquivalentToShallow(node0);
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = Node.newString(77, "Jc]8-9@I )lb:4?", 77, 35);
      node0.getInputId();
      node0.isEquivalentToShallow(node0);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newString("BOOLEAN_OBJECT_FUNCTION_TYPE", (-247), 0);
      node0.setCharno(50);
      node0.putBooleanProp(0, false);
      node0.isQualifiedName();
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.type = 36;
      node_SideEffectFlags0.setMutatesArguments();
      node0.isEquivalentToShallow(node0);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(42, node0, 37, 50);
      node0.toString(true, true, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("suoted");
      node_FileLevelJsDocBuilder0.append("suoted");
      node1.getBooleanProp(40);
      node1.isWhile();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2786);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(49);
      Node node2 = new Node(52, node0, node0, node1, 41, 130);
      node2.siblings();
      node2.toString(true, true, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("INSTANCEOF 41");
      node_FileLevelJsDocBuilder0.append("-8Q0");
      node_FileLevelJsDocBuilder0.append("d$/ft{dN1<uE&.ZRzM");
      node1.isFunction();
      node1.setSourceEncodedPosition(57);
      node1.mayMutateGlobalStateOrThrow();
      node1.getCharno();
      node0.setIsSyntheticBlock(true);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newString("ZWW15eI");
      node0.isOnlyModifiesThisCall();
      node0.isQuotedString();
      node0.getQualifiedName();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.setStaticSourceFile(simpleSourceFile0);
      // Undeclared exception!
      try { 
        Node.newString((String) null, (-3460), 15);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = new Node((-3368));
      node0.type = (-3368);
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.areAllFlagsSet();
      Node node1 = new Node(57, node0, node0, node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isOptionalArg();
      node0.getLength();
      Node node3 = Node.newNumber((double) 1);
      node3.removeChildren();
      node0.isEquivalentToTyped(node3);
      node0.isString();
      node3.addSuppression("B");
      node0.isNew();
      node3.isArrayLit();
      node3.isTypeOf();
      Node.newNumber(363.181322554);
      node0.isCase();
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = new Node(98);
      node0.isOnlyModifiesArgumentsCall();
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.mayMutateGlobalStateOrThrow();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = new Node(26);
      node0.isFromExterns();
      Node node1 = new Node(1756, 4, 1);
      node0.srcref(node1);
      node0.isReturn();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      Node node0 = new Node(63, (-2733), 42);
      node0.isArrayLit();
      node0.isLocalResultCall();
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newNumber((double) 105);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      Node node1 = new Node(2485, 36, 52);
      node0.isFunction();
      node0.setSourceEncodedPosition(40);
      node1.mayMutateGlobalStateOrThrow();
      node1.isString();
      node0.addSuppression("null");
      node1.isNew();
      node0.isArrayLit();
      node0.isTypeOf();
      Node node2 = new Node(12, node1, (-835), (-864));
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // EQ is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString("");
      node0.isIn();
      node0.isFunction();
      node0.setSourceEncodedPosition((-3083));
      node0.mayMutateGlobalStateOrThrow();
      node0.isString();
      node0.addSuppression("x4@z&f>o`y%a");
      node0.isNew();
      node0.isArrayLit();
      node0.isTypeOf();
      Node node1 = new Node(22, node0, 51, 57);
      Node node2 = new Node(3530, node1, node1, 155, 46);
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3530
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newString(94, "yPF", 481, (-633));
      Node node1 = new Node(32, node0, node0, (-1055), 1212);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isString();
      node1.addSuppression("yPF");
      node1.isTypeOf();
      node1.isTry();
      node1.isQuotedString();
      node0.srcrefTree(node1);
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 12, 39);
      node0.isNoSideEffectsCall();
      Node node1 = new Node(329, node0, 15, 54);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(1, nodeArray0);
      Node node3 = null;
      try {
        node3 = new Node(30, node0, node0, node0, 2203, 14);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString(1649, "ujT[6nox");
      Node node1 = new Node(1947, node0, node0, node0);
      node1.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = node0.useSourceInfoFrom(node0);
      node0.isVar();
      node1.isWhile();
      Iterable<Node> iterable0 = new TreeSet<Node>();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = new Node(461845907);
      node0.removeChildren();
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber(0.0);
      nodeArray0[0] = node0;
      Node node1 = new Node(124, nodeArray0, (-159), 110);
      node1.setLength(52);
      Node node2 = new Node(46, node1);
      node1.setIsSyntheticBlock(true);
      node0.addChildToFront(node2);
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(42);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 42
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      nodeArray0[0] = node0;
      Node node1 = new Node(52, 880, (-1901));
      nodeArray0[1] = node1;
      Node node2 = new Node(246, nodeArray0);
      node2.siblings();
      node1.toString(false, false, true);
      node2.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node node3 = new Node(12, 8, 15);
      // Undeclared exception!
      try { 
        node3.getAncestor(Integer.MIN_VALUE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = new Node(39);
      node0.isEquivalentTo(node0, true, true, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1690));
      // Undeclared exception!
      try { 
        node0.getAncestor((-607));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newString("v:*-pRAX]?#.a!*^f%");
      node0.isArrayLit();
      Node.newNumber((double) 32);
      node0.isCase();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newNumber(1931.88);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = node0.cloneNode();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(51);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = Node.newString("second new child has existing sibling");
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.getDirectives();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node2;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      nodeArray0[3] = node2;
      Node node3 = null;
      try {
        node3 = new Node(47, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = new Node(461845907);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = new Node(39, node0, 2, 2);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node2.isLocalResultCall();
      node0.setDirectives(hashSet0);
      node0.setOptionalArg(false);
      Node node3 = new Node((-464), node1, 56, (-2480));
      Node node4 = new Node(12, node2, node3);
      Node node5 = Node.newNumber((double) 50, (-164), 30);
      node4.addChildAfter(node5, node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(31);
      node3.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = null;
      try {
        node0 = new Node(2360, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = new Node(138);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node node1 = new Node(56, node0, node0, 42, 36);
      node1.setWasEmptyNode(true);
      node1.isSetterDef();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = new Node(16);
      boolean boolean0 = false;
      node0.setWasEmptyNode(false);
      node0.isOr();
      boolean boolean1 = true;
      double double0 = 3181.4595;
      int int0 = 1500;
      int int1 = 11;
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(38, node0, (-1852), 46);
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = Node.newNumber(1526.2861517808788);
      Node node1 = Node.newNumber((double) 42);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isIf();
      Node node1 = Node.newString(52, ")4y9..oT[$", 2588, 38);
      Node.newString(54, "unexpected prop id ", 30, 47);
      node0.addChildrenToFront(node1);
      node1.isThis();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newString("BOOLEAN_OBJECT_FUNCTION_TYPE", (-247), 0);
      node0.setCharno(151);
      node0.putBooleanProp(0, false);
      node0.isQualifiedName();
      node0.getLength();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.type = 52;
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node0.getString();
      node0.siblings();
      node0.isFunction();
      node0.setSourceEncodedPosition((-355));
      node0.mayMutateGlobalStateOrThrow();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INSTANCEOF BOOLEAN_OBJECT_FUNCTION_TYPE 1048575 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = Node.newNumber(628.78508882001);
      Node node1 = new Node(123, node0);
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 123
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = new Node((-12), (-12), (-12));
      node0.getQualifiedName();
      node0.removeFirstChild();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-4));
      node0.getQualifiedName();
      Node node1 = new Node(4, node0, node0, node0, node0, 53, 32);
      node0.setDouble((-1616.0));
      node0.setDouble(1297.185949015);
      node0.isWith();
      node1.isWhile();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isWith();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(9);
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = new Node(107);
      // Undeclared exception!
      try { 
        node0.toString(true, true, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 107
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = new Node(48);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node1.isLocalResultCall();
      node1.setDirectives(hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("B%t|(_`KLx", true);
      simpleSourceFile0.getLineOffset(51);
      simpleSourceFile0.getLineOffset(814);
      simpleSourceFile0.getLineOffset(1803);
      node2.setStaticSourceFile(simpleSourceFile0);
      node2.detachChildren();
      Node node3 = Node.newNumber((double) 57);
      node3.isNull();
      node2.isRegExp();
      node1.mayMutateArguments();
      node0.isCatch();
      node2.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(57);
      Node node1 = new Node(51, node0);
      Node node2 = null;
      try {
        node2 = new Node(51, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = new Node((-3368));
      node0.type = (-3368);
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.areAllFlagsSet();
      Node node1 = new Node(57, node0, node0, node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isOptionalArg();
      node0.getLength();
      Node.newNumber((double) 1);
      Node node3 = null;
      try {
        node3 = new Node((-3368), node0, 1, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = new Node(57, 56, 56);
      Node node1 = new Node(57, node0, node0, 38, 42);
      Node node2 = null;
      try {
        node2 = new Node(103, node0, 50, (-1860));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber(0.0);
      nodeArray0[0] = node0;
      Node node1 = new Node(124, nodeArray0, (-159), 110);
      node1.setLength(52);
      Node node2 = new Node(46, node1);
      node1.setIsSyntheticBlock(true);
      node0.addChildToFront(node2);
      node1.hasChildren();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.mayMutateGlobalStateOrThrow();
      node0.isTry();
      Node.newNumber((-158.823473308));
      Node node1 = Node.newString("&qpxu'qP'cT0v+!J", 30, 1);
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newNumber(1931.88);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = node0.cloneNode();
      node1.wasEmptyNode();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(51);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 12, 39);
      Node node1 = new Node(329, node0, 15, 54);
      node1.getSourceFileName();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(1, nodeArray0);
      Node.mergeLineCharNo((-3624), (-4129));
      Node node3 = null;
      try {
        node3 = new Node(30, node0, node0, node0, 2203, 14);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString(39, "TypeError", 122, 3856);
      Node node1 = new Node((-3624), node0, 4741, 12);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(56, nodeArray0);
      Node node3 = null;
      try {
        node3 = new Node(64, node2, node1, node2, (-1100), 46);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = new Node(48);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      node1.isEquivalentToTyped(node0);
      node1.isLocalResultCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node.newString("U0O=H]");
      node0.isFalse();
      Node node3 = Node.newNumber((double) 56);
      Node node4 = new Node(38, node2);
      Node node5 = new Node(1745, node3, node4, node4);
      // Undeclared exception!
      try { 
        node5.setDouble(1.2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1745
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node node0 = Node.newString((-284), "", (-284), 98);
      node0.getJSDocInfo();
      Node node1 = new Node((-284), node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node1.getProp(153);
      node1.setWasEmptyNode(false);
      node1.isFalse();
      node1.getLastSibling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      nodeArray0[0] = node0;
      Node node1 = new Node(52, 880, (-1901));
      nodeArray0[1] = node1;
      Node node2 = new Node(246, nodeArray0);
      node2.isQuotedString();
      node2.siblings();
      node1.toString(false, false, false);
      node0.toString(false, false, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(102);
      node_SideEffectFlags0.setThrows();
      node0.isVoid();
      node1.useSourceInfoFromForTree(node2);
      Node node3 = null;
      try {
        node3 = new Node(9, nodeArray0, (-2731), 38);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = new Node(122);
      node0.mayMutateArguments();
      node0.getInputId();
      node0.isQualifiedName();
      node0.isSwitch();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-4));
      node0.getQualifiedName();
      node0.removeFirstChild();
      node0.setDouble(1297.185949015);
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(47, node0, node0, node0, node0, 38, 57);
      node0.isDec();
      node1.isIn();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString("");
      node0.isIn();
      Node node1 = Node.newString("");
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      nodeArray0[0] = node0;
      Node node1 = new Node(52, 880, (-1901));
      nodeArray0[1] = node1;
      Node node2 = new Node(246, nodeArray0);
      node2.isQuotedString();
      node2.siblings();
      node1.toString(false, false, false);
      node2.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node3 = Node.newString("INSTANCEOF", 9, 36);
      Node node4 = node1.useSourceInfoFromForTree(node3);
      // Undeclared exception!
      try { 
        node2.replaceChild(node4, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2786);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setMutatesThis();
      Node node0 = Node.newNumber(0.0);
      node0.isContinue();
      node0.isQuotedString();
      node0.siblings();
      Node node1 = new Node(46, node0);
      Node node2 = null;
      try {
        node2 = new Node(995, node1, node1, node0, node0, 49, (-2809));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      nodeArray0[0] = node0;
      Node node1 = new Node(52, 880, (-1901));
      nodeArray0[1] = node1;
      Node node2 = new Node(246, nodeArray0);
      node2.isOr();
      Node node3 = null;
      try {
        node3 = new Node(53, node1, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newString(" 3~-");
      node0.isNew();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = new Node(42, 42, 10);
      node0.setVarArgs(true);
      Node node1 = new Node(12, node0, node0);
      node1.checkTreeEquals(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node(42, 42, 573);
      node0.setVarArgs(true);
      Node node1 = node0.cloneNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("v^}lM*6+", true);
      simpleSourceFile0.getLineOffset(1616);
      simpleSourceFile0.getLineOffset(8);
      Node node2 = new Node(49, node1, node1, node0, (-187), 122);
      node0.setChangeTime(108);
      node1.isGetterDef();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THIS 42 [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = new Node(125);
      node0.setChangeTime(125);
      node0.isTry();
      try { 
        node0.setDouble(125);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BLOCK [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(105, node0);
      node1.setSourceEncodedPositionForTree((-2710));
      node1.isAnd();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      Node node1 = new Node(52, 880, (-1901));
      node1.toString(false, true, false);
      node1.toString(false, false, false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.documentBlock("first new child has existing parent");
      Node node2 = Node.newString("", 29, 11);
      node0.setSourceEncodedPositionForTree(48);
      node2.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newString("", (-1164), (-256));
      Node node1 = new Node((-1164), node0);
      Node.newNumber(1.0, 47, 51);
      node1.removeProp(4095);
      Node node2 = Node.newString(40, "", 16, 4);
      node2.getSourceOffset();
      node1.setSourceEncodedPositionForTree(57);
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      int int0 = 42;
      Node node0 = Node.newString("com.google.common.base.CharMatcher$14", 42, 42);
      Node node1 = new Node(40, node0);
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = new Node(2572);
      Node node1 = new Node(2572, node0, node0, 54, 42);
      Node node2 = new Node(56, node1);
      Node node3 = null;
      try {
        node3 = new Node(42, node2, node2, node2, node1, 39, 32);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = new Node((-3368));
      node0.type = (-3368);
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      node0.putBooleanProp(2495, true);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.areAllFlagsSet();
      Node node1 = new Node(57, node0, node0, node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isOptionalArg();
      node0.getLength();
      Node node3 = Node.newNumber((double) 1);
      node3.removeChildren();
      node0.isEquivalentToTyped(node3);
      node0.isString();
      node3.addSuppression("B");
      node0.isNew();
      node3.isArrayLit();
      node3.isTypeOf();
      Node.newNumber(363.181322554);
      node0.isCase();
      node1.isOnlyModifiesArgumentsCall();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = new Node(3636);
      Node node1 = new Node(3636, node0, node0, node0, node0, 48, 12);
      Node node2 = new Node(105, node1, node1, node1, node1);
      node0.isGetElem();
      node2.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newNumber((double) 245);
      node0.getQualifiedName();
      Node node1 = new Node(47, node0, node0, 36, 31);
      node0.setDouble((-4743.566219048053));
      node1.isScript();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        Node.newString(53, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newString(38, ") Gfh]Z?o\"_:XSOw", 38, 39);
      Node node1 = Node.newString(") Gfh]Z?o\"_:XSOw");
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(30, node0, node0, node0, 2203, 14);
      node0.getBooleanProp(4);
      node1.setChangeTime(12);
      node0.isGetterDef();
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = new Node(461845907);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      HashSet<String> hashSet0 = new HashSet<String>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags7.setThrows();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags8.areAllFlagsSet();
      Node.newNumber((double) 32);
      Node node2 = Node.newNumber(0.5, 102, 51);
      node2.getIntProp((-1888));
      Node node3 = new Node(467, node1, node1, node2);
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 467
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = Node.newString(122, "", 122, 122);
      node0.isVarArgs();
      node0.putBooleanProp((-1813), true);
      node0.isQualifiedName();
      node0.isQuotedString();
      node0.getIntProp((-1813));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      Node node1 = new Node(47, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = new Node(90);
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.removeProp(38);
      Node node1 = new Node(8, node0, node0, node0, node0, (-7), 4095);
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 8
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      String string0 = "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ";
      Node node0 = Node.newString(48, " ,Nu<u:Tdw=^#?");
      Node node1 = new Node((-258), 1, (-281));
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      Node node2 = null;
      try {
        node2 = new Node(54, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString(90, "v:*-pRAX]?#.a!*^f%", 90, 90);
      node0.setLength(49);
      node0.isIn();
      node0.getAncestor(43);
      node0.isAssignAdd();
      node0.mayMutateGlobalStateOrThrow();
      // Undeclared exception!
      try { 
        node0.clonePropsFrom(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(246, " ,Nu<u:Tdw=^#?");
      nodeArray0[0] = node0;
      Node node1 = new Node(52, 880, (-1901));
      nodeArray0[1] = node1;
      node1.isQuotedString();
      node1.siblings();
      node1.toString(false, false, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("unexpected prop id ");
      node0.isFunction();
      node1.setSourceEncodedPosition(2);
      node0.mayMutateGlobalStateOrThrow();
      node0.isScript();
      Node node2 = Node.newString(36, "I>x|]iF");
      // Undeclared exception!
      try { 
        node0.clonePropsFrom(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      int int0 = 28;
      Node node0 = Node.newNumber((-2704.668060443));
      Node node1 = new Node(47, node0, node0, node0, node0);
      node1.checkTreeEquals(node0);
      node0.removeFirstChild();
      int int1 = 306;
      try { 
        node0.setString("]rs");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -2704.668060443 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = new Node(42, 42, 42);
      Node node1 = new Node(42, node0, node0, node0, node0);
      try { 
        node0.setString((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THIS 42 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = new Node(1, 306, 1);
      node0.cloneNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("v^}lM*6+", true);
      simpleSourceFile0.getLineOffset(32);
      Node node1 = new Node(30, 30, (-1987));
      node0.getAncestor(40);
      Node.extractLineno(30);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      int int0 = 42;
      Node node0 = Node.newString("com.google.common.base.CharMatcher$14", 42, 42);
      Node node1 = new Node(40, node0);
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = new Node(307);
      node0.setType(3835);
      node0.isFromExterns();
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null, false, false, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(105, node0);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isIf();
      Node node1 = Node.newString(52, ")4y9..oT[$", 2588, 38);
      Node node2 = Node.newString(")4y9..oT[$");
      node2.isFalse();
      node1.mayMutateArguments();
      node2.putProp(12, node0);
      try { 
        node1.setDouble((-611.4179881015));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INSTANCEOF )4y9..oT[$ 2588 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = new Node(302, 302, 640);
      Node node1 = new Node(31);
      node1.setVarArgs(true);
      Node node2 = node1.cloneNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("ZWW15eI", true);
      simpleSourceFile0.getLineOffset(2554);
      simpleSourceFile0.getLineOffset(54);
      Node node3 = new Node(31, node0, node0, node2, 4, 114);
      node0.setChangeTime((-3959));
      node3.isGetterDef();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STAR 302 [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000006] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = Node.newString((-284), "", (-284), 98);
      node0.getJSDocInfo();
      Node node1 = new Node((-284), node0, node0, node0, node0);
      node1.setWasEmptyNode(false);
      node1.isFalse();
      Node node2 = node1.getLastSibling();
      node2.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isEmpty();
      node0.isOnlyModifiesThisCall();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(105, node0);
      node0.toString(false, false, false);
      node0.isUnscopedQualifiedName();
      Node.newString("FUNCTION <invalid>", 55, 7545);
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newString("v:*-pRAX]?#.a!*^f%");
      Node node1 = new Node(105, node0);
      node0.getAncestor(43);
      Node node2 = new Node(105, node1, node1, node1);
      node2.isAssignAdd();
      node1.isLabel();
      node2.toString(true, false, false);
      node1.mayMutateGlobalStateOrThrow();
      node1.isAssign();
      node1.isDelProp();
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(57);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 57
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isFor();
      node0.isAssignAdd();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newString(95, "X@%@");
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(105, node0);
      try { 
        node1.setString("THROW");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = new Node(94);
      node0.isLabel();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newString(38, "directives", 38, (-886));
      node0.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        node0.isQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = new Node(57, 54, 54);
      Node node1 = new Node(47, 30, (-1534));
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(42, nodeArray0);
      node2.isQuotedString();
      node2.children();
      // Undeclared exception!
      try { 
        node0.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 57
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      nodeArray0[0] = node0;
      Node node1 = new Node(52, 880, (-1901));
      nodeArray0[1] = node1;
      Node node2 = new Node(246, nodeArray0);
      node2.isQuotedString();
      node1.children();
      node1.toString(false, false, false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("unexpected prop id ");
      node2.isFunction();
      node0.isWhile();
      node0.isWith();
      node0.isReturn();
      node1.isTrue();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newString("Object#Element");
      node0.children();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newString("v:*-pRAX]?#.a!*^f%");
      Node node1 = new Node(105, node0);
      node0.getAncestor(43);
      Node node2 = new Node(105, node1, node1, node1);
      node2.isAssignAdd();
      node1.isLabel();
      node2.toString(true, false, false);
      node1.mayMutateGlobalStateOrThrow();
      node1.isAssign();
      node0.isThrow();
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(57);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 57
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newString((-284), "", (-284), 98);
      node0.getJSDocInfo();
      Node node1 = new Node((-284), node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node1.setWasEmptyNode(false);
      node1.isFalse();
      Node node2 = node1.getLastSibling();
      Node node3 = node2.srcref(node1);
      node3.isGetElem();
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newNumber((-306.0));
      node0.isRegExp();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      int int0 = 13;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node(13, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 12, 39);
      Node node1 = new Node(329, node0, 15, 54);
      Node[] nodeArray0 = new Node[0];
      node1.getDirectives();
      Node node2 = new Node(1, nodeArray0);
      node1.setChangeTime(12);
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3888));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.valueOf();
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      int int0 = 28;
      Node node0 = Node.newNumber((-2704.668060443));
      Node node1 = new Node(21, node0, node0, node0, node0);
      node1.checkTreeEquals(node0);
      node0.removeFirstChild();
      int int1 = 306;
      try { 
        node0.setString("]rs");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -2704.668060443 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString("");
      node0.isIn();
      Node node1 = Node.newString("");
      node0.isParamList();
      node1.isVarArgs();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newNumber(2628.9);
      node0.setIsSyntheticBlock(true);
      node0.isDec();
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newNumber((-1744.6286), 7, 394);
      Node node1 = new Node((-2203), node0, node0, node0, node0);
      node1.isDebugger();
      node1.isScript();
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2203
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = Node.newNumber(1931.88);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node1 = node0.cloneNode();
      node1.checkTreeEqualsImpl(node0);
      node1.isScript();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(51);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      node1.isCast();
      node0.removeProp(53);
      node0.isOptionalArg();
      node1.isIn();
      node0.isHook();
      node0.isQualifiedName();
      node1.children();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = Node.newString("N@\"@n", (-635), 101);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[0];
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      node0.setJSType(jSType0);
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      int int0 = (-1063);
      String string0 = "K*Y)hdlGDp[SIjEE!`O";
      Node node0 = Node.newString("K*Y)hdlGDp[SIjEE!`O");
      node0.setString("T@");
      Node node1 = new Node((-1063), node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("T@", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString("v:*-pRAX]?#.a!*^f%");
      Node node1 = node0.clonePropsFrom(node0);
      Node node2 = node0.copyInformationFrom(node1);
      node0.useSourceInfoFrom(node2);
      node2.setString("v:*-pRAX]?#.a!*^f%");
      node2.addChildToFront(node0);
      node2.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      String string0 = "direWctives";
      Node node0 = Node.newString(38, "direWctives", 38, (-886));
      node0.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = new Node(48);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node1.isLocalResultCall();
      node1.setDirectives(hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("B%t|(_`KLx", true);
      simpleSourceFile0.getLineOffset(51);
      simpleSourceFile0.getLineOffset(814);
      simpleSourceFile0.getLineOffset(1803);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = Node.newNumber((double) 57);
      node1.setString("B%t|(_`KLx");
      node3.isNull();
      node2.isRegExp();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = new Node(26);
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = Node.newString(94, "yPF", (-633), (-633));
      Node node1 = new Node(122, node0, 93, 1730);
      node1.isNumber();
      Node node2 = new Node(4, node1);
      node2.isReturn();
      node1.detachChildren();
      node2.isIn();
      Node node3 = new Node(30);
      node3.getStaticSourceFile();
      node1.isBreak();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.setSourceFileForTesting(".");
      node0.isFromExterns();
      Node node1 = new Node(50, 52, 36);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileWriter mockFileWriter0 = new MockFileWriter(fileDescriptor0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      // Undeclared exception!
      try { 
        node1.appendStringTree(mockPrintWriter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 50
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = new Node(57, 54, 54);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isFromExterns();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ObjectType.cast((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("@n',/x`la)!k", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newString("v:*-pRAX]?#.a!*^f%");
      node0.isFromExterns();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Vector<JSType> vector0 = new Vector<JSType>();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.areAllFlagsSet();
      node0.isBreak();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newString("d@`gL'iY'MUmj?}");
      node0.cloneTree();
      node0.getQualifiedName();
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-4));
      node0.setCharno((-4));
      boolean boolean0 = false;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[6];
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createInterfaceType("PFMfgq", node0, (ImmutableList<TemplateType>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isUnscopedQualifiedName();
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isQualifiedName();
      node0.getLength();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newNumber((-306.0));
      node0.isUnscopedQualifiedName();
      node0.isRegExp();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node0.isOptionalArg();
      node0.isEmpty();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = new Node(39);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.isCall();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node node0 = Node.newString("com.google.common.base.CharMatcher$14", 1, 1);
      Node node1 = new Node(0, node0);
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      JSType[] jSTypeArray0 = new JSType[0];
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newString("v:*-pRAX]?#.a!*^f%");
      Node node1 = new Node(105, node0);
      node0.getAncestor(43);
      Node node2 = new Node(105, node1, node1, node1);
      node2.isAssignAdd();
      node1.isLabel();
      node2.toString(true, false, false);
      node1.mayMutateGlobalStateOrThrow();
      node1.isAssign();
      node1.isParamList();
      Node node3 = Node.newNumber(0.0, 33, 16);
      node3.isVarArgs();
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(105, node0);
      node0.getLength();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isStringKey();
      node1.isCast();
      node1.isComma();
      node0.isLocalResultCall();
      Node node2 = Node.newNumber((double) 1, (-573), 12);
      Node node3 = new Node((-1190), node1, node2, (-1823), 105);
      int int0 = 656;
      // Undeclared exception!
      try { 
        node2.addChildAfter(node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString(" [");
      Node node1 = new Node(51);
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add(" [");
      node1.isLocalResultCall();
      node2.setDirectives(hashSet0);
      node1.setOptionalArg(false);
      Node node3 = Node.newNumber((double) 32, (-107), 47);
      Node node4 = new Node(4095, node3, 29, 50);
      Node node5 = new Node(37, node0, node1);
      Node.newNumber((-709.6), 16, 56);
      Node node6 = new Node(54, node4);
      // Undeclared exception!
      try { 
        node4.addChildAfter(node2, node6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("CY<[E^");
      Node node1 = new Node(0, 1, 4095);
      node1.isFunction();
      node1.setSourceEncodedPosition(4095);
      node0.mayMutateGlobalStateOrThrow();
      node0.isTry();
      Node node2 = new Node(51, 38, (-1776));
      node0.copyInformationFromForTree(node2);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = Node.newString(655, "");
      node0.isEquivalentTo(node1, false, true, true);
      node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      linkedHashSet0.add("And(");
      node1.setDirectives(linkedHashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      // Undeclared exception!
      try { 
        simpleSourceFile0.getLineOffset((-1920));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number -1920
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = new Node(48);
      Node node1 = Node.newString("B%t|(_`KLx");
      node1.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.areAllFlagsSet();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = new Node(42, 42, 573);
      node0.setVarArgs(true);
      Node node1 = node0.cloneNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags6.areAllFlagsSet();
      Node node2 = new Node(859, node0, node1, node0, node1);
      Node node3 = node0.srcref(node2);
      node1.isOptionalArg();
      node1.getLength();
      Node node4 = Node.newNumber((double) 2);
      node3.removeChildren();
      // Undeclared exception!
      try { 
        node4.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = new Node((-3368));
      node0.type = (-3368);
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.areAllFlagsSet();
      Node node1 = new Node(57, node0, node0, node0, node0);
      node0.srcref(node1);
      node1.isDo();
      node0.getLength();
      Node node2 = Node.newNumber((double) 1);
      node2.removeChildren();
      node0.isEquivalentToTyped(node2);
      node0.isString();
      node2.addSuppression("B");
      node0.isNew();
      node2.isArrayLit();
      node2.isTypeOf();
      Node.newNumber(363.181322554);
      node0.isCase();
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<TemplateType> stack0 = new Stack<TemplateType>();
      stack0.iterator();
      Node node0 = new Node(22);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newString(461845907, "Z?Q", 305, 461845907);
      node0.isDec();
      int int0 = (-2862);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('O');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "Z?Q", 0, 111);
      node0.appendStringTree(stringWriter2);
      node0.setCharno(int0);
      node0.getJSDocInfo();
      node0.isNoSideEffectsCall();
      node0.isFalse();
      node0.isOptionalArg();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newNumber((double) 122);
      node0.wasEmptyNode();
      Node node1 = Node.newNumber((double) 30, 2, 461845907);
      node1.isEquivalentTo(node0);
      node0.siblings();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(47, node0, node0, node0, node0, 38, 57);
      node0.isDec();
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newString("C>cq\"ptj");
      Node node1 = new Node(1, node0, node0, node0, node0, (-1970), 39);
      node0.getInputId();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING C>cq\"ptj is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = new Node(59);
      node0.isEquivalentTo(node0, false, false, false);
      node0.srcrefTree(node0);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("Bt|(_`KLx");
      node0.isLocalResultCall();
      node0.setDirectives(hashSet0);
      node0.isArrayLit();
      Node node1 = node0.cloneTree();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setLineno(0);
      node0.toString(false, false, false);
      node0.toString(false, false, false);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      Node node1 = Node.newString("I/)VUkz}+9WV", 3400, 51);
      node1.setSourceEncodedPositionForTree(46);
      node0.isSyntheticBlock();
      node1.isSyntheticBlock();
      node0.isEquivalentToShallow(node1);
      Node node2 = Node.newString(732, "", 31, 48);
      node2.useSourceInfoFromForTree(node1);
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = Node.newString(";fiCZs2 klL");
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = new Node(99, 99, 99);
      int int0 = Node.FLAG_NO_THROWS;
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newString("Recorded bad position information\nstart-line: ");
      Node node2 = new Node(51, node0);
      // Undeclared exception!
      try { 
        node2.getChildBefore(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newNumber(2628.9);
      node0.setLength(52);
      Node node1 = new Node(52, node0, node0);
      node0.checkTreeEquals(node1);
      node0.isVar();
      node1.useSourceInfoFromForTree(node0);
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newNumber((double) 105);
      Node.newString("v:*-pRAX]?#.a!*^f%");
      node0.setCharno(103);
      node0.putBooleanProp(152, true);
      node0.isQualifiedName();
      Node node1 = Node.newString("v:*-pRAX]?#.a!*^f%");
      node1.getLength();
      Node node2 = new Node(4095, node0);
      // Undeclared exception!
      try { 
        node2.replaceChild(node1, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newNumber((-930.249633));
      Node node1 = node0.cloneNode();
      node0.checkTreeEqualsImpl(node1);
      node0.isScript();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-2600));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newNumber(1522.8, (-1275), 796);
      node0.getDirectives();
      node0.getLength();
      node0.hasOneChild();
      int int0 = 2747;
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      Node node1 = new Node(796, node0, node0, 4095, 524288);
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node2 = null;
      try {
        node2 = new Node(2747, node0, (-164), 524288);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      node1.hasOneChild();
      Node node2 = null;
      try {
        node2 = new Node(48, node1, node0, 27, 32);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node.extractCharno((-504));
      Node node0 = Node.newString("", 108, (-2064));
      Node.newNumber((double) 51);
      node0.getProp((-2064));
      node0.setType((-2064));
      node0.addSuppression("{Av}xbn`v6@ &Hp`!b0");
      node0.getJsDocBuilderForNode();
      node0.wasEmptyNode();
      node0.isTypeOf();
      node0.isThrow();
      node0.isFor();
      node0.isTypeOf();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = Node.SYNTHETIC_BLOCK_PROP;
      Node node0 = new Node(1512);
      node0.setSourceFileForTesting("is_namespace");
      // Undeclared exception!
      try { 
        node0.setString("ALWAYS_FALSE");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1512
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = Node.newNumber(2119.98904446618, 36, 83);
      node0.getBooleanProp(83);
      node0.getStaticSourceFile();
      node0.isFromExterns();
      Node node1 = new Node(53, node0, node0);
      node0.isEquivalentToTyped(node1);
      node1.isLocalResultCall();
      node1.setSourceFileForTesting("");
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = Node.newString(")4y9..oT[$");
      node0.isFalse();
      node0.getSourceOffset();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newString(99, "v:*-pRAX]?#.a!*^f%", 99, 99);
      Node node1 = new Node(99, node0);
      node0.getAncestor(43);
      node0.isAssignAdd();
      node1.isNew();
      // Undeclared exception!
      try { 
        node1.toString(true, true, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 99
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = new Node(461845907);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node2.isLocalResultCall();
      node0.setDirectives(hashSet0);
      node0.setOptionalArg(false);
      Node node3 = new Node((-464), node1, 56, (-2480));
      Node node4 = new Node(12, node2, node3);
      Node.newNumber((double) 50, (-164), 30);
      node2.isEmpty();
      node4.isCall();
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = new Node((-3368));
      node0.type = (-3368);
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags4.areAllFlagsSet();
      Node node1 = new Node(57, node0, node0, node0, node0);
      Node node2 = node0.srcref(node1);
      node1.isDo();
      node0.getLength();
      node2.removeChildren();
      node0.isEquivalentToTyped(node2);
      node0.isString();
      node2.addSuppression("B");
      node0.isNew();
      node1.isArrayLit();
      node2.isTypeOf();
      Node.newNumber(363.181322554);
      node2.isEquivalentTo(node1, false, false, false);
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = new Node(42, 42, 573);
      node0.setVarArgs(true);
      Node node1 = node0.cloneNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("v^}lM*6+", true);
      simpleSourceFile0.getLineOffset(1616);
      simpleSourceFile0.getLineOffset(8);
      Node node2 = new Node(49, node1, node1, node0, (-187), 122);
      node0.setChangeTime(108);
      node1.isGetterDef();
      Node.newString("v^}lM*6+");
      node2.isGetterDef();
      node2.isSyntheticBlock();
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node(33);
      nodeArray0[0] = node0;
      Node node1 = new Node(52, 880, (-1944));
      nodeArray0[1] = node1;
      Node node2 = new Node(50, 57, 29);
      node2.isQuotedString();
      node2.siblings();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append((String) null);
      node_FileLevelJsDocBuilder0.append("unexpected prop id ");
      node1.isScript();
      node1.isParamList();
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-931), nodeArray0);
      node0.isIn();
      node0.mayMutateGlobalStateOrThrow();
      node0.setLineno(373);
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newString(411, "side_effect_flags", 411, 305);
      node0.getJSDocInfo();
      Node node1 = new Node(46, node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node1.setWasEmptyNode(false);
      node1.isFalse();
      Node node2 = node1.getLastSibling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.useSourceInfoFromForTree(node2);
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      String string0 = "";
      int int0 = 2209;
      Node node0 = Node.newString((-284), "", 2209, 102);
      node0.isDec();
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(63);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -284
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      int int0 = 42;
      Node node0 = new Node(42, 42, 573);
      Node node1 = new Node(47);
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      HashSet<String> hashSet1 = new HashSet<String>();
      hashSet1.add((String) null);
      node2.isLocalResultCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node3.setDirectives(hashSet1);
      simpleErrorReporter0.warning("Object#Element", "Object#Element", 153, 8388608);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("NrO\"bodmVw2", true);
      // Undeclared exception!
      try { 
        simpleSourceFile0.getLineOffset(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number 0
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      Node node1 = Node.newNumber((double) 8, 57, 51);
      Node node2 = new Node(39, node0, node0, node0, node0);
      node0.isDebugger();
      node1.isScript();
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      jSTypeArray0[1] = (JSType) objectType0;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Unknown class name", node1, jSType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      enumElementType1.getConstructor();
      jSTypeArray0[2] = (JSType) null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createUnionType(jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.UnionTypeBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.areAllFlagsSet();
      node0.isNew();
      node0.isArrayLit();
      node0.isTypeOf();
      Node node1 = Node.newNumber((double) 29);
      node1.isCase();
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setLineno(0);
      node0.toString(false, false, false);
      node0.toString(false, false, false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      Node node1 = Node.newString("I/)VUkz}+9WV", 3400, 51);
      node1.getSourceOffset();
      node_FileLevelJsDocBuilder0.append("");
      node0.isScript();
      node0.isParamList();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("CY<[E^");
      Node node1 = new Node(0, 1, 4095);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder1.append("Object#Key");
      node0.isScript();
      node0.isParamList();
      node1.isThrow();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newString((-284), "", (-284), 98);
      node0.getJSDocInfo();
      Node node1 = new Node((-284), node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node1.setWasEmptyNode(false);
      node1.isFalse();
      Node node2 = node1.getLastSibling();
      Node node3 = node2.srcref(node1);
      node3.addChildToBack(node1);
      node3.isGetElem();
      node3.getCharno();
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node(33);
      nodeArray0[0] = node0;
      Node node1 = new Node(52, 880, (-1944));
      nodeArray0[1] = node1;
      Node node2 = new Node(50, 57, 29);
      node2.isQuotedString();
      node2.siblings();
      node2.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.valueOf();
      node0.copyInformationFrom(node0);
      node0.removeChildren();
      node2.getFirstChild();
      node1.setCharno(326);
      Node node3 = null;
      try {
        node3 = new Node(1610612736, node1, node2, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString(1029, "");
      node0.setLength(309);
      Node node1 = Node.newString("", 309, 863);
      node0.isVoid();
      Node node2 = Node.newNumber((-960.4684374640497));
      Node node3 = node0.srcref(node1);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node0);
      node4.setSourceEncodedPosition(1);
      node4.getSourceFileName();
      // Undeclared exception!
      try { 
        node2.removeChild(node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node node0 = new Node(30, (-1465), 122);
      node0.setVarArgs(true);
      node0.cloneNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("v^}lM*6+", false);
      SimpleSourceFile simpleSourceFile1 = new SimpleSourceFile("Ab8X#3(eix<[hU)q3A", false);
      // Undeclared exception!
      try { 
        simpleSourceFile1.getLineOffset((-355));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number -355
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = new Node(42, 42, 573);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags5.setThrows();
      node_SideEffectFlags6.setThrows();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags7.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags6.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newNumber((double) 54);
      Node node2 = node0.cloneNode();
      node2.checkTreeEqualsImpl(node1);
      node0.isScript();
      Node node3 = new Node(30, 2023, (-1858));
      node3.setSideEffectFlags(4095);
      node3.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(";Jp>6lR");
      Node node1 = new Node(30);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.setSideEffectFlags((-925));
      node0.isHook();
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = new Node(57, 56, 56);
      Node node1 = new Node(31, node0, node0, node0);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      int int0 = (-862048943);
      Node node0 = new Node((-1600));
      // Undeclared exception!
      try { 
        node0.setDouble(4095);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1600
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = Node.newString("v:*-pRAX]?#.a!*^f%");
      Node node1 = new Node(105, node0);
      node0.getAncestor(43);
      Node node2 = new Node(105, node1, node1, node1);
      node2.isObjectLit();
      node1.isLabel();
      node2.toString(true, false, false);
      node1.isAssign();
      node1.isDelProp();
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(57);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 57
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", Integer.MAX_VALUE, 41);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      node1.getAncestor(1);
      Node node2 = new Node(152, node1);
      node2.isArrayLit();
      node0.cloneTree();
      node2.isSetterDef();
      node0.getIndexOfChild((Node) null);
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newNumber((-658.24476), (-293), (-633));
      node0.getDirectives();
      node0.getLength();
      node0.hasOneChild();
      Node node1 = new Node(1, node0, node0, 42, 4109);
      Node node2 = node1.cloneTree();
      node2.isSetterDef();
      node2.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newString(105, "GOk'>^Q{.9");
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = new Node(107);
      Node node1 = Node.newNumber((double) 52, (-633), 29);
      node1.isSetterDef();
      node0.isObjectLit();
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", Integer.MAX_VALUE, (-2963));
      Node node1 = new Node(152, node0, node0, 32, (-968));
      node1.getAncestor(1);
      Node node2 = new Node(152, node1);
      node2.isArrayLit();
      node2.getLastChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = Node.newString("v:*-pRAX]?#.a!*^f%");
      Node node1 = new Node(105, node0);
      node0.getAncestor(43);
      node0.isObjectLit();
      node1.isLabel();
      node1.toString(true, false, false);
      node1.isAssign();
      node1.isDelProp();
      int int0 = Node.SLASH_V;
      Node node2 = null;
      try {
        node2 = new Node(42, node1, node1, node0, node0, 2, 40);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setLineno(0);
      node0.toString(false, false, false);
      node0.toString(false, false, false);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      Node node1 = Node.newString("I/)VUkz}+9WV", 3400, 51);
      node1.setSourceEncodedPositionForTree(46);
      node1.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append((String) null);
      node1.isFunction();
      node1.isWhile();
      Node node2 = Node.newString((-837), "");
      node2.isWith();
      node2.isReturn();
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = new Node(596, 596, 596);
      node0.isOnlyModifiesArgumentsCall();
      node0.isOptionalArg();
      node0.putIntProp(596, 57);
      node0.setType((-2234));
      node0.getInputId();
      node0.putProp(596, (Object) null);
      int int0 = Node.LENGTH;
      Node node1 = new Node(26, node0);
      node1.toString(false, false, false);
      Node node2 = node0.srcrefTree(node1);
      Node node3 = node1.copyInformationFromForTree(node2);
      node3.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?");
      node0.isCall();
      node0.isDelProp();
      Node node1 = Node.newString((-872), "first new child has existing sibling");
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = new Node(33);
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = new Node(42, 42, 573);
      Node node1 = node0.cloneNode();
      node0.useSourceInfoFrom(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("v^}lM*6+", true);
      Node node2 = null;
      int int0 = 111;
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = new Node(138, 138, 138);
      Node node1 = new Node(54);
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = new Node(48, 48, (-1900));
      Node node1 = Node.newNumber((double) 42, 387, 39);
      node1.setDouble(15);
      node0.isEquivalentTo(node1);
      node0.isLabelName();
      node0.hasMoreThanOneChild();
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = Node.newString((-433), "dw1cIuAi85");
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isRegExp();
      node0.isSetterDef();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(828.940998);
      node0.removeProp(29);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-4));
      node0.setCharno((-4));
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("CY<[E^");
      Node node1 = new Node((-2801), (-1305), 57);
      node0.isFunction();
      node1.setSourceEncodedPosition(102);
      node1.mayMutateGlobalStateOrThrow();
      node0.isTry();
      Node node2 = new Node(7, 16, 37);
      Node node3 = node2.copyInformationFromForTree(node1);
      node1.checkTreeTypeAwareEqualsImpl(node3);
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isUnscopedQualifiedName();
      node0.isUnscopedQualifiedName();
      node0.getQualifiedName();
      Node node1 = new Node(461845907, node0, node0, node0, 51, 53);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node0.isSyntheticBlock();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node2 = new Node(2188, node0, node1, 38, (-607));
      Node node3 = node0.copyInformationFrom(node2);
      node1.isNew();
      node3.isVoid();
      node2.getLineno();
      node2.isQuotedString();
      node1.isOnlyModifiesArgumentsCall();
      node2.isThis();
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node1.clonePropsFrom(node0);
      node0.copyInformationFrom(node1);
      node0.isLocalResultCall();
      try { 
        node0.setDouble(122);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING &qpxu'qP'cT0v+!J is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = Node.newNumber((double) 132, 132, 132);
      Node node1 = Node.newNumber((double) 57);
      node0.setVarArgs(true);
      Node node2 = new Node(132, node0, node1, node1, 0, 124);
      node2.isSetterDef();
      node0.addChildToBack(node2);
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      Node node1 = new Node(4222, 46, 50);
      node1.isEquivalentTo(node0, false, false, false);
      Node node2 = new Node(56);
      Node node3 = node2.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add((String) null);
      node0.isLocalResultCall();
      node3.setDirectives(hashSet0);
      boolean boolean0 = true;
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(" ,Nu<u:Tdw=^#?", false);
      String string0 = "Number node not created with Node.newNumber";
      SimpleSourceFile simpleSourceFile1 = new SimpleSourceFile("Number node not created with Node.newNumber", true);
      simpleSourceFile1.getLineOffset(54);
      // Undeclared exception!
      try { 
        simpleSourceFile0.getLineOffset((-1));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number -1
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newString(99, "v:*-pRAX]?#.a!*^f%", 99, 99);
      Node node1 = new Node(99, node0);
      node0.getAncestor(43);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = new Node(113);
      node0.getAncestor(113);
      // Undeclared exception!
      try { 
        node0.addChildBefore((Node) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Jc]8-9@I )lb:4?");
      Node node1 = new Node(865, 37, (-2337));
      node0.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder1.append("PARAM_LIST");
      node1.isScript();
      node1.isParamList();
      node0.isThrow();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newString((-284), "", (-284), 98);
      node0.getJSDocInfo();
      Node node1 = new Node((-284), node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node1.setWasEmptyNode(false);
      node1.isFalse();
      Node node2 = node1.getLastSibling();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      Node node4 = new Node((-872), node3, 656, (-2412));
      node4.setOptionalArg(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node2.isEquivalentTo(node1);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -284
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = new Node(90);
      node0.isUnscopedQualifiedName();
      node0.removeProp(38);
      Node node1 = new Node(8, node0, node0, node0, node0, (-7), 4095);
      node1.isSyntheticBlock();
      node1.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = Node.newString(3024, ";fiCZs2 klL");
      Node node1 = new Node(115, node0);
      Node.newString(49, ";fiCZs2 klL");
      node1.isEquivalentTo(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = new Node(110);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      Node node1 = new Node(54, node0, node0, node0);
      node0.srcref(node1);
      node0.isEquivalentToTyped(node1);
      node0.isAnd();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = new Node(42, 42, 42);
      Node node1 = new Node(42, node0, node0, node0, node0);
      node0.isArrayLit();
      node0.isEquivalentTo(node1);
      node1.isEquivalentTo(node0, false, false, false);
      node1.isCall();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString((-284), "WFrX!uQQU/`", (-284), 98);
      node0.getJSDocInfo();
      Node node1 = new Node((-284), node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node1.setWasEmptyNode(false);
      node1.isFalse();
      Node node2 = node1.getLastSibling();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      Node node4 = new Node((-829), node3, 656, 125);
      node1.mayMutateGlobalStateOrThrow();
      node4.isNot();
      node3.siblings();
      node3.isEquivalentToShallow(node1);
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 12, 38);
      Node node1 = new Node(12, node0, 15, 54);
      node1.getDirectives();
      Node node2 = Node.newNumber((double) 54);
      // Undeclared exception!
      try { 
        node2.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setThrows();
      Node node0 = Node.newNumber((-1744.6286), 7, 394);
      Node node1 = new Node((-2203), node0, node0, node0, node0);
      node1.isDebugger();
      node1.isScript();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      // Undeclared exception!
      try { 
        node2.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = new Node((-4), (-4), (-4));
      node0.setCharno((-4));
      node0.putBooleanProp(1745, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = Node.newNumber((double) 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.getLength();
      Node node3 = Node.newString(26, "");
      Node node4 = new Node(57, node3);
      // Undeclared exception!
      try { 
        node3.replaceChild(node2, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = Node.newString("\"xt2g1M^|JyC;!C", (-219), 710);
      node0.toString();
      Node node1 = new Node((-399), node0, 39, 56);
      node1.cloneNode();
      node1.isEmpty();
      node0.isArrayLit();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -399
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node(53, (Node) null, (Node) null, 43, 4095);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-4));
      node0.setCharno((-4));
      Node node1 = new Node(36, node0);
      Node node2 = Node.newString(".");
      node2.isQuotedString();
      node1.putBooleanProp(2, false);
      Node node3 = new Node(55, 55, 57);
      node2.addChildrenToBack(node3);
      node0.isEmpty();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node4 = Node.newString(40, ".", 2, 50);
      node4.wasEmptyNode();
      node1.addChildrenToBack(node4);
      Node node5 = null;
      try {
        node5 = new Node(32, node0, node1, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newString("bX,;FF");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 152, 152);
      Node node1 = new Node(52, node0, node0, 32, (-968));
      Node node2 = null;
      try {
        node2 = new Node(2, node1, node0, 54, 38);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString((-284), "", (-284), 98);
      node0.getJSDocInfo();
      Node node1 = new Node((-284), node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node1.getProp(153);
      node1.setWasEmptyNode(false);
      node1.isFalse();
      node0.useSourceInfoIfMissingFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      Node node2 = null;
      try {
        node2 = new Node(53, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.isLocalResultCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Set<String> set0 = jSDocInfo0.getModifies();
      node0.setDirectives(set0);
      Node node1 = new Node(46, node0, node0, node0, 122, 122);
      node1.checkTreeEquals(node0);
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-4));
      node0.setCharno((-4));
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("");
      node0.isLocalResultCall();
      node0.setDirectives(hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      simpleSourceFile0.getLineOffset(16);
      simpleSourceFile0.getLineOffset(1457);
      simpleSourceFile0.getLineOffset(1246);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = Node.newNumber((-37.283376120442));
      Node node2 = node0.useSourceInfoFrom(node1);
      String string0 = "%l2Rh##>f'</";
      try { 
        node2.setString("%l2Rh##>f'</");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -4.0 [directives: com.google.javascript.rhino.Node$ObjectPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = new Node(36);
      node0.getBooleanProp(36);
      node0.getStaticSourceFile();
      node0.isFromExterns();
      Node node1 = new Node(4095, node0, node0, node0);
      node0.isEquivalentToTyped(node1);
      node1.isLocalResultCall();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = new Node(96, 96, 96);
      Node node1 = new Node(4095, 39, 39);
      node1.isAnd();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = Node.newNumber(0.0);
      node0.setType(1511);
      node0.isContinue();
      // Undeclared exception!
      try { 
        Node.newString((String) null, 2, 122);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = new Node(897);
      node0.isFor();
      node0.getAncestor(897);
      node0.isRegExp();
      node0.isBlock();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newNumber(1119.8608412921853);
      node0.isInstanceOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = new Node(799, node0, 47, 0);
      node1.removeChild(node0);
      node1.setCharno(117);
      node0.setOptionalArg(true);
      Node node2 = Node.newNumber((double) 12, 1247, 46);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setLineno(0);
      node0.detachChildren();
      node0.isQuotedString();
      Node[] nodeArray0 = new Node[2];
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = new Node((-853), nodeArray0);
      node2.isNull();
      node1.getType();
      node2.removeChild(node0);
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.wasEmptyNode();
      node0.getCharno();
      StringWriter stringWriter0 = new StringWriter(110);
      Node node1 = new Node(29, node0, node0, node0, 897, 2);
      node0.checkTreeEqualsImpl(node1);
      StringWriter stringWriter1 = stringWriter0.append('');
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      char[] charArray0 = new char[0];
      stringWriter1.write(charArray0);
      char[] charArray1 = new char[2];
      charArray1[0] = '';
      charArray1[1] = '';
      stringWriter0.write(charArray1);
      stringWriter1.write(133);
      node0.appendStringTree(stringWriter1);
      node0.isNoSideEffectsCall();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, true);
      node0.isAssign();
      node0.isDelProp();
      int int0 = Node.SLASH_V;
      simpleErrorReporter0.warning("PARAM_LIST", "{", 4095, 0);
      Node node1 = new Node(87855567, node0, node0, node0, node0, (-26), 125);
      node0.getLastChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1441, nodeArray0);
      String string0 = " C]{1";
      InputId inputId0 = new InputId(" C]{1");
      inputId0.toString();
      node0.setInputId(inputId0);
      inputId0.toString();
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getLength();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      int int0 = 461845907;
      int int1 = (-4087);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[8];
      Vector<JSType> vector0 = new Vector<JSType>(36, (-4087));
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node0.getJSType();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = new Node(1610612736);
      node0.getBooleanProp(662);
      node0.getStaticSourceFile();
      node0.isFromExterns();
      Node node1 = new Node(4095, node0, node0, node0);
      Node node2 = Node.newNumber(1244.04202, 1, 3788);
      node0.isEquivalentToTyped(node2);
      node2.isLocalResultCall();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = new Node((-762), (-927), (-762));
      Node node1 = new Node(31);
      node1.isEquivalentTo(node0, false, false, false);
      node1.srcrefTree(node0);
      node0.isIf();
      node1.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString("");
      node0.isIn();
      Node node1 = Node.newString("");
      node0.isGetElem();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(9);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 9
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = Node.newNumber(2119.98904446618, 36, 36);
      node0.getBooleanProp(36);
      node0.getStaticSourceFile();
      Node node1 = new Node(8232, node0, node0, (-543), 40);
      Node node2 = Node.newNumber((double) 0);
      Node node3 = node0.clonePropsFrom(node2);
      Node node4 = node1.copyInformationFrom(node2);
      node4.isLocalResultCall();
      node3.setDouble(15);
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = new Node(138);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node node1 = Node.newString(39, "OuX1mEds]}xE", 4, 36);
      Node node2 = new Node(52, node1, 116, 0);
      node1.isNumber();
      node1.isReturn();
      node1.isUnscopedQualifiedName();
      node2.isDelProp();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, false);
      node0.getJsDocBuilderForNode();
      Node node1 = Node.newNumber((double) 15);
      Node node2 = node0.cloneNode();
      node1.checkTreeEqualsImpl(node2);
      node0.isScript();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-4));
      node0.setCharno((-4));
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.isAssignAdd();
      node0.isLocalResultCall();
      node0.setDirectives(hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
      simpleSourceFile0.getLineOffset(16);
      simpleSourceFile0.getLineOffset(1457);
      simpleSourceFile0.getLineOffset(1246);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = Node.newNumber((-37.283376120442));
      Node node2 = node0.useSourceInfoFrom(node1);
      String string0 = "%l2Rh##>f'</";
      try { 
        node2.setString("%l2Rh##>f'</");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -4.0 [directives: com.google.javascript.rhino.Node$ObjectPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = new Node(42, 42, 573);
      Node node1 = new Node(47);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node3 = new Node((-1400), node2, node1, 1101, 42);
      Node node4 = node3.copyInformationFrom(node0);
      node0.getSourceFileName();
      node2.getJsDocBuilderForNode();
      node3.isNew();
      node4.isNumber();
      node2.getLineno();
      Node.newString("Duplicate record field ");
      node0.isQuotedString();
      node0.isOnlyModifiesArgumentsCall();
      node3.isTry();
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      nodeArray0[0] = node0;
      Node node1 = new Node(52, 880, (-1901));
      nodeArray0[1] = node1;
      Node node2 = new Node(246, nodeArray0);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node1.toString(false, false, false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("unexpected prop id ");
      node2.isFunction();
      node2.isCase();
      node0.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags5.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = Node.newNumber((-658.24476), (-293), (-633));
      node0.getDirectives();
      node0.getLength();
      node0.hasOneChild();
      Node node1 = new Node(1, node0, node0, 42, 4109);
      Node node2 = new Node(122, node1, 53, 47);
      MockFileWriter mockFileWriter0 = new MockFileWriter(")IXSj6^ V", false);
      // Undeclared exception!
      try { 
        node2.appendStringTree(mockFileWriter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isWith();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isReturn();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(107);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = new Node(596, (-3599), 596);
      node0.isOnlyModifiesArgumentsCall();
      node0.isOptionalArg();
      node0.putIntProp((-3599), 57);
      node0.setType((-2234));
      node0.getInputId();
      node0.putProp(596, (Object) null);
      int int0 = Node.LENGTH;
      node0.isFunction();
      node0.getChildAtIndex((-3599));
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = Node.newString("B{UwMYN6tx'nHY", 152, 152);
      Node.newString("B{UwMYN6tx'nHY");
      // Undeclared exception!
      try { 
        node0.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isLocalResultCall();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("FOR", false);
      int int0 = Node.SYNTHETIC_BLOCK_PROP;
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(38);
      try { 
        node0.setString("Object#Element");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000338] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("CY<[E^");
      Node node1 = new Node(0, 1, 4095);
      node1.isFunction();
      node1.setSourceEncodedPosition(4095);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Object#Element", false);
      simpleSourceFile0.getLineOffset(37);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node2 = Node.newNumber(0.0);
      Node node3 = node2.useSourceInfoFrom(node0);
      try { 
        node3.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 0.0 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000346] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = Node.newNumber(2119.98904446618, 36, 36);
      node0.getBooleanProp(36);
      node0.getStaticSourceFile();
      Node node1 = new Node(8232, node0, node0, (-543), 40);
      Node node2 = Node.newNumber((double) 0);
      node0.isRegExp();
      node2.isBlock();
      node2.isThrow();
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = new Node(2);
      Node node1 = Node.newString("true");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = Node.newString(50, "B%t|(_`KLx", 54, 50);
      node2.srcrefTree(node0);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("com.google.common.collect.Maps");
      node2.isLocalResultCall();
      node0.setDirectives(hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("OBJECT_FUNCTION_TYPE", true);
      simpleSourceFile0.getLineOffset(48);
      simpleSourceFile0.getLineOffset(57);
      simpleSourceFile0.getLineOffset(57);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = Node.newNumber((double) 0);
      node2.useSourceInfoFrom(node3);
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = new Node(138);
      Node node1 = new Node(56);
      // Undeclared exception!
      try { 
        node1.setString("prev is not a child of this node.");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 56
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = Node.newString(1139, "5P:!(]k,/9H3B#QIrd");
      Node node1 = new Node(63, node0, node0, node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(63, node1, node0, node1, node1, (-1043), 63);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(573);
      node1.getBooleanProp(63);
      node1.getStaticSourceFile();
      node1.isFromExterns();
      Node node2 = new Node((-1893), node0, node0, node1);
      node1.isEquivalentToTyped(node2);
      node0.isLocalResultCall();
      Node node3 = null;
      try {
        node3 = new Node(12, node2, node1, node2, node0, 43, (-1893));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      nodeArray0[0] = node0;
      Node node1 = new Node(52, 880, (-1901));
      nodeArray0[1] = node1;
      Vector<JSType> vector0 = new Vector<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node3 = node1.clonePropsFrom(node1);
      node1.copyInformationFrom(node3);
      node2.isLocalResultCall();
      try { 
        node1.setDouble(48);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INSTANCEOF is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      node1.cloneTree();
      Node.newString("Jc]8-9@I )lb:4?");
      node1.isSetterDef();
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(3018);
      Node node1 = new Node(1201, node0, node0, node0, node0);
      node1.getIndexOfChild(node0);
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("CY<[E^");
      Node node1 = new Node(0, 1, 4095);
      Node node2 = Node.newString("CY<[E^", (-3405), 37);
      node2.clonePropsFrom(node1);
      node1.copyInformationFrom(node0);
      node0.isLocalResultCall();
      // Undeclared exception!
      try { 
        node1.setDouble((-2349.75));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.mayMutateGlobalStateOrThrow();
      node0.isTry();
      JSType[] jSTypeArray0 = new JSType[0];
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = Node.newString(937, "!q&wVvhQ");
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(35, (Node) null, (Node) null, (Node) null, (Node) null, (-2554), (-2554));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Stack<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      node1.isEquivalentTo(node0, true, true, true);
      Node node2 = Node.newString(38, "com.google.javascript.rhino.Node$NodeMismatch");
      node2.isOnlyModifiesArgumentsCall();
      node0.isDelProp();
      node1.isGetterDef();
      Node.mergeLineCharNo(37, 1);
      node2.isIn();
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(1522.8);
      Node node1 = new Node(53, node0, node0);
      node0.isRegExp();
      node0.siblings();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = Node.newString(3024, ";fiCZs2 klL");
      Node node1 = new Node(115, node0);
      Node node2 = Node.newString(";fiCZs2 klL");
      node1.isQuotedString();
      node1.putBooleanProp((-1234), false);
      node0.addChildrenToBack(node1);
      node1.wasEmptyNode();
      node1.detachFromParent();
      node1.cloneTree();
      node0.isSetterDef();
      node1.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = Node.newString("ZWW15eI");
      node0.isOnlyModifiesThisCall();
      node0.isQuotedString();
      node0.getQualifiedName();
      node0.getStaticSourceFile();
      node0.isQuotedString();
      node0.putBooleanProp(12, false);
      // Undeclared exception!
      try { 
        node0.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = new Node((-3368));
      node0.type = (-3368);
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node0.isNull();
      Node node1 = new Node(57, node0, node0, node0, node0);
      node0.srcref(node1);
      node1.isDo();
      node0.getLength();
      Node node2 = new Node(2243, 1304, 8287);
      node2.setLength(63);
      Node node3 = new Node(49, node1);
      Node node4 = Node.newNumber(1.0);
      node4.setIsSyntheticBlock(true);
      Node node5 = new Node(0);
      node1.addChildToFront(node5);
      node1.isOr();
      Node.newString(93, "0123456789ABCDEF");
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 12, 39);
      Node node1 = new Node(329, node0, 15, 54);
      node1.getDirectives();
      Node node2 = new Node((-4));
      node2.setSourceFileForTesting("setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      Node.newString(3970, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      node0.isName();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = new Node(42, 42, 589);
      Node node1 = Node.newString(1, "wd2k{dh?wxOM");
      node1.addChildToFront(node0);
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = new Node(152, 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      Node node2 = null;
      try {
        node2 = new Node(36, node0, node0, 29, 16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = new Node(576, 576, 576);
      node0.isOnlyModifiesArgumentsCall();
      node0.isOptionalArg();
      Node node1 = new Node(57, node0);
      node0.clonePropsFrom(node1);
      // Undeclared exception!
      try { 
        Node.newString((String) null, (-730), 16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = Node.newNumber(2119.98904446618, 36, 36);
      node0.getBooleanProp(36);
      node0.getStaticSourceFile();
      Node node1 = new Node(8232, node0, node0, (-543), 40);
      Node node2 = Node.newNumber((double) 0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      node1.isFunction();
      Node node3 = new Node(2220, 8287, 511);
      Node node4 = new Node(57, node3, 1528, 724);
      node4.isWhile();
      node3.isWith();
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(573);
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newString((-284), "", (-284), 98);
      node0.getJSDocInfo();
      Node node1 = new Node((-284), node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node1.setWasEmptyNode(false);
      node1.isFalse();
      Node node2 = node1.getLastSibling();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      Node node4 = new Node((-872), node3, 656, (-2412));
      node4.setOptionalArg(false);
      Node node5 = Node.newNumber((-608.2264974892522));
      node5.setIsSyntheticBlock(false);
      Node node6 = new Node(964);
      Node node7 = new Node(383, 1, (-872));
      node7.addChildToFront(node6);
      node2.isOr();
      Node.newString(46, "GETTER_DEF");
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 38, 39);
      node0.putBooleanProp(4095, false);
      node0.isQualifiedName();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node0.getString();
      node0.siblings();
      node0.isFunction();
      node0.getNext();
      node0.isSwitch();
      Node.extractLineno(55);
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.mayMutateArguments();
      Node node1 = new Node(38, 1, 39);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append(")4y..oT[$");
      Node node2 = new Node((-1352), 15, 40);
      node0.isFunction();
      node0.setSourceEncodedPosition(54);
      node0.mayMutateGlobalStateOrThrow();
      node2.isTry();
      Node node3 = new Node(102, 39, (-1875));
      Node node4 = node1.copyInformationFromForTree(node3);
      node4.isThrow();
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = Node.newString(125, "quoted", 125, (-293));
      Node node1 = new Node(46, node0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("/~K\"q4", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node.newNumber(351.03569337);
      node1.getSourceOffset();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = new Node(48);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node1.isLocalResultCall();
      node1.setDirectives(hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("B%t|(_`KLx", true);
      simpleSourceFile0.getLineOffset(51);
      simpleSourceFile0.getLineOffset(814);
      simpleSourceFile0.getLineOffset(50);
      simpleSourceFile0.getLineOffset(1803);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node node3 = Node.newNumber((double) 57);
      Node node4 = node3.useSourceInfoFrom(node0);
      node4.getSourceOffset();
      node1.setString("B%t|(_`KLx");
      node3.setSourceEncodedPositionForTree(4095);
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node2 = node1.clonePropsFrom(node0);
      Node node3 = node0.copyInformationFrom(node1);
      Node node4 = node2.useSourceInfoFrom(node0);
      node3.setString("Object#Element");
      node4.setSourceEncodedPositionForTree(54);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = new Node((-3368));
      node0.type = (-3368);
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags4.areAllFlagsSet();
      Node node1 = new Node(57, node0, node0, node0, node0);
      Node node2 = node0.srcref(node1);
      node1.isDo();
      node0.getLength();
      node2.removeChildren();
      node0.isEquivalentToTyped(node2);
      node2.isTry();
      Node node3 = new Node(4010, 52, 48);
      node2.copyInformationFromForTree(node1);
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = Node.newString("", 57, 57);
      Node node1 = new Node(0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node1.getProp(37);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node0.isSyntheticBlock();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node2 = new Node(2188, node0, node1, 38, (-607));
      Node node3 = node0.copyInformationFrom(node2);
      node1.isNew();
      node3.isVoid();
      node2.getLineno();
      node2.isQuotedString();
      node1.isOnlyModifiesArgumentsCall();
      node3.isString();
      node3.isThrow();
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = new Node(48);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = Node.newString("B%t|(_`KLx", 54, 47);
      HashSet<String> hashSet0 = new HashSet<String>();
      node1.isQualifiedName();
      node1.isLocalResultCall();
      Node node3 = new Node(306654252, node0, node2, 39, 4095);
      node1.getAncestor(2092);
      Node node4 = new Node((-12), node3);
      node0.isArrayLit();
      node4.cloneTree();
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = Node.newString("ZWW15eI");
      node0.isOnlyModifiesThisCall();
      node0.isQuotedString();
      node0.getQualifiedName();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.detachChildren();
      Node node1 = new Node(329);
      node1.isEquivalentTo(node0, false, false, true);
      Node node2 = new Node(49, 43, 155);
      node2.srcrefTree(node1);
      node0.isIf();
      node2.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 123, 123);
      Node node1 = new Node(0, node0);
      Node node2 = Node.newString("&qpxu'qP'cT0v+!J");
      node1.isQuotedString();
      node0.putBooleanProp(52, false);
      // Undeclared exception!
      try { 
        node2.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      int int0 = 3400;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.useSourceInfoFromForTree(node1);
      node0.setLineno(0);
      Node node2 = new Node(53, node0, node0, (-1161), 128);
      int int1 = 246;
      // Undeclared exception!
      try { 
        node2.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = Node.newString(119, "?jO2i[9e\"qsB", 30, 30);
      Node node1 = new Node(119, node0, node0, node0, node0, 57, 111);
      Node node2 = node1.srcrefTree(node0);
      node2.getJsDocBuilderForNode();
      Node node3 = Node.newString("?jO2i[9e\"qsB", 734, 2279);
      node1.isObjectLit();
      node0.isThrow();
      node3.isContinue();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(36);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("CY<[E^");
      Node node1 = new Node(0, 1, 4095);
      node1.isFunction();
      node1.setSourceEncodedPosition(4095);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Object#Element", false);
      simpleSourceFile0.getLineOffset(37);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node2 = Node.newNumber((-1.0));
      node1.isRegExp();
      node1.isBlock();
      node1.isThrow();
      node2.addChildrenToFront(node0);
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isSwitch();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, false);
      Node node1 = new Node((-2171), node0, node0, node0, node0, 2, 12);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("ar");
      node1.isSyntheticBlock();
      Node.newNumber(1.2);
      Node node2 = node0.cloneNode();
      node2.checkTreeEqualsImpl(node0);
      Node node3 = new Node(4095, node1);
      node1.mayMutateGlobalStateOrThrow();
      node2.isTry();
      Node node4 = null;
      try {
        node4 = new Node(839, node0, node3, node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node((-5331));
      Node node1 = Node.newString("com.google.javascript.rhino.Node$NumberNode");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node2.isLocalResultCall();
      node2.setDirectives(hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("B%t|(_`KLx", true);
      simpleSourceFile0.getLineOffset(37);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(43);
      simpleSourceFile0.getLineOffset(31);
      node2.setStaticSourceFile(simpleSourceFile0);
      Node.newNumber((double) Integer.MIN_VALUE);
      Node node3 = node1.useSourceInfoFrom(node0);
      int int0 = Node.COLUMN_BITS;
      node3.setString("");
      node0.setSourceEncodedPositionForTree(46);
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.isTry();
      node0.getProp(122);
      Node node1 = new Node(40, node0, node0, node0, node0, 3814, 30);
      node0.getLength();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = new Node(48);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node1.isLocalResultCall();
      node1.setDirectives(hashSet0);
      node1.getStaticSourceFile();
      node1.isFromExterns();
      Node node3 = new Node(36, node2, node2, node2);
      node2.isEquivalentToTyped(node3);
      node0.isLocalResultCall();
      node0.isAnd();
      // Undeclared exception!
      try { 
        node3.addChildrenToFront(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, true);
      node0.getJsDocBuilderForNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      simpleSourceFile0.getLineOffset(32);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = Node.newNumber((double) 12);
      node0.useSourceInfoFrom(node1);
      try { 
        node0.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = new Node((-3368));
      node0.type = (-3368);
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node0.isNull();
      Node node1 = new Node(57, node0, node0, node0, node0);
      Node node2 = node0.srcref(node1);
      node1.isDo();
      node0.getLength();
      Node node3 = new Node(2243, 1304, 8287);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      simpleSourceFile0.getLineOffset(133);
      simpleSourceFile0.getLineOffset(346);
      simpleSourceFile0.getLineOffset(118);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node4 = Node.newString("[<M.*ebWO&tG");
      node4.isTrue();
      node4.isScript();
      node4.siblings();
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3368
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isFor();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Yd", false);
      node0.isSwitch();
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 107
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node((-1011), (Node) null, (-1011), (-1011));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 12, 12);
      Node node1 = new Node(329, node0, 15, 54);
      Node[] nodeArray0 = new Node[0];
      node1.getDirectives();
      Node node2 = new Node(1, nodeArray0);
      node1.isNE();
      node1.replaceChild(node0, node2);
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = new Node((-3368));
      node0.type = (-3368);
      node0.isEmpty();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setThrows();
      node0.isNull();
      node_SideEffectFlags4.clearAllFlags();
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.mayMutateGlobalStateOrThrow();
      node0.isTry();
      node0.isNE();
      node_SideEffectFlags4.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = Node.newString("yPF", (-633), (-633));
      Node node1 = new Node(75, node0, node0, (-1055), 1212);
      node0.addChildrenAfter(node1, (Node) null);
      node0.isString();
      node1.addSuppression("yPF");
      node0.isArrayLit();
      node1.isTypeOf();
      node1.isTry();
      node0.isHook();
      node1.isAnd();
      // Undeclared exception!
      try { 
        node1.clonePropsFrom(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      nodeArray0[0] = node0;
      Node node1 = new Node(52, 880, (-1901));
      nodeArray0[1] = node1;
      Node node2 = new Node(246, nodeArray0);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node1.toString(false, true, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("unexpected prop id ");
      node2.isFunction();
      node0.isNumber();
      node0.isThis();
      node0.isReturn();
      node2.cloneNode();
      node2.isScript();
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 114, 114);
      node0.checkTreeEquals(node0);
      node0.isAdd();
      Node node1 = new Node(11, node0, node0, node0);
      node1.isRegExp();
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString("v:*-pRX]?#.M!*^%");
      node0.isLabel();
      node0.isEquivalentToTyped(node0);
      Node node1 = new Node(40, node0);
      node0.isCase();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = new Node(43);
      node1.clonePropsFrom(node0);
      node0.copyInformationFrom(node1);
      node0.isLocalResultCall();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.mayMutateArguments();
      Node node1 = new Node(38, 1, 39);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append(")4y..oT[$");
      Node node2 = new Node((-1352), 15, 40);
      Node node3 = new Node(32, node2, node1, 43, 38);
      Node node4 = node2.cloneTree();
      node2.isSetterDef();
      Node node5 = new Node(36);
      node4.getIndexOfChild(node2);
      node0.getIndexOfChild(node4);
      node1.srcref(node5);
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.areAllFlagsSet();
      Node node0 = Node.newNumber(363.181322554);
      Node node1 = new Node(52, node0, node0);
      Node node2 = Node.newString("");
      Node node3 = new Node(57, node2, 55, 100);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 38, 38);
      node0.putBooleanProp(4095, false);
      node0.isQualifiedName();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(31, node0, node0, node0, node0);
      Node node2 = new Node(1, (-4839), 37);
      node2.removeProp(49);
      node1.isQuotedString();
      node1.isNull();
      node0.getQualifiedName();
      node1.getJSType();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node node0 = Node.newString(38, "directav\"s", 38, (-886));
      node0.isQualifiedName();
      node0.isFalse();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newString(2042, "com.google.common.collect.AbstractMapEntry", 2588, (-1313));
      Node node1 = new Node(2042, node0, node0, node0);
      node1.getAncestors();
      node1.isEquivalentToTyped(node0);
      node0.setLength(0);
      node0.setChangeTime(822);
      node1.siblings();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("~NU=1#7[4*L7Ij", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = Node.newString(2042, "/RK\"H4", (-2872), (-2688));
      Node node1 = new Node(32, node0, node0, node0);
      node0.getAncestors();
      node0.isEquivalentToTyped(node1);
      node0.setLength(2);
      node1.setChangeTime(49);
      node1.siblings();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      String string0 = "";
      Node node0 = Node.newString("");
      node0.isIn();
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = Node.newString("BOOLEAN_OBJECT_FUNCTION_TYPE", (-247), (-247));
      Node node1 = Node.newString("RSH", 48, 126);
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2680));
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.areAllFlagsSet();
      node1.isFalse();
      try { 
        node1.setDouble((-9.75));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING RSH 48 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setLineno(0);
      Node node1 = new Node(53, node0, node0, (-1161), 128);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = Node.newString(2042, "/RK\"H4", (-2872), (-2688));
      Node node1 = new Node(105, node0, node0);
      node0.getIntProp((-68));
      node1.toString(false, true, true);
      node1.isVarArgs();
      node1.toString(true, false, true);
      node0.isExprResult();
      node0.isAssign();
      node1.isDelProp();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(53);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 53
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = new Node(59, 59, 59);
      node0.isEquivalentTo(node0, false, false, false);
      node0.srcrefTree(node0);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("Bt|(_`KLx");
      node0.isLocalResultCall();
      node0.setDirectives(hashSet0);
      node0.isArrayLit();
      node0.cloneTree();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 126, 126);
      Node node1 = Node.newString(47, "Jc]8-9@I )lb:4?");
      node0.hasOneChild();
      Node node2 = new Node(48, node1, node0, 27, 32);
      Node node3 = node2.cloneTree();
      node2.isSetterDef();
      Node node4 = new Node(16);
      node4.getIndexOfChild(node2);
      node2.getIndexOfChild(node4);
      node2.srcref(node3);
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = Node.newNumber(1526.2861517808788);
      Node node1 = Node.newNumber((double) 42);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node_NodeMismatch0.equals(node0);
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(105, node0);
      Node node2 = new Node(56, node1, 0, 0);
      node0.getLength();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeTypeAwareEqualsImpl(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node_NodeMismatch0.equals(node0);
      node1.isCast();
      node2.wasEmptyNode();
      node0.isLocalResultCall();
      node1.isFromExterns();
      Node node3 = Node.newString((-40), "", 3018, 51);
      node3.removeProp(47);
      // Undeclared exception!
      try { 
        node3.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -40
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.mayMutateArguments();
      Node node1 = new Node(38, 1, 39);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append(")4y..oT[$");
      Node node2 = new Node((-1352), 15, 40);
      node0.isFunction();
      node0.setSourceEncodedPosition(54);
      node0.mayMutateGlobalStateOrThrow();
      Node node3 = new Node(57, node0, node1, 16, 2);
      node3.copyInformationFrom(node2);
      node1.isNew();
      node3.isVoid();
      node1.getLineno();
      Node node4 = Node.newString(49, "lfy/$WL#c:72=WR&WP");
      node4.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType(")4y..oT[$", node2, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      linkedList0.remove((Object) node0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, false);
      node0.getJsDocBuilderForNode();
      node0.hasOneChild();
      Node node1 = new Node(2, node0, node0, 1102, 48);
      node1.cloneTree();
      node1.isSetterDef();
      node1.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = new Node(122, 122, 122);
      Vector<JSType> vector0 = new Vector<JSType>();
      boolean boolean0 = true;
      node0.toString(false, true, false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("VOID");
      node0.isSyntheticBlock();
      Node node1 = Node.newNumber((double) 51, 122, 1);
      Node node2 = node0.cloneNode();
      Node node3 = node0.cloneNode();
      Node node4 = new Node((-1812), node2, node3, node1, node2);
      node1.getStaticSourceFile();
      node4.setStaticSourceFile((StaticSourceFile) null);
      Node.newNumber((double) 4095);
      Node node5 = null;
      try {
        node5 = new Node(2510, node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = Node.newString(2042, "/RK\"H4", (-2872), 2042);
      Node node1 = new Node(32, node0, node0, node0);
      node0.getAncestors();
      node0.isEquivalentToTyped(node1);
      node0.setLength(2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isLocalResultCall();
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-658.24476), (-293), (-623));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      Node node1 = new Node(1, 120, (-2057));
      Node node2 = new Node(119, node0, node0, 4168, 0);
      Node node3 = node0.cloneTree();
      node0.isSetterDef();
      Node node4 = new Node(50);
      node0.getIndexOfChild(node1);
      node4.getIndexOfChild(node3);
      Node node5 = new Node((-117), node3, 8192, 426);
      node1.srcref(node5);
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = new Node(596, 596, 596);
      node0.isOnlyModifiesArgumentsCall();
      node0.isOptionalArg();
      node0.putIntProp(596, 57);
      node0.setType((-2234));
      node0.getInputId();
      node0.putProp(596, (Object) null);
      int int0 = Node.LENGTH;
      node0.isAssign();
      node0.isDelProp();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(1358);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 1358
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UDHk3F");
      Node node0 = Node.newString((-279), "");
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(289, nodeArray0);
      node1.cloneTree();
      Node node2 = node0.srcref(node1);
      node2.isDelProp();
      Node.newString(16, "");
      node1.isName();
      node2.checkTreeEqualsImpl(node1);
      node1.siblings();
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = Node.newNumber(2628.9);
      node0.addSuppression("FE3jP");
      node0.setIsSyntheticBlock(true);
      node0.isDec();
      node0.toString(true, true, false);
      Node node1 = Node.newString(57, "FE3jP", 43, 53);
      node0.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("CY<[E^");
      Node node1 = new Node(0, 1, 4095);
      node1.isFunction();
      node1.setSourceEncodedPosition(4095);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Object#Element", false);
      simpleSourceFile0.getLineOffset(37);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node2 = Node.newNumber(0.0);
      node2.useSourceInfoFrom(node0);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000341] [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000344] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isIf();
      node0.detachChildren();
      Node node1 = Node.newNumber(0.0);
      node1.isDec();
      node1.isRegExp();
      node1.isGetElem();
      Node node2 = new Node(54, node1);
      Node node3 = new Node(2);
      Node node4 = new Node(37, node3, node2, node0, node0);
      node4.toString(false, false, false);
      node4.srcrefTree(node3);
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.mayMutateArguments();
      Node node1 = new Node(38, 1, 39);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.common.base.CharMatcher$3");
      Node node2 = new Node((-1352), 15, 40);
      node0.isFunction();
      node0.setSourceEncodedPosition(20);
      node0.mayMutateGlobalStateOrThrow();
      node1.isNot();
      Node node3 = new Node(102, 39, (-1875));
      Node node4 = node1.copyInformationFromForTree(node3);
      node4.isThrow();
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J");
      Node node1 = new Node(52, node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node1.isQuotedString();
      node0.detachChildren();
      node0.isWhile();
      node0.isNull();
      node0.isEmpty();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = new Node(26);
      Node node1 = Node.newString(46, "com.google.common.base.CharMatcher$15");
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node(26, 4095, 31);
      node2.getProp(727);
      node2.isNot();
      node2.siblings();
      node2.isEquivalentToShallow(node0);
      try { 
        node0.setString("com.google.common.base.CharMatcher$15");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NOT is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = Node.newString(94, "Object#Key", 94, 94);
      node0.getJSDocInfo();
      Node node1 = Node.newString(113, "P-O0Mu");
      Node node2 = new Node(789, node1, node0, node1, node0);
      node1.isOnlyModifiesThisCall();
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      jSTypeArray0[0] = jSType0;
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node3.setWasEmptyNode(false);
      node3.isFalse();
      node3.getLastSibling();
      node2.useSourceInfoIfMissingFromForTree(node1);
      Node node4 = null;
      try {
        node4 = new Node(681, node1, 2, (-1342));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newString(3024, ";fiCZs2 klL");
      Node node1 = new Node(115, node0);
      Node node2 = Node.newString(";fiCZs2 klL");
      node1.hasMoreThanOneChild();
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString((-284), "WFrX!uQQU/`", (-284), 98);
      node0.getJSDocInfo();
      Node node1 = new Node((-284), node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node1.setWasEmptyNode(false);
      node1.isFalse();
      Node node2 = node1.getLastSibling();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node_NodeMismatch0.equals(node0);
      node2.isCast();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node3 = new Node(103);
      node0.isNumber();
      node1.hasMoreThanOneChild();
      node1.isIn();
      node3.getLength();
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(50, node0, node0, node0, node0, 30, 57);
      Node node2 = new Node(56, node1, 0, 16);
      node1.children();
      node0.getLength();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = new Node(31, node2, 4143, (-696));
      node1.setOptionalArg(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node4 = Node.newString(91, "p60ep(dBo\"{D:A*EwV");
      node4.mayMutateArguments();
      node4.isOnlyModifiesArgumentsCall();
      node2.isDelProp();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-2414), (-2414), (-536870912));
      node0.mayMutateArguments();
      node0.isDo();
      Node node1 = new Node(2, node0, node0, node0, 53, 4095);
      Node node2 = new Node(1498);
      node1.isEquivalentToTyped(node2);
      node0.addChildToFront(node1);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node1);
      node_NodeMismatch0.equals(node1);
      node1.isInstanceOf();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node3 = new Node(49, (-1875), 55);
      node1.copyInformationFrom(node3);
      int int0 = (-968);
      Node.newNumber((double) 54);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = new Node(48);
      node0.isLabelName();
      Iterable<Node> iterable0 = new ArrayDeque<Node>(0);
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = Node.newNumber(2628.9);
      node0.setLength(52);
      Node node1 = new Node(52, node0, node0);
      node0.checkTreeEquals(node1);
      node1.isEquivalentTo(node0);
      node0.isEquivalentTo(node1, false, true, true);
      node0.isCall();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.mayMutateArguments();
      Node node1 = new Node(38, 1, 39);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.common.base.CharMatcher$3");
      Node node2 = new Node((-1352), 15, 40);
      Vector<JSType> vector0 = new Vector<JSType>();
      node2.mayMutateGlobalStateOrThrow();
      node0.isTry();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.mayMutateArguments();
      Node node1 = Node.newString(52, ")4y..oT[$", 40, 38);
      Node.newString(101, "unexpected prop id ");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node1);
      node_NodeMismatch0.equals(")4y..oT[$");
      node1.isCast();
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = new Node(398);
      node1.isNumber();
      node2.hasMoreThanOneChild();
      Node node3 = new Node(2125, node2, node2, node2, node0, 47, (-1827));
      node3.isIn();
      node2.getLength();
      node1.isReturn();
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 123, 123);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = Node.newString("Object#Element", 56, 47);
      node1.isEquivalentTo(node0, true, true, false);
      Node.newString("Object#Key");
      node1.addChildrenToFront(node0);
      Node node2 = Node.newString(50, "&qpxu'qP'cT0v+!J", 48, 123);
      node2.isThrow();
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = Node.newString("1Dvdw[=.3?>kew#,", 2048, 2048);
      Node.newNumber((double) 12);
      Node node1 = Node.newString("I<7v@9-:ye`qB6\nh", 4, (-1712));
      node1.isEquivalentTo(node0, true, true, true);
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = new Node(48, 48, (-1900));
      Node node1 = Node.newNumber((double) 42, 38, 2);
      node1.setDouble(15);
      node0.isEquivalentTo(node1);
      node0.isLabelName();
      Node node2 = new Node(4095, 1317, 43);
      node2.copyInformationFromForTree(node1);
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(50, node0, node0, node0, node0, 30, 57);
      Node node2 = new Node(56, node1, 0, 16);
      node0.getLength();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeTypeAwareEqualsImpl(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node_NodeMismatch0.equals(node0);
      node1.isCast();
      node2.isArrayLit();
      Node node3 = node0.cloneTree();
      Node node4 = null;
      try {
        node4 = new Node(656, node3, node0, 656, 52);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, false);
      node0.getJsDocBuilderForNode();
      node0.getStaticSourceFile();
      node0.isFromExterns();
      Node node1 = new Node((-2061), node0, node0, node0);
      Node node2 = node0.cloneTree();
      node1.isSetterDef();
      node2.getIndexOfChild(node1);
      node2.getIntProp((-1445));
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = Node.newString("ZWW15eI");
      node0.isOnlyModifiesArgumentsCall();
      node0.isOptionalArg();
      node0.putIntProp((-2234), 142);
      node0.setType(142);
      Node node1 = new Node(38, node0, node0, node0, 36, 57);
      Node node2 = new Node(0, node1, node1, node1, node1, 1626, 1329);
      Node node3 = node2.cloneNode();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte)122;
      byteArray0[3] = (byte) (-22);
      byteArray0[4] = (byte)104;
      byteArray0[5] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node4 = node1.cloneNode();
      node4.checkTreeEqualsImpl(node2);
      Node node5 = Node.newString(100, "ZWW15eI");
      node2.mayMutateGlobalStateOrThrow();
      node2.isTry();
      node5.isNE();
      Node node6 = new Node(524288, node4);
      node6.getJSDocInfo();
      node6.isDebugger();
      node3.isRegExp();
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString(33, " ,Nu<u:Tdw=^#?");
      nodeArray0[0] = node0;
      Node node1 = new Node(52, 880, (-1901));
      nodeArray0[1] = node1;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newString(38, "directives", 38, (-886));
      node0.isQualifiedName();
      node0.toString(true, true, true);
      node0.isUnscopedQualifiedName();
      node0.isDelProp();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isContinue();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isLocalResultCall();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Object#Key");
      node0.isSetterDef();
      Node node1 = new Node(38);
      node1.getIndexOfChild((Node) null);
      node0.getIndexOfChild(node1);
      Node node2 = new Node((-1014), node0, 516, 8192);
      node0.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.toString(false, true, false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("/RK\"H4");
      node_FileLevelJsDocBuilder0.append("/RK\"H4");
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      jSTypeRegistry0.createTemplateTypeMap((ImmutableList<TemplateType>) null, immutableList0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder1.append("|AyW1");
      Node node1 = new Node(54);
      node1.isFunction();
      node1.isWhile();
      node0.isWith();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-2415), (-2415), (-536870912));
      node0.mayMutateArguments();
      node0.isDo();
      Node node1 = new Node(2, node0, node0, node0, 53, 4095);
      Node node2 = new Node(1508);
      node1.isEquivalentToTyped(node2);
      node0.addChildToFront(node1);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node1);
      node0.hasOneChild();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("v=qm#c^J)%?gOBWp}X", true);
      simpleSourceFile0.getLineOffset(12);
      node0.setStaticSourceFile(simpleSourceFile0);
      node1.useSourceInfoFrom(node1);
      // Undeclared exception!
      try { 
        node2.setString("v=qm#c^J)%?gOBWp}X");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1508
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = Node.newNumber((-658.24476), (-293), (-623));
      node0.getDirectives();
      node0.getLength();
      node0.hasOneChild();
      Node node1 = new Node(1, node0, node0, 42, 4109);
      Node node2 = new Node(122, node1, 53, 47);
      node1.isOr();
      node2.getType();
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = Node.newString("BOOLEAN_OBJECT_FUNCTION_TYPE", (-247), 0);
      node0.setCharno(50);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node0);
      Node node1 = new Node((-5303), 47, 52);
      node1.isCast();
      node1.wasEmptyNode();
      node1.isLocalResultCall();
      node0.isFromExterns();
      Node node2 = Node.newString(105, "The new child node already has a parent.", (-723), 2);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.removeProp((-334));
      node2.setChangeTime(110);
      node0.siblings();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(105, node0);
      Node node2 = new Node(56, node1, 0, 0);
      node0.getLength();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isStringKey();
      node1.isCast();
      node2.isComma();
      node0.isLocalResultCall();
      node1.isFromExterns();
      Node node3 = Node.newString((-40), "", 3018, 51);
      node3.removeProp(47);
      node3.setChangeTime(16);
      node0.siblings();
      node1.getAncestor(34);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = new Node(3577, 4, 103);
      node0.isSetterDef();
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.isDec();
      Node node1 = new Node(38, 1, 39);
      Node node2 = new Node(2941, node0, node0, 48, 29);
      node0.hasOneChild();
      Node node3 = new Node(42);
      node3.cloneTree();
      node2.isSetterDef();
      Node node4 = new Node(94);
      node2.getIndexOfChild(node0);
      node1.getIndexOfChild(node0);
      Node node5 = node3.srcref(node0);
      node5.addChildToBack(node3);
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = new Node(99, 99, 99);
      int int0 = Node.FLAG_NO_THROWS;
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newString(" u:hQjQo.2\"ruW");
      Node node2 = new Node(46, node1, node0, node0);
      node0.isEquivalentTo(node1);
      node2.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setLineno(0);
      node0.setWasEmptyNode(false);
      node0.isFalse();
      Node node1 = node0.getLastSibling();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = new Node((-4096), node2, (-890), 31);
      node3.setOptionalArg(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.newString(154, "%C5.Wm*[G");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      Node node4 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      nodeArray0[1] = node4;
      nodeArray0[2] = node0;
      Node node5 = null;
      try {
        node5 = new Node(177, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = new Node(33);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node1.isLocalResultCall();
      node1.setDirectives(hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("B%t|(_`KLx", false);
      simpleSourceFile0.getLineOffset(51);
      simpleSourceFile0.getLineOffset(40);
      simpleSourceFile0.getLineOffset(1803);
      node0.isTrue();
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I Klb:4?", 348, 348);
      Node node1 = new Node(348, node0, node0, 32, (-968));
      node1.hasOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(41);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags((-1674));
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node1.isBreak();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = Node.newString("", 122, 122);
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isSyntheticBlock();
      Node node1 = Node.newNumber((double) 38);
      Node node2 = node0.cloneNode();
      Node node3 = node0.cloneNode();
      node0.checkTreeEqualsImpl(node3);
      Node node4 = Node.newString(8, "");
      node3.mayMutateGlobalStateOrThrow();
      node2.removeProp(148);
      node2.setChangeTime(38);
      node1.siblings();
      node4.getAncestor(0);
      node2.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isArrayLit();
      Node node1 = node0.getAncestor(0);
      node1.getProp(50);
      Node.newNumber((double) 47);
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = Node.newString(122, "", 122, 122);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.putBooleanProp((-1813), true);
      node0.isQualifiedName();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node0.getString();
      Node node1 = new Node(3, node0, (-2295), 57);
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags6.setMutatesGlobalState();
      node_SideEffectFlags4.areAllFlagsSet();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)22;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(304, 304, 304);
      Node node1 = Node.newNumber((-3404.0));
      node0.getJsDocBuilderForNode();
      node1.checkTreeEquals(node0);
      node0.getLastSibling();
      Node.mergeLineCharNo(50, (-101));
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = Node.newString((-284), "", (-284), 98);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node((-284), node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node1.setWasEmptyNode(false);
      node1.isFalse();
      Node node2 = node1.getLastSibling();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      Node node4 = new Node((-829), node3, 656, (-2414));
      node4.setOptionalArg(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node2.isEquivalentTo(node1);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      // Undeclared exception!
      try { 
        node2.getChildBefore(node4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.mayMutateArguments();
      Node node1 = new Node(38, 1, 39);
      node1.getLength();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isStringKey();
      node0.isCast();
      node0.isComma();
      node0.isLocalResultCall();
      node0.isFromExterns();
      Node node2 = Node.newString(116, "source_file", 51, (-137));
      node2.isTry();
      Node node3 = Node.newNumber(1.0, 51, 63);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node4 = new Node((-1), node3, node0, node3);
      node4.isNE();
      node3.isDebugger();
      node0.isRegExp();
      node1.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = new Node(105);
      node0.isQualifiedName();
      node0.mayMutateGlobalStateOrThrow();
      node0.isTry();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = Node.newString("B{UwMYNftx'niY", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      node1.getAncestor(1);
      Node node2 = new Node(152, node1);
      node2.checkTreeEquals(node1);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = Node.newString("B{UwMYNftx'niY", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      node1.getAncestor(1);
      Node node2 = new Node(152, node1);
      node2.checkTreeEquals(node1);
      node2.isArrayLit();
      node0.cloneTree();
      node2.isSetterDef();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      int int0 = 98;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString((-284), "WFrX!uQQU/`", (-284), 98);
      node0.getJSDocInfo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setJSDocInfo((JSDocInfo) null);
      simpleErrorReporter0.warning("WFrX!uQQU/`", "r", 57, (-284));
      // Undeclared exception!
      try { 
        node0.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -284
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.mayMutateArguments();
      Node node1 = new Node(40, 83, 87855567);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("Use SerializedForm");
      node1.isFunction();
      node0.setSourceEncodedPosition((-51));
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = new Node(39, node0, node0, 57, 47);
      Node node3 = node1.copyInformationFrom(node2);
      node3.isNew();
      node2.isVoid();
      node2.getLineno();
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node2.isThis();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 123, 123);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = Node.newString("Object#Element", 56, 47);
      node1.isEquivalentTo(node0, true, true, true);
      Node node2 = Node.newString("Object#Key");
      node1.addChildrenToFront(node0);
      node2.isDebugger();
      node2.isRegExp();
      node1.getType();
      node1.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.setLineno(0);
      node0.isEquivalentTo(node0, false, true, true);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
      node0.isArrayLit();
      Node node1 = node0.cloneTree();
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = Node.newString(122, "", 122, 122);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.putBooleanProp(2146, true);
      Node node1 = new Node(16);
      node0.wasEmptyNode();
      Node.newString("");
      node1.isExprResult();
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 2146
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.setCharno((-2778));
      node0.putBooleanProp((-690), true);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Object#Key", false);
      simpleSourceFile0.getLineOffset(38);
      simpleSourceFile0.getLineOffset(42);
      simpleSourceFile0.getLineOffset(51);
      simpleSourceFile0.getLineOffset(456);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = Node.newNumber((double) 4);
      node0.useSourceInfoFrom(node1);
      node0.getSourceOffset();
      // Undeclared exception!
      try { 
        node0.setString("Object#Element");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id -690
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(38);
      // Undeclared exception!
      try { 
        node0.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      node0.toString(true, true, true);
      node0.isAssign();
      node0.isDelProp();
      int int0 = Node.SLASH_V;
      Node node1 = new Node(54, node0, node0, node0, node0, 48, 8);
      node1.getLastChild();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 38, 38);
      node0.wasEmptyNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, false);
      node0.getJsDocBuilderForNode();
      node0.getStaticSourceFile();
      node0.isAdd();
      Node node1 = new Node((-2061), node0, node0, node0);
      node1.isEquivalentToTyped(node0);
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = Node.newNumber(1522.8);
      node0.getStaticSourceFile();
      node0.isAdd();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = Node.newNumber((-658.24476));
      node0.mayMutateArguments();
      Node node1 = new Node(10, 36, (-800));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("com.google.common.base.CharMatcher$3");
      Node node2 = new Node(2, (-249), 1);
      node2.isFunction();
      node0.setSourceEncodedPosition(1983);
      node2.mayMutateGlobalStateOrThrow();
      node1.isNot();
      node1.siblings();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node((-134));
      node0.getLength();
      node0.isOnlyModifiesArgumentsCall();
      node0.setIsSyntheticBlock(true);
      node0.isScript();
      Node.extractCharno(4095);
      node0.getChildAtIndex(0);
      // Undeclared exception!
      try { 
        node0.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = new Node(138);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node node1 = Node.newString((-763), "OuX1mEds]}xE", 4, 36);
      Node node2 = new Node(4095, node1, node1, 42, 1);
      // Undeclared exception!
      try { 
        node1.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node.newString("v:*-pRAX]?#.a!*^f%");
      Node node0 = Node.newString(55, "v:*-pRAX]?#.a!*^f%");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = Node.newString("v:*-pRAX]?#.a!*^f%", 2162, 31);
      Node node2 = Node.newString("Object#Element");
      Node node3 = new Node(52, node2, node2, node2, node1);
      node3.addChildrenToFront(node0);
      Node.newString(4, "Object#Element", 56, 3513);
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = new Node(107);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      node0.isArrayLit();
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      JSType jSType1 = jSTypeRegistry0.createNullableType(jSType0);
      jSTypeArray0[4] = jSType1;
      jSTypeArray0[5] = jSType0;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node1.isTypeOf();
      Node node2 = Node.newString("");
      node1.addChildrenToFront(node2);
      Node.newString((-3038), "...[", 40, 2412);
      node0.isThrow();
      node2.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = new Node(2165);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(2165, node0, 12, (-1531));
      node1.detachChildren();
      Node node2 = new Node(2165, node1, node0, node0, 8, 42);
      Node node3 = node2.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        node3.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.isLocalResultCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Set<String> set0 = jSDocInfo0.getModifies();
      node0.setDirectives(set0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("&qpxu'qP'cT0v+!J", true);
      simpleSourceFile0.getLineOffset(8);
      simpleSourceFile0.getLineOffset(890);
      node0.isDelProp();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(48);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = Node.newString(3024, ";fiCZs2 klL");
      Node node1 = new Node(115, node0);
      Node.newString(";fiCZs2 klL");
      node1.isQuotedString();
      node1.putBooleanProp((-1234), false);
      node0.addChildrenToBack(node1);
      node1.wasEmptyNode();
      node0.getNext();
      node1.isSwitch();
      Node.extractLineno((-396));
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node node0 = Node.newString(122, "", 122, 122);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.putBooleanProp((-1813), true);
      node0.isQualifiedName();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node0.getString();
      Node node1 = new Node(3, node0, (-2295), 57);
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags7.setMutatesGlobalState();
      node_SideEffectFlags5.areAllFlagsSet();
      node0.isCatch();
      node0.isDo();
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(105, node0);
      Node node2 = new Node(56, node1, 0, 0);
      node0.getLength();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node2.removeFirstChild();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isStringKey();
      node1.isCast();
      node1.getLength();
      node2.isComma();
      node0.isLocalResultCall();
      node1.isFromExterns();
      node1.getLength();
      node1.isEquivalentToShallow(node0);
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = new Node(57);
      Node node1 = new Node(51, node0);
      Node node2 = node1.removeFirstChild();
      Node node3 = new Node(35);
      node2.isIf();
      node3.isDelProp();
      node1.getAncestor(55);
      node1.isObjectLit();
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = Node.newString(621, "0'COPtUAnK6@i", 1, 621);
      Node node1 = new Node(117, node0);
      node0.getAncestor(154);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isQuotedString();
      HashSet<Node> hashSet0 = new HashSet<Node>();
      node0.toString(false, false, true);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("PARAM_LIST");
      node0.isSyntheticBlock();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node2 = new Node(2188, node0, node1, 38, 54);
      node2.isQuotedString();
      node1.isNew();
      node1.isVoid();
      int int0 = Node.SLASH_V;
      node2.removeFirstChild();
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(4, "$Y");
      node0.setLength(2919);
      node0.mayMutateArguments();
      Node.extractLineno(114);
      node0.putIntProp(1849, 0);
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.getSourceFileName();
      node0.isSwitch();
      node0.isEquivalentTo(node0);
      node0.siblings();
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.wasEmptyNode();
      Node node1 = Node.newNumber((double) 0, (-1229), 555);
      node0.isEquivalentTo(node1);
      node0.isLabelName();
      node0.siblings();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = new Node(48);
      Node node1 = Node.newString("B%t|(_`KLx");
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = node0.srcrefTree(node1);
      HashSet<String> hashSet0 = new HashSet<String>();
      hashSet0.add("B%t|(_`KLx");
      node1.isLocalResultCall();
      node1.setDirectives(hashSet0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("B%t|(_`KLx", true);
      simpleSourceFile0.getLineOffset(51);
      node2.isSetterDef();
      Node node3 = new Node(63);
      node0.getIndexOfChild(node1);
      node0.getIndexOfChild(node2);
      node3.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node node0 = Node.newString("ZWW15eI");
      node0.isOnlyModifiesThisCall();
      node0.isQuotedString();
      node0.detachChildren();
      node0.isQuotedString();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.detachChildren();
      node0.isIn();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 12, 39);
      Node node1 = new Node(329, node0, 15, 54);
      node1.getDirectives();
      node1.isLabelName();
      node1.siblings();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = Node.newString((-1972), "Object#Element");
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node((-1972), node0, node0, node0, node0, 16, (-1013));
      node1.isReturn();
      node0.hasChild(node1);
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ZWW15eI");
      Node node0 = new Node(113);
      node0.hasChild(node0);
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isObjectLit();
      node0.toString(false, false, false);
      node0.getJsDocBuilderForNode();
      node0.isRegExp();
      node0.isGetElem();
      Node node1 = new Node(64, node0);
      node1.toString(true, false, false);
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(105, node0);
      node0.getLength();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isStringKey();
      node1.isCast();
      node1.isComma();
      node0.isLocalResultCall();
      node1.isFromExterns();
      Node node2 = Node.newString((-40), "", 3018, 51);
      node2.removeProp(47);
      node2.setChangeTime(16);
      node0.siblings();
      node1.getAncestor(51);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.isLocalResultCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Set<String> set0 = jSDocInfo0.getModifies();
      node0.setDirectives(set0);
      Node node1 = Node.newString("Yd", 57, 36);
      node1.isEquivalentTo(node0, true, false, true);
      Node node2 = Node.newString("Yd");
      node2.addChildrenToFront(node0);
      node2.checkTreeEqualsImpl(node1);
      node2.isInc();
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "E8TM6|:B]I}");
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(39, node0, node0, 31, 55);
      Node node2 = node1.copyInformationFrom(node0);
      node0.isNew();
      node2.isVoid();
      node2.getLineno();
      node2.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.clonePropsFrom(node2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      node2.isThis();
      Node node3 = null;
      try {
        node3 = new Node(30, (Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 12, 39);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(105);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags5.setMutatesThis();
      node0.getString();
      Node node1 = new Node(4095, node0, 46, 149);
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags8.areAllFlagsSet();
      node0.isCatch();
      node0.isDo();
      node1.getParent();
      node1.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 12, 39);
      Node node1 = new Node(8, node0, node0, node0, node0, (-284), 40);
      node0.isReturn();
      node1.hasChild(node0);
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = Node.newString(3024, ";fiCZs2 klL");
      Node node1 = new Node(115, node0);
      Node node2 = Node.newString(";fiCZs2 klL");
      node1.isQuotedString();
      node1.putBooleanProp((-1234), false);
      node0.addChildrenToBack(node1);
      node1.isReturn();
      node0.hasChild(node2);
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = Node.newNumber((double) 122);
      node0.wasEmptyNode();
      Node node1 = Node.newNumber((double) 30, 2, 461845907);
      node1.isEquivalentTo(node0);
      node1.isLabelName();
      node0.siblings();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = new Node(39);
      Node node1 = node0.getLastSibling();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      Node node3 = new Node(57, node0, 38, (-2472));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1685));
      Node node4 = null;
      try {
        node4 = new Node(1260, node2, node3, node2, node0, 1806, (-1607));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = Node.newString("The existing child node of the parent should not be null.");
      Node node1 = new Node(39, node0, node0, node0, node0, 48, 47);
      node1.setSourceFileForTesting("The existing child node of the parent should not be null.");
      node0.useSourceInfoFromForTree(node1);
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node node0 = new Node(39);
      node0.isEquivalentTo(node0, true, true, true);
      node0.isRegExp();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = Node.newNumber((double) 124);
      node0.wasEmptyNode();
      node0.isLocalResultCall();
      node0.isCatch();
      node0.getQualifiedName();
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      Node node0 = Node.newNumber((-658.24476), (-293), (-293));
      node0.getDirectives();
      node0.hasOneChild();
      Node node1 = new Node(1, node0, node0, 42, 56);
      node1.setSourceEncodedPosition(2474);
      node1.isArrayLit();
      node1.isTypeOf();
      node1.getChildBefore(node0);
      node0.isTry();
      node0.isNE();
      node1.isDebugger();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 38, 38);
      node0.isIf();
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isSyntheticBlock();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      node0.isUnscopedQualifiedName();
      Node.newString("setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 4095, 26);
      Node.newNumber((-960.4684374640497));
      node0.setQuotedString();
      node0.isSetterDef();
      Node node1 = Node.newNumber((double) 1, 1, 15);
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      int int0 = 105;
      Node node0 = new Node(105);
      Node node1 = new Node(105, node0);
      node0.getLength();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isStringKey();
      node1.isCast();
      node1.isComma();
      node0.isLocalResultCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.srcref(node1);
      node0.isScript();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(27);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got FUNCTION
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = Node.newString(48, "'[$", 32, 42);
      Node node2 = new Node(49, node0, 43, 37);
      node1.getDirectives();
      Node node3 = new Node((-1823));
      node0.isNumber();
      Node node4 = new Node(1, node2, (-1180), (-901));
      Node node5 = new Node(2, node4);
      node0.toString(true, true, false);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I Klb:4?", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      node1.hasOneChild();
      Node node2 = new Node(57, node1, node1, 37, 54);
      Node node3 = null;
      // Undeclared exception!
      try { 
        node2.addChildBefore((Node) null, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(0, node0);
      Node node2 = Node.newString("Yd");
      Node node3 = node1.useSourceInfoFromForTree(node2);
      node3.isQuotedString();
      node0.putBooleanProp(2612, false);
      // Undeclared exception!
      try { 
        node3.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-658.24476), (-293), (-633));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      Node node1 = new Node(1, 120, (-2057));
      Node node2 = new Node(29, node1, node1, 63, 0);
      node2.isFunction();
      node0.setSourceEncodedPosition(114);
      Node node3 = new Node(52);
      node3.getIndexOfChild(node1);
      Node node4 = Node.newNumber((double) 1);
      node4.getIndexOfChild(node1);
      node2.srcref(node0);
      node3.isAssign();
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 77, 77);
      Node node1 = new Node(77, node0, node0, 32, 8);
      Node node2 = Node.newString("Jc]8-9@I )lb:4?");
      Node node3 = new Node(77, node1);
      node3.isArrayLit();
      node0.isEquivalentTo(node2);
      node1.isEquivalentTo(node3, true, true, false);
      node2.isCall();
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      Node node1 = new Node(105, node0);
      Node node2 = Node.newString("suoted", 79, 4095);
      node2.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isCatch();
      node1.isDo();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I Klb:4?", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      node1.hasOneChild();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.setCharno(57);
      Node node3 = new Node(8, node1, 46, 46);
      node2.setOptionalArg(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node3.setChangeTime(55);
      Node.newString(50, "Jc]8-9@I Klb:4?");
      node3.isOnlyModifiesArgumentsCall();
      node0.isDelProp();
      node3.isTry();
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.mayMutateGlobalStateOrThrow();
      node0.getSourceOffset();
      node0.getStaticSourceFile();
      node0.isAdd();
      Node node1 = new Node(385, node0, node0, node0);
      node0.isEquivalentToTyped(node1);
      node0.isAnd();
      node1.isGetterDef();
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node node0 = new Node(107);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      node0.isArrayLit();
      JSType[] jSTypeArray0 = new JSType[6];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      JSType jSType1 = jSTypeRegistry0.createNullableType(jSType0);
      jSTypeArray0[4] = jSType1;
      jSTypeArray0[5] = jSType0;
      Node node1 = new Node(55, node0);
      node0.isFunction();
      Node node2 = Node.newNumber((-2006.034086621898));
      node2.isOnlyModifiesArgumentsCall();
      node1.removeChildren();
      node2.removeChildren();
      Node node3 = Node.newString(40, "not a StringNode");
      node1.isOnlyModifiesArgumentsCall();
      node3.isDelProp();
      node0.isBlock();
      Node.extractCharno(4243);
      // Undeclared exception!
      try { 
        node3.replaceChildAfter(node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      Node node0 = new Node((-2738), (-2004), 2042);
      Node node1 = new Node(46, node0);
      node1.removeChildren();
      node0.isAnd();
      node0.isTry();
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(105, node0);
      node0.getLength();
      node0.getSourceFileName();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isStringKey();
      node1.isCast();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      node0.isEquivalentTo(node1);
      node1.isEquivalentTo(node0, true, true, true);
      Node node2 = null;
      try {
        node2 = new Node(31, node1, node1, node0, node1, 57, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 77, 77);
      Node node1 = new Node(77, node0, node0, 32, (-963));
      Node node2 = Node.newString("Jc]8-9@I )lb:4?");
      Node node3 = new Node(77, node1);
      node3.isArrayLit();
      node0.isComma();
      node1.isLocalResultCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node3.srcref(node2);
      node3.isScript();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(113);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isArrayLit();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 107
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isWith();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(32, node0, node0, node0, node0, 31, 125);
      node1.isReturn();
      node1.isEquivalentToShallow(node0);
      node1.hasChild(node0);
      Node node2 = node1.srcrefTree(node0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(2635);
      // Undeclared exception!
      try { 
        node2.appendStringTree(charArrayWriter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 107
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      int int0 = 152;
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      node1.useSourceInfoFrom(node0);
      Node node2 = null;
      try {
        node2 = new Node(53, node0, 53, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = new Node(564);
      Node node1 = new Node(564, node0, node0, node0, node0, 46, 96);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isStringKey();
      node0.isCast();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("68$z@%K}QO^2.0IM]z", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = new Node(107, 107, 107);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      node0.getJSDocInfo();
      Node node1 = Node.newString(0, "input_id");
      Node node2 = new Node((-2054), node0, node1, node1, node1);
      node0.isOnlyModifiesThisCall();
      node0.setWasEmptyNode(false);
      node1.isFalse();
      Node node3 = node2.getLastSibling();
      node0.useSourceInfoIfMissingFromForTree(node3);
      Node node4 = new Node(34, node2, 52, 37);
      node4.setOptionalArg(true);
      Node node5 = Node.newString("Object#Key", 29, 1452);
      node3.addChildToFront(node5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node6 = Node.newString(36, "d");
      node6.isOnlyModifiesArgumentsCall();
      node0.isDelProp();
      node3.isTry();
      node2.isRegExp();
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.mayMutateGlobalStateOrThrow();
      node0.getStaticSourceFile();
      node0.isAdd();
      Node node1 = new Node(30);
      node1.isIf();
      node0.isOnlyModifiesArgumentsCall();
      node1.isDelProp();
      node1.isGetterDef();
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = node1.srcrefTree(node0);
      // Undeclared exception!
      try { 
        node1.addChildBefore(node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node node0 = Node.newNumber(2628.9);
      Node[] nodeArray0 = new Node[0];
      node0.setLength(1073741824);
      Node node1 = new Node(52, node0, node0);
      node0.checkTreeEquals(node1);
      Node node2 = null;
      try {
        node2 = new Node(32, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      Node node0 = Node.newString(38, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 38, 38);
      node0.putBooleanProp(4095, true);
      node0.isQualifiedName();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node node1 = new Node(49);
      node1.cloneNode();
      node0.cloneNode();
      Node node2 = Node.newString(29, "The new child node has siblings.");
      Node node3 = new Node(1, node1);
      node3.mayMutateGlobalStateOrThrow();
      node0.removeProp(4);
      node0.siblings();
      node0.getAncestor(8);
      node2.getLineno();
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node node0 = new Node(89, 89, 89);
      Node node1 = new Node(89, node0);
      Node node2 = Node.newString("com.google.common.collect.Lists$TransformingSequentialList", 47, 2);
      Vector<JSType> vector0 = new Vector<JSType>();
      node0.isSyntheticBlock();
      node1.isInstanceOf();
      node0.getQualifiedName();
      node2.removeFirstChild();
      // Undeclared exception!
      try { 
        node2.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Node node0 = Node.newString((-1712), "Yd");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getLength();
      node0.type = (-369);
      node0.getType();
      node0.isInstanceOf();
      // Undeclared exception!
      try { 
        Node.newString((-2872), (String) null, 40, 4095);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      Node node0 = Node.newString(53, "/RK\"H4", 114, (-2688));
      Node node1 = Node.newString(1, "/RK\"H4", 57, 53);
      Node node2 = new Node(31, node1, 42, (-1010));
      node2.getAncestors();
      node0.isEquivalentToTyped(node0);
      node2.useSourceInfoFrom(node1);
      node0.setLength(22);
      node1.setChangeTime(22);
      node2.siblings();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = Node.newString(3024, ";fiCZs2 klL");
      Node node1 = new Node(115, node0);
      Node node2 = Node.newString(";fiCZs2 klL");
      node1.isQuotedString();
      node1.putBooleanProp((-1234), false);
      node0.addChildrenToBack(node1);
      node1.wasEmptyNode();
      node2.isVar();
      node1.isDebugger();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node node0 = new Node(48);
      node0.setSourceEncodedPositionForTree(48);
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = node0.srcrefTree(node0);
      node1.detachChildren();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = Node.newNumber((double) 57);
      node2.isNull();
      node1.isRegExp();
      Node.mergeLineCharNo(40, 4);
      node2.isLabel();
      node2.isAssign();
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      Node node0 = Node.newString("v:*-pRAX]?#.a!*^f%");
      Node node1 = new Node(105, node0);
      node0.getAncestor(43);
      node0.isObjectLit();
      node1.isLabel();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      // Undeclared exception!
      try { 
        node2.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node node0 = new Node(2791);
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = node0.srcrefTree(node0);
      node1.isVoid();
      node1.detachChildren();
      Node node2 = Node.newNumber((double) 57);
      node2.isNull();
      node1.isRegExp();
      Node.mergeLineCharNo(40, 4);
      node2.setJSDocInfo((JSDocInfo) null);
      node2.isLabel();
      node2.isAssign();
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      Node node0 = new Node(57);
      node0.isArrayLit();
      node0.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isArrayLit();
      Node node1 = node0.cloneTree();
      node0.clonePropsFrom(node1);
      node0.isSetterDef();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(26);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node0.isQuotedString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      Node node1 = new Node(103);
      node0.isIf();
      node0.isDelProp();
      node0.isGetterDef();
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.getProp(1928);
      try { 
        node0.setString("Object#Element");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      int int0 = 3400;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node1 = new Node(53, node0, node0, 55, 128);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      int int1 = 246;
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage0("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property 
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(105, node0);
      Node node2 = new Node(39, node1, 0, 0);
      node0.getLength();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      Node node3 = node2.removeFirstChild();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.isStringKey();
      node1.isCast();
      node1.getLength();
      node2.isComma();
      node0.isLocalResultCall();
      node1.isFromExterns();
      node1.getLength();
      node1.isEquivalentToShallow(node0);
      node1.useSourceInfoIfMissingFrom(node3);
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      Node node0 = new Node(859, 42, (-369));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.mayMutateGlobalStateOrThrow();
      node0.setLength(122);
      node0.getStaticSourceFile();
      node0.isAdd();
      Node node1 = new Node(30);
      node1.srcref(node0);
      Node node2 = new Node((-2887), node1);
      node0.setIsSyntheticBlock(false);
      node2.isVar();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("P-u");
      node0.toString();
      node0.putBooleanProp((-1993), true);
      node0.isVar();
      node0.isOptionalArg();
      node0.removeProp((-1993));
      Node node1 = Node.newString("P-u");
      node1.isOptionalArg();
      node0.isDo();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      Node node0 = Node.newString(94, "yPF", 481, (-633));
      Node node1 = new Node(75, node0, node0, (-1055), 1212);
      node0.addChildrenAfter(node1, (Node) null);
      node1.isNew();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = null;
      try {
        node2 = new Node(94, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((double) 89);
      Node node1 = new Node(1, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.isTry();
      node1.isRegExp();
      node0.isInstanceOf();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      Node node0 = new Node(138);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      node0.isQuotedString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      Node node1 = new Node(60);
      node0.isLabel();
      // Undeclared exception!
      try { 
        node1.toString(true, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 60
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      Node node0 = Node.newString("", 122, 122);
      node0.getJSDocInfo();
      Node node1 = new Node(42, node0, node0, node0, node0);
      node0.isOnlyModifiesThisCall();
      node0.setWasEmptyNode(true);
      node1.isFalse();
      Node node2 = node1.getLastSibling();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = new Node(42, node3, 2, 65535);
      node2.mayMutateGlobalStateOrThrow();
      Node node5 = null;
      try {
        node5 = new Node(37, node2, node0, node1, node2, 1, 43);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      Node node0 = new Node(130);
      node0.isDefaultCase();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(54, node0, node0, node0);
      node1.isDelProp();
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.getJsDocBuilderForNode();
      node0.getStaticSourceFile();
      node0.isFromExterns();
      Node node1 = new Node(15, node0, node0, node0);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(32);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      Node node0 = new Node(42, 42, 42);
      Node node1 = new Node(42, node0, node0, node0, node0);
      node1.setOptionalArg(false);
      node1.isArrayLit();
      Node node2 = Node.newNumber(42.0);
      node2.isEquivalentTo(node0);
      // Undeclared exception!
      try { 
        node1.removeChild(node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      Node node0 = Node.newNumber(2628.9);
      node0.setLength(52);
      node0.getLength();
      node0.isTry();
      node0.setDouble(638.5339);
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(982, 982, 982);
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      node1.getSideEffectFlags();
      // Undeclared exception!
      try { 
        node1.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 982
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test680()  throws Throwable  {
      Node node0 = Node.newString(122, "", 122, 122);
      node0.putBooleanProp(122, true);
      node0.isQualifiedName();
      node0.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node0.getString();
      Node node1 = Node.newString("");
      Node node2 = new Node(38, node1, 122, 37);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags3.setMutatesGlobalState();
      node1.isCatch();
      node1.isDo();
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test681()  throws Throwable  {
      Node node0 = new Node(110);
      Node node1 = new Node(115, node0, node0, node0, node0);
      node0.srcrefTree(node1);
      Node node2 = new Node(154, node1, 622744, 33);
      Node node3 = null;
      try {
        node3 = new Node(2, node1, node0, node1, node2, 52, (-1230));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test682()  throws Throwable  {
      Node node0 = Node.newString("v:*-pRAX]?#.a!*^f%");
      node0.wasEmptyNode();
      Node node1 = new Node(105, node0);
      node0.isObjectLit();
      node1.isLabel();
      node0.isOnlyModifiesArgumentsCall();
      node0.isDelProp();
      node0.isGetterDef();
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test683()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.isLocalResultCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Set<String> set0 = jSDocInfo0.getModifies();
      node0.setDirectives(set0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("&qpxu'qP'cT0v+!J", false);
      Node node1 = Node.newString("GOk'>^Q{.9");
      node0.isEquivalentToTyped(node1);
      SimpleSourceFile simpleSourceFile1 = new SimpleSourceFile("GOk'>^Q{.9", false);
      node0.setStaticSourceFile(simpleSourceFile1);
      Node node2 = Node.newNumber((double) 36);
      node0.getSourceOffset();
      node2.isThis();
      node2.isAssign();
  }

  @Test(timeout = 4000)
  public void test684()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.isLocalResultCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setDeprecationReason("&qpxu'qP'cT0v+!J");
      jSDocInfo0.getModifies();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("0._i", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = Node.newNumber((double) 4095);
      node0.getSourceOffset();
      node0.isThis();
      node1.isAssign();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test685()  throws Throwable  {
      Node node0 = Node.newString(2042, "/RK\"H4", (-2872), (-2688));
      Node node1 = new Node(32, node0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("The new child node already has a parent.", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = Node.newNumber(0.5);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.isCatch();
      node1.isDo();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test686()  throws Throwable  {
      Node node0 = Node.newNumber(2628.9);
      node0.setLength(52);
      Node node1 = new Node(52, node0, node0);
      node0.checkTreeEquals(node1);
      node1.useSourceInfoFrom(node0);
      try { 
        node0.setString("yX7");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 2628.9 [length: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test687()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 77, 77);
      Node node1 = new Node(77, node0, node0, 32, (-963));
      Node node2 = Node.newString("Jc]8-9@I )lb:4?");
      Node node3 = new Node(77, node1);
      Node node4 = node1.cloneNode();
      Node node5 = node2.cloneNode();
      node3.checkTreeEqualsImpl(node5);
      Node node6 = Node.newString(56, "Jc]8-9@I )lb:4?");
      node3.mayMutateGlobalStateOrThrow();
      node4.isNE();
      node6.isDebugger();
      node5.isRegExp();
  }

  @Test(timeout = 4000)
  public void test688()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = Node.newString("second new child has existing sibling");
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = new Node(49, node1);
      node1.getInputId();
      node2.srcref(node3);
      node0.getJSDocInfo();
      node0.isVar();
      node0.isExprResult();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test689()  throws Throwable  {
      Node node0 = new Node(138);
      Node node1 = new Node((-995));
      Node node2 = new Node(743, node0, node1, node0);
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test690()  throws Throwable  {
      Node node0 = Node.newString("Object#Element", 36, 36);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = new Node(39);
      Node node2 = new Node(11, node1, node0, node0);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test691()  throws Throwable  {
      Node node0 = new Node(115);
      Node node1 = new Node(40, node0, node0, node0, node0);
      node0.isEquivalentTo(node1, false, false, true);
      Node node2 = node1.srcrefTree(node0);
      node0.isLocalResultCall();
      node1.detachChildren();
      Node node3 = Node.newNumber((-960.4684374640497));
      node2.isNull();
      node0.isRegExp();
      Node.mergeLineCharNo(32, 1);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node1;
      nodeArray0[1] = node3;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      nodeArray0[4] = node1;
      nodeArray0[5] = node1;
      nodeArray0[6] = node2;
      Node node4 = new Node(2);
      nodeArray0[7] = node4;
      Node node5 = null;
      try {
        node5 = new Node(42, nodeArray0, 43, (-615));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test692()  throws Throwable  {
      Node node0 = Node.newNumber(2628.9);
      Node node1 = new Node(52, node0, node0);
      node0.checkTreeEquals(node1);
      node0.setIsSyntheticBlock(true);
      node0.isVar();
      node0.toString(true, true, false);
  }

  @Test(timeout = 4000)
  public void test693()  throws Throwable  {
      Node node0 = new Node(122);
      node0.getLength();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isDec();
      node0.setSourceEncodedPosition(46);
      node0.isCast();
      node0.removeProp(38);
      node0.cloneTree();
      node0.isComma();
      Node node1 = new Node(8, node0, node0, node0, node0, (-1), 63);
      node1.isOnlyModifiesArgumentsCall();
      node0.isThis();
      node0.isFalse();
      Node.newNumber((double) 39, 46, 4);
  }

  @Test(timeout = 4000)
  public void test694()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(39);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "L]vw/p}C");
      node1.isIf();
      Node node2 = node0.cloneNode();
      Node node3 = node1.cloneNode();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node4 = Node.newString(40, "L]vw/p}C");
      node4.addChildrenToBack(node3);
      Node node5 = new Node(27);
      node5.mayMutateGlobalStateOrThrow();
      node5.isNE();
      node5.isDebugger();
      node5.isRegExp();
  }

  @Test(timeout = 4000)
  public void test695()  throws Throwable  {
      Node node0 = new Node(257);
      Node node1 = Node.newString("*j_kB#Tv");
      Node node2 = new Node(12, node0, node1);
      node2.useSourceInfoFrom(node1);
      node0.getJSDocInfo();
      node0.isVar();
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test696()  throws Throwable  {
      Node node0 = Node.newString((-284), "", (-284), 98);
      node0.getJSDocInfo();
      Node node1 = new Node((-284), node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node1.setWasEmptyNode(false);
      node1.isFalse();
      Node node2 = node1.getLastSibling();
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      Node node4 = new Node((-872), node3, 656, (-2412));
      node4.setOptionalArg(false);
      Node node5 = Node.newNumber((-608.2264974892522));
      node1.setJSDocInfo((JSDocInfo) null);
      node5.setIsSyntheticBlock(false);
      Node node6 = new Node(964);
      Node node7 = new Node(383, 1, (-872));
      node7.addChildToFront(node6);
      node2.isOr();
      Node.newString(46, "GETTER_DEF");
      node0.isName();
      node7.isGetElem();
  }

  @Test(timeout = 4000)
  public void test697()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isQuotedString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      Node node1 = new Node(60);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Number node not created with Node.newNumber");
      node0.isIf();
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node1.addChildrenToBack(node0);
      Node node2 = Node.newString((-2905), "GOk'>^Q{.9");
      node0.mayMutateGlobalStateOrThrow();
      node0.isNE();
      node0.isDebugger();
      node1.isRegExp();
      node2.removeProp(125);
      node0.cloneNode();
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test698()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isQuotedString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      Node node1 = new Node(39);
      node1.isIf();
      node1.isVar();
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test699()  throws Throwable  {
      Node node0 = Node.newNumber(3251.94411464);
      node0.getSourceFileName();
      node0.isSwitch();
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test700()  throws Throwable  {
      Node node0 = new Node(42, 42, 589);
      node0.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isFalse();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test701()  throws Throwable  {
      Node node0 = Node.newString(2042, "/RK\"H4", (-2872), 2042);
      Node node1 = new Node(32, node0, node0, node0);
      node0.getAncestors();
      node0.isEquivalentToTyped(node1);
      node0.setLength(2);
      node1.cloneNode();
      node1.setIsSyntheticBlock(false);
      node1.setChangeTime(49);
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test702()  throws Throwable  {
      Node node0 = new Node((-1277));
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(125);
      Node node1 = Node.newNumber((double) 29, 0, 54);
      node0.getStaticSourceFile();
      node0.isAdd();
      Node node2 = new Node(46);
      node0.isIf();
      node0.isDelProp();
      node1.getAncestor(51);
  }

  @Test(timeout = 4000)
  public void test703()  throws Throwable  {
      Node node0 = new Node(122);
      node0.isArrayLit();
      Node node1 = Node.newString(154, "!N-DC?i}.t", 234, 119);
      Node node2 = new Node(313, node0, node1, node1, node1, 1, 4095);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node3.hasMoreThanOneChild();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test704()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      jSTypeArray0[0] = jSType0;
      JSType.toMaybeTemplatizedType(jSTypeArray0[0]);
      JSType jSType1 = jSTypeRegistry0.getType((StaticScope<JSType>) null, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", "Named type with empty name component", 3418, 3791);
      jSTypeArray0[1] = jSType1;
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test705()  throws Throwable  {
      Node node0 = Node.newString(2042, "/RK\"H4", (-2872), 2042);
      Node node1 = new Node(32, node0, node0, node0);
      node0.getAncestors();
      node0.isEquivalentToTyped(node1);
      node1.setChangeTime(49);
      node1.isGetProp();
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test706()  throws Throwable  {
      Node node0 = new Node(536870912);
      node0.isEmpty();
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test707()  throws Throwable  {
      Node node0 = Node.newString((-284), "WFrX!uQQU/`", (-284), 98);
      node0.getJSDocInfo();
      Node node1 = new Node((-284), node0, node0, node0, node0);
      node1.isOnlyModifiesThisCall();
      node1.setWasEmptyNode(false);
      node1.isFalse();
      Node node2 = node1.getLastSibling();
      node2.checkTreeEqualsImpl(node1);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      Node node4 = new Node((-829), node3, 47, 125);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.mayMutateGlobalStateOrThrow();
      node3.siblings();
      node2.isCatch();
      Node.newString("WFrX!uQQU/`");
  }

  @Test(timeout = 4000)
  public void test708()  throws Throwable  {
      int int0 = 33;
      Node node0 = new Node(33);
      Node node1 = new Node(40, node0);
      // Undeclared exception!
      try { 
        node0.getQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test709()  throws Throwable  {
      Node node0 = new Node(33);
      Node node1 = new Node(31, node0, node0, node0);
      // Undeclared exception!
      try { 
        node0.getQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test710()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      Node.newString("Jc]8-9@I )lb:4?");
      node1.isSetterDef();
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        node0.appendStringTree(pipedWriter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test711()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)85;
      byteArray0[2] = (byte) (-127);
      byteArray0[3] = (byte)91;
      byteArray0[4] = (byte)39;
      byteArray0[5] = (byte) (-112);
      byteArray0[6] = (byte)101;
      byteArray0[7] = (byte)7;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, 50);
      Node node2 = new Node(152, node1);
      node2.isArrayLit();
      node0.isEquivalentTo(node1);
      node0.isOnlyModifiesArgumentsCall();
      node1.isDelProp();
      node1.isGetterDef();
      node1.isReturn();
      node0.isFalse();
      node0.getQualifiedName();
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test712()  throws Throwable  {
      Node node0 = new Node(75);
      Node node1 = new Node(57, node0, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("1Dvdw[=.3?>kew#,", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test713()  throws Throwable  {
      int int0 = 122;
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.getLength();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test714()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(39);
      node1.getQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(4, nodeArray0, 50, 4095);
      node2.cloneTree();
      node2.isGetProp();
      node2.getAncestors();
  }

  @Test(timeout = 4000)
  public void test715()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RANGE_ERROR_FUNCTION_TYPE");
      Node node0 = new Node(21, 21, 21);
      Node node1 = node0.cloneTree();
      node1.isSyntheticBlock();
      node0.isSyntheticBlock();
      node0.isVarArgs();
      node0.isNoSideEffectsCall();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getIntProp((-1896));
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // ADD 21 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test716()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      Node node2 = Node.newString("Jc]8-9@I )lb:4?");
      Node node3 = new Node(152, node1);
      node1.addChildrenAfter(node2, (Node) null);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node2;
      nodeArray0[1] = node1;
      nodeArray0[2] = node3;
      nodeArray0[3] = node1;
      Node node4 = Node.newString("Use SerializedForm");
      nodeArray0[4] = node4;
      nodeArray0[5] = node3;
      nodeArray0[6] = node0;
      Node node5 = null;
      try {
        node5 = new Node(56, nodeArray0, 39, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test717()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(39);
      node1.getQualifiedName();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(4, nodeArray0, 50, 4095);
      node0.cloneTree();
      Node node3 = new Node(46, node1);
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test718()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(39);
      node1.getQualifiedName();
      node1.isAssignAdd();
      node1.mayMutateGlobalStateOrThrow();
      node0.clonePropsFrom(node1);
      Node node2 = Node.newString(")7JgU8pN9&w", 39, 40);
      node2.isTry();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = null;
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "H`<Y~l");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test719()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 122, 122);
      node0.isLocalResultCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Set<String> set0 = jSDocInfo0.getModifies();
      node0.setDirectives(set0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&qpxu'qP'cT0v+!J");
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("*`@%Dy[RL", true);
      simpleSourceFile0.getLineOffset(1);
      simpleSourceFile0.getLineOffset(122);
      Node node1 = new Node(123, node0, node0, 0, 100);
      node1.isNull();
      node1.isNew();
      node1.isVoid();
      node0.isStringKey();
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo1);
  }

  @Test(timeout = 4000)
  public void test720()  throws Throwable  {
      Node node0 = Node.newString(2042, "/RK\"H4", (-2872), 2042);
      Node node1 = new Node(32, node0, node0, node0);
      node0.getAncestors();
      node0.isEquivalentToTyped(node1);
      node1.setChangeTime(49);
      node1.isGetProp();
      node1.srcref(node0);
      node1.isEmpty();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test721()  throws Throwable  {
      Node node0 = new Node(42, 42, 573);
      Node node1 = Node.newNumber((double) 2, 4465, 15);
      // Undeclared exception!
      try { 
        node0.addChildAfter((Node) null, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test722()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(2006, nodeArray0);
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test723()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(38, node0, node0, 2, 32);
      Node node2 = Node.newString("The new child node already has a parent.");
      Node node3 = new Node((-3851), node1);
      node2.isArrayLit();
      node2.isEquivalentTo(node0);
      node0.isOnlyModifiesArgumentsCall();
      node0.isDelProp();
      node3.isGetterDef();
      node1.useSourceInfoFrom(node3);
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(39);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test724()  throws Throwable  {
      Node node0 = Node.newString(3024, ";fiCZs2 klL");
      Node node1 = Node.newString("this");
      Node node2 = new Node(117, node0, 57, 2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(15);
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      node1.isCatch();
      node1.isDo();
      Node node3 = node0.getParent();
      node3.getLineno();
  }

  @Test(timeout = 4000)
  public void test725()  throws Throwable  {
      Node node0 = new Node(57);
      Node node1 = new Node(51, node0);
      node1.useSourceInfoFrom(node0);
      node1.isVar();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test726()  throws Throwable  {
      Node node0 = new Node(42);
      node0.setVarArgs(true);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("v^}lM*6+", false);
      simpleSourceFile0.getLineOffset(8);
      Node node1 = new Node(49, node0, node0, node0, (-187), 122);
      node0.useSourceInfoFromForTree(node1);
      node0.setChangeTime(108);
      node0.isGetterDef();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THIS [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000002] [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test727()  throws Throwable  {
      Node node0 = Node.newString("BOOLEAN_OBJECT_FUNCTION_TYPE");
      Node node1 = new Node(12, node0);
      node0.isObjectLit();
      node1.isLabel();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("BOOLEAN_OBJECT_FUNCTION_TYPE", true);
      Node node2 = new Node(4);
      node2.cloneNode();
      node1.isNot();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test728()  throws Throwable  {
      Node node0 = new Node(132);
      node0.getLength();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isNE();
      node0.isCast();
      node0.removeProp(38);
      Node node1 = node0.cloneTree();
      node0.isComma();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags((-1013));
      node_SideEffectFlags1.setReturnsTainted();
      node0.isBlock();
      Node node2 = new Node(8, node0);
      node2.isNull();
      Node node3 = new Node((-1921));
      node3.getAncestors();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test729()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = new Node(108);
      node0.getLength();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isUnscopedQualifiedName();
      node0.isCast();
      node0.removeProp(38);
      Node node1 = node0.cloneTree();
      node1.isComma();
      Node node2 = new Node(8, node0, node0, node0, node0, (-1), 4095);
      node2.wasEmptyNode();
      Node node3 = null;
      try {
        node3 = new Node(1347, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test730()  throws Throwable  {
      Node node0 = new Node(107);
      node0.isArrayLit();
      node0.isIn();
      Node node1 = node0.getAncestor(0);
      node1.isAssignAdd();
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test731()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.type = 113;
      Node node1 = new Node(39);
      node0.isDelProp();
      node0.isStringKey();
      node1.isObjectLit();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test732()  throws Throwable  {
      String string0 = "B{UwMYN6tx'nHY";
      Node node0 = Node.newString("B{UwMYN6tx'nHY", 152, 152);
      node0.getAncestor(34);
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test733()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString("Object#Element");
      node0.isArrayLit();
      Node node1 = new Node((-1157));
      node0.isEquivalentTo(node1);
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(44);
      Node node3 = new Node(1161, node2, node1, node1, node0, 1785, 1360);
      node3.isDelProp();
      node2.isGetterDef();
      node2.useSourceInfoFrom(node3);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(4095);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1157
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test734()  throws Throwable  {
      Node node0 = Node.newString(38, "direWctives", 38, (-886));
      node0.isNoSideEffectsCall();
      node0.isEquivalentTo(node0);
      node0.isExprResult();
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test735()  throws Throwable  {
      Node node0 = Node.newString(3024, ";fiCZs2 klL");
      Node node1 = new Node(115, node0);
      Node node2 = Node.newString("this");
      node2.getSourceFileName();
      node2.useSourceInfoFrom(node0);
      node1.isVar();
      node2.isExprResult();
      node2.isDefaultCase();
      // Undeclared exception!
      try { 
        node2.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test736()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.isTry();
      node0.isFromExterns();
      Node node1 = new Node(39, node0, node0, node0);
      node0.isTry();
      node1.isNE();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test737()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isNumber();
      Node node1 = Node.newNumber((double) 30, 2, 461845907);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.hasMoreThanOneChild();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test738()  throws Throwable  {
      Node node0 = new Node(122);
      node0.getLength();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isNE();
      node0.isCast();
      node0.removeProp(38);
      Node node1 = node0.cloneTree();
      node0.isComma();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node0.clonePropsFrom(node1);
      node0.isFalse();
      node0.getIntProp(52);
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test739()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(157);
      node_SideEffectFlags0.setReturnsTainted();
      Node node1 = Node.newNumber((double) 46, (-1902), 2);
      Node node2 = node0.srcref(node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.javascript.rhino.Node$AncestorIterable");
      node0.isLabel();
      node2.toString(false, false, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      ObjectType objectType0 = null;
      // Undeclared exception!
      try { 
        ImmutableList.copyOf(jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test740()  throws Throwable  {
      Node node0 = Node.newString("B{UwMYN6tx'nHY", 152, 152);
      node0.getAncestor(1);
      Node node1 = new Node(152, node0);
      node1.setWasEmptyNode(true);
      node1.checkTreeEquals(node0);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test741()  throws Throwable  {
      Node node0 = Node.newString("B{UwMYN6tx'nHY", 152, 152);
      Node node1 = new Node(152, node0, node0, 32, (-968));
      node1.getAncestor(1);
      Node node2 = new Node(152, node1);
      node2.setWasEmptyNode(true);
      node2.checkTreeEquals(node1);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test742()  throws Throwable  {
      Node node0 = new Node(125, 125, 132);
      node0.setVarArgs(false);
      Node node1 = new Node(1, node0);
      node1.isIn();
      Node node2 = Node.newString(48, "|\"`45_b&7j");
      node2.siblings();
      Node node3 = node2.useSourceInfoFrom(node1);
      node3.setString("4cc");
      node0.isAssignAdd();
      node2.getQualifiedName();
      node0.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test743()  throws Throwable  {
      Node node0 = new Node(42, 42, 589);
      node0.setVarArgs(true);
      node0.isIn();
      node0.putBooleanProp(42, true);
      node0.siblings();
      node0.isScript();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test744()  throws Throwable  {
      Node node0 = Node.newString("Jc]8-9@I )lb:4?", 77, 77);
      Node node1 = new Node(77, node0, node0, 32, 8);
      Node node2 = Node.newString("Jc]8-9@I )lb:4?");
      Node node3 = new Node(77, node1);
      node3.isArrayLit();
      node0.getJsDocBuilderForNode();
      node0.isEquivalentTo(node2);
      node1.isEquivalentTo(node3, true, true, false);
      node2.isCall();
      node1.isInstanceOf();
      node1.srcrefTree(node0);
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test745()  throws Throwable  {
      Node node0 = Node.newString("mEQX^{byaI45RM$Lvj");
      Node node1 = new Node(48, node0, node0, node0);
      node0.addChildrenToFront(node1);
      Node.newString("mEQX^{byaI45RM$Lvj");
      Node node2 = node0.getAncestor(117);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CharBuffer charBuffer0 = CharBuffer.allocate(56);
      // Undeclared exception!
      try { 
        node2.appendStringTree(charBuffer0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 48
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test746()  throws Throwable  {
      Node node0 = new Node(42, 42, 589);
      node0.setVarArgs(true);
      node0.isIn();
      node0.siblings();
      node0.isTrue();
      Node node1 = new Node(42);
      node0.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(32);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got THIS
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test747()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isContinue();
      Node node1 = Node.newNumber(1.0, 29, 83);
      node0.useSourceInfoFrom(node1);
      Node node2 = Node.newNumber((-1273.5051633), 16, 0);
      node0.isEquivalentTo(node2);
      // Undeclared exception!
      try { 
        node2.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test748()  throws Throwable  {
      Node node0 = new Node(39);
      node0.isObjectLit();
      Node node1 = Node.newString(56, "duplicate child");
      node0.srcref(node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "duplicate child");
      node1.isLabel();
      // Undeclared exception!
      try { 
        node1.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 56
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test749()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(1223);
      node0.isLocalResultCall();
      Node node1 = new Node(32);
      Node node2 = node1.copyInformationFrom(node0);
      node1.isGetterDef();
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test750()  throws Throwable  {
      Node node0 = Node.newString("&qpxu'qP'cT0v+!J", 117, 117);
      node0.mayMutateGlobalStateOrThrow();
      node0.isDebugger();
      Node node1 = new Node(30);
      node1.copyInformationFrom(node0);
      node1.isIf();
      node0.isOnlyModifiesArgumentsCall();
      node1.isDelProp();
      node1.isGetterDef();
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test751()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(47, node0, node0, node0, node0, 38, 57);
      int int0 = Node.FREE_CALL;
      node1.type = 57;
      node0.isDec();
      node1.isIn();
      node1.getProp(57);
      node0.isEquivalentTo(node1);
      node1.getChildBefore(node0);
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test752()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(47, node0, node0, node0, node0, 38, 57);
      int int0 = Node.FREE_CALL;
      node0.isDec();
      node1.useSourceInfoFrom(node0);
      node1.isVar();
      node1.isExprResult();
      node1.toString();
  }

  @Test(timeout = 4000)
  public void test753()  throws Throwable  {
      Node node0 = new Node(41);
      node0.isOptionalArg();
      Node node1 = Node.newString("cY(}!5 IbtSb0");
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.isVar();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test754()  throws Throwable  {
      Node node0 = Node.newString(38, "directiv\"s", 38, (-886));
      node0.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isFalse();
      // Undeclared exception!
      try { 
        node0.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test755()  throws Throwable  {
      Node node0 = new Node(42, 105, 107);
      Node node1 = new Node(57, 33, 983);
      node0.copyInformationFrom(node1);
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test756()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.isArrayLit();
      Node node1 = node0.getAncestor(0);
      node0.addChildToFront(node1);
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test757()  throws Throwable  {
      Node node0 = Node.newString(3024, ";fiCZs2 klL");
      node0.isVarArgs();
      Node node1 = new Node(115, node0);
      node1.srcref(node0);
      node1.isTypeOf();
      node0.isTry();
      node1.isAnd();
      node1.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test758()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(47, node0, node0, node0, node0, 38, 57);
      int int0 = Node.FREE_CALL;
      node0.isDec();
      node0.isIf();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node0.isDelProp();
      node1.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test759()  throws Throwable  {
      Node node0 = Node.newNumber(2628.9);
      node0.setLength(52);
      Node node1 = new Node(52, node0, node0);
      node0.checkTreeEquals(node1);
      node0.getLength();
      node0.setIsSyntheticBlock(false);
      node0.isVar();
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test760()  throws Throwable  {
      Node node0 = Node.newString(38, "dirctves", 38, (-853));
      node0.isLabel();
      node0.isDebugger();
      Node node1 = new Node(31, node0, node0);
      node0.getStaticSourceFile();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(">TFt=#J$;!Q) t1/", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.isIn();
      Object object0 = new Object();
      Node node2 = Node.newNumber((-2558.04226));
      node1.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test761()  throws Throwable  {
      Node node0 = Node.newNumber((-658.24476), (-293), (-633));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node.newString("'hsB^2*K%+<;BIL ", (-2074), 2);
      Node node1 = new Node(29, node0, node0, 63, 0);
      node1.isFunction();
      node0.setSourceEncodedPosition(124);
      node1.isString();
      node1.isArrayLit();
      node0.getQualifiedName();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test762()  throws Throwable  {
      Node node0 = new Node(39);
      Node node1 = Node.newString((-1530), "Yd");
      node0.addChildToBack(node1);
      node0.isEquivalentTo(node0, true, true, true);
      node0.isThrow();
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test763()  throws Throwable  {
      Node node0 = new Node(105, 105, 105);
      node0.isCatch();
      Node node1 = Node.newString("i d\"Zu3KM``AS9!;'0", 1128, 1128);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test764()  throws Throwable  {
      Node node0 = new Node(113);
      node0.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(157);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags6.setMutatesThis();
      Node node1 = new Node(49, node0, 148, 4095);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test765()  throws Throwable  {
      Node node0 = Node.newString(30, "&qpxu'qP'cT0v+!J");
      Node node1 = new Node(77, node0);
      Node node2 = Node.newString("Null");
      Node node3 = node1.useSourceInfoFrom(node2);
      node2.isVar();
      Node node4 = new Node(120, 552, 36);
      Node node5 = null;
      try {
        node5 = new Node(1, node4, node3, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test766()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(103, node0);
      node1.getLength();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isReturn();
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test767()  throws Throwable  {
      Node node0 = new Node(138);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node node1 = new Node(55, node0, node0, node0, node0);
      Node node2 = new Node(52, node1, 116, 0);
      node1.isNumber();
      node2.detachChildren();
      node2.isIn();
      node0.copyInformationFrom(node2);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-607));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 138
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test768()  throws Throwable  {
      Node node0 = new Node(49, 49, 49);
      Node node1 = node0.cloneNode();
      node0.isIf();
      node0.isContinue();
      node0.siblings();
      node1.addChildToFront(node0);
      node1.getSideEffectFlags();
      node1.setSourceEncodedPosition((-686));
      node1.getCharno();
      node0.getIntProp(46);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.cloneTree();
      node1.getSourceFileName();
      node0.getIntProp(2147483645);
  }

  @Test(timeout = 4000)
  public void test769()  throws Throwable  {
      Node node0 = Node.newNumber(2628.9);
      node0.setLength(52);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(52, node0, node0);
      node0.checkTreeEquals(node1);
      node0.setIsSyntheticBlock(false);
      node0.srcref(node1);
      node1.getSourceOffset();
      node0.isLabelName();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test770()  throws Throwable  {
      Node node0 = Node.newString(2042, "/K", (-2872), 2042);
      Node node1 = new Node(32, node0, node0, node0);
      node0.isEquivalentToTyped(node1);
      node1.setChangeTime(49);
      node0.setSourceEncodedPosition(48);
      node1.isGetProp();
      node1.isEmpty();
      node0.isNE();
      node0.getLineno();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test771()  throws Throwable  {
      Node node0 = Node.newString(38, "directives", 38, (-886));
      node0.isQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      TemplateTypeMap templateTypeMap0 = jSTypeRegistry0.createTemplateTypeMap((ImmutableList<TemplateType>) null, immutableList0);
      templateTypeMap0.getTemplateTypeKeyByName("STRING ZWW15eI");
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, templateTypeMap0);
      JSType jSType0 = templateTypeMapReplacer0.caseBooleanType();
      node0.setJSType(jSType0);
      node0.toString(true, true, true);
      node0.isUnscopedQualifiedName();
      node0.isDelProp();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test772()  throws Throwable  {
      Node node0 = new Node((-1022), (-1022), 639);
      node0.isNoSideEffectsCall();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Should not happen\n");
      node0.isInc();
      Node node1 = new Node(53);
      node0.isOnlyModifiesThisCall();
      node0.clonePropsFrom(node1);
      node0.isWith();
      // Undeclared exception!
      try { 
        node0.setDouble(639);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1022
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }
}
