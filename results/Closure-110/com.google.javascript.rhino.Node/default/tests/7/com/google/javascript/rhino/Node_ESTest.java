/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 31 22:35:34 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Predicate;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.StringType;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.UnionType;
import java.io.CharArrayWriter;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.CharBuffer;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException;
import org.evosuite.runtime.mock.java.lang.MockIllegalStateException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "ne";
      Node node0 = new Node(25);
      Node node1 = new Node(4448, node0, node0, node0, node0, 2, 16);
      Node node2 = new Node(16, node1);
      JSType.toMaybeTemplateType((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      ObjectType objectType0 = FunctionType.getTopDefiningInterface((ObjectType) null, "*#F/@6L$>HS8^[/|");
      EnumType enumType0 = jSTypeRegistry0.createEnumType(string0, node2, objectType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      String string1 = ".]0FY8Qpr{ A";
      // Undeclared exception!
      try { 
        enumElementType0.getPropertyNode(string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("kY");
      node0.setQuotedString();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = Node.newNumber(1468.0);
      Node node1 = new Node(40, node0, node0, node0, node0);
      node1.isParamList();
      node1.setOptionalArg(false);
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = Node.newNumber((-848.84825983));
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = Node.newString("kY");
      node0.setOptionalArg(false);
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = Node.newNumber((-387.0));
      Node node1 = new Node(38, node0, node0, node0, node0, 12, 32);
      node0.addChildAfter(node1, node1);
      node1.isQualifiedName();
      // Undeclared exception!
      try { 
        node1.isOnlyModifiesArgumentsCall();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = new Node(1093, 44, 1093);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = new Node(1093);
      Node node1 = new Node(4095, node0, 42, 30);
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newString("x%x+_");
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newString((-2554), "");
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(24, 55, (-1138));
      Node node1 = Node.newString(0, (String) null, 0, 49);
      boolean boolean0 = false;
      node0.setVarArgs(boolean0);
      node1.getLength();
      node0.isNoSideEffectsCall();
      node0.getLength();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = Node.newNumber((-34.8007), (-4447), (-4447));
      node0.isContinue();
      node0.isRegExp();
      node0.hasChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node0.isEmpty();
      node0.getProp(79);
      node0.hasMoreThanOneChild();
      node0.isBlock();
      node0.isNull();
      node0.isFunction();
      node0.isThrow();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesArguments();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newNumber(1454.498);
      node0.isName();
      Node node1 = node0.cloneTree();
      node1.isQualifiedName();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(1093, 4, 1093);
      node0.isReturn();
      node0.isNoSideEffectsCall();
      node0.isFunction();
      Node.extractCharno(29);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = Node.newNumber((double) 57);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newNumber((double) 57);
      Node.newNumber(3028.04978464);
      Node node1 = new Node(57, node0, node0, node0);
      node0.isBlock();
      Node.newNumber((double) 49, 15, 52);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isRegExp();
      Node node1 = new Node(46, node0, node0, node0, 53, 53);
      node1.isFalse();
      node1.isGetElem();
      node1.setString("com.google.javascript.rhino.JSDocInfo$NamePosition");
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newNumber((-852.5317027), 3584, 3584);
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = Node.newNumber(1468.413929983989);
      Node node1 = new Node(48, 8, 4);
      node1.checkTreeEqualsImpl(node0);
      node0.isUnscopedQualifiedName();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isLabel();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = Node.newString(":<6dR9KM-yVM Gg%cj", (-1018), (-1018));
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = Node.newNumber((-1977.805862896));
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newString("XIWaA{gZB S/b");
      node0.isThrow();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newNumber((-34.8007), (-4447), (-4447));
      node0.isContinue();
      node0.hasChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node0.isEquivalentTo(node0);
      node0.isGetProp();
      node0.setSourceEncodedPositionForTree((-4447));
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = new Node(105);
      node0.isLabelName();
      Object object0 = new Object();
      node0.isCase();
      node0.getProp(8);
      node0.hasMoreThanOneChild();
      node0.isBreak();
      node0.isNull();
      node0.isFunction();
      Node node1 = Node.newString(103, "Y[g%r2'BXinV-vw c", 20, 48);
      node1.isVar();
      Node node2 = node0.cloneTree();
      node1.getInputId();
      node2.isOr();
      node1.isDefaultCase();
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newNumber(2939.1309903028);
      Node node1 = new Node(0, node0, (-1558), (-262));
      node1.setType((-350));
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.isFunction();
      node2.isGetterDef();
      node1.hasChildren();
      node2.isIf();
      Node.newString(43, "+8b)kxj#/RN/,5kVx", 38, 37);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newString((-2501), "");
      node0.getDouble();
      Node node1 = new Node(node0.INPUT_ID, node0);
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2501
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(117);
      node0.isLabel();
      node0.getDouble();
      Node node1 = null;
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = Node.newString((-75), "The new child node has siblings.", (-75), (-75));
      InputId inputId0 = new InputId("IVgvK #X<*zz");
      node0.setInputId(inputId0);
      node0.isVarArgs();
      node0.getDouble();
      node0.isFunction();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = Node.newNumber(1483.7410636638695);
      node0.isName();
      Node node1 = node0.cloneTree();
      node0.isGetterDef();
      node0.addChildrenToFront(node1);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.addChildrenToFront((Node) null);
      int int0 = 1073741823;
      int int1 = (-1814);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node0 = jSDocInfo0.getAssociatedNode();
      Node node1 = new Node(0, (Node) null, (Node) null, 2, 32);
      node1.setSourceEncodedPositionForTree(node0.MAX_COLUMN_NUMBER);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = Node.newString(86, "sIcdL4#V[K[");
      Node node1 = new Node(85, node0, node0, (-875), 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      JSType.toMaybeTemplateType((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("sIcdL4#V[K[", node1, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.toMaybeEnumElementType();
      TemplatizedType templatizedType0 = JSType.toMaybeTemplatizedType((JSType) enumElementType0);
      // Undeclared exception!
      try { 
        templatizedType0.getTemplateTypes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node(519);
      Node node1 = new Node(519, node0, node0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      node0.getQualifiedName();
      Node node1 = new Node(1, node0, 57, 32);
      node0.removeChildren();
      Node node2 = Node.newString("REFERENCE_ERROR_TYPE", 32, 2);
      node1.addChildrenToBack(node2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node3 = new Node(32, node1, node1);
      node3.isVar();
      node1.cloneTree();
      node2.getInputId();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayDeque<JSType> arrayDeque0 = new ArrayDeque<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) arrayDeque0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.cloneTree();
      Node node1 = node0.getParent();
      arrayDeque0.containsAll(immutableList0);
      SimpleErrorReporter.getMessage0("gaIj|`iAvs+>'");
      // Undeclared exception!
      try { 
        node1.useSourceInfoIfMissingFrom(node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property gaIj|`\\iAvs+>'
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node(77);
      node0.isLabel();
      node0.getParent();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isArrayLit();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      Node node2 = Node.newString(":<6dR9KM-yVM Gg%cj");
      node2.isOnlyModifiesArgumentsCall();
      node2.isParamList();
      node1.isEquivalentToShallow(node2);
      node1.isVar();
      node1.cloneTree();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = "\"";
      Node node0 = Node.newString(0, "\"", 0, 2890);
      StaticSourceFile staticSourceFile0 = node0.getStaticSourceFile();
      int int0 = (-1897);
      Node.newNumber((-1.0));
      node0.setLineno(3189);
      Node node1 = node0.detachFromParent();
      node1.toStringTree();
      Node.newString(int0, string0);
      node0.setStaticSourceFile(staticSourceFile0);
      // Undeclared exception!
      try { 
        node0.isHook();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node.extractCharno(2224);
      Node node0 = Node.newNumber((double) 2224);
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.setLineno(1465);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String string0 = "\"";
      Node node0 = Node.newString(0, "\"", 0, 0);
      int int0 = (-1897);
      Node.newNumber((-1.0));
      node0.setLineno(3189);
      Node node1 = node0.detachFromParent();
      node1.toStringTree();
      Node.newString(int0, string0);
      // Undeclared exception!
      try { 
        node0.isHook();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = Node.newNumber(1231.9995896199237);
      node0.isQuotedString();
      Node node1 = node0.detachFromParent();
      // Undeclared exception!
      try { 
        node1.isUnscopedQualifiedName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = Node.newString(21, "", 21, 21);
      node0.isOnlyModifiesArgumentsCall();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = 2527;
      Node.newString((String) null, 1916, 2527);
      int int1 = 92;
      int int2 = (-2749);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 153, (-2625));
      node0.getIntProp(8199);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      node0.getQualifiedName();
      Node.newString(1, (String) null, 2, 15);
      String string0 = "REFERENCE_ERROR_TYPE";
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = new Node(1093, 4, 1093);
      Node node1 = new Node(1093, node0, node0, node0, 1, 53);
      Node.newString("Py#h.,v\"Iy.IdW6", 42, 55);
      node0.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "com.google.common.base.SmallCharMatcher";
      Node node0 = new Node((-781), (Node) null, (Node) null, (Node) null, (-781), (-781));
      JSType jSType0 = null;
      // Undeclared exception!
      try { 
        ObjectType.cast(jSType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = Node.newNumber((double) 16);
      Node node1 = new Node((-2093), (Node) null, (Node) null, node0, 55, 53);
      node1.isRegExp();
      int int0 = 161;
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      Node.mergeLineCharNo(56, 4333);
      node0.isComma();
      boolean boolean0 = node0.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      boolean boolean1 = node1.isOr();
      String string0 = "originalname";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0, boolean1);
      String string1 = "NS;U}w# J1s-4";
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, boolean0, string1);
      Object[] objectArray0 = new Object[0];
      PrintStream printStream0 = mockPrintStream0.printf(string0, objectArray0);
      node0.appendStringTree(printStream0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = Node.newNumber(3156.35);
      Node node1 = new Node((-1771), 36, (-5355));
      node0.addChildrenToFront(node1);
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newNumber(1468.413929983989);
      node0.isDo();
      node0.isGetProp();
      node0.setSourceEncodedPositionForTree(2);
      node0.mayMutateGlobalStateOrThrow();
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isQuotedString();
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node1.addSuppression("thi63s");
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newString((-8408), "", 98, (-8408));
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(2531);
      node0.isThis();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = Node.newString(4, "_}f>*aS");
      node0.isFalse();
      node0.putProp(39, "_}f>*aS");
      node0.isAdd();
      node0.getBooleanProp(1881);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newNumber(1454.498);
      node0.mayMutateGlobalStateOrThrow();
      node0.isComma();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newString("Q~Je@/.M@Mo-Oz<I3/");
      node0.siblings();
      node0.setOptionalArg(true);
      node0.isCatch();
      node0.isComma();
      node0.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = Node.newString(262144, "hfWV", 16, 262144);
      node0.getDirectives();
      Node node1 = node0.cloneTree();
      node1.isDelProp();
      node1.isEquivalentTo(node0, false, true, false);
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = new Node(117);
      node0.detachChildren();
      node0.isThis();
      node0.setChangeTime(43);
      Node node1 = new Node(40, node0, node0, node0);
      node1.setWasEmptyNode(false);
      Node node2 = node0.cloneTree();
      node2.toStringTree();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = new Node(0);
      node0.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(true);
      node0.isAnd();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node(125);
      node0.setIsSyntheticBlock(false);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = new Node(0, (Node[]) null);
      node0.isWith();
      int int0 = 2622;
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = new Node((-527), (Node[]) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node0.INFERRED_FUNCTION);
      node_SideEffectFlags0.setMutatesArguments();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[8];
      Node node0 = Node.newString(0, "**(We+PE(", 39, 0);
      Node node1 = new Node(0, node0, node0, node0);
      nodeArray0[0] = node1;
      Node node2 = new Node((-922), node1, node1, node1, node1);
      nodeArray0[1] = node2;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType jSType0 = null;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("**(We+PE(", node2, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      // Undeclared exception!
      try { 
        enumElementType0.getRootNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newNumber((double) 306654252);
      Node node1 = new Node(4, node0, node0, node0);
      node1.isObjectLit();
      Node.newNumber((double) 49, 1573, 36);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node(15, 15, 15);
      Node node1 = new Node(15, node0);
      Node node2 = new Node(15, node1, node1, 51, 16);
      Node node3 = new Node(38);
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node2.setDirectives(set0);
      node2.getLength();
      node1.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node node4 = Node.newNumber(1.0);
      Node node5 = new Node((-1733), node2, node3, node0);
      node4.isObjectLit();
      Node.newNumber((double) node5.SIDE_EFFECTS_FLAGS_MASK, node2.COLUMN_BITS, node4.FLAG_NO_THROWS);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = Node.newString(676, "T5\"J/wU,");
      Node node1 = node0.cloneTree();
      Node node2 = new Node(46, 0, (-536870912));
      node2.useSourceInfoFrom(node1);
      node0.addChildToBack(node2);
      node0.isObjectLit();
      node1.setOptionalArg(true);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newNumber(1468.413929983989);
      node0.isDo();
      Node node1 = node0.cloneTree();
      node1.srcrefTree(node0);
      node1.isGetProp();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isSyntheticBlock();
      node0.replaceChild(node0, node0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = Node.newString("synthetic");
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int int0 = 0;
      Node node0 = null;
      Node node1 = new Node((-625), (Node) null);
      int int1 = 30;
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node node0 = Node.newString("g+*m8t9^CV0O5");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node0.clonePropsFrom((Node) null);
      // Undeclared exception!
      try { 
        node0.isCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      node0.removeProp(105);
      Node node1 = Node.newNumber(1454.498);
      node1.setOptionalArg(false);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newNumber(Double.POSITIVE_INFINITY, (-3832), (-402));
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(36);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      int int0 = (-5580);
      Node node0 = new Node(1196);
      Node node1 = new Node((-5580), node0, node0, node0, (-2081), 37);
      node0.clonePropsFrom(node1);
      Node node2 = new Node((-5580), node0, node0, node0, node0, 4095, 1838);
      Node node3 = new Node(int0, node2, node2);
      node3.isRegExp();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newString((-1503), "|!Vx#Bv9@gCqF0 7LC");
      node0.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(57, 57, 57);
      Node node1 = new Node(39, node0);
      node0.isIf();
      boolean boolean0 = node1.isTrue();
      Node node2 = new Node(54, node0, node0, node0, node1, 4095, 43);
      // Undeclared exception!
      try { 
        node1.setWasEmptyNode(boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = (-1927);
      Node node0 = Node.newNumber((double) (-3524));
      Node node1 = new Node((-1927), node0, node0);
      Node node2 = new Node((-3524), node1, node0, node0, node1, 1610612736, 47);
      int int1 = 8;
      Node node3 = null;
      try {
        node3 = new Node(int0, node2, node2, node2, node2.SLASH_V, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newNumber((double) 82);
      Node node1 = new Node(82, node0, node0, node0, node0, 50, 0);
      Node node2 = Node.newString(48, "\"w>H%z cEK_4in3VJAC", 4095, 31);
      Node node3 = Node.newNumber(1.0, 40, 202);
      node3.removeChildren();
      node2.isSyntheticBlock();
      node1.setVarArgs(true);
      node1.setSourceFileForTesting(".|ax*k");
      node1.isOnlyModifiesThisCall();
      node0.putProp(722, "\"w>H%z cEK_4in3VJAC");
      node1.addChildToFront(node3);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(28, 4, 1093);
      Node node1 = Node.newString("Py#h.,v\"Iy.IdW6", 42, 55);
      Node node2 = new Node(1093, node0, node1, node0);
      node2.setSourceFileForTesting("com.google.javascript.rhino.jstype.TernaryValue");
      node2.checkTreeEqualsImpl(node0);
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newNumber(1468.413929983989);
      node0.isOptionalArg();
      node0.isDo();
      node0.isGetProp();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node.newString("Node has existing properties.", 0, 0);
      double double0 = (-1571.66);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[5];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("R");
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) templateType0, (Map<TemplateType, JSType>) hashMap0);
      TemplatizedType templatizedType1 = templatizedType0.toMaybeTemplatizedType();
      jSTypeArray0[0] = (JSType) templatizedType1;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      jSTypeArray0[1] = (JSType) objectType0;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMap templateTypeMap0 = templatizedType1.getTemplateTypeMap();
      ImmutableList<TemplateType> immutableList0 = templateTypeMap0.getTemplateKeys();
      ImmutableList<TemplateType> immutableList1 = immutableList0.reverse();
      FunctionType.getTopDefiningInterface(objectType0, "Object#Key");
      JSType.toMaybeFunctionType(jSTypeArray0[1]);
      ImmutableList<JSType> immutableList2 = ImmutableList.of((JSType) templateType0, (JSType) templateType0, (JSType) null, (JSType) templateType0, (JSType) templatizedType1, (JSType) templatizedType1, (JSType) templatizedType1, (JSType) null);
      int int0 = (-172);
      int int1 = 0;
      ImmutableList<JSType> immutableList3 = immutableList2.subList(int0, int1);
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createTemplateTypeMap(immutableList1, immutableList3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 2
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(102);
      int int0 = 53;
      node0.getString();
      int int1 = 0;
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = new Node(40);
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 1);
      Node node2 = Node.newNumber((double) 4);
      node2.setVarArgs(false);
      node0.isCast();
      node0.isComma();
      int int0 = Node.NO_SIDE_EFFECTS;
      node1.putIntProp(74, 8);
      node1.isEquivalentToTyped(node1);
      node0.getSourcePosition();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newString("x`~_nal&GJ[}", 117, 117);
      node0.isAssignAdd();
      node0.isAssignAdd();
      node0.setWasEmptyNode(true);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = (-1537);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = Node.newString("Object#Element");
      EnumType enumType0 = jSTypeRegistry0.createEnumType("5(sN#~S~,4", node0, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      // Undeclared exception!
      try { 
        enumElementType0.getRootNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newNumber(1231.9995896199237);
      node0.isAssign();
      Node node1 = node0.detachFromParent();
      // Undeclared exception!
      try { 
        node1.isUnscopedQualifiedName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node.extractLineno(8202);
      Node node0 = new Node(2);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isAssign();
      Node node2 = Node.newString("6*Af]<0EB.WG~");
      node2.detachChildren();
      node0.putBooleanProp(54, false);
      Node node3 = Node.newString(29, "6*Af]<0EB.WG~", 3405, 0);
      node2.detachChildren();
      node3.putProp(9, node0);
      node3.getChangeTime();
      node2.putBooleanProp(53, false);
      node0.isWith();
      node2.getExistingIntProp(31);
      node2.getString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.clearAllFlags();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 31
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(111);
      String string0 = null;
      node0.getExistingIntProp(111);
      // Undeclared exception!
      try { 
        node0.setString(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 111
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = Node.newString("6*Af]<0EB.WG~");
      node0.detachChildren();
      node0.isAdd();
      Node.newString(">opy\"S'-K");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = new Node(400);
      node0.isOnlyModifiesThisCall();
      node0.isWith();
      node0.isNoSideEffectsCall();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = new Node((-3899), 147, 2099);
      node0.getChangeTime();
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node.extractLineno(8202);
      Node node0 = new Node(2);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isAssign();
      node1.detachChildren();
      node0.putBooleanProp(54, false);
      Node node2 = Node.newString(29, "6*Af]<0EB.WG~", 3405, 0);
      node2.putProp(9, node0);
      String string0 = node0.toStringTree();
      Node.newString(node0.FREE_CALL, string0);
      node1.isHook();
      int int0 = 3936;
      node0.getProp(int0);
      node0.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node(0, nodeArray0);
      node0.detachFromParent();
      int int0 = Node.SLASH_V;
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 0;
      Node node0 = new Node((-1301), 1095, (-1301));
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      Node node1 = new Node(46, node0, 1889, (-857));
      nodeArray0[5] = node1;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      nodeArray0[8] = node0;
      Node node2 = new Node(38, nodeArray0);
      int int1 = (-299);
      Node node3 = new Node(int0, node0, node0, node0, node2, node2.IS_NAMESPACE, int1);
      node3.removeChild(nodeArray0[1]);
      // Undeclared exception!
      try { 
        node2.getNext();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(8202, 0, 2079);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = new Node(77, nodeArray0);
      node0.addChildrenToFront(node1);
      nodeArray0[2].siblings();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = Node.newNumber(1468.0);
      node0.isVar();
      Node node1 = node0.cloneTree();
      Node node2 = new Node(47, node0, node1, 51, 42);
      node2.isInstanceOf();
      node2.isParamList();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      node1.isBlock();
      node0.isUnscopedQualifiedName();
      node0.isGetElem();
      node1.isReturn();
      Node node3 = new Node(103, nodeArray0);
      node3.isReturn();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[6];
      JSTypeNative jSTypeNative0 = JSTypeNative.NO_RESOLVED_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[0] = jSType0;
      JSTypeNative jSTypeNative1 = JSTypeNative.U2U_FUNCTION_TYPE;
      ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative1);
      jSTypeArray0[1] = (JSType) objectType0;
      JSType[] jSTypeArray1 = new JSType[8];
      jSTypeArray1[0] = jSType0;
      jSTypeArray1[1] = jSType0;
      jSTypeArray1[2] = jSType0;
      jSTypeArray1[3] = (JSType) objectType0;
      jSTypeArray1[4] = (JSType) objectType0;
      jSTypeArray1[5] = (JSType) objectType0;
      jSTypeArray1[6] = (JSType) objectType0;
      Node node0 = Node.newString("mlP)6\"a");
      node0.getJSType();
      jSTypeArray1[7] = null;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSTypeArray0[1], true, jSTypeArray1);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) functionType0, jSTypeArray1);
      jSTypeArray0[2] = (JSType) functionType1;
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = new Node(112);
      node0.isInc();
      node0.getJSType();
      node0.isVoid();
      node0.getChildBefore((Node) null);
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      int int0 = 256;
      Node node0 = Node.newNumber((double) 256, 256, 256);
      int int1 = 0;
      Node node1 = Node.newString(0, "&|");
      node0.getQualifiedName();
      node1.isOnlyModifiesArgumentsCall();
      node1.toStringTree();
      int int2 = 0;
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newNumber((double) 57);
      Node node1 = new Node(57, node0, node0, node0);
      node0.getQualifiedName();
      node0.isOptionalArg();
      node1.isObjectLit();
      node1.addChildrenToBack(node0);
      // Undeclared exception!
      try { 
        node0.isReturn();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newNumber(1231.9995896199237);
      node0.isQuotedString();
      Node node1 = new Node(57);
      node0.isReturn();
      node0.wasEmptyNode();
      node1.isVoid();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = new Node(1108);
      node0.getStaticSourceFile();
      Node node1 = new Node(0, node0);
      Node node2 = new Node(1, node0, node1);
      node0.srcref(node2);
      // Undeclared exception!
      try { 
        node2.getLength();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = new Node(15, 15, 15);
      Node node1 = new Node(15, node0);
      Node node2 = new Node(15, node1, node1, 51, 16);
      Node node3 = node1.removeFirstChild();
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node2.setDirectives(set0);
      node2.getLength();
      node1.isFor();
      node1.getJsDocBuilderForNode();
      node0.setLineno(0);
      node3.getExistingIntProp(1);
      node2.toString();
      // Undeclared exception!
      try { 
        node2.isGetElem();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 1
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(1093);
      Node node1 = new Node(4095, node0, 42, 30);
      Node node2 = Node.newString("", 42, 55);
      node1.removeFirstChild();
      node0.addChildrenToBack(node2);
      Node node3 = new Node(1093, node1, node2, node1);
      node1.isVar();
      // Undeclared exception!
      try { 
        node3.cloneTree();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = new Node(15, 15, 15);
      Node node1 = new Node(15, node0, node0, 51, 16);
      Node node2 = new Node(38);
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node1.setDirectives(set0);
      node1.getLength();
      node0.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node node3 = Node.newNumber(1.0);
      Node node4 = new Node((-1733), node1, node2, node0);
      node3.isObjectLit();
      Node.newNumber((double) node4.SIDE_EFFECTS_FLAGS_MASK, node1.COLUMN_BITS, node3.FLAG_NO_THROWS);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = Node.newNumber((double) 40);
      node0.isDo();
      node0.getDouble();
      node0.toString(true, true, false);
      node0.getChangeTime();
      node0.isNoSideEffectsCall();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = Node.newString(629, "", 629, 629);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = Node.newString((-4096), "", 0, (-290));
      node0.getStaticSourceFile();
      node0.isOptionalArg();
      node0.isWhile();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.isInc();
      node0.setWasEmptyNode(false);
      node0.wasEmptyNode();
      node0.srcref(node1);
      node1.removeFirstChild();
      node0.isLabelName();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      int int0 = 33;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(124, (Node) null, (Node) null, (Node) null, (Node) null, 119, 33);
      Node node1 = new Node(int0, node0);
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      int int0 = 0;
      Node.mergeLineCharNo(0, 0);
      Node node0 = null;
      Node node1 = new Node(4590, (Node) null, (Node) null, (Node) null, (Node) null);
      node1.getQualifiedName();
      int int1 = 100;
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = 106;
      Node node0 = new Node(1428, (Node) null, (Node) null, (Node) null, (Node) null);
      Node node1 = new Node(int0, node0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newNumber((-1023.898608849));
      Node node1 = new Node(55, node0, node0, 56, 52);
      Node.newString(15, ";~J");
      node0.addChildBefore(node1, node1);
      Node node2 = new Node(node0.IS_CONSTANT_NAME, node0, node0, node0, node0.SYNTHETIC_BLOCK_PROP, node0.IS_NAMESPACE);
      node2.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newNumber(0.9281803301870597);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node node1 = new Node(0, node0, 4095, 53);
      node1.addChildBefore(node0, node0);
      node0.useSourceInfoFrom(node1);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      node0.addChildBefore(node0, node0);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newString("bl&v>'I}uPXlE!z@w.", 47, (-1038));
      node0.putBooleanProp(0, true);
      node0.putBooleanProp(0, true);
      node0.putBooleanProp(0, true);
      node0.getJSType();
      Node node1 = node0.cloneTree();
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newString("XIWaA{gZB S/b");
      node0.getString();
      node0.isThrow();
      node0.isNew();
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = new Node(40, 306654252, 306654252);
      Node node1 = new Node(36, node0);
      node1.setWasEmptyNode(false);
      Node.newString(" : ");
      node0.isEquivalentTo(node1, false, true, false);
      node1.setOptionalArg(true);
      node1.setOptionalArg(false);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node.extractCharno(1503);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "wztNCbdsm7{:PI0";
      Node node0 = new Node(2067, 1503, 2067);
      ObjectType objectType0 = null;
      ObjectType objectType1 = FunctionType.getTopDefiningInterface((ObjectType) null, "Object#Element");
      JSType.toMaybeTemplatizedType((JSType) objectType1);
      String string1 = "Kf";
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(111);
      node0.isOnlyModifiesArgumentsCall();
      node0.getAncestors();
      node0.isDefaultCase();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node.extractCharno(110);
      Node node0 = Node.newNumber(559.183700446);
      node0.getAncestors();
      node0.isVarArgs();
      boolean boolean0 = node0.isName();
      node0.setDouble(0.0);
      node0.setQuotedString();
      String string0 = "IM+$@";
      Node.newString(string0);
      SimpleSourceFile simpleSourceFile0 = null;
      try {
        simpleSourceFile0 = new SimpleSourceFile(string0, boolean0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = Node.newNumber(1468.413929983989);
      node0.isDo();
      node0.isThrow();
      node0.isNew();
      node0.setQuotedString();
      // Undeclared exception!
      try { 
        Node.newNumber((double) node0.QUOTED_PROP, node0.FLAG_THIS_UNMODIFIED, node0.MAX_COLUMN_NUMBER);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = new Node(0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node node1 = new Node(49, node0, 12, 2);
      node0.replaceChildAfter(node1, node1);
      node_SideEffectFlags1.setThrows();
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newNumber(1699.5176301000624);
      Node node1 = new Node(29);
      node1.replaceChildAfter(node0, node0);
      // Undeclared exception!
      try { 
        node1.isReturn();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(77);
      Node node1 = new Node(1, node0);
      node1.isUnscopedQualifiedName();
      node1.replaceChildAfter(node0, node0);
      node1.isReturn();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      Node node1 = node0.getAncestor(0);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node1.addChildBefore(node0, node0);
      node_SideEffectFlags3.setReturnsTainted();
      // Undeclared exception!
      try { 
        node_SideEffectFlags3.setMutatesGlobalState();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = Node.newNumber((double) 54, 54, 54);
      Node node1 = new Node(54, node0, node0, node0, 262144, 54);
      node1.isEquivalentTo(node0);
      node1.getAncestor(48);
      node0.isEmpty();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isOnlyModifiesArgumentsCall();
      node0.removeProp(105);
      Node node1 = Node.newNumber(1454.498);
      node1.isEquivalentTo(node0);
      node0.getDouble();
      node0.isEquivalentToShallow(node1);
      node1.isVar();
      node0.setJSType((JSType) null);
      node1.isName();
      Node node2 = node1.cloneTree();
      Node node3 = new Node(2340, node2);
      node3.removeChildren();
      node1.getAncestor(95);
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = node0.getAncestor(0);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.toStringTree();
      node0.isNew();
      node1.getJSDocInfo();
      node1.isCall();
      node0.setSideEffectFlags(57);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.setCharno(29);
      Node node2 = new Node((-821), node1, node1, 1, 117);
      Node node3 = node2.copyInformationFromForTree(node1);
      node3.getJSDocInfo();
      node3.isFor();
      node0.getCharno();
      node3.isGetElem();
      node3.getJSType();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = new Node(3708, 0, 0);
      node0.getDirectives();
      Node node1 = new Node(47, node0, (-381), 4095);
      Node node2 = node0.copyInformationFromForTree(node1);
      node1.isOnlyModifiesThisCall();
      Node node3 = Node.newString("");
      Node node4 = node2.useSourceInfoIfMissingFrom(node1);
      Node node5 = Node.newString("|Hkh<Q");
      node1.removeProp(46);
      Node node6 = new Node(16, node5, node0, node4, node3);
      node1.addChildAfter(node5, node6);
      node0.isFalse();
      Node node7 = node2.removeChildren();
      node7.isOnlyModifiesArgumentsCall();
      node4.children();
      // Undeclared exception!
      try { 
        node7.srcrefTree(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = Node.newNumber((double) 9);
      node0.isName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.error("?g:_H#{rQV", "?g:_H#{rQV", 504, 4095);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = new Node(30, node0, node0);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = new Node(57);
      Node node1 = new Node(1, node0, 12, 4);
      Node node2 = Node.newString("", 29, 55);
      node0.addChildrenToBack(node2);
      node1.cloneTree();
      Node node3 = new Node(1, node0, node0, node0, node2);
      node3.toStringTree();
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = new Node(98, 98, (-351));
      node0.mayMutateArguments();
      Node.newNumber((-3950.405), 118, 57);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = new Node(40, 306654252, 1205);
      node0.isQuotedString();
      node0.mayMutateArguments();
      Node node1 = Node.newNumber(0.0, 4, (-5152));
      node0.removeChild(node1);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = Node.newNumber(1454.498);
      node0.isName();
      Node node1 = node0.cloneTree();
      node1.removeChild(node0);
      // Undeclared exception!
      try { 
        Node.extractCharno(node0.QUOTED_PROP);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node1 = Node.newString(0, "\t|>p@KwH@bCVpEyd+c", (-1379), 47);
      Node node2 = new Node((-446), node0, node1, node1);
      node2.isLocalResultCall();
      node0.isDelProp();
      String string0 = "r9(tg\"";
      MockPrintStream mockPrintStream0 = new MockPrintStream(jSTypeRegistry0.OBJECT_ELEMENT_TEMPLATE, string0);
      Locale locale0 = Locale.ITALIAN;
      int int0 = 41;
      node2.getIntProp(int0);
      Object[] objectArray0 = new Object[3];
      // Undeclared exception!
      try { 
        node0.siblings();
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // r9(tg\"
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1093);
      node0.isDo();
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.isDefaultCase();
      node0.isGetElem();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = Node.newString(117, "x`~_nal&GJ[}", 117, 117);
      node0.isLocalResultCall();
      node0.isAssignAdd();
      node0.detachChildren();
      node0.getDouble();
      node0.isCast();
      // Undeclared exception!
      try { 
        node0.isVar();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // CONTINUE x`~_nal&GJ[} 117 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node.mergeLineCharNo((-1823), 823);
      Node node0 = Node.newNumber((-1.0), 44, 1023);
      node0.isAdd();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.cloneNode();
      Node node1 = Node.newNumber(1.0);
      node0.putBooleanProp(55, true);
      node0.isOr();
      node0.removeChildren();
      node1.toString(true, true, true);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newString("x`~_nal&GJ[}", 117, 117);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(974);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      node0.getJsDocBuilderForNode();
      node0.isGetElem();
      node0.detachChildren();
      node0.isVar();
      Node node1 = new Node(15, node0, 57, 12);
      Node node2 = new Node(43, node0, node0, node1, 46, 152);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node2);
      String string0 = "";
      boolean boolean0 = true;
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(string0, boolean0);
      // Undeclared exception!
      try { 
        node_NodeMismatch0.equals(node_SideEffectFlags1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-2553), (-2553), 4);
      Node node1 = new Node(4, node0, node0, node0, 55, 51);
      Node node2 = Node.newString("length", 50, 51);
      Node node3 = new Node(2, node0, node0, node0);
      node2.checkTreeEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1093);
      node0.isDo();
      node0.isGetProp();
      node0.setSourceEncodedPositionForTree(1093);
      node0.isReturn();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newString((-1503), "|!Vx#Bv9@gCqF0 7LC");
      node0.isTypeOf();
      Node node1 = new Node(51, node0, node0, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      Node node2 = new Node((-2272), node1, node1, node0, 40, 52);
      String string0 = "q<u ";
      Node.newString(string0, node0.REFLECTED_OBJECT, node0.LENGTH);
      // Undeclared exception!
      try { 
        node0.isWith();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = Node.newNumber((double) 57);
      Node node1 = new Node(57, node0, node0, node0);
      node1.isObjectLit();
      Node.newNumber((double) 49, 15, 52);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      node0.removeProp(105);
      Node node1 = Node.newNumber(1454.498);
      node1.isEquivalentTo(node0);
      node0.isEquivalentToShallow(node1);
      node1.mayMutateGlobalStateOrThrow();
      node1.isQuotedString();
      node1.isComma();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isCast();
      node0.detachChildren();
      node0.setChangeTime(40);
      node0.isVar();
      node0.isEquivalentToShallow(node0);
      Node node1 = node0.cloneTree();
      node0.isQualifiedName();
      node1.isOnlyModifiesArgumentsCall();
      node0.isDefaultCase();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newNumber((-852.5317027));
      node0.isEquivalentTo(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = Node.newNumber(1454.498);
      Node node1 = Node.newNumber((double) 1);
      node0.isEquivalentToShallow(node1);
      node0.isVar();
      Node node2 = node0.cloneTree();
      node2.addChildAfter(node0, node0);
      // Undeclared exception!
      try { 
        node2.isQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(103);
      node0.isEquivalentTo(node0, true, false, false);
      node0.setOptionalArg(false);
      node0.isOnlyModifiesArgumentsCall();
      node0.isDefaultCase();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = Node.newNumber((double) 40, 40, 40);
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 1);
      Node node2 = Node.newNumber((double) 4);
      node2.setVarArgs(false);
      node0.isQuotedString();
      node0.isComma();
      node0.getProp(33);
      node0.getChangeTime();
      node1.putIntProp(74, 8);
      node1.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      Node node2 = Node.newString(":<6dR9KM-yVM Gg%cj");
      node2.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newString("9S{k8F", 51, 971);
      node3.isDebugger();
      node1.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node node4 = node2.getChildAtIndex(62);
      node4.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Object object0 = new Object();
      Node node0 = Node.newNumber(2454.26344302, (-254), (-254));
      Node node1 = new Node(1073741824);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(".zK{rP", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.replaceChild(node1, node1);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4);
      node0.isName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.cloneTree();
      Node node1 = new Node(41, 39, 31);
      node1.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newString((-1503), "|!Vx#Bv9@gCqF0 7LC");
      node0.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.Iterators$7");
      node0.getSourceOffset();
      Node node1 = new Node(32, node0, node0);
      node0.checkTreeEquals(node1);
      Node.newNumber((double) 30);
      node0.isGetProp();
      node0.getInputId();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newNumber(1468.413929983989);
      Node node1 = new Node(48, 8, 4);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = new Node(77);
      Node node1 = new Node(31, node0);
      node1.getStaticSourceFile();
      node1.isUnscopedQualifiedName();
      node0.isEmpty();
      node1.isBlock();
      node1.isNew();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isFor();
      node1.isNoSideEffectsCall();
      node1.getChildAtIndex(4095);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      int int0 = Node.OPT_ARG_NAME;
      Node node1 = new Node(56, node0, node0, node0, node0);
      node1.isScript();
      Node node2 = Node.newNumber((double) 4095, 57, 57);
      node2.isInc();
      node1.getJSType();
      node1.putIntProp(55, (-93));
      node0.isEquivalentToTyped(node2);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isVoid();
      node0.removeProp(1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      node_SideEffectFlags0.setThrows();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)57;
      byteArray0[1] = (byte)93;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[2] = (byte)15;
      Node node1 = new Node(57);
      node0.isEquivalentTo(node1, true, false, false);
      node0.getLength();
      node0.isGetElem();
      node0.isInc();
      node1.isThrow();
      node0.isNew();
      Node node2 = Node.newString("", (-1220), 0);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.isAssignAdd();
      node2.isNoSideEffectsCall();
      node1.getChildAtIndex((-565));
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = Node.newNumber((-34.8007), (-4447), (-4447));
      node0.isContinue();
      node0.isRegExp();
      node0.hasChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node0.setLineno((-4447));
      node0.getExistingIntProp((-4447));
      node0.toString();
      // Undeclared exception!
      try { 
        node0.isGetElem();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -4447
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = new Node(15, 15, 15);
      Node node1 = new Node(15, node0);
      Node node2 = new Node(15, node1, node1, 51, 16);
      Node node3 = node1.removeFirstChild();
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node2.setDirectives(set0);
      node2.getLength();
      node1.isFor();
      node1.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node2.isEmpty();
      node0.getProp(85);
      node1.hasMoreThanOneChild();
      node1.isBlock();
      node1.isNull();
      node1.isFunction();
      node3.isThrow();
      node2.addChildAfter(node1, node0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newNumber((double) 57);
      Node node1 = new Node(57, node0, node0, node0);
      node0.isOptionalArg();
      node1.isObjectLit();
      node1.addChildrenToBack(node0);
      // Undeclared exception!
      try { 
        node1.isLabel();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newNumber(1454.498);
      node0.addChildAfter(node0, node0);
      // Undeclared exception!
      try { 
        node0.isQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      node0.removeProp(105);
      Node node1 = Node.newNumber(1454.498);
      Node.extractLineno(57);
      Node node2 = Node.newString(256, "NUMBER 0.0\n");
      Node node3 = new Node((-368), node2, node1, node2, 2097152, (-3927));
      node2.addChildAfter(node1, node3);
      Node node4 = new Node(node2.DIRECT_EVAL, node0, node3, node0);
      node2.copyInformationFromForTree(node1);
      node2.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node4.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.clearSideEffectFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newNumber(1454.498);
      node0.isName();
      node0.setIsSyntheticBlock(false);
      node0.isFunction();
      node0.isVoid();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = new Node(15, 15, 15);
      Node node1 = new Node(15, node0);
      Node node2 = new Node(15, node1, node1, 51, 16);
      Node node3 = node1.removeFirstChild();
      Locale locale0 = Locale.US;
      node2.getDirectives();
      node2.getLength();
      node0.isIn();
      node1.getJsDocBuilderForNode();
      node0.setLineno(0);
      node3.getExistingIntProp(1);
      node2.toString();
      // Undeclared exception!
      try { 
        node2.isGetElem();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 1
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(39, node0);
      node0.isIf();
      node1.isTrue();
      Node node2 = new Node(43);
      Node node3 = node1.srcref(node2);
      node1.isUnscopedQualifiedName();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node2.removeProp(16);
      node2.isDefaultCase();
      node2.isAssignAdd();
      node1.getAncestors();
      Node node4 = new Node(42, node1, node2, node3, node0, 38, 12);
      // Undeclared exception!
      try { 
        node4.isEquivalentTo(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = Node.newNumber(0.7, 64, 64);
      Node node1 = Node.newString(154, "&|");
      node1.getQualifiedName();
      boolean boolean0 = node0.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(46, node0, node0, 3041, 35);
      node2.toStringTree();
      Node node3 = new Node(48, node1, node1, node2, node0, 2, 29);
      Node.newNumber((double) node0.FLAG_NO_THROWS);
      node1.setVarArgs(boolean0);
      int int0 = 53;
      node2.setCharno(int0);
      int int1 = (-1061);
      int int2 = 3094;
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isQuotedString();
      Node node1 = new Node(16, node0, node0, node0);
      node1.addSuppression("thi63s");
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-483));
      node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "empty_block");
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = Node.newString("", 1839, (-483));
      Node node1 = new Node(4095);
      node0.removeChild(node1);
      node0.getExistingIntProp(node1.FLAG_THIS_UNMODIFIED);
      node0.isObjectLit();
      node0.isTrue();
      node0.isSwitch();
      // Undeclared exception!
      try { 
        node0.isLabel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = new Node(4, 4, 1093);
      Node node1 = new Node(1093, node0, node0, node0, 1, 53);
      Node node2 = Node.newString("9$QU6S{", 36, 37);
      node0.setOptionalArg(true);
      node1.addChildToFront(node2);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newString("zQ~Je@/.M@Mo-Oz<I3/");
      node0.siblings();
      Node node1 = Node.newString("zQ~Je@/.M@Mo-Oz<I3/", 51, (-603));
      node1.setOptionalArg(false);
      node0.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = new Node(0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      node_SideEffectFlags0.setAllFlags();
      node0.setSourceEncodedPositionForTree((-3472));
      node0.isThis();
      node0.setOptionalArg(false);
      node0.isFromExterns();
      node0.setChangeTime(112);
      Node.mergeLineCharNo(708, 52);
      node0.isComma();
      boolean boolean0 = node0.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isOr();
      String string0 = "originalname";
      boolean boolean1 = false;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0, boolean1);
      String string1 = "|0i.L]ms4N";
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, boolean0, string1);
      String string2 = "{X2XC14Ot9)Z";
      Object[] objectArray0 = new Object[0];
      PrintStream printStream0 = mockPrintStream0.printf(string2, objectArray0);
      try { 
        node0.appendStringTree(printStream0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
         //
         // |0i.L]ms4N
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newString("Q~Je@/.M@Mo-Oz<I3/");
      node0.setOptionalArg(true);
      node0.setSourceEncodedPosition(2242);
      node0.isComma();
      Node node1 = new Node(15, node0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-483));
      node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "empty_block");
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = Node.newString((-483), "UpULOw[Zk:|^k<N?$JW", 42, (-3094));
      node0.setSourceEncodedPosition(40);
      node0.isName();
      Node node1 = node0.cloneTree();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(37);
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags2.setAllFlags();
      Node node1 = new Node(0, node0, 4095, 53);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setReturnsTainted();
      node1.addChildBefore(node0, node0);
      node_SideEffectFlags5.setReturnsTainted();
      // Undeclared exception!
      try { 
        node_SideEffectFlags5.setMutatesGlobalState();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = Node.newString((-446), "Object#Key", (-446), (-446));
      Node node1 = Node.newString(0, "\t|>p@KwH@bCVpEyd+c", (-1379), 47);
      Node node2 = new Node((-446), node0, node1, node1);
      node2.isLocalResultCall();
      Node.newString(31, "com.google.javascript.rhino.Node$SideEffectFlags");
      node2.addChildAfter(node1, node1);
      node2.isArrayLit();
      node0.copyInformationFromForTree(node2);
      node1.isParamList();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
      try { 
        node_SideEffectFlags1.setThrows();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = new Node(4094, 4094, 4094);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      HashSet<String> hashSet0 = new LinkedHashSet<String>();
      hashSet0.clear();
      node0.setDirectives(hashSet0);
      InputId inputId0 = new InputId("");
      node0.setInputId(inputId0);
      Node.newString(4, "", 3932, 0);
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newNumber(1468.0);
      node0.isVar();
      Node node1 = node0.cloneTree();
      node1.setInputId((InputId) null);
      node0.removeChild(node1);
      node0.cloneTree();
      // Undeclared exception!
      try { 
        node0.isOr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.removeProp(105);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node0.isGetElem();
      Node node1 = new Node(42, node0, node0, node0, node0);
      node1.isParamList();
      node0.putIntProp((-2501), 54);
      node0.srcref(node1);
      node1.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isCase();
      node0.isNew();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.toStringTree();
      node0.setOptionalArg(true);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = new Node(1093, 4, 1093);
      node0.isReturn();
      node0.isNoSideEffectsCall();
      Node.extractCharno(29);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = Node.newNumber(1.0, 1047, 36);
      node0.getLineno();
      node0.srcref((Node) null);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      Node node1 = new Node(48, node0, 1, 186);
      boolean boolean0 = node0.isFunction();
      node0.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node1.toStringTree();
      node0.setOptionalArg(boolean0);
      String string0 = "-O)m;F6j4LYuLmM]y5]";
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 48
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toStringTree();
      node0.getChangeTime();
      node2.getProp(46);
      node2.addChildrenToFront(node1);
      node1.getDouble();
      node2.isString();
      node0.useSourceInfoIfMissingFrom(node1);
      int int0 = (-1336);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = new Node(1093);
      Node node1 = new Node(4095, node0, 42, 30);
      Node node2 = new Node(1093, node1, node1, node1);
      node1.isVar();
      node2.cloneTree();
      node0.getJSDocInfo();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      node0.isOptionalArg();
      node0.isObjectLit();
      Node node1 = Node.newNumber((double) 4095);
      node0.addChildrenToBack(node1);
      node1.isFromExterns();
      node1.isLabel();
      node0.addChildrenToFront(node1);
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node.mergeLineCharNo((-1823), 823);
      Node node0 = Node.newString(115, "Sx9VMpd!yN&ik", 33, (-1));
      Node node1 = new Node(50, node0, node0);
      Node node2 = new Node(41, node0, node0, node1);
      node0.isLocalResultCall();
      node1.isDelProp();
      String string0 = "";
      String string1 = "";
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0, string1);
      // Undeclared exception!
      try { 
        node2.srcrefTree(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.Iterators$7");
      Node node1 = new Node(32, node0, node0);
      node0.checkTreeEquals(node1);
      Node node2 = Node.newNumber((double) 30);
      Node node3 = new Node(98, node1, node0, node0);
      node2.isObjectLit();
      // Undeclared exception!
      try { 
        Node.newNumber((double) node0.IS_DISPATCHER, node1.IS_NAMESPACE, node0.FLAG_NO_THROWS);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node1 = Node.newNumber((double) 31, 4333, 55);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(93);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node1.setSideEffectFlags(node_SideEffectFlags2);
      node0.isAdd();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags3 = null;
      try {
        node_SideEffectFlags3 = new Node.SideEffectFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newString("reflected_object", 3191, 0);
      Node node1 = Node.newString("reflected_object", 0, 11);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node1.setSideEffectFlags(node_SideEffectFlags2);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.getInputId();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      int int0 = 112;
      Node node0 = new Node(112);
      node0.setSideEffectFlags((Node.SideEffectFlags) null);
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node.extractLineno(8202);
      Node node0 = new Node(2);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isAssign();
      Node node2 = Node.newString("6*Af]<0EB.WG~");
      node2.detachChildren();
      node0.putBooleanProp(54, false);
      Node node3 = Node.newString(29, "6*Af]<0EB.WG~", 3405, 0);
      node2.detachChildren();
      node3.putProp(9, node0);
      node2.toStringTree();
      Node node4 = Node.newString(50, "STRING 6*Af]<0EB.WG~\n");
      node2.isHook();
      node1.isDebugger();
      node0.getProp(3936);
      node0.getChangeTime();
      node0.isEquivalentTo(node4, true, true, false);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newString("{\"{5H2x&");
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.isIn();
      node0.getJsDocBuilderForNode();
      Node node1 = new Node((-2895), node0, node0, node0);
      node1.setLineno(49);
      int int0 = Node.IS_DISPATCHER;
      node0.isTypeOf();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      Object object0 = new Object();
      node1.copyInformationFromForTree(node0);
      node0.getProp(4);
      node_NodeMismatch0.equals(object0);
      node0.isUnscopedQualifiedName();
      node1.isReturn();
      node1.isReturn();
      node0.isGetProp();
      node0.addChildToBack(node1);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newNumber(1454.498);
      node0.isName();
      node0.cloneTree();
      node0.getJSDocInfo();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1093);
      node0.isDo();
      node0.isGetProp();
      node0.setSourceEncodedPositionForTree(1093);
      node0.setCharno(33);
      node0.isCall();
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(117, nodeArray0, 117, (-1096));
      Node node1 = new Node(117, node0, node0, node0);
      node1.isEmpty();
      node1.getLength();
      node0.getProp(55);
      node0.hasMoreThanOneChild();
      node1.isBlock();
      node1.isNull();
      node0.isFunction();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("}y7y!&b&;a5gf>'C.h7");
      node1.isQualifiedName();
      node1.isUnscopedQualifiedName();
      node0.isNoSideEffectsCall();
      node1.getChildAtIndex(4095);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = new Node(15, 15, 15);
      Node node1 = new Node(15, node0);
      Node node2 = new Node(15, node1, node1, 51, 16);
      Node node3 = node1.removeFirstChild();
      Locale locale0 = Locale.US;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node2.setDirectives(set0);
      node2.getLength();
      node1.isFor();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node2.isEmpty();
      node0.getProp(85);
      node1.hasMoreThanOneChild();
      node1.isBlock();
      node1.isNull();
      node1.isFunction();
      node_FileLevelJsDocBuilder0.append("GTjw9^>IaN/e");
      node3.isThrow();
      node2.addChildAfter(node1, node0);
      double double0 = (-911.63821028);
      Node.newNumber(double0, node1.SIDE_EFFECT_FLAGS, node1.SIDE_EFFECT_FLAGS);
      // Undeclared exception!
      try { 
        node0.isScript();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      node0.isDec();
      Node node1 = new Node(46, node0, node0, node0, 53, 50);
      node1.isFunction();
      node1.isFunction();
      Node node2 = new Node(38, node1, node0);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      // Undeclared exception!
      try { 
        node2.isUnscopedQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      Node node1 = new Node(4095, node0, node0, node0, 114, (-483));
      Node node2 = new Node((-1623), node1, node0, 1, 16);
      Node node3 = node1.removeFirstChild();
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node3.setDirectives(set0);
      // Undeclared exception!
      try { 
        node0.getLength();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = Node.newNumber(1468.0);
      Node node1 = new Node(40, node0, node0, node0, node0);
      Node node2 = new Node(50, node1, node1, node1, 4095, 49);
      node0.isCatch();
      node0.isComma();
      Node node3 = new Node(56, node1, node2, 52, 57);
      node3.isOnlyModifiesThisCall();
      // Undeclared exception!
      try { 
        node2.isString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      int int0 = 115;
      Node node0 = Node.newNumber(333.0, 77, 1434);
      Node node1 = new Node(115, node0, node0, 53, (-1677));
      int int1 = (-1931);
      node1.isEquivalentToShallow(node0);
      Node node2 = new Node(115, node1, node0, node0, (-1931), 48);
      String string0 = "unexpected prop id ";
      int int2 = (-861);
      Node.newString(string0, node2.IS_CONSTANT_NAME, int2);
      Node[] nodeArray0 = new Node[6];
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = new Node(103);
      Node node1 = new Node(49, node0, 16, 30);
      node1.detachChildren();
      node0.cloneTree();
      Node node2 = new Node(102, 57, 985);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isThrow();
      node0.cloneTree();
      Node node3 = new Node(3167, 39, 12);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags6.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(117, nodeArray0, 117, (-1096));
      Node node1 = new Node(117, node0, node0, node0);
      node1.isEmpty();
      node1.getLength();
      node0.getProp(55);
      node0.hasMoreThanOneChild();
      node1.isBlock();
      node1.isNull();
      node0.isFunction();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("}y7y!&b&;a5gf>'C.h7");
      node0.isThrow();
      node1.addChildAfter(node0, node0);
      int int0 = (-381);
      int int1 = 1370;
      // Undeclared exception!
      try { 
        Node.newNumber((double) node1.COLUMN_MASK, int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(128, nodeArray0, 128, 128);
      Node node1 = new Node(40, nodeArray0);
      node0.addChildAfter(node1, node1);
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        node1.isOnlyModifiesArgumentsCall();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = new Node(1093);
      Node node1 = new Node(4095, node0, 42, 30);
      Node node2 = Node.newString("", 42, 55);
      Node node3 = new Node(1093, node1, node2, node1);
      node1.isVar();
      Node node4 = new Node(30, node0);
      node4.checkTreeEquals(node2);
      // Undeclared exception!
      try { 
        node2.isGetProp();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = new Node(15, 15, 15);
      Node node1 = new Node(15, node0);
      Node node2 = new Node(15, node1, node1, 51, 16);
      node1.removeFirstChild();
      Locale locale0 = Locale.US;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node2.setDirectives(set0);
      node2.getLength();
      node1.isFor();
      node1.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setAllFlags();
      String string0 = "\\t|>p@KwH@bCVpEyd+c";
      int int0 = 1997;
      Node node3 = new Node(51, node1);
      Node node4 = new Node(int0, node0, node3, node2);
      String string1 = null;
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      node0.removeProp(105);
      Node node1 = Node.newNumber(1454.498);
      node1.isEquivalentTo(node0);
      node0.isEquivalentToShallow(node1);
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = new Node(1108, node0, node0, 119, 1);
      Node node3 = node1.copyInformationFromForTree(node2);
      node1.getJSDocInfo();
      Node node4 = new Node(16, node2, node2, node3);
      node4.isFor();
      node0.getCharno();
      node1.isGetElem();
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = Node.newString(54, "", 36, 1722);
      Node node2 = Node.newNumber(1002.3149201120889, 3146, 15);
      node2.removeChildren();
      node0.isSyntheticBlock();
      node0.setSourceFileForTesting((String) null);
      node0.isOnlyModifiesThisCall();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      node1.putProp(4095, locale_FilteringMode0);
      node0.addChildToFront(node2);
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node.mergeLineCharNo((-1823), 823);
      Node node0 = Node.newNumber((-1.0), 44, 1023);
      node0.isAdd();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node0.isVarArgs();
      node0.siblings();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      Node node2 = Node.newString(":<6dR9KM-yVM Gg%cj");
      node2.isOnlyModifiesArgumentsCall();
      node2.isParamList();
      Node node3 = new Node(46);
      node3.putIntProp((-273), 4);
      Node node4 = node3.srcref(node0);
      node3.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node node5 = new Node(13, node4);
      node5.getStaticSourceFile();
      node0.replaceChild(node1, node4);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node((-32), node0);
      Node node2 = new Node(31, node1, node1, node1, 47, 40);
      node2.addSuppression("03O1");
      node0.replaceChild(node2, node1);
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      node0.removeProp(15);
      Node node1 = Node.newNumber(1454.498);
      node1.setOptionalArg(false);
      node0.replaceChild(node1, node1);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.removeProp(105);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node0.isGetElem();
      Node node1 = new Node(42, node0, node0, node0, node0);
      Node node2 = Node.newString("NUMBER 0.0\n", 111, 38);
      node1.isDebugger();
      node2.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags((-1758));
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.setMutatesThis();
      node1.getChildAtIndex(2495);
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.removeProp(105);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte) (-109);
      byteArray0[4] = (byte)77;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node0.isGetElem();
      Node node1 = new Node(42, node0, node0, node0, node0);
      node1.isParamList();
      node0.putIntProp((-2501), 54);
      node0.srcref(node1);
      node1.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.getStaticSourceFile();
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[3];
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[8];
      JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.NUMBER_STRING_BOOLEAN;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.CHECKED_UNKNOWN_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSTypeNative jSTypeNative4 = JSTypeNative.STRING_TYPE;
      jSTypeNativeArray0[4] = jSTypeNative4;
      JSTypeNative jSTypeNative5 = JSTypeNative.DATE_FUNCTION_TYPE;
      jSTypeNativeArray0[5] = jSTypeNative5;
      JSTypeNative jSTypeNative6 = JSTypeNative.ERROR_FUNCTION_TYPE;
      jSTypeNativeArray0[6] = jSTypeNative6;
      JSTypeNative jSTypeNative7 = JSTypeNative.NULL_TYPE;
      jSTypeNativeArray0[7] = jSTypeNative7;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      jSTypeArray0[0] = jSType0;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node0 = Node.newString("");
      TemplateType templateType0 = jSTypeRegistry1.getObjectElementKey();
      ObjectType objectType0 = jSTypeRegistry1.createObjectType("*+W`}", node0, (ObjectType) templateType0);
      jSTypeArray0[1] = (JSType) objectType0;
      JSType jSType1 = jSTypeRegistry0.createNullableType(jSTypeArray0[0]);
      jSTypeArray0[2] = jSType1;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = new Node(15, 15, 15);
      Node node1 = new Node(15, node0);
      Node node2 = new Node(15, node1, node1, 51, 16);
      Node node3 = node1.removeFirstChild();
      Locale locale0 = Locale.US;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      node2.setDirectives(set0);
      node2.getLength();
      node1.isFor();
      node1.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node2.isEmpty();
      node0.isGetElem();
      node0.isParamList();
      node2.putIntProp(2, 120);
      Node node4 = node1.srcref(node2);
      node3.isCase();
      Node node5 = new Node(2502, node4, node2, node3, 1073741824, 40);
      node5.getIntProp(node0.SYNTHETIC_BLOCK_PROP);
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = Node.newString("x`~_nal&GJ[}", 117, 117);
      node0.isGetElem();
      node0.detachChildren();
      node0.isVar();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = new Node(31, node0, 64, 40);
      Node[] nodeArray0 = new Node[7];
      node1.useSourceInfoFromForTree(node0);
      nodeArray0[2] = node0;
      Node node2 = new Node(39, nodeArray0);
      nodeArray0[3] = node2;
      nodeArray0[4] = node0;
      nodeArray0[5] = node1;
      nodeArray0[6] = node0;
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      String string0 = "x`~_nal&GJ[}";
      Node node0 = Node.newString("x`~_nal&GJ[}", 117, 117);
      node0.isAssignAdd();
      node0.isGetElem();
      node0.detachChildren();
      node0.isVar();
      Node node1 = new Node((-1585), node0, node0, node0);
      node0.isLocalResultCall();
      node0.isDelProp();
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0);
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node.mergeLineCharNo((-1823), 823);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) templateType0, (List<JSType>) arrayList0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      node0.isOr();
      String string0 = "originalname";
      String string1 = "";
      boolean boolean0 = false;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string1, boolean0);
      boolean boolean1 = false;
      String string2 = "*h";
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, boolean1, string2);
      Object object0 = null;
      try {
        object0 = new Object();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node.mergeLineCharNo((-1823), 823);
      Node node0 = Node.newNumber((-1.0), 44, 1023);
      node0.isAdd();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isFor();
      node0.getCharno();
      node0.isGetElem();
      node0.getJSType();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = new Node((-3333), (Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newNumber((-34.8007), (-4447), (-4447));
      node0.isContinue();
      node0.isRegExp();
      node0.hasChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node0.isEmpty();
      node0.getProp(79);
      node0.hasMoreThanOneChild();
      node0.isBlock();
      node0.isNull();
      Node node1 = new Node(131072, node0, node0);
      node0.clonePropsFrom(node1);
      node1.isAnd();
      Node.newString(12, "-306eQM#OxK6%1p", 4, 53);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = new Node(40, 306654252, 1205);
      Node node1 = new Node(36, node0);
      node1.setWasEmptyNode(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      node1.setSideEffectFlags(node_SideEffectFlags5);
      node0.isAssignAdd();
      node1.getLastSibling();
      int int0 = 40;
      Node.extractLineno(int0);
      String string0 = "QuC#-~@vPo7.'";
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(51, node0, node0);
      node0.isIf();
      node1.isTrue();
      Node node2 = new Node(400);
      Node node3 = Node.newString("e%+Y75K~W)RQnD+so", 1870, 2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node0.setSideEffectFlags(node_SideEffectFlags1);
      Node node4 = node3.useSourceInfoIfMissingFrom(node0);
      node4.getInputId();
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = new Node((-483));
      node0.getString();
      int int0 = 669;
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node.newNumber((-1.0));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node0 = Node.newNumber((-175.866336600735), (-1567), 88);
      node0.setIsSyntheticBlock(false);
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newNumber(559.183700446);
      node0.getAncestors();
      node0.isVarArgs();
      node0.isFalse();
      node0.setQuotedString();
      String string0 = "IM+$@";
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node.extractLineno(8202);
      Node node0 = new Node(2);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isAssign();
      Node node2 = Node.newString("6*Af]<0EB.WG~");
      node2.detachChildren();
      node0.putBooleanProp(54, false);
      Node.newString(29, "6*Af]<0EB.WG~", 3405, 0);
      node2.detachChildren();
      node2.toStringTree();
      Node node3 = Node.newString(50, "STRING 6*Af]<0EB.WG~\n");
      node2.isHook();
      node1.isDebugger();
      node0.getProp(3936);
      node0.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(217088);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      node3.copyInformationFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node.mergeLineCharNo((-1823), 823);
      Node node0 = Node.newNumber((-1.0), 44, 1023);
      node0.isAdd();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isFor();
      node0.mayMutateGlobalStateOrThrow();
      node0.isCatch();
      node0.isComma();
      node0.isObjectLit();
      node0.removeChildren();
      node0.copyInformationFrom((Node) null);
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      String string0 = "x`~_nal&GJ[}";
      Node node0 = Node.newString("x`~_nal&GJ[}", 117, 117);
      node0.isAssignAdd();
      node0.isDo();
      node0.detachChildren();
      node0.isVar();
      String string1 = "\\t|>p@KwH@bCVpEyd+c";
      Node node1 = new Node((-1585), node0, node0, node0);
      node0.isLocalResultCall();
      node0.isDelProp();
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0, string1);
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node.mergeLineCharNo((-1823), 823);
      Node node0 = Node.newNumber((-1.0), 44, 1023);
      node0.isAdd();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node0.isFor();
      node0.getCharno();
      node0.getBooleanProp((-1823));
      node0.isGetElem();
      node0.getJSType();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      node0.removeProp(105);
      Node node1 = Node.newNumber(1454.498);
      node1.isEquivalentTo(node0);
      node0.isEquivalentToShallow(node1);
      node1.isVar();
      node0.setJSType((JSType) null);
      node0.setIsSyntheticBlock(false);
      node0.isUnscopedQualifiedName();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = new Node(4, 44, 1093);
      Node node1 = new Node(1093, node0, node0, node0, 1, 53);
      Node node2 = Node.newString("", 42, 55);
      Node node3 = new Node(1093, node1, node2, node1);
      node3.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newString("enum{", 3635, 2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry0.hasNamespace("enum{");
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.checkTreeEqualsImpl(node1);
      Node node2 = new Node(3635, node0, node0);
      node2.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node0.getBooleanProp(55);
      node1.setSideEffectFlags(node_SideEffectFlags0);
      node2.mayMutateArguments();
      node2.getDirectives();
      node1.getLastChild();
      // Undeclared exception!
      try { 
        node2.getStaticSourceFile();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got PARAM_LIST
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = new Node(4, 4, 1093);
      Node node1 = new Node(1093, node0, node0, node0, 1, 53);
      Node node2 = Node.newString("Py#h.,v\"Iy.IdW6", 42, 55);
      Node node3 = new Node(1093, node1, node2, node1);
      Node node4 = new Node((-118), node0, 37, 55);
      node2.isEquivalentToTyped(node4);
      double double0 = 186.344802323;
      Node.newNumber(double0, node2.SLASH_V, node1.REFLECTED_OBJECT);
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newNumber(1468.0);
      node0.isVar();
      node0.putIntProp(394, 394);
      Node node1 = node0.cloneTree();
      node0.setString("TypeError");
      node0.removeChild(node1);
      node0.cloneTree();
      // Undeclared exception!
      try { 
        node0.isOr();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 394
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node.extractLineno(8196);
      Node node0 = new Node(2);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isAssign();
      Node node2 = Node.newString("6*Af]<0EB.WG~");
      node2.detachChildren();
      node0.putBooleanProp(54, false);
      Node node3 = Node.newString(29, "6*Af]<0EB.WG~", 3405, 0);
      node2.detachChildren();
      node3.putProp(9, node0);
      node3.getChangeTime();
      node0.isWith();
      node3.toStringTree();
      node2.getExistingIntProp(node1.SIDE_EFFECTS_FLAGS_MASK);
      node1.isCast();
      node2.getString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      double double0 = 0.7;
      // Undeclared exception!
      try { 
        Node.newNumber(double0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 9
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      String string0 = node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.removeProp(32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node0.isGetElem();
      node0.isEmpty();
      node0.getProp(79);
      node0.hasMoreThanOneChild();
      node0.isBlock();
      node0.isNull();
      node0.isFunction();
      node0.isThrow();
      node0.isVoid();
      node0.getType();
      String string1 = "3l%\\^@VhjLLYK]";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(string1);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      PrintWriter printWriter0 = mockPrintWriter1.append((CharSequence) string0);
      node0.appendStringTree(printWriter0);
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-483));
      node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "empty_block");
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = Node.newString((-483), "UpULOw[Zk:|^k<N?$JW", 42, (-3094));
      node0.setSourceEncodedPosition(40);
      node0.isName();
      Node node1 = node0.cloneTree();
      node1.getString();
      node1.removeChildren();
      node0.setType(46);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(77);
      Node node1 = new Node(1, node0);
      node0.setType(30);
      node1.isUnscopedQualifiedName();
      node1.replaceChildAfter(node0, node0);
      node1.isReturn();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      Node node2 = Node.newString(":<6dR9KM-yVM Gg%cj");
      node2.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newString("9S{k8F", 51, 971);
      node3.getInputId();
      Node.newString(16, "inferred", 39, 15);
      node1.setSourceEncodedPosition(0);
      node1.isName();
      node3.cloneTree();
      Node node4 = new Node((-2963), node1, 3224, 50);
      node4.removeChildren();
      node3.isDec();
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newNumber(1468.0);
      Node node1 = new Node(40, node0, node0, node0, node0);
      node1.toStringTree();
      Object object0 = new Object();
      Node node2 = node1.removeChildren();
      node1.isEquivalentToShallow(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.mergeLineCharNo(51, 42);
      node2.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = Node.newNumber((-2231.2320882249));
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node.extractLineno(8202);
      Node node0 = new Node(2);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isAssign();
      Node node2 = Node.newString("6*Af]<0EB.WG~");
      node2.detachChildren();
      node0.putBooleanProp(54, false);
      Node node3 = Node.newString(29, "6*Af]<0EB.WG~", 3405, 0);
      node2.detachChildren();
      node3.putProp(9, node0);
      node2.toStringTree();
      Node.newString(50, "STRING 6*Af]<0EB.WG~\n");
      node2.isHook();
      node1.isDebugger();
      node0.getProp(3936);
      node0.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearSideEffectFlags();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(103);
      node0.isEquivalentTo(node0, true, true, true);
      node0.isOnlyModifiesArgumentsCall();
      node0.isDefaultCase();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = Node.newNumber((double) 256, 256, 256);
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(256, node0, node0, node0, node0, 0, 1);
      Node node2 = Node.newNumber((double) 4);
      node2.setVarArgs(false);
      node0.isQuotedString();
      node0.isComma();
      node0.getProp(33);
      node0.getChangeTime();
      node1.putIntProp(74, 8);
      node1.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = new Node(16, 16, 16);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(56, node0, node0, node0, node0);
      node1.isEquivalentTo(node1);
      node1.addChildrenAfter(node0, node0);
      // Undeclared exception!
      try { 
        Node.newNumber((double) node1.COLUMN_MASK, node0.REFLECTED_OBJECT, node1.REFLECTED_OBJECT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node.extractLineno(8202);
      Node node0 = new Node(2);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isAssign();
      Node node2 = Node.newString("6*Af]<0EB.WG~");
      node2.detachChildren();
      node0.putBooleanProp(54, false);
      Node node3 = Node.newString(29, "6*Af]<0EB.WG~", 3405, 0);
      node2.detachChildren();
      node3.putProp(9, node0);
      node2.toStringTree();
      Node node4 = Node.newString(50, "STRING 6*Af]<0EB.WG~\n");
      node2.isHook();
      node1.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node4.isContinue();
      node0.isStringKey();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = new Node((-3599), (-3599), (-3599));
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.getExistingIntProp((-3599));
      String string0 = "YF*a+d";
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(13, "fAAl", 2503, 0);
      node0.isTry();
      Node node1 = Node.newString(40, "fAAl");
      node1.getString();
      node1.isNE();
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(2503, "Id2=>", 0, 98);
      node0.isTry();
      Node.newString(300, "R");
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = Node.newString(4, "_}f>*aS");
      node0.isFalse();
      node0.putProp(39, "_}f>*aS");
      node0.isTypeOf();
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Node node0 = new Node(42);
      node0.isTypeOf();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(4, node0, (Node) null, node0);
      int int0 = 16;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      // Undeclared exception!
      try { 
        node_SideEffectFlags2.setMutatesThis();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = Node.newString(1270, "K");
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(0, 53, 53);
      Node node1 = new Node(0, node0, node0, (Node) null);
      boolean boolean0 = false;
      boolean boolean1 = true;
      node1.isEquivalentTo(node0, boolean0, boolean1, boolean1);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      node0.removeProp(105);
      Node node1 = Node.newNumber(1454.498);
      node1.isEquivalentTo(node0);
      node0.isEquivalentToShallow(node1);
      node1.isVar();
      node0.setJSType((JSType) null);
      node0.setIsSyntheticBlock(false);
      node0.isTry();
      node1.isNumber();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      node0.removeProp(105);
      Node node1 = Node.newNumber(1454.498);
      node1.isEquivalentTo(node0);
      node0.isEquivalentToShallow(node1);
      node1.isVar();
      node0.setJSType((JSType) null);
      node0.isTry();
      node1.isNumber();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(4, node0, node0);
      node1.isEquivalentTo(node0);
      node1.isEquivalentToShallow(node0);
      node1.isVar();
      node0.setJSType((JSType) null);
      node0.isTry();
      node1.isNumber();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newNumber((double) 57);
      Node node1 = new Node(57, node0, node0, node0);
      node0.isOptionalArg();
      node0.isEquivalentToTyped(node1);
      node1.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node0.isThrow();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.toStringTree();
      Node node1 = new Node(30, node0, node0, node0, node0, 39, (-527));
      Node node2 = Node.newNumber((double) 56);
      node1.setVarArgs(true);
      node2.isQuotedString();
      Node node3 = new Node(15, node1, node2, 52, 54);
      node3.isComma();
      node2.getProp(42);
      node3.getChangeTime();
      node2.putIntProp((-1788), 1114);
      node0.isEquivalentToTyped(node3);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.putIntProp(57, Integer.MIN_VALUE);
      node0.setQuotedString();
      node0.isThrow();
      node0.setOptionalArg(false);
      node0.wasEmptyNode();
      node0.setSourceFileForTesting("{\"{5H2x&");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(119);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node0.setSideEffectFlags(node_SideEffectFlags1);
      Node node1 = null;
      Node node2 = new Node(node0.REFLECTED_OBJECT, node0, node1);
      node2.getJSType();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      Node node2 = Node.newString(":<6dR9KM-yVM Gg%cj");
      node2.isOnlyModifiesArgumentsCall();
      node0.putIntProp(50, 31);
      Node node3 = node0.srcref(node1);
      node3.setSourceEncodedPosition(36);
      node0.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(40);
      node_SideEffectFlags0.clearSideEffectFlags();
      node2.isGetterDef();
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      Node node1 = node0.getAncestor(0);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node1.getJsDocBuilderForNode();
      node0.getLastChild();
      node1.isGetProp();
      node1.addChildBefore(node0, node0);
      node_SideEffectFlags3.setReturnsTainted();
      // Undeclared exception!
      try { 
        node_SideEffectFlags3.setMutatesGlobalState();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0, (-1336), 0);
      node0.getFirstChild();
      node_SideEffectFlags3.setMutatesThis();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.removeProp(105);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node0.isGetElem();
      Node node1 = new Node(42, node0, node0, node0, node0);
      Node node2 = Node.newString("NUMBER 0.0\n", 111, 38);
      node1.isDebugger();
      node2.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags((-1758));
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node_SideEffectFlags5.setMutatesThis();
      node1.removeChildAfter(node0);
      int int0 = 2495;
      node1.getChildAtIndex(int0);
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newString("reflected_object", 3191, 0);
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(1, node0);
      node0.isDefaultCase();
      node1.removeChildAfter(node0);
      node1.getIntProp(node0.JSDOC_INFO_PROP);
      node0.isOnlyModifiesArgumentsCall();
      node1.isDefaultCase();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getSourceOffset();
      node0.removeProp((-1));
      Node node1 = Node.newNumber(0.0, (-2103), 54);
      Node node2 = Node.newNumber(256.0, 31, 36);
      Node node3 = node0.removeChildren();
      node0.isSyntheticBlock();
      node2.setSourceFileForTesting((String) null);
      node2.isOnlyModifiesThisCall();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      nodeArray0[4] = node2;
      int int0 = 1271;
      Node node4 = node2.removeChildAfter(node1);
      int int1 = 448;
      Node node5 = new Node(node2.INPUT_ID, nodeArray0, int0, int1);
      node3.putProp(node2.STATIC_SOURCE_FILE, node5);
      nodeArray0[3].addChildToFront(node5);
      node4.isEmpty();
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newNumber((double) 57);
      Node node1 = new Node(57, node0, node0, node0);
      node0.getQualifiedName();
      node0.isOptionalArg();
      node1.isObjectLit();
      node0.removeChildAfter(node1);
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-483));
      node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "empty_block");
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = Node.newString((-483), "UpULOw[Zk:|^k<N?$JW", 42, (-3094));
      node0.setIsSyntheticBlock(true);
      node0.isUnscopedQualifiedName();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node.extractLineno(8202);
      Node node0 = new Node(2);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isAssign();
      Node node2 = Node.newString("6*Af]<0EB.WG~");
      node2.detachChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.areAllFlagsSet();
      Node.newString(1, "", 16, 2063);
      node1.isName();
      node2.cloneTree();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isSyntheticBlock();
      boolean boolean0 = node0.isOnlyModifiesArgumentsCall();
      String string0 = "zZ?";
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0);
      node0.appendStringTree(mockPrintStream0);
      double double0 = 1454.498;
      node0.removeProp(node0.NO_SIDE_EFFECTS);
      Node.newNumber(double0);
      double double1 = (-1213.93);
      Node node1 = Node.newNumber(double1);
      node0.setOptionalArg(boolean0);
      int int0 = 234;
      Node node2 = new Node(int0, node0, node0, node0);
      node2.clonePropsFrom(node1);
      node2.getJSType();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node.extractLineno(8202);
      Node node0 = new Node(8202);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isAssign();
      Node node2 = Node.newString("6*Af]<0EB.WG~");
      node2.detachChildren();
      node0.putBooleanProp(54, false);
      Node node3 = Node.newString(29, "6*Af]<0EB.WG~", 3405, 0);
      node2.detachChildren();
      node3.putProp(9, node0);
      node2.toStringTree();
      Node node4 = Node.newString(50, "STRING 6*Af]<0EB.WG~\n");
      node2.isHook();
      node1.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node4.isContinue();
      node0.isStringKey();
      node3.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(13, "fAAl", 2503, 0);
      node0.isTry();
      Node node1 = Node.newString(40, "fAAl");
      Node node2 = Node.newString((-3805), "fAAl", 461845907, 48);
      node2.isName();
      Node node3 = node1.cloneTree();
      node1.removeChildren();
      node3.isLabel();
      node3.children();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = new Node(103);
      node0.isNumber();
      node0.children();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newNumber((-34.8007), (-4447), (-4447));
      node0.isContinue();
      node0.isRegExp();
      node0.hasChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node0.isBreak();
      node0.getProp(79);
      node0.isNull();
      node0.isBlock();
      node0.isNull();
      Node node1 = new Node((-1205));
      Node node2 = Node.newNumber((-34.8007), (-4447), (-4447));
      Node node3 = new Node(31, node0, node2, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      EnumType enumType0 = jSTypeRegistry0.createEnumType("pi@0S;k8", node1, (JSType) null);
      enumType0.getElementsType();
      double double0 = (-1.0);
      node3.setDouble(double0);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("kY");
      node0.setString("6.|ALVh`<?RYu@Ur#");
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node node0 = new Node(15, (Node[]) null, 52, 4);
      node0.isNot();
      String string0 = "FiF,-G{UuE?{N?'_6>";
      Node.newString(node0.NO_SIDE_EFFECTS, string0);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = new Node(56);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.removeProp(105);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)93;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[2] = (byte)15;
      byteArray0[4] = (byte)77;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node0.isGetElem();
      Node node1 = new Node(42, node0, node0, node0, node0);
      node1.isParamList();
      node0.putIntProp((-2501), 54);
      Node node2 = node0.srcref(node1);
      node1.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.getStaticSourceFile();
      node1.getChildBefore(node0);
      node1.isHook();
      node2.isNoSideEffectsCall();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = new Node(57);
      Node node1 = new Node(1, node0, 12, 4);
      Node node2 = Node.newString("", 29, 55);
      node2.setSourceFileForTesting("");
      node0.addChildrenToBack(node2);
      node2.isVar();
      Node node3 = node1.cloneTree();
      node2.isNE();
      node2.clonePropsFrom(node1);
      node2.isObjectLit();
      // Undeclared exception!
      try { 
        node3.isNE();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node.extractLineno(8202);
      Node node0 = new Node(2);
      Node node1 = new Node(0, node0, node0, node0, node0);
      node1.isAssign();
      Node node2 = Node.newString("6*Af]<0EB.WG~");
      node2.detachChildren();
      node0.putBooleanProp(54, false);
      Node node3 = Node.newString(29, "6*Af]<0EB.WG~", 51, 0);
      node2.detachChildren();
      node3.putProp(39, node0);
      node2.toStringTree();
      Node node4 = Node.newString(50, "STRING 6*Af]<0EB.WG~\n");
      node2.isHook();
      node1.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node4.isContinue();
      node3.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isCast();
      node0.detachChildren();
      node0.setChangeTime(40);
      node0.isVar();
      node0.isEquivalentToShallow(node0);
      Node node1 = node0.cloneTree();
      node0.isQualifiedName();
      node1.getProp(35);
      node1.hasMoreThanOneChild();
      node0.isBlock();
      node0.getChangeTime();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isGetProp();
      node0.setChangeTime(3405);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.removeProp(745);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)57;
      node0.detachChildren();
      node0.putProp((byte)57, node_SideEffectFlags1);
      node0.getChangeTime();
      node0.putBooleanProp(9, true);
      node0.isWith();
      node0.getExistingIntProp(149);
      node0.getString();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      boolean boolean0 = true;
      node0.setOptionalArg(boolean0);
      int int0 = (-1667);
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      node0.removeProp(15);
      Node node1 = Node.newNumber(1454.498);
      node1.wasEmptyNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setAllFlags();
      Node node2 = Node.newNumber((-34.8007), 124, 152);
      Node node3 = Node.newNumber((double) 57, 4095, (-2755));
      Node node4 = new Node(46, node3, node2, node2);
      node2.isScript();
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newString((-1503), "|!Vx#Bv9@gCqF0 7LC");
      node0.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node_SideEffectFlags0.setReturnsTainted();
      node0.isBlock();
      node0.isScript();
      node0.getJSDocInfo();
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-483));
      node_SideEffectFlags0.setMutatesArguments();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ArrayDeque<JSType> arrayDeque0 = new ArrayDeque<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) arrayDeque0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node((-483), node0, node0, node0, node0);
      node1.getQualifiedName();
      Node node2 = new Node((-3102), node1, node0);
      node2.isOnlyModifiesArgumentsCall();
      node2.toStringTree();
      Node node3 = null;
      try {
        node3 = new Node(node0.JSDOC_INFO_PROP, node2, node2, node1, node1, node0.OPT_ARG_NAME, node2.FREE_CALL);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = Node.newString("zQ~Je@/.M@Mo-Oz<I3/");
      node0.siblings();
      Node node1 = Node.newString("^bLhuu)Ah?4bH9", 57, (-603));
      Node node2 = new Node((-297), node0, node1, node1);
      node0.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setMutatesArguments();
      node_SideEffectFlags8.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(117, nodeArray0, 117, (-1096));
      Node node1 = new Node(117, node0, node0, node0);
      node1.isEmpty();
      node1.getLength();
      node0.getProp(55);
      node0.hasMoreThanOneChild();
      node1.isBlock();
      node1.isNull();
      node0.isFunction();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("}y7y!&b&;a5gf>'C.h7");
      node_SideEffectFlags0.setReturnsTainted();
      node0.isThrow();
      node_FileLevelJsDocBuilder0.append("}y7y!&b&;a5gf>'C.h7");
      node1.addChildAfter(node0, node0);
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      // Undeclared exception!
      try { 
        node_SideEffectFlags6.clearSideEffectFlags();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1088);
      node0.isDo();
      node0.toString(false, false, false);
      node0.getChangeTime();
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString("gNCt[U)V+CX,l");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getAncestors();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gNCt[U)V+CX,l");
      node0.setLineno((-3805));
      node0.isUnscopedQualifiedName();
      node0.toString(false, true, true);
      node0.getQualifiedName();
      node0.getSourceOffset();
      node0.removeProp(53);
      Node node1 = Node.newString(12, "com.google.javascript.rhino.jstype.FunctionType", 55, 3147);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.replaceChild(node0, node2);
      node2.addChildrenToFront(node0);
      node1.isDebugger();
      node2.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newNumber(1454.498);
      node0.isName();
      Node node1 = node0.cloneTree();
      node1.getSourceOffset();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString((-1732), "HWtth)t(QEI7DlStiG", (-1732), 93);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " : ");
      node0.type = (-473);
      node0.isQuotedString();
      node0.getAncestors();
      node0.mayMutateArguments();
      node0.isUnscopedQualifiedName();
      node0.hasMoreThanOneChild();
      boolean boolean0 = node0.isString();
      Node.mergeLineCharNo(55, 1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node0.getJsDocBuilderForNode();
      node0.isTrue();
      Node node1 = new Node(15, node0, 4095, 30);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.checkTreeEquals(node1);
      node2.setVarArgs(boolean0);
      node0.isLabelName();
      node1.isSyntheticBlock();
      node0.removeChildren();
      int int0 = (-1301);
      node0.putProp(node2.ORIGINALNAME_PROP, node2);
      int int1 = (-1445);
      // Undeclared exception!
      try { 
        Node.newNumber((double) node1.VAR_ARGS_NAME, int0, int1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -473
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newNumber(1468.413929983989);
      Node node1 = node0.cloneTree();
      Node node2 = new Node(48, 8, 4);
      node2.isTrue();
      node2.isEquivalentTo(node1, false, false, false);
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node1.getInputId();
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = Node.newString("=%Z#{*t");
      node0.getSourcePosition();
      node0.isQuotedString();
      node0.isCatch();
      node0.isFunction();
      node0.isComma();
      Node node1 = new Node(57, node0, node0, node0, node0);
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = node0.getAncestor(0);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.toStringTree();
      node0.isNew();
      node1.getJSDocInfo();
      node1.isCall();
      node1.isSyntheticBlock();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newNumber(559.183700446);
      node0.getAncestors();
      node0.isVarArgs();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node1 = Node.newString(57, "ZuN#cu8>qr[Te#APa+");
      node1.isScript();
      node1.isUnscopedQualifiedName();
      node1.getIntProp(15);
      Node node2 = new Node(118, node0, node1, node1, (-3226), 57);
      Node node3 = node2.removeChildren();
      Node.newString("q<R0", (-1193), 47);
      node2.isWith();
      node2.isNoSideEffectsCall();
      node1.isBreak();
      node0.checkTreeEquals(node3);
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(111);
      Node node1 = Node.newString("kY");
      Node node2 = new Node(1, node0, 38, 16);
      node2.isNull();
      node1.setIsSyntheticBlock(true);
      node2.setOptionalArg(true);
      node0.isCatch();
      node1.isComma();
      Node node3 = Node.newString(103, "3|\"$(Q..}qN");
      node1.isString();
      node3.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = new Node(117);
      node0.isDo();
      node0.detachChildren();
      node0.isFromExterns();
      node0.setChangeTime(297);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("U;F6,8x`!+mh\"N8\u0004", false);
      Node node1 = new Node(36, node0, node0, node0, 53, (-3564));
      Node node2 = Node.newString("U;F6,8x`!+mh\"N8\u0004");
      node1.isOnlyModifiesArgumentsCall();
      node1.isGetElem();
      node1.isInstanceOf();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node node4 = Node.newString(38, "x`~_nal&GJ[}", 55, 38);
      Node node5 = new Node(46, node0, node4, node4);
      node4.getString();
      node5.isNE();
      node3.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(77);
      Node node1 = new Node(1, node0);
      node1.isUnscopedQualifiedName();
      node1.isReturn();
      node1.isReturn();
      node1.getSideEffectFlags();
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node1.setDirectives(linkedHashSet0);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      Node node2 = Node.newString(":<6dR9KM-yVM Gg%cj");
      node2.isOnlyModifiesArgumentsCall();
      Node.newString(":<6dR9KM-yVM Gg%cj");
      node2.isOnlyModifiesArgumentsCall();
      node2.isDefaultCase();
      node2.getNext();
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(13, "fAAl", 2503, 2503);
      node0.isTry();
      Node node1 = Node.newString(40, "fAAl");
      node0.setJSType((JSType) null);
      node1.isNumber();
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1190);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node(64, nodeArray0, 155, (-2945));
      nodeArray0[0].removeChildAfter(nodeArray0[0]);
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node0.isGetElem();
      String string0 = "\\`F(\"";
      Node.newString(string0);
      int int0 = (-1281);
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = new Node(57, nodeArray0, 51, 155);
      node0.removeChildAfter(node1);
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setMutatesThis();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isQuotedString();
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      node1.addSuppression("thi63s");
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      nodeArray0[5] = node1;
      Node node2 = new Node(56, nodeArray0, 32, 54);
      node2.getInputId();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = new Node(40);
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 1);
      Node node2 = Node.newNumber((double) 4);
      node2.setVarArgs(false);
      node0.isCast();
      node0.isComma();
      node0.getProp(33);
      int int0 = Node.NO_SIDE_EFFECTS;
      node1.putIntProp(74, 8);
      node1.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = Node.newString("gNCt[U)V+CX,l");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getAncestors();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gNCt[U)V+CX,l");
      node0.setLineno((-3805));
      node0.isUnscopedQualifiedName();
      node0.toString(false, false, false);
      node0.getQualifiedName();
      node0.getSourceOffset();
      node0.removeProp(53);
      Node node1 = Node.newNumber(4232.365884215841, 1757, 31);
      Node.newNumber((double) 4095, 1015, 57);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node.newString(1, "gNCt[U)V+CX,l");
      node1.isScript();
      node0.isUnscopedQualifiedName();
      Node node2 = Node.newString("gNCt[U)V+CX,l", 1517, 30);
      node2.addChildrenToBack(node1);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = new Node(57);
      Node node1 = new Node(1, node0, 12, 4);
      Node node2 = Node.newString("", 29, 55);
      node0.addChildrenToBack(node2);
      node2.isVar();
      node1.cloneTree();
      node0.getInputId();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newNumber((double) 256, 256, 256);
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(256, node0, node0, node0, node0, 0, 1);
      Node.newNumber((double) 4);
      Node.newNumber((double) 46);
      node1.isVar();
      JSType jSType0 = null;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node0, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      // Undeclared exception!
      try { 
        enumElementType1.getTemplateTypes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.Iterators$7");
      Node node1 = new Node(32, node0, node0);
      node0.checkTreeEquals(node1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      node0.putIntProp((-2705), (-2705));
      node0.isIf();
      node0.isTrue();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node1.isWith();
      node2.isReturn();
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1093);
      node0.isDo();
      node0.isReturn();
      node0.setSourceEncodedPositionForTree(1093);
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = Node.newNumber(1453.177736048931);
      node0.isVar();
      node0.isIf();
      Node node1 = node0.cloneTree();
      node1.setLength(48);
      node0.isThis();
      node1.isDefaultCase();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node.mergeLineCharNo((-1944), (-1944));
      Node node0 = Node.newString("&d2g[USil96\"@)g", (-1944), (-1944));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      node0.replaceChildAfter((Node) null, (Node) null);
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node0 = new Node(40);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.setLineno(40);
      node0.getQualifiedName();
      node0.getJSDocInfo();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.Iterators$7");
      Node node1 = new Node(32, node0, node0);
      node0.checkTreeEquals(node1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node node2 = Node.newString(62, "", 3, 50);
      node2.isName();
      Node node3 = node0.cloneTree();
      Node node4 = node1.removeChildren();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node3.isLabel();
      node1.children();
      node4.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newString("gNCt[U)V+CX,l");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getAncestors();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gNCt[U)V+CX,l");
      node0.setLineno((-3795));
      node0.isUnscopedQualifiedName();
      node0.toString(false, false, false);
      node0.getQualifiedName();
      node0.getSourceOffset();
      node0.removeProp(53);
      Node node1 = Node.newNumber(4232.365884215841, 1757, 31);
      Node.newNumber((double) 4095, 1015, 57);
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node node2 = Node.newString(1, "gNCt[U)V+CX,l");
      node1.isScript();
      node0.isUnscopedQualifiedName();
      node2.getIntProp((-1128));
      Node node3 = new Node(8, node2, node2, node1, 30, 56);
      Node.newString((-593), "STRING gNCt[U)V+CX,l", 57, 1);
      node3.addChildrenToBack(node1);
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      node0.removeProp(105);
      Node node1 = Node.newNumber(1454.498);
      node1.isEquivalentTo(node0);
      node0.isEquivalentToShallow(node1);
      node1.mayMutateGlobalStateOrThrow();
      node0.isCatch();
      node1.isComma();
      node1.isObjectLit();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.setSourceEncodedPositionForTree(0);
      node0.isEquivalentToShallow(node0);
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      Node node2 = Node.newString(":<6dR9KM-yVM Gg%cj");
      node2.isOnlyModifiesArgumentsCall();
      node2.isParamList();
      Node node3 = new Node(46);
      node3.putIntProp((-273), 4);
      Node node4 = node3.srcref(node0);
      node4.setIsSyntheticBlock(true);
      node3.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node3.isVoid();
      node1.toStringTree();
      node4.isNew();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newString((-1503), "]U{Tu9\"]RY'<YV*E");
      node0.isTypeOf();
      Node node1 = Node.newString(57, "]U{Tu9\"]RY'<YV*E");
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node1.setOptionalArg(true);
      int int0 = Node.FREE_CALL;
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newString((-1503), "|!Vx#Bv9@gCqF0 7LC");
      node0.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node0.toString(false, true, false);
      int int0 = 306651136;
      Node node1 = new Node(int0, node0.FLAG_ARGUMENTS_UNMODIFIED, node0.STATIC_SOURCE_FILE);
      node0.hasChild(node1);
      // Undeclared exception!
      try { 
        node0.getChangeTime();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1503
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newNumber((-34.8007), (-4447), (-4447));
      node0.isContinue();
      node0.isRegExp();
      node0.hasChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      node0.isEquivalentTo(node0);
      node0.getProp(79);
      node0.hasMoreThanOneChild();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node0.isEmpty();
      node0.getProp((-4761));
      node0.hasMoreThanOneChild();
      node0.isBlock();
      node0.isNull();
      node0.isFunction();
      node0.isThrow();
      node0.isOnlyModifiesThisCall();
      node0.isStringKey();
      node0.getChangeTime();
      node0.isName();
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newString((-445), "c.&9s3&l");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[6];
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
      jSTypeArray0[0] = (JSType) objectType0;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[1] = jSType0;
      JSType jSType1 = modificationVisitor0.caseNullType();
      jSTypeArray0[2] = jSType1;
      String string0 = "";
      JSTypeExpression jSTypeExpression0 = new JSTypeExpression(node0, "");
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType jSType2 = jSTypeExpression0.evaluate(objectType0, jSTypeRegistry1);
      EnumType enumType0 = jSTypeRegistry0.createEnumType(string0, node0, jSType2);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      FunctionType functionType0 = enumType1.getConstructor();
      jSTypeArray0[3] = (JSType) functionType0;
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newString(629, "", 629, 629);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = Node.newString((-4096), "", 0, (-290));
      node0.getStaticSourceFile();
      node0.isOptionalArg();
      node0.isWhile();
      node0.isInc();
      node0.setWasEmptyNode(false);
      node0.wasEmptyNode();
      node0.srcref(node1);
      node0.isLabelName();
      Node.newString("", 2475, 18);
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = Node.newNumber((double) 256, 256, 256);
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(256, node0, node0, node0, node0, 0, 1);
      Node node2 = Node.newNumber((double) 4);
      node2.setVarArgs(false);
      node0.isQuotedString();
      node0.isComma();
      node2.children();
      node0.getProp(33);
      node0.getChangeTime();
      node1.putIntProp(74, 8);
      node1.isEquivalentToTyped(node1);
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.removeProp(105);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setThrows();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)93;
      Node node1 = Node.newNumber((double) 30);
      Node node2 = new Node((-211), 53, 3405);
      node1.addChildrenToFront(node2);
      node0.isEquivalentTo(node1);
      node1.isEquivalentToShallow(node0);
      node0.mayMutateGlobalStateOrThrow();
      node0.isCatch();
      node0.isComma();
      node0.getQualifiedName();
      node0.isObjectLit();
      node0.removeChildren();
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      node0.removeProp(105);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "CharMatcher.WHITESPACE");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      node0.isGetElem();
      Node node1 = Node.newString(29, "NUMBER 0.0\n", 15, 4095);
      Node node2 = new Node(55, node0, node0, node0, node1);
      Node node3 = Node.newString("m ", 40, (-37));
      node3.isParamList();
      node2.putIntProp(16, 1454);
      node0.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node1.getStaticSourceFile();
      Node node4 = node1.getChildBefore(node0);
      int int1 = (-3538);
      Node node5 = new Node(int1, node1, node4);
      node5.isHook();
      node3.isNoSideEffectsCall();
      node4.isWhile();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = new Node(77);
      Node node1 = new Node(1, node0);
      node1.isNull();
      node0.setIsSyntheticBlock(false);
      node1.isFunction();
      node0.isCatch();
      node0.isComma();
      node0.isReturn();
      node0.getChildBefore(node1);
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "(mf.}9@:jg)2q<@w~V-";
      Node node0 = Node.newString(2, "(mf.}9@:jg)2q<@w~V-", 13, (-733));
      Node node1 = new Node(2503, node0);
      node1.isAssignAdd();
      node0.isGetElem();
      Node node2 = new Node(55, node1, node0, node0, node1, 4095, 38);
      node0.isVar();
      int int0 = 1443;
      Node node3 = new Node(int0, node0, node0, node2);
      // Undeclared exception!
      try { 
        node3.isDelProp();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString("gNCt[U)V+CX,l");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getAncestors();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gNCt[U)V+CX,l");
      node0.setLineno((-3805));
      node0.isUnscopedQualifiedName();
      node0.toString(false, false, false);
      node0.getQualifiedName();
      node0.getSourceOffset();
      node0.removeProp(53);
      Node node1 = Node.newNumber((double) 47);
      node1.isEquivalentTo(node0);
      node1.isEquivalentToShallow(node0);
      node1.mayMutateGlobalStateOrThrow();
      node0.isCatch();
      node0.isComma();
      node1.isObjectLit();
      node1.removeChildren();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node0.isOnlyModifiesArgumentsCall();
      node1.isParamList();
      Node node2 = new Node(46);
      Node node3 = node2.srcref(node0);
      node2.isCase();
      node1.putIntProp(2, (-569));
      node1.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node3.getStaticSourceFile();
      Node node4 = node3.getChildBefore(node2);
      node1.isHook();
      node1.isNoSideEffectsCall();
      node4.isWhile();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node0.isInstanceOf();
      node1.isParamList();
      Node node2 = new Node(46);
      Node node3 = node2.srcref(node0);
      node0.isBlock();
      node1.isNull();
      node2.setIsSyntheticBlock(false);
      node3.isFunction();
      node2.isThrow();
      node3.isVoid();
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newNumber((-3295.54551), (-799), (-799));
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node0 = jSDocInfo0.getAssociatedNode();
      Node node1 = Node.newNumber((double) 57);
      node1.copyInformationFromForTree((Node) null);
      node0.replaceChildAfter(node1, node1);
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = Node.newNumber(1468.413929983989);
      Node node1 = node0.cloneTree();
      Node node2 = new Node(48, 8, 4);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isThrow();
      Node node3 = node0.clonePropsFrom(node1);
      node3.isNoSideEffectsCall();
      node0.isNew();
      node3.isNE();
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(13, "fAAl", 47, 0);
      node0.isTry();
      Node node1 = Node.newString(40, "fAAl");
      node1.isTrue();
      node1.useSourceInfoFromForTree(node0);
      Node node2 = new Node(36);
      node2.putIntProp(38, 57);
      Node node3 = node0.srcref(node1);
      node3.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node node4 = new Node(4095, node0);
      node4.isDec();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newString(4, "_}f>*aS");
      node0.isFalse();
      node0.setQuotedString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_}f>*aS");
      node0.putProp(21, "_}f>*aS");
      node0.isAdd();
      node0.isGetElem();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-483));
      node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "empty_block");
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.areAllFlagsSet();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = new Node((-1445));
      node0.isDelProp();
      node0.getLineno();
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newString(54, "", 8, (-290));
      node0.getStaticSourceFile();
      node1.isOptionalArg();
      node0.isWhile();
      node0.isInc();
      node1.setWasEmptyNode(false);
      node1.wasEmptyNode();
      node0.srcref(node0);
      Node.newString("", 48, 52);
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node0.isOnlyModifiesArgumentsCall();
      node1.isParamList();
      Node node2 = new Node(46);
      Node node3 = node2.srcref(node0);
      node1.isReturn();
      node1.isName();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node1;
      nodeArray0[1] = node3;
      nodeArray0[2] = node2;
      nodeArray0[3] = node3;
      nodeArray0[4] = node0;
      nodeArray0[5] = node1;
      nodeArray0[6] = node1;
      Node node4 = new Node(130, nodeArray0);
      node1.replaceChild(node4, node2);
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Node node0 = new Node(42);
      node0.setChangeTime(42);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("h*q#Xubm0#", true);
      int int0 = Node.INCRDECR_PROP;
      simpleSourceFile0.getLineOffset(52);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = Node.newNumber(853.359);
      Node node2 = new Node((-1838), node0, node0, node1, 13, 1949);
      node0.isEquivalentToTyped(node1);
      node0.isAdd();
      node1.isOnlyModifiesArgumentsCall();
      node1.isGetElem();
      Node node3 = Node.newString("");
      node2.isOnlyModifiesArgumentsCall();
      node1.isParamList();
      Node node4 = new Node((-3235));
      node1.putIntProp(16, 48);
      node0.srcref(node4);
      node0.isCase();
      int int1 = Node.SIDE_EFFECT_FLAGS;
      Node node5 = new Node((-3373), node3);
      node1.isEquivalentTo(node5, false, false, false);
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(false);
      node0.isFromExterns();
      node0.isTypeOf();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node((-1027), (Node) null, (Node) null, (Node) null);
      int int0 = 1722;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(int0);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setThrows();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(1081, node0, node0, node0, 4095, 9);
      node0.isFunction();
      node1.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(true);
      node0.isFunction();
      node1.wasEmptyNode();
      node0.isVoid();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = Node.newNumber((double) 57);
      Node node1 = new Node(57, node0, node0, node0);
      node0.isOptionalArg();
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      Node node2 = Node.newString("!k->8t6d^[q#");
      node0.isOnlyModifiesArgumentsCall();
      node2.isParamList();
      Node node3 = new Node(8);
      node0.putIntProp(93, 52);
      Node node4 = node2.srcref(node0);
      node0.setIsSyntheticBlock(true);
      node4.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.isVoid();
      node0.toStringTree();
      node3.isNew();
      node4.isLabelName();
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.setSourceEncodedPositionForTree(0);
      node0.isEquivalentToShallow(node0);
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      Node node2 = new Node(1, node0, node1, node0, node0);
      node2.isObjectLit();
      node2.addChildrenToBack(node0);
      node0.isLabel();
      node1.addChildrenToFront(node0);
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newString("gNCt[UV+CX,J");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getAncestors();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gNCt[UV+CX,J");
      node0.setLineno((-3805));
      node0.isUnscopedQualifiedName();
      node0.toString(false, false, false);
      node0.getQualifiedName();
      node0.getSourceOffset();
      node0.removeProp(53);
      Node node1 = new Node(32, node0);
      node1.isEquivalentTo(node0);
      node1.isEquivalentToShallow(node0);
      node1.mayMutateGlobalStateOrThrow();
      node0.isCatch();
      node0.isComma();
      node1.isObjectLit();
      node1.removeChildren();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newNumber(559.183700446);
      Node node1 = Node.newString("", 30, 54);
      Node node2 = Node.newString(52, (String) null);
      node2.isNumber();
      node1.isDo();
      // Undeclared exception!
      try { 
        node0.getType();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = null;
      Node node1 = new Node(573, (Node) null, 573, 573);
      // Undeclared exception!
      try { 
        node1.checkTreeEqualsImpl(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString((-1732), "HWtth)t(QEI7DlStiG", (-1732), 93);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " : ");
      node0.type = 50;
      node0.isQuotedString();
      node0.getAncestors();
      node0.mayMutateArguments();
      boolean boolean0 = node0.isUnscopedQualifiedName();
      node0.hasMoreThanOneChild();
      boolean boolean1 = node0.isString();
      Node.mergeLineCharNo(55, 1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node0.getJsDocBuilderForNode();
      node0.isTrue();
      Node node1 = new Node(52, node0, 4095, 30);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.checkTreeEquals(node1);
      node2.setVarArgs(boolean1);
      node0.isLabelName();
      node1.setVarArgs(boolean0);
      node1.isSyntheticBlock();
      node0.removeChildren();
      int int0 = (-1301);
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newNumber(1454.498);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node0.getAncestor(37);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node0.addChildBefore((Node) null, (Node) null);
      node_SideEffectFlags3.setReturnsTainted();
      int int0 = 118;
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(31);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesArguments();
      node_SideEffectFlags6.setAllFlags();
      node0.getAncestor(77);
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags5.setReturnsTainted();
      node0.addChildBefore((Node) null, (Node) null);
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setReturnsTainted();
      node_SideEffectFlags8.setMutatesGlobalState();
      boolean boolean0 = true;
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(49);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      Node node2 = new Node((-2502), 39, 42);
      node2.isIf();
      node2.isTrue();
      node2.useSourceInfoFromForTree(node2);
      Node.newString("Z:;(cA.)G*n/K4", 39, 56);
      node1.isWith();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      node0.getSourcePosition();
      Node node1 = new Node(57, nodeArray0, 51, 155);
      node0.removeChildAfter(node1);
      // Undeclared exception!
      try { 
        node_SideEffectFlags0.setMutatesThis();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newNumber((double) 57);
      Node node1 = new Node(57, node0, node0, node0);
      node0.isOptionalArg();
      node1.setLength(1);
      node1.isObjectLit();
      node1.addChildrenToBack(node0);
      node1.isLabel();
      // Undeclared exception!
      try { 
        node0.addChildrenToFront(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Object object0 = new Object();
      Node node0 = Node.newNumber(0.0, 180, (-1774));
      Node node1 = Node.newString((String) null);
      node0.checkTreeEquals(node1);
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(39, node0);
      node0.isIf();
      node1.isTrue();
      node0.isParamList();
      Node node2 = new Node(400);
      node2.putIntProp(5272, 57);
      Node node3 = node1.srcref(node2);
      node1.setIsSyntheticBlock(false);
      node2.isCase();
      node2.useSourceInfoIfMissingFromForTree(node1);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node node4 = new Node((-3390), node1, node0, node3);
      node4.isVoid();
      node2.toStringTree();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = ")N2|f$[g=B%";
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(49);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      Node node2 = new Node((-2502), 39, 42);
      node2.isIf();
      node2.putProp(30, (Object) null);
      node2.isTrue();
      node2.useSourceInfoFromForTree(node2);
      Node.newString("Z:;(cA.)G*n/K4", 39, 56);
      node1.isWith();
      node0.isReturn();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node0.setOptionalArg(true);
      node1.wasEmptyNode();
      node0.setSourceFileForTesting("");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1054);
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node0.setSideEffectFlags(node_SideEffectFlags2);
      node1.isGetProp();
      node1.getLineno();
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(111);
      Node node1 = Node.newString("kY");
      node0.isEquivalentTo(node0, true, true, true);
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.isOptionalArg();
      node0.isDefaultCase();
      node0.getType();
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newString(":");
      Node node1 = new Node(152, node0, node0, 39, 4095);
      node1.addSuppression(":");
      node1.addChildrenToFront(node0);
      double double0 = 1.0;
      // Undeclared exception!
      try { 
        Node.newNumber(double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = Node.newNumber((-62.76523623570016));
      node0.isContinue();
      node0.isRegExp();
      node0.isRegExp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      node0.isAssignAdd();
      node0.detachChildren();
      node0.getDouble();
      node0.isCast();
      node0.isVar();
      Node node1 = node0.cloneTree();
      node1.getInputId();
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newString(54, "", 8, (-290));
      node0.getStaticSourceFile();
      node0.useSourceInfoFrom(node1);
      node1.isOptionalArg();
      node0.isWhile();
      node0.isInc();
      node1.setWasEmptyNode(false);
      node1.wasEmptyNode();
      node0.srcref(node0);
      Node.newString("", 48, 52);
      node0.hasChildren();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newNumber(1454.498);
      node0.isName();
      Node node1 = node0.cloneTree();
      Node.extractCharno(36);
      node1.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = new Node(0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      node_SideEffectFlags0.setAllFlags();
      node0.setSourceEncodedPositionForTree((-3472));
      node0.isThis();
      node0.setOptionalArg(false);
      node0.isArrayLit();
      node0.setChangeTime(112);
      Node.mergeLineCharNo(708, 52);
      node0.isComma();
      node0.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      String string0 = "originalname";
      boolean boolean0 = false;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0, boolean0);
      Object[] objectArray0 = new Object[0];
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = new Node(15);
      Node node1 = new Node(15, node0);
      Node node2 = node1.removeFirstChild();
      node0.getLength();
      node1.isFor();
      node1.getJsDocBuilderForNode();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.newNumber((double) 30);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node1.isEmpty();
      node0.getProp(85);
      node1.hasMoreThanOneChild();
      node1.isBlock();
      node1.isNull();
      node1.isFunction();
      node2.isThrow();
      node0.addChildAfter(node1, node0);
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newNumber((-852.5317027), 94, 94);
      Node node1 = Node.newString(43, "+kv%4[a%-", 57, 29);
      node0.hasChild(node1);
      node0.isRegExp();
      Node.mergeLineCharNo(1387, 159);
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newString("zQ~Je@/.M@Mo-Oz<I3/");
      node0.siblings();
      Node node1 = Node.newString("zQ~Je@/.M@Mo-Oz<I3/", 51, (-603));
      node0.isEmpty();
      node0.addChildToFront(node1);
      node0.isGetElem();
      node1.hasChild(node0);
      node1.getChangeTime();
      node1.isSetterDef();
      node1.isReturn();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = new Node(102);
      node0.getProp(102);
      Node node1 = new Node(54, node0, (-243), 38);
      node1.hasMoreThanOneChild();
      node0.isBreak();
      node1.isCase();
      node0.isFunction();
      Node node2 = new Node(29, node0, node0);
      node1.getProp(node0.LAST_PROP);
      Node.NodeMismatch node_NodeMismatch0 = null;
      try {
        node_NodeMismatch0 = new Node.NodeMismatch(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.hasMoreThanOneChild();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      Node node2 = Node.newString(":<6dR9KM-yVM Gg%cj");
      node2.isOnlyModifiesArgumentsCall();
      node2.isParamList();
      Node node3 = Node.newString("YCpM)P%`B{``<&rB", (-5646), 2);
      node0.isDebugger();
      node2.isDefaultCase();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(395);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node2.getChildAtIndex(8);
      node1.isUnscopedQualifiedName();
      node3.isThrow();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      Node node1 = new Node(1, node0, 57, 32);
      node0.removeChildren();
      Node node2 = new Node(32, node1, node1);
      node1.cloneTree();
      node0.addChildToFront((Node) null);
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "fAAl";
      Node node0 = Node.newString(13, "fAAl", 2503, 0);
      node0.isTry();
      Node node1 = Node.newString(40, "fAAl");
      node1.isOnlyModifiesArgumentsCall();
      node0.putIntProp(2503, 13);
      Node node2 = node1.srcref(node0);
      node0.setIsSyntheticBlock(false);
      node0.isCase();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node node4 = Node.newString("V37zg@9v0hABM+7<v", (-2549), 40);
      Node node5 = new Node(54, node2, node4, node3);
      node2.isVoid();
      node5.toStringTree();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      node2.isNew();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(39, node0);
      node0.isIf();
      node1.isTrue();
      node0.isParamList();
      Node node2 = new Node(400);
      node2.putIntProp(30, 57);
      Node node3 = node1.srcref(node2);
      node1.setIsSyntheticBlock(false);
      node3.isDelProp();
      node1.isUnscopedQualifiedName();
      node0.isGetElem();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node2.removeProp(16);
      node2.isNew();
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node2.isAssignAdd();
      node1.isExprResult();
      node0.getChildAtIndex(3459);
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      Node node1 = Node.newNumber(2441.70864092279, 51, 598);
      node0.isAdd();
      node1.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node0.isFor();
      node0.getCharno();
      node0.isGetElem();
      node1.getJSType();
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getSourceOffset();
      node0.removeProp((-1));
      Node node1 = Node.newNumber(0.0, (-2103), 54);
      Node node2 = Node.newNumber(256.0, 31, 36);
      Node node3 = Node.newString(48, "unexpected prop id ");
      node3.isScript();
      node3.isUnscopedQualifiedName();
      node3.getIntProp(29);
      node2.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node2.isVoid();
      node1.toStringTree();
      node2.isNew();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = Node.newNumber((double) 57);
      Node node1 = new Node(57, node0, node0, node0);
      node0.isOptionalArg();
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      Node node2 = Node.newString("!k->8t6d^[q#");
      node0.isOnlyModifiesArgumentsCall();
      node2.isParamList();
      Node node3 = new Node(8);
      node0.putIntProp(93, 52);
      Node node4 = node2.srcref(node0);
      node3.setSideEffectFlags(745);
      boolean boolean0 = true;
      node0.setIsSyntheticBlock(boolean0);
      node4.isCase();
      int int0 = null;
      try {  
      int0 = Node.SIDE_EFFECT_FLAGS;
      } catch(MockIllegalStateException e) {}
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(130);
      node0.detachChildren();
      node0.isContinue();
      node0.setChangeTime((-1606));
      Node node1 = new Node(37, node0, node0, node0, 2299, 131074);
      node1.setSideEffectFlags(2);
      node1.isNew();
      node0.setQuotedString();
      node1.isIf();
      node0.isFor();
      node0.addChildToBack(node1);
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = new Node(117);
      node0.detachChildren();
      node0.isContinue();
      node0.setChangeTime(297);
      Node node1 = new Node(36, node0, node0, node0, 53, (-3568));
      node1.setSideEffectFlags((-23));
      node0.toStringTree();
      boolean boolean0 = true;
      node0.setOptionalArg(boolean0);
      // Undeclared exception!
      try { 
        node1.isWhile();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getSourceOffset();
      node0.removeProp((-1));
      Node node1 = Node.newNumber(74.71427607, 53, 790);
      int int0 = 8202;
      node1.addChildrenAfter(node0, node0);
      Node node2 = Node.newNumber((double) node1.COLUMN_MASK, node0.REFLECTED_OBJECT, int0);
      node2.isScript();
      // Undeclared exception!
      try { 
        node2.isUnscopedQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = new Node(23, 23, 23);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(56, node0, node0, node0, node0);
      node1.isNumber();
      node1.addChildrenAfter(node0, node0);
      // Undeclared exception!
      try { 
        Node.newNumber((double) node1.COLUMN_MASK, node0.REFLECTED_OBJECT, node1.REFLECTED_OBJECT);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = Node.newNumber((-34.8007), (-4447), (-4447));
      node0.isContinue();
      node0.isRegExp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node node1 = Node.newNumber(1.2, 50, 4095);
      Node node2 = Node.newString(2179, "quoted", 54, 21);
      node2.hasChild(node1);
      node2.isRegExp();
      Node.mergeLineCharNo(52, 29);
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isEquivalentToShallow(node0);
      Node node1 = new Node(46, node0, node0, node0, 8199, 0);
      node1.isFalse();
      node1.isEquivalentTo(node0);
      Node node2 = Node.newString(53, ":'ePaE;2O", 49, 15);
      node2.isRegExp();
      node2.setOptionalArg(false);
      node1.getInputId();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toStringTree();
      Object object0 = new Object();
      node0.isEquivalentTo(node2);
      node1.isEquivalentToShallow(node2);
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ObjectType objectType0 = FunctionType.getTopDefiningInterface((ObjectType) null, "");
      TemplatizedType templatizedType0 = JSType.toMaybeTemplatizedType((JSType) objectType0);
      TemplateTypeMap templateTypeMap0 = templatizedType0.getTemplateTypeMap();
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, templateTypeMap0);
      JSType jSType0 = templateTypeMapReplacer0.caseNullType();
      node0.setJSType(jSType0);
      // Undeclared exception!
      try { 
        node0.isTry();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      Node node1 = new Node((-2060), node0);
      node0.isIf();
      node1.isTrue();
      node1.isParamList();
      Node node2 = new Node((-10));
      node2.putIntProp(12, 331);
      Node node3 = node2.srcref(node0);
      node2.setIsSyntheticBlock(false);
      node3.isCase();
      Node node4 = Node.newString("{\"{5H2x&", (-1582), (-3196));
      node3.useSourceInfoIfMissingFromForTree(node4);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node node5 = new Node(54, node0);
      Node node6 = new Node(node4.SLASH_V, node3, node2, node5);
      node4.isVoid();
      node2.toStringTree();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "}i0;8@^xj";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      // Undeclared exception!
      try { 
        node0.isNew();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newString(77, "fAAl", 36, 36);
      node0.isTry();
      Node node1 = Node.newString(54, "60b1rJt2P25Q CN;I");
      node1.isOnlyModifiesArgumentsCall();
      node0.putIntProp(1036, 32);
      Node node2 = node1.srcref(node0);
      node1.setIsSyntheticBlock(true);
      node2.isCase();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node node4 = Node.newString("com.google.common.collect.Lists$1", 30, 42);
      Node node5 = Node.newString("L\"8mAr\"Zw`3vO<X", 111, (-5571));
      Node node6 = new Node(39, node3, node3, node5);
      node1.isVoid();
      node6.toStringTree();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      node3.isNew();
      boolean boolean1 = false;
      node5.toString(boolean0, boolean0, boolean1);
      node5.isLabelName();
      node4.isGetProp();
      node5.isScript();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newString(77, "fAAl", 36, 36);
      node0.isTry();
      Node node1 = Node.newString(54, "60b1rJt2P25Q CN;I");
      node1.isOnlyModifiesArgumentsCall();
      node1.setSourceEncodedPositionForTree(43);
      node0.isEquivalentToShallow(node1);
      node0.setOptionalArg(true);
      node1.isFromExterns();
      Node node2 = new Node((-3147));
      node2.setChangeTime(55);
      String string0 = "WzKN[Gq>\\Q8PSgdN]/";
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("WzKN[Gq>Q8PSgdN]/", false);
      simpleSourceFile0.getLineOffset((-272));
      simpleSourceFile0.getLineOffset(node2.FLAG_ARGUMENTS_UNMODIFIED);
      node1.setStaticSourceFile(simpleSourceFile0);
      int int0 = 56;
      int int1 = 63;
      Node node3 = new Node(int0, node2, node1, node0, node0.INCRDECR_PROP, int1);
      int int2 = 53;
      // Undeclared exception!
      try { 
        Node.newString(node2.FLAG_ARGUMENTS_UNMODIFIED, string0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number -272
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      node0.removeProp(4095);
      Node.newNumber((double) 29, 53, 16);
      node0.isRegExp();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.toStringTree();
      // Undeclared exception!
      try { 
        node0.isNew();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = new Node(77);
      Node node1 = Node.newString("IaA{gZB /b");
      Node node2 = node0.srcref(node1);
      node1.setCharno(4095);
      int int0 = Node.EMPTY_BLOCK;
      node2.isEmpty();
      node2.isBlock();
      node2.isCast();
      node0.isComma();
      int int1 = Node.NO_SIDE_EFFECTS;
      Node node3 = Node.newNumber((double) 29, 56, 29);
      Node node4 = new Node(50, node0, node3, node2);
      node4.putIntProp((-1428), 77);
      Node.newString(42, "wdjS9H");
      Node node5 = Node.newString(4095, "ARRAYLIT", 362, 56);
      node5.isEquivalentToTyped((Node) null);
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      node2.setCharno(85);
      node0.isEquivalentTo(node2, false, false, false);
      node0.getLength();
      node0.isGetElem();
      node2.isInc();
      node2.isThrow();
      node2.isNew();
      node2.isAssignAdd();
      node2.isEquivalentTo(node0, false, true, true);
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(96);
      node0.isEquivalentTo(node0, false, false, false);
      node0.isOnlyModifiesArgumentsCall();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newString(102, "_}f>*aS");
      node0.isFalse();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      Node node1 = new Node(4095, nodeArray0);
      node1.setQuotedString();
      EvoSuiteFile evoSuiteFile0 = null;
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = new Node(40);
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 1);
      Node node2 = Node.newNumber((double) 4);
      node2.setVarArgs(false);
      node1.isCast();
      node0.isComma();
      node1.setString("com.google.javascript.rhino.Node$NodeMismatch");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node1.LENGTH);
      node0.setSideEffectFlags(node_SideEffectFlags0);
      // Undeclared exception!
      try { 
        node1.useSourceInfoIfMissingFrom(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = new Node(40, 306654240, 306654240);
      Node node1 = new Node(36, node0);
      node1.setWasEmptyNode(false);
      node0.isAnd();
      node1.getProp(51);
      node1.hasMoreThanOneChild();
      node0.isParamList();
      node1.isCast();
      node1.getQualifiedName();
      node0.getJSDocInfo();
      node0.setString((String) null);
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newNumber(1468.413929983989);
      node0.isVar();
      node0.cloneTree();
      Node node1 = node0.cloneNode();
      node0.setString("TypeError");
      node0.removeChild(node1);
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 1468.413929983989 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(39, node0);
      node0.isIf();
      node1.isTrue();
      node0.isParamList();
      Node node2 = new Node(4);
      node2.putIntProp(48, 57);
      Node node3 = node1.srcref(node2);
      node1.setIsSyntheticBlock(false);
      node2.isCase();
      node2.useSourceInfoIfMissingFromForTree(node1);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node node4 = new Node((-3390), node1, node0, node3);
      node4.isVoid();
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = new Node(1093, 4, 1093);
      Node node1 = new Node(1093, node0, node0, node0, 1, 53);
      node1.replaceChildAfter(node0, node0);
      node1.isReturn();
      // Undeclared exception!
      try { 
        node1.isNoSideEffectsCall();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isWith();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.removeProp(1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)93;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[2] = (byte)15;
      byteArray0[4] = (byte)77;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node_SideEffectFlags2.setMutatesThis();
      node0.isGetElem();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(54, node0, node0, node0, node0, 65535, 52);
      node1.isParamList();
      Node node2 = new Node(32);
      Node node3 = node0.srcref(node1);
      node3.isCase();
      int int0 = Node.IS_CONSTANT_NAME;
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags2.clearSideEffectFlags();
      node3.isGetterDef();
      node2.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = Node.newString(4, "_}f>*aS");
      node0.isFalse();
      node0.setQuotedString();
      node0.isGetElem();
      node0.isInstanceOf();
      node0.isParamList();
      Node node1 = new Node(4);
      Node node2 = node0.srcref(node1);
      node0.isBlock();
      node0.isNull();
      node1.setIsSyntheticBlock(true);
      node1.isFunction();
      node0.isThrow();
      node1.isVoid();
      node2.toStringTree();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1088);
      node0.isDo();
      node0.toString(false, false, false);
      node0.getChangeTime();
      node0.hasOneChild();
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newNumber((-34.8007), (-2318), (-2318));
      node0.isNull();
      node0.getJSDocInfo();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.isDefaultCase();
      node0.isTrue();
      node0.getProp((-468));
      Node node1 = Node.newString(4096, "URSH");
      Node node2 = new Node(105, node1, node1, 0, 105);
      node0.isEquivalentTo(node2);
      node0.getAncestors();
      node2.setWasEmptyNode(false);
      node0.isSyntheticBlock();
      node1.isFromExterns();
      node0.hasOneChild();
      node0.hasOneChild();
      node2.getInputId();
      node2.getAncestors();
      node0.toStringTree();
      node0.isGetElem();
      node2.isQuotedString();
      node2.isSyntheticBlock();
      node2.getAncestor((-2583));
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = Node.newNumber((double) 9);
      node0.isName();
      node0.setChangeTime(1610612736);
      Node node1 = node0.getAncestor((-2376));
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.toStringTree();
      // Undeclared exception!
      try { 
        node1.isNew();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(4, node0, node0);
      node0.addChildrenToFront(node1);
      node0.getDouble();
      node1.isString();
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.putIntProp(47, 2);
      node1.setCharno(12);
      node2.isEquivalentTo(node1, false, false, false);
      node1.getLength();
      node1.isGetElem();
      node2.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node0.hasOneChild();
      node2.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSetterDef();
      node0.isWith();
      node0.removeProp(1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)57;
      byteArray0[1] = (byte)93;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[2] = (byte)15;
      byteArray0[4] = (byte)77;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node node1 = new Node(42, node0, node0, node0, node0);
      node1.isParamList();
      node0.putIntProp(40, 54);
      node1.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.getStaticSourceFile();
      node1.getChildBefore(node0);
      node1.isHook();
      node1.isNoSideEffectsCall();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = Node.newString("_}f>*aS", (-31), (-31));
      node0.isNE();
      node0.putProp(39, "_}f>*aS");
      node0.isAdd();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(77);
      Node node1 = Node.newString("XIWaA{gZB S/b");
      Node node2 = node0.srcref(node1);
      node1.setCharno(4095);
      node2.isEquivalentTo(node1, true, false, false);
      node2.getLength();
      node1.isGetElem();
      node1.isInc();
      node1.isThrow();
      node1.isNew();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isAssignAdd();
      node0.isNoSideEffectsCall();
      node2.getChildAtIndex(2);
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = Node.newString("{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(false);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node0.setLineno(1);
      node0.getQualifiedName();
      node1.getJSDocInfo();
      node1.isCall();
      node0.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newNumber(559.183700446);
      node0.getAncestors();
      node0.isVarArgs();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.wasEmptyNode();
      Node node1 = new Node(37);
      node1.children();
      node0.isInstanceOf();
      node1.isParamList();
      Node node2 = new Node(2097152);
      Node node3 = node1.srcref(node0);
      node0.isBlock();
      node0.isNull();
      node0.setIsSyntheticBlock(true);
      node0.isFunction();
      node2.isThrow();
      node2.isVoid();
      node3.toStringTree();
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Node node0 = new Node(42);
      node0.isTypeOf();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = null;
      node0.useSourceInfoIfMissingFromForTree((Node) null);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      String string0 = "com.google.common.collect.Lists$1";
      String string1 = "TYPE_ERROR_TYPE";
      int int1 = 752;
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toStringTree();
      Object object0 = new Object();
      node0.isEquivalentTo(node2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "second new child has existing sibling");
      node2.setLineno((-1));
      node2.isUnscopedQualifiedName();
      node0.toString(false, true, false);
      node1.getQualifiedName();
      node1.getSourceOffset();
      node1.removeProp((-1539));
      node2.isEquivalentTo(node1);
      node0.isEquivalentToShallow(node2);
      node0.mayMutateGlobalStateOrThrow();
      node0.isCatch();
      node0.isComma();
      node0.isObjectLit();
      Node node3 = node1.removeChildren();
      node0.copyInformationFrom(node3);
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(49);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(46);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node1.useSourceInfoFrom(node0);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      Node node2 = new Node((-2502), 39, 42);
      node2.isIf();
      node2.isTrue();
      node2.useSourceInfoFromForTree(node2);
      Node.newString("Z:;(cA.)G*n/K4", 39, 56);
      node1.isWith();
      node0.isReturn();
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = Node.newString(77, "fAAl", 36, 36);
      node0.isTry();
      node0.isThis();
      node0.setOptionalArg(true);
      Node node1 = Node.newString("NE", (-524), 3945);
      node1.isFromExterns();
      node0.setChangeTime(46);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("fAAl", true);
      simpleSourceFile0.getLineOffset(32);
      simpleSourceFile0.getLineOffset(77);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node node2 = new Node(21, node0, node0, node0, 1, Integer.MIN_VALUE);
      node2.isEquivalentToTyped(node1);
      node2.isAdd();
      Node node3 = new Node(38, 29, 1);
      Node node4 = new Node((-1102), node3, node3);
      node4.isIf();
      node3.isTrue();
      node0.useSourceInfoFromForTree(node2);
      Node node5 = Node.newString("NE", 1, 57);
      node5.isWith();
      node4.isReturn();
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = Node.newString(54, "{\"{5H2x&", 36, 1722);
      node1.setCharno(36);
      node1.isGetElem();
      node1.isInc();
      node0.isThrow();
      node0.isNew();
      Node node2 = new Node(4095, node0, 43, 50);
      node2.isAssignAdd();
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = Node.newString(54, "", 36, 1722);
      Node.newString("", 46, 693);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node2 = new Node(38, node1, node1, 19, (-805));
      Node node3 = node2.cloneNode();
      node2.isInc();
      node0.cloneTree();
      node3.isFunction();
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString("reflected_object", 3191, 0);
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(0, 57, 16);
      node0.isDefaultCase();
      Node node2 = new Node(39, node1, node1);
      node1.getIntProp(29);
      Node node3 = new Node(54);
      Node node4 = new Node(301, node3, node2, node1, node2, 301, 56);
      node4.toStringTree();
      node3.isReturn();
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newNumber((double) 77, 77, 96);
      Node node1 = new Node(38, node0);
      Node node2 = new Node(77, node1, node1, node0, node1, 333, 55);
      double double0 = (-2233.05001954866);
      Node node3 = Node.newNumber(double0);
      boolean boolean0 = false;
      node0.setVarArgs(boolean0);
      node1.isCast();
      node3.isQualifiedName();
      int int0 = null;
      try {  
      int0 = Node.NO_SIDE_EFFECTS;
      } catch(MockIllegalArgumentException e) {}
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1093);
      node0.isDo();
      node0.isGetProp();
      node0.setSourceEncodedPositionForTree(1093);
      node0.setString("com.google.javascript.rhino.JSDocInfo$NamePosition");
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getSourceOffset();
      node0.removeProp((-1));
      Node node1 = Node.newNumber(0.0, (-2103), 54);
      Node node2 = Node.newNumber(256.0, 31, 36);
      Node node3 = Node.newString(48, "unexpected prop id ");
      Node node4 = new Node(57, node2, node1, node3, node3);
      node4.toString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      jSTypeArray0[0] = (JSType) functionType0;
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(103);
      node0.isEquivalentTo(node0, true, true, true);
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.wasEmptyNode();
      node0.isVoid();
      node0.toStringTree();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = Node.newString("{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.getDouble();
      int int0 = 37;
      int int1 = (-1406);
      Node node1 = null;
      try {
        node1 = new Node(int0, node0, node0, node0, int1, node0.COLUMN_MASK);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING {\"{5H2x& 0 [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      int int0 = 1990;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-34.8007), 86, 1990);
      node0.isUnscopedQualifiedName();
      boolean boolean0 = false;
      node0.setWasEmptyNode(false);
      Node node1 = null;
      node0.checkTreeEquals((Node) null);
      node0.getProp(int0);
      node0.toString(boolean0, boolean0, boolean0);
      node0.useSourceInfoFrom(node1);
      // Undeclared exception!
      try { 
        node0.getChangeTime();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newNumber(1468.413929983989);
      node0.isVar();
      Node node1 = new Node(269, node0, node0, node0, 45, 32);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.toStringTree();
      Object object0 = new Object();
      int int0 = 10;
      int int1 = (-652);
      int int2 = (-673);
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = node0.cloneTree();
      Node node2 = node0.cloneNode();
      node2.setString("TypeError");
      node0.removeChild(node2);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INC is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9M-yVM Gg%cj", false);
      simpleSourceFile0.getLineOffset(29);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 441, 39);
      node0.isEquivalentToTyped(node1);
      node1.isAdd();
      node1.isDec();
      node0.isGetElem();
      node0.isOnlyModifiesArgumentsCall();
      node1.isParamList();
      Node node2 = new Node(46);
      node2.srcref(node0);
      node2.isCase();
      int int0 = Node.IS_CONSTANT_NAME;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node2.isNoSideEffectsCall();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = new Node(4, 4, 1093);
      Node node1 = new Node(1093, node0, node0, node0, 1, 53);
      Node node2 = Node.newString("Py#h.,v\"Iy.IdW6", 42, 55);
      Node node3 = new Node(1093, node1, node2, node1);
      node3.useSourceInfoFrom(node1);
      node3.checkTreeEqualsImpl(node1);
      node0.addChildToFront(node1);
      int int0 = 1315;
      Node.mergeLineCharNo(node1.IS_DISPATCHER, int0);
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.setSourceEncodedPositionForTree(0);
      Node node1 = Node.newString(29, "Phg]lSo", 50, 31);
      Node node2 = Node.newNumber((double) 49, 43, (-407));
      node2.removeChildren();
      Node node3 = Node.newString(57, "NUMBER 0.0\n", 8, 4);
      node0.isSyntheticBlock();
      Node node4 = new Node(40, node1, node0, node1);
      node4.setSourceFileForTesting("NUMBER 0.0\n");
      node0.isOnlyModifiesThisCall();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Node node5 = new Node((-1094), node4);
      node5.getInputId();
      node1.putProp((-932), (Object) null);
      node1.addChildToFront(node4);
      node3.isNot();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = Node.newString((-1503), "|!Vx#Bv9@gCqF0 7LC");
      node0.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node0.isThrow();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node(0, nodeArray0);
      node1.checkTreeTypeAwareEqualsImpl(nodeArray0[0]);
      node1.getInputId();
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node.extractLineno(8202);
      Node node0 = new Node(8202);
      node0.isAssign();
      Node node1 = Node.newString("6*Af]<0EB.WG~");
      node1.detachChildren();
      node0.putBooleanProp(54, false);
      Node node2 = Node.newString(29, "6*Af]<0EB.WG~", 3405, 57);
      node1.detachChildren();
      node2.putProp(9, node0);
      node1.toStringTree();
      Node node3 = Node.newString(50, "STRING 6*Af]<0EB.WG~\n");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("STRING 6*Af]<0EB.WG~\n");
      node3.isQualifiedName();
      node3.isUnscopedQualifiedName();
      node3.isNoSideEffectsCall();
      node2.getChildAtIndex((-104));
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(39, node0);
      node0.isIf();
      node1.isTrue();
      node0.isParamList();
      Node node2 = new Node(400);
      node2.putIntProp(5272, 57);
      Node node3 = node1.srcref(node2);
      node1.setIsSyntheticBlock(false);
      node3.isDelProp();
      Node node4 = node2.useSourceInfoIfMissingFromForTree(node1);
      node1.isUnscopedQualifiedName();
      node4.isIn();
      node0.isGetElem();
      node3.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(39, node0);
      node0.isIf();
      node1.isTrue();
      node0.isParamList();
      node1.putIntProp(30, 57);
      Node node2 = node1.srcref(node0);
      node1.setIsSyntheticBlock(false);
      node2.isDelProp();
      node1.isUnscopedQualifiedName();
      node2.hasChild(node0);
      node0.getChangeTime();
      node0.isSetterDef();
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = Node.newString((-1503), "|!Vx#Bv9@gCqF0 7LC");
      node0.isTypeOf();
      Node node1 = new Node(51, node0, node0, node0, node0);
      node1.checkTreeTypeAwareEqualsImpl(node1);
      node1.setOptionalArg(true);
      node1.mayMutateGlobalStateOrThrow();
      int int0 = Node.FREE_CALL;
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = Node.newString((-32), "{\"{5H2x&");
      node0.isIf();
      node0.isTrue();
      node0.isParamList();
      Node node1 = new Node((-10));
      node1.putIntProp(12, 331);
      Node node2 = node1.srcref(node0);
      node1.setIsSyntheticBlock(false);
      node2.isCase();
      Node node3 = Node.newString("{\"{5H2x&", (-1582), (-3196));
      node2.useSourceInfoIfMissingFromForTree(node3);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      Node node4 = new Node(54, node0);
      Node node5 = new Node(54, node2, node1, node4);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node5);
      node_AncestorIterable0.iterator();
      node3.isVoid();
      node1.toStringTree();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "}i0;8@^xj";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      node0.isNew();
      int int1 = (-880);
      Node node6 = new Node(int1);
      // Undeclared exception!
      try { 
        node6.isLabelName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -10
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isWith();
      node0.removeProp(1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)57;
      byteArray0[1] = (byte)93;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[2] = (byte)15;
      byteArray0[4] = (byte)77;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node node1 = new Node(42, node0, node0, node0, node0);
      node1.isParamList();
      node0.putIntProp(40, 54);
      node1.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.getStaticSourceFile();
      node1.setDouble(1211.5306699926705);
      Node node2 = node1.getChildBefore(node0);
      node1.isHook();
      node1.isLabelName();
      int int1 = 313;
      node1.getBooleanProp(int1);
      node0.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = Node.newString("H");
      node0.setDouble(47);
      // Undeclared exception!
      try { 
        node0.getSourcePosition();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING H is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = new Node(77);
      Node node1 = Node.newNumber((double) 57);
      node0.isVar();
      Node node2 = node0.cloneTree();
      Node node3 = new Node(48, node2, node0, 8, 43);
      node1.setString("");
      int int0 = 32;
      Node node4 = null;
      try {
        node4 = new Node(int0, node1, node3, node0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 57.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = new Node(3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-661));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node0.setSourceEncodedPositionForTree((-3472));
      node0.isThis();
      node0.setOptionalArg(false);
      node0.mayMutateArguments();
      node0.setChangeTime((-3472));
      Node.mergeLineCharNo((-1573), 110);
      node0.isComma();
      boolean boolean0 = node0.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setOriginalCommentString("cbOTVE3qW%");
      node0.setJSDocInfo(jSDocInfo0);
      String string0 = "originalname";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0, boolean0);
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node2.toStringTree();
      Object object0 = new Object();
      node1.isEquivalentToShallow(node2);
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node3 = new Node(2, node0, node2, 2, 2);
      node0.isLocalResultCall();
      node1.removeFirstChild();
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        node3.getChangeTime();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node.mergeLineCharNo((-1823), 823);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) templateType0, (List<JSType>) arrayList0);
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      node0.isUnscopedQualifiedName();
      node0.isSwitch();
      Node node1 = Node.newString("Unknown class name", 3152, 2);
      node1.addChildBefore(node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      // Undeclared exception!
      try { 
        node_SideEffectFlags3.setMutatesArguments();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 0, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toStringTree();
      Object object0 = new Object();
      node0.isEquivalentTo(node2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "second new child has existing sibling");
      node2.setLineno((-1));
      node2.isUnscopedQualifiedName();
      node0.toString(false, true, false);
      node2.addChildAfter(node0, node0);
      node1.getQualifiedName();
      node1.getSourceOffset();
      int int0 = (-1539);
      node1.removeProp(int0);
      node2.isEquivalentTo(node1);
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isLabelName();
      Node node1 = new Node(30, node0, node0, node0, 39, 101);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.toStringTree();
      Object object0 = new Object();
      node0.isEquivalentTo(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.isEquivalentTo(node2, true, false, false);
      node0.getLength();
      node0.isGetElem();
      node3.isInc();
      node3.isThrow();
      node1.isNew();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node1.isAssignAdd();
      node3.isNoSideEffectsCall();
      node2.getChildAtIndex(47);
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = node0.srcref(node0);
      int int0 = Node.QUOTED_PROP;
      node0.isInc();
      node1.isThrow();
      node0.isNew();
      node0.setQuotedString();
      // Undeclared exception!
      try { 
        node0.isIf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toStringTree();
      Object object0 = new Object();
      boolean boolean0 = node0.isEquivalentTo(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.isEquivalentTo(node1, false, false, false);
      node0.isInc();
      node0.isThrow();
      node3.isNew();
      node1.isAssignAdd();
      Node node4 = new Node(4095, node1, node0, node1, node1);
      Node node5 = new Node(node2.INPUT_ID, node0, node2, node4);
      boolean boolean1 = false;
      boolean boolean2 = false;
      node1.isEquivalentTo(node5, boolean1, boolean2, boolean0);
      node4.isDec();
      // Undeclared exception!
      try { 
        node1.getSourceFileName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      node2.setCharno(85);
      node0.isEquivalentTo(node2, false, false, false);
      node0.getLength();
      node0.isGetElem();
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isContinue();
      node2.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)117;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("i6}|'~UJ\"", 119, 119);
      node0.isVarArgs();
      Node node1 = Node.newNumber((double) (byte)117);
      node1.appendStringTree((Appendable) null);
      node1.putProp(node0.REFLECTED_OBJECT, node0);
      node0.putIntProp(node1.OPT_ARG_NAME, node1.FREE_CALL);
      node0.isFunction();
      String string0 = ",";
      // Undeclared exception!
      try { 
        node0.getQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      node0.getSourceOffset();
      node0.isQualifiedName();
      node0.removeProp((-1));
      Node node1 = Node.newNumber(74.71427607, 53, 790);
      int int0 = 8202;
      node0.isRegExp();
      node1.addChildrenAfter(node0, node0);
      Node node2 = Node.newNumber((double) node1.COLUMN_MASK, node0.REFLECTED_OBJECT, int0);
      node2.isScript();
      // Undeclared exception!
      try { 
        node2.isUnscopedQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = new Node(117);
      node0.isLabel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      node0.isName();
      Node node1 = new Node(42, node0, 57, 31);
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      String string0 = "{\"{5H2x&";
      Node node0 = Node.newString("{\"{5H2x&");
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(49, (-2318), 32);
      Node node2 = new Node((-1491), node0, node1);
      Node node3 = new Node(126);
      node3.addChildrenToFront(node2);
      node3.getDouble();
      node2.isString();
      double double0 = (-503.273043);
      Node node4 = Node.newNumber(double0);
      // Undeclared exception!
      try { 
        node2.useSourceInfoIfMissingFrom(node4);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LABEL is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isSyntheticBlock();
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", true);
      SimpleSourceFile simpleSourceFile1 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", true);
      node0.setStaticSourceFile(simpleSourceFile1);
      Node node1 = new Node(44, node0, node0, node0, 77, 30);
      node1.isAdd();
      node1.isOnlyModifiesArgumentsCall();
      node1.isGetElem();
      node0.isInstanceOf();
      node1.isParamList();
      Node node2 = new Node(1204);
      Node node3 = node1.srcref(node0);
      node0.isBlock();
      node3.isNull();
      node0.setIsSyntheticBlock(false);
      node1.isFunction();
      node1.isDefaultCase();
      node2.getNext();
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(39, node0);
      node0.isIf();
      node1.isTrue();
      node0.isParamList();
      Node node2 = new Node(400);
      node2.putIntProp(30, 57);
      Node node3 = node1.srcref(node2);
      node1.setIsSyntheticBlock(false);
      node3.isDelProp();
      node1.isUnscopedQualifiedName();
      node0.isGetElem();
      node3.hasChild(node0);
      node0.getChangeTime();
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = new Node(77);
      node0.getSourceOffset();
      node0.removeProp((-1));
      Node node1 = Node.newNumber((double) (-1), 95, 1);
      Node node2 = Node.newNumber((double) 15, 54, (-730));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node3 = new Node(119);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node3.setLineno(119);
      node2.getQualifiedName();
      node1.putBooleanProp(56, true);
      node0.getJSDocInfo();
      Node node4 = new Node(29, node1, node0, 50, 73);
      node4.isCall();
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = new Node(40);
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 1);
      Node node2 = Node.newNumber((double) 4);
      node0.setLineno(47);
      node1.isUnscopedQualifiedName();
      node2.toString(false, false, false);
      node0.getQualifiedName();
      node0.getSourceOffset();
      node1.removeProp(57);
      node2.isEquivalentTo(node1);
      node0.isEquivalentToShallow(node2);
      node2.isCatch();
      node1.isComma();
      node0.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = Node.newString("Y[g%r2'BXinV-vw c");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = Node.newString(":<6dR9KM-yVM Gg%cj", 57, 8);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isInstanceOf();
      node1.isParamList();
      Node node2 = new Node(46);
      node0.isBlock();
      node1.isNull();
      node2.setIsSyntheticBlock(false);
      node1.isHook();
      node2.isTrue();
      node0.getSourceFileName();
      node1.mayMutateArguments();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = Node.newString("Y[g%r2'BXinV-vw c");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = Node.newString(":<6dR9KM-yVM Gg%cj", 57, 8);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node0.isInstanceOf();
      node1.isParamList();
      Node node2 = new Node(46);
      Node node3 = node2.srcref(node0);
      node0.isBlock();
      node1.isNull();
      node2.setIsSyntheticBlock(false);
      node3.isFunction();
      node1.isHook();
      node2.isTrue();
      node3.getSourceFileName();
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = new Node(1093);
      Node node1 = new Node(4095, node0, 42, 30);
      Node node2 = Node.newString("", 42, 55);
      Node node3 = new Node(57, node2, node2, node1, 38, 102);
      node3.isAdd();
      node2.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node0.isInstanceOf();
      node1.isParamList();
      Node node4 = new Node(103);
      Node node5 = node3.srcref(node2);
      node5.isBlock();
      node3.isNull();
      node3.setIsSyntheticBlock(false);
      node2.isFunction();
      node5.isDefaultCase();
      node4.getNext();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = new Node(40, 306654252, 306654252);
      Node node1 = new Node(36, node0);
      node1.setWasEmptyNode(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.newString(" : ");
      node0.isEquivalentTo(node1, false, false, false);
      node1.setSourceEncodedPositionForTree(152);
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<u-DvT=%9P<B'Q");
      Node node0 = new Node(147, 111, 0);
      Node node1 = new Node(147, node0);
      node1.setSourceEncodedPositionForTree(13);
      Node.newString(817, "<u-DvT=%9P<B'Q", 1, 56);
      Node node2 = Node.newNumber(742.4, 57, (-925));
      Node node3 = Node.newString((-1535), "");
      node3.isScript();
      node0.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node1.toStringTree();
      node2.isNew();
      node3.isDec();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toStringTree();
      Object object0 = new Object();
      node0.isEquivalentTo(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.useSourceInfoFromForTree(node1);
      Node.newString("Object#Element", (-862048943), 2);
      Node node3 = new Node((-2958), node1, node2);
      node3.getAncestors();
      node2.isWith();
      Node node4 = new Node(node0.FLAG_NO_THROWS);
      node4.isReturn();
      node1.isLabel();
      node3.children();
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = Node.newNumber(1468.413929983989);
      Node node1 = node0.cloneTree();
      Node node2 = new Node(48, 8, 383);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[1] = null;
      jSTypeArray0[2] = null;
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.isIf();
      node2.isTrue();
      node2.isEquivalentTo(node1, true, true, true);
      node3.getLength();
      Node node4 = Node.newString("Object#Element", 15, 1718);
      node4.isGetElem();
      node4.isInc();
      node2.isThrow();
      node4.isNew();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      Node node5 = new Node(51, node3, node4, node2);
      node5.isAssignAdd();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node6 = new Node((-383), nodeArray0, 4, 62);
      node6.isNoSideEffectsCall();
      node6.getChildAtIndex(1718);
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = Node.newString("}0|8f bb");
      Node node1 = new Node(1055, node0, node0, node0, node0);
      nodeArray0[0] = node1;
      node1.getLength();
      Node node2 = Node.newString("com.google.javascript.rhino.jstype.NamespaceType");
      nodeArray0[1] = node2;
      Node node3 = new Node(1055, nodeArray0);
      node1.getBooleanProp(12);
      node2.isCatch();
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList.of();
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Stack<JSType> stack0 = new Stack<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry1.createParameters((List<JSType>) stack0);
      Node node1 = node0.cloneTree();
      node1.removeFirstChild();
      Node node2 = new Node(4095, 54, (-1119));
      node0.isQualifiedName();
      node0.isThrow();
      node2.checkTreeTypeAwareEqualsImpl((Node) null);
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSetterDef();
      Node node1 = Node.newString(4095, "NUMBER 0.0\n", (-2044), 12);
      node1.isBreak();
      node0.removeProp(32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node node2 = new Node(4, node0, node0, node0);
      node2.isOptionalArg();
      Node node3 = new Node(30, node0, node0, 32, 53);
      int int0 = 15;
      Node node4 = new Node(int0, node3, node0, node0);
      node4.getSourceFileName();
      // Undeclared exception!
      try { 
        node0.isObjectLit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = new Node(77);
      Node node1 = Node.newString("XIWaA{gZB S/b");
      Node node2 = node0.srcref(node1);
      node1.setCharno(4095);
      node2.getLength();
      node1.isGetElem();
      node0.toString(true, false, false);
      node0.getQualifiedName();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node2.setSourceEncodedPosition(8225);
      node0.removeProp(53);
      node1.isEquivalentToShallow(node0);
      node2.isCatch();
      node1.isComma();
      node2.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toStringTree();
      Object object0 = new Object();
      node0.isEquivalentTo(node2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "second new child has existing sibling");
      node2.setLineno((-1));
      node2.isUnscopedQualifiedName();
      node0.isThrow();
      node0.isNew();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node1.isAssignAdd();
      node0.isNoSideEffectsCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node3 = jSTypeRegistry0.createParameters((JSType[]) null);
      int int0 = 1048576;
      node3.getChildAtIndex(int0);
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isLabelName();
      Node node1 = new Node((-3287), node0, node0, node0, 31, 54);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node3 = node1.setJSDocInfo(jSDocInfo0);
      node1.toStringTree();
      Object object0 = new Object();
      node3.isEquivalentToShallow(node2);
      // Undeclared exception!
      try { 
        node2.isVar();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3287
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      Node node1 = Node.newString(51, "kY", 12, 51);
      Node node2 = node0.srcref(node1);
      node2.setCharno(85);
      node0.isEquivalentTo(node2, false, false, false);
      node0.getLength();
      node0.isGetElem();
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node0.hasOneChild();
      node2.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(4, node0, node0);
      node0.addChildrenToFront(node1);
      node0.getDouble();
      node1.isString();
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.putIntProp(47, 2);
      String string0 = "duplicate child";
      Node node3 = Node.newString("duplicate child", 0, 56);
      node1.useSourceInfoIfMissingFrom(node2);
      Node.newString(2503, "Ye75zzWT_");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node3.setSideEffectFlags(node_SideEffectFlags0);
      Node node4 = node2.useSourceInfoIfMissingFrom(node0);
      node4.getInputId();
      int int0 = 35;
      Node.newString(string0, node0.INCRDECR_PROP, int0);
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = Node.newString((-1503), "|!Vx#Bv9@gCqF0 7LC");
      node0.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node_SideEffectFlags0.setReturnsTainted();
      Node node1 = new Node(51, node0, node0, node0, node0);
      node1.hasOneChild();
      node1.getType();
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<u-DvT=%9P<B'Q");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      node2.setCharno(85);
      node0.isEquivalentTo(node2, false, false, false);
      node0.getLength();
      node0.isGetElem();
      node1.setString("<u-DvT=%9P<B'Q");
      node2.isInc();
      node2.isThrow();
      node2.isNew();
      node1.setQuotedString();
      node2.isAssignAdd();
      node0.isFor();
      node2.addChildToBack(node0);
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      Node node1 = Node.newString("NUMBER 0.0\n", 2, 51);
      node1.isSetterDef();
      node1.isBreak();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node node2 = new Node(57, node0, node1, node1);
      node2.isContinue();
      node0.isLocalResultCall();
      Node node3 = node2.removeFirstChild();
      Object object0 = new Object();
      node1.getChangeTime();
      Node node4 = new Node(43, node3, node3, node0, 4095, (-459));
      node4.isEquivalentToTyped(node2);
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      boolean boolean0 = true;
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.children();
      node0.isEquivalentTo((Node) null, true, true, true);
      node0.setOptionalArg(boolean0);
      // Undeclared exception!
      try { 
        node0.isOnlyModifiesArgumentsCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = new Node(1093);
      Node node1 = new Node(4095, node0, 42, 30);
      node1.isUnscopedQualifiedName();
      node0.isSwitch();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g)2C&*UF-(c.Mvt#H");
      Node node2 = new Node(53);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node1.setLineno(15);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeTemplatizedType((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("5)uf&", node2, (JSType) null);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      String string0 = "inferred";
      Node node3 = enumElementType1.getPropertyNode(string0);
      node3.getQualifiedName();
      node1.getJSDocInfo();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(39, node0);
      node0.isIf();
      node1.isTrue();
      node0.isParamList();
      Node node2 = new Node(400);
      node2.putIntProp(30, 57);
      Node node3 = node1.srcref(node2);
      node1.setIsSyntheticBlock(false);
      node3.isDelProp();
      node1.isUnscopedQualifiedName();
      node0.isGetElem();
      node3.hasChild(node0);
      node3.isCase();
      node1.getLineno();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.valueOf();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node[] nodeArray0 = new Node[2];
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      nodeArray0[0] = node0;
      Node node1 = new Node(11, 15, 0);
      nodeArray0[1] = node1;
      Node node2 = new Node(2741, nodeArray0);
      node2.getLastSibling();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1093);
      node0.isDo();
      node0.isQuotedString();
      Node node1 = node0.useSourceInfoIfMissingFrom((Node) null);
      String string0 = "^bLhuu)Ah?4bH9";
      // Undeclared exception!
      try { 
        node1.addSuppression(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(4, node0, node0);
      node0.addChildrenToFront(node1);
      node0.getDouble();
      node1.isString();
      Node node2 = Node.newString(1442, "com.oogle.javscript.rhino.Node$NumberNoe");
      node2.isScript();
      node1.isUnscopedQualifiedName();
      node1.getIntProp(122);
      Node node3 = new Node(3051, node2, node2, node1, 39, 39);
      String string0 = "q<R0";
      int int0 = 13;
      int int1 = 54;
      Node node4 = Node.newString(string0, int0, int1);
      node4.isWith();
      // Undeclared exception!
      try { 
        node4.isReturn();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      String string0 = "kY";
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      node2.setCharno(85);
      node0.isEquivalentTo(node2, false, false, false);
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node2.isEquivalentTo(node0, true, false, false);
      node0.getLength();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Comparator<TemplateType> comparator0 = (Comparator<TemplateType>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeSet<TemplateType> treeSet0 = new TreeSet<TemplateType>(comparator0);
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterable<? extends TemplateType>) treeSet0);
      ImmutableList<JSType> immutableList1 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList0);
      ImmutableList<JSType> immutableList2 = immutableList1.asList();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList2);
      node3.isGetElem();
      node3.isInc();
      Node node4 = new Node(16, node2, (Node) null, node1, node3, 2756, 2);
      node4.isThrow();
      node4.setQuotedString();
      node3.isAssignAdd();
      node0.isFor();
      int int1 = 38;
      Node node5 = Node.newString(int1, string0);
      // Undeclared exception!
      try { 
        node5.addChildToBack(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = Node.newNumber(1454.498);
      node0.getDouble();
      Node node1 = Node.newString(2239, "?");
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.removeChildAfter((Node) null);
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(77);
      Node node1 = new Node(1, node0);
      node1.isUnscopedQualifiedName();
      boolean boolean0 = node1.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      String string0 = "com.google.javascript.rhino.Node$NumberNode";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0, boolean0);
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = new Node((-1186), (-1186), (-1026));
      Node node1 = node0.cloneTree();
      Node node2 = new Node(73, node1, node0, node0);
      Node node3 = new Node(98, node2, node1, (-1713), (-663));
      String string0 = "w";
      node3.setString(string0);
      int int0 = 85;
      Node node4 = new Node(int0, node0);
      node4.removeChild(node1);
      // Undeclared exception!
      try { 
        node2.cloneTree();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isSyntheticBlock();
      node0.toStringTree();
      Object object0 = new Object();
      Node node1 = Node.newString("NUMBER 0.0\n", 47, 39);
      node0.isEquivalentTo(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "U:#UoHRY^pWnp");
      node1.setLineno(16);
      node1.isUnscopedQualifiedName();
      node0.toString(false, false, true);
      node0.getQualifiedName();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node0.removeProp((-1824));
      Node node2 = Node.newString("NUMBER 0.0\n", 49, 40);
      node2.isEquivalentTo(node1);
      node0.isEquivalentToShallow(node2);
      node2.isCatch();
      node0.isComma();
      Node node3 = new Node(110, node0, node1, 8, 481);
      node3.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 16);
      node0.useSourceInfoIfMissingFrom(node1);
      String string0 = "com.google.common.base.CharMatcher$BitSetMatcher";
      Node node2 = Node.newString("com.google.common.base.CharMatcher$BitSetMatcher", 57, 86);
      node2.isOnlyModifiesArgumentsCall();
      Node node3 = new Node(154, node0, (-2616), 40);
      int int0 = 40;
      node3.removeProp(int0);
      double double0 = 2799.861087906269;
      Node.newNumber(double0);
      int int1 = 41;
      int int2 = 3360;
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(77);
      Node node1 = new Node(1, node0);
      node1.setString((String) null);
      node1.isUnscopedQualifiedName();
      node1.replaceChildAfter(node0, node0);
      node1.isReturn();
      // Undeclared exception!
      try { 
        node0.isNoSideEffectsCall();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(263);
      Node node1 = new Node(263, node0, node0, node0);
      node1.isFromExterns();
      Node node2 = Node.newString((-179), "$h*Mz$p,VTxz~o&_]1", 114, 114);
      Node node3 = new Node(263, node1, node2, 100, 43);
      node2.setOptionalArg(false);
      node3.setChangeTime(155);
      node2.cloneTree();
      Node node4 = new Node(263, node3, 4095, 2769);
      node4.isFor();
      node1.isReturn();
      node2.isSyntheticBlock();
      node0.isParamList();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.removeProp((-4956));
      node4.isVarArgs();
      node0.mayMutateGlobalStateOrThrow();
      node4.isParamList();
      node2.isStringKey();
      node3.removeChild(node1);
      node3.getAncestors();
      node1.getChildBefore(node2);
      node1.addChildrenToFront(node4);
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = Node.newNumber(1468.0);
      Node node1 = new Node(40, node0, node0, node0, node0);
      Node node2 = new Node(50, node1, node1, node1, 4095, 49);
      node0.isCatch();
      node0.isComma();
      node0.copyInformationFrom(node2);
      node2.isOnlyModifiesThisCall();
      node2.isString();
      node2.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = new Node((-957));
      Node node1 = new Node(4095, node0, 42, 30);
      Node node2 = Node.newString("", 42, 55);
      Node node3 = new Node(57, node2, node2, node1, 38, 106);
      node3.removeChild(node1);
      node3.isBlock();
      node2.isOnlyModifiesArgumentsCall();
      node2.setType(26);
      boolean boolean0 = node0.isGetElem();
      node0.isInstanceOf();
      int int0 = Node.LAST_PROP;
      String string0 = node0.toStringTree();
      node2.setOptionalArg(boolean0);
      Node.newString(string0);
      node0.getInputId();
      int int1 = 153;
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      node2.setCharno(85);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node3 = new Node(57, node0, node2, 50, 53);
      node2.isLocalResultCall();
      node3.removeFirstChild();
      Node node4 = new Node((-51), 42, 51);
      node1.getChildBefore(node3);
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = Node.newString("Y[g%r2'BXinV-vw c");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(false);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Y[g%r2'BXinV-vw c", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = Node.newString("Error", 29, 2239);
      node0.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node1.isGetElem();
      node0.isInstanceOf();
      node1.isParamList();
      Node node2 = new Node(32);
      node0.srcref(node1);
      node2.isBlock();
      node0.isNull();
      node1.setIsSyntheticBlock(false);
      node1.isFunction();
      Node node3 = new Node(31, 54, 120);
      node3.isHook();
      node0.isTrue();
      node2.getSourceFileName();
      node2.mayMutateArguments();
      node3.useSourceInfoIfMissingFromForTree(node1);
      Node.mergeLineCharNo(132, 47);
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node.mergeLineCharNo((-1823), 823);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) arrayList0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.setCharno((-2746));
      JSType[] jSTypeArray0 = new JSType[2];
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) functionType0, immutableList0);
      JSType jSType0 = templatizedType0.getPropertyType("Named type with empty name component");
      jSTypeArray0[1] = jSType0;
      Node node1 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isEquivalentTo(node1, true, false, true);
      node1.isGetElem();
      node1.isInc();
      node0.isThrow();
      node1.isNew();
      node0.isAssignAdd();
      node0.isEquivalentTo(node1, false, true, true);
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedHashSet<JSType> linkedHashSet0 = new LinkedHashSet<JSType>();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Collection<? extends JSType>) linkedHashSet0);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node4 = Node.newString("N$!WTzk(#b3trz@Q", 1, 1);
      Node node5 = new Node(12, node0, node1, node0);
      node3.isVar();
      node2.cloneTree();
      node3.getInputId();
      node4.isOr();
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("", 1610612736, 1610612736);
      node0.getDirectives();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      node0.setChangeTime(15);
      node0.isGetProp();
      Node node1 = Node.newString(4, "", 36, 2502);
      node0.removeProp(39);
      node0.removeProp((-1236));
      Node.mergeLineCharNo(39, 1628);
      node1.isNot();
      node0.isEquivalentTo(node1, false, false, false);
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = Node.newString("^bLhuu)Ah?4bH9");
      node0.getSourceOffset();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-52);
      byte byte0 = (byte) (-103);
      byteArray0[1] = (byte) (-103);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.getDouble();
      String string0 = "com.google.javascript.rhino.Node$NodeMismatch";
      Node.newString((int) byte0, string0);
      // Undeclared exception!
      try { 
        node2.getChangeTime();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = Node.newString(4, "_}f>*aS");
      node0.isNull();
      node0.setQuotedString();
      node0.isGetElem();
      node0.isInstanceOf();
      node0.isParamList();
      Node node1 = new Node(54, 40, 4095);
      Node node2 = new Node(48, node1, node0, node0, 31, 37);
      node0.isBlock();
      node2.hasMoreThanOneChild();
      Node node3 = new Node(2768, node0, 2768, 4);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node3.isSetterDef();
      int int0 = (-39);
      // Undeclared exception!
      try { 
        node3.getBooleanProp(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(263);
      Node node1 = new Node(263, node0, node0, node0);
      node1.isFromExterns();
      Node node2 = Node.newString((-179), "$h*Mz$p,VTxz~o&_]1", 114, 114);
      Node node3 = new Node(263, node1, node2, 100, 43);
      node3.setChangeTime(155);
      node2.cloneTree();
      Node node4 = new Node(263, node3, 4095, 2769);
      node4.isFor();
      node1.isReturn();
      node2.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      node3.isEmpty();
      Object object0 = new Object();
      node3.hasMoreThanOneChild();
      node1.isBlock();
      node0.isOnlyModifiesArgumentsCall();
      node3.isDefaultCase();
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = new Node((-957));
      Node node1 = new Node(4095, node0, 42, 30);
      Node node2 = Node.newString("", 42, 55);
      Node node3 = new Node(57, node2, node2, node1, 38, 106);
      node3.isBlock();
      node2.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node0.isInstanceOf();
      node1.isParamList();
      Node node4 = new Node(103);
      Node node5 = Node.newString("", 36, 123);
      node5.setOptionalArg(true);
      node5.addChildToFront(node4);
      node3.getChildBefore(node5);
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<u-DvT=%9P<B'Q");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      node2.setCharno(85);
      node0.isEquivalentTo(node2, false, false, false);
      node0.getLength();
      node0.isGetElem();
      node2.isInc();
      node2.isThrow();
      node2.isNew();
      node1.setQuotedString();
      node2.isIf();
      node0.isFor();
      node2.addChildToBack(node0);
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      Node node1 = Node.newString("NUMBER 0.0\n", 2, 51);
      node1.isSetterDef();
      node1.isBreak();
      node1.removeProp((-300));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node node2 = new Node((-127), node0, node1, node1);
      node2.useSourceInfoIfMissingFromForTree(node1);
      node1.isOptionalArg();
      Node node3 = new Node((-1), node1, node1, 15, 2442);
      Node node4 = null;
      Node node5 = new Node(node3.JSDOC_INFO_PROP, node0, node4, node3);
      node0.getSourceFileName();
      node0.isObjectLit();
      // Undeclared exception!
      try { 
        node0.addChildrenToBack(node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = new Node(102);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1368);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "empty_block");
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags0.areAllFlagsSet();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node1 = new Node(0);
      node0.isDelProp();
      node1.getLineno();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toStringTree();
      Object object0 = new Object();
      node0.isEquivalentTo(node2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "second new child has existing sibling");
      node2.isUnscopedQualifiedName();
      node0.toString(false, true, false);
      node1.getQualifiedName();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node1.removeProp((-3564));
      node2.isEquivalentTo(node1);
      node0.isEquivalentToShallow(node2);
      node0.isCatch();
      node0.isComma();
      node0.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      node0.getQualifiedName();
      Node node1 = new Node(1, node0, 57, 32);
      node1.removeChildren();
      Node node2 = Node.newString("REFERENCE_ERROR_TYPE", 32, 2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.addChildrenToBack(node2);
      node2.setWasEmptyNode(true);
      node2.setIsSyntheticBlock(false);
      node2.isFunction();
      node2.wasEmptyNode();
      node1.isVoid();
      node2.toStringTree();
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = Node.newString("/nW^");
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.putProp(39, "");
      node0.isLabelName();
      node0.toStringTree();
      Object object0 = new Object();
      node0.isEquivalentTo(node0);
      ImmutableList.of();
      node0.getLength();
      node0.isGetElem();
      node0.isInc();
      node0.isNew();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.isUnscopedQualifiedName();
      node0.isNoSideEffectsCall();
      node0.getChildAtIndex(40);
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = new Node(1093);
      Node node1 = new Node(4095, node0, 42, 30);
      Node node2 = Node.newString("", 42, 55);
      Node node3 = new Node(57, node2, node2, node1, 38, 102);
      node3.isAdd();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      node3.setChangeTime(101);
      node0.isGetProp();
      Node node4 = Node.newString(49, "", (-5518), 15);
      node0.removeProp(86);
      node3.removeProp(57);
      Node.mergeLineCharNo(53, 54);
      node4.isNot();
      node2.isEquivalentTo(node3, false, false, false);
      node3.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = Node.newString("Y[g%r2'BXinV-vw c");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = Node.newString(":<6dR9KM-yVM Gg%cj", 57, 8);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node0.isInstanceOf();
      node1.isEquivalentToTyped(node0);
      node0.isOnlyModifiesArgumentsCall();
      node1.isParamList();
      node0.setIsSyntheticBlock(false);
      node0.isFunction();
      node1.isThrow();
      node0.setChangeTime(56);
      node1.isVoid();
      node1.toStringTree();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = new Node((-284), (-284), (-284));
      Node node1 = new Node(29, node0);
      node1.isIf();
      node1.isTrue();
      node0.isParamList();
      Node node2 = new Node(30);
      node1.putIntProp((-844), 1);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node2;
      node1.srcrefTree(node0);
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node1;
      Node node3 = new Node((-1509));
      Node node4 = Node.newNumber((double) 8, 1, (-284));
      node4.addChildrenToFront(node0);
      int int0 = 2905;
      node3.setCharno(int0);
      // Undeclared exception!
      try { 
        nodeArray0[1].getLength();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(263);
      Node node1 = new Node(263, node0, node0, node0);
      node1.isFromExterns();
      Node node2 = Node.newString((-179), "$h*Mz$p,VTxz~o&_]1", 114, 114);
      Node node3 = new Node(263, node1, node2, 100, 43);
      node2.setOptionalArg(false);
      node3.setChangeTime(155);
      Node node4 = node2.cloneTree();
      Node node5 = new Node(263, node3, 4095, 2769);
      node5.isFor();
      node1.isReturn();
      node2.isSyntheticBlock();
      node0.isParamList();
      node0.isGetElem();
      node3.isInc();
      node5.isNew();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node4.isUnscopedQualifiedName();
      node2.isNoSideEffectsCall();
      node5.getChildAtIndex((-2880));
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = Node.newString("reflected_object", 3191, 0);
      Node node1 = Node.newString("reflected_object", 0, 11);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node0.toString(true, true, true);
      Node node2 = new Node(37, node1, node0, node1, node0, (-2435), 1);
      node2.hasChild(node0);
      node0.getChangeTime();
      node0.isSetterDef();
      node2.isString();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.isFalse();
      Node node3 = new Node(12, node1, 57, 12);
      node2.isNull();
      node0.setIsSyntheticBlock(true);
      node1.isFunction();
      node3.isThrow();
      node2.isVoid();
      node1.toStringTree();
      node3.hasChild(node0);
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = Node.newNumber((double) 57);
      Node node1 = new Node(57, node0, node0, node0);
      node0.isOptionalArg();
      node0.isEquivalentToTyped(node1);
      node1.mayMutateGlobalStateOrThrow();
      node0.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "empty_block");
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags1.areAllFlagsSet();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node2 = new Node((-375));
      node1.isDelProp();
      node2.getLineno();
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.removeProp(105);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node0.isInstanceOf();
      node0.isParamList();
      Node node1 = new Node(3182);
      Node node2 = node1.srcref(node0);
      node0.isBlock();
      node1.isNull();
      Node node3 = new Node(0, node0, node2, node2);
      node3.setIsSyntheticBlock(false);
      node1.isFunction();
      node1.isDefaultCase();
      node0.getNext();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("", 1610612736, 1610612736);
      node0.getDirectives();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      node0.setChangeTime(15);
      node0.isGetProp();
      Node node1 = Node.newString(4, "", 36, 31);
      node0.removeProp(39);
      node0.removeProp((-1236));
      Node.mergeLineCharNo(39, 1628);
      node1.isNot();
      node0.isCall();
      Node.extractCharno((-1999));
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(124, node0, 2, 41);
      node1.isContinue();
      node0.hasChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      node1.isEquivalentTo(node0);
      node1.getProp(47);
      node0.hasMoreThanOneChild();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags(98);
      node_SideEffectFlags5.setMutatesThis();
      node0.isWhile();
      node1.getProp(1091);
      node0.hasMoreThanOneChild();
      node1.isBlock();
      Node node2 = new Node(31, node1, node0, node1, 32, 1980);
      node2.isScript();
      node2.getJSDocInfo();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = Node.newString("{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(30);
      node0.isThis();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = Node.newString(4095, "{\"{5H2x&");
      node1.isUnscopedQualifiedName();
      node1.getIntProp(53);
      Node node2 = new Node(48, node1, node0, node1, node0, 47, 37);
      node0.isVar();
      node1.cloneTree();
      node2.getInputId();
      node1.isOr();
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      node2.setCharno(1);
      node0.isEquivalentTo(node2, true, true, true);
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node0.isEquivalentToShallow(node2);
      node2.isObjectLit();
      node0.addChildrenToBack(node1);
      node0.isLabel();
      node2.addChildrenToFront(node0);
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(263);
      Node node1 = new Node(263, node0, node0, node0);
      node1.isFromExterns();
      Node node2 = Node.newString((-179), "$h*Mz$p,VTxz~o&_]1", 114, 114);
      Node node3 = new Node(263, node1, node2, 113, 43);
      node2.setOptionalArg(false);
      node3.setChangeTime(155);
      Node node4 = node2.cloneTree();
      Node node5 = new Node(263, node3, 4095, 2769);
      node5.isFor();
      node1.isReturn();
      node2.isSyntheticBlock();
      node0.isParamList();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.removeProp((-4956));
      node5.isVarArgs();
      node0.mayMutateGlobalStateOrThrow();
      node5.isParamList();
      node2.isStringKey();
      node3.removeChild(node1);
      node3.getAncestors();
      Node node6 = new Node(46, node4, 16, 30);
      node1.addChildrenToFront(node5);
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<u-DvT=%9P<B'Q");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      node2.setCharno(85);
      node0.isEquivalentTo(node2, false, false, false);
      Node node3 = new Node(2788, node2);
      node3.isDebugger();
      node3.isDefaultCase();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node4 = node3.removeChildAfter(node2);
      Node node5 = node2.getChildAtIndex(node0.DIRECTIVES);
      Node node6 = new Node(node2.INPUT_ID, node4, node5, node4, node5);
      node6.wasEmptyNode();
      node6.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newNumber(1231.9995896199237);
      node0.isQuotedString();
      Node node1 = new Node(2, node0, node0, node0);
      node1.setOptionalArg(true);
      Node.newString("zQ~Je@/.M@Mo-Oz<I3/");
      node0.getInputId();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString("{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.setOptionalArg(true);
      node0.isFromExterns();
      node0.setChangeTime(0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9KM-yVM Gg%cj", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(710, 5760, (-2340));
      node1.setVarArgs(false);
      node1.isCast();
      node0.isComma();
      int int0 = Node.NO_SIDE_EFFECTS;
      node1.putIntProp(11, 77);
      node1.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Node node0 = new Node(32, 191, 263);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node node1 = new Node(915, node0, 53, 49);
      node1.isOr();
      node1.isAssign();
      Node node2 = node1.cloneTree();
      node2.isSyntheticBlock();
      Node.newNumber((double) 52);
      node0.isStringKey();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(39, node0);
      node0.isIf();
      node1.isTrue();
      Node node2 = new Node(400);
      node2.putIntProp(30, 57);
      Node node3 = node1.srcref(node2);
      node1.setIsSyntheticBlock(false);
      node3.isDelProp();
      node1.isUnscopedQualifiedName();
      node0.isGetElem();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setMutatesArguments();
      node0.hasOneChild();
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = new Node(117);
      node0.isDo();
      node0.detachChildren();
      node0.setChangeTime(297);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("U;F6,8x`!+mh\"N8\u0004", false);
      node0.isFromExterns();
      node0.setChangeTime(117);
      SimpleSourceFile simpleSourceFile1 = new SimpleSourceFile("free_call", false);
      node0.setStaticSourceFile(simpleSourceFile1);
      Node node1 = Node.newString(" [", (-3564), 2);
      node0.isVar();
      node0.cloneTree();
      node0.getInputId();
      node1.isOr();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      node0.isVar();
      node0.cloneTree();
      Node node1 = new Node(112, 955, 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      simpleErrorReporter0.error("com.google.common.base.Predicates$ContainsPatternPredicate", "Object#Key", 85, 132);
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[0] = null;
      jSTypeArray0[1] = null;
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isTrue();
      node2.useSourceInfoFromForTree(node1);
      Node node3 = Node.newString("Object#Key", (-2992), 1546);
      Node node4 = new Node(48);
      node4.getAncestors();
      node3.isWith();
      node1.isReturn();
      node3.children();
      node0.isString();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = 1610612740;
      Node node0 = Node.newString("", 1610612740, 1610612740);
      node0.getDirectives();
      int int1 = 15;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      node0.setChangeTime(15);
      node0.isGetProp();
      Node node1 = Node.newString(4, "", 36, 31);
      node1.setDouble(38);
      Node[] nodeArray0 = new Node[0];
      int int2 = 878;
      Node node2 = new Node(int1, nodeArray0, int2, node1.SIDE_EFFECT_FLAGS);
      int int3 = 2726;
      Node node3 = null;
      try {
        node3 = new Node(int0, node0, node2, node1, node2, node2.EMPTY_BLOCK, int3);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // RETURN  36 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(13, "fAAl", 2503, 0);
      node0.isTry();
      Node node1 = Node.newString(40, "fAAl");
      node1.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(15, 13, 32);
      node2.getInputId();
      node2.cloneNode();
      Node node3 = Node.newString(509, "TypeError", 37, 1291);
      node3.putProp(43, node0);
      node3.isName();
      Node node4 = node2.cloneTree();
      Node node5 = new Node(37, node1, node1, node1, node2, 47, 2);
      node4.isDec();
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toStringTree();
      Object object0 = new Object();
      node0.isEquivalentTo(node2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "second new child has existing sibling");
      node2.isUnscopedQualifiedName();
      node0.toString(false, true, false);
      node1.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      Node node3 = Node.newString("~xhYM:KmN2?RFy;", 57, 37);
      node3.hasOneChild();
      node1.clonePropsFrom(node3);
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = new Node(40, 306654252, 306654252);
      Node node1 = new Node(36, node0);
      node1.setWasEmptyNode(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node1.isEquivalentTo(node0);
      node1.getProp(51);
      node1.isEquivalentToShallow(node1);
      node_SideEffectFlags0.setMutatesThis();
      node0.getProp(54);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(39, node0);
      node0.isIf();
      node1.isTrue();
      node0.isParamList();
      Node node2 = new Node(400);
      node2.putIntProp(30, 57);
      Node node3 = node1.srcref(node2);
      node1.setIsSyntheticBlock(false);
      node3.isDelProp();
      node1.isUnscopedQualifiedName();
      node0.isGetElem();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node2.removeProp(16);
      node1.isEquivalentTo(node2);
      node1.isEquivalentToShallow(node3);
      node2.isCatch();
      node3.isComma();
      Node node4 = Node.newString(43, "e@'|W%t_k<YGkeMS");
      node4.copyInformationFrom(node3);
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = new Node(40);
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(153, node0, node0, node0, node0, (-1605), 36);
      node1.removeChildren();
      Node node2 = Node.newNumber(3156.35);
      Node node3 = new Node((-429), 2, 40);
      node3.setVarArgs(false);
      node1.isCast();
      node3.isOnlyModifiesThisCall();
      int int0 = Node.NO_SIDE_EFFECTS;
      node3.putIntProp(4, (-937));
      node2.isEquivalentToTyped(node3);
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = new Node(40);
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(153, node0, node0, node0, node0, (-1605), 36);
      Node node2 = Node.newNumber(3156.35);
      Node node3 = new Node((-429), 2, 40);
      node3.setVarArgs(false);
      node1.isCast();
      node0.isComma();
      int int0 = Node.NO_SIDE_EFFECTS;
      node3.putIntProp(4, (-937));
      node2.isEquivalentToTyped(node3);
      node3.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isWith();
      node0.removeProp(1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)57;
      byteArray0[1] = (byte)93;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[2] = (byte)15;
      byteArray0[4] = (byte)77;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node node1 = new Node(42, node0, node0, node0, node0);
      node1.isParamList();
      node0.putIntProp(40, 54);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.isNot();
      node0.isCall();
      Node.extractCharno(48);
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = new Node(40, 306654252, 306654252);
      Node node1 = new Node(36, node0);
      node1.setWasEmptyNode(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(46);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node1.isEquivalentTo(node0);
      node1.getProp(51);
      node1.isEquivalentToShallow(node1);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.setMutatesThis();
      node1.putIntProp((-2546), 0);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node1.isNot();
      node0.isFunction();
      Node.extractCharno(38);
      Node node2 = new Node(306654252, node1, node1, node1);
      node1.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(111);
      Node node1 = Node.newString("kY");
      Node node2 = new Node(1, node0, 38, 16);
      node2.isNull();
      node1.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setMutatesThis();
      node0.putIntProp(1, 57);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node1.isNot();
      node1.isFunction();
      Node.extractCharno((-1043));
      Node node3 = new Node(30, node2, node2, node1);
      node2.getIndexOfChild(node3);
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(124, node0, 2, 41);
      node0.setLength(29);
      node1.getSourceFileName();
      node1.putIntProp(39, 47);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.isFunction();
      Node.extractCharno((-1276));
      node1.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isCast();
      node0.detachChildren();
      node0.setChangeTime(40);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("U;F6,8x`!+mh\"N8\u0004", true);
      node0.isFromExterns();
      node0.setChangeTime(86);
      SimpleSourceFile simpleSourceFile1 = new SimpleSourceFile("free_call", false);
      node0.setStaticSourceFile(simpleSourceFile1);
      Node node1 = Node.newString("Y[g%r2'BXinV-vw c", 1024, 38);
      node1.isVar();
      node0.cloneTree();
      node0.getInputId();
      node1.isOr();
      node0.isRegExp();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node.extractCharno(124);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = Node.newNumber((double) 124);
      Node node1 = new Node(124, node0, node0, node0, node0, 31, 49);
      node0.wasEmptyNode();
      node1.detachChildren();
      Node node2 = new Node(3612, node1);
      node0.toString();
      Node node3 = Node.newString("P:", 29, (-2087499244));
      node1.isOnlyModifiesArgumentsCall();
      Node node4 = node3.srcrefTree(node0);
      node2.isCase();
      node1.mayMutateGlobalStateOrThrow();
      node4.getSourceOffset();
      node3.setSideEffectFlags(123);
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = new Node(117, 306654252, 2180);
      Node node1 = new Node(93, node0);
      node1.setWasEmptyNode(true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-81));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node1.isAnd();
      node1.getProp(1987);
      node0.hasMoreThanOneChild();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node1.isEmpty();
      node0.isParamList();
      node0.isScript();
      node1.getJSDocInfo();
      node0.isCall();
      node0.isHook();
      node1.putIntProp(37, 4095);
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = new Node((-2087499244));
      String string0 = "n(Yy1I3bgq:W;d";
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = new CharArrayWriter(36);
      char[] charArray0 = new char[5];
      charArray0[0] = '`';
      charArray0[1] = '\"';
      charArray0[2] = 'y';
      charArray0[3] = 'f';
      charArray0[4] = '&';
      charArrayWriter0.write(charArray0);
      charArrayWriter0.writeTo(charArrayWriter1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      node0.appendStringTree(charArrayWriter0);
      node0.getJSDocInfo();
      node0.addSuppression(string0);
      node0.getChangeTime();
      node0.isLabelName();
      node0.getDouble();
      node0.isHook();
      node0.isIn();
      int int0 = (-1438);
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = Node.newNumber((double) 13);
      node0.children();
      node0.mayMutateArguments();
      Node node1 = node0.cloneTree();
      Node node2 = new Node(13, node0);
      node2.isDebugger();
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      node1.isDebugger();
      Node.newString("jo7]~-}51*\"fLbTvHc/", 35, 35);
      node2.addSuppression("jo7]~-}51*\"fLbTvHc/");
      node1.replaceChild(node2, node2);
      node1.toString();
      boolean boolean0 = true;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        node3.isEquivalentTo(node0, boolean0, boolean1, boolean1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = new Node(117);
      node0.isDo();
      node0.detachChildren();
      node0.isContinue();
      node0.setChangeTime(297);
      String string0 = "U;6,8`!\\+mh\"N8\\4";
      Node node1 = new Node(36, node0, node0, node0, 53, (-3564));
      node1.setSideEffectFlags((-23));
      Node.newString(string0);
      node1.isOnlyModifiesArgumentsCall();
      node1.isGetElem();
      // Undeclared exception!
      try { 
        node1.isInstanceOf();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = new Node(117);
      node0.detachChildren();
      node0.isContinue();
      node0.setChangeTime(297);
      node0.children();
      node0.setOptionalArg(false);
      node0.isOnlyModifiesArgumentsCall();
      node0.getProp((-3568));
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2195));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      node0.detachChildren();
      node0.isVar();
      Node node1 = new Node(18, node0, node0, node0);
      node0.isNE();
      node1.isDelProp();
      MockPrintStream mockPrintStream0 = new MockPrintStream(templateType0.NOT_A_TYPE);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Object object0 = new Object();
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      String string0 = "'";
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) string0;
      PrintStream printStream0 = mockPrintStream1.printf(string0, objectArray0);
      node1.appendStringTree(printStream0);
      int int0 = (-2607);
      Node.extractLineno(int0);
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(124, node0, 2, 41);
      node1.isContinue();
      node0.hasChildren();
      node1.getJSDocInfo();
      node1.isUnscopedQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.setSourceEncodedPositionForTree(47);
      node1.isThis();
      node0.setOptionalArg(false);
      node1.isArrayLit();
      Node.mergeLineCharNo((-1135), 47);
      node1.isComma();
      node0.isAnd();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      node0.getQualifiedName();
      Node node1 = new Node(1, node0, 57, 32);
      node0.removeChildren();
      Node node2 = Node.newString("REFERENCE_ERROR_TYPE", 32, 2);
      node1.addChildrenToBack(node2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node3 = new Node(32, node1, node1);
      node3.isEquivalentTo((Node) null);
      node1.cloneTree();
      node2.getInputId();
      // Undeclared exception!
      try { 
        node0.isOr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = Node.newString("reflected_object", 3191, 0);
      Node node1 = Node.newString("reflected_object", 0, 11);
      node1.toStringTree();
      Object object0 = new Object();
      node1.removeChildren();
      node1.isEquivalentToShallow((Node) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.mergeLineCharNo(node1.EMPTY_BLOCK, node0.IS_CONSTANT_NAME);
      node0.isAnd();
      JSDocInfo jSDocInfo0 = null;
      try {
        jSDocInfo0 = new JSDocInfo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = node0.cloneTree();
      Node node2 = new Node(39, 38, 39);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isTrue();
      node1.isEquivalentTo(node2, false, false, false);
      node0.isThrow();
      Node node3 = new Node(38, node0, node2, node0, 105, 4);
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node2.getLineno();
      node2.getInputId();
      node0.isParamList();
      node3.isGetElem();
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = new Node(77);
      Node node1 = Node.newString("IaA{gZB /b");
      Node node2 = node0.srcref(node1);
      node1.setCharno(4095);
      int int0 = Node.EMPTY_BLOCK;
      node2.isEmpty();
      node2.isBlock();
      node1.isNew();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = Node.newString("d~luUTg+'", 37, (-878));
      node3.getDirectives();
      node2.isWith();
      node0.isNoSideEffectsCall();
      node0.useSourceInfoIfMissingFrom(node3);
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.setSourceEncodedPositionForTree((-934));
      node0.setOptionalArg(true);
      node0.isFromExterns();
      Node node1 = Node.newString("nV/\"", 728, 38);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node1.isGetterDef();
      node0.isParamList();
      Node node2 = new Node((-1564));
      Node node3 = node1.srcref(node0);
      node3.isCase();
      node0.isNull();
      node1.setIsSyntheticBlock(false);
      node1.isFunction();
      node0.isHook();
      node1.isTrue();
      node0.getSourceFileName();
      node2.mayMutateArguments();
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.setOptionalArg(true);
      node0.isFromExterns();
      Node node1 = Node.newString("nV/\"", 728, 38);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node1.isGetterDef();
      node0.isParamList();
      Node node2 = node0.srcref(node1);
      node2.isArrayLit();
      node1.isNew();
      node2.isQuotedString();
      node2.putIntProp(15, 48);
      node2.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = new Node((-2410), (-3373), 1753);
      node0.getSourceOffset();
      node0.cloneTree();
      Node node1 = new Node((-2410), node0, node0, node0, node0);
      node1.children();
      node0.replaceChildAfter(node1, node1);
      node1.isString();
      String string0 = "2!nZuXv/J8";
      // Undeclared exception!
      try { 
        Node.newString(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = new Node(92, 92, 92);
      Node node1 = Node.newString("e}i<M//&IW?).k;u", 2601, 51);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.checkTreeEquals(node0);
      node2.getChangeTime();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node1.setLength(54);
      node0.toStringTree();
      node0.addSuppression("CharMatcher.is('");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "CharMatcher.is('");
      node0.getString();
      node1.isDo();
      int int0 = 57;
      Node node3 = new Node(int0, node2, node2.CHANGE_TIME, node1.IS_CONSTANT_NAME);
      node0.clonePropsFrom(node3);
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = Node.newNumber(1454.498);
      node0.isVar();
      node0.isName();
      Node node1 = node0.cloneTree();
      node1.checkTreeEqualsImpl(node0);
      node1.addChildAfter(node0, node0);
      // Undeclared exception!
      try { 
        node1.isQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = new Node(43);
      Node node1 = Node.newString("com.google.common.collect.AbstractMapBasedMultimap$AsMap");
      Node node2 = node0.srcref(node1);
      node0.setCharno(30);
      node1.getLength();
      node0.isInc();
      node1.isThrow();
      node0.isNew();
      node2.setQuotedString();
      node0.isIf();
      // Undeclared exception!
      try { 
        node1.isFor();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      Iterator<JSType> iterator0 = (Iterator<JSType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node(282, 26, 154);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = new Node(118, nodeArray0);
      node0.getLastSibling();
      node2.getDouble();
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      int int0 = Node.OPT_ARG_NAME;
      node0.removeProp(37);
      double double0 = 74.71427607;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.addChildrenAfter(node0, node0);
      int int1 = 790;
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = new Node(40, 306654252, 306654252);
      node0.isOnlyModifiesArgumentsCall();
      node0.setLength((-3568));
      node0.toStringTree();
      node0.setOptionalArg(false);
      node0.isCatch();
      node0.isComma();
      node0.getSourceFileName();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      node0.setLength(1951);
      node0.toStringTree();
      Node node1 = new Node(40, node0, node0, node0, node0, 0, 1);
      Node node2 = Node.newNumber((double) 4);
      node2.setVarArgs(false);
      node1.getSideEffectFlags();
      node0.isCast();
      node0.isComma();
      int int0 = Node.NO_SIDE_EFFECTS;
      node1.putIntProp(74, 8);
      node1.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = Node.newNumber(1468.413929983989);
      Node node1 = node0.cloneTree();
      Node node2 = new Node(4095, node1, node1, node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = new Node(53);
      Node node4 = Node.newString("kY");
      node0.setIsSyntheticBlock(false);
      node0.isDelProp();
      node2.isUnscopedQualifiedName();
      node4.isGetElem();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node2.removeProp((-1218));
      node0.isNew();
      node4.checkTreeTypeAwareEqualsImpl(node0);
      node1.isAssignAdd();
      node2.isExprResult();
      node0.getChildAtIndex(33);
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = Node.newNumber(1231.9995896199237);
      node0.isQuotedString();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isAdd();
      node0.isDec();
      node0.isGetElem();
      node0.isOnlyModifiesArgumentsCall();
      node0.isWhile();
      Node node1 = new Node(531);
      Node node2 = node1.srcref(node0);
      node2.isCase();
      node0.toStringTree();
      int int0 = Node.IS_CONSTANT_NAME;
      node2.isDebugger();
      node0.getLength();
      node1.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = Node.newString(0, "{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      node0.isFromExterns();
      node0.setChangeTime(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WEl;o95X3");
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9M-yVM Gg%cj", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(53, node0, node0, node0, 49, 39);
      node1.isAdd();
      node1.isDec();
      node0.isGetElem();
      node0.isOnlyModifiesArgumentsCall();
      node1.isParamList();
      Node node2 = new Node(46);
      Node node3 = node2.srcref(node0);
      node2.isCase();
      node3.toStringTree();
      int int0 = Node.IS_CONSTANT_NAME;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node3.isGetterDef();
      node0.addChildrenToFront(node1);
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(52);
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      node2.setCharno(85);
      node0.isEquivalentTo(node2, false, false, false);
      node0.isTry();
      node2.isInc();
      node2.isThrow();
      node2.isNew();
      node2.isAssignAdd();
      node2.isEquivalentTo(node0, false, true, true);
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      node0.getQualifiedName();
      Node node1 = new Node(1, node0, 57, 32);
      node0.removeChildren();
      Node node2 = Node.newString("REFERENCE_ERROR_TYPE", 32, 2);
      node1.addChildrenToBack(node2);
      Node node3 = new Node(32, node1, node1);
      node1.cloneTree();
      node2.getInputId();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = new Node(1093);
      Node node1 = new Node(4095, node0, 42, 30);
      Node node2 = Node.newString("", 42, 55);
      Node node3 = new Node(57, node2, node2, node1, 38, 106);
      node3.isAdd();
      node2.isOnlyModifiesArgumentsCall();
      node0.isGetElem();
      node0.isInstanceOf();
      node1.isParamList();
      Node node4 = new Node(103);
      Node node5 = node3.srcref(node2);
      node2.isOptionalArg();
      node4.isQuotedString();
      node3.isObjectLit();
      node3.addChildrenToBack(node4);
      node3.isLabel();
      node5.addChildrenToFront(node2);
      node2.isAnd();
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newString("Y[g%r2'BXinV-vw c");
      node0.setSourceEncodedPositionForTree(0);
      node0.setOptionalArg(true);
      node0.setLength(1613);
      node0.toStringTree();
      Node node1 = new Node(4095, node0, node0, node0, node0, 17, 132);
      Node node2 = Node.newNumber((-1.0));
      node2.setVarArgs(true);
      Node node3 = new Node(2);
      node3.getSideEffectFlags();
      node1.isCast();
      node1.isComma();
      int int0 = Node.NO_SIDE_EFFECTS;
      node0.putIntProp(49, 0);
      node1.isEquivalentToTyped(node2);
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      int int0 = Node.OPT_ARG_NAME;
      node0.removeProp(37);
      node0.mayMutateArguments();
      Node.newNumber(74.71427607, 53, 29);
      node0.isRegExp();
      node0.getDouble();
      int int1 = 122;
      int int2 = 2;
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = new Node(31);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 1, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.toStringTree();
      Object object0 = new Object();
      node1.isEquivalentToShallow(node2);
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node2.mayMutateGlobalStateOrThrow();
      node2.isCatch();
      node1.isComma();
      node1.isReturn();
      node2.getChildBefore(node1);
      String string0 = "Y[g%r2'B\\XinV-vw c";
      // Undeclared exception!
      try { 
        node0.setString(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(47, node0, node0, 37, 51);
      node0.isIf();
      node1.isTrue();
      node0.isParamList();
      Node node2 = new Node(400);
      node2.putIntProp(30, 57);
      Node node3 = node1.srcref(node2);
      node1.setIsSyntheticBlock(false);
      node3.isDelProp();
      node1.isUnscopedQualifiedName();
      node0.isGetElem();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node2.removeProp(16);
      node1.isEquivalentTo(node2);
      node1.isEquivalentToShallow(node3);
      node2.isCatch();
      node3.isComma();
      node3.isReturn();
      node1.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = Node.newString("{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.isIn();
      node0.getJsDocBuilderForNode();
      Node node1 = new Node((-2895), node0, node0, node0);
      node1.setLineno(49);
      int int0 = Node.IS_DISPATCHER;
      node0.isTypeOf();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      Object object0 = new Object();
      node0.getProp(4);
      node_NodeMismatch0.equals(object0);
      node0.isUnscopedQualifiedName();
      node1.isReturn();
      node1.isReturn();
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = Node.newString("{\"{5H2x&");
      node0.setSourceEncodedPositionForTree(0);
      node0.isThis();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.getLength();
      node0.isIn();
      node0.getJsDocBuilderForNode();
      Node node1 = new Node((-2895), node0, node0, node0);
      node1.setLineno(49);
      int int0 = Node.IS_DISPATCHER;
      node0.isTypeOf();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      Object object0 = new Object();
      node_NodeMismatch0.equals(object0);
      node1.toString();
      node0.isGetElem();
      node0.isParamList();
      // Undeclared exception!
      try { 
        node0.getQualifiedName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2895
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(93, 93, 93);
      Node node1 = new Node(55);
      Node node2 = Node.newString("kY");
      Node node3 = node1.srcref(node0);
      node2.setCharno((-387));
      node2.isEquivalentTo(node1, false, false, false);
      node1.isTry();
      node2.isInc();
      node3.isThrow();
      node3.isNew();
      node0.isAssignAdd();
      node3.isEquivalentTo(node0, false, false, true);
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      int int0 = Node.OPT_ARG_NAME;
      node0.removeProp(37);
      node0.mayMutateArguments();
      Node node1 = new Node(56, node0, node0, node0, node0);
      node0.isRegExp();
      node1.addChildrenAfter(node0, node0);
      Node node2 = Node.newNumber((double) node1.COLUMN_MASK, node0.REFLECTED_OBJECT, node1.REFLECTED_OBJECT);
      // Undeclared exception!
      try { 
        node2.isScript();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(117, nodeArray0, 117, (-1096));
      Node node1 = new Node(117, node0, node0, node0);
      node1.isEmpty();
      node1.getLength();
      node0.getProp(55);
      node0.hasMoreThanOneChild();
      node1.isBlock();
      node1.isNull();
      node0.isFunction();
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = Node.newNumber((double) 38);
      node2.isHook();
      node0.useSourceInfoFromForTree(node2);
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "f.~E`{Az8uQ3|L:tu");
      node1.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.setMutatesArguments();
      node1.isContinue();
      node1.isStringKey();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(39, node0);
      node0.isIf();
      node1.isTrue();
      node0.isParamList();
      Node node2 = new Node(400);
      node2.putIntProp(30, 57);
      Node node3 = node1.srcref(node2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      node1.setIsSyntheticBlock(false);
      node3.isDelProp();
      node1.isUnscopedQualifiedName();
      node0.isGetElem();
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node2.removeProp(16);
      node2.isNew();
      node3.checkTreeTypeAwareEqualsImpl(node1);
      node2.isAssignAdd();
      node1.useSourceInfoIfMissingFrom(node0);
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = Node.newNumber(559.183700446);
      node0.getAncestors();
      node0.isVarArgs();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node1 = new Node(38, node0);
      boolean boolean0 = node1.isScript();
      node1.isUnscopedQualifiedName();
      node1.getIntProp(node0.NO_SIDE_EFFECTS);
      node1.setOptionalArg(boolean0);
      node1.mayMutateGlobalStateOrThrow();
      int int0 = Node.FREE_CALL;
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      String string0 = node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(38);
      node0.putIntProp(53, (-81));
      node1.isScript();
      Node node2 = new Node((-1), node1, node1, node0, node1, 1465, 8);
      node1.isUnscopedQualifiedName();
      Node node3 = Node.newString(node2.MAX_COLUMN_NUMBER, string0, node1.SIDE_EFFECTS_FLAGS_MASK, node0.DIRECTIVES);
      node3.getIntProp(node1.IS_NAMESPACE);
      int int0 = 57;
      int int1 = (-1303);
      Node node4 = null;
      try {
        node4 = new Node(int1, node3, node1.IS_NAMESPACE, node2.COLUMN_BITS);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.isFalse();
      Node node3 = new Node(12, node1, 57, 12);
      node2.isNull();
      node0.setIsSyntheticBlock(true);
      node1.isFunction();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1583));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags(4409);
      node_SideEffectFlags4.setMutatesThis();
      node1.isWhile();
      node3.getProp(10);
      node2.hasMoreThanOneChild();
      node0.isBlock();
      node1.isScript();
      node2.getJSDocInfo();
      node3.getInputId();
      node2.getSourceOffset();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.isFalse();
      Node node3 = new Node(12, node1, 57, 12);
      node0.setIsSyntheticBlock(true);
      node1.isFunction();
      node2.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.toStringTree();
      node2.setOptionalArg(true);
      node2.isOnlyModifiesArgumentsCall();
      node0.isDefaultCase();
      node0.isNot();
      node3.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = Node.newNumber((double) 13);
      node0.isQuotedString();
      Node node1 = new Node(13, node0);
      node1.isDebugger();
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.isDebugger();
      node2.type = 31;
      node1.srcrefTree(node2);
      node1.addSuppression("jo7]~-}51*\"fLbTvHc/");
      node2.isWhile();
      node0.replaceChild(node1, node1);
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(0, 1584, 8);
      node0.isLabelName();
      Node node1 = new Node(56, node0, node0, node0, 46, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node0.toStringTree();
      Object object0 = new Object();
      node0.isEquivalentToShallow(node2);
      // Undeclared exception!
      try { 
        node0.isVar();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.setOptionalArg(true);
      node0.isFromExterns();
      Node node1 = Node.newString("nV/\"", 728, 38);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node1.isGetterDef();
      node0.isParamList();
      Node node2 = node0.srcref(node1);
      node0.isBlock();
      node2.isNull();
      node1.setIsSyntheticBlock(true);
      node2.isFunction();
      node1.isCatch();
      node0.isComma();
      node0.isReturn();
      node0.getChildBefore(node2);
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node node1 = new Node(39, node0);
      node0.isIf();
      node1.isTrue();
      node0.isParamList();
      node0.isName();
      Node node2 = node1.cloneTree();
      node1.addChildAfter(node0, node0);
      // Undeclared exception!
      try { 
        node2.isQualifiedName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.toStringTree();
      node0.isNoSideEffectsCall();
      node0.isWith();
      node0.removeProp(1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)57;
      byteArray0[1] = (byte)93;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[2] = (byte)15;
      byteArray0[4] = (byte)77;
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.clearAllFlags();
      Node node1 = new Node(42, node0, node0, node0, node0);
      node1.isParamList();
      node0.putIntProp(40, 54);
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node1.setJSDocInfo((JSDocInfo) null);
      node0.isNot();
      node0.isCall();
      Node.extractCharno(48);
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = new Node((-974));
      node0.isLabelName();
      Node node1 = new Node(147, node0, node0, node0, 54, 56);
      Node node2 = Node.newString((-3329), "H", 2, 47);
      Node node3 = node1.useSourceInfoIfMissingFrom(node2);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node4 = node2.setJSDocInfo(jSDocInfo0);
      node2.toStringTree();
      node2.isEquivalentToTyped(node3);
      Object object0 = new Object();
      node4.removeChildren();
      node0.isEquivalentToShallow(node3);
      SimpleErrorReporter simpleErrorReporter0 = null;
      try {
        simpleErrorReporter0 = new SimpleErrorReporter();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3329
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(77);
      Node node1 = new Node(1927, node0, 42, 47);
      node1.isParamList();
      Node node2 = new Node(38);
      Node node3 = new Node(30, node2);
      node2.srcref(node3);
      node0.isCase();
      node0.isNull();
      node0.setIsSyntheticBlock(false);
      node0.isFunction();
      node1.isHook();
      node2.isTrue();
      Node.extractCharno(39);
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.setOptionalArg(true);
      node0.isFromExterns();
      Node node1 = Node.newString("nV/\"", 728, 38);
      node1.isAdd();
      node0.isOnlyModifiesArgumentsCall();
      node0.getSourceFileName();
      node1.isGetterDef();
      Node node2 = new Node(117, node0);
      node1.isUnscopedQualifiedName();
      node2.isReturn();
      node2.isReturn();
      Node node3 = Node.newNumber((double) 43);
      node2.srcrefTree(node3);
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = Node.newNumber(1468.0);
      int int0 = Node.POST_FLAG;
      node0.isGetElem();
      node0.isDebugger();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node1 = Node.newString((-2354), "\n\nSubtree2: ", 57, 37);
      Node node2 = new Node(8, node0, node1, node1);
      node2.putBooleanProp(49, false);
      node1.getString();
      node2.isNE();
      node2.getIntProp(536870912);
      Node node3 = node0.clonePropsFrom(node2);
      node3.isObjectLit();
      node1.isNE();
      Node.newString("\n\nSubtree2: ");
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = Node.newNumber(559.183700446);
      node0.getAncestors();
      node0.isVarArgs();
      node0.isName();
      Node node1 = new Node(32, node0, node0, node0, node0, 4, 40);
      Node node2 = node1.cloneTree();
      node0.isQualifiedName();
      node2.isOnlyModifiesArgumentsCall();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(153, node0, node0, node0, node0, 85, 36);
      node1.isCast();
      node1.isEmpty();
      node1.isParamList();
      node1.getQualifiedName();
      node1.getBooleanProp(16);
      node1.getJSDocInfo();
      node0.isCall();
      Node node2 = node1.cloneTree();
      node2.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = Node.newString("}@v^ST?P=-vnZ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node1 = new Node(3005, node0, node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node1.isBreak();
      node1.getJSDocInfo();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isOnlyModifiesArgumentsCall();
      node1.isThrow();
      node2.getParent();
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newNumber(1.2, 173, 173);
      node0.isSetterDef();
      node0.isOptionalArg();
      node0.isQualifiedName();
      node0.removeProp(153);
      node0.isHook();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = new Node(4, 4, 1093);
      node0.isDelProp();
      node0.isBlock();
      node0.isFunction();
      node0.mayMutateGlobalStateOrThrow();
      Node.newNumber((double) 49);
      Node node1 = Node.newString(55, "Y[g%r2'BXinV-vw c", 31, 0);
      node1.isHook();
      node0.isSetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isUnscopedQualifiedName();
      node0.isReturn();
      node1.isReturn();
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = new Node(4, 4, 1093);
      Node node1 = new Node(1093, node0, node0, node0, 1, 53);
      node0.isReturn();
      node0.isNoSideEffectsCall();
      Node.extractCharno((-1986));
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isBlock();
      node0.isEquivalentTo(node0);
      node0.isGetterDef();
      node0.isParamList();
      Node node1 = new Node(306654252);
      Node node2 = node0.srcref(node1);
      node2.isUnscopedQualifiedName();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isContinue();
      node0.isEquivalentTo(node0);
      node0.isSyntheticBlock();
      node0.isParamList();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.removeProp(155);
      node0.isVarArgs();
      node0.mayMutateGlobalStateOrThrow();
      node0.isParamList();
      node0.isStringKey();
      node0.removeChild(node0);
      node0.getAncestors();
      Node node1 = new Node(node0.FREE_CALL, node0.JSDOC_INFO_PROP, node0.LENGTH);
      node0.isDelProp();
      node1.isDefaultCase();
      // Undeclared exception!
      try { 
        node0.isNot();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = new Node(40, 306654252, 306654252);
      Node node1 = new Node(36, node0);
      node1.setWasEmptyNode(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearAllFlags();
      node1.isQualifiedName();
      node_SideEffectFlags1.setAllFlags();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+MUyJ]lOy6");
      int int0 = Node.FLAG_ARGUMENTS_UNMODIFIED;
      node1.isInc();
      Node node2 = new Node(46, node1);
      node2.removeFirstChild();
      node2.isThrow();
      Node node3 = Node.newString("co[O9F^= e1~Z<O", 55, 38);
      node3.isNew();
      node0.isAssignAdd();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1093);
      node0.isDo();
      node0.getDouble();
      node0.toString(true, true, true);
      node0.getChangeTime();
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(52);
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      node2.setCharno(85);
      node0.isEquivalentTo(node2, false, false, false);
      node0.isTry();
      node2.isInc();
      node2.isThrow();
      node2.isEquivalentToTyped(node1);
      node2.isNew();
      node2.isAssignAdd();
      node0.isReturn();
      node2.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node3 = node0.setJSDocInfo(jSDocInfo0);
      node2.toStringTree();
      Object object0 = new Object();
      node0.removeChildren();
      node1.isEquivalentToShallow(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.mergeLineCharNo(42, 4095);
      node3.isAnd();
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      node1.srcrefTree(node0);
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = new Node(40, 306654252, 306654252);
      Node node1 = new Node(36, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearAllFlags();
      node1.isQualifiedName();
      node_SideEffectFlags1.setAllFlags();
      node1.isEquivalentTo(node0);
      node1.getProp(51);
      node1.isFor();
      node1.addChildToBack(node0);
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = Node.newString("D(*08,<=", 306654252, (-1998));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)103;
      byteArray0[1] = (byte)31;
      byte byte0 = (byte)33;
      byteArray0[2] = (byte)33;
      byteArray0[3] = (byte) (-60);
      byteArray0[4] = (byte)35;
      byteArray0[5] = (byte)86;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = new Node(64, node0, 64, 43);
      node1.addChildToBack(node0);
      Node node2 = new Node(node1.ORIGINALNAME_PROP, node0);
      node1.putProp(byte0, node2);
      node1.isNull();
      node1.isIf();
      node1.getStaticSourceFile();
      Node node3 = node0.useSourceInfoIfMissingFrom(node1);
      node3.isBreak();
      node0.isSwitch();
      Node node4 = node1.srcrefTree(node0);
      node3.isQuotedString();
      // Undeclared exception!
      try { 
        node4.getSourcePosition();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(108, nodeArray0, 108, 108);
      Node node1 = new Node(108, node0, node0, node0);
      node0.isCase();
      node0.getProp(55);
      node0.hasMoreThanOneChild();
      node1.isBreak();
      node1.isNull();
      node0.isFunction();
      Node node2 = Node.newString(57, "Y[g%r2'BXinV-vw c", 46, 53);
      node0.isVar();
      Node node3 = node0.cloneTree();
      node1.getInputId();
      node3.isOr();
      node2.isDefaultCase();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = new Node(4, 4, 4);
      node0.mayMutateArguments();
      Node node1 = new Node(56, node0, node0, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Node node2 = node0.cloneTree();
      Node node3 = new Node(53, 93, (-536));
      node2.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "is_namespace");
      Node node0 = new Node(40);
      node0.cloneNode();
      node0.isCast();
      node0.detachChildren();
      Node.newNumber((-1244.9772285568274), 53, 39);
      node0.isRegExp();
      Node node1 = new Node((-527), (Node[]) null);
      node1.addChildrenAfter(node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(node1.INFERRED_FUNCTION);
      node_SideEffectFlags0.setMutatesArguments();
      Node node2 = null;
      Node node3 = new Node(node1.LAST_PROP, node0, node1, node1, node2);
      // Undeclared exception!
      try { 
        node0.hasOneChild();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = new Node(105);
      node0.isLabelName();
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      Object object0 = new Object();
      node0.isEquivalentTo(node1);
      ImmutableList.of();
      node0.getLength();
      node0.isGetElem();
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isInc();
      node0.isNew();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node1.isAssignAdd();
      node0.isExprResult();
      node0.getChildAtIndex(40);
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      Object object0 = new Object();
      node0.isEquivalentTo(node1);
      ImmutableList.of();
      node0.getLength();
      node0.isGetElem();
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isInc();
      node0.isNew();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node2 = node0.clonePropsFrom(node1);
      node1.isObjectLit();
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(49, "L-", 49, (-2937));
      Node node1 = new Node(37, node0, node0, node0, 57, 1411);
      Node node2 = node0.copyInformationFromForTree(node1);
      node2.getString();
      node0.setCharno((-2937));
      node0.isLabelName();
      node0.isSetterDef();
      node0.isGetProp();
      node1.siblings();
      node0.putBooleanProp(110, false);
      node1.isNot();
      node1.isDec();
      node1.isSyntheticBlock();
      node0.isSetterDef();
      node1.isTrue();
      node2.cloneTree();
      node0.getParent();
      node2.isWhile();
      node2.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(124, node0, 2, 41);
      node1.isContinue();
      node1.isEquivalentTo(node0);
      node1.isReturn();
      node1.isSyntheticBlock();
      node1.isParamList();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = Node.newNumber((double) 1);
      node2.isHook();
      node1.isDebugger();
      Node node3 = Node.newString("ALL_TYPE", 16, (-933));
      node3.isWith();
      node0.isNoSideEffectsCall();
      node2.isBreak();
      Node.extractCharno(0);
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = Node.newString((-1503), "|!Vx#Bv9@gCqF0 7LC");
      node0.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      Node node1 = new Node(51, node0, node0, node0, node0);
      Node node2 = node1.cloneTree();
      node1.isNE();
      node2.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = Node.newNumber(1231.9995896199237);
      node0.isQuotedString();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(":<6dR9M-yVM Gg%cj", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(118, node0, node0, node0, 2, (-3585));
      node0.isAdd();
      node1.isDec();
      node1.isGetElem();
      node1.isOnlyModifiesArgumentsCall();
      node1.isParamList();
      Node node2 = new Node(531);
      Node node3 = node2.srcref(node1);
      node3.isCase();
      node1.toStringTree();
      int int0 = Node.IS_CONSTANT_NAME;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(51);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node1.isGetterDef();
      node1.addChildrenToFront(node3);
      node3.srcrefTree(node0);
      Node.extractLineno(42);
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = node0.useSourceInfoIfMissingFrom(node0);
      Object object0 = new Object();
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = new Node(29, node1);
      node2.isDebugger();
      node1.isDefaultCase();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node2.removeChildAfter(node1);
      int int0 = 65536;
      node1.getIntProp(int0);
      Node node3 = null;
      try {
        node3 = new Node(node2.INFERRED_FUNCTION);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = Node.newString("reflected_object", 3191, 0);
      node0.setCharno(56);
      Node node1 = Node.newNumber((-3450.94), 31, 57);
      node0.isEquivalentTo(node1);
      ImmutableList.of();
      node1.getLength();
      node1.isGetElem();
      node1.getStaticSourceFile();
      Node node2 = new Node((-2900), 12, 4);
      node1.isEquivalentTo(node2, false, false, true);
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isInc();
      node0.isNew();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isAssignAdd();
      node1.isExprResult();
      node0.getChildAtIndex(0);
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      node1.isFalse();
      Node node2 = new Node(12, node1, 57, 12);
      node1.isFunction();
      node0.isCase();
      node1.isParamList();
      Node node3 = new Node(15);
      Node node4 = node0.srcref(node3);
      Node node5 = new Node(8, node4, node2);
      node5.isQuotedString();
      double double0 = 228.06;
      int int0 = 57;
      Node node6 = Node.newNumber(double0, int0, node3.ORIGINALNAME_PROP);
      // Undeclared exception!
      try { 
        node6.isObjectLit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isRegExp();
      Node node1 = new Node(46, node0, node0, node0, 8199, (-14));
      node1.isFalse();
      node1.isCase();
      node0.toStringTree();
      node0.setOptionalArg(false);
      node1.addChildToFront(node1);
      node1.getChildBefore(node0);
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isDec();
      Node node1 = new Node(46, node0, node0, node0, 53, 50);
      node1.isFunction();
      node0.isCase();
      int int0 = Node.SIDE_EFFECT_FLAGS;
      node0.toStringTree();
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.isDefaultCase();
      node0.isGetElem();
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node node0 = new Node(105);
      node0.isLabelName();
      Object object0 = new Object();
      node0.isCase();
      node0.getProp(8);
      node0.hasMoreThanOneChild();
      node0.isBreak();
      node0.isNull();
      node0.isFunction();
      node0.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.isWith();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(111);
      Node node1 = new Node(30, node0);
      Node node2 = Node.newString("kY", 57, 65535);
      node2.isAdd();
      node2.isOnlyModifiesArgumentsCall();
      node1.isGetterDef();
      node1.isParamList();
      Node node3 = node1.srcref(node2);
      node2.isArrayLit();
      node0.isNew();
      node3.isQuotedString();
      node1.isExprResult();
      node0.getChildAtIndex(57);
      JSType jSType0 = node0.getJSType();
      Node node4 = Node.newString(jSType0.NOT_A_TYPE);
      node4.isNot();
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = new Node((-957));
      Node node1 = new Node(4095, node0, 42, 30);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node node2 = Node.newString("", 42, 55);
      Node node3 = new Node(57, node2, node2, node1, 38, 106);
      node3.isBlock();
      node2.isOnlyModifiesArgumentsCall();
      node0.isInstanceOf();
      node1.isParamList();
      Node node4 = new Node(103);
      node3.srcref(node2);
      node3.isObjectLit();
      node3.addChildrenToBack(node4);
      node1.isLabel();
      node1.addChildrenToFront(node3);
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSType.toMaybeTemplatizedType((JSType) null);
      JSType jSType0 = jSTypeRegistry0.getType((StaticScope<JSType>) null, "Y[g%r2'BXinV-vw c", "Unknown class name", 495, 113);
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(15, 1, 57);
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node node0 = Node.newNumber(1468.0);
      node0.isVar();
      Node node1 = new Node(47, node0, node0, 51, 42);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry1, (TemplateTypeMap) null);
      JSType jSType0 = templateTypeMapReplacer0.caseNoType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node2.isBreak();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSType[] jSTypeArray0 = new JSType[7];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      jSTypeArray0[4] = jSType0;
      jSTypeArray0[5] = jSType0;
      jSTypeArray0[6] = jSType0;
      Node node3 = jSTypeRegistry1.createParameters(jSTypeArray0);
      node3.isNull();
      node3.isFunction();
      node3.setWasEmptyNode(false);
      node2.setIsSyntheticBlock(false);
      Node node4 = new Node(40, node2, 2715, 1);
      node4.isFunction();
      node3.wasEmptyNode();
      node3.isVoid();
      node4.toStringTree();
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isSyntheticBlock();
      node0.isOnlyModifiesArgumentsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setLength(2029);
      node0.setOptionalArg(false);
      node0.isCatch();
      node0.isComma();
      Node node1 = Node.newString(2626, "\n\nSubtree2: ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node0.isGetElem();
      node1.isGetterDef();
      node1.getString();
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = new Node(105);
      node0.isLabelName();
      Object object0 = new Object();
      node0.isEquivalentTo(node0);
      ImmutableList.of();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isNull();
      node0.isFunction();
      node0.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(false);
      node0.isFunction();
      node0.wasEmptyNode();
      node0.isVoid();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node node0 = new Node(105);
      node0.isLabelName();
      Object object0 = new Object();
      node0.isEquivalentTo(node0);
      ImmutableList.of();
      node0.getLength();
      node0.isGetElem();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isInc();
      node0.isTry();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      Node node1 = new Node((-359), node0, node0, node0, node0);
      node0.toStringTree();
      node1.isNoSideEffectsCall();
      node1.getBooleanProp(0);
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(38);
      node0.putIntProp(53, (-81));
      node1.putBooleanProp(16, true);
      Node node2 = new Node(2, node0, node0, node0, node1, 31, 102);
      Node node3 = Node.newNumber(58.0);
      node1.isCast();
      node1.isEmpty();
      node0.isParamList();
      node1.isUnscopedQualifiedName();
      node3.isReturn();
      node3.isReturn();
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node2.toStringTree();
      Object object0 = new Object();
      node0.cloneTree();
      Node node3 = new Node(30, 57, 57);
      node3.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = new Node(44);
      node0.isVar();
      Node node1 = node0.cloneTree();
      Node node2 = new Node(2, node1, node0, 64, 105);
      node2.isInstanceOf();
      node0.isScript();
      node2.addChildrenAfter(node0, node1);
      int int0 = 46;
      Node node3 = Node.newNumber((double) node1.COLUMN_MASK, node1.FLAG_LOCAL_RESULTS, int0);
      node0.isInc();
      // Undeclared exception!
      try { 
        node3.getJSType();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(117, nodeArray0, 117, (-1096));
      Node node1 = new Node(2, node0);
      node1.setDouble(0.0);
      node1.getSourcePosition();
      int int0 = 9;
      Node node2 = null;
      try {
        node2 = new Node(int0, node1, node0, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node((-4069));
      node0.isLabelName();
      Node node1 = new Node(51, node0, node0, node0, (-4069), 57);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node3 = node1.setJSDocInfo(jSDocInfo0);
      Node node4 = new Node(120, node3, node2, node0, node0);
      node4.toStringTree();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        node0.removeChildren();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = new Node(117);
      node0.detachChildren();
      node0.isContinue();
      Node node1 = Node.newString("");
      Node node2 = node0.srcref(node1);
      node1.getLength();
      node1.isInc();
      node0.isThrow();
      node2.isNew();
      node1.setQuotedString();
      Node node3 = new Node(159, node2, node0, node1, node2, (-1343), 2778);
      node3.isIf();
      Node node4 = Node.newNumber(0.0, 31, 57);
      node4.isFor();
      node1.addChildToBack(node2);
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(52);
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      node2.setCharno(85);
      node0.isEquivalentTo(node2, false, false, false);
      node0.isTry();
      node2.isInc();
      node2.isThrow();
      node2.isNew();
      node2.isAssignAdd();
      node0.isReturn();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = new Node(40, 40, 40);
      node0.getQualifiedName();
      Node node1 = new Node(1, node0, 57, 32);
      node0.removeChildren();
      Node node2 = Node.newString("REFERENCE_ERROR_TYPE", 32, 2);
      node1.addChildrenToBack(node2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node3 = new Node(32, node1, node1);
      node2.isUnscopedQualifiedName();
      Node node4 = node1.cloneTree();
      node4.addChildrenAfter((Node) null, (Node) null);
      node2.getInputId();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      Node node0 = new Node(117);
      node0.isLabel();
      node0.isLocalResultCall();
      node0.addChildrenAfter((Node) null, (Node) null);
      Node.newNumber((double) node0.FLAG_GLOBAL_STATE_UNMODIFIED, node0.ORIGINALNAME_PROP, node0.STATIC_SOURCE_FILE);
      // Undeclared exception!
      try { 
        node0.isInc();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      node0.isGetElem();
      node0.isEquivalentTo(node0, false, false, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node1 = Node.newString(306654252, "dEFN1<P,H-^ {3", 49, 52);
      Node node2 = new Node(16, node0, node1, node0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node2.putBooleanProp(111, false);
      node1.getString();
      node2.isNE();
      Node node3 = node1.clonePropsFrom(node2);
      node3.type = 15;
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = new Node(117);
      node0.detachChildren();
      node0.isContinue();
      node0.setChangeTime(297);
      Node node1 = new Node(36, node0, node0, node0, 53, (-3568));
      node1.isFunction();
      node1.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(false);
      node0.isFunction();
      node0.wasEmptyNode();
      node1.isVoid();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      Node node0 = new Node(40);
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(153, node0, node0, node0, node0, 85, 36);
      node0.isNull();
      node0.isFunction();
      Node node2 = Node.newString((-3585), "STRING\n", 30, 38);
      node2.getDirectives();
      node2.isVar();
      node2.cloneTree();
      node0.getInputId();
      Node node3 = new Node(15);
      node3.isOr();
      node0.isDefaultCase();
      node0.isSwitch();
      node0.useSourceInfoFromForTree(node2);
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(39);
      node0.detachChildren();
      node0.cloneNode();
      node0.isContinue();
      node0.setChangeTime(297);
      Node node1 = new Node(32, node0, node0, node0, 0, 51);
      node0.setSideEffectFlags((-2451));
      node0.isNew();
      node1.setQuotedString();
      // Undeclared exception!
      try { 
        node0.isIf();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(52);
      String string0 = "kY";
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      node2.setCharno(85);
      node0.useSourceInfoFrom(node1);
      node0.removeChildAfter(node2);
      Node.newString(node2.SIDE_EFFECTS_FLAGS_MASK, string0);
      Node[] nodeArray0 = null;
      Node node3 = null;
      try {
        node3 = new Node(node0.FLAG_ARGUMENTS_UNMODIFIED, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node node0 = Node.newNumber((double) 9);
      node0.isCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.getDouble();
      Node node1 = null;
      Node node2 = node0.useSourceInfoFrom((Node) null);
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = new Node(105);
      node0.isLabelName();
      Object object0 = new Object();
      node0.isEquivalentTo(node0);
      ImmutableList.of();
      node0.getLength();
      node0.isGetElem();
      node0.getStaticSourceFile();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(40, node0, node1);
      node2.toStringTree();
      Object object1 = new Object();
      node2.cloneTree();
      Node node3 = new Node((-403), 16, 3978);
      node3.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Y[g%r2'BXinV-vw c");
      Node node0 = new Node(108, nodeArray0, 108, 108);
      Node node1 = new Node(108, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.areAllFlagsSet();
      node0.isEquivalentTo(node1, false, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      node0.setOptionalArg(false);
      node1.isOnlyModifiesArgumentsCall();
      node1.isDefaultCase();
      node0.isGetElem();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node node0 = new Node(117);
      Node node1 = new Node(31, node0, 12, 53);
      node0.isContinue();
      node1.isEquivalentTo(node0);
      node0.isSyntheticBlock();
      node0.isGetterDef();
      node0.isParamList();
      Node node2 = new Node(26);
      Node node3 = node2.srcref(node0);
      node3.isUnscopedQualifiedName();
      int int0 = Node.REFLECTED_OBJECT;
      int int1 = (-559);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType.cast((JSType) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node3, (JSType) null);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      JSDocInfo jSDocInfo0 = enumElementType1.getJSDocInfo();
      // Undeclared exception!
      try { 
        jSDocInfo0.getAssociatedNode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = Node.newString("reflected_object", 3191, 0);
      Node node1 = Node.newString("reflected_object", 0, 11);
      node1.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node_SideEffectFlags0.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node2 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node3 = new Node((-1588), node0, node0, node1, node2);
      node0.hasOneChild();
      node3.getType();
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node node0 = Node.newString((-707), "$Q&l*HX+bbIuUP", (-707), (-707));
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      node0.getJSDocInfo();
      node0.putBooleanProp(309, false);
      node0.removeFirstChild();
      node0.checkTreeEqualsImpl((Node) null);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean0, boolean0);
      node0.getAncestors();
      node0.isUnscopedQualifiedName();
      int int0 = (-613);
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      Node node0 = new Node(13, 13, 13);
      node0.wasEmptyNode();
      Node node1 = Node.newString("4E^av{O:{4?pW1", 54, 42);
      node0.addChildToBack(node1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4E^av{O:{4?pW1");
      node0.isNoSideEffectsCall();
      node0.getSourceFileName();
      node0.isNE();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = new Node(1, node0, node0, node0, 53, 40);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node4 = node0.setJSDocInfo(jSDocInfo0);
      node3.toStringTree();
      Object object0 = new Object();
      node4.cloneTree();
      node0.addChildrenToFront(node2);
      Node node5 = new Node(124, 12, 77);
      node1.isQualifiedName();
      node3.checkTreeEquals(node0);
      node5.mayMutateArguments();
      Node.newString(52, "opt_arg");
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node[] nodeArray0 = new Node[2];
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      nodeArray0[0] = node0;
      Node node1 = node0.clonePropsFrom(node0);
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node node0 = new Node(40, 306654252, 306654252);
      node0.isFromExterns();
      Node node1 = new Node((-1837), node0, node0, node0, 40, 57);
      Node node2 = Node.newNumber((double) 0, 5270, 12);
      node0.useSourceInfoIfMissingFrom(node2);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node3 = node1.setJSDocInfo(jSDocInfo0);
      Node node4 = Node.newNumber(1.2, 106, 31);
      node4.toStringTree();
      Object object0 = new Object();
      Node node5 = node4.removeChildren();
      Node node6 = new Node(50, (Node) null, node3, (Node) null, (-3374), 15);
      node5.isEquivalentToShallow(node6);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      int int0 = 41;
      Node.mergeLineCharNo(int0, node5.SIDE_EFFECT_FLAGS);
      node0.isAnd();
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      node2.isSetterDef();
      // Undeclared exception!
      try { 
        node2.isLocalResultCall();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isLabelName();
      Node node1 = new Node(46, node0, node0, node0, 53, 0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node2.toStringTree();
      Object object0 = new Object();
      Node node3 = node0.cloneTree();
      Node node4 = new Node(30, 57, 57);
      node4.clonePropsFrom(node3);
      node4.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      Node node0 = new Node(40, 40, 2);
      Node node1 = new Node(50, node0);
      node1.setWasEmptyNode(false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(54);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node2 = Node.newString(" : ");
      node0.isEquivalentTo(node2, true, true, true);
      node2.setOptionalArg(false);
      node1.isOnlyModifiesArgumentsCall();
      node0.isDefaultCase();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(124, node0, 2, 41);
      node1.isContinue();
      node0.hasChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setMutatesThis();
      node1.isEquivalentTo(node0);
      node1.getProp(47);
      node0.hasMoreThanOneChild();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags(98);
      node_SideEffectFlags5.setMutatesThis();
      node0.isWhile();
      node1.getProp(1091);
      node0.hasMoreThanOneChild();
      node1.isBlock();
      node1.getChangeTime();
      node1.isString();
      node1.getType();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = new Node(105);
      node0.isLabelName();
      Object object0 = new Object();
      node0.isEquivalentTo(node0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      node0.setSourceFileForTesting("u!h4YR.([-Z");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isNull();
      node0.isFunction();
      node0.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(false);
      node0.isFunction();
      node0.wasEmptyNode();
      node0.isVoid();
      node0.toStringTree();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      node0.isGetElem();
      node0.isTypeOf();
      Node node1 = new Node((-4096), node0, node0, node0, node0);
      Node node2 = Node.newString(50, "*");
      Node node3 = Node.newString("this", 4095, 1743);
      node2.addChildrenToBack(node1);
      node3.checkTreeTypeAwareEqualsImpl(node2);
      node3.setOptionalArg(true);
      node3.addChildToFront(node2);
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node node0 = new Node(4, 4, 1110);
      Node node1 = Node.newString("Py#h.,v\"Iy.IdW/6", 42, 55);
      Node node2 = new Node(1110, node0, node1, node0);
      node2.isVoid();
      node0.toStringTree();
      node2.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      Node node0 = Node.newNumber(1468.0);
      node0.isVar();
      Node node1 = node0.cloneTree();
      Node node2 = new Node(55, node1, node1, node0, node1, 15, 38);
      node2.isInstanceOf();
      node2.isScript();
      Node node3 = new Node(103);
      Node node4 = node3.srcref(node1);
      node0.isUnscopedQualifiedName();
      int int0 = Node.REFLECTED_OBJECT;
      Node node5 = new Node(32, node0, node1, node4, 1951, 46);
      node2.removeChildren();
      int int1 = (-3889);
      int int2 = (-1168);
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node node0 = Node.newString("bind");
      node0.setSourceEncodedPositionForTree(1093);
      node0.isFromExterns();
      Node node1 = Node.newString("ASSIGN_SUB", (-140), 55);
      node0.isOnlyModifiesArgumentsCall();
      node1.isGetterDef();
      node1.isParamList();
      Node node2 = new Node(0);
      Node node3 = Node.newNumber(2033.04261);
      Node node4 = node2.srcref(node3);
      node4.isObjectLit();
      node1.isNull();
      node0.setIsSyntheticBlock(false);
      node0.isLabelName();
      node4.isHook();
      node4.getSourceFileName();
      node1.mayMutateArguments();
      node0.isUnscopedQualifiedName();
      Node node5 = new Node(39, node1, 30, 50);
      node2.checkTreeEqualsImpl(node5);
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node[] nodeArray0 = new Node[2];
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      nodeArray0[0] = node0;
      Node node1 = new Node(11, 15, 0);
      Node node2 = new Node(1, node1, node0, node1, node0);
      node2.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(111, 111, 111);
      Node node1 = Node.newString("kY");
      node1.children();
      node1.isComma();
      Node.newString(1, "iRxJhM;j]}p");
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = Node.newString("Y[g%r2'BXinV-vw c");
      node0.setSourceEncodedPositionForTree(43);
      node0.isFromExterns();
      Node node1 = Node.newString(":<6dR9KM-yVM Gg%cj", 57, 8);
      node0.isOnlyModifiesArgumentsCall();
      node0.isGetterDef();
      node1.isParamList();
      Node node2 = new Node(46);
      node2.srcref(node0);
      node0.isObjectLit();
      node1.isNull();
      node2.setIsSyntheticBlock(false);
      node0.isFunction();
      node1.isHook();
      Node.newString(52, "apply");
      node2.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node node0 = Node.newString(4, "_}f>*aS");
      node0.isNull();
      node0.setQuotedString();
      node0.isGetElem();
      node0.isInstanceOf();
      node0.isParamList();
      Node node1 = new Node(4);
      Node node2 = node0.srcref(node1);
      node0.isBlock();
      node2.hasMoreThanOneChild();
      node2.isQuotedString();
      node2.setWasEmptyNode(true);
      node1.setIsSyntheticBlock(true);
      node1.isFunction();
      node2.isFromExterns();
      node2.toStringTree();
      node2.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ImmutableList.of();
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = Node.newString(31, "Object#Key", 37, 8);
      node1.setLength(37);
      node1.isCatch();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isComma();
      Node node2 = new Node(4095, node1, node0, node1, node1);
      node2.isUnscopedQualifiedName();
      node1.checkTreeEqualsImpl(node0);
      node1.replaceChild(node0, node0);
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(128, nodeArray0, 128, 128);
      Node node1 = Node.newString("1*jp", 49, 40);
      node0.isEquivalentToTyped(node1);
      node0.isCase();
      node0.getProp(55);
      node0.hasMoreThanOneChild();
      node0.isBreak();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node2 = Node.newNumber((double) 42);
      node2.getStaticSourceFile();
      node0.isCast();
      node0.isEmpty();
      Node node3 = new Node(32, node0, 15, 149);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isSetterDef();
      node3.cloneNode();
      Node.extractCharno((-818));
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      node0.isGetElem();
      node0.isEquivalentTo(node0, false, false, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node1 = Node.newString(306654252, "dEFN1<P,H-^ {3", 49, 30);
      Node node2 = new Node(16, node0, node1, node0);
      node2.putBooleanProp(111, false);
      node1.getString();
      node2.isNE();
      Node node3 = node1.clonePropsFrom(node2);
      node3.type = 15;
      node0.isSwitch();
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(128, nodeArray0, 128, 128);
      Node node1 = new Node(128, node0, node0, node0);
      node0.isCase();
      node0.getProp(55);
      node1.isBreak();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.isNull();
      node0.isFunction();
      node1.setWasEmptyNode(false);
      node0.setIsSyntheticBlock(false);
      Node node2 = node1.getLastChild();
      Node node3 = new Node(276, node1, node1, node1);
      Node node4 = Node.newNumber(0.0, 1022, 2);
      node1.clonePropsFrom(node4);
      node2.addChildToFront(node1);
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      Node node0 = Node.newNumber(0.9281803301870597);
      Node node1 = new Node(2, 4, 542);
      node0.isOnlyModifiesArgumentsCall();
      Node node2 = new Node(132, node0, node0);
      node2.setLength(46);
      node0.toStringTree();
      node2.setOptionalArg(true);
      node1.isCatch();
      node2.isComma();
      Node.newString(36, " [");
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(2);
      node1.isLabelName();
      Node node2 = new Node(38, node0, node0, node1, 8, (-1579));
      Node node3 = node2.useSourceInfoIfMissingFrom(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node4 = node2.setJSDocInfo(jSDocInfo0);
      Node node5 = new Node((-2522), node3, 53, 29);
      node5.toStringTree();
      Object object0 = new Object();
      node2.cloneTree();
      int int0 = 103;
      Node node6 = null;
      try {
        node6 = new Node(int0, node4.OPT_ARG_NAME, node4.MAX_COLUMN_NUMBER);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2522
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node node0 = new Node(117);
      node0.detachChildren();
      node0.isContinue();
      Node node1 = Node.newString("3=DgD$");
      node0.useSourceInfoFrom(node1);
      node0.setChangeTime(297);
      int int0 = (-3568);
      Node node2 = new Node(36, node0, node0, node0, 53, (-3568));
      node2.setSideEffectFlags((-23));
      node2.isNew();
      node0.setQuotedString();
      int int1 = 543;
      Node node3 = null;
      try {
        node3 = new Node(int0, node2, int1, int1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      JSType.toMaybeTemplatizedType((JSType) null);
      JSType jSType0 = jSTypeRegistry0.getType((StaticScope<JSType>) null, "Y[g%r2'BXinV-vw c", "Unknown class name", 495, 113);
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      Node node1 = new Node(4095, node0, node0, node0, node0, 1, 35);
      node1.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.isWith();
      node0.isHook();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node node0 = new Node(102);
      node0.isRegExp();
      Node node1 = new Node(46, node0, node0, node0, 108, 0);
      node1.isFalse();
      node1.isEquivalentTo(node0);
      Node node2 = new Node(49, node1, node1, node1, node1, 4, 3182);
      Node node3 = Node.newString(":'ePaE;2O", 102, 51);
      node3.isTypeOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.isWith();
      node1.isHook();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      Node node0 = new Node(117);
      node0.detachChildren();
      Node node1 = node0.cloneTree();
      Node node2 = new Node(37, 31, 4095);
      node1.isParamList();
      node1.removeProp((-2836));
      node2.srcrefTree(node0);
      node0.isVarArgs();
      node1.mayMutateGlobalStateOrThrow();
      node1.isParamList();
      node2.isTypeOf();
      node2.removeChild(node0);
      node1.isIf();
      Node.AncestorIterable node_AncestorIterable0 = null;
      try {
        node_AncestorIterable0 = new Node.AncestorIterable(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      Node node0 = Node.newString("reflected_object", 3191, 0);
      Node node1 = Node.newString("reflected_object", 0, 11);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      node_SideEffectFlags0.setMutatesGlobalState();
      node1.isStringKey();
      Node node2 = new Node(118, node1, node1);
      node1.isLabelName();
      node0.isComma();
      Node.newString(13, "com.google.common.base.Predicates$ObjectPredicate");
      node2.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      Node node0 = Node.newString("reflected_object", 3191, 0);
      Node node1 = Node.newString("reflected_object", 0, 11);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      node_SideEffectFlags0.setMutatesGlobalState();
      node1.isStringKey();
      Node node2 = new Node(118, node1, node1);
      node2.removeChild(node1);
      node2.getAncestors();
      Node node3 = node2.srcref(node1);
      node3.isArrayLit();
      node1.setOptionalArg(true);
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(111);
      node0.isGetElem();
      node0.isEquivalentTo(node0, false, false, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node node1 = Node.newString(306654230, "dEFN1<P,H-^ {3", 49, 30);
      Node node2 = new Node(16, node0, node1, node0);
      node2.putBooleanProp(111, false);
      node1.getString();
      node2.isNE();
      Node node3 = Node.newString("dEFN1<P,H-^ {3");
      node3.type = 15;
      node0.isSwitch();
      node1.getNext();
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isCase();
      node0.isBreak();
      node0.isNE();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isVar();
      node0.toStringTree();
      node0.setOptionalArg(false);
      node0.getInputId();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isCase();
      node0.isBreak();
      node0.isDelProp();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isVar();
      node0.toStringTree();
      node0.setOptionalArg(false);
      node0.getInputId();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = new Node(48, (-3568), 1969);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isThrow();
      node0.isVar();
      Node node2 = node1.cloneTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node2.putProp(8232, jSDocInfo0);
      Node node3 = new Node(47);
      node3.cloneTree();
      node2.getInputId();
      node0.isOr();
      node1.isDefaultCase();
      node0.isSwitch();
      node1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      Node node0 = Node.newNumber((double) 9);
      node0.detachChildren();
      Node node1 = node0.cloneTree();
      Node node2 = new Node(29, 47, (-1955));
      node2.isParamList();
      node0.removeProp((-2836));
      node0.isVarArgs();
      node2.mayMutateGlobalStateOrThrow();
      node0.isParamList();
      Node node3 = Node.newString(13, "IN", 12, (-1));
      node2.addChildToBack(node3);
      node2.isTypeOf();
      node2.removeChild(node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isOnlyModifiesArgumentsCall();
      node1.toStringTree();
      int int0 = 1498;
      Node node4 = new Node(node0.NO_SIDE_EFFECTS, int0, node1.DIRECT_EVAL);
      int int1 = (-165);
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(124, node0, 2, 41);
      node1.isContinue();
      node0.hasChildren();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node1.isEquivalentTo(node0);
      node1.getProp(47);
      node0.hasMoreThanOneChild();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(98);
      node_SideEffectFlags3.setMutatesThis();
      node0.isWhile();
      node1.getProp(1091);
      node0.hasMoreThanOneChild();
      node1.isBlock();
      node1.getChangeTime();
      node1.getType();
      Node node2 = node0.getParent();
      node2.isIf();
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      Node node0 = new Node(111);
      Node node1 = Node.newString("kY");
      Node node2 = node0.srcref(node1);
      node2.isInc();
      node2.siblings();
      node2.isThrow();
      node2.isNew();
      node1.setQuotedString();
      node2.isIf();
      node0.isFor();
      Node node3 = new Node(2, node2, node2, node2);
      node1.checkTreeEqualsImpl(node0);
      node0.useSourceInfoIfMissingFromForTree(node2);
  }
}
