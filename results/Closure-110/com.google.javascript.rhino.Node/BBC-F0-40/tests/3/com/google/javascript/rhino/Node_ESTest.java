/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 05 22:45:47 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.NoType;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.UnionType;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintStream;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2247));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString("", (-1232), (-699));
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int int0 = (-802);
      Node[] nodeArray0 = new Node[9];
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-802), (Node) null, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int int0 = 0;
      String string0 = "";
      Node node0 = Node.newString((-577), "", 1539, 133);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp((-86));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -86
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int int0 = 1531;
      Node node0 = Node.newString("Zs3El!92@mM");
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(3959, nodeArray0, 36, 54);
      Node node2 = Node.newNumber(1945.61184);
      Node node3 = new Node(0, node0, node1, node0, node2);
      Node node4 = null;
      try {
        node4 = new Node(1048576, node3, node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      immutableList0.iterator();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isWith();
      node0.isVarArgs();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      Node node1 = new Node(0, node0, node0, node0);
      node0.getProp(42);
      node0.isEquivalentTo(node1);
      node1.cloneNode();
      node1.isDefaultCase();
      Node node2 = Node.newNumber((double) 57);
      node2.setSourceFileForTesting("uV#*@");
      node0.toStringTree();
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage0("uV#*@");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property uV#*@
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(3332, (Node) null, (Node) null, 3332, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node(1607, 1607, 27);
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-1000), (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int int0 = 0;
      int int1 = 125;
      int int2 = (-951);
      Node node0 = Node.newNumber((double) (-951), 125, 125);
      Node node1 = new Node(125);
      int int3 = 673;
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = 26;
      node_SideEffectFlags0.setAllFlags();
      Node node0 = Node.newString((-2506), "", 26, 33);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2506
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newNumber(156.4225567216, 133, (-2105));
      Node node1 = Node.newString(2681, "\n\nTree2:\n");
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 98, 98);
      node0.isVarArgs();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node.newString("Xd3}yZ Nh8]", 0, 0);
      OutputStreamWriter outputStreamWriter0 = null;
      try {
        outputStreamWriter0 = new OutputStreamWriter((OutputStream) null, "XhP};]EM+&8");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = 0;
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-4208), (Node) null, (Node) null, (Node) null, (Node) null, 0, 55);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      int int0 = 2392;
      Node node0 = null;
      int int1 = 8287;
      Node node1 = null;
      try {
        node1 = new Node(2392, (Node) null, (-2231), 8287);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      int int0 = 536870912;
      Node[] nodeArray0 = new Node[3];
      Node node0 = new Node(536870912);
      nodeArray0[0] = node0;
      InputId inputId0 = new InputId("com.google.javascript.rhino.jstype.NoObjectType");
      inputId0.toString();
      inputId0.toString();
      node0.setInputId(inputId0);
      Node node1 = Node.newString(0, "is_namespace");
      node0.addChildToFront(node1);
      nodeArray0[1] = node1;
      Node node2 = null;
      try {
        node2 = new Node(443, node0, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = new Node(816, 816, 2273);
      Node node1 = new Node(816, node0, node0, node0, 0, (-2290));
      Node node2 = Node.newString(14, "");
      Node node3 = null;
      try {
        node3 = new Node(844, node1, node1, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString(0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = new Node(30);
      node0.isAnd();
      node0.setSourceEncodedPosition(0);
      Node node1 = new Node((-201));
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4596);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = new Node(4596, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.isIn();
      Node node1 = new Node((-185), node0, node0, node0, 55, 0);
      node0.getIndexOfChild(node1);
      node1.setSourceEncodedPositionForTree((-906));
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.ImmutableList$Builder");
      Node node1 = Node.newNumber(1.0);
      node1.getProp((-727));
      node0.isEquivalentTo(node1);
      node0.isCall();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1753);
      String string0 = "com.google.javascript.rhino.jstype.InstanceObjectType";
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.InstanceObjectType", 1753, 0);
      node0.isParamList();
      Node node1 = node0.cloneTree();
      node1.isAssign();
      node1.isNoSideEffectsCall();
      node0.isAssignAdd();
      node1.mayMutateArguments();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(498);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 498
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = Node.newNumber((double) 32, 3125, (-3283));
      node0.useSourceInfoFrom(node1);
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      String string0 = null;
      Node node0 = new Node(1);
      Node node1 = new Node(1, node0, node0, node0, node0, 38, 225);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node(0, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int int0 = 285;
      Node node0 = Node.newString(285, "CsS2;9KD}e4\"!+6_hU", 1610612736, 285);
      node0.isFromExterns();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = Node.newString((-2017), "");
      Node.newString("y^FbyK`705p\n[Hbu");
      Node node1 = new Node(0, node0, node0, 15, 0);
      node1.setVarArgs(false);
      // Undeclared exception!
      try { 
        node0.getAncestor((-2487));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newString("", 306, 306);
      node0.children();
      node0.isFromExterns();
      node0.setType((-316));
      node0.isSyntheticBlock();
      node0.getAncestors();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isInstanceOf();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(306);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -316
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newString("", 1129, 2196);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      node0.setDirectives(linkedHashSet0);
      node0.getBooleanProp(1051);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newString((-1504), "");
      node0.setWasEmptyNode(false);
      Node node1 = Node.newString((-481), "", 100, 153);
      node0.setString("WjHxxy=OBelBiO");
      node0.isTry();
      Node node2 = new Node(50, node1, node1, 11, 126);
      Node node3 = null;
      try {
        node3 = new Node(12, node1, node0, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      String string0 = "com.google.common.base.CharMatcher$FastMatcher";
      Node node1 = Node.newString(43, "com.google.common.base.CharMatcher$FastMatcher");
      node1.putIntProp(56, 50);
      node0.isEquivalentToTyped(node1);
      try { 
        node1.setDouble(43);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FALSE com.google.common.base.CharMatcher$FastMatcher [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), 262144);
      Node node1 = Node.newString(763, "E");
      Node.newString("free_call", 43, 92);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.siblings();
      node0.isStringKey();
      node0.getBooleanProp(103);
      node2.setWasEmptyNode(true);
      node2.getInputId();
      // Undeclared exception!
      try { 
        node1.toString(false, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 763
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newNumber(0.0, 0, 1091);
      node0.addSuppression("B7gh{");
      Node node1 = new Node(0, node0, node0, 1293, (-1405));
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(13);
      node0.removeProp(13);
      Node node1 = new Node(1238, node0);
      node1.getInputId();
      node1.setInputId((InputId) null);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = null;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      Node node1 = null;
      try {
        node1 = new Node(3247, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), 262144);
      Node node1 = Node.newString("E");
      Node node2 = Node.newString("free_call", 43, 92);
      Node node3 = node0.useSourceInfoFromForTree(node1);
      node0.siblings();
      node0.isStringKey();
      node0.getBooleanProp(103);
      node3.setWasEmptyNode(true);
      node3.getInputId();
      node1.toString(false, false, false);
      node3.getQualifiedName();
      node1.isGetterDef();
      node0.addChildToBack(node2);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.ImmutableList$Builder");
      Node node1 = Node.newNumber(38.200453069983304);
      node1.getProp((-703));
      node0.isEquivalentTo(node1);
      node0.isCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-5122));
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), 262144);
      Node node1 = Node.newString(40, "E");
      Node node2 = Node.newString("free_call", 43, 92);
      Node node3 = node0.useSourceInfoFromForTree(node1);
      node0.siblings();
      node0.isStringKey();
      node0.getBooleanProp(103);
      node3.setWasEmptyNode(true);
      node3.getInputId();
      node1.toString(false, false, false);
      node3.getQualifiedName();
      node1.isGetterDef();
      node0.addChildToBack(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(136);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeRegistry0.createParameters(jSTypeArray0);
      Node[] nodeArray0 = new Node[0];
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.getObjectIndexKey();
      Node.newString(1, "Not declared as a constructor", 16, 37);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = Node.newString((-1504), "");
      node0.setWasEmptyNode(false);
      Node node1 = Node.newString((-481), "", 100, 153);
      node0.setString("WjHxxy=OBelBiO");
      node0.isTry();
      Node node2 = new Node(50, node1, node1, 11, 126);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.valueOf();
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(106, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1771));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = new Node((-1771), (-1771), (-1285));
      node0.getJSType();
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.isIn();
      Node node1 = new Node(1, node0, node0, node0, 36, (-3012));
      node1.getIndexOfChild(node0);
      node1.setSourceEncodedPositionForTree(42);
      node0.setLength((-3012));
      node0.isFor();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-398));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = new Node(112, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TreeSet<NoType> treeSet0 = new TreeSet<NoType>((Comparator<? super NoType>) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) treeSet0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.getStaticSourceFile();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node2.isIn();
      int int0 = (-2152);
      Node node3 = new Node(29, node2, node1, (-1974), 101);
      Node node4 = null;
      try {
        node4 = new Node(44, node3, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      immutableList0.iterator();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isWith();
      node0.isVarArgs();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      Node node1 = new Node(0, node0, node0, node0);
      node0.getProp(42);
      node0.isEquivalentTo(node1);
      Node node2 = node1.cloneNode();
      node1.isDefaultCase();
      node0.isUnscopedQualifiedName();
      Node node3 = Node.newNumber((double) 57);
      node3.setSourceFileForTesting("uV#*@");
      node0.toStringTree();
      node1.isThis();
      node2.addChildToBack(node1);
      node1.copyInformationFrom(node0);
      node2.isNoSideEffectsCall();
      Node node4 = node0.useSourceInfoIfMissingFromForTree(node2);
      node1.isDebugger();
      node0.isHook();
      node4.isArrayLit();
      // Undeclared exception!
      try { 
        node2.getExistingIntProp((-2881));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -2881
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(30);
      node0.isAnd();
      node0.setSourceEncodedPosition(0);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      Node node1 = null;
      try {
        node1 = new Node(38, nodeArray0, 15, 119);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2247));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString("", (-1232), (-699));
      Node node1 = null;
      Node.extractLineno(2932);
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2247));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = Node.newString("", (-1232), (-699));
      Node node1 = null;
      node0.isLabel();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-398));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = new Node(112, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setAllFlags();
      node_SideEffectFlags6.setMutatesThis();
      node0.isTrue();
      node0.children();
      node0.isDec();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEFAULT_CASE 4596 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1771));
      node_SideEffectFlags0.setMutatesArguments();
      int int0 = (-52);
      int int1 = 86;
      Node node0 = new Node((-52), (-1099), 86);
      int int2 = 56;
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(56, nodeArray0);
      Node node2 = null;
      try {
        node2 = new Node(300, node0, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      node0.setSourceEncodedPosition((-536870912));
      Node node1 = new Node(8, node0, node0, node0, node0, 0, 31);
      node0.addChildToFront(node1);
      node0.getBooleanProp(122);
      node1.setCharno(37);
      Node.mergeLineCharNo(50, 49);
      node1.isComma();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      immutableList0.iterator();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isWith();
      node0.isVarArgs();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      Node node1 = new Node(0, node0, node0, node0);
      node0.getProp(42);
      node0.isEquivalentTo(node1);
      Node node2 = node1.cloneNode();
      node1.isDefaultCase();
      node0.isUnscopedQualifiedName();
      Node node3 = Node.newNumber((double) 57);
      node3.setSourceFileForTesting("uV#*@");
      node2.isLabel();
      // Undeclared exception!
      try { 
        node3.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), 262144);
      Node node1 = Node.newString("E");
      Node node2 = Node.newString("free_call", 43, 1);
      Node node3 = node0.useSourceInfoFromForTree(node1);
      node0.siblings();
      node0.isStringKey();
      node2.isDelProp();
      node3.setWasEmptyNode(true);
      node3.getInputId();
      node1.toString(false, false, false);
      node3.getQualifiedName();
      node1.wasEmptyNode();
      Node node4 = new Node(40);
      // Undeclared exception!
      try { 
        node3.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newString(105, ":!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      node1.isVarArgs();
      node0.setType(29);
      node1.isThrow();
      node0.hasChildren();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newNumber(0.0, 0, 1091);
      node0.addSuppression("B7gh{");
      Node node1 = new Node(0, node0, node0, 1293, (-1405));
      node1.isEquivalentTo(node0, true, false, false);
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newString((-3351), "com.google.common.base.CharMatcher$FastMatcher");
      node0.detachChildren();
      Node node1 = new Node(152);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(52);
      Node[] nodeArray0 = new Node[2];
      Node node2 = new Node((-9), node1, node0, node0, (-1232), 47);
      nodeArray0[0] = node2;
      node2.getChangeTime();
      nodeArray0[1] = node1;
      Node node3 = null;
      try {
        node3 = new Node(2498, nodeArray0, 124, 8);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newNumber(0.0, 0, 1091);
      node0.addSuppression("B7gh{");
      Node node1 = new Node(0, node0, node0, 1293, (-1405));
      node1.getChangeTime();
      node1.setOptionalArg(false);
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = Node.newString(" ;tmbM3oTh62!PeAcRD");
      node0.wasEmptyNode();
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newNumber((-226.056824));
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = new Node((-1486), (-1486), (-76));
      node0.getInputId();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = Node.newString("j*!qni?$m", 306, 40);
      node0.children();
      node0.isFromExterns();
      node0.setType(306);
      node0.isSyntheticBlock();
      node0.getAncestors();
      node0.isInstanceOf();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(306);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got BANG
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.collect.SingletonImmutableBiMap");
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(3148, nodeArray0, 40, 48);
      Node.newNumber((double) 16);
      Node node2 = new Node((-1734), node1, node0, node0, node0);
      int int0 = 2391;
      Node node3 = null;
      try {
        node3 = new Node(152, node1, 44, 608);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      String string0 = "";
      int int0 = 26;
      node_SideEffectFlags0.setAllFlags();
      Node node0 = Node.newString((-2506), "", 26, 33);
      node0.putBooleanProp((-2506), false);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2506
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString(105, ":!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node0.children();
      node0.isDec();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> 55 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1771));
      node_SideEffectFlags0.setMutatesArguments();
      Node node0 = Node.newString("7T3", 10, (-1771));
      node0.isString();
      node0.setSourceEncodedPosition((-1562));
      Node node1 = Node.newString("", 30, 15);
      Node node2 = new Node(113, node0, node1, node0, node0, (-52), 1647);
      node1.addChildToFront(node2);
      node2.getBooleanProp(36);
      node0.setCharno(46);
      Node.mergeLineCharNo(1293, 46);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = (-1099);
      Node node0 = new Node(86, 115, 3496);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node((-2500), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1771));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      // Undeclared exception!
      try { 
        Node.newString((-1771), (String) null, 26, 26);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = "The new child node already has a parent.";
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(52);
      Node[] nodeArray0 = new Node[2];
      Node node2 = new Node(57, node1, node0, node0, (-1232), 47);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node2.isTrue();
      // Undeclared exception!
      try { 
        Node.newString((String) null, 44, (-1232));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), 262144);
      Node node1 = Node.newString(40, "E");
      Node node2 = Node.newString("free_call", 43, 92);
      Node node3 = node0.useSourceInfoFromForTree(node1);
      node0.siblings();
      node0.isStringKey();
      node0.getBooleanProp(103);
      node3.setWasEmptyNode(true);
      node3.getInputId();
      node1.toString(false, false, false);
      node3.getQualifiedName();
      node1.isGetterDef();
      node0.addChildToBack(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newString(105, ":!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      node1.isVarArgs();
      node0.setType(29);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      node0.getJsDocBuilderForNode();
      Node node2 = null;
      try {
        node2 = new Node(32768, nodeArray0, 54, 10);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(52);
      Node node2 = new Node((-9), node1, node0, node0, (-1232), 47);
      node2.getChangeTime();
      node0.isThrow();
      node1.hasChildren();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1753);
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.InstanceObjectType", 1753, 0);
      node0.isParamList();
      Node node1 = node0.cloneTree();
      node1.isNoSideEffectsCall();
      node0.isAssignAdd();
      node0.isQualifiedName();
      Node node2 = new Node(4, node0, node0, node1, (-1086), 39);
      node1.setSourceEncodedPosition(1965);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node2;
      nodeArray0[4] = node2;
      nodeArray0[5] = node2;
      Node node3 = null;
      try {
        node3 = new Node(8, nodeArray0, 30, (-143));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1753);
      String string0 = "com.google.javascript.rhino.jstype.InstanceObjectType";
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.InstanceObjectType", 1753, 0);
      node0.isParamList();
      Node node1 = node0.cloneTree();
      node1.isAssign();
      node1.isNoSideEffectsCall();
      node0.isAssignAdd();
      node1.mayMutateArguments();
      node0.getLength();
      node0.useSourceInfoFromForTree(node1);
      node1.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(498);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 498
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = Node.newNumber((-226.056824));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags4.setMutatesThis();
      node0.children();
      node0.isDec();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = Node.newString(105, ":!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = 764;
      Node node2 = null;
      try {
        node2 = new Node(1572, node1, node1, node0, 48, 33);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node.newString("Zs3El!92@mM");
      Node.newString(46, "Zs3El!92@mM", 36, (-969));
      int int0 = 41;
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newString("j*!qni?$m", 306, 40);
      node0.children();
      node0.isFromExterns();
      node0.setType(306);
      node0.isTry();
      node0.getAncestors();
      node0.isInstanceOf();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(306);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got BANG
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = null;
      node0.isLabel();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(120, nodeArray0, (-1328), 15);
      node2.checkTreeEquals(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Not declared as a type name", node2, templateType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getTemplateTypes();
      // Undeclared exception!
      try { 
        JSType.toMaybeTemplatizedType((JSType) templateType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ProxyObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      immutableList0.iterator();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isWith();
      node0.isVarArgs();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      node0.getProp(42);
      node0.isEquivalentTo(node0);
      Node node1 = node0.cloneNode();
      node0.isDefaultCase();
      node0.isUnscopedQualifiedName();
      Node node2 = Node.newNumber((double) 57);
      node2.setSourceFileForTesting("uV#*@");
      node0.toStringTree();
      node0.isThis();
      node1.addChildToBack(node0);
      node0.copyInformationFrom(node0);
      node1.isNoSideEffectsCall();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isDebugger();
      node0.isHook();
      node3.isArrayLit();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp((-2881));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -2881
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newString((-3351), "com.google.common.base.CharMatcher$FastMatcher");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      JSType jSType0 = jSTypeRegistry0.getType((StaticScope<JSType>) functionType0, "Named type with empty name component", "2QIanP", 57, 40);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node0, jSType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getTemplateTypes();
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType1 = modificationVisitor0.caseObjectType(enumElementType0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionType((ObjectType) enumElementType0, jSType1, (List<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(52);
      Node node2 = new Node((-9), node1, node0, node0, (-1232), 47);
      node1.getChangeTime();
      node0.isThrow();
      node1.hasChildren();
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(52);
      Node[] nodeArray0 = new Node[2];
      Node node2 = new Node((-9), node1, node0, node0, (-1232), 47);
      nodeArray0[0] = node2;
      node2.getChangeTime();
      InputId inputId0 = new InputId("The new child node already has a parent.");
      inputId0.toString();
      node0.removeFirstChild();
      inputId0.toString();
      node2.setInputId(inputId0);
      node0.getAncestors();
      node0.isInstanceOf();
      node0.setIsSyntheticBlock(false);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-398));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = new Node(112, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TreeSet<NoType> treeSet0 = new TreeSet<NoType>((Comparator<? super NoType>) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) treeSet0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.getStaticSourceFile();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.isNew();
      int int0 = (-2152);
      Node node3 = new Node(29, node2, node1, (-1974), 101);
      Node node4 = null;
      try {
        node4 = new Node(44, node3, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 136, 136);
      node0.isString();
      Node node1 = new Node(52);
      node0.setQuotedString();
      Node node2 = new Node((-9), node1, node0, node0, (-1232), 47);
      node2.getChangeTime();
      node0.isThrow();
      node1.hasChildren();
      node1.isVar();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(13);
      node0.removeProp(13);
      Node node1 = new Node(56, 32, 56);
      node1.getInputId();
      node1.setInputId((InputId) null);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-951), 125, 125);
      Node node1 = new Node(125);
      Node node2 = new Node(40, node1);
      node1.getInputId();
      node0.setInputId((InputId) null);
      // Undeclared exception!
      try { 
        node2.replaceChild(node0, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString((-577), "", 1539, 133);
      int int0 = Node.FLAG_LOCAL_RESULTS;
      node0.isLocalResultCall();
      Node node1 = new Node(0, node0, node0, 0, 47);
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(89, 89, 39);
      Node node1 = new Node(89, node0);
      node1.isVoid();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newNumber((-1900.13276));
      node0.children();
      node0.setType((-2791));
      node0.setSourceFileForTesting("");
      node0.getChangeTime();
      node0.getIntProp((-489));
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      Node node0 = Node.newString(46, "IsInstanceOf(", 306, 46);
      node0.isAssign();
      node0.isDefaultCase();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = new Node(89, 89, 39);
      Node node1 = new Node(89, node0);
      node1.detachChildren();
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(54);
      node1.getInputId();
      node0.setInputId((InputId) null);
      node0.getSourceFileName();
      node0.checkTreeEquals(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(38);
      node_SideEffectFlags0.setMutatesArguments();
      node0.getJsDocBuilderForNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      EnumType enumType0 = jSTypeRegistry1.createEnumType("pyw", node0, templateType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      node0.isQuotedString();
      enumElementType1.getTemplateTypes();
      enumElementType0.getParentScope();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionType((ObjectType) null, (JSType) enumElementType0, (List<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1771));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = new Node((-1771), (-1771), (-1285));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = Node.newNumber((double) 43, (-301), 52);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-398));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = new Node(112, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node1 = new Node(15, node0, node0);
      node1.toString(true, true, true);
      node0.getQualifiedName();
      node1.isGetterDef();
      // Undeclared exception!
      try { 
        node0.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-398));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node node0 = new Node(2610, 4596, 2610);
      node_SideEffectFlags1.setMutatesArguments();
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags();
      node_SideEffectFlags5.setThrows();
      node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags7.setMutatesThis();
      node0.isTrue();
      node0.children();
      node0.isDec();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2610
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = new Node(39);
      node0.isAnd();
      node0.setSourceEncodedPosition(0);
      node0.isDec();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(52);
      Node[] nodeArray0 = new Node[2];
      Node node2 = new Node((-9), node1, node0, node0, (-1232), 47);
      nodeArray0[0] = node2;
      node1.setSourceEncodedPosition(3262);
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1771));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = new Node((-1771), (-1771), (-1285));
      node0.getJSType();
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.isIn();
      Node node1 = new Node(1, node0, node0, node0, 36, (-3012));
      node1.getIndexOfChild(node0);
      node1.setSourceEncodedPositionForTree(42);
      node1.children();
      Node node2 = null;
      try {
        node2 = new Node((-1898), (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), 262144);
      Node node1 = Node.newString("E");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.siblings();
      node0.isStringKey();
      node1.isDelProp();
      node2.setWasEmptyNode(true);
      node0.toString(false, false, true);
      node1.getQualifiedName();
      node0.isGetterDef();
      node2.addChildToBack(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3311));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.areAllFlagsSet();
      node2.isContinue();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 262144, (-1631));
      Node node1 = Node.newString("E");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node2.isDelProp();
      Node node3 = new Node(1378, node1, node2, 31, 54);
      node3.setWasEmptyNode(true);
      node1.toString(true, false, true);
      node1.getQualifiedName();
      Node node4 = null;
      try {
        node4 = new Node(541, node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newNumber((-226.056824));
      node0.addSuppression("");
      node0.isAssign();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node((-52), (-1099), 86);
      Node[] nodeArray0 = new Node[1];
      Node node1 = new Node(154);
      Node node2 = new Node(57, node0, node1, node0, 54, (-92));
      node1.getChangeTime();
      Node node3 = null;
      try {
        node3 = new Node(31, nodeArray0, 55, 1889);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = new Node(39);
      node0.isAnd();
      node0.setSourceEncodedPosition(0);
      node0.isAdd();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newNumber((-226.056824));
      Node node1 = new Node(4095, node0, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node node2 = null;
      try {
        node2 = new Node(57, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 262144, (-1631));
      Node node1 = Node.newString("E");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node2.isDelProp();
      Node node3 = new Node(1378, node1, node2, 31, 54);
      node3.siblings();
      node3.setWasEmptyNode(true);
      node1.toString(true, false, true);
      node1.getQualifiedName();
      node2.isGetElem();
      Node.newNumber(815.464494186, (-1180), 1);
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newString(105, ":!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      InputId inputId0 = new InputId("BvX6z");
      inputId0.toString();
      Node node2 = node1.removeFirstChild();
      inputId0.toString();
      node0.setInputId(inputId0);
      node0.getAncestors();
      node0.isInstanceOf();
      node2.setIsSyntheticBlock(false);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("Node has existing properties.");
      node0.copyInformationFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1329, 115, 1329);
      Node node1 = Node.newString(2, "$");
      Node node2 = new Node(1329, node0, 48, 55);
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString("$");
      node2.getStaticSourceFile();
      node3.setStaticSourceFile((StaticSourceFile) null);
      node1.isEquivalentTo(node2, false, false, false);
      node1.setString("");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = new Node(816, 816, 2273);
      node0.isOptionalArg();
      Node node1 = new Node(816, node0, node0, node0, 0, (-2290));
      Node node2 = Node.newString(14, "");
      Node node3 = null;
      try {
        node3 = new Node(844, node1, node1, node0, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), (-3243));
      Node node1 = Node.newString(43, "E");
      Node node2 = Node.newString("free_call", 43, 1);
      Node node3 = node0.useSourceInfoFromForTree(node1);
      node0.siblings();
      node0.isStringKey();
      node2.isDelProp();
      node3.setWasEmptyNode(true);
      node3.getInputId();
      node1.toString(false, false, false);
      node3.getQualifiedName();
      node1.wasEmptyNode();
      Node node4 = new Node(40);
      // Undeclared exception!
      try { 
        node3.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1751);
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.InstanceObjectType", 1751, 0);
      node0.isParamList();
      Node node1 = node0.cloneTree();
      node1.isNoSideEffectsCall();
      node0.isAssignAdd();
      node0.isQualifiedName();
      Node node2 = new Node(4, node0, node0, node1, (-1086), 39);
      node1.setSourceEncodedPosition(1965);
      node1.addChildToFront(node2);
      node0.detachChildren();
      node2.isTypeOf();
      Node.mergeLineCharNo(36, 39);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((List<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(52);
      node0.isTrue();
      Node.newString("UNKNOWN", 39, 4095);
      HashSet<Node> hashSet0 = new HashSet<Node>(4054);
      node0.isDec();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING The new child node already has a parent. 115 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1771));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = new Node((-1771), (-1771), (-1285));
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TreeSet<NoType> treeSet0 = new TreeSet<NoType>((Comparator<? super NoType>) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) treeSet0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node1.getStaticSourceFile();
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isNew();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node node0 = Node.newString(26, "", 26, (-2506));
      node0.putBooleanProp((-2506), false);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NOT
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = new Node((-1771), (-1771), (-1285));
      node0.getJSType();
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.isIn();
      Node node1 = new Node(1, node0, node0, node0, 36, (-3012));
      node1.getIndexOfChild(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ObjectType.cast((JSType) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSType jSType0 = jSTypeRegistry0.createFunctionType((ObjectType) null, (JSType) null, (List<JSType>) linkedList0);
      node1.setJSType(jSType0);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1771
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.isWith();
      node0.isVarArgs();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      node0.getProp(42);
      node0.isEquivalentTo(node0);
      Node node1 = node0.cloneNode();
      node0.isDefaultCase();
      node1.isCast();
      Node node2 = Node.newNumber((double) 57);
      node2.setSourceFileForTesting("uV#*@");
      node0.toStringTree();
      node0.isThis();
      node1.addChildToBack(node0);
      node0.copyInformationFrom(node0);
      node1.isNoSideEffectsCall();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isDebugger();
      node0.isHook();
      node3.isArrayLit();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp((-2881));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -2881
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1771));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = new Node((-1771), (-1771), (-1285));
      node0.getJSType();
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node0.isIn();
      Node node1 = new Node(1, node0, node0, node0, 36, (-3012));
      node0.isIf();
      Node node2 = node1.copyInformationFrom(node0);
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      immutableList0.iterator();
      Node node0 = Node.newString("Object#Key");
      node0.isWith();
      node0.isVarArgs();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      node0.getProp(42);
      node0.isEquivalentTo(node0);
      Node node1 = node0.cloneNode();
      node0.isDefaultCase();
      node0.isUnscopedQualifiedName();
      Node node2 = Node.newNumber((double) 57);
      node2.setSourceFileForTesting("uV#*@");
      node0.toStringTree();
      node2.hasMoreThanOneChild();
      node1.addChildToBack(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node2.isTrue();
      node1.children();
      node0.isDec();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING Object#Key [synthetic: com.google.javascript.rhino.Node$IntPropListItem@0000000336] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-398));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node node0 = new Node(112, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags5.setAllFlags();
      Node node1 = Node.newNumber((double) 39, (-951), 112);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isNoSideEffectsCall();
      node0.isSyntheticBlock();
      node0.useSourceInfoIfMissingFromForTree(node2);
      node2.isDebugger();
      node1.isHook();
      node0.isArrayLit();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(31);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 31
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), 262144);
      String string0 = "E";
      Node node1 = Node.newString("E");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.siblings();
      node0.isStringKey();
      node1.isDelProp();
      node2.setWasEmptyNode(true);
      node0.toString(false, false, true);
      node1.getQualifiedName();
      node0.isGetterDef();
      node2.addChildToBack(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3311));
      // Undeclared exception!
      try { 
        node2.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = new Node((-1663), (-1663), 29);
      node0.getBooleanProp(1055);
      Node node1 = new Node(1055, node0, node0, node0, 42, 43);
      node1.getProp(0);
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), (-3243));
      Node node1 = Node.newString("free_call", 43, 1);
      Node node2 = node0.useSourceInfoFromForTree(node0);
      node0.siblings();
      node0.isStringKey();
      node1.isDelProp();
      node2.setWasEmptyNode(true);
      node2.getInputId();
      node0.toString(false, false, false);
      node2.getQualifiedName();
      node0.wasEmptyNode();
      Node node3 = Node.newNumber((double) 2, 6791, 2707);
      Node node4 = new Node(38, node1, node0, node2, node3);
      node4.setJSType((JSType) null);
      node1.checkTreeEquals(node3);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      node0.isDelProp();
      node0.cloneTree();
      Node node1 = new Node(40, node0, node0, 40, 36);
      node0.siblings();
      node1.setWasEmptyNode(false);
      node0.toString(true, true, false);
      node0.getQualifiedName();
      node0.isGetElem();
      Node.newNumber((double) 46, 50, 32);
      node1.isName();
      node1.setLineno(12);
      node0.getJSType();
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), (-3243));
      Node node1 = Node.newString(43, "E");
      Node node2 = Node.newString("free_call", 43, 1);
      Node node3 = node0.useSourceInfoFromForTree(node1);
      node0.siblings();
      node0.isStringKey();
      node2.isDelProp();
      node3.setWasEmptyNode(true);
      node3.getInputId();
      node1.toString(false, false, false);
      node1.getAncestors();
      node3.getQualifiedName();
      node0.isEquivalentToShallow(node3);
      node1.wasEmptyNode();
      Node node4 = new Node(40);
      // Undeclared exception!
      try { 
        node3.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(54);
      node1.getInputId();
      node0.setInputId((InputId) null);
      node0.getSourceFileName();
      node0.checkTreeEquals(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(46);
      node_SideEffectFlags0.setMutatesArguments();
      node0.getJsDocBuilderForNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      EnumType enumType0 = jSTypeRegistry1.createEnumType("pyw", node0, templateType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.toMaybeEnumElementType();
      Node node2 = Node.newString("");
      node0.addChildrenToBack(node1);
      Node.newNumber((double) 48, 83, 29);
      node0.setLength(40);
      node2.getBooleanProp(39);
      node1.isDebugger();
      Node node3 = node2.copyInformationFrom(node1);
      node3.isNE();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-951), 125, 125);
      Node node1 = new Node(125);
      Node node2 = new Node(40, node1);
      node1.getInputId();
      node2.isOnlyModifiesThisCall();
      node0.setInputId((InputId) null);
      // Undeclared exception!
      try { 
        node2.replaceChild(node0, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      immutableList0.iterator();
      Node node0 = Node.newString("Object#Key");
      node0.isWith();
      node0.isVarArgs();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      node0.getProp(42);
      Node node1 = new Node(51, node0, node0, node0, 3003, 0);
      node1.getIndexOfChild(node0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      ObjectType.cast(jSType0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[0] = (JSType) null;
      jSTypeArray0[1] = jSType0;
      FunctionType functionType0 = jSTypeRegistry1.createConstructorType(jSType0, jSTypeArray0);
      jSTypeRegistry1.createFunctionType((ObjectType) functionType0, jSType0, (List<JSType>) immutableList0);
      node1.setJSType(functionType0);
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node0.children();
      node0.isDec();
      node0.isIf();
      node0.putProp(46, node1);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isWith();
      node0.setSourceEncodedPosition((-536870912));
      Node node1 = new Node(38, node0, node0, 12, 32);
      node1.isOnlyModifiesArgumentsCall();
      node1.setCharno(37);
      Node.mergeLineCharNo(50, 49);
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newString("new child has existing sibling");
      Node node1 = node0.getLastSibling();
      node0.isCatch();
      node1.isReturn();
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(36, nodeArray0, 36, 3176);
      Node node1 = node0.getLastSibling();
      node0.setChangeTime(282);
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = null;
      try {
        node0 = new Node(29, (Node) null, (Node) null, (Node) null, 1234, 1234);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newString("", 306, 306);
      node0.children();
      node0.isFromExterns();
      node0.setType((-316));
      node0.isString();
      node0.getAncestors();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isInstanceOf();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(306);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -316
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(52);
      node0.isTrue();
      Node node2 = Node.newString("UNKNOWN", 39, 4095);
      HashSet<Node> hashSet0 = new HashSet<Node>(4054);
      node0.isDec();
      node2.getSideEffectFlags();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING The new child node already has a parent. 115 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(54);
      node1.getInputId();
      node0.setInputId((InputId) null);
      node0.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(46);
      node_SideEffectFlags0.setMutatesArguments();
      node0.getJsDocBuilderForNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getInputId();
      node0.toString(false, true, false);
      node1.getQualifiedName();
      node0.isGetElem();
      Node node2 = Node.newNumber(0.0, (-1328), 47);
      node2.isName();
      try { 
        node0.setString((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BLOCK is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1329, 115, 1329);
      Node node1 = Node.newString(2, "$");
      Node node2 = new Node(4095, node0, node1, node0, node1, 40, 40);
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString("$");
      node2.getStaticSourceFile();
      node3.setStaticSourceFile((StaticSourceFile) null);
      node1.isEquivalentTo(node2, false, false, false);
      node1.setString("");
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1329, 115, 1329);
      Node.newString(2, "$");
      Node node1 = new Node(1329, node0, 48, 55);
      Node node2 = null;
      try {
        node2 = new Node(42, node1, node0, node1, node1, 55, 614);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString(43, "com.google.common.base.CharMatcher$FastMatcher");
      node1.putIntProp(56, 50);
      node0.isEquivalentToTyped(node1);
      node1.checkTreeEquals(node0);
      Node node2 = node0.srcref(node1);
      node1.isOptionalArg();
      node2.isOptionalArg();
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(54);
      node1.getInputId();
      node0.setInputId((InputId) null);
      node0.getSourceFileName();
      node0.checkTreeEquals(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(46);
      node_SideEffectFlags0.setMutatesArguments();
      Node node2 = new Node(124, node1, node1, node0, node1);
      Node node3 = node0.copyInformationFromForTree(node1);
      node2.isCall();
      node0.getStaticSourceFile();
      node3.setStaticSourceFile((StaticSourceFile) null);
      node3.isHook();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1329, 115, 1329);
      Node node1 = Node.newString(2, "$");
      node0.getJSType();
      Node node2 = Node.newString(4095, ".l%-*I .K<n{");
      node0.getChangeTime();
      node0.getStaticSourceFile();
      node1.isIn();
      Node node3 = Node.newString("Unknown class name", 0, 30);
      Node node4 = new Node((-1965), node3, node0, node1, 46, 525);
      node4.getIndexOfChild(node1);
      node3.setSourceEncodedPositionForTree(28);
      // Undeclared exception!
      try { 
        node3.replaceChildAfter(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = Node.newString(49, "duplicate child");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("duplicate child");
      node0.hasOneChild();
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(52, nodeArray0, 54, 57);
      Node node2 = new Node((-3795), 4095, 12);
      // Undeclared exception!
      try { 
        node2.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3795
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1751);
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.InstanceObjectType", 1751, 0);
      node0.isParamList();
      Node node1 = node0.cloneTree();
      node1.isNoSideEffectsCall();
      node0.isAssignAdd();
      node0.isQualifiedName();
      node1.wasEmptyNode();
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = Node.newString("com.google.javascript.rhino.jstype.InstanceObjectType");
      node2.isEquivalentTo(node0, true, false, false);
      node0.setString("");
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(39);
      node0.isDelProp();
      Node node1 = node0.cloneTree();
      Node node2 = new Node(57, node1, node0, 114, 51);
      node1.siblings();
      node1.setWasEmptyNode(false);
      // Undeclared exception!
      try { 
        node1.toString(false, true, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      node0.isDelProp();
      boolean boolean0 = true;
      Node node1 = new Node(0, node0, node0, node0, 4, 32);
      Node node2 = null;
      try {
        node2 = new Node(40, node0, node0, 40, 36);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = new Node(115);
      node0.isAnd();
      node0.setSourceEncodedPosition(115);
      node0.isAdd();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isCast();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      Node node1 = Node.newNumber((double) 8, 31, (-494));
      node0.setSourceEncodedPosition(57);
      node0.isEquivalentTo(node1, true, true, false);
      Node node2 = new Node(115, node1);
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = new Node((-1663), (-1663), 29);
      Node node1 = new Node(1055, node0, node0, node0, 36, 43);
      node1.getProp(0);
      node0.addChildrenToFront(node1);
      Node node2 = null;
      try {
        node2 = new Node((-307), node0, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node.newNumber(0.0);
      Node node0 = Node.newString(43, "com.google.common.base.CharMatcher$FastMatcher");
      node0.putIntProp(56, 50);
      node0.isEquivalentToTyped(node0);
      try { 
        node0.setDouble(43);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FALSE com.google.common.base.CharMatcher$FastMatcher [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting("QN@1wd");
      node0.toStringTree();
      node1.hasMoreThanOneChild();
      node0.addChildToBack(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(32);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node1.isTrue();
      node1.children();
      node1.isDec();
      Node node2 = null;
      try {
        node2 = new Node(3427, node1, node1, 55, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      node0.isString();
      node0.isDelProp();
      Node node1 = node0.cloneTree();
      Node node2 = new Node(40, node0, node0, 40, 36);
      node0.siblings();
      node2.setWasEmptyNode(false);
      node0.toString(false, true, false);
      node0.getQualifiedName();
      node0.isGetElem();
      Node.newNumber((double) 46, 50, 32);
      node2.isName();
      Node node3 = new Node(53, node1);
      // Undeclared exception!
      try { 
        node3.setString(" and ");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node(2147483645, node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isCast();
      node0.isQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch0.equals(node0);
      node2.isFor();
      Node.newString((-1269), " : ");
      InputId inputId0 = new InputId((String) null);
      node2.setInputId(inputId0);
      node0.getBooleanProp(48);
      Node.mergeLineCharNo(55, 1);
      node1.isRegExp();
      node2.isParamList();
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node0.children();
      node1.isEquivalentTo(node0, false, true, true);
      try { 
        node1.setString(":!!8mEqc0C5m");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> 55 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1751);
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.InstanceObjectType", 1751, 0);
      node0.isParamList();
      Node node1 = node0.cloneTree();
      node1.isNoSideEffectsCall();
      node0.isAssignAdd();
      node0.isQualifiedName();
      node1.wasEmptyNode();
      node0.mayMutateGlobalStateOrThrow();
      Node.newString("com.google.javascript.rhino.jstype.InstanceObjectType");
      Node node2 = new Node(167, node1);
      node2.isDec();
      node2.isIf();
      node1.putProp(31, node2);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-398));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = new Node(112, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags5.setAllFlags();
      Node node1 = Node.newNumber((double) 39, (-951), 112);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isNoSideEffectsCall();
      node0.isSyntheticBlock();
      node0.useSourceInfoIfMissingFromForTree(node2);
      node2.isDebugger();
      node1.isHook();
      node0.isArrayLit();
      node2.isBlock();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(31);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 31
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      Node node1 = new Node(1);
      Node node2 = node1.clonePropsFrom(node0);
      node2.isCast();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node3.isQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = node3.checkTreeTypeAwareEqualsImpl(node1);
      JSTypeNative jSTypeNative0 = JSTypeNative.STRING_TYPE;
      node_NodeMismatch0.equals(jSTypeNative0);
      node1.setType(1059);
      Node node4 = new Node(57, node0, 832, 125);
      node4.isFor();
      Node node5 = Node.newString((-1792), "Object#Element");
      InputId inputId0 = new InputId("The new child node already has a parent.");
      node0.setInputId(inputId0);
      node5.getBooleanProp(48);
      Node.mergeLineCharNo(1, 1237);
      node5.isRegExp();
      node5.isParamList();
      ObjectOutputStream objectOutputStream0 = null;
      try {
        objectOutputStream0 = new ObjectOutputStream((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectOutputStream$BlockDataOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node(2147483645, node0, node0, node0);
      node1.isString();
      Node node2 = new Node(57);
      node1.putBooleanProp(32, true);
      Node node3 = null;
      try {
        node3 = new Node(111, node0, node0, node2, 57, 110);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-398));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = new Node(112, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(1073741823, node0, node0, node0, 54, 29);
      node1.getIndexOfChild(node0);
      Node node2 = null;
      try {
        node2 = new Node(0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(51, node0, node0);
      Node node2 = new Node(1, 37, 56);
      node2.getJSType();
      Node node3 = Node.newString(38, "Unknown class name");
      node3.getChangeTime();
      node3.getStaticSourceFile();
      node1.isIn();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      TreeSet<NoType> treeSet0 = new TreeSet<NoType>((Comparator<? super NoType>) null);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) treeSet0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType.toMaybeTemplatizedType((JSType) null);
      JSType jSType0 = jSTypeRegistry1.createFunctionTypeWithVarArgs((ObjectType) null, (JSType) null, (List<JSType>) immutableList0);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, jSType0, jSType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = new Node(115, (-1975), 119);
      node0.isOnlyModifiesArgumentsCall();
      node0.isAdd();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FOR is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node(2147483645, node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isCast();
      node0.isQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch0.equals(node0);
      node0.getProp((-2119));
      Node node3 = Node.newNumber((double) 0, 38, 39);
      node0.isEquivalentTo(node3);
      Node node4 = node0.cloneNode();
      node2.isDefaultCase();
      node4.getChangeTime();
      node4.isUnscopedQualifiedName();
      Node.newNumber((double) 52);
      node3.setSourceFileForTesting("g~/8%IL`~]&TJS)");
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2147483645
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      immutableList0.iterator();
      Node node0 = Node.newString("Object#Key");
      node0.isWith();
      node0.isVarArgs();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      node0.isFor();
      Node node1 = Node.newString(417, "8M(zC1N|FHFmvJ@Wlo:");
      InputId inputId0 = new InputId((String) null);
      node0.getInputId();
      node1.setInputId((InputId) null);
      node0.getBooleanProp(1297);
      Node.mergeLineCharNo(49, 37);
      node0.isRegExp();
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newNumber((double) 111, 111, 111);
      Node node1 = new Node(125);
      Node node2 = new Node(40, node1);
      node1.getInputId();
      node0.setInputId((InputId) null);
      Node node3 = node2.getLastSibling();
      node2.setChangeTime(471155);
      // Undeclared exception!
      try { 
        node3.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node.mergeLineCharNo((-1967), (-1967));
      Node node0 = new Node((-1967), 1338, 2);
      node0.isExprResult();
      String string0 = "rGWN";
      int int0 = 48;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node1.addChildToBack(node0);
      Node.newString(30, "");
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 262144, 262144);
      node0.useSourceInfoFromForTree(node0);
      node0.isTypeOf();
      node0.checkTreeEqualsImpl(node0);
      node0.isDelProp();
      Node node1 = new Node(46, node0, node0, 769, (-1358));
      node0.siblings();
      boolean boolean0 = false;
      node0.setWasEmptyNode(false);
      Node node2 = null;
      try {
        node2 = new Node(54, node0, node0, 32, (-855));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = new Node((-469), 38, 77);
      node0.isQualifiedName();
      node0.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      immutableList0.iterator();
      Node.newString(1751, "G9D(#F");
      Node node0 = new Node(57, 44, 46);
      Node node1 = new Node(1751, node0);
      Node node2 = new Node(44, node1, 25, 87855567);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting("Object#Key");
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1751
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node.mergeLineCharNo((-1967), (-1967));
      Node node0 = new Node((-1967), 1338, (-1));
      node0.isScript();
      String string0 = "rGWN";
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node1.addChildToBack(node0);
      Node.newString(30, "");
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 262144, (-1631));
      Node node1 = Node.newString("E");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node2.isDelProp();
      node2.isQualifiedName();
      Node node3 = new Node(108, node1, node2, 31, 54);
      node3.siblings();
      node3.setWasEmptyNode(true);
      node1.toString(true, false, true);
      node1.getQualifiedName();
      node2.isGetElem();
      Node.newNumber(815.464494186, (-1180), 1);
      node0.isName();
      Node node4 = Node.newString("Ym)$KI=");
      node1.isEquivalentToShallow(node4);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node((-2147483627), node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isCast();
      node0.isQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch0.equals(node0);
      node0.getProp((-2119));
      Node node3 = new Node(51, node1, 2, 8);
      node0.isEquivalentTo(node3);
      Node node4 = node0.cloneNode();
      node2.isDefaultCase();
      node4.getChangeTime();
      node4.isUnscopedQualifiedName();
      Node.newNumber((double) 52);
      node3.setSourceFileForTesting("g~/8%IL`~]&TJS)");
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2147483627
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      Node node0 = Node.newString("Object#Key");
      node0.isVarArgs();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      node0.getProp(42);
      Node node1 = new Node(51, node0, node0, node0, 3003, 0);
      node1.getIndexOfChild(node0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      ObjectType.cast(jSType0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      JSType[] jSTypeArray0 = new JSType[2];
      jSTypeArray0[0] = (JSType) null;
      jSTypeArray0[0] = jSType0;
      JSType.toMaybeFunctionType(jSTypeArray0[0]);
      jSTypeRegistry1.createFunctionType((ObjectType) null, jSType0, (List<JSType>) immutableList0);
      node1.setJSType((JSType) null);
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1329, 115, 1329);
      Node node1 = Node.newString(2, "$");
      Node node2 = new Node(4095, node0, node1, node0, node1, 40, 40);
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString("$");
      node2.getStaticSourceFile();
      node3.setStaticSourceFile((StaticSourceFile) null);
      node1.isEquivalentTo(node2, false, true, true);
      Node node4 = new Node(38, node3);
      node2.isVoid();
      node4.getChildBefore(node3);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), (-3243));
      Node node1 = Node.newString(43, "E");
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(56, node1, node0, 15, 29);
      node3.isCall();
      node3.getStaticSourceFile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node2.isHook();
      Node node4 = node2.detachFromParent();
      node4.setCharno(57);
      node2.getInputId();
      node1.wasEmptyNode();
      node4.isOnlyModifiesThisCall();
      node1.setChangeTime((-3870));
      node4.getLength();
      node0.isCall();
      node2.isHook();
      // Undeclared exception!
      try { 
        node4.getExistingIntProp((-1855));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -1855
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newString(105, ":!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node0.children();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      NoType noType0 = mock(NoType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(noType0).toString();
      NoType noType1 = mock(NoType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(noType1).toString();
      ImmutableList<NoType> immutableList0 = ImmutableList.of(noType0, noType0, noType0, noType0, noType0, noType0, noType0, noType0, noType0, noType1, noType1);
      immutableList0.reverse();
      ImmutableList<NoType> immutableList1 = immutableList0.reverse();
      ImmutableList<JSType> immutableList2 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList1);
      JSType jSType0 = jSTypeRegistry0.createFunctionType((ObjectType) null, (JSType) null, (List<JSType>) immutableList2);
      node1.setJSType(jSType0);
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = new Node(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      node0.setJSType(templateType0);
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = Node.newNumber(650.53559119, 262144, (-1631));
      Node node1 = Node.newString("E");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node2.isDelProp();
      node2.isQualifiedName();
      Node node3 = new Node(108, node1, node2, 31, 54);
      node3.siblings();
      node3.setWasEmptyNode(true);
      node1.toString(true, false, true);
      node3.toString(false, true, true);
      node3.getQualifiedName();
      node3.isGetElem();
      Node.newNumber((double) 46, 36, 48);
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node node0 = Node.newString(26, "", 26, (-2506));
      Node node1 = Node.newString(15, "Ym)$KI=");
      Node node2 = Node.newString("GiJsZk", 56, 53);
      Node node3 = node1.useSourceInfoFromForTree(node2);
      node1.siblings();
      node3.isStringKey();
      node3.isDelProp();
      node0.setWasEmptyNode(false);
      node1.getInputId();
      node1.toString(false, false, false);
      node2.getQualifiedName();
      node0.wasEmptyNode();
      Node node4 = new Node(57);
      // Undeclared exception!
      try { 
        node1.removeChild(node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newString(112, "4Ci9mMv3=", 47, (-1471));
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newString((-874), "String node not created with Node.newString", 100, 948);
      Node node1 = new Node((-874), node0, node0, node0, node0, (-1238), 2276);
      Node node2 = new Node(39, node1, node1, 79, 36);
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("lvnXy!Q5W?08tx/");
      node_FileLevelJsDocBuilder0.append("za+l'`f`}qVXM");
      node0.isDec();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(38);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newNumber((double) 111, 111, 111);
      Node node1 = new Node(125);
      Node node2 = new Node(40, node1);
      node1.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting("K|M");
      node1.toStringTree();
      node0.isEquivalentTo(node1);
      Node node3 = node2.cloneNode();
      node3.isDefaultCase();
      node2.isUnscopedQualifiedName();
      Node node4 = Node.newNumber(0.0);
      node2.getIntProp(34);
      node2.setSourceFileForTesting((String) null);
      node2.toStringTree();
      node3.isThis();
      node2.addChildToBack(node4);
      Node node5 = node2.copyInformationFrom(node3);
      node1.isNoSideEffectsCall();
      Node node6 = node4.useSourceInfoIfMissingFromForTree(node0);
      node2.isDebugger();
      node2.isHook();
      node1.isArrayLit();
      node6.isTrue();
      // Undeclared exception!
      try { 
        node5.getExistingIntProp(50);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 50
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      immutableList0.iterator();
      Node node0 = Node.newString("Object#Key");
      node0.isWith();
      node0.isVarArgs();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      node0.isFor();
      Node node1 = Node.newString(417, "8M(zC1N|FHFmvJ@Wlo:");
      InputId inputId0 = new InputId((String) null);
      node0.getInputId();
      node1.setInputId((InputId) null);
      Node.mergeLineCharNo(1, 54);
      node1.isComma();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = new Node(49, 614, 417);
      Node node1 = new Node(32, node0, node0, node0);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node1;
      Node node2 = null;
      try {
        node2 = new Node(40, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = new Node(46, 262144, 105);
      node0.isAnd();
      node0.setSourceEncodedPosition(262144);
      node0.isAdd();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isCast();
      node0.isHook();
      Node node1 = new Node(36, node0, node0, node0);
      node0.hasChild(node1);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      immutableList0.iterator();
      Node node0 = Node.newString("Object#Key");
      node0.isArrayLit();
      node0.isVarArgs();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      node0.getProp(42);
      node0.isEquivalentTo(node0);
      node0.cloneNode();
      node0.isDefaultCase();
      node0.isUnscopedQualifiedName();
      Node.newNumber((double) 57);
      NoType noType0 = null;
      // Undeclared exception!
      try { 
        ImmutableList.of((NoType) null, (NoType) null, (NoType) null, (NoType) null, (NoType) null, (NoType) null, (NoType) null, (NoType) null, (NoType) null, (NoType) null, (NoType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      immutableList0.iterator();
      Node node0 = Node.newString("Object#Key");
      node0.isWith();
      node0.isVarArgs();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      Node node1 = new Node(4095);
      Node node2 = Node.newString("D;YO*Jj`b[w.spCBS=");
      Node node3 = new Node(52, node0, node2, node1, 938, 47);
      node1.isThrow();
      node3.hasChildren();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      Node.newNumber((double) 8, 126, 51);
      node0.isAnd();
      int int0 = Node.LAST_PROP;
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(2, nodeArray0, (-300), 26);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeSet<NoType> treeSet0 = new TreeSet<NoType>(comparator0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) treeSet0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node2.setSourceEncodedPosition(45);
      node2.getStaticSourceFile();
      node1.isNew();
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      Node node1 = Node.newNumber((double) 8, 31, (-494));
      node0.setSourceEncodedPosition(57);
      node0.isEquivalentTo(node1, true, true, false);
      node0.getQualifiedName();
      node1.isContinue();
      node0.isWhile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(57);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newString("*!q?$m", 306, 306);
      Vector<Node> vector0 = new Vector<Node>();
      Node node1 = new Node(12, 15, 51);
      node1.isAnd();
      node1.setSourceEncodedPosition(40);
      node0.isAdd();
      node1.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isCast();
      node1.isHook();
      Node node2 = new Node(15, node1, node0, node0);
      node2.hasChild(node1);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1751);
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.InstanceObjectType", 1751, 0);
      node0.isParamList();
      Node node1 = node0.cloneTree();
      node1.isNoSideEffectsCall();
      node0.isAssignAdd();
      node0.isQualifiedName();
      node1.wasEmptyNode();
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = Node.newString("com.google.javascript.rhino.jstype.InstanceObjectType");
      node1.setLineno(93);
      node0.isInstanceOf();
      Node node3 = new Node(37, node2);
      node3.setIsSyntheticBlock(false);
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node.mergeLineCharNo((-1967), (-1967));
      Node node0 = new Node((-1967), 1338, (-1));
      node0.isScript();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node1.addChildToBack(node0);
      node1.cloneTree();
      Node node2 = null;
      try {
        node2 = new Node(39, node1, node0, 1586, 40);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("?F']GDj\"L|$#U", false);
      node0.putProp(83, simpleSourceFile0);
      node0.getJSDocInfo();
      Node node1 = Node.newNumber((double) 8, 31, (-494));
      node0.setSourceEncodedPosition(57);
      node0.isEquivalentTo(node1, false, false, false);
      try { 
        node1.setString("com.google.common.collect.AbstractIndexedListIterator");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 8.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newString((-874), "String node not created with Node.newString", 100, 948);
      Node node1 = new Node((-874), node0, node0, node0, node0, (-1238), 2276);
      node0.getDirectives();
      Node node2 = new Node(39, node1, node1, 79, 36);
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(52);
      Node[] nodeArray0 = new Node[2];
      Node node2 = new Node((-9), node1, node0, node0, (-1232), 47);
      node1.cloneNode();
      nodeArray0[0] = node2;
      node1.setSourceEncodedPosition(3262);
      node2.isAdd();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("lvnXy!Q5W?08tx/");
      node0.setWasEmptyNode(true);
      Node node1 = Node.newNumber(943.712281565);
      node1.toString(true, false, true);
      node0.toString(false, false, false);
      Node node2 = new Node(42);
      node2.getQualifiedName();
      node0.isGetElem();
      Node.newNumber((double) 32, 1, 39);
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = new Node(49);
      node0.getProp(751619276);
      Node node1 = new Node(54, node0);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node.newNumber(0.0);
      Node node0 = Node.newString(43, "com.google.common.base.CharMatcher$FastMatcher");
      node0.getSourceOffset();
      node0.putIntProp(56, 50);
      node0.isEquivalentToTyped(node0);
      Node.newNumber(Double.POSITIVE_INFINITY, (-879), 2946);
      try { 
        node0.setDouble(43);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FALSE com.google.common.base.CharMatcher$FastMatcher [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      Node node1 = Node.newNumber((double) 8, 31, (-494));
      Node node2 = new Node(115, node1);
      node0.addChildrenAfter(node2, (Node) null);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = new Node((-1663), (-1663), 29);
      node0.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.addChildToBack(node1);
      Node node2 = Node.newString(32, "E");
      Node node3 = new Node(57, node2, node2, node0, 959, 49);
      node3.removeChild(node0);
      Node node4 = Node.newString(893, "", 2299, 63);
      node4.hasChildren();
      Node.newString("rGWN");
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = Node.newNumber((double) 262144);
      Node node1 = Node.newString("E");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node2.isDelProp();
      node2.isQualifiedName();
      Node node3 = new Node(108, node1, node2, 31, 54);
      node3.siblings();
      node3.setWasEmptyNode(true);
      node1.getQualifiedName();
      Node.newString(47, "cTTc~AHPD{rXqXEF");
      node2.isGetElem();
      Node node4 = Node.newNumber(815.464494186, (-1180), 1);
      node4.isVoid();
      Node.extractCharno(52);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = Node.newString((-874), "String node not created with Node.newString", 100, 948);
      Node node1 = new Node((-874), node0, node0, node0, node0, (-1238), 2276);
      node1.cloneTree();
      node1.isEquivalentToTyped(node0);
      Node node2 = new Node(39, node1, node1, 79, 36);
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node((-1008));
      node1.getInputId();
      node0.isEquivalentToShallow(node1);
      node1.setInputId((InputId) null);
      node0.getSourceFileName();
      Node node2 = Node.newString("NUMBER_TYPE");
      node0.checkTreeEquals(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesArguments();
      node2.toString(false, false, false);
      node1.getQualifiedName();
      node1.isGetElem();
      node0.isName();
      Node node3 = new Node(632, node2, node2, 8, 1);
      // Undeclared exception!
      try { 
        node3.setString((String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 632
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("lvnXy!Q5W?08tx/");
      node0.setWasEmptyNode(true);
      Node node1 = Node.newNumber(943.712281565);
      node1.setWasEmptyNode(false);
      node1.getInputId();
      node0.toString(true, true, false);
      node1.getQualifiedName();
      node1.isGetElem();
      Node node2 = Node.newNumber((-3584.412), 50, 51);
      node1.isName();
      try { 
        node2.setString("DEC");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER -3584.412 50 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newNumber((double) 262144);
      Node node1 = Node.newString("E");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node2.isDelProp();
      node2.isQualifiedName();
      Node node3 = new Node(108, node1, node2, 31, 54);
      node3.siblings();
      node3.setWasEmptyNode(true);
      node0.getAncestor(37);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(32);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.setMutatesThis();
      Node node4 = Node.newNumber(0.0, 94, (-1631));
      node3.children();
      node4.isDec();
      node4.setLineno(0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      node0.isAnd();
      node0.setSourceEncodedPosition(83);
      node0.isAdd();
      node0.isCast();
      node0.isNot();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got DELPROP
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = new Node((-1663), (-1663), 29);
      node0.isExprResult();
      String string0 = "rGWN";
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      String string1 = "";
      node0.addChildToBack(node1);
      Node.newString(32, "E");
      // Undeclared exception!
      try { 
        node0.removeChild(node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = new Node(2097152);
      // Undeclared exception!
      try { 
        node0.addChildBefore((Node) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = new Node(614);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node.newString("E");
      node0.checkTreeEquals(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1433));
      node_SideEffectFlags0.setMutatesArguments();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = new Node(31, 31, 25);
      node0.isAnd();
      node0.setSourceEncodedPosition(83);
      Node node1 = new Node(262144, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
      try { 
        node2.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      Node node1 = Node.newNumber((double) 8, 31, (-494));
      node1.getInputId();
      node1.getDouble();
      Node node2 = Node.newNumber(0.7);
      node2.isNot();
      Node node3 = null;
      try {
        node3 = new Node(2675, (Node[]) null, 2, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      Node node1 = Node.newNumber((double) 8, 31, (-494));
      node0.setOptionalArg(true);
      Node node2 = new Node(115, node1);
      node0.getSourceOffset();
      node2.setLength(115);
      node0.addChildrenAfter(node2, (Node) null);
      node0.isGetElem();
      node0.useSourceInfoFrom(node2);
      node1.isNew();
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      String string0 = "UjacsLT*eM:`";
      Node node0 = Node.newString(2980, "UjacsLT*eM:`");
      Node node1 = new Node(1711, node0, node0, (-3353), 48);
      Node node2 = node1.clonePropsFrom(node0);
      node2.getDirectives();
      Node node3 = node0.srcrefTree(node1);
      node3.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      // Undeclared exception!
      try { 
        node3.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2980
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1751);
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.InstanceObjectType", 1751, 0);
      node0.isParamList();
      Node node1 = node0.cloneTree();
      node1.setVarArgs(true);
      node0.isWhile();
      node0.isAssignAdd();
      node0.isQualifiedName();
      node1.setCharno(8);
      node1.getInputId();
      node0.wasEmptyNode();
      node0.isOnlyModifiesThisCall();
      node1.setChangeTime(0);
      Node node2 = new Node(1, node0);
      node2.getLength();
      node2.isCall();
      node2.isHook();
      node0.hasChildren();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = Node.newString(":!!8mEqc0C5m");
      node1.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      // Undeclared exception!
      try { 
        node2.isEquivalentTo((Node) null, true, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newString((-2550), "uOS%r^~K64 w$iS/iW");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isTry();
      node0.isOptionalArg();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node1 = null;
      try {
        node1 = new Node((-3027), node0, (Node) null, node0, 852, 262144);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newString((-2550), "uOS%r^~K64 w$iS/iW");
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isTry();
      node0.isOptionalArg();
      node0.getSideEffectFlags();
      node0.isCase();
      Node node1 = null;
      Node node2 = null;
      try {
        node2 = new Node((-3016), node0, (Node) null, node0, 852, 262144);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = Node.newString(928, "B6dM", 928, 928);
      node0.children();
      node0.isOnlyModifiesArgumentsCall();
      node0.addSuppression("Xgs%z|AWqjb.S|k3");
      Node node1 = new Node(16, 4095, 1789);
      node1.addChildToFront(node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.setString("B6dM");
      node0.isNoSideEffectsCall();
      node1.getIntProp(116);
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newNumber((double) 111, 111, 111);
      Node node1 = new Node(125);
      Node node2 = new Node(40, node1);
      node1.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node2.useSourceInfoFromForTree(node1);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting("K|M");
      node1.toStringTree();
      node0.isEquivalentTo(node1);
      Node node3 = node2.cloneNode();
      node3.isDefaultCase();
      node2.isUnscopedQualifiedName();
      Node node4 = Node.newNumber(0.0);
      node2.getIntProp(34);
      node2.setSourceFileForTesting((String) null);
      node2.toStringTree();
      node3.isThis();
      node2.addChildToBack(node4);
      Node node5 = node2.copyInformationFrom(node3);
      node1.isNoSideEffectsCall();
      Node node6 = node4.useSourceInfoIfMissingFromForTree(node0);
      node2.isDebugger();
      node2.isHook();
      node1.isArrayLit();
      node6.isTrue();
      node5.isStringKey();
      // Undeclared exception!
      try { 
        node5.getExistingIntProp(50);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 50
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 262144, 262144);
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.isTypeOf();
      node0.checkTreeEqualsImpl(node0);
      node0.isDelProp();
      Node node2 = new Node(46, node0, node0, 769, (-1358));
      node0.siblings();
      InputId inputId0 = new InputId((String) null);
      node2.getInputId();
      node0.setInputId((InputId) null);
      node1.getBooleanProp(10);
      Node.mergeLineCharNo(8202, (-2151));
      node2.isRegExp();
      node0.isNumber();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newNumber((double) 111, 111, 111);
      Node node1 = new Node(125);
      Node node2 = new Node(40, node1);
      node1.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting("K|M");
      node1.toStringTree();
      node0.isEquivalentTo(node1);
      Node node3 = node2.cloneNode();
      node3.isDefaultCase();
      node2.isUnscopedQualifiedName();
      Node.newNumber(0.0);
      node2.getIntProp(34);
      node2.setSourceFileForTesting((String) null);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("'Oqfoyto3Ge*S8xE");
      node2.hasOneChild();
      node0.getJSType();
      node1.isContinue();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(54);
      node1.getInputId();
      node0.setInputId((InputId) null);
      node0.getSourceFileName();
      node0.checkTreeEquals(node0);
      node0.getJsDocBuilderForNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      Node node2 = new Node(64, 627, 86);
      node1.isQualifiedName();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("", node1, templateType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getPropertyNode("Ym)$KI=");
      node0.isObjectLit();
      node2.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newString(2158, "com.google.common.base.CharMatcher$FastMatcher");
      node0.putIntProp(2158, 2158);
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString("o%Qr11)\"aokSTi}q", 1260, 49);
      node0.mayMutateArguments();
      node1.checkTreeEquals(node0);
      node0.isAnd();
      // Undeclared exception!
      try { 
        node0.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting(":!!8mEqc0C5m");
      node0.toStringTree();
      node1.hasMoreThanOneChild();
      node0.addChildToBack(node1);
      node1.isAssignAdd();
      node0.isQualifiedName();
      node0.wasEmptyNode();
      Node node2 = Node.newString("pFrY\",w85YeO4");
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString("pFrY\",w85YeO4");
      node3.setLineno(63);
      node0.isInstanceOf();
      Node node4 = null;
      try {
        node4 = new Node(4095, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isCast();
      node0.isQualifiedName();
      node0.getProp((-2119));
      Node node2 = new Node(51, node0, 2, 8);
      node0.isEquivalentTo(node2);
      Node node3 = node0.cloneNode();
      node1.isDefaultCase();
      node3.getChangeTime();
      node3.isUnscopedQualifiedName();
      Node.newNumber((double) 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      String string0 = "Db;9LP*xgOoP7O";
      Node node0 = Node.newString("Db;9LP*xgOoP7O", (-2899), (-2045));
      node0.isBreak();
      int int0 = 112;
      int int1 = (-4096);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType jSType0 = null;
      JSType.toMaybeTemplatizedType((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "%iyDKNJLg");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), (-3243));
      Node node1 = Node.newString(43, "E");
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.setOptionalArg(true);
      Node node3 = new Node(56, node1, node0, 15, 29);
      node3.isCall();
      node3.getStaticSourceFile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node2.isHook();
      Node node4 = node2.detachFromParent();
      node4.setCharno(57);
      node2.getInputId();
      node4.setType((-1000));
      node1.wasEmptyNode();
      node4.isOnlyModifiesThisCall();
      node1.setChangeTime((-3870));
      node4.getLength();
      node0.isCall();
      node2.isHook();
      node4.hasChildren();
      node2.getSourceFileName();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("lvnXy!Q5W?08tx/");
      node0.setWasEmptyNode(true);
      Node node1 = Node.newNumber(943.712281565);
      node1.toString(true, false, true);
      node0.toString(false, false, false);
      Node node2 = new Node(42);
      node2.getQualifiedName();
      node0.isGetElem();
      Node node3 = Node.newNumber((double) 32, 1, 39);
      node1.isNE();
      node3.isRegExp();
      node2.copyInformationFrom(node3);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node node0 = Node.newNumber((double) 111, 111, 111);
      Node node1 = new Node(125);
      Node node2 = new Node(40, node1);
      node1.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting("K|M");
      node2.isSwitch();
      Node node3 = null;
      try {
        node3 = new Node(4194304, node0, node1, 256, 57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      Node node1 = Node.newNumber((double) 8, 31, (-494));
      node0.setOptionalArg(true);
      Node node2 = new Node(115, node1);
      node0.getSourceOffset();
      node2.setLength(115);
      node0.addChildrenAfter(node2, (Node) null);
      node2.detachFromParent();
      Node.newString((-1333), "&N.", 306, 49);
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      node0.addSuppression("Number node not created with Node.newNumber");
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      int int0 = 36;
      Node node1 = new Node((-649), node0, 36, 52);
      Node node2 = Node.newString(42, "Number node not created with Node.newNumber", 4095, 12);
      node2.isQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node3 = Node.newNumber((double) 49);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("com.google.common.collect.SingletonImmutableBiMap", node3, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = new Node(105);
      node0.removeProp(105);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node0.setSourceFileForTesting("6fBZ2:O2PH/f7u^");
      node0.toStringTree();
      Node node1 = new Node(51, node0, node0, 0, 42);
      node1.isLocalResultCall();
      Node node2 = node1.cloneNode();
      node2.isDefaultCase();
      node1.getInputId();
      node1.setInputId((InputId) null);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isDec();
      node0.isIf();
      node_SideEffectFlags2.clearSideEffectFlags();
      node0.isSwitch();
      node1.isFor();
      node1.isNull();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got IN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node0 = Node.newNumber((double) 46, 46, 46);
      node0.setSourceEncodedPosition(46);
      node0.isAdd();
      Node node1 = Node.newNumber((double) 1);
      node1.checkTreeEquals(node0);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = Node.newString(307, "Ym)$KI=", 56, 42);
      node1.isCast();
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newNumber((double) 111, 111, 111);
      Node node1 = new Node(40, node0);
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node0.setSourceFileForTesting("K|M");
      node0.toStringTree();
      node0.isEquivalentTo(node0);
      Node node2 = node1.cloneNode();
      node2.toString();
      node2.isDefaultCase();
      node1.isUnscopedQualifiedName();
      Node.newNumber(0.0);
      node1.getIntProp(34);
      node1.setSourceFileForTesting((String) null);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("'Oqfoyto3Ge*S8xE");
      node1.hasOneChild();
      node0.getJSType();
      node0.isContinue();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newNumber((double) 111, 111, 111);
      Node node1 = new Node(125);
      Node node2 = new Node(40, node1);
      node1.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting("K|M");
      node1.toStringTree();
      node0.isEquivalentTo(node1);
      Node node3 = node2.cloneNode();
      node3.isDefaultCase();
      node2.isUnscopedQualifiedName();
      Node.newNumber(0.0);
      node2.getIntProp(34);
      node2.setSourceFileForTesting((String) null);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("'Oqfoyto3Ge*S8xE");
      node2.hasOneChild();
      node0.getJSType();
      node1.isContinue();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = new Node(614, 42, (-3396));
      node0.isExprResult();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node1 = Node.newString("Object#Key");
      node1.addChildToBack(node0);
      String string0 = "E";
      Node.newString(55, "Object#Element");
      Node node2 = null;
      try {
        node2 = new Node(39, node0, node0, node1, 56, 53);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1751);
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.InstanceObjectType", 1751, 0);
      node0.isParamList();
      node0.cloneTree();
      node0.isWhile();
      node0.isAssignAdd();
      node0.isQualifiedName();
      Node node1 = new Node(2748, 9, 51);
      node1.isQualifiedName();
      Node node2 = new Node((-1171), node1);
      node2.isCatch();
      node2.isReturn();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = Node.newString(105, ":!8mEqc0C5m", 46, 105);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node0.children();
      node0.isDec();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isHook();
      Node node1 = new Node(57, node0, node0, node0);
      node1.hasChild(node0);
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = new Node(0);
      Node.newNumber((-3157.61), 561, 51);
      node0.getChangeTime();
      node0.getQualifiedName();
      node0.addSuppression("Ym)$KI=");
      node0.isQuotedString();
      node0.mayMutateArguments();
      node0.isNoSideEffectsCall();
      node0.mayMutateArguments();
      node0.getSourceFileName();
      node0.isOnlyModifiesThisCall();
      node0.isScript();
      node0.getCharno();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = Node.newString(15, "kKa>C1,IH1Hw2~", 37, 55);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      node0.children();
      node0.isDec();
      node1.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node0.isCast();
      node1.isHook();
      Node node2 = new Node(3000, node0, node0, node0);
      node2.hasChild(node1);
      node1.isComma();
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3000
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString(83, ":!!8mEqc0C5m", 83, 83);
      Node node1 = new Node(83, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting(":!!8mEqc0C5m");
      node0.toStringTree();
      Node node2 = node0.cloneNode();
      node2.isDefaultCase();
      node0.isUnscopedQualifiedName();
      Node node3 = Node.newNumber(1868.156041825);
      Node node4 = new Node(1, 1310, 116);
      node4.getIntProp(1);
      node3.setSourceFileForTesting("");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("tDZ\u0002jE}MU7@/R?");
      node0.hasOneChild();
      node3.getJSType();
      node1.isContinue();
      Node.AncestorIterable node_AncestorIterable0 = node4.getAncestors();
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node2);
      node_AncestorIterable1.spliterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable1.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node4.cloneNode();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newNumber((double) 111, 111, 111);
      Node node1 = new Node(125);
      Node node2 = new Node(40, node1);
      node1.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting("K|M");
      node1.toStringTree();
      node0.isEquivalentTo(node1);
      Node node3 = node2.cloneNode();
      node3.isDefaultCase();
      node2.isUnscopedQualifiedName();
      Node.newNumber(0.0);
      node2.getIntProp(34);
      node2.setSourceFileForTesting((String) null);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("'Oqfoyto3Ge*S8xE");
      node2.hasOneChild();
      node0.getJSType();
      node1.isContinue();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node1.cloneNode();
      node3.cloneTree();
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newString(83, ":!!8mEqc0C5m", 83, 83);
      Node node1 = new Node(83, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node1.setSourceFileForTesting(":!!8mEqc0C5m");
      node0.toStringTree();
      node1.hasMoreThanOneChild();
      node0.addChildToBack(node1);
      node0.isThrow();
      node0.hasChildren();
      node1.getSourceFileName();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1627), (-3243));
      Node node1 = new Node(39, node0, node0, 43, 47);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(57, node1);
      node3.isCall();
      node3.getStaticSourceFile();
      node2.isHook();
      Node node4 = node2.detachFromParent();
      node4.setCharno(57);
      node1.wasEmptyNode();
      node3.isInstanceOf();
      node2.isBreak();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte)111;
      byteArray0[4] = (byte) (-13);
      byteArray0[5] = (byte) (-94);
      byteArray0[6] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node3.isName();
      node2.isDelProp();
      node2.useSourceInfoFromForTree(node4);
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = new Node(105, 262144, 105);
      node0.isAnd();
      node0.setSourceEncodedPosition(262144);
      node0.isAdd();
      NoType noType0 = mock(NoType.class, new ViolatedAssumptionAnswer());
      NoType noType1 = mock(NoType.class, new ViolatedAssumptionAnswer());
      NoType noType2 = mock(NoType.class, new ViolatedAssumptionAnswer());
      ImmutableList.of(noType0, noType0, noType0, noType0, noType1, noType1, noType1, noType2, noType1, noType0, noType0);
      node0.setWasEmptyNode(false);
      node0.isQualifiedName();
      Node node1 = new Node(2503, 51, 0);
      node1.isQualifiedName();
      Node node2 = new Node((-809), node0, node0);
      Node node3 = new Node((-4177), node2);
      node0.isCatch();
      node3.isReturn();
      node3.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = Node.newString(3781, "Nu7^@@");
      Node node1 = Node.newNumber((double) 46);
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.removeFirstChild();
      // Undeclared exception!
      try { 
        node2.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node.extractLineno(1325);
      Node node0 = Node.newString(114, "K(3");
      node0.isDelProp();
      node0.isFalse();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node node1 = new Node(39, 116, 57);
      nodeArray0[4] = node1;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      Node node2 = null;
      try {
        node2 = new Node(46, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1307, 85, 1307);
      String string0 = "$";
      Node node1 = Node.newString(2, "$");
      Node node2 = new Node(4095, node0, node1, node0, node1, 40, 40);
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString("$");
      node2.getStaticSourceFile();
      Node.newNumber((double) 53, 8, 46);
      node3.getStaticSourceFile();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = Node.newNumber((-0.7227063387501712), 262144, (-1631));
      Node node1 = Node.newString("E");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node2.isDelProp();
      node2.isQualifiedName();
      Node node3 = new Node(108, node1, node2, 31, 54);
      node3.siblings();
      node3.setWasEmptyNode(true);
      node1.toString(true, false, true);
      node1.getQualifiedName();
      node2.isGetElem();
      Node.newNumber(815.464494186, (-1180), 1);
      node0.isName();
      Node node4 = Node.newString("Ym)$KI=");
      node1.isEquivalentToShallow(node4);
      node2.getLineno();
      node2.useSourceInfoIfMissingFromForTree(node3);
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), (-3243));
      Node node1 = Node.newString(43, "E");
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.setOptionalArg(true);
      Node node3 = new Node(56, node1, node0, 15, 29);
      node3.isCall();
      node3.getStaticSourceFile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node2.isHook();
      Node node4 = Node.newString("E");
      Node node5 = new Node(56, node3, node4, node3, 304, (-1672));
      node3.removeChild(node2);
      Node node6 = Node.newString((-3093), "E", (-1841537558), 31);
      node6.hasChildren();
      Node.newString("E");
      // Undeclared exception!
      try { 
        node2.addChildBefore(node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = new Node((-2147), (-1663), 194);
      node0.isQuotedString();
      Node node1 = new Node(307, node0, 47, 57);
      node1.putIntProp(1139, 1);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      // Undeclared exception!
      try { 
        node1.toString(false, true, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 1139
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newString("*9{[RPNEQzkK;[NC}p");
      node0.getDirectives();
      Node node1 = new Node((-713), node0, node0, 127, 4095);
      node1.isSyntheticBlock();
      String string0 = "Ym)$KI=";
      node0.setDirectives((Set<String>) null);
      Node node2 = Node.newString("Ym)$KI=", 558, 36);
      node1.isEquivalentTo(node2);
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isCast();
      node0.isQualifiedName();
      node0.getProp((-2119));
      Node node2 = new Node(51, node0, 2, 8);
      node0.isEquivalentTo(node2);
      Node node3 = node0.cloneNode();
      node1.isDefaultCase();
      node3.getChangeTime();
      node3.isUnscopedQualifiedName();
      Node node4 = Node.newNumber((double) 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isCatch();
      node4.isReturn();
      Node node5 = null;
      try {
        node5 = new Node(37, node4, node4, node4, node1, 54, 1740);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = Node.newString(105, ":!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = Node.newString(46, ":!8mEqc0C5m", (-2927), 43);
      node2.toStringTree();
      Node node3 = node1.cloneTree();
      node3.isEquivalentToTyped(node0);
      Node node4 = null;
      try {
        node4 = new Node((-1541), node0, node1, 4095, 47);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = new Node(102, 1610612736, 612);
      node0.isAnd();
      node0.setSourceEncodedPosition(3518);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isBlock();
      node0.isCast();
      node0.isFalse();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-3838));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got INC
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newNumber(3765.165048357, (-1), 21);
      node0.isOnlyModifiesThisCall();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setWasEmptyNode(true);
      node0.isVar();
      Node node1 = new Node(2268, 4095, 57);
      node0.isLabel();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      String string0 = null;
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage0((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      UnaryOperator.identity();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(155);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesThis();
      Node node0 = new Node(77, 155, 77);
      node0.children();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isSwitch();
      Node node1 = new Node((-2127), node0, node0, 46, 12);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      node1.setWasEmptyNode(false);
      node0.isCast();
      node1.isHook();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      node1.copyInformationFrom(node0);
      Node node2 = null;
      try {
        node2 = new Node(15, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(52);
      Node[] nodeArray0 = new Node[2];
      Node node2 = new Node(53, node1, node1, node0, node0, 4, 4095);
      nodeArray0[0] = node2;
      node2.getChangeTime();
      InputId inputId0 = new InputId("The new child node already has a parent.");
      node0.getLineno();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      node0.putIntProp(3604, 3604);
      Node node1 = new Node(215, node0, node0, node0, 53, 471155);
      node0.isEquivalentToTyped(node1);
      // Undeclared exception!
      try { 
        node1.setDouble(12);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 215
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      node0.getProp(103);
      Node node1 = new Node(118, node0, 1213, 46);
      node1.isEquivalentTo(node0);
      Node node2 = node1.cloneNode();
      node2.isDefaultCase();
      node1.getChangeTime();
      node1.isUnscopedQualifiedName();
      Node.newNumber(112.8551);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = Node.newNumber((-0.7227063387501712), 262144, (-1631));
      Node node1 = Node.newString("E");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node2.isDelProp();
      node2.isQualifiedName();
      Node node3 = new Node(108, node1, node2, 31, 54);
      node3.siblings();
      node3.setWasEmptyNode(true);
      node1.toString(true, false, true);
      node1.getQualifiedName();
      node2.isGetElem();
      Node node4 = Node.newNumber(815.464494186, (-1180), 1);
      node0.isName();
      Node node5 = Node.newString("Ym)$KI=");
      node1.isEquivalentToShallow(node5);
      node4.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      Node node1 = new Node(0, node0, node0, 56, 49);
      node0.siblings();
      node0.setWasEmptyNode(false);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.isFor();
      node1.isArrayLit();
      Node node3 = null;
      try {
        node3 = new Node(54, node1, node2, node0, node2, 48, 50);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      node0.isNoSideEffectsCall();
      node0.getSourceFileName();
      node0.isOnlyModifiesThisCall();
      node0.isScript();
      node0.getCharno();
      Node node1 = new Node(47);
      node1.isSwitch();
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1753);
      Node node0 = Node.newString("com.google.jaascript.rhino.jstype.InstanceObjectType", 1753, 0);
      node0.isParamList();
      Node node1 = new Node(4, node0, node0, node0);
      node0.isWhile();
      node0.isAssignAdd();
      node0.isQualifiedName();
      Node node2 = new Node(2748, 9, 51);
      node2.isQualifiedName();
      Node node3 = new Node((-1171), node2);
      node3.isCatch();
      node1.isRegExp();
      node3.isNumber();
      // Undeclared exception!
      try { 
        node3.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1171
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node((-2414), node0, 1183, 2);
      node0.isNot();
      Node node2 = node1.cloneNode();
      node2.isDefaultCase();
      node0.getChangeTime();
      node0.isUnscopedQualifiedName();
      Node.newNumber((double) 36);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newNumber((double) 111, 111, 111);
      Node node1 = new Node(125);
      Node node2 = new Node(40, node1);
      Node node3 = node2.clonePropsFrom(node0);
      node1.isCast();
      node3.getProp(53);
      Node node4 = new Node(53, node0, 38, 54);
      node1.isEquivalentTo(node4);
      node3.cloneNode();
      node2.getChangeTime();
      node1.isUnscopedQualifiedName();
      Node.newNumber(2679.85511996645);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = new Node(115, 115, 115);
      node0.isAnd();
      node0.setSourceEncodedPosition(115);
      node0.getStaticSourceFile();
      Node node1 = node0.cloneNode();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isCast();
      node0.isVarArgs();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = new Node(1307, 1307, 85);
      Node.newString(2, "$");
      node0.mayMutateGlobalStateOrThrow();
      Node.newString("$");
      node0.isFunction();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1307, 85, 1307);
      Node node1 = Node.newString(2, "$");
      Node node2 = new Node(4095, node0, node1, node0, node1, 40, 40);
      Node node3 = Node.newString("$");
      node2.getStaticSourceFile();
      node3.setStaticSourceFile((StaticSourceFile) null);
      node1.isEquivalentTo(node2, false, false, false);
      node1.setString(" is not a number node");
      node2.isNull();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = new Node(105, 262144, 105);
      node0.isAnd();
      node0.setSourceEncodedPosition(262144);
      node0.isAdd();
      NoType noType0 = mock(NoType.class, new ViolatedAssumptionAnswer());
      NoType noType1 = mock(NoType.class, new ViolatedAssumptionAnswer());
      NoType noType2 = mock(NoType.class, new ViolatedAssumptionAnswer());
      ImmutableList.of(noType0, noType0, noType0, noType0, noType1, noType1, noType1, noType2, noType1, noType0, noType0);
      node0.setWasEmptyNode(false);
      node0.isQualifiedName();
      Node node1 = new Node(2503, 51, 0);
      node1.isQualifiedName();
      node0.children();
      Node node2 = Node.newNumber((double) 55);
      Node node3 = new Node(35, (-828), 51);
      node3.srcref(node1);
      node2.isParamList();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> 64 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      immutableList0.iterator();
      Node node0 = Node.newString("Object#Key");
      node0.isWith();
      node0.isLabelName();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      Node node1 = new Node(4095);
      Node node2 = Node.newString("D;YO*Jj`b[w.spCBS=");
      Node node3 = new Node(52, node1, node2);
      node1.isThrow();
      node3.hasChildren();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      String string0 = "Ym)$KI=";
      Node node0 = Node.newString("Ym)$KI=", 10, 10);
      File file0 = MockFile.createTempFile("Ym)$KI=", "Ym)$KI=");
      MockFileWriter mockFileWriter0 = new MockFileWriter(file0, false);
      mockFileWriter0.close();
      try { 
        node0.appendStringTree(mockFileWriter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(54);
      Node node2 = new Node(31, 55, 35);
      node0.isAnd();
      node1.setSourceEncodedPosition((-3202));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node3 = node0.setJSDocInfo(jSDocInfo0);
      node3.isBlock();
      node2.isCast();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("com.google.common.collect.ImmutableMapValues", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = new Node(102, 1610612736, 612);
      node0.isAnd();
      node0.setSourceEncodedPosition(3518);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.copyInformationFrom(node0);
      node0.isBlock();
      node0.isCast();
      node0.isFalse();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-3838));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got INC
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newString(49, "duplicate child");
      node0.getJsDocBuilderForNode();
      node0.isThis();
      Node node1 = new Node(116, 42, 40);
      node0.checkTreeEqualsImpl(node1);
      node1.checkTreeEquals(node0);
      Node node2 = Node.newNumber(2094.30644783021);
      Node node3 = new Node(524288, node0, node2, 279, 46);
      Node node4 = node3.srcref(node0);
      node3.isOnlyModifiesArgumentsCall();
      Node node5 = Node.newNumber((double) 16, 4, 2910);
      node5.getStaticSourceFile();
      node0.cloneTree();
      node2.setStaticSourceFile((StaticSourceFile) null);
      Node node6 = null;
      try {
        node6 = new Node(49, node2, node1, node4, node1, 124, 43);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 262144, 262144);
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.isTypeOf();
      node0.checkTreeEqualsImpl(node0);
      node0.isDelProp();
      Node node2 = new Node(46, node0, node0, 769, (-1358));
      node0.siblings();
      InputId inputId0 = new InputId((String) null);
      node2.getInputId();
      node0.setInputId((InputId) null);
      node1.isFalse();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = Node.newNumber((-0.7227063387501712), 262144, (-1631));
      Node node1 = Node.newString("E");
      Node node2 = new Node(30, node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node1.detachFromParent();
      node2.isDelProp();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node2;
      nodeArray0[1] = node0;
      Node node3 = null;
      try {
        node3 = new Node(56, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = new Node((-2147), (-1663), 194);
      node0.isQuotedString();
      Node node1 = new Node(307, node0, 47, 57);
      Node node2 = Node.newString(51, "E");
      node2.mayMutateGlobalStateOrThrow();
      Node node3 = Node.newString("E");
      node3.isFunction();
      node3.isDo();
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      String string0 = "The new child node already has a parent.";
      Node node0 = Node.newString(115, "The new child node already has a parent.");
      node0.isString();
      node0.getProp(103);
      Node node1 = new Node(118, node0, 1213, 46);
      node1.isEquivalentTo(node0);
      Node node2 = new Node(4095);
      node2.isDefaultCase();
      node1.getChangeTime();
      node1.isUnscopedQualifiedName();
      Node node3 = Node.newNumber(857.648);
      node3.isDebugger();
      node1.isHook();
      node1.isArrayLit();
      node2.isBlock();
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(57);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 57
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newNumber((-0.7227063387501712), 262144, (-1631));
      Node node1 = Node.newString("E");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node2.isDelProp();
      node2.isQualifiedName();
      Node node3 = new Node(108, node1, node2, 31, 54);
      node3.siblings();
      node3.setWasEmptyNode(true);
      node1.toString(true, false, true);
      node1.getQualifiedName();
      node3.useSourceInfoIfMissingFromForTree(node2);
      node2.isDebugger();
      node2.isHook();
      node1.isArrayLit();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(57);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 57
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = Node.newNumber((double) 105);
      Node node1 = Node.newString(2, "first new child has existing parent");
      Node node2 = Node.newString(2451, "first new child has existing parent");
      Node node3 = new Node(4, node0, node1, node2, node1, 154, 1);
      node3.putIntProp(2, 77);
      node3.cloneNode();
      node0.isEquivalentToTyped(node1);
      // Undeclared exception!
      try { 
        node2.setDouble(40);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2451
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      Node node0 = new Node(115);
      Node node1 = Node.newNumber(111.0, (-521), 3638);
      node0.clonePropsFrom(node1);
      node1.getDouble();
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      node0.isNoSideEffectsCall();
      node0.getSourceFileName();
      node0.isOnlyModifiesThisCall();
      node0.isScript();
      node0.getCharno();
      Node node1 = new Node(47);
      node1.checkTreeEqualsImpl(node0);
      node1.copyInformationFromForTree(node0);
      node1.isSwitch();
      node1.getSourceOffset();
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = Node.newString(83, ":!!8mEqc0C5m", 83, 83);
      Node node1 = new Node(52, 134, 51);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.isTypeOf();
      node0.checkTreeEqualsImpl(node2);
      node2.isDelProp();
      Node node3 = new Node(12, node2, node0, 55, 57);
      node3.siblings();
      InputId inputId0 = new InputId((String) null);
      node0.getInputId();
      node3.setInputId((InputId) null);
      node0.getBooleanProp(36);
      Node.mergeLineCharNo(148, 3522);
      node1.isRegExp();
      node1.isNumber();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      jSTypeRegistry0.isForwardDeclaredType("uV#*@");
      immutableList0.iterator();
      Node node0 = Node.newString("Object#Key");
      node0.isWith();
      node0.isLabelName();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      node0.isGetElem();
      node0.siblings();
      Node node1 = Node.newNumber((double) 43, 53, 77);
      node1.isName();
      node1.isDo();
      node0.getProp(86);
      node0.putProp(16, (Object) null);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("lvnXy!Q5W?08tx/");
      node0.setWasEmptyNode(true);
      Node.newNumber(943.712281565);
      NoType noType0 = mock(NoType.class, new ViolatedAssumptionAnswer());
      ImmutableList<NoType> immutableList0 = ImmutableList.of(noType0, noType0, noType0, noType0, noType0, noType0, noType0, noType0, noType0, noType0, noType0);
      ImmutableList<NoType> immutableList1 = immutableList0.reverse();
      immutableList1.reverse();
      Node node1 = node0.cloneTree();
      node1.setWasEmptyNode(true);
      node0.isDec();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000006] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node((-2147483627), node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isCast();
      node0.isQualifiedName();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = node0.cloneNode();
      node3.isEquivalentToTyped(node2);
      // Undeclared exception!
      try { 
        node2.setDouble(37);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2147483627
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = new Node(751619276);
      node0.removeProp(751619276);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.setWasEmptyNode(true);
      node0.isVar();
      Node node1 = new Node(2268, 4095, 57);
      node0.isLabel();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      String string0 = null;
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage0((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(52);
      node0.isTrue();
      Node node2 = new Node(16, node1, 47, 2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node1.children();
      node2.isDec();
      node1.isLocalResultCall();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = Node.newString(105, ":!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      node0.children();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isSwitch();
      Node node2 = new Node(30, node1, node1, 0, 113);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      node0.setWasEmptyNode(false);
      node0.addSuppression("");
      node1.isCast();
      Node node3 = node2.copyInformationFrom(node1);
      node0.isHook();
      Node[] nodeArray0 = new Node[0];
      Node node4 = new Node(36, nodeArray0);
      node2.hasChild(node4);
      node4.hasOneChild();
      node0.isBreak();
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newString(83, ":!!8mEqc0C5m", 83, 83);
      Node node1 = new Node(83, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node0.isWith();
      node0.isVar();
      Node node2 = new Node(57, 46, 53);
      node0.isLabel();
      node2.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node0.isGetElem();
      Node node3 = Node.newNumber((double) 16, 5029, 31);
      node3.isName();
      node3.isDo();
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = Node.newString(83, ":!!8mEqc0C5m", 83, 83);
      Node node1 = new Node(83, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting(":!!8mEqc0C5m");
      node0.toStringTree();
      node1.hasMoreThanOneChild();
      node0.addChildToBack(node1);
      node1.isAssignAdd();
      node0.isQualifiedName();
      node0.setSourceFileForTesting("m1Kh%M");
      // Undeclared exception!
      node1.toStringTree();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = Node.newString(105, ":!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      node0.children();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isSwitch();
      Node node2 = new Node(30, node1, node1, 0, 113);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      node0.setWasEmptyNode(false);
      node0.addSuppression("");
      node1.isCast();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node0.isHook();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(36, nodeArray0);
      node2.hasChild(node3);
      node3.hasOneChild();
      node0.isBreak();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node0.setSourceFileForTesting("Ym)$KI=");
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      node0.isEquivalentTo(node1);
      node1.cloneNode();
      node1.isDefaultCase();
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      Node node0 = new Node(13, 50, 8202);
      node0.addSuppression("Number node not created with Node.newNumber");
      Node node1 = Node.newNumber((double) 50);
      node0.toString(true, true, true);
      node1.toString(false, true, false);
      Node node2 = new Node(33);
      // Undeclared exception!
      try { 
        node2.getQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      node0.isTry();
      node0.isWith();
      node0.isVar();
      Node node1 = new Node(56, 52, 37);
      node0.isLabel();
      node1.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node1.isGetElem();
      Node node2 = new Node(53, node1, 0, 35);
      node2.isName();
      // Undeclared exception!
      try { 
        node0.setString("com.google.javascript.rhino.Node$NodeMismatch");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newString(105, ":!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      node0.children();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isSetterDef();
      Node node2 = new Node(30, node1, node1, 0, 113);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      node0.setWasEmptyNode(false);
      node0.addSuppression("");
      node1.isCast();
      node0.isHook();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(36, nodeArray0);
      node2.hasChild(node3);
      node3.hasOneChild();
      node0.isBreak();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      ImmutableList.of();
      UnaryOperator.identity();
      Node node0 = new Node(478);
      node0.getSourceOffset();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = new Node((-2147), (-1663), 194);
      node0.isQuotedString();
      Node node1 = new Node(307, node0, 47, 57);
      Node node2 = Node.newString(51, "E");
      node2.mayMutateGlobalStateOrThrow();
      node0.removeChildren();
      Node node3 = Node.newString("E");
      node3.isFunction();
      node3.isDo();
      node0.useSourceInfoIfMissingFrom(node3);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("lvnXy!Q5W?08tx/");
      Node node1 = Node.newString("lvnXy!Q5W?08tx/", 64, 54);
      node1.isCast();
      node1.getProp(16);
      Node node2 = new Node(2, node1, node1, node0, node1, 4, 960);
      Node node3 = new Node(1247, node2, (-108), 31);
      node0.isEquivalentTo(node3);
      Node node4 = node0.cloneNode();
      node4.getChangeTime();
      // Undeclared exception!
      try { 
        node4.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newNumber((double) 111, 111, 111);
      Node node1 = new Node(125);
      node1.isLabel();
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      Node node0 = new Node(102, 1610612736, 102);
      node0.isAnd();
      node0.setSourceEncodedPosition(12);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.addChildrenToFront(node0);
      node0.useSourceInfoFrom(node0);
      node0.hasOneChild();
      Node node1 = null;
      try {
        node1 = new Node(15, node0, 43, 56);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      Node node0 = Node.newString("~g\">7^Zf`^YK7", 4667, (-2703));
      node0.putBooleanProp((-1083), false);
      node0.getNext();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node((-2147483627), node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isCast();
      node0.isQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch0.equals(node0);
      node0.getProp((-2119));
      Node node3 = new Node(51, node1, 2, 8);
      node0.isEquivalentTo(node3);
      node0.cloneNode();
      node1.checkTreeEqualsImpl(node2);
      node1.isEquivalentTo(node0, false, true, false);
      node1.wasEmptyNode();
      try { 
        node3.setString("jzu?_FB>4]9dQl");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // IN 2 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = Node.newNumber((-0.7227063387501712), 262144, (-1631));
      Node node1 = Node.newString("E");
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node2.isDelProp();
      node2.isQualifiedName();
      Node node3 = new Node(108, node1, node2, 31, 54);
      node3.siblings();
      node3.setWasEmptyNode(true);
      node3.srcrefTree(node0);
      node1.toString(true, false, true);
      node1.getQualifiedName();
      node2.isGetElem();
      Node.newNumber(815.464494186, (-1180), 1);
      node0.isName();
      Node node4 = Node.newString("Ym)$KI=");
      node1.isEquivalentToShallow(node4);
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = new Node((-1663), (-1663), 29);
      Node node1 = new Node(31, node0);
      node1.isTry();
      Node node2 = Node.newNumber(46.0, (-3390), 48);
      node2.getSideEffectFlags();
      node2.isEquivalentTo(node0, false, false, true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.newString("N6*c");
      node2.isObjectLit();
      node0.detachFromParent();
      Node.newString((-1191), "N6*c", 12, 0);
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting(":!!8mEqc0C5m");
      node1.hasMoreThanOneChild();
      node0.addChildToBack(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(32);
      node_SideEffectFlags0.setThrows();
      node1.children();
      node1.isDec();
      node0.children();
      Node node2 = Node.newNumber((double) 52);
      Node node3 = new Node(42, 46, 0);
      node0.isParamList();
      node2.getDouble();
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      Node node1 = Node.newString("", 47, 48);
      node1.isString();
      node1.isTrue();
      Node node2 = new Node(53, node0, 30, (-2987));
      Node node3 = node0.clonePropsFrom(node2);
      node3.isOnlyModifiesArgumentsCall();
      Node node4 = null;
      try {
        node4 = new Node(1871, node0, (-1), 696);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = new Node(43);
      node0.removeProp(43);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("lvnXy!Q5W?08tx/");
      node0.setWasEmptyNode(true);
      node0.isAnd();
      node0.setSourceEncodedPosition(31);
      Node node1 = new Node(152);
      node1.setWasEmptyNode(true);
      node1.addSuppression("tVud7J");
      node1.isCast();
      node1.isHook();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      Node node2 = new Node(36, node0, node0, node0, (-1963), (-1959));
      nodeArray0[1] = node2;
      Node.newNumber((double) 57, 48, (-2576));
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      nodeArray0[4] = node1;
      Node node3 = Node.newString(31, "tVud7J");
      node2.getLineno();
      node2.hasChild(node3);
      node0.hasOneChild();
      node1.isBreak();
      node0.setLength(30);
      node3.isExprResult();
      node1.getProp(77);
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      node0.getJsDocBuilderForNode();
      node0.isThis();
      node0.setJSDocInfo((JSDocInfo) null);
      node0.isBlock();
      Node node1 = new Node((-2119), 12, 16);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Wm7vXl>sQVX^}Q?d");
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        node1.appendStringTree(outputStreamWriter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2119
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting(":!!8mEqc0C5m");
      node1.isDec();
      node0.addChildToBack(node1);
      node1.addSuppression("");
      Node node2 = node1.getAncestor(2);
      Node node3 = null;
      try {
        node3 = new Node(38, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = Node.newString(":!!8mEqc0C5m", 34, 47);
      node0.isString();
      Node node1 = new Node(16);
      node0.isTrue();
      Node node2 = new Node(2823, node1, (-1426), 2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node2.children();
      node2.isDec();
      node1.isLocalResultCall();
      node2.isInc();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = new Node((-1663), (-1663), 29);
      Node node1 = new Node(52, node0, node0, node0, 36, 43);
      node0.setCharno(113);
      node1.getProp(0);
      node0.addChildrenToFront(node1);
      node0.isRegExp();
      node0.isQuotedString();
      node1.isQualifiedName();
      node0.isObjectLit();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = new Node((-2147), (-1663), 194);
      node0.isQuotedString();
      Node node1 = new Node(307, node0, 47, 57);
      node1.putIntProp(1139, 1);
      node0.isWhile();
      node1.isAssignAdd();
      node0.isQualifiedName();
      Node node2 = new Node(561, 53, (-862));
      node1.isQualifiedName();
      node1.getLength();
      node0.isCall();
      node0.isHook();
      node2.getChildAtIndex((-2979));
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isTypeOf();
      node0.getProp((-2119));
      Node node2 = new Node(51, node0, 2, 8);
      node0.isEquivalentTo(node2);
      Node node3 = node0.cloneNode();
      node3.getChangeTime();
      node2.isUnscopedQualifiedName();
      Node node4 = Node.newNumber((double) 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isGetProp();
      node3.isLabel();
      node4.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1631), (-3243));
      Node node1 = Node.newString(43, "E");
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(56, node1, node0, 15, 29);
      node0.isEquivalentToTyped(node2);
      node3.getStaticSourceFile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node2.isHook();
      Node node4 = node2.detachFromParent();
      node4.setCharno(57);
      node2.getInputId();
      node1.wasEmptyNode();
      node1.setChangeTime((-3870));
      node4.getLength();
      node0.isCall();
      node0.setDouble(50);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node4, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newString(83, ":!!8mEqc0C5m", 83, 83);
      Node node1 = new Node(83, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting(":!!8mEqc0C5m");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node1.mayMutateArguments();
      node_FileLevelJsDocBuilder0.append("String node not created with Node.newString");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node_FileLevelJsDocBuilder0.append(" : ");
      node_FileLevelJsDocBuilder0.append("lvnXy!Q5W?08tx/");
      node0.isCase();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 34, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.setLength(1);
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting(":!!8mEqc0C5m");
      node0.toStringTree();
      node1.hasMoreThanOneChild();
      node0.addChildToBack(node1);
      node1.siblings();
      node1.isStringKey();
      node0.hasMoreThanOneChild();
      node1.setWasEmptyNode(false);
      node0.isDec();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> 55 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000006] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      Node node0 = new Node(114);
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      node0.setSourceFileForTesting(":!!8mEqc0C5m");
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      EnumType enumType0 = jSTypeRegistry1.createEnumType("", node0, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.toMaybeEnumElementType();
      node0.isQuotedString();
      Node node1 = new Node(52);
      Node node2 = new Node(1, node0, node0, 1, 4);
      node2.isComma();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = Node.newString(49, "duplicate child");
      node0.getJsDocBuilderForNode();
      node0.isThis();
      Node node1 = new Node(2, node0, node0, node0);
      node0.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node node2 = Node.newString(1893, "duplicate child", 38, 52);
      Node.newNumber((double) 39, 1827, 57);
      node2.isOr();
      Node.newNumber((double) 32);
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseStringType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0);
      jSType0.isString();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      Node node1 = new Node(647);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = new Node(13);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isTypeOf();
      node0.getProp((-2119));
      Node node2 = new Node(51, node0, 2, 8);
      node0.isEquivalentTo(node2);
      Node node3 = node0.cloneNode();
      node3.getChangeTime();
      node2.isUnscopedQualifiedName();
      Node node4 = Node.newNumber((double) 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isGetProp();
      node3.isLabel();
      node4.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      Node node1 = Node.newString("", 47, 48);
      Node node2 = node0.cloneNode();
      node2.isDefaultCase();
      node0.isUnscopedQualifiedName();
      Node.newNumber((-909.5783278917489));
      Node node3 = new Node(115, 250, 8);
      node3.getIntProp(1);
      node3.setSourceFileForTesting("qd]'9;Vfvjx");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      node1.hasOneChild();
      node3.getJSType();
      node1.isContinue();
      node3.getAncestors();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.spliterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      node_AncestorIterable1.iterator();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newString(116, ":!!8mEqc0C5m", 46, 116);
      Node node1 = new Node(116, node0, 55, 16);
      node1.isDec();
      node0.addChildToBack(node1);
      node1.addSuppression("");
      Node node2 = node1.getAncestor(2);
      node1.getNext();
      node0.mayMutateGlobalStateOrThrow();
      node2.isComma();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting(":!!8mEqc0C5m");
      node1.isDec();
      node0.addChildToBack(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(32);
      node_SideEffectFlags0.setThrows();
      node1.children();
      node1.isDec();
      node0.children();
      Node node3 = Node.newNumber((double) 52);
      Node node4 = new Node(42, 46, 0);
      node0.isParamList();
      node3.getDouble();
      node4.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newNumber(0.5, (-1631), (-3243));
      Node node1 = Node.newString(37, "E");
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(52, node0, node2, 55, 29);
      node1.isCall();
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node1.isHook();
      Node node4 = node2.detachFromParent();
      node4.setCharno(30);
      node3.getInputId();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newString(83, ":!!8mEqc0C5m", 83, 83);
      Node node1 = new Node(83, node0, 55, 16);
      node0.isWith();
      node0.isVar();
      node0.setSourceFileForTesting(":!!8mEqc0C5m");
      node1.toStringTree();
      node0.isEquivalentTo(node1);
      Node node2 = node1.cloneNode();
      node1.isDefaultCase();
      node2.isUnscopedQualifiedName();
      Node.newNumber((double) 39);
      Node node3 = new Node(36, 996, 35);
      node0.isParamList();
      Node.newString("d(`H>+n8bD&@hgRj0K");
      node2.isFunction();
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newNumber((double) 512);
      Node node1 = new Node(512, node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isCast();
      node2.isQualifiedName();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node_NodeMismatch0.equals(jSDocInfo0);
      node2.getProp(1530);
      Node node3 = new Node(54, node1, 0, 30);
      node3.isEquivalentTo(node0);
      node0.cloneNode();
      node2.checkTreeEqualsImpl(node0);
      node0.isDec();
      node0.getDouble();
      node0.isDo();
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      int int0 = (-3601);
      Node node0 = new Node((-3601));
      node0.getStaticSourceFile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      String string0 = "m)}g~+6QNlu+_";
      node0.setSourceFileForTesting("m)}g~+6QNlu+_");
      node0.isDec();
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[5];
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) templateType0, jSTypeArray0);
      jSTypeArray0[0] = (JSType) functionType0;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      jSTypeArray0[1] = jSType0;
      ObjectType objectType0 = ObjectType.cast(jSTypeArray0[1]);
      jSTypeArray0[2] = (JSType) objectType0;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<TemplateType> immutableList0 = ImmutableList.of(templateType0, templateType0, templateType0, templateType0, templateType0);
      ImmutableList<JSType> immutableList1 = ImmutableList.of(jSTypeArray0[1], jSTypeArray0[0], (JSType) functionType0);
      TemplateTypeMap templateTypeMap0 = jSTypeRegistry1.createTemplateTypeMap(immutableList0, immutableList1);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry1, templateTypeMap0);
      JSType jSType1 = templateTypeMapReplacer0.caseNullType();
      jSTypeArray0[3] = jSType1;
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Unknown class name", (Node) null, jSTypeArray0[1]);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      EnumElementType enumElementType1 = enumElementType0.toMaybeEnumElementType();
      jSTypeArray0[4] = (JSType) enumElementType1;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      String string0 = "The new child node already has a parent.";
      Node node0 = new Node(21, 115, 21);
      Node node1 = new Node(4095, node0, 29, 4);
      node0.putIntProp(4095, 55);
      node1.isWhile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.isNoSideEffectsCall();
      node0.isArrayLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node2 = null;
      try {
        node2 = new Node(4095, node0, node1, node1, node0, 29, 147);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = Node.newString("originalname", 194, 194);
      Node node1 = new Node(258048);
      node0.isTrue();
      Node node2 = new Node(42, node0);
      node2.addChildAfter(node1, node0);
      node1.children();
      node0.isLocalResultCall();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("lvnXy!Q5W?08tx/");
      node0.setWasEmptyNode(true);
      node0.isAnd();
      node0.setSourceEncodedPosition(31);
      Node node1 = new Node(152);
      node1.setWasEmptyNode(true);
      node1.addSuppression("tVud7J");
      node1.isCast();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      Node node2 = new Node(38, (-963), 155);
      // Undeclared exception!
      try { 
        node0.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 0 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000006] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = Node.newString(63, ":!8mEqc0C5m", 46, 63);
      Node node1 = new Node(63, node0, 55, 16);
      node0.children();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = new Node(30, node1, node1, 0, 113);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      node0.setWasEmptyNode(false);
      node0.addSuppression("");
      node1.isCast();
      node0.isHook();
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(36, nodeArray0);
      node2.hasChild(node3);
      node3.hasOneChild();
      node0.isBreak();
      node1.isExprResult();
      node3.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = new Node(112, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newNumber((double) 39, (-951), 112);
      Node node2 = node0.copyInformationFrom(node1);
      node0.isSyntheticBlock();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      node0.isEquivalentTo(node3, true, false, false);
      node2.isDebugger();
      node1.isHook();
      node0.isArrayLit();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(31);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 31
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newString(105, ":!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      node0.children();
      Node node2 = new Node((-2777), (-2848), 4);
      node2.isNoSideEffectsCall();
      node0.isEmpty();
      node2.isFor();
      node2.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node3 = Node.newNumber(2324.4, 48, 47);
      Node node4 = node1.copyInformationFrom(node2);
      node1.isSyntheticBlock();
      node2.useSourceInfoIfMissingFromForTree(node4);
      node3.isDebugger();
      node4.isHook();
      Node node5 = new Node(31, (-4778), 0);
      node5.isArrayLit();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp((-1385));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -1385
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 262144, 262144);
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.isTypeOf();
      node0.isDelProp();
      Node node2 = new Node(46, node0, node0, 769, (-1358));
      node0.siblings();
      node2.getInputId();
      node0.setInputId((InputId) null);
      node1.getBooleanProp(10);
      node0.setDouble(1.0);
      // Undeclared exception!
      try { 
        node1.addChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      Node.newNumber((double) 39);
      node0.toString(true, true, true);
      node0.toString(true, true, true);
      Node node1 = new Node(34);
      // Undeclared exception!
      try { 
        node0.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = null;
      node0.isLabel();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isQualifiedName();
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = new Node(102, 1610612736, 102);
      node0.isAnd();
      node0.setSourceEncodedPosition(12);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.addChildrenToFront(node0);
      Node node1 = node0.useSourceInfoFrom(node0);
      node1.useSourceInfoIfMissingFrom(node0);
      node0.hasOneChild();
      Node node2 = null;
      try {
        node2 = new Node(15, node0, 43, 56);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node0.setSourceFileForTesting("K|M");
      node0.toStringTree();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = new Node(112, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newNumber((double) 39, (-951), 112);
      Node node2 = node0.copyInformationFrom(node1);
      node0.isSyntheticBlock();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("Named type with empty name component");
      node_FileLevelJsDocBuilder0.append("Named type with empty name component");
      node3.isCase();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(1314);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = new Node(13);
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newNumber((double) 2, 774, 47);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isSyntheticBlock();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isEquivalentTo(node0, false, false, true);
      node0.isDebugger();
      node0.isHook();
      node3.isArrayLit();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(37);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 37
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 34, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.setLength(1);
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting(":!!8mEqc0C5m");
      node0.toStringTree();
      node1.hasMoreThanOneChild();
      node0.addChildToBack(node1);
      node1.siblings();
      Node node2 = new Node(0);
      node1.getQualifiedName();
      Node node3 = null;
      try {
        node3 = new Node(77, node1, node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newNumber((double) 111, 111, 111);
      Node node1 = new Node(125);
      Node node2 = new Node(40, node1);
      node1.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node2.checkTreeEqualsImpl(node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.detachFromParent();
      node1.isDelProp();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got STRING
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = new Node(112, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newNumber((double) 39, (-951), 112);
      Node node2 = node0.copyInformationFrom(node1);
      node0.isSyntheticBlock();
      Node node3 = node0.useSourceInfoIfMissingFromForTree(node2);
      node0.isEquivalentTo(node3, false, false, false);
      node2.isDebugger();
      node1.isHook();
      node0.isArrayLit();
      node3.addSuppression("F)V5,zqX]_DrO");
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(31);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 31
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newNumber((-0.7227063387501712), 262118, (-1631));
      Node node1 = Node.newString("E");
      Node node2 = new Node(30, node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node1.detachFromParent();
      node2.isDelProp();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node2;
      node2.isEquivalentTo(node0);
      Node node3 = new Node(30, node1);
      node3.cloneNode();
      node2.isDefaultCase();
      node2.isUnscopedQualifiedName();
      Node.newNumber((double) 29);
      Node node4 = new Node(51, 904, 48);
      Node node5 = Node.newString("E");
      node5.isFunction();
      Node node6 = new Node(39, 42, 43);
      node6.isHook();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newNumber((-0.7227063387501712), 262144, (-1631));
      Node node1 = Node.newNumber((double) 48);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node2.isDelProp();
      node2.isQualifiedName();
      Node node3 = new Node(108, node1, node2, 31, 54);
      node3.siblings();
      node3.setWasEmptyNode(true);
      node1.toString(false, true, true);
      node1.getQualifiedName();
      node2.isGetElem();
      Node.newNumber(1280.4786883986512, 46, (-622));
      node0.isInc();
      Node node4 = Node.newString("EVAL_ERROR_FUNCTION_TYPE");
      node3.isEquivalentToShallow(node4);
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node((-2147483627), node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isCast();
      node0.isQualifiedName();
      node2.setSourceFileForTesting((String) null);
      node0.toStringTree();
      node2.isEquivalentTo(node1);
      Node node3 = node1.cloneNode();
      node1.isDefaultCase();
      node3.isUnscopedQualifiedName();
      Node.newNumber((double) (-2147483627));
      Node node4 = new Node((-863), 57, 4120);
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = Node.newString(46, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(32, node0, node0, node0, node0, 123, 2);
      node1.cloneTree();
      node1.isDec();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SHNE :!!8mEqc0C5m 46 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      Node node1 = new Node(47, node0, 4, 2);
      node1.isWith();
      Node node2 = new Node(12, 49, 1113);
      node2.wasEmptyNode();
      node1.isScript();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node1.removeChildren();
      node1.siblings();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node.extractLineno(5680);
      Node node0 = new Node(5680, 5680, 98);
      node0.isIf();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(5680);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 5680
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = new Node((-2145), (-1663), 194);
      Node node1 = new Node(307, node0, 47, 57);
      node1.removeChildren();
      node1.removeProp(53);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      Node node2 = new Node(93, 15, 1601);
      node2.isDec();
      node0.isIf();
      node2.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      Node node1 = Node.newString("", 47, 48);
      Node node2 = node0.cloneNode();
      node2.isDefaultCase();
      node0.isUnscopedQualifiedName();
      Node node3 = Node.newNumber((double) 52);
      node0.getIntProp(1);
      node3.setSourceFileForTesting("qZ]39;Ifvjx");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      node0.addSuppression((String) null);
      node1.isCast();
      node2.isHook();
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node3;
      nodeArray0[4] = node1;
      nodeArray0[5] = node0;
      nodeArray0[6] = node3;
      nodeArray0[7] = node0;
      Node node4 = Node.newNumber((-3006.9));
      nodeArray0[8] = node4;
      Node node5 = null;
      try {
        node5 = new Node(132, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 34, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node1.setSourceFileForTesting(":!!8mEqc0C5m");
      node0.toStringTree();
      node0.toStringTree();
      node1.isEquivalentTo(node0);
      Node node2 = node1.cloneNode();
      node1.isDefaultCase();
      node2.isUnscopedQualifiedName();
      Node.newNumber((double) 8);
      Node node3 = new Node(46, 1, 12);
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1627), (-3243));
      Node node1 = Node.newString(43, "E");
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(56, node1, node0, 15, 29);
      node3.isCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node4 = node2.setJSDocInfo(jSDocInfo0);
      node4.isBlock();
      node4.isScript();
      node4.isFalse();
      // Undeclared exception!
      try { 
        node3.setSideEffectFlags(53);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 56
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(52);
      node0.isTrue();
      node0.getJsDocBuilderForNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isQualifiedName();
      node0.useSourceInfoFromForTree(node1);
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString((-548), "VXCC:5&;}}<Q2I)(I~}");
      node0.getJsDocBuilderForNode();
      node0.isThis();
      Node node1 = new Node(57, node0, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      ImmutableList<JSType> immutableList1 = immutableList0.asList();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      node2.clonePropsFrom(node0);
      Node node3 = node0.useSourceInfoFrom(node2);
      node0.isNoSideEffectsCall();
      node0.isArrayLit();
      // Undeclared exception!
      try { 
        node3.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      InputId inputId0 = new InputId(":!!8mEqc0C5m");
      node0.setInputId(inputId0);
      node_SideEffectFlags0.setMutatesThis();
      Node.newString("~g\">7^Zf`^YK7", 32, 2);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION :!!8mEqc0C5m 46 [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-1.0), (-1627), (-3243));
      Node node1 = Node.newString(43, "E");
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(56, node1, node0, 15, 29);
      node3.isCall();
      node3.getStaticSourceFile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node2.isHook();
      Node node4 = node2.detachFromParent();
      node4.setCharno(57);
      node3.isInstanceOf();
      node3.isScript();
      node0.getParent();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newString(105, ":!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      node0.children();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isSetterDef();
      Node node2 = new Node(30, node1, node1, 0, 113);
      PriorityQueue<Node> priorityQueue0 = new PriorityQueue<Node>();
      node0.setWasEmptyNode(false);
      node0.addSuppression("");
      node1.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(870);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node2.setSideEffectFlags(node_SideEffectFlags4);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION :!8mEqc0C5m 46 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000006] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1627), (-3243));
      node0.isAnd();
      node0.setSourceEncodedPosition((-2896));
      Node node1 = Node.newString((-2921), "Number node not created with Node.newNumber", 2144, 50);
      node1.isAdd();
      node1.isCast();
      node1.isNot();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(15);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2921
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = Node.newString(4095, "E");
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = new Node(38, node2, node0, node2, 1, 11);
      Node node4 = null;
      try {
        node4 = new Node(8, node0, node3, 2464, 64);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node((-2147483627), node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isCast();
      node0.isQualifiedName();
      node2.setSourceFileForTesting((String) null);
      node0.toStringTree();
      node2.isEquivalentTo(node1);
      Node node3 = node1.cloneNode();
      node1.isDefaultCase();
      node3.isUnscopedQualifiedName();
      Node node4 = Node.newNumber((double) (-2147483627));
      node4.toString(false, false, false);
      Node node5 = new Node(56, (-339), 12);
      node5.isQualifiedName();
      Node node6 = new Node(31, node3);
      node4.isCatch();
      Node node7 = new Node(81, node2, node4, node2, 4095, 26);
      node7.isReturn();
      // Undeclared exception!
      try { 
        node2.clonePropsFrom(node5);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newString(49, "duplicate child");
      node0.isReturn();
      Node node1 = new Node(2, node0, node0, node0, 4095, 4);
      Node node2 = new Node(57);
      Node node3 = new Node(40, node1, node2);
      Node node4 = node1.useSourceInfoFrom(node3);
      node0.isAssignAdd();
      node3.isArrayLit();
      node3.removeChildAfter(node4);
      node0.addChildToBack(node2);
      node1.isCase();
      node3.getLastChild();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = new Node((-259), (-259), 13);
      Node node1 = new Node(32, node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isCast();
      node0.isQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch0.equals(node0);
      node0.getProp((-2119));
      node0.isEquivalentTo(node1);
      Node node3 = node0.cloneNode();
      node1.checkTreeEqualsImpl(node2);
      node3.isDec();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -259
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = Node.newNumber((-0.7227063387501712), 262144, (-1631));
      Node node1 = Node.newString("E");
      node1.isTypeOf();
      node1.isFor();
      node1.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = Node.newNumber((double) 1, 1580, (-2105));
      Node node3 = node1.copyInformationFrom(node2);
      Node node4 = new Node(4, node0, node1, node1);
      node4.isSyntheticBlock();
      Node node5 = node4.useSourceInfoIfMissingFromForTree(node2);
      node4.isEquivalentTo(node5, false, false, false);
      node5.isDebugger();
      node1.isHook();
      node3.isArrayLit();
      Node node6 = Node.newString("E", 12, 49);
      // Undeclared exception!
      try { 
        node6.getExistingIntProp(57);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 57
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = new Node(13);
      node0.addSuppression("Number node not created with Node.newNumber");
      Node node1 = Node.newNumber((double) 50);
      node0.toString(true, true, true);
      node0.getAncestors();
      node1.toString(true, true, false);
      Node node2 = new Node(17);
      node2.getQualifiedName();
      node2.isGetElem();
      Node.newNumber(2340.46635756, 15, 32);
      node0.isNE();
      node1.isNot();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(48);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NE
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      InputId inputId0 = new InputId(":!!8mEqc0C5m");
      node0.isQualifiedName();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.checkTreeEqualsImpl(node1);
      node0.isCall();
      node1.isExprResult();
      node2.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node((-2147483627), node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node2.setSourceEncodedPositionForTree(32);
      node0.isCast();
      node0.isQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch0.equals(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("D3A$j|(KOk");
      node0.getProp(4);
      node_FileLevelJsDocBuilder0.append("_<8j");
      node1.isCase();
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = Node.newString("The new child node already has a parent.", 115, 115);
      node0.isString();
      Node node1 = new Node(52);
      node1.isOnlyModifiesThisCall();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("The new child node already has a parent.");
      node0.getProp(0);
      node1.isEquivalentTo(node0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      node1.getAncestors();
      Node node2 = new Node(4095, nodeArray0, 1, 262144);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      InputId inputId0 = new InputId(":!!8mEqc0C5m");
      node0.setInputId(inputId0);
      node_SideEffectFlags0.setMutatesThis();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isDec();
      node0.isDo();
      node1.getNext();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = new Node((-2867));
      node0.addSuppression("Number node not created with Node.newNumber");
      Node node1 = Node.newNumber(1.0);
      Node node2 = new Node(105, node0, node1, 1948, 978);
      node2.toString(true, true, true);
      node2.getAncestors();
      // Undeclared exception!
      try { 
        node0.toString(true, true, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2867
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newString(100, "");
      node0.isReturn();
      Node node1 = new Node(4152, 57, 36);
      Node node2 = new Node(8, node1, node1, node0, 0, 289);
      Node node3 = new Node(0);
      Node node4 = new Node(40, node2, node3);
      node2.useSourceInfoFrom(node0);
      node3.isAssignAdd();
      node4.isArrayLit();
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      Node.newString("", 47, 48);
      Node node1 = node0.cloneNode();
      node1.isDefaultCase();
      Node node2 = Node.newString(31, "", 77, 4095);
      Node node3 = new Node(2, node0, 55, 12);
      node2.isDec();
      node0.addChildToBack(node1);
      node3.addSuppression("Uiv?");
      Node node4 = node3.getAncestor(0);
      node4.isLocalResultCall();
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("lvnXy!Q5W?08tx/");
      node0.setWasEmptyNode(true);
      Node node1 = new Node(152);
      node1.setWasEmptyNode(true);
      node1.addSuppression("tVud7J");
      node1.isScript();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      Node node2 = new Node(38, (-963), 155);
      // Undeclared exception!
      try { 
        node0.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000006] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = Node.newString(43, "com.goog.common.base.CharMatcher$Fastatcher");
      node1.putIntProp(56, 50);
      node1.isFromExterns();
      node0.cloneNode();
      node1.setVarArgs(true);
      node1.isEquivalentToTyped(node1);
      try { 
        node1.setDouble(43);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FALSE com.goog.common.base.CharMatcher$Fastatcher [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000004] [change_time: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseBooleanType();
      jSTypeArray0[0] = jSType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = Node.newNumber((double) 46);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      int int0 = 51;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      int int1 = 122;
      JSType jSType0 = null;
      vector0.add((JSType) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.useSourceInfoFromForTree(node1);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = Node.newNumber((-0.7227063387501712), 262144, (-1594));
      Node node1 = new Node(30, node0);
      node1.isTypeOf();
      node0.checkTreeTypeAwareEqualsImpl(node0);
      node0.detachFromParent();
      node1.isDelProp();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesArguments();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      node1.isDec();
      node0.addChildToBack(node1);
      node1.addSuppression("");
      node0.isHook();
      node0.getChangeTime();
      Node node2 = node0.getAncestor(54);
      node2.setType(4095);
      node1.getNext();
      node2.isContinue();
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node0.setSourceFileForTesting("Ym)$KI=");
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      node0.isEquivalentTo(node1);
      node1.setLength(110);
      Node node2 = Node.newString("Ym)$KI=");
      node1.isFunction();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      Node.AncestorIterable node_AncestorIterable1 = new Node.AncestorIterable(node0);
      node2.addChildToBack(node1);
      node1.isScript();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append((CharSequence) "Ym)$KI=");
      node0.appendStringTree(charArrayWriter1);
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node((-2147483627), node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isCast();
      node0.isQualifiedName();
      node0.isLocalResultCall();
      node2.setSourceFileForTesting((String) null);
      node0.toStringTree();
      node2.isEquivalentTo(node1);
      Node node3 = node1.cloneNode();
      node1.isDefaultCase();
      node3.isUnscopedQualifiedName();
      node0.useSourceInfoFromForTree(node3);
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      node0.setWasEmptyNode(true);
      Node node1 = new Node(152);
      node1.setWasEmptyNode(true);
      node1.addSuppression("tVud7J");
      node1.isCast();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      Node node2 = new Node(36, node0, node1);
      node2.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node2.isGetElem();
      node0.isObjectLit();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node((-2147483627), node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isCast();
      node0.isQualifiedName();
      node2.setSourceFileForTesting((String) null);
      node2.isEquivalentTo(node1);
      Node node3 = new Node(54, node2);
      Node node4 = new Node(37, node3, 4049, 524288);
      node4.isEmpty();
      node4.removeProp((-1));
      node4.getQualifiedName();
      node4.getInputId();
      node1.getSourceOffset();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 1
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      Node node1 = new Node(1, node0, node0, node0, 52, 16);
      Node node2 = new Node(26);
      Node node3 = new Node(388, node2, node2);
      Node node4 = node0.useSourceInfoFrom(node1);
      node1.isAssignAdd();
      node1.isInstanceOf();
      node1.isBreak();
      node3.isName();
      node4.isNull();
      node4.isLabel();
      node1.isReturn();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      Node node1 = Node.newNumber((double) 8, 31, (-494));
      Node node2 = new Node(115, node1);
      Node node3 = new Node(1, 54, (-1893));
      node2.isOnlyModifiesThisCall();
      Node node4 = new Node(1, node3, node2, node2, (-536870912), (-1485));
      // Undeclared exception!
      try { 
        node2.getChildBefore(node4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      node0.isQuotedString();
      node0.isWhile();
      node0.isAssignAdd();
      Node node1 = new Node(53, node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.putBooleanProp(46, false);
      node1.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":!!8mEqc0C5m");
      Node node0 = Node.newString(83, ":!!8mEqc0C5m", 83, 83);
      Node node1 = new Node(4095, 42, 16);
      node1.isSyntheticBlock();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node(50, node0, node1);
      node2.hasOneChild();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getInputId();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(115, 38, 47);
      node0.copyInformationFrom(node1);
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node0.setSourceFileForTesting("K|M");
      node0.toStringTree();
      node0.isContinue();
      node0.isReturn();
      node0.isQualifiedName();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node0.setSourceFileForTesting("Ym)$KI=");
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      Node node2 = Node.newNumber((-705.808116259023));
      node1.useSourceInfoIfMissingFrom(node2);
      node0.isNoSideEffectsCall();
      node0.getIntProp(48);
      node1.isDo();
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newString(103, "<EB&TZcd9", 113, 1099);
      Node node1 = Node.newString(103, "<EB&TZcd9", 113, 1099);
      Node node2 = new Node(53, node0, node0, node1, node0, 1048576, 12);
      node2.cloneTree();
      node2.isDec();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // DEC <EB&TZcd9 113 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString(105, "`t>1[n/a.FT");
      node0.isReturn();
      Node node1 = new Node(37, node0, node0, node0, (-1947), (-4094));
      Node node2 = new Node(38);
      Node node3 = new Node(100, node2, node2);
      Node node4 = node1.useSourceInfoFrom(node0);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node2;
      nodeArray0[1] = node3;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node4;
      nodeArray0[6] = node2;
      nodeArray0[7] = node3;
      Node node5 = null;
      try {
        node5 = new Node(39, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = new Node((-2145), (-1663), 194);
      Node node1 = new Node(307, node0, 47, 57);
      node1.putIntProp(1139, 1);
      node0.isWhile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isNoSideEffectsCall();
      node0.hasChildren();
      node1.getSourceFileName();
      node0.isEmpty();
      node0.isDec();
      node0.srcref(node1);
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newString(49, ":!!8mEqc0C5m", 46, 49);
      Node node1 = new Node(49, node0, 38, 105);
      InputId inputId0 = new InputId("}kPf");
      node0.isQualifiedName();
      node1.useSourceInfoFromForTree(node0);
      node1.checkTreeEqualsImpl(node0);
      node1.isCall();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = new Node((-1233));
      Node node1 = node0.setJSDocInfo((JSDocInfo) null);
      node1.getLength();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(124);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 124
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(105, node0, 55, 16);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      InputId inputId0 = new InputId(":!!8mEqc0C5m");
      inputId0.toString();
      node0.setInputId(inputId0);
      node_SideEffectFlags0.setMutatesThis();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isDec();
      node0.isIf();
      node1.isSwitch();
      node1.getLastSibling();
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newString(1333, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ", 31, 13);
      Node node1 = new Node(13, node0, (-202), 47);
      node0.isWith();
      node0.isVar();
      Node node2 = new Node(751619276, 49, 1479);
      Node node3 = null;
      try {
        node3 = new Node(52, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      Node node1 = Node.newString("", 47, 48);
      Node node2 = node0.cloneNode();
      node2.isDefaultCase();
      node0.isUnscopedQualifiedName();
      Node node3 = Node.newNumber((double) 52);
      node3.setSourceFileForTesting("qZ]39;Ifvjx");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("");
      node0.addSuppression((String) null);
      node1.isCast();
      node2.isHook();
      node3.isCast();
      node1.isDec();
      Node.newString("~g\">7^Zf`^YK7", 48, 54);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING  47 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mE:rqc0C5m", 34, 105);
      Node node1 = new Node(105, node0, 55, 16);
      node1.isReturn();
      Node node2 = new Node(39, node1, node1, node1, 1, 2218);
      Node node3 = new Node(38);
      Node node4 = new Node((-1463), node3, node2);
      node3.isEquivalentTo(node4);
      Node node5 = node4.useSourceInfoFrom(node0);
      node5.isAssignAdd();
      node1.isArrayLit();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = new Node(98, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newNumber((double) 39, (-951), 112);
      node0.copyInformationFrom(node1);
      node0.isSyntheticBlock();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = new Node(13);
      node0.addSuppression("Number node not created with Node.newNumber");
      Node node1 = Node.newNumber((double) 50);
      node0.toString(true, true, true);
      node0.isFor();
      node1.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = Node.newNumber((double) 4095, 2815, 77);
      Node node3 = node0.copyInformationFrom(node2);
      node3.isSyntheticBlock();
      node0.useSourceInfoIfMissingFromForTree(node3);
      node0.isDebugger();
      node1.isOnlyModifiesThisCall();
      node0.isArrayLit();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(153);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 153
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = new Node(130, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newNumber((double) 39, (-951), 112);
      Node node2 = node0.copyInformationFrom(node1);
      node0.isSyntheticBlock();
      node0.useSourceInfoIfMissingFromForTree(node2);
      node2.isDebugger();
      node0.isOnlyModifiesThisCall();
      node0.isArrayLit();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(31);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 31
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node0 = Node.newString("Object#Key");
      node0.isWith();
      UnaryOperator<JSType> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      immutableList0.replaceAll(unaryOperator0);
      node0.setIsSyntheticBlock(true);
      node0.isEquivalentTo(node0);
      Node.newNumber((-1118.0), (-2096), 4095);
      Node node1 = new Node(132, node0);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getInputId();
      Node node1 = null;
      node0.isLabel();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newNumber((double) 43, 48, 32);
      Node node3 = new Node(98, node2);
      node3.addChildrenAfter(node0, node2);
      Node node4 = null;
      try {
        node4 = new Node((-3028), (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node node0 = Node.newNumber(2765.5);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.isLocalResultCall();
      Node node1 = Node.newNumber((double) 48, 39, (-5028));
      node1.addSuppression("%'l(H<};|wPe");
      Node node2 = node0.srcref(node1);
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = new Node((-2145), (-1663), 194);
      Node node1 = new Node(307, node0, 47, 57);
      node1.putIntProp(1139, 1);
      node0.isWhile();
      node0.isGetElem();
      Node node2 = Node.newNumber(3917.0, 57, 4095);
      node2.getJsDocBuilderForNode();
      node0.isNE();
      node1.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = node0.clonePropsFrom(node0);
      node0.isCast();
      node0.isQualifiedName();
      node0.getProp((-2119));
      Node node2 = new Node(51, node0, 2, 8);
      node0.isEquivalentTo(node2);
      Node node3 = node0.cloneNode();
      node1.isDefaultCase();
      node3.getChangeTime();
      node3.isUnscopedQualifiedName();
      Node node4 = Node.newNumber((double) 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node0.isCatch();
      node4.isReturn();
      node0.getBooleanProp(38);
      // Undeclared exception!
      try { 
        node1.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = new Node(130, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newNumber((double) 39, (-951), 112);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.useSourceInfoFromForTree(node1);
      node0.checkTreeEqualsImpl(node1);
      node0.isCall();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(43, 12, 56);
      node1.getInputId();
      node0.setInputId((InputId) null);
      node0.getSourceFileName();
      Node node2 = node0.srcref(node1);
      node2.checkTreeEquals(node0);
      node1.isUnscopedQualifiedName();
      Node node3 = new Node(8, node1);
      Node node4 = new Node(Integer.MIN_VALUE, 1680, 51);
      node1.isOnlyModifiesThisCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("Object#Key");
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Not declared as a type name", node4, templateType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getParentScope();
      node4.setJSType((JSType) null);
      Node node5 = Node.newString("Not declared as a constructor", 54, 40);
      // Undeclared exception!
      try { 
        node5.checkTreeEquals(node4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2147483648
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newNumber((double) 105, 105, 105);
      Node node1 = new Node(40, node0);
      node1.isCatch();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.removeProp(54);
      Node node2 = node0.detachFromParent();
      node2.isDelProp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node1.setString("fTLk. [<`2LX/]s!GzD");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      node0.isQuotedString();
      node0.putBooleanProp(102, false);
      Node node1 = new Node(47, node0);
      node1.getNext();
      node0.isNull();
      node0.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node0.setSourceFileForTesting("Ym)$KI=");
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      node0.isLocalResultCall();
      Node node2 = node1.cloneNode();
      node1.isDefaultCase();
      node1.isFromExterns();
      node1.getInputId();
      node1.setInputId((InputId) null);
      node_SideEffectFlags1.setMutatesThis();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isDec();
      node1.isObjectLit();
      node0.isNew();
      node2.isContinue();
      node0.isVoid();
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isAnd();
      Node.newNumber(161.40418721, 56, 57);
      Node node1 = new Node(53, node0);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      Node node1 = new Node(31, node0, node0, node0, node0, 47, 8);
      node1.cloneTree();
      node1.isDec();
      node0.isObjectLit();
      node0.isNew();
      node1.isIf();
      Node.newNumber(1946.506444, 47, 36);
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = new Node((-3593));
      node0.getStaticSourceFile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setMutatesGlobalState();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node((-686), node0, node0, node0, node0, 30, (-403));
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isFunction();
      node1.isGetProp();
      Node node3 = null;
      try {
        node3 = new Node(1990, node1, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      node0.addSuppression("lvnXy!Q5W?08tx/");
      Node node1 = Node.newNumber((-0.7227063387501712));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.toString(false, false, false);
      node0.getAncestors();
      node0.toString(true, false, true);
      Node node2 = new Node((-1), node0, 48, 48);
      node1.children();
      Node node3 = new Node(4, node1);
      node3.isReturn();
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newString(21, "N2roqN{@crs1a", 2439, 21);
      Node node1 = new Node(21, node0, node0, node0, node0, 42, 128);
      Node node2 = node1.cloneTree();
      node1.isDec();
      node2.isObjectLit();
      node1.isNew();
      node2.isIf();
      node1.isCatch();
      Node node3 = null;
      try {
        node3 = new Node(54, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      node0.setSourceFileForTesting("Ym)$KI=");
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      node0.isLocalResultCall();
      node1.cloneNode();
      node1.isDefaultCase();
      node1.getInputId();
      node1.setInputId((InputId) null);
      node_SideEffectFlags1.setMutatesThis();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isDec();
      node1.isIf();
      node0.isSwitch();
      node0.isIf();
      node1.isSwitch();
      node1.isAdd();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.isLabel();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newNumber((double) 39, 48, 0);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      node0.isCatch();
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = new Node(44);
      node0.removeProp(44);
      node0.setWasEmptyNode(true);
      Node node1 = new Node(152);
      node1.setWasEmptyNode(true);
      node1.addSuppression("tVud7J");
      node1.isCast();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      Node node2 = new Node(36, node0, node1);
      node2.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node2.isGetElem();
      node0.isObjectLit();
      node0.detachFromParent();
      node1.isUnscopedQualifiedName();
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node((-2147483627), node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isWith();
      node0.isQualifiedName();
      node0.isEquivalentTo(node1);
      node0.cloneNode();
      Node node3 = new Node(37);
      node3.useSourceInfoIfMissingFrom(node0);
      node2.getJSDocInfo();
      node1.checkTreeEqualsImpl(node2);
      node1.isDec();
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2147483627
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = new Node(152, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newNumber((double) 39, (-951), 112);
      Node node2 = node0.copyInformationFrom(node1);
      node1.wasEmptyNode();
      node2.isDebugger();
      node0.isOnlyModifiesThisCall();
      Node.mergeLineCharNo((-1190), (-1190));
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node((-2147483627), node0, node0, node0);
      node0.isNoSideEffectsCall();
      node1.isEmpty();
      node0.isFor();
      node1.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = Node.newNumber((double) 16, 0, 120);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node3 = node1.useSourceInfoFromForTree(node2);
      node2.checkTreeEqualsImpl(node3);
      node1.isCall();
      node0.isExprResult();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = new Node(130, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.siblings();
      node0.isStringKey();
      Node node1 = node0.cloneNode();
      Node node2 = Node.newString(30, "N*M/;J<");
      node2.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      // Undeclared exception!
      try { 
        node2.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      String string0 = "Ym)$KI=";
      node0.setSourceFileForTesting("Ym)$KI=");
      node0.toStringTree();
      Node node1 = new Node(102, node0, node0, 38, 56);
      node1.cloneNode();
      node1.isDefaultCase();
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node((-2147483627), node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node0.isQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch0.equals(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("NoObject", false);
      node2.setStaticSourceFile(simpleSourceFile0);
      node1.isGetElem();
      node0.isObjectLit();
      node0.detachFromParent();
      node0.isUnscopedQualifiedName();
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      Node node1 = node0.cloneNode();
      node1.isDefaultCase();
      node1.setWasEmptyNode(false);
      node1.addSuppression("w3@8_w");
      node0.isCast();
      Node node2 = new Node(303, node0, node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("null", true);
      Node node3 = Node.newString(3487, "E", (-3560), (-4132));
      node3.setStaticSourceFile(simpleSourceFile0);
      Node node4 = Node.newString("!v~\bo.F**uu");
      node4.isGetterDef();
      node4.isObjectLit();
      node1.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = new Node(4596, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isDec();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node0.isSetterDef();
      node0.isThis();
      Node node1 = Node.newString("Not declared as a constructor");
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING Not declared as a constructor is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      Node node0 = new Node(44);
      node0.removeProp(44);
      node0.setWasEmptyNode(true);
      Node node1 = new Node(124);
      node1.setWasEmptyNode(true);
      node1.addSuppression("tVud7J");
      node1.isCast();
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node0;
      Node node2 = new Node(36, node0, node1);
      node2.getStaticSourceFile();
      node2.getStaticSourceFile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      node0.isGetElem();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("tVud7J", false);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.isObjectLit();
      node0.detachFromParent();
      node0.isNE();
      node0.getStaticSourceFile();
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = new Node(44);
      node0.removeProp(44);
      node0.setWasEmptyNode(true);
      Node node1 = new Node(152);
      node1.setWasEmptyNode(true);
      node1.addSuppression("tVud7J");
      node1.isCast();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node2 = new Node(36, node0, node1);
      node2.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.isGetElem();
      node2.isObjectLit();
      node1.detachFromParent();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("tVud7J", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = new Node(33);
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getSourceFileName();
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = new Node(130, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.siblings();
      Node node1 = new Node(4596, node0, node0, node0, node0, (-2621), 33);
      Node node2 = node0.cloneTree();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node3.isDec();
      node3.mayMutateArguments();
      node2.isDec();
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      Node node1 = node0.cloneNode();
      node1.isDefaultCase();
      node0.isUnscopedQualifiedName();
      node1.getJsDocBuilderForNode();
      node0.addSuppression((String) null);
      node0.isOnlyModifiesArgumentsCall();
      node1.isName();
      node0.isNull();
      node1.isAssignAdd();
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = new Node(65, 57, 57);
      Node node1 = new Node(16);
      node0.setWasEmptyNode(true);
      node0.addSuppression("w3@8_w");
      node0.isCast();
      Node node2 = new Node(57, node0, node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("w3@8_w", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node.newString("0(");
      node2.isGetterDef();
      node1.getSourceOffset();
      node0.getNext();
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      node0.isDelProp();
      node0.setSourceEncodedPosition(83);
      node0.isAdd();
      node0.isCast();
      node0.isNot();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got DELPROP
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = new Node(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      node0.isEquivalentTo(node1);
      node1.isFunction();
      node1.toString();
      node1.isCase();
      node0.isName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("f?&Ky^'@&!7:UmY{xK[", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = new Node(1631);
      Node node1 = new Node(49, node0, node0, node0, 93, 1408);
      node0.isEquivalentToTyped(node1);
      boolean boolean0 = true;
      node1.setOptionalArg(true);
      node1.cloneNode();
      node1.siblings();
      Node node2 = null;
      try {
        node2 = new Node(1631, node1, node0, 12, 4096);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = Node.newString((-2330), "UE2.k<:@XCV#4", 35, (-2390));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ym)$KI=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ym)$KI=");
      node0.putIntProp((-2174), (-2330));
      node0.isNoSideEffectsCall();
      node0.isNot();
      node0.isSetterDef();
      node0.mayMutateArguments();
      node0.isVarArgs();
      node0.isOr();
      node0.getCharno();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = new Node(13);
      node0.addSuppression("Number node not created with Node.newNumber");
      Node.newNumber((double) 50);
      Node node1 = Node.newString("source_file");
      node0.getStaticSourceFile();
      node1.setStaticSourceFile((StaticSourceFile) null);
      node0.isEquivalentTo(node1, false, false, false);
      // Undeclared exception!
      try { 
        node1.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = new Node(30);
      node0.removeProp(35);
      node0.isTry();
      node0.setSideEffectFlags((-360));
      node0.isWith();
      node0.isVar();
      Node node1 = new Node(131072, 43, 1);
      node0.isGetterDef();
      Node node2 = new Node(8, 8, (-790));
      Node node3 = new Node(93);
      node3.getQualifiedName();
      Node node4 = Node.newNumber((double) 57);
      Node node5 = new Node(132, node3, node4);
      node2.isGetElem();
      Node.newNumber(3604.957416164, 4095, 57);
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = Node.newNumber((double) 152, 46, (-740));
      node0.isTypeOf();
      node0.isDelProp();
      Node node1 = new Node(37, node0, node0, (-2543), 617);
      node1.getInputId();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("Ym)$KI=", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      node1.setInputId((InputId) null);
      node0.getBooleanProp(105);
      Node.mergeLineCharNo(16, 36);
      Node node2 = Node.newString(1553, "{q[TkgIp}X-U&PC#", 2, 159);
      node2.isOnlyModifiesThisCall();
      node2.isRegExp();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = new Node(102, 1610612736, 102);
      node0.isDec();
      Node node1 = new Node(40, node0, node0, 3229, 32);
      node0.addChildToBack(node1);
      Node node2 = Node.newString(40, "");
      node2.addSuppression("");
      node1.getAncestor(4);
      node1.isLocalResultCall();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = new Node(38, 38, 38);
      node0.getJsDocBuilderForNode();
      Node node1 = Node.newNumber((double) 16);
      NoType noType0 = mock(NoType.class, new ViolatedAssumptionAnswer());
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      node0.setJSType(templateType0);
      node1.checkTreeEquals(node0);
      node1.hasMoreThanOneChild();
      node1.isAnd();
      node1.getJSDocInfo();
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = new Node((-290), 46, 423);
      Node node1 = new Node(37, node0, 1449, 4095);
      node1.putIntProp((-2157), 3229);
      node1.isWhile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.removeChild(node0);
      Node node2 = new Node(36, node0, node1);
      Node node3 = new Node(1, (-290), (-242));
      node2.addChildrenAfter(node3, node0);
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newString(102, ":!!8mEqc0C5m", 102, 102);
      Node node1 = new Node(102, node0, 55, 16);
      node0.setWasEmptyNode(true);
      Node node2 = Node.newNumber((double) 51);
      node2.isComma();
      node1.useSourceInfoIfMissingFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node node0 = new Node(38);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      Node node1 = Node.newString(120, "%fM84, '}=", (-2103), 4097);
      Node node2 = new Node(46, node0, node0, node1, node1, 53, 43);
      Node node3 = node2.cloneTree();
      node2.siblings();
      node1.mayMutateArguments();
      node0.isDec();
      node3.isGetProp();
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(47, node0, node0, 108, 56);
      node0.addChildToBack(node1);
      node1.siblings();
      node1.isStringKey();
      node1.cloneNode();
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = Node.newString(49, "duplicate child");
      node0.isReturn();
      Node node1 = new Node(37, (-619), 53);
      node0.isOnlyModifiesThisCall();
      node0.isSetterDef();
      node0.isThis();
      Node.newString("not a StringNode");
      node0.toString();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((-266), nodeArray0);
      node2.isCase();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = new Node(152, 4596, 4596);
      node0.getChangeTime();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.setWasEmptyNode(false);
      Node node1 = Node.newNumber((double) 31);
      node1.isComma();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = new Node(4, 4095, 29);
      node1.mayMutateGlobalStateOrThrow();
      node0.isFunction();
      Node node2 = Node.newString(32, "~tJM<9O9=0l{m)|4");
      node0.isEquivalentToTyped(node2);
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = new Node(130, 4596, 4596);
      Node node1 = Node.newString(30, "?6j(*_JdJN5M5");
      node1.isReturn();
      Node node2 = new Node(77, node0, node1, node0, 764, 30);
      Node node3 = new Node(155);
      Node node4 = new Node(1187);
      node3.useSourceInfoFrom(node1);
      node2.isSwitch();
      Node node5 = null;
      try {
        node5 = new Node(30, node3, node0, 51, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry1.getObjectElementKey();
      Node node0 = Node.newString("Object#Element");
      TemplateType templateType1 = JSType.toMaybeTemplateType((JSType) templateType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType0, (JSType) templateType1, (JSType) templateType0, (JSType) templateType1);
      Node node1 = jSTypeRegistry1.createParameters((List<JSType>) immutableList0);
      node0.checkTreeEqualsImpl(node1);
      node1.addChildToFront(node0);
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newString(":!!8mEqc0C5m", (-2029), (-2029));
      Node node1 = new Node(12, node0, node0, node0, (-2368), 3080);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.getSourceFileName();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getInputId();
      Node node1 = new Node(47, node0, 40, 83);
      node1.children();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      String string0 = "[G`!%";
      Node node3 = Node.newString("[G`!%");
      node3.isTypeOf();
      node3.checkTreeEqualsImpl(node0);
      node1.isDelProp();
      boolean boolean0 = true;
      node1.isQualifiedName();
      Node node4 = null;
      try {
        node4 = new Node(46, node2, node2, node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(16, node0, node0, node0);
      node1.isDec();
      node0.addChildToBack(node1);
      node1.addSuppression("");
      Node node2 = node1.getAncestor(2);
      node2.isLocalResultCall();
      node2.getDirectives();
      node0.isWhile();
      node0.isThis();
      // Undeclared exception!
      try { 
        node0.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      node0.setSourceFileForTesting("Ym)$KI=");
      node0.toStringTree();
      Node node1 = new Node(37, node0, node0, node0, node0);
      Node node2 = node1.cloneNode();
      node2.mayMutateGlobalStateOrThrow();
      node1.isDefaultCase();
      node1.isOptionalArg();
      node1.getInputId();
      node1.setInputId((InputId) null);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isDec();
      node1.isIf();
      node0.isSwitch();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.isLabelName();
      node1.isSwitch();
      node1.isAdd();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = new Node(19, 57, 57);
      Node node1 = new Node(16);
      node1.isTypeOf();
      node1.getProp(98);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(93, nodeArray0);
      Node node3 = new Node(98, node2, (-83), 30);
      node0.isEquivalentTo(node1);
      node2.cloneNode();
      Node.newNumber(943.712281565);
      node1.isGetProp();
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = new Node((-3593));
      node0.getStaticSourceFile();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      node0.isCatch();
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      node0.isLocalResultCall();
      Node node2 = node1.cloneNode();
      node2.siblings();
      node2.mayMutateArguments();
      Node node3 = node2.copyInformationFromForTree(node1);
      node1.isDec();
      node2.isGetProp();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = new Node(152, 4596, 4596);
      node0.getChangeTime();
      node0.isFor();
      node0.isGetterDef();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.siblings();
      node0.isStringKey();
      Node node1 = new Node(98);
      Node node2 = Node.newString(16, "N*M/;J<");
      Node node3 = node1.cloneNode();
      Node node4 = new Node((-1351));
      node3.getJSDocInfo();
      node4.checkTreeEqualsImpl(node2);
      node4.removeChildren();
      node4.isDec();
      // Undeclared exception!
      try { 
        node4.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1351
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.getSourceFileName();
      node0.isUnscopedQualifiedName();
      node0.checkTreeEquals(node0);
      Node.newNumber((double) 1, 110, 1);
      node0.isLabelName();
      node0.isSwitch();
      node0.isAdd();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = new Node(4596, 25, 25);
      Node node1 = new Node(55);
      node0.setWasEmptyNode(true);
      node1.isCast();
      Node node2 = new Node(56, node0, node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("w3@8_w", false);
      Node node3 = Node.newNumber((double) 4095, 809, 2178);
      node3.setStaticSourceFile(simpleSourceFile0);
      Node node4 = Node.newString("-");
      node4.isGetterDef();
      node3.getSourceOffset();
      node3.isCase();
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "U'T");
      Node node0 = new Node((-3662));
      node0.isNoSideEffectsCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        node0.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = new Node(38);
      node0.toStringTree();
      Node node1 = new Node(267, node0, node0, node0, node0, 8, 39);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isWith();
      // Undeclared exception!
      try { 
        node2.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.isLabel();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(125, node0, 1, 55);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node0.clonePropsFrom(node1);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      node0.isCatch();
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = new Node(29);
      Node node1 = new Node(39, node0, node0, node0, (-393), 4095);
      Node node2 = new Node(31);
      Node node3 = new Node(4095, node2, node1);
      Node node4 = node2.useSourceInfoFrom(node3);
      node4.isAssignAdd();
      Node node5 = null;
      try {
        node5 = new Node(130, node2, node0, node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = Node.newString((-1751), "4xn}hk", 46, (-1751));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.isAssignAdd();
      Node node1 = Node.newString("4xn}hk", 40, (-1751));
      node0.isGetterDef();
      node1.putBooleanProp(52, false);
      Node node2 = Node.newString(50, "4xn}hk", 37, 55);
      node1.hasChildren();
      node2.isComma();
      Node.extractCharno((-134));
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = Node.newString(105, "4xn}hk", 46, 105);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node0.isEquivalentToShallow(node0);
      node0.children();
      node0.putIntProp((-1731), 105);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.isNE();
      int int0 = Node.VAR_ARGS_NAME;
      node0.isNull();
      node0.isStringKey();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getInputId();
      node0.setInputId((InputId) null);
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = new Node(44);
      node0.removeProp(44);
      Node node1 = new Node(4, node0, node0, node0);
      node1.isScript();
      node1.getIntProp(46);
      node0.isEquivalentTo(node1);
      node0.setSourceEncodedPositionForTree(2);
      Node node2 = node1.cloneNode();
      node0.isExprResult();
      node2.toString();
      node1.isCase();
      Node node3 = node2.clonePropsFrom(node0);
      node3.getIntProp(118);
      node2.useSourceInfoIfMissingFrom(node1);
      node1.isAssign();
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = Node.newString(527, "new@child has existing si-lng", 39, 39);
      node0.isNull();
      Node node1 = new Node(30, node0, 83, 2);
      node1.copyInformationFromForTree(node0);
      node0.addChildToFront(node1);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = Node.newNumber((-0.7227063387501712), 262144, (-1631));
      Node node1 = Node.newString("E");
      node1.children();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isTypeOf();
      node1.checkTreeEqualsImpl(node2);
      node2.isDelProp();
      node2.isQualifiedName();
      Node node3 = new Node(36, node0, node1, node2, node1);
      node3.setWasEmptyNode(true);
      node1.getQualifiedName();
      // Undeclared exception!
      try { 
        node3.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = new Node(13);
      Node node1 = Node.newNumber((double) 13);
      Node node2 = new Node(42);
      node2.isTrue();
      Node node3 = new Node(56, node2);
      node3.removeChildren();
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = Node.newString(113, ":!!8mEqc0C5m", 113, 105);
      Node node1 = new Node(32, node0, node0, node0, node0, 123, 2);
      Node node2 = node1.cloneTree();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node3 = node2.useSourceInfoFromForTree(node1);
      node3.checkTreeEqualsImpl(node0);
      node3.isCall();
      node1.isExprResult();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = new Node(44);
      node0.removeProp(44);
      node0.setWasEmptyNode(true);
      Node node1 = Node.newNumber((double) 37);
      node1.checkTreeEquals(node0);
      node0.srcrefTree(node1);
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = new Node(102, 1610612736, 102);
      node0.isAnd();
      node0.isUnscopedQualifiedName();
      node0.setSourceEncodedPosition(12);
      node0.isEquivalentTo(node0);
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      node0.isLocalResultCall();
      Node node2 = node1.cloneNode();
      Node node3 = new Node(8, node1, node1);
      node2.isObjectLit();
      node1.detachFromParent();
      Node.newString("NAME\n", 42, 94);
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(54);
      node0.getSourceFileName();
      node1.isUnscopedQualifiedName();
      Node node2 = new Node(8, node1);
      Node node3 = new Node(Integer.MIN_VALUE, 1680, 51);
      node1.isOnlyModifiesThisCall();
      node0.isSetterDef();
      node1.isThis();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Node.extractLineno(57);
      node0.clonePropsFrom(node3);
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = new Node(44);
      node0.removeProp(44);
      node0.setWasEmptyNode(false);
      Node node1 = new Node(152);
      Node node2 = new Node(153, node0, node1, node1);
      node1.clonePropsFrom(node2);
      node0.isQualifiedName();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node0);
      node_NodeMismatch0.equals(node2);
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = new Node(93);
      node0.isNull();
      node0.isUnscopedQualifiedName();
      node0.getJsDocBuilderForNode();
      node0.addSuppression((String) null);
      node0.isHook();
      node0.getInputId();
      int int0 = Node.VAR_ARGS_NAME;
      node0.isNull();
      Node node1 = Node.newString(47, "E", 17, 16);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node_NodeMismatch0.equals("E");
      // Undeclared exception!
      try { 
        node1.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newString(113, ":!!8mEqc0C5m", 113, 105);
      Node node1 = new Node(32, node0, node0, node0, node0, 123, 2);
      Node node2 = node1.cloneTree();
      node2.isDec();
      node0.isObjectLit();
      node1.isNew();
      node2.isIf();
      node0.isReturn();
      node2.isCase();
      node2.addChildrenToFront(node1);
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      node0.isLocalResultCall();
      Node node2 = node1.cloneNode();
      node1.useSourceInfoFrom(node0);
      Node node3 = null;
      try {
        node3 = new Node((-1083), node2, node0, 15, 3145);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = new Node(13, 13, 13);
      Node node1 = new Node(42);
      node1.setOptionalArg(true);
      node1.isCast();
      node1.isOptionalArg();
      Node node2 = new Node(56, node1);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getSourceFileName();
      node0.checkTreeEquals(node0);
      Node node1 = node0.getAncestor(0);
      node1.setWasEmptyNode(false);
      node1.isLocalResultCall();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = new Node(93);
      node0.getSideEffectFlags();
      node0.getQualifiedName();
      node0.isUnscopedQualifiedName();
      node0.isHook();
      node0.putIntProp(93, 0);
      node0.isWhile();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getJSType();
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(50, nodeArray0, 50, 50);
      Node node1 = new Node(50, node0);
      node1.isThis();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ASSIGN_MUL");
      node1.removeChildren();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ASSIGN_MUL");
      // Undeclared exception!
      try { 
        node0.appendStringTree(mockPrintWriter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 50
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = new Node(114);
      node0.getSourceFileName();
      node0.checkTreeEquals(node0);
      node0.isLabelName();
      node0.isSwitch();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(54);
      node0.toStringTree();
      Node node2 = new Node(35, node0, node0, 54, 310);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[1];
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      PriorityQueue<TemplateType> priorityQueue0 = new PriorityQueue<TemplateType>();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Collection<? extends TemplateType>) priorityQueue0);
      ImmutableList<TemplateType> immutableList1 = ImmutableList.copyOf((Collection<? extends TemplateType>) immutableList0);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList2 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      TemplateTypeMap templateTypeMap0 = jSTypeRegistry1.createTemplateTypeMap(immutableList1, immutableList2);
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, templateTypeMap0);
      JSType jSType0 = templateTypeMapReplacer0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node3.isLocalResultCall();
      node2.cloneNode();
      node3.isFromExterns();
      node3.getInputId();
      node3.setInputId((InputId) null);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node1.isDec();
      node3.isObjectLit();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node.newString("me");
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(42, nodeArray0);
      node0.isThis();
      try { 
        node0.setDouble(37.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THIS 0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = new Node(31, 31, 13);
      Node node1 = new Node((-2147483627), node0, node0, node0);
      Node node2 = node1.clonePropsFrom(node0);
      node1.isWith();
      node0.isQualifiedName();
      node0.isEquivalentTo(node1);
      node0.getStaticSourceFile();
      node2.getJSDocInfo();
      node1.checkTreeEqualsImpl(node2);
      node2.getChildAtIndex((-1295));
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = new Node(13);
      Node node1 = new Node(49, 0, 57);
      Node node2 = new Node(38, node1, node1, node1);
      node1.clonePropsFrom(node2);
      node0.isWith();
      node0.isQualifiedName();
      node2.isEquivalentTo(node0);
      node0.getJSDocInfo();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType objectType0 = null;
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "Object#Key");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString((-887), "pFrY\",w85YeO4");
      node0.getType();
      node0.isNot();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.isObjectLit();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = new Node(44);
      node0.removeProp(44);
      Node node1 = new Node(152);
      node1.addSuppression("tVud7J");
      node1.isCast();
      Node node2 = new Node(36, node0, node1);
      node2.getStaticSourceFile();
      node0.setLineno(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.isGetElem();
      node0.detachFromParent();
      node2.isIf();
      node0.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = new Node(21, (-6212), 55);
      Node node1 = new Node(51, 1697, (-1059));
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isQualifiedName();
      node0.isAnd();
      int int0 = Node.LAST_PROP;
      Node node3 = node0.cloneTree();
      node0.checkTreeTypeAwareEqualsImpl(node3);
      node3.isDec();
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Node node0 = new Node(38);
      node0.toStringTree();
      Node node1 = Node.newNumber(0.5, (-1260), 1739);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.checkTreeEqualsImpl(node0);
      node0.isLocalResultCall();
      Node node3 = new Node(1723, node1, 2, 40);
      node2.isThis();
      node2.isEmpty();
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = Node.newString(42, "c", (-1446), 13);
      node0.isNull();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jZ KhBA<V2A]");
      Node node1 = new Node(37, node0, 47, (-32));
      node1.copyInformationFromForTree(node0);
      // Undeclared exception!
      try { 
        Node.newString((String) null, 1, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(54);
      node0.isVar();
      Node node2 = node0.cloneTree();
      node1.siblings();
      node2.isFromExterns();
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = new Node(153, 153, 153);
      node0.getSourceFileName();
      node0.checkTreeEquals(node0);
      node0.isLabelName();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = new Node(725, 110, 29);
      node0.getIntProp((-1766));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jSDocInfo0.documentReference("E");
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      jSDocInfo0.addMarker();
      node1.getJSDocInfo();
      node0.isAdd();
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.useSourceInfoFrom(node1);
      node1.getChildCount();
      // Undeclared exception!
      try { 
        node1.toString(true, false, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 725
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = new Node(93);
      node0.getSideEffectFlags();
      node0.getQualifiedName();
      Node node1 = new Node((-1794), 56, 29);
      node0.isOnlyModifiesThisCall();
      Node node2 = new Node(1, node1, node1, node0, 1252, 4095);
      node2.isOnlyModifiesThisCall();
      node2.getChildBefore(node0);
      // Undeclared exception!
      try { 
        Node.newString((String) null, 39, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = Node.newNumber((-4132.0));
      Node node1 = Node.newString(35, "com.goog.com0on.base.aharMatc\"er$Fastatcher");
      node1.putIntProp(48, 2978);
      node0.isFromExterns();
      node0.cloneNode();
      boolean boolean0 = true;
      node1.setVarArgs(true);
      node1.isIn();
      try { 
        node1.setDouble(48);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // GETELEM com.goog.com0on.base.aharMatc\"er$Fastatcher [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000004] [directives: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = Node.newNumber((-4132.0));
      Node node1 = Node.newString(35, "com.goog.com0on.base.aharMatc\"er$Fastatcher");
      node1.putIntProp(48, 2978);
      node0.isFromExterns();
      node0.cloneNode();
      node1.setVarArgs(true);
      node1.isIn();
      try { 
        node1.setDouble(48);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // GETELEM com.goog.com0on.base.aharMatc\"er$Fastatcher [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000004] [directives: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = new Node(44);
      Node node1 = Node.newString(39, "18oh31_<A", 114, 122);
      node1.isNull();
      Node node2 = new Node((-3169), node0, 2, 53);
      Node node3 = node0.copyInformationFromForTree(node2);
      // Undeclared exception!
      try { 
        node1.addChildToFront(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = new Node(125);
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newNumber(1176.5354);
      Node node2 = new Node(15, node1, node0, node1);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = new Node(55, node2);
      node3.isDec();
      node3.removeChildren();
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      Node node1 = new Node(115, node0);
      node1.removeChildren();
      node0.addChildrenAfter(node1, (Node) null);
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = new Node(12, 39, (-100));
      Node node1 = new Node(39, node0, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node1.useSourceInfoIfMissingFrom(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("\"L*SO*[RvT%]:ZS_?", true);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.isWith();
      node0.isQualifiedName();
      node2.isEquivalentTo(node1);
      node1.getJSDocInfo();
      node1.checkTreeEqualsImpl(node0);
      node0.isDec();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = new Node(152, 4596, 4596);
      node0.getChangeTime();
      node0.isFor();
      node0.isGetterDef();
      node0.isStringKey();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node0.isAssign();
      node0.getIntProp(111);
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(49, nodeArray0, 125, 42);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node node0 = Node.newNumber((-226.056824));
      node0.setSourceEncodedPositionForTree(1572);
      Node node1 = new Node(4095, node0, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node node2 = null;
      try {
        node2 = new Node(57, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = new Node(130, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(49, node0, 53, 2);
      Node node2 = node0.copyInformationFromForTree(node1);
      // Undeclared exception!
      try { 
        node0.addChildToFront(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = new Node(152, 4596, 4596);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(42);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags6.setMutatesArguments();
      node0.toStringTree();
      Node node1 = new Node(1, node0, node0, 671, 4095);
      node1.isLocalResultCall();
      Node node2 = node0.cloneNode();
      node0.isFromExterns();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node2;
      node2.getInputId();
      node2.setInputId((InputId) null);
      node_SideEffectFlags3.setMutatesThis();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node1.isDec();
      node2.isObjectLit();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = new Node(2);
      Node node1 = new Node(63);
      node1.isObjectLit();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEquivalentTo(node1);
      node0.isEquivalentTo(node0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'T';
      charArray0[1] = 'd';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        node1.appendStringTree(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = new Node(93);
      node0.removeProp(3862);
      node0.setWasEmptyNode(true);
      node0.isComma();
      Node node1 = Node.newNumber((double) 54);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      node0.isLocalResultCall();
      Node node2 = node1.cloneNode();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      Node node3 = new Node(4, node1);
      node0.isDec();
      node3.removeChildren();
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      Node node0 = new Node(130, 4596, 4596);
      node0.getJSType();
      node0.getChangeTime();
      node0.isNoSideEffectsCall();
      node0.isWith();
      node0.isQualifiedName();
      Node node1 = Node.newNumber((double) 31);
      node1.isEquivalentTo(node0);
      node0.getJSDocInfo();
      node0.checkTreeEqualsImpl(node1);
      node0.isDec();
      Node node2 = new Node(938, node1, node0, node0);
      node2.getDirectives();
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = Node.newString(113, "ope%&T}f9", 113, 105);
      Node node1 = new Node(51, node0, node0, node0, node0, 32, 65);
      Node node2 = node1.cloneTree();
      node1.siblings();
      node2.isFromExterns();
      node2.isDec();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = Node.newString(49, "duplicate child");
      node0.isReturn();
      Node node1 = new Node(2, node0, node0, node0, 4095, 4);
      Node node2 = new Node(57);
      Node node3 = new Node(40, node1, node2);
      Node node4 = node3.useSourceInfoFrom(node1);
      Node node5 = new Node(50, 1923, 889);
      node5.isAssignAdd();
      node4.isArrayLit();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = new Node(13);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.error(":!!8mEqc0C5m", ") must not be negative", 1, 2842);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
      node0.setJSType(templateType0);
      Node node1 = new Node(114, node0, node0, 0, 1);
      node0.checkTreeEquals(node1);
      node0.hasMoreThanOneChild();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newString("pFrY\",w85YeO4");
      node0.setLineno(63);
      node0.isOptionalArg();
      node0.removeChildren();
      node0.isReturn();
      node0.getCharno();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = new Node(39, 614, 614);
      Node node1 = Node.newNumber((double) 8, 31, (-494));
      node1.mayMutateArguments();
      node0.isGetProp();
      node0.getSourcePosition();
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = Node.newString(262144, "DATE_FUNCTION_TYPE", (-1631), 262144);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = node0.cloneTree();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isLabelName();
      Node node2 = Node.newString((-949), "not a StringNode", 830, 4);
      node2.isSwitch();
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = new Node(130, 4596, 4596);
      Node node1 = Node.newNumber((double) 1, 2, 16);
      node1.clonePropsFrom(node0);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.getJSType();
      node0.getChangeTime();
      node0.isNoSideEffectsCall();
      node0.isEmpty();
      node0.getInputId();
      int int0 = Node.LAST_PROP;
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = new Node(154, 4596, 4596);
      int int0 = Node.SYNTHETIC_BLOCK_PROP;
      node0.isFor();
      node0.cloneNode();
      node0.isSetterDef();
      node0.getInputId();
      node0.isThis();
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      Node node0 = Node.newString(35, "R,I^&T>%");
      node0.putIntProp(35, 84);
      node0.isFromExterns();
      Node node1 = node0.cloneNode();
      node0.setVarArgs(false);
      node1.isIn();
      // Undeclared exception!
      try { 
        node1.setDouble(30);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 35
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesArguments();
      node0.setSourceFileForTesting("Ym)$KI=");
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      Node node2 = node1.cloneNode();
      node1.isDefaultCase();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node2.getSourceOffset();
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString(113, "empty_block", 3855, 113);
      node0.setOptionalArg(true);
      Node node1 = Node.newNumber((double) 53);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Xq6W2~]2ckCt*ag");
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isUnscopedQualifiedName();
      node0.getChangeTime();
      int int0 = 36;
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // WHILE empty_block [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = new Node(38);
      node0.isTry();
      Node node1 = node0.getAncestor(0);
      Node node2 = new Node(512, node0, node0, (-1174), 105);
      node2.siblings();
      node2.isFromExterns();
      node2.isDec();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = Node.newNumber((-4132.0));
      Node node1 = Node.newString(35, "com.goog.com0on.base.aharMatc\"er$Fastatcher");
      node1.putIntProp(48, 2978);
      node0.isFromExterns();
      Node node2 = node0.cloneNode();
      node1.setVarArgs(true);
      node2.getStaticSourceFile();
      node1.isGetElem();
      node0.isComma();
      node0.isVoid();
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = Node.newNumber(11.52187446606, 154, 154);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[4];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      jSTypeArray0[0] = jSType0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Named type with empty name component", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      EnumElementType enumElementType0 = enumType1.getElementsType();
      enumElementType0.getConstructor();
      jSTypeArray0[1] = (JSType) null;
      UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(unionType0).toString();
      doReturn((Collection) null).when(unionType0).getAlternates();
      JSType jSType1 = modificationVisitor0.caseUnionType(unionType0);
      jSTypeArray0[2] = jSType1;
      EnumType enumType2 = enumType0.toMaybeEnumType();
      jSTypeArray0[3] = (JSType) enumType2;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      enumType2.isArrayType();
      Node node2 = new Node(154, node0, node1, node0, node0);
      node1.mayMutateGlobalStateOrThrow();
      EnumElementType enumElementType1 = enumType2.getElementsType();
      EnumElementType enumElementType2 = enumElementType1.toMaybeEnumElementType();
      enumElementType2.getOwnPropertyJSDocInfo("Not declared as a constructor");
      node1.setJSDocInfo((JSDocInfo) null);
      node2.isContinue();
      node1.getLastChild();
      Node node3 = Node.newString(2, "duplicate child");
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node3);
      node3.cloneNode();
      node_NodeMismatch0.equals((Object) null);
      node1.isIf();
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = new Node(105, 43, 1610612736);
      Node node1 = new Node(2, node0, 1, 1487);
      node0.srcref(node1);
      node0.toString(true, true, true);
      node0.mayMutateArguments();
      node0.isAnd();
      node0.isDec();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(51, node0, node0, node0, 4096, 153);
      node0.isVar();
      Node node2 = node0.cloneTree();
      Node node3 = Node.newNumber((double) 49, 15, 456);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      node0.isCatch();
      node0.isRegExp();
      node2.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = new Node(13);
      Node node1 = Node.newString(4, "O&d% 0D\btf:-s`", 29, 120);
      node0.isNull();
      Node node2 = new Node(0, node0, 152, 98);
      node0.copyInformationFromForTree(node1);
      node1.addChildToFront(node2);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node node0 = Node.newNumber((-4132.0));
      Node node1 = new Node(38, node0, 38, 39);
      node1.putIntProp(48, 2978);
      node0.isFromExterns();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node0.cloneNode();
      node1.setVarArgs(true);
      node1.isIn();
      try { 
        node1.setDouble(48);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 38 [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] [var_args_name: com.google.javascript.rhino.Node$IntPropListItem@0000000006] [directives: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = new Node(80);
      node0.isTry();
      node0.isLocalResultCall();
      Node node1 = new Node(148, node0, node0, node0);
      Node node2 = node1.cloneNode();
      node2.isFromExterns();
      node2.getInputId();
      node0.setInputId((InputId) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      Node node3 = Node.newNumber((double) 38, 119, 2);
      node3.isDec();
      node1.isObjectLit();
      Node node4 = Node.newString(4, "");
      node4.isContinue();
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Node node0 = new Node(98);
      Node node1 = new Node((-156), 16, 38);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.isCatch();
      node0.isOnlyModifiesThisCall();
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node node0 = Node.newString(4, "`_o%PWqQa", (-2058), 44);
      Node node1 = new Node((-2023), node0, (-779), 4);
      node0.isWhile();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      Node node2 = Node.newString((-1405), "");
      node1.addChildrenAfter(node2, (Node) null);
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newNumber((double) 39, 48, 0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      node0.isCatch();
      node0.isOnlyModifiesThisCall();
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp((-192));
      node0.setWasEmptyNode(true);
      node0.isComma();
      Node node1 = new Node(4095, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = new Node(13);
      node0.clonePropsFrom(node0);
      node0.isTypeOf();
      node0.getProp((-2119));
      Node node1 = new Node(51, node0, 2, 8);
      node0.isEquivalentTo(node1);
      Node node2 = node0.cloneNode();
      node1.removeFirstChild();
      node2.getChangeTime();
      node1.isUnscopedQualifiedName();
      Node.newNumber((double) 52);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage0("K;A!U YoloC]wg4F\"T");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property K;A!U YoloC]wg4F\"T
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = new Node(13);
      Node node1 = new Node(42);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isTrue();
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = new Node(147);
      node0.isTry();
      node0.cloneNode();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(97);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got GETTER_DEF
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = Node.newNumber((-4132.0));
      Node node1 = Node.newString(35, "com.goog.com0on.base.aharMatc\"er$Fastatcher");
      node1.putIntProp(48, 2978);
      node0.isNull();
      Node node2 = new Node(1, node0, 52, 29);
      Node node3 = node1.copyInformationFromForTree(node2);
      node3.addChildToFront(node2);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = new Node(124, 124, 124);
      Node node1 = new Node(110, 8, 31);
      Node node2 = new Node(1, node1, node1, node0);
      node0.clonePropsFrom(node1);
      Node node3 = null;
      try {
        node3 = new Node(29, node1, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = Node.newString(97, ":!!8mEqac0C5m", 97, 97);
      Node node1 = new Node(32, node0, node0, node0, node0, 53, 2);
      Node node2 = Node.newNumber((double) 4095);
      node1.useSourceInfoIfMissingFromForTree(node2);
      node1.isNew();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = new Node(152);
      node0.addSuppression("tVud7J");
      node0.isCast();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = new Node(590);
      node0.setLineno(590);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      node0.removeChildren();
      Node node1 = Node.newNumber(1.0);
      // Undeclared exception!
      try { 
        node1.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = new Node(38);
      node0.removeProp(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesArguments();
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      node0.isLocalResultCall();
      Node node2 = node1.cloneNode();
      Node node3 = new Node(8, node1, node1);
      node2.isObjectLit();
      Node node4 = node1.detachFromParent();
      node4.cloneTree();
      Node.newString("NAME\n", 42, 94);
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = new Node(38);
      node0.isTry();
      node0.isWith();
      Node node1 = new Node(32);
      node0.copyInformationFrom(node1);
      node0.isLabelName();
      node0.removeChildren();
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      Node node1 = new Node(49, node0, node0, node0, (-3183), 4095);
      node1.isThrow();
      node0.hasChildren();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newNumber((-1.0), (-1978), 155686);
      String string0 = "!*";
      node0.setSourceFileForTesting("!*");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(4, 118, 2348);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.children();
      node2.getBooleanProp(52);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node3 = new Node(0, node2, node2, node0, 360, 54);
      node1.copyInformationFromForTree(node3);
      // Undeclared exception!
      try { 
        node2.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      Node node1 = new Node(52, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isTrue();
      node0.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      Node node1 = new Node(44, node0, node0, node0, (-1839), 2147483645);
      node0.clonePropsFrom(node1);
      node0.isNoSideEffectsCall();
      node0.isGetProp();
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = new Node(152);
      Node node1 = new Node(30, 2, 43);
      node0.useSourceInfoFrom(node1);
      node0.addSuppression("_5");
      node0.isCast();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node1.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = new Node(148, 148, 114);
      Node node1 = new Node(148, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      // Undeclared exception!
      try { 
        node2.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      Node node1 = new Node(43, 53, 50);
      Node node2 = new Node(57, 1, 53);
      node2.isGetterDef();
      node2.isArrayLit();
      node1.cloneNode();
      node1.children();
      node2.isGetterDef();
      node1.getSourceOffset();
      node2.addChildrenToFront(node0);
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = new Node(48, node0, node0, node0, 4095, 15);
      node0.isVar();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      node1.isCatch();
      node1.isRegExp();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = new Node(38);
      node0.toStringTree();
      Node node1 = new Node(113, node0, node0, 38, 56);
      node1.isFor();
      node1.toString();
      node1.isCase();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = new Node(102, 1610612736, 102);
      node0.isAnd();
      node0.isDec();
      node0.isGetProp();
      Node node1 = new Node(122, node0, node0, 30, 43);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = new Node(1, node0, node0, node0, (-745), (-1517));
      node1.isVar();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node1.isNoSideEffectsCall();
      node0.isEmpty();
      node1.getInputId();
      node0.cloneTree();
      node1.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      node0.isUnscopedQualifiedName();
      node0.isEquivalentTo(node0);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-73);
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte)17;
      byteArray0[3] = (byte) (-56);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString(105, ":!!8mEqcCm", 4, 105);
      Node node1 = new Node(105, node0, 55, 16);
      node1.isWhile();
      node1.getInputId();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node1.setJSDocInfo(jSDocInfo0);
      int int0 = Node.LAST_PROP;
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = new Node(154, 154, 1770);
      Node node1 = new Node(50);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      node_NodeMismatch0.equals(node0);
      node1.isComma();
      node1.getBooleanProp(113);
      node1.getLength();
      Node node2 = node0.getLastSibling();
      node0.isTypeOf();
      int int0 = 51;
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node2;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node3 = new Node(40, node0, node1, node0, 51, 101);
      nodeArray0[3] = node3;
      nodeArray0[4] = node0;
      nodeArray0[5] = node2;
      nodeArray0[6] = node2;
      Node node4 = null;
      try {
        node4 = new Node(27591, nodeArray0, 3180, 111);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = new Node(126);
      node0.setLineno(63);
      Node node1 = new Node(16, 1892, 32);
      node0.copyInformationFrom(node1);
      node1.getAncestors();
      Node.extractCharno((-862048943));
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = Node.newString(105, ":!t!8mEq[0o5m", 46, 105);
      node0.putIntProp(46, 1396);
      Node node1 = node0.cloneNode();
      node0.isIn();
      Node node2 = new Node(46, node1, node0, (-1559), 48);
      node0.checkTreeEquals(node2);
      node2.isDec();
      node1.getSourceOffset();
      // Undeclared exception!
      try { 
        node2.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = new Node(102, node0, 55, 16);
      node0.useSourceInfoFromForTree(node1);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INC 55 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = new Node(30);
      node0.hasOneChild();
      node0.isWith();
      node0.isNew();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = new Node(38);
      node0.isTry();
      node0.isWith();
      node0.setSourceEncodedPosition(38);
      node0.isEquivalentTo(node0);
      Node node1 = new Node(1, node0);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = new Node(13);
      node0.cloneTree();
      node0.getBooleanProp(52);
      node0.getJSDocInfo();
      node0.isNot();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = Node.newString(86, "A;eQ aYE");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Number node not created with Node.newNumber");
      Node node1 = new Node(86, node0, node0, node0, node0);
      node1.isGetterDef();
      node0.addChildToFront(node1);
      node0.isEmpty();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isNot();
      node0.isQualifiedName();
      Node node2 = Node.newString(1335, "new child has existing sibling", 55, 30);
      node2.isOnlyModifiesArgumentsCall();
      node0.isSyntheticBlock();
      node2.getChangeTime();
      node1.useSourceInfoFrom(node0);
      Node.newString(54, "new child has existing sibling");
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1335
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      node0.getAncestor(40);
      Node node1 = null;
      try {
        node1 = new Node(47, (Node) null, node0, 1, 4095);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), (-1627), (-3243));
      Node node1 = new Node(39, node0, node0, 43, 47);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = new Node(57, node1);
      node3.isCall();
      node3.getStaticSourceFile();
      node2.isHook();
      Node node4 = node2.detachFromParent();
      node4.setCharno(57);
      node1.wasEmptyNode();
      node3.isInstanceOf();
      node2.isBreak();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte)111;
      byteArray0[4] = (byte) (-13);
      byte byte0 = (byte) (-94);
      // Undeclared exception!
      try { 
        node4.setDouble(4095);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isLabel();
      node0.isWith();
      node0.isQualifiedName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(31, node0, node0);
      Node node2 = Node.newString("DIV", 4095, 16);
      node2.isUnscopedQualifiedName();
      node0.isAssign();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = new Node(31);
      int int0 = Node.INFERRED_FUNCTION;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = new Node(56, node0, node0, node0);
      node1.isHook();
      int int1 = Node.REFLECTED_OBJECT;
      Node node2 = node1.removeChildren();
      node2.setSourceEncodedPosition(36);
      node2.getLength();
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = new Node(105);
      node0.toStringTree();
      Node node1 = new Node(12, node0, node0, 2069, 10);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isIf();
      node1.isSwitch();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = new Node(116, 116, 116);
      Node node1 = new Node(57, node0, node0, node0, 3885, 37);
      node0.useSourceInfoFromForTree(node1);
      node0.isVar();
      node0.isRegExp();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = new Node(126, 126, 126);
      Node node1 = new Node(48, node0, node0, node0, 4095, 15);
      node0.isVar();
      node1.isBlock();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isReturn();
      node1.isSwitch();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isLabel();
      node0.isWith();
      node0.isQualifiedName();
      Node node1 = new Node(31, node0, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isAssignAdd();
      node1.isArrayLit();
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = new Node(80);
      Node node1 = new Node(31);
      Node node2 = new Node(15, node0, node1);
      Node node3 = new Node(43, node2, 28, (-3727));
      node3.useSourceInfoFrom(node1);
      node2.isAssignAdd();
      node3.isArrayLit();
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newNumber((double) 13);
      node0.putIntProp(51, 37);
      // Undeclared exception!
      try { 
        node0.isFromExterns();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      Node node1 = node0.cloneNode();
      node1.isDefaultCase();
      node1.setWasEmptyNode(false);
      node1.addSuppression("w3@8_w");
      node0.isCast();
      Node node2 = new Node(303, node0, node1);
      node2.getJsDocBuilderForNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("null", true);
      Node node3 = Node.newString(3487, "E", (-3560), (-4132));
      node3.setStaticSourceFile(simpleSourceFile0);
      Node node4 = Node.newString("!v~\bo.F**uu");
      node4.isGetterDef();
      node4.isObjectLit();
      node1.detachFromParent();
      node3.getStaticSourceFile();
      node0.getAncestor(55);
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node node0 = new Node(126);
      node0.isLabel();
      Node node1 = Node.newString("%fM84, }=");
      node1.isWith();
      node0.isQualifiedName();
      Node node2 = new Node(4096, node0, node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("%fM84, }=", false);
      simpleSourceFile0.getLineOffset(20);
      node1.setStaticSourceFile(simpleSourceFile0);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node2;
      Node node3 = null;
      try {
        node3 = new Node(55, nodeArray0, 29, 36);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node.newNumber(0.0);
      Node node0 = Node.newString(43, "com.goog.com0on.base.aharMatc\"er$Fastatcher");
      node0.putIntProp(56, 50);
      Node node1 = new Node(52);
      node0.isTrue();
      node1.getSourceOffset();
      node0.getChangeTime();
      node1.removeProp(2186);
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString(1652, "%fM84, }=");
      Node node1 = new Node(122, node0, 0, 42);
      Node node2 = new Node(1599, node1, node1, 40, 57);
      node0.putIntProp(152, 1988);
      Node node3 = new Node(122, node2, node2, node2);
      Node node4 = node3.cloneNode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType.toMaybeFunctionType((JSType) null);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("$KaTxCo~=I/exZ", node4, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = new Node(103, 103, (-4131));
      node0.isAnd();
      node0.isDec();
      node0.isCase();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node0, node0);
      node_NodeMismatch0.equals(node0);
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = Node.newNumber((-0.7227063387501712), 262144, (-1631));
      node0.isFor();
      node0.isDefaultCase();
      Node node1 = new Node(52, node0, node0);
      node1.isSyntheticBlock();
      node1.isEquivalentTo(node1, false, false, false);
      node0.isGetProp();
      node0.getParent();
      node1.isAdd();
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = Node.newString(35, "R,I^&T>%");
      node0.putIntProp(35, 84);
      node0.isFromExterns();
      node0.getBooleanProp(35);
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(31, node0, node0, node0, 36, 40);
      node1.srcrefTree(node0);
      node0.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = Node.newString(105, ":!!8mEqc0C5m", 46, 105);
      Node node1 = new Node(51);
      Node node2 = new Node(0, node0, node1);
      Node node3 = node1.useSourceInfoFrom(node2);
      node1.isAssignAdd();
      node1.isArrayLit();
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = new Node(29);
      node0.isDelProp();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.setSourceEncodedPosition(49);
      node0.isNot();
      Node node1 = new Node(43, 29, 8);
      node1.setLineno(4);
      node1.isContinue();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node node0 = new Node(38);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node0.setSourceFileForTesting("Ym)$KI=");
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      Node node2 = node1.cloneNode();
      node1.isDefaultCase();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node0);
      node3.useSourceInfoFromForTree(node2);
      node2.getLength();
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = Node.newString(125, ":!!8mEqac0C5m", 125, 125);
      Node node1 = new Node(32, node0, node0, node0, node0, 53, 2);
      node1.copyInformationFrom(node0);
      node1.isQualifiedName();
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = new Node(38, 38, 38);
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      node1.getAncestor(0);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node1.isIf();
      node1.isSwitch();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node node0 = new Node(590);
      Node node1 = new Node(53, node0);
      node1.getChildAtIndex((-1834));
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      Node node1 = new Node(188521);
      node0.addChildToBack(node1);
      node0.getQualifiedName();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node node0 = new Node(13, 3207, 102);
      Node node1 = Node.newString("%fM84, '}=");
      node1.isGetterDef();
      node0.isArrayLit();
      node0.isDec();
      Node node2 = new Node(36, node0, node0, node0);
      node2.removeChildren();
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = new Node(13);
      Node node1 = new Node((-1055));
      node0.getJsDocBuilderForNode();
      node1.srcrefTree(node0);
      node0.addSuppression("5]X");
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node node0 = new Node(38, 38, 38);
      node0.toStringTree();
      Node node1 = new Node(110, node0, node0, 38, 56);
      node1.srcref(node0);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node1.isIf();
      node1.isSwitch();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = new Node(126);
      Node node1 = new Node(48, node0, node0, node0, 4095, 15);
      node0.isVar();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node_AncestorIterable0.spliterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      node1.isCatch();
      node1.isRegExp();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = Node.newString(38, "com.google.javascript.rhino.Node", 29, 1070);
      node0.putIntProp(117, 29);
      Node node1 = node0.cloneNode();
      node1.isSetterDef();
      Node node2 = new Node(46, node0, node1, 49, 32);
      node1.checkTreeEquals(node0);
      node1.isDec();
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = new Node(125);
      node0.isLabel();
      node0.isWith();
      node0.isQualifiedName();
      Node node1 = new Node(31, node0, node0);
      node1.srcref(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("&;uQfC}k72epr", false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got DELPROP
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = Node.newString(29, ":!!8mEqc0C5m", 112, (-1842));
      Node node1 = new Node(41, node0, 1634, 3177);
      Node node2 = new Node(42, node1, node1, node1);
      node2.isOr();
      node1.isNull();
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = new Node(38, 38, 38);
      node0.setSourceFileForTesting("Ym)$KI=");
      node0.toStringTree();
      node0.isString();
      node0.isFromExterns();
      node0.isAnd();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = new Node(39);
      node0.isDelProp();
      Node node1 = node0.cloneTree();
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = new Node(57, node1, node0, 114, 51);
      node1.siblings();
      node1.setWasEmptyNode(false);
      boolean boolean0 = false;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        node2.getExistingIntProp((-188));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -188
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = new Node(152);
      Node node1 = new Node(53, node0, node0, 12, 11);
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isIf();
      Node node2 = Node.newNumber((-204.66367350409942), (-2203), 111);
      node2.isSwitch();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = new Node(39, 39, 39);
      Node[] nodeArray0 = new Node[1];
      Node node1 = new Node(43, node0, node0, 46, 2);
      node0.cloneNode();
      node0.isDefaultCase();
      Node node2 = null;
      try {
        node2 = new Node((-391), nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node node0 = new Node(132);
      Node node1 = new Node(12, node0, 12, 15);
      node0.isVar();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node1.isIf();
      node1.isSwitch();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      node0.isQualifiedName();
      Node node1 = new Node(30, node0, node0);
      Node node2 = new Node(30, node1, node1);
      Node node3 = node2.useSourceInfoFrom(node0);
      Node node4 = Node.newString(4095, "Q!:5jMB:=");
      node4.isAssignAdd();
      node3.isArrayLit();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      Node node0 = new Node(47);
      node0.removeProp(47);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("nT7x+I?=g1%d[}@");
      node0.setWasEmptyNode(true);
      node0.isAnd();
      Node node1 = new Node(29, 47, (-2275));
      Node node2 = new Node(52, node1);
      node2.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node node0 = Node.newString((-1523), "com.google.common.collect.Sets$2");
      Node node1 = new Node(31, node0, node0, node0, node0, 51, 4);
      node0.isTrue();
      node1.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = new Node(153);
      Node node1 = new Node(51, node0, node0, node0, 4096, 153);
      node0.isVar();
      Node node2 = node0.cloneTree();
      Node node3 = Node.newNumber((double) 49, 15, 456);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      node0.isCatch();
      node0.isRegExp();
      Node node4 = node2.clonePropsFrom(node0);
      node2.getLastSibling();
      node2.addChildToBack(node4);
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = new Node(152);
      Node node1 = new Node(42, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.mayMutateGlobalStateOrThrow();
      node1.getSideEffectFlags();
      node1.useSourceInfoFromForTree(node2);
  }
}
