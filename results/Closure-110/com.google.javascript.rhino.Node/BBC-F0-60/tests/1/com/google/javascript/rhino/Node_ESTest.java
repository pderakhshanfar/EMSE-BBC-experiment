/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 07 21:46:21 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.JSTypeExpression;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplateTypeMap;
import com.google.javascript.rhino.jstype.TemplateTypeMapReplacer;
import com.google.javascript.rhino.jstype.TemplatizedType;
import com.google.javascript.rhino.jstype.UnionType;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.ServiceLoader;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-213), (-213));
      node0.isQuotedString();
      node0.mayMutateArguments();
      Node node1 = new Node((-679), node0, node0, 12, (-194));
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "/0RRUDo@nKGjF";
      Node node0 = Node.newString(51, "/0RRUDo@nKGjF", 0, 51);
      Node node1 = new Node(0, node0);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(0, node0, node0, (-121), (-2075));
      int int0 = (-739);
      Node node2 = null;
      try {
        node2 = new Node(48, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[9];
      ObjectType objectType0 = null;
      // Undeclared exception!
      try { 
        ImmutableList.of((JSType) null, (JSType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1531, 1531);
      node0.isWith();
      node0.hasChildren();
      int int0 = 52;
      Node node1 = null;
      try {
        node1 = new Node(0, (Node[]) null, 4095, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = new Node(4095);
      node0.type = (-3211);
      String string0 = "";
      Node node1 = Node.newString(38, "");
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node.newNumber((-2797.335));
      Node node0 = Node.newNumber((double) 56, 12, 869);
      String string0 = "";
      Node node1 = Node.newString(30, "");
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(53, 43, 0);
      Node node2 = new Node(49, node0, node0, node1, 49, 46);
      node0.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getSourceOffset();
      node0.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      node0.getBooleanProp(933);
      node0.isIf();
      node0.setString("i!je6_ ");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 0, 51);
      Node.newNumber(1.0, 39, 132);
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-287), 47, (-793));
      Node node2 = node0.copyInformationFrom(node1);
      node2.isEquivalentToTyped(node0);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(15);
      node0.getCharno();
      String string0 = ".~^qu";
      Node node3 = Node.newString(1349, ".~^qu");
      node3.isEquivalentTo(node1);
      Node node4 = node0.copyInformationFromForTree(node3);
      Node node5 = Node.newString(16, "oUkQmqkxndHuED+8aW");
      node5.isNE();
      node5.setQuotedString();
      node4.getChildAtIndex(0);
      Node.newString(12, "oUkQmqkxndHuED+8aW");
      node1.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-862048943));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got LE
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = new Node(0, 4, (-1570));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = new Node((-1570), node0, node1, node1, 0, 4574);
      node2.isContinue();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(0);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.clearAllFlags();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = new Node((-599), (-599), 0);
      node0.getJsDocBuilderForNode();
      node0.putBooleanProp(0, true);
      node0.getSideEffectFlags();
      node0.isCall();
      Node node1 = new Node(4);
      node1.getDirectives();
      node1.addChildToBack(node0);
      node0.hasChild(node1);
      node1.wasEmptyNode();
      node1.isReturn();
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0);
      Node node1 = new Node(0, node0, node0, node0, node0, 8, (-1096));
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 4095, 0);
      node0.getQualifiedName();
      Node node1 = new Node(0, node0);
      node0.isDelProp();
      node0.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-181));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesThis();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node.newString("");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[2];
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      jSTypeArray0[0] = (JSType) templateType0;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNumberType();
      jSTypeArray0[1] = jSType0;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ProxyObjectType", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node(0, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType.toMaybeFunctionType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionTypeWithNewReturnType((FunctionType) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(43, node0, node0, node0);
      node0.addChildrenToBack(node1);
      node0.setSourceEncodedPosition(4194304);
      Node.newString("#Bs");
      Node.mergeLineCharNo(83, 499);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = new Node((-599), (-599), 0);
      node0.getJsDocBuilderForNode();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      Node node1 = new Node(118, node0, node0, node0);
      nodeArray0[3] = node1;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      Node node2 = null;
      try {
        node2 = new Node((-2766), nodeArray0, (-844), (-76));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      String string0 = "`O";
      int int0 = (-1590);
      Node[] nodeArray0 = new Node[8];
      Node node0 = null;
      try {
        node0 = new Node((-1590), nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.EnumType", 93, 893);
      node1.setSourceEncodedPositionForTree(115);
      node0.isGetterDef();
      node0.isGetElem();
      node1.toStringTree();
      node1.setCharno(93);
      node0.isFromExterns();
      int int0 = Node.OPT_ARG_NAME;
      node0.isOnlyModifiesThisCall();
      node0.getBooleanProp(1960);
      node1.isNull();
      node0.isNull();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      Node node2 = null;
      try {
        node2 = new Node(93, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = Node.newNumber((-3139.73093), (-4802), 102);
      node0.hasMoreThanOneChild();
      node0.getBooleanProp(5760);
      node0.isNull();
      node0.isQuotedString();
      node0.isCase();
      Node node1 = null;
      try {
        node1 = new Node(33, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1814));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      Node node0 = Node.newString(0, "#");
      node0.isGetProp();
      node0.isArrayLit();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = new Node(1419);
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1419
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      int int0 = 0;
      String string0 = "";
      Node node0 = Node.newString(0, "");
      node0.getIntProp(0);
      Node node1 = Node.newNumber((-1.0));
      node1.getJsDocBuilderForNode();
      node0.checkTreeEqualsImpl(node1);
      node0.getInputId();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
      simpleSourceFile0.getLineOffset(31);
      // Undeclared exception!
      try { 
        simpleSourceFile0.getLineOffset(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number 0
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isAnd();
      node0.getProp(132);
      Node node1 = Node.newNumber((double) 40, 29, 0);
      node1.setLineno(0);
      node0.getLastSibling();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      int int0 = (-71);
      Node node0 = Node.newNumber((-4787.95432477));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node1 = null;
      try {
        node1 = new Node(1381, node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(0, node0, node0, node0);
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = node0.cloneNode();
      node1.getSideEffectFlags();
      InputId inputId0 = new InputId((String) null);
      inputId0.toString();
      node2.setInputId(inputId0);
      node0.type = 48;
      node1.setWasEmptyNode(false);
      node1.isStringKey();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ErrorReporter errorReporter0 = null;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseEnumElementType((EnumElementType) null);
      jSTypeArray0[0] = null;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) null, jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isAdd();
      node0.getJSType();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags1.setMutatesThis();
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1769, 1769);
      node0.getProp(1769);
      node0.putProp(1769, (Object) null);
      Node node1 = new Node(40, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node(44, (Node) null, (Node) null, (Node) null, (Node) null, (-1893), 36);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node0 = Node.newNumber(0.0, 536870912, 536870912);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1240, nodeArray0, (-1556), (-1556));
      node0.removeChildren();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = Node.newString((-933), "second new child has existing sibling", 0, 9);
      node0.getIntProp(26);
      node0.setWasEmptyNode(true);
      node0.setVarArgs(true);
      Node node1 = Node.newNumber(0.0, (-405), 46);
      Node.newString(2, "second new child has existing sibling");
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 70, 70);
      node0.toStringTree();
      Node node1 = new Node(102, node0, node0, 2, (-1283));
      Node node2 = Node.newString(8, "NUMBER 0.0 70\n");
      Node node3 = node0.useSourceInfoFromForTree(node2);
      node3.isOnlyModifiesArgumentsCall();
      node0.isAssign();
      node1.isRegExp();
      node1.addChildrenAfter(node2, node3);
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = Node.newNumber(0.0, 48, 50);
      node0.addChildToFront(node1);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("WM*-TYp7^qL{/OYY", true);
      simpleSourceFile0.getLineOffset(54);
      node0.setStaticSourceFile(simpleSourceFile0);
      node0.setDirectives((Set<String>) null);
      node0.isLocalResultCall();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isAdd();
      node0.getJSType();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      Node node1 = new Node(36, node0, node0, 2379, 29);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isEquivalentToTyped(node1);
      String string0 = "ifPT|o@c\\NN1a.F8]";
      Node.newString("ifPT|o@cNN1a.F8]", 4095, 985);
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node.newNumber(2266.688);
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = Node.newString("&L/d-D(eQ", (-154), 0);
      String string0 = "R\"NGgR";
      InputId inputId0 = new InputId("R\"NGgR");
      node0.setInputId(inputId0);
      Node node1 = Node.newString("&L/d-D(eQ");
      node0.setType(2957);
      node0.addChildToFront(node1);
      node1.isEquivalentTo(node0);
      Node node2 = new Node(0, (-3505), 323);
      Node node3 = node2.cloneTree();
      node0.mayMutateArguments();
      Node.newNumber((double) 36, 1048576, 0);
      node3.mayMutateArguments();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("", (-110), (-110));
      node0.putIntProp(699, 699);
      Node.newString("5");
      Node node1 = new Node(16, node0, node0, node0, node0, (-344), 16);
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = Node.newNumber(0.0, 48, 50);
      node0.addChildToFront(node1);
      node0.isLocalResultCall();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = Node.newNumber(1307.65);
      node0.isLocalResultCall();
      Node node1 = new Node(0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      int int0 = 308;
      node1.setSourceEncodedPosition(45);
      // Undeclared exception!
      try { 
        node2.getAncestor((-169));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1769, 1769);
      node0.getProp(1769);
      node0.putProp(1769, (Object) null);
      Node node1 = new Node(40, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags((-1011));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 1769, 1769);
      node0.getProp(1769);
      node0.putProp(1769, (Object) null);
      Node node1 = new Node(40, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-287), 47, (-793));
      Node node2 = node0.copyInformationFrom(node1);
      node2.isEquivalentToTyped(node0);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(15);
      node0.getCharno();
      Node node3 = Node.newString(1349, ".~^qu");
      node3.isEquivalentTo(node1);
      Node node4 = new Node(2731, node2, node0, 37, 2813);
      Node node5 = node1.useSourceInfoFromForTree(node3);
      // Undeclared exception!
      try { 
        node3.checkTreeEquals(node5);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1349
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = new Node(1531);
      Node node1 = new Node((-2538), node0);
      Node node2 = new Node((-1570), node1, node1, node1, node1, 57, 56);
      Node node3 = new Node(2222, node2, node2, 46, (-2492));
      node3.setOptionalArg(false);
      node2.isOnlyModifiesArgumentsCall();
      node1.setSourceEncodedPositionForTree(35);
      node2.isLocalResultCall();
      node1.isGetElem();
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1570
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node.newString(132, "C^DQ9MTr~/JXCbukz");
      Node node0 = new Node(512, 48, 2763);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = null;
      try {
        node2 = new Node(39, node0, node1, (Node) null, 47, (-137));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isAdd();
      node0.getJSType();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesThis();
      Node node1 = Node.newNumber((-2314.0), 77, 51);
      Node.newString("37<FY1.2`!GBtD", 4095, 536870912);
      node0.getQualifiedName();
      Node node2 = new Node(4, node0);
      node2.isDelProp();
      node1.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.isReturn();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      int int0 = Node.MAX_COLUMN_NUMBER;
      node0.isAnd();
      node0.getProp(132);
      Node node1 = Node.newNumber((double) 40, 29, 0);
      node1.setLineno((-31));
      node0.getLastSibling();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isOnlyModifiesThisCall();
      node0.getProp(132);
      node0.isDelProp();
      Node node1 = Node.newNumber(0.0);
      node0.isEquivalentToTyped(node1);
      node0.isCatch();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      int int0 = (-1556);
      Node node0 = new Node(1240, nodeArray0, (-1556), (-1556));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createInterfaceType("`\" WvCn", node0, (ImmutableList<TemplateType>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(43, node0, node0, node0);
      node0.addChildrenToBack(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      // Undeclared exception!
      try { 
        node0.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-287), 47, (-793));
      Node node2 = node0.copyInformationFrom(node1);
      node2.isEquivalentToTyped(node0);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(15);
      node0.getCharno();
      String string0 = ".~^qu";
      Node node3 = Node.newString(1349, ".~^qu");
      node0.isInstanceOf();
      Node node4 = node0.copyInformationFromForTree(node3);
      Node node5 = Node.newString(16, "oUkQmqkxndHuED+8aW");
      node4.siblings();
      node5.isNE();
      node5.setQuotedString();
      node4.getChildAtIndex(0);
      Node.newString(12, "oUkQmqkxndHuED+8aW");
      node1.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-862048943));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got LE
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newNumber(30.889194009979818, 1769, 1769);
      node0.getProp(1769);
      node0.putProp(1769, (Object) null);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      nodeArray0[4] = node0;
      Node node1 = null;
      try {
        node1 = new Node(132, nodeArray0, 105, 2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      int int0 = (-1556);
      Node node0 = Node.newNumber((double) 1779, 1779, 4555);
      Node node1 = new Node(55, node0);
      node1.cloneTree();
      Node node2 = null;
      try {
        node2 = new Node(1779, node1, node0, node1, node1, 48, 51);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = Node.newNumber(0.0, 48, 50);
      node0.addChildToFront(node1);
      node0.isLocalResultCall();
      node1.isGetProp();
      node0.setWasEmptyNode(true);
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = new Node((-599), (-599), 0);
      node0.getJsDocBuilderForNode();
      node0.putBooleanProp(0, true);
      node0.getSideEffectFlags();
      node0.isCall();
      Node node1 = new Node(4);
      node1.getDirectives();
      node0.addChildToBack(node1);
      node0.hasChild((Node) null);
      node1.wasEmptyNode();
      node0.isReturn();
      node1.isWhile();
      node0.getQualifiedName();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = new Node((-599), (-599), 0);
      node0.getJsDocBuilderForNode();
      node0.putBooleanProp((-8), true);
      node0.getSideEffectFlags();
      node0.isCall();
      Node node1 = new Node(4);
      node1.getDirectives();
      node0.addChildToBack(node1);
      Node node2 = Node.newNumber(0.0, 77, (-1));
      Node node3 = null;
      try {
        node3 = new Node(32, node1, node1, node2, 53, 47);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = new Node(50, node0, node0, 40, 48);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newNumber((double) 57);
      node3.isAssign();
      node3.isVar();
      node0.isNoSideEffectsCall();
      node0.isLabelName();
      node1.setSourceFileForTesting("");
      Node node4 = Node.newString("ReferenceError");
      node2.setLength((-3394));
      Node.AncestorIterable node_AncestorIterable0 = node3.getAncestors();
      node_AncestorIterable0.iterator();
      node4.isGetProp();
      node1.setWasEmptyNode(false);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = Node.newNumber(809.884355, (-638), (-638));
      node0.isUnscopedQualifiedName();
      node0.isNew();
      node0.getSourcePosition();
      Node node1 = Node.newNumber((double) 38, 12, 86);
      node1.getIndexOfChild(node0);
      node0.setLineno(39);
      node1.setCharno(40);
      node0.getJsDocBuilderForNode();
      node1.isComma();
      node0.getType();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = ".+b k-tXah";
      Node node0 = Node.newString(".+b k-tXah", (-84), 1779);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setEnumParameterType((JSTypeExpression) null);
      jSDocInfo0.getAssociatedNode();
      Node node1 = null;
      try {
        node1 = new Node(3874, (Node) null, (Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(2219, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = new Node(49, node0, 0, 52);
      node0.addChildToFront(node1);
      node0.isLocalResultCall();
      node1.isGetProp();
      node0.setWasEmptyNode(false);
      node1.getChangeTime();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = "second new child has existing sibling";
      Node node0 = Node.newString((-933), "second new child has existing sibling", 0, 9);
      node0.getIntProp(26);
      node0.setWasEmptyNode(true);
      node0.setVarArgs(true);
      Node node1 = Node.newNumber(0.0, (-405), 46);
      Node node2 = Node.newString(2, "second new child has existing sibling");
      node2.isNoSideEffectsCall();
      node1.isRegExp();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      InputId inputId0 = new InputId("!lW#BM{Mv+S`^zv");
      node_NodeMismatch0.equals(inputId0);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4095, 1177, (-2729));
      node0.getQualifiedName();
      Node node1 = new Node(4095, node0);
      node0.isDelProp();
      node1.isEquivalentToTyped(node0);
      node0.wasEmptyNode();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = "second new child has existing sibling";
      Node node0 = Node.newString((-933), "second new child has existing sibling", 0, 9);
      node0.getIntProp(26);
      node0.setWasEmptyNode(true);
      node0.setVarArgs(true);
      Node node1 = Node.newNumber(0.0, (-405), 46);
      Node node2 = Node.newString(2, "second new child has existing sibling");
      node2.isNoSideEffectsCall();
      node1.isRegExp();
      Node.NodeMismatch node_NodeMismatch0 = node1.checkTreeTypeAwareEqualsImpl(node0);
      InputId inputId0 = new InputId("!lW#BM{Mv+S`^zv");
      node_NodeMismatch0.equals(inputId0);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newNumber((double) 127, 127, 127);
      node0.toStringTree();
      Node node1 = new Node((-1185), node0, node0, 40, 102);
      Node node2 = Node.newString(47, "NUMBER 127.0 127\n");
      node0.isOnlyModifiesArgumentsCall();
      node1.isAssign();
      node2.isRegExp();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = Node.newNumber(1315.717397517951);
      node0.isAdd();
      node0.getJSType();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = Node.newNumber(0.0, (-1527), 103);
      Node node2 = Node.newString("Named type with empty name component", 504, 2483);
      node1.getQualifiedName();
      Node.newString("Not declared as a constructor");
      node2.isCase();
      Node node3 = node2.srcrefTree(node1);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(42);
      node_SideEffectFlags0.clearAllFlags();
      node3.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(1806);
      Node node1 = Node.newNumber((-4430.063406), 507, 12);
      node0.addChildToFront(node1);
      node1.isLocalResultCall();
      node0.isGetProp();
      boolean boolean0 = true;
      Node node2 = null;
      try {
        node2 = new Node(40, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newNumber(30.889194009979818, 1769, 1769);
      node0.getProp(1769);
      node0.putProp(1769, (Object) null);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      nodeArray0[4] = node0;
      node0.getProp((-49));
      InputId inputId0 = new InputId("?M[6`Rs^B,Ox+=i3&");
      node0.setInputId(inputId0);
      node0.isBlock();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = new Node((-932), node0, 43, 32);
      // Undeclared exception!
      try { 
        node1.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node((-599), (-599), 0);
      node0.getJsDocBuilderForNode();
      node0.putBooleanProp(0, true);
      int int0 = Node.IS_NAMESPACE;
      node0.isCall();
      Node node1 = Node.newNumber(Double.POSITIVE_INFINITY, 49238, 36);
      Node node2 = Node.newString(34, "");
      node1.setType(40);
      Node node3 = new Node(Integer.MAX_VALUE, node2, node1, node1, node2, 45, 50);
      // Undeclared exception!
      try { 
        node3.addChildToFront(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = new Node((-933));
      node0.getIntProp(26);
      node0.setWasEmptyNode(false);
      node0.setVarArgs(true);
      Node node1 = new Node(55);
      node1.getDirectives();
      Node node2 = Node.newString("second new child has existing sibling");
      Node node3 = new Node((-1715), node1, node0, node2, node1);
      node1.addChildToBack(node3);
      node1.hasChild(node3);
      node1.wasEmptyNode();
      node3.isReturn();
      node3.isWhile();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 4095, 17);
      node0.getQualifiedName();
      Node node1 = new Node(17, node0);
      node0.isString();
      node0.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isOnlyModifiesThisCall();
      node0.getProp(132);
      node0.isDelProp();
      Node node1 = new Node(45, node0);
      Node node2 = node1.useSourceInfoFrom(node0);
      node1.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newNumber(1307.65);
      node0.isAdd();
      node0.getJSType();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = Node.newNumber(0.0, (-1527), 103);
      Node node2 = Node.newString("Named type with empty name component", 504, 2483);
      node1.getQualifiedName();
      Node node3 = new Node(527, node0);
      node0.isDelProp();
      node1.isEquivalentToTyped(node3);
      node2.removeProp(15);
      node0.isGetProp();
      node3.isCatch();
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isLocalResultCall();
      Node node1 = new Node(16);
      Node node2 = new Node(57);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = new Node(15, node2, node0, node1, node3);
      node4.setSourceEncodedPosition(57);
      node0.getAncestor(54);
      node4.getSourceOffset();
      Node node5 = null;
      try {
        node5 = new Node((-194), (Node) null, node3, node3, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newNumber(809.884355, (-638), (-638));
      node0.isUnscopedQualifiedName();
      node0.isNew();
      node0.getSourcePosition();
      Node node1 = Node.newNumber((double) 38, 12, 86);
      node1.getIndexOfChild(node0);
      node0.setLineno(39);
      node1.type = 42;
      node1.setCharno(40);
      node0.getJsDocBuilderForNode();
      node1.isComma();
      node0.getType();
      node1.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = Node.newString(50, "/0RRUDo@nKGjF", 0, 50);
      Node node1 = Node.newNumber((double) 57, 43, 38);
      node0.isUnscopedQualifiedName();
      node1.isNew();
      node1.getSourcePosition();
      Node node2 = Node.newNumber((double) 48, 50, 9);
      Node node3 = Node.newNumber((double) 0, (-126), 42);
      node3.getIndexOfChild(node2);
      // Undeclared exception!
      try { 
        node3.replaceChild(node2, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = null;
      try {
        node0 = new Node(1240, nodeArray0, (-1556), (-1556));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newString((-933), "second new child has existing sibling", 0, 9);
      node0.getJsDocBuilderForNode();
      Node node1 = Node.newString("");
      node1.putBooleanProp(0, true);
      node0.getSideEffectFlags();
      node1.isCall();
      Node node2 = new Node(2041);
      node1.getDirectives();
      node2.addChildToBack(node1);
      node0.hasChild(node1);
      node0.wasEmptyNode();
      node2.isReturn();
      node2.isWhile();
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4095, 1177, (-2729));
      node0.getQualifiedName();
      // Undeclared exception!
      try { 
        Node.newString(51, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isEquivalentToTyped(node1);
      String string0 = "ifPT|o@c\\NN1a.F8]";
      Node.newString("ifPT|o@cNN1a.F8]", 4095, 985);
      node1.removeFirstChild();
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newNumber((-0.43533126089253726));
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isEquivalentToTyped(node1);
      Node node3 = Node.newString("Df9g<;JBR],", 29, 5478);
      node3.getString();
      node1.isQuotedString();
      Node node4 = Node.newString(36, "Df9g<;JBR],");
      node0.addChildToBack(node3);
      node4.isIf();
      Node node5 = Node.newString("");
      node2.isVoid();
      node5.srcrefTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      node_SideEffectFlags0.clearAllFlags();
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getSourceOffset();
      node0.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.getBooleanProp(933);
      node1.isOptionalArg();
      node0.isIf();
      node0.setString("i!je6_ ");
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getSourceOffset();
      node0.isQualifiedName();
      node0.getSideEffectFlags();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isEquivalentTo(node0);
      node0.getBooleanProp(933);
      node0.isEquivalentToShallow(node1);
      node0.setString("i!je6_ ");
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(1240);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isOnlyModifiesThisCall();
      node0.getProp(3615);
      node0.isDelProp();
      Node node1 = Node.newNumber((double) 31);
      node1.isEquivalentToTyped(node0);
      node1.isCatch();
      Node node2 = Node.newNumber(1.0, 4095, 102);
      Node node3 = new Node(1230, node0, node0, node2, node0, 50, 52);
      // Undeclared exception!
      try { 
        node3.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1230
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = new Node((-599), (-599), 0);
      node0.getJsDocBuilderForNode();
      node0.putBooleanProp(0, true);
      node0.getSideEffectFlags();
      node0.isCall();
      Node node1 = new Node(4);
      node1.getDirectives();
      node0.addChildToBack(node1);
      node0.hasChild((Node) null);
      node1.wasEmptyNode();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      nodeArray0[3] = null;
      nodeArray0[4] = node0;
      nodeArray0[5] = null;
      nodeArray0[6] = null;
      nodeArray0[7] = node1;
      Node node2 = null;
      try {
        node2 = new Node(153, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newString((-933), "second new child has existing sibling", 0, 9);
      Node node1 = Node.newString("");
      node1.putBooleanProp(0, true);
      node0.getSideEffectFlags();
      node1.isCall();
      node1.setSourceFileForTesting("");
      Node node2 = new Node(2041);
      node1.getDirectives();
      node2.addChildToBack(node1);
      node2.isSwitch();
      node0.wasEmptyNode();
      node2.isReturn();
      node2.isWhile();
      node2.getQualifiedName();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 0
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = new Node(50, node0, node0, 40, 48);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newNumber((double) 57);
      node3.isAssign();
      node3.isVar();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node2;
      nodeArray0[1] = node3;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node node4 = null;
      try {
        node4 = new Node((-2258), nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = new Node(50, node0, node0, 40, 48);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newNumber((double) 57);
      node3.isAssign();
      node3.isVar();
      node0.isNoSideEffectsCall();
      node0.isLabelName();
      node1.setSourceFileForTesting("");
      Node node4 = Node.newString("ReferenceError");
      node2.isEquivalentTo(node4);
      node2.setLength((-3394));
      Node.AncestorIterable node_AncestorIterable0 = node3.getAncestors();
      node_AncestorIterable0.iterator();
      node4.isGetProp();
      node1.setWasEmptyNode(false);
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isLocalResultCall();
      Node node1 = new Node(16);
      Node node2 = new Node(38, 2, 16);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = new Node(15, node2, node0, node1, node3);
      node4.setSourceEncodedPosition(57);
      node0.getAncestor(54);
      node4.getSourceOffset();
      Node node5 = null;
      try {
        node5 = new Node((-194), (Node) null, node3, node3, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString((-933), "second new child has existing sibling", 0, 9);
      node0.getJsDocBuilderForNode();
      Node node1 = Node.newString("");
      node1.putBooleanProp(0, true);
      node0.getSideEffectFlags();
      node1.isCall();
      Node node2 = new Node(2041);
      node1.getDirectives();
      node0.getInputId();
      node0.setInputId((InputId) null);
      node2.setType(4095);
      node2.detachChildren();
      node2.addChildToBack(node1);
      node0.hasChild(node1);
      node0.wasEmptyNode();
      node2.isReturn();
      node2.isWhile();
      node2.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1814));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      Node node0 = Node.newString(";SHH1?wO8(80z", (-1814), 63);
      node0.getAncestors();
      node0.setString("VOID_TYPE");
      node0.isDefaultCase();
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = new Node((-599), (-599), 0);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(42);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isFor();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isOnlyModifiesThisCall();
      node0.getProp(132);
      node0.isDelProp();
      Node node1 = Node.newNumber(0.0);
      node1.toString();
      node0.isInstanceOf();
      node0.isCatch();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = Node.newNumber(807.92789713031, (-638), (-638));
      node0.isUnscopedQualifiedName();
      node0.isNew();
      node0.getSourcePosition();
      Node node1 = Node.newNumber((double) 38, 12, 16);
      Node node2 = Node.newString("|X6gXo", 8, 2766);
      Node.AncestorIterable node_AncestorIterable0 = node2.getAncestors();
      node_AncestorIterable0.iterator();
      try { 
        node1.setString("Y0%{IB(J8W");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 38.0 12 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isEquivalentToTyped(node1);
      Node node3 = null;
      try {
        node3 = new Node(8192, node1, node0, node2, 15, 827);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1814));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      Node node0 = Node.newString(";SHH1?wO8(80z", (-1814), 63);
      Node.AncestorIterable node_AncestorIterable1 = node0.getAncestors();
      node_AncestorIterable1.iterator();
      node0.setString("VOID_TYPE");
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-287), 47, (-793));
      Node node2 = node0.copyInformationFrom(node1);
      node2.isEquivalentToTyped(node0);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(15);
      node0.getCharno();
      Node node3 = Node.newString(1349, ".~^qu");
      node3.isEquivalentTo(node1);
      Node node4 = new Node(2731, node2, node0, 37, 2813);
      Node node5 = null;
      try {
        node5 = new Node(52, node0, node1, node1, node4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      Node node1 = new Node(56, node0, node0, 31, 2);
      node1.getIntProp(8);
      node1.isString();
      node0.isEquivalentToTyped(node1);
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 4095, 17);
      node0.getQualifiedName();
      node0.getSourceOffset();
      node0.isAnd();
      node0.getProp(4095);
      Node.newNumber((-1589.2131160039), 56, 49);
      node0.setLineno((-344));
      node0.getLastSibling();
      node0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(2194, 2194, (-1407));
      Node node1 = new Node(105, node0, node0, node0);
      node0.checkTreeEqualsImpl(node1);
      Node.newString(8, "", 358, (-2867));
      node0.getJsDocBuilderForNode();
      node0.type = 133;
      node0.isScript();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(51);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 133
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isVarArgs();
      node0.getQualifiedName();
      node0.isOnlyModifiesThisCall();
      Node node1 = node0.cloneTree();
      node1.getSourceFileName();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = new Node((-2847));
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.mayMutateGlobalStateOrThrow();
      node0.isVarArgs();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1814));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags4.setReturnsTainted();
      Node node0 = Node.newString(";SHH1?wO8(80z", (-1814), 63);
      node0.getString();
      Node.AncestorIterable node_AncestorIterable1 = node0.getAncestors();
      node_AncestorIterable1.iterator();
      node0.setString("VOID_TYPE");
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newNumber(30.889194009979818, 1769, 1769);
      node0.getProp(1769);
      node0.putProp(1769, (Object) null);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      node0.isEquivalentTo(node0);
      node0.setLength(105);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isGetProp();
      node0.setWasEmptyNode(true);
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getSourceOffset();
      node0.isQualifiedName();
      int int0 = Node.MAX_COLUMN_NUMBER;
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.isStringKey();
      node0.getString();
      Node node1 = new Node(762, node0);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = node2.srcref(node0);
      node3.getBooleanProp(1);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      int int0 = (-1556);
      Node node0 = Node.newNumber((double) 1779, 1779, 4555);
      Node node1 = new Node(55, node0);
      Node node2 = node1.cloneTree();
      node2.putIntProp(436, 53);
      node2.isStringKey();
      node1.cloneTree();
      node2.isCall();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 1779.0 1779 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1779, 1779, 4555);
      Node node1 = new Node(55, node0);
      Node node2 = node1.cloneTree();
      node2.putIntProp(436, 53);
      node0.getDirectives();
      node1.getInputId();
      node2.setInputId((InputId) null);
      node1.setType(54);
      node2.detachChildren();
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(43, node0, node0, node0);
      node0.addChildrenToBack(node1);
      node0.setSourceEncodedPosition(4194304);
      Node node2 = Node.newString("#Bs");
      node2.addSuppression("is_namespace");
      Node.mergeLineCharNo(83, 499);
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-287), 47, (-793));
      Node node2 = new Node(16, node0, node0);
      Node node3 = null;
      try {
        node3 = new Node(58, node1, node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 4095, 17);
      node0.getQualifiedName();
      Node node1 = new Node(17, node0);
      try { 
        node1.setString((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // GE is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = Node.newNumber((-0.43533126089253726));
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isEquivalentToTyped(node1);
      Node node3 = Node.newString("Df9g<;JBR],", 29, 5478);
      node3.getString();
      node1.isQuotedString();
      Node node4 = Node.newString(36, "Df9g<;JBR],");
      node0.addChildToBack(node3);
      node4.isIf();
      node2.isVoid();
      node1.srcrefTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(43);
      node3.isWhile();
      node4.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getSourceOffset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = new Node((-2847));
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isExprResult();
      node0.isVarArgs();
      Node node1 = new Node(2, node0, node0, node0, node0);
      node1.isLocalResultCall();
      node0.isParamList();
      node1.isHook();
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isAnd();
      node0.getProp(132);
      Node node1 = Node.newNumber((double) 40, 29, 0);
      node1.setLineno(0);
      node0.getLastSibling();
      node0.getChildCount();
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1814));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(3917);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node node0 = Node.newNumber(0.0, (-1527), 3917);
      Node.newString("B4r", (-1814), 8);
      node0.getQualifiedName();
      Node.newString("wA7idfaZF#%Bp_.w");
      // Undeclared exception!
      try { 
        node0.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newString(455, "g93N", (-2260), (-2260));
      Node node1 = new Node(4095);
      node0.copyInformationFromForTree(node1);
      Node node2 = new Node((-2260), node0, node0);
      node2.isCatch();
      node2.isAdd();
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newNumber(30.889194009979818, 1769, 1769);
      node0.getProp(1769);
      node0.putProp(1769, (Object) null);
      Node[] nodeArray0 = new Node[9];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      node0.isEquivalentTo(node0);
      node0.isEquivalentTo(node0, true, false, false);
      Node.newString("Q#CwQryC'R_-sI%tD");
      node0.isVoid();
      Node node1 = null;
      try {
        node1 = new Node(55, nodeArray0, 1769, 41);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = new Node(50, node0, node0, 40, 48);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newNumber((double) 57);
      node3.isAssign();
      node3.isVar();
      node0.isNoSideEffectsCall();
      node0.isLabelName();
      node1.setSourceFileForTesting("i4D $_;UP2u^d/PQ]");
      Node node4 = Node.newString("ReferenceError");
      node2.setLength((-3394));
      Node.AncestorIterable node_AncestorIterable0 = node3.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node1.isNumber();
      node2.setSourceFileForTesting("com.google.common.base.Predicates$ContainsPatternPredicate");
      node2.setLength(122);
      node4.isAnd();
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = Node.newString("|^DQ9MT>~/tXCbukz", 34, (-2710));
      node0.getAncestors();
      node0.isNumber();
      node1.setSourceFileForTesting("quoted");
      Node node2 = new Node(40);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(false);
      node0.isOnlyModifiesArgumentsCall();
      node0.setLength(153);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isNumber();
      node0.setSourceFileForTesting("");
      node0.setLength(132);
      node0.isAnd();
      node0.isCall();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = new Node(50, node0, node0, 40, 48);
      node1.useSourceInfoFromForTree(node0);
      node0.isOnlyModifiesArgumentsCall();
      Node node2 = Node.newNumber((double) 57);
      node2.isAssign();
      node2.isVar();
      node0.isNoSideEffectsCall();
      node0.isLabelName();
      node1.setSourceFileForTesting("i4D $_;UP2u^d/PQ]");
      node0.isAnd();
      Node node3 = Node.newString("i4D $_;UP2u^d/PQ]", 102, 43);
      node2.getQualifiedName();
      Node node4 = Node.newString("\"oZd*zZZ>]DTf6H8%n");
      node4.isVoid();
      Node node5 = Node.newString(1, "i4D $_;UP2u^d/PQ]");
      node5.copyInformationFromForTree(node1);
      Node node6 = new Node(54, node4, node4, node5, node5);
      node6.srcrefTree(node3);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1255));
      node_SideEffectFlags0.clearAllFlags();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newNumber(2.3763108460939124);
      Node node1 = node0.srcref(node0);
      node1.isStringKey();
      Node node2 = new Node(4095, node1, 51, 53);
      node2.setOptionalArg(false);
      node2.isOnlyModifiesArgumentsCall();
      node2.setLength(4095);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node1.isNumber();
      node2.setSourceFileForTesting("");
      node0.setLength(42);
      Node node3 = null;
      try {
        node3 = new Node(36, node0, node2, node1, node0, 83, 4943);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node(0, 4, (-1570));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = new Node((-1570), node0, node1, node1, 0, 4555);
      node2.isContinue();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = Node.newString((-933), "second new child has existing sibling", 0, 9);
      node0.getIntProp(26);
      node0.isVarArgs();
      node0.getQualifiedName();
      Node node1 = new Node((-1810), node0, node0, node0, 0, 0);
      node1.isOnlyModifiesThisCall();
      Node node2 = node0.cloneTree();
      node2.getSourceFileName();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      // Undeclared exception!
      try { 
        node3.addChildrenAfter(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node node0 = Node.newString(";SHH1?wO8(80z", 30, 39);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newString((-933), "second new child has existing sibling", 0, 9);
      node0.isNew();
      node0.getSourcePosition();
      Node node1 = Node.newNumber((double) 38, 4095, 40);
      int int0 = 401;
      Node node2 = Node.newNumber((double) 1, 83, 54);
      Node node3 = new Node(1931, node1, node2, 17, 213);
      Node node4 = null;
      try {
        node4 = new Node(52, node1, node1, node1, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newNumber(809.884355, (-638), (-638));
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$AbstractPropListItem");
      node0.putBooleanProp(52, false);
      node0.getSideEffectFlags();
      node1.isCall();
      node0.setSourceFileForTesting("");
      Node node2 = new Node(16);
      node0.getDirectives();
      node0.addChildToBack(node1);
      Node node3 = null;
      try {
        node3 = new Node(49, node1, 1304, 48);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = new Node(50, node0, node0, 40, 48);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newNumber((double) 57);
      node3.isAssign();
      node3.isVar();
      node2.copyInformationFromForTree(node1);
      int int0 = (-1204);
      Node node4 = null;
      try {
        node4 = new Node(2, node3, node2, node0, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = Node.newString(455, "g93N", (-2260), (-2260));
      Node node1 = new Node(4095);
      node1.isNoSideEffectsCall();
      node0.isLabelName();
      node0.setSourceFileForTesting("g93N");
      Node node2 = Node.newString("ReferenceError");
      node2.getProp(55);
      InputId inputId0 = new InputId("");
      node0.setInputId(inputId0);
      node2.isBlock();
      Node node3 = new Node((-814), node1, node1, node2);
      Node node4 = null;
      try {
        node4 = new Node(47, node2, node3, node0, node2, 2, 56);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      int int0 = 132;
      String string0 = "|^DQ9MT>~/tXCbukz";
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      Node node1 = new Node(4095);
      node0.addChildrenToFront(node1);
      node0.isGetElem();
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-213), (-213));
      node0.isQuotedString();
      node0.mayMutateArguments();
      Node node1 = new Node((-679), node0, node0, 12, (-194));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(29);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node node2 = new Node(54);
      node2.getIndexOfChild(node1);
      node1.setLineno(2);
      node1.setCharno(54);
      node2.getJsDocBuilderForNode();
      node0.isComma();
      node1.getType();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = Node.newNumber((-3139.73093), (-4802), 102);
      node0.hasMoreThanOneChild();
      node0.getBooleanProp(5760);
      node0.isNull();
      node0.isQuotedString();
      node0.isCase();
      node0.isOptionalArg();
      node0.getLength();
      node0.isThis();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseEnumElementType((EnumElementType) null);
      jSTypeArray0[0] = null;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      Node node0 = jSTypeRegistry1.createParameters(jSTypeArray0);
      Node node1 = new Node((-703), node0, (-1562), 4095);
      node1.isDo();
      Node node2 = Node.newString(1, "Object#Element");
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("Not declared as a type name", node2, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      EnumElementType enumElementType0 = null;
      modificationVisitor0.caseEnumElementType((EnumElementType) null);
      jSTypeArray0[0] = null;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isQualifiedName();
      node1.isOnlyModifiesThisCall();
      node1.isIf();
      try { 
        node1.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000341] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node node0 = Node.newNumber((-3139.73093), (-4802), 102);
      node0.hasMoreThanOneChild();
      node0.getProp((-659));
      node0.isDelProp();
      Node node1 = Node.newNumber(2551.70716);
      node1.isEquivalentToTyped(node0);
      node1.isCatch();
      Node node2 = Node.newNumber((double) 39, 57, 4095);
      Node node3 = new Node(321, node0, node0, node1, node2, 102, (-1057));
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 2551.70716 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(1240);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isOnlyModifiesThisCall();
      node0.getBooleanProp(3093);
      node0.isNull();
      node0.isQuotedString();
      node0.isCase();
      Node node1 = Node.newString(1712, "STRING com.google.javascript.rhino.jstype.EnumType 0\n");
      node1.isOptionalArg();
      node1.getLength();
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1814));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node node0 = Node.newString("q)XP*[", (-1814), (-1814));
      node0.getQualifiedName();
      Node node1 = Node.newString("q)XP*[");
      node1.isVoid();
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = Node.newNumber((-3139.73093), (-4802), 102);
      node0.hasMoreThanOneChild();
      node0.getBooleanProp(5760);
      node0.isNull();
      node0.detachChildren();
      node0.isQuotedString();
      node0.isNull();
      node0.isOptionalArg();
      node0.getLength();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-287), node0, node0, node0);
      Node node2 = node0.copyInformationFrom(node1);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(15);
      node0.getCharno();
      Node node3 = Node.newString(1349, ".~^qu");
      node3.isEquivalentTo(node1);
      Node node4 = null;
      try {
        node4 = new Node(2731, node2, node0, 37, 2859);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = Node.newNumber(2.3763108460939124);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isStringKey();
      Node node3 = Node.newString("Df9g<;JBR],", 29, 5478);
      node3.getString();
      node1.isQuotedString();
      Node node4 = Node.newString(36, "Df9g<;JBR],");
      node0.addChildToBack(node3);
      node1.isTrue();
      node2.isVoid();
      // Undeclared exception!
      try { 
        node4.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Node node0 = Node.newString(0, "n'", 0, 0);
      node0.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getTypedefType();
      jSDocInfo0.setType((JSTypeExpression) null);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isSyntheticBlock();
      node1.isOptionalArg();
      node0.isIf();
      node0.setString("i!je6_ ");
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node node0 = new Node(4555);
      Node node1 = new Node(130, node0);
      Node node2 = node1.cloneTree();
      node2.putIntProp(436, 53);
      node2.isStringKey();
      node1.cloneTree();
      node2.isCall();
      // Undeclared exception!
      try { 
        node0.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4555
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node.newNumber((-1626.29091), (-4759), 102);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      // Undeclared exception!
      try { 
        Node.newString((String) null, 47, (-480));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = new Node(4, node0, node0);
      node1.hasMoreThanOneChild();
      node0.getBooleanProp(49);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -703
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newNumber(1315.717397517951);
      node0.isAdd();
      node0.getJSType();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = Node.newString(52, "yxLt\"42-X&z,}Ku56e^/");
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node2);
      node1.isEquivalentToShallow(node0);
      try { 
        node0.setString("J=s-O-;");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 1315.717397517951 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = new Node(310);
      node0.isCatch();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newNumber(1.2, 32, (-464));
      node0.isCase();
      node1.setSourceFileForTesting("#{UAB]");
      node0.isAnd();
      node1.isEquivalentTo(node0);
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(145, "DATA_FLOW", 145, 145);
      node0.isSyntheticBlock();
      node0.setWasEmptyNode(true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node0.srcrefTree(node1);
      // Undeclared exception!
      try { 
        node0.setDouble(145);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 145
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = new Node(0);
      // Undeclared exception!
      try { 
        node0.setDouble(2870.68791900936);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        node0.setDouble(276.880203203);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = new Node(0, 4, (-1570));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = new Node((-1570), node0, node1, node1, 0, 4555);
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-287), 47, (-793));
      Node node2 = node0.copyInformationFrom(node1);
      node2.isEquivalentToTyped(node0);
      node2.setSourceEncodedPositionForTree(8);
      node0.setType(15);
      node0.getCharno();
      Node node3 = Node.newString(1352, ".~^qu");
      node0.isInstanceOf();
      Node node4 = node0.copyInformationFromForTree(node3);
      Node node5 = Node.newString(16, "oUkQmqkxndHuED+8aW");
      node4.siblings();
      node5.isNE();
      node5.setQuotedString();
      Node node6 = null;
      try {
        node6 = new Node(2048, (Node[]) null, 8, (-448));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = new Node(310);
      node0.isCatch();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newNumber(1.2, 32, (-464));
      node0.isComma();
      node1.setSourceFileForTesting("#{UAB]");
      node0.isAnd();
      node1.isEquivalentTo(node0);
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getSourceOffset();
      node0.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.getBooleanProp(933);
      node1.isOptionalArg();
      node0.isIf();
      node0.isSetterDef();
      node0.isAnd();
      node1.isBlock();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      Node.newString("");
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.isGetElem();
      node0.setSourceEncodedPosition(46);
      Node node1 = Node.newString("q\"z@15z");
      node1.addSuppression("q\"z@15z");
      Node.mergeLineCharNo(48, (-2232));
      node1.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(43, node0, node0, node0);
      node0.addChildrenToBack(node1);
      node1.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = false;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, boolean0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateTypeMap templateTypeMap0 = null;
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry1, templateTypeMap0);
      JSType jSType0 = templateTypeMapReplacer0.caseAllType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      int int0 = 11;
      node2.setCharno(int0);
      Node node3 = Node.newNumber((double) jSType0.NOT_ENUMDECL);
      node3.isFromExterns();
      node0.getSourceOffset();
      node1.isOnlyModifiesThisCall();
      int int1 = 3486;
      node2.getBooleanProp(int1);
      node2.isNull();
      node3.isQuotedString();
      node1.isCase();
      Node node4 = Node.newString(node1.VAR_ARGS_NAME, jSType0.NOT_A_TYPE);
      node4.isOptionalArg();
      node2.getLength();
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = new Node((-1829), (-1829), 1376);
      Node node1 = Node.newString(42, "y.2", (-1362), 36);
      Node node2 = new Node(12, node0, node1, node1, node1, 4095, 51);
      Node node3 = node0.useSourceInfoIfMissingFrom(node2);
      // Undeclared exception!
      try { 
        node3.removeChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getSourceOffset();
      node0.isQualifiedName();
      node0.getSourceOffset();
      node0.isQualifiedName();
      int int0 = Node.MAX_COLUMN_NUMBER;
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = Node.newString((-156), "\n\nSubtree2: ");
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.isEquivalentTo(node1);
      Node node3 = new Node(55, 50, (-2089));
      node1.isEquivalentToShallow(node3);
      // Undeclared exception!
      try { 
        node3.setString("inferred");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 55
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      Node node1 = Node.newNumber(6010.984462, 57, 54);
      node1.getQualifiedName();
      Node node2 = new Node(1043, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node3.isDelProp();
      node1.isEquivalentToTyped(node0);
      node1.wasEmptyNode();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(1240);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isOnlyModifiesThisCall();
      node0.getBooleanProp(46);
      int int0 = (-2292);
      String string0 = null;
      // Undeclared exception!
      try { 
        Node.newString(64, (String) null, (-1), 50);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isIf();
      node0.getSourceOffset();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = Node.newString("5wr7EjSggH", 34, (-2710));
      node0.getAncestors();
      Node node2 = node1.copyInformationFromForTree(node0);
      node0.srcrefTree(node2);
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(5017);
      node_SideEffectFlags1.clearAllFlags();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isEquivalentToTyped(node1);
      Node node3 = Node.newString("ifPT|o@cNN1a.F8]", 4095, 985);
      node1.removeFirstChild();
      node1.detachChildren();
      node0.isQuotedString();
      Node node4 = Node.newString(2, "", 69, 69);
      node0.addChildToBack(node4);
      node3.isIf();
      node3.isEquivalentTo(node0, false, false, false);
      Node node5 = Node.newString("ifPT|o@cNN1a.F8]");
      node3.isVoid();
      node5.srcrefTree(node3);
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.getSourceOffset();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = Node.newString("|^DQ9MT>~/tXCbukz", 42, (-2707));
      node0.getAncestors();
      node1.isTry();
      node1.setSourceFileForTesting("quoted");
      Node node2 = new Node(40);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getSourceOffset();
      node0.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.getBooleanProp(933);
      node1.isOptionalArg();
      node1.isTypeOf();
      node0.setString("i!je6_ ");
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164604692674942));
      Node node1 = new Node(2, node0, node0, node0, node0, 32, 56);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isEquivalentToTyped(node0);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(15);
      Node node3 = Node.newString(1349, ".~^qu");
      node0.isInstanceOf();
      Node node4 = node0.copyInformationFromForTree(node3);
      Node node5 = Node.newString(16, "oUkQmqkxndHuED+8aW");
      node4.siblings();
      node5.isNE();
      node5.setQuotedString();
      node1.isWhile();
      node3.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newNumber((-1358.2983181794875));
      Node node1 = new Node(4840, node0, node0, node0, node0, 51, (-2249));
      Node node2 = node0.copyInformationFrom(node1);
      node1.isEquivalentToTyped(node0);
      node2.setSourceEncodedPositionForTree(114);
      node1.setType(8);
      Node node3 = Node.newString(40, ".~^qu");
      node2.isInstanceOf();
      Node node4 = node2.copyInformationFromForTree(node1);
      Node.newString(154, "");
      node4.siblings();
      node3.isNE();
      // Undeclared exception!
      try { 
        node4.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-287), 47, (-793));
      Node node2 = node0.copyInformationFrom(node1);
      node2.isEquivalentToTyped(node0);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(39);
      node0.getCharno();
      Node node3 = Node.newString(1349, ".~^qu");
      node3.isEquivalentTo(node1);
      Node node4 = node0.copyInformationFromForTree(node3);
      Node node5 = Node.newString(16, "oUkQmqkxndHuED+8aW");
      node5.setQuotedString();
      node4.getChildAtIndex(0);
      Node.newString(12, "oUkQmqkxndHuED+8aW");
      node1.setIsSyntheticBlock(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-862048943));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164604692674942));
      Node node1 = new Node(2, node0, node0, node0, node0, 32, 56);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isEquivalentToTyped(node0);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(15);
      Node node3 = Node.newString(1349, ".~^qu");
      node0.isInstanceOf();
      Node node4 = node0.copyInformationFromForTree(node3);
      node4.getJSDocInfo();
      Node node5 = Node.newString(16, "oUkQmqkxndHuED+8aW");
      node4.siblings();
      node5.isNE();
      node5.setQuotedString();
      node1.isWhile();
      node3.getQualifiedName();
      node3.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3#IILV+k{a");
      Node node0 = new Node((-2867));
      node0.getStaticSourceFile();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.isExprResult();
      node0.isVarArgs();
      Node node1 = new Node(2, node0, node0, node0, node0);
      node1.isLocalResultCall();
      node0.isParamList();
      node1.isHook();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(37);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isEquivalentToTyped(node1);
      Node node3 = Node.newString("ifPT|o@cNN1a.F8]", 4095, 985);
      node1.removeFirstChild();
      node1.detachChildren();
      node0.isQuotedString();
      Node node4 = Node.newString(2, "", 69, 69);
      node2.addChildToBack(node4);
      node3.isIf();
      Node node5 = Node.newString(52, "String node not created with Node.newString");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node6 = node0.setJSDocInfo(jSDocInfo0);
      node1.isEquivalentTo(node6);
      node6.isEquivalentToShallow(node0);
      node5.setString("The existing child node of the parent should not be null.");
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newNumber(2.3763108460939124);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isStringKey();
      Node node3 = Node.newString("Df9g<;JBR],", 29, 5478);
      node3.getString();
      node3.isNoSideEffectsCall();
      node1.isQuotedString();
      Node.newString(36, "Df9g<;JBR],");
      node0.addChildToBack(node3);
      node1.isTrue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags5.clearAllFlags();
      Node node4 = Node.newString(2876, "nS-");
      node0.isLocalResultCall();
      node4.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164604692674942));
      Node node1 = new Node(2, node0, node0, node0, node0, 32, 56);
      Node node2 = node0.copyInformationFrom(node1);
      node0.isSwitch();
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(15);
      Node node3 = Node.newString(1349, ".~^qu");
      node0.isInstanceOf();
      node0.copyInformationFromForTree(node3);
      Node node4 = Node.newString(16, "oUkQmqkxndHuED+8aW");
      node4.isThis();
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      node3.isExprResult();
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = node0.cloneTree();
      node1.isStringKey();
      node0.cloneTree();
      node1.isCall();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // EXPR_RESULT is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = new Node(2708);
      node0.getQualifiedName();
      Node node1 = Node.newNumber(1284.0753, 53, (-380));
      node1.addChildToFront(node0);
      node0.isLocalResultCall();
      node1.isDefaultCase();
      node0.isQualifiedName();
      Node node2 = Node.newNumber((-318.87042746322885), 2, (-1304));
      node1.copyInformationFromForTree(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoType();
      node0.setJSType(jSType0);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newNumber(2.3763108460939124);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isStringKey();
      Node node3 = Node.newString("Df9g<;JBR],", 29, 5478);
      node3.getString();
      node1.isQuotedString();
      Node.newString(36, "Df9g<;JBR],");
      node0.addChildToBack(node3);
      node2.isQuotedString();
      node3.getIntProp(32);
      Node node4 = Node.newString(16, " is not a number node", (-1), (-1494));
      node0.addChildToBack(node1);
      node2.isIf();
      Node node5 = Node.newString(39, "', '");
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node6 = node3.setJSDocInfo(jSDocInfo0);
      node5.isEquivalentTo(node0);
      node4.isEquivalentToShallow(node6);
      try { 
        node2.setString("SYNTAX_ERROR_FUNCTION_TYPE");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 2.3763108460939124 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Node node0 = new Node(57, 57, 57);
      node0.getJsDocBuilderForNode();
      node0.putBooleanProp((-599), true);
      node0.getSideEffectFlags();
      Node node1 = new Node((-50), node0, 57, 479);
      node0.isEquivalentTo(node1);
      node0.setLength(52);
      node0.getAncestors();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node1.isGetProp();
      node1.setWasEmptyNode(false);
      node0.isThrow();
      node0.isGetterDef();
      node1.addSuppression("com.google.common.collect.Lists$TransformingSequentialList");
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(962, nodeArray0, 47, (-4642));
      node0.removeChildren();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isTry();
      Node node1 = Node.newString("|^DQ9MT>~/tXCbukz", 4095, 38);
      node1.putIntProp(39, 54);
      node0.isQualifiedName();
      node1.wasEmptyNode();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node node0 = Node.newNumber(2.3763108460939124);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isStringKey();
      Node.newString("Df9g<;JBR],", 29, 5478);
      node1.getCharno();
      String string0 = null;
      // Undeclared exception!
      try { 
        Node.newString((-862), (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 4095, 17);
      node0.getQualifiedName();
      Node node1 = new Node(17, node0);
      node0.setChangeTime(35);
      node0.isString();
      node0.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 4095, 17);
      node0.getQualifiedName();
      Node node1 = new Node(17, node0);
      Node.newNumber((-1.0), 3505, (-526));
      node1.toStringTree();
      node0.isString();
      node0.isEquivalentToTyped(node1);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isAnd();
      Node node1 = Node.newString("|^DQ9MT>~/tXCbukz", 4095, 4095);
      node1.getQualifiedName();
      node0.isVoid();
      node1.srcrefTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(101);
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = Node.newNumber(2.3763108460939124);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isStringKey();
      Node node3 = Node.newString("Df9g<;JBR],", 29, 5478);
      node3.getString();
      node1.isQuotedString();
      Node node4 = Node.newString(36, "Df9g<;JBR],");
      node0.addChildToBack(node3);
      node1.isTrue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags5.clearAllFlags();
      // Undeclared exception!
      try { 
        node1.getChildBefore(node4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-287), 47, (-789));
      Node node2 = node0.copyInformationFrom(node1);
      node2.isEquivalentToTyped(node0);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(15);
      node0.getCharno();
      Node node3 = new Node(1, 31, 4095);
      node3.isEquivalentTo(node1);
      Node node4 = new Node(2731, node2, node0, 37, 2813);
      Node node5 = node1.useSourceInfoFromForTree(node3);
      // Undeclared exception!
      try { 
        node3.checkTreeEquals(node5);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[3];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      EnumElementType enumElementType0 = null;
      modificationVisitor0.caseEnumElementType((EnumElementType) null);
      jSTypeArray0[0] = null;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.isEquivalentTo(node0, true, true, true);
      node1.isOnlyModifiesThisCall();
      node1.isIf();
      try { 
        node1.setString("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000341] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("{S.j");
      mockPrintWriter0.format("{S.j", (Object[]) nodeArray0);
      node0.appendStringTree(mockPrintWriter0);
      Node node1 = new Node(93, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.PrototypeObjectType");
      node0.isDec();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isEquivalentToTyped(node1);
      Node node3 = Node.newString("ifPT|o@cNN1a.F8]", 4095, 985);
      Node node4 = node1.removeFirstChild();
      node1.detachChildren();
      node0.isQuotedString();
      Node node5 = Node.newString(2, "", 69, 69);
      node0.addChildToBack(node5);
      node3.isIf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      Node node6 = null;
      try {
        node6 = new Node(2146955101, node4, node5, node2, 32, 106);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      int int0 = 132;
      String string0 = "|^DQ9MT>~/tXCbukz";
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      Node node1 = new Node(4095);
      // Undeclared exception!
      try { 
        node1.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.setVarArgs(true);
      Node node1 = Node.newNumber((double) 30, 57, 56);
      Node node2 = Node.newString(54, "");
      node2.isNoSideEffectsCall();
      node0.isRegExp();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      InputId inputId0 = new InputId("|irN8k lXJ_,/:Zp");
      node1.setCharno(50);
      node0.isFromExterns();
      node1.getSourceOffset();
      node1.isAnd();
      Node node3 = Node.newString("|irN8k lXJ_,/:Zp", 47, 50);
      node3.putIntProp(2, 42);
      node3.isStringKey();
      Node node4 = node2.cloneTree();
      node1.isEquivalentToShallow(node4);
      node4.getSourceFileName();
      node4.setWasEmptyNode(false);
      node0.isCall();
      node4.getString();
      Node.extractLineno(15);
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      MockFile.createTempFile("]'rEl", "]'rEl");
      Node node0 = Node.newString((-514), "]'rEl");
      Node node1 = new Node((-514), node0, 56, 2);
      Node node2 = new Node((-514), node1);
      Node node3 = null;
      try {
        node3 = new Node((-514), node2, node0, 31, (-2166));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isEquivalentToTyped(node1);
      Node node3 = Node.newString("ifPT|o@cNN1a.F8]", 4095, 985);
      Node node4 = node1.removeFirstChild();
      node1.detachChildren();
      node1.isEquivalentTo(node4, false, false, false);
      node0.isQuotedString();
      Node node5 = Node.newString(2, "", 69, 69);
      node0.addChildToBack(node5);
      node3.isIf();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      Node node6 = null;
      try {
        node6 = new Node(2146955101, node4, node5, node2, 32, 106);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newNumber(714.8979197069, 1779, 4555);
      Node node1 = new Node(49, node0);
      Node node2 = node1.cloneTree();
      node1.putIntProp(46, 56);
      node2.isStringKey();
      node0.cloneTree();
      node1.isCall();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 714.8979197069 1779 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("hu!*yEP8,I%@+ h[", 1073741823, 606);
      nodeArray0[0] = node0;
      Node node1 = new Node(108, nodeArray0);
      Node node2 = null;
      try {
        node2 = new Node(1073741823, node1, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.setVarArgs(true);
      Node node1 = new Node(36, node0, node0, node0, node0, 40, 56);
      Node node2 = node1.copyInformationFrom(node0);
      node0.isEquivalentToTyped(node2);
      node0.setSourceEncodedPositionForTree(40);
      Node.newString(153, "ERROR");
      node2.isInstanceOf();
      Node node3 = new Node(1060, 29, 12);
      node3.copyInformationFromForTree(node0);
      Node.newNumber((double) 39);
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(2, node0, node0, node0, node0, 32, 56);
      Node node2 = node0.copyInformationFrom(node1);
      node0.type = 0;
      node2.isEquivalentToTyped(node0);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(15);
      Node node3 = Node.newString(1349, ".~^qu");
      node0.isInstanceOf();
      node0.copyInformationFromForTree(node3);
      Node.newString(16, "oUkQmqkxndHuED+8aW");
      Node node4 = Node.newString(".~^qu");
      node3.isOnlyModifiesArgumentsCall();
      node0.isGetProp();
      node4.isArrayLit();
      node0.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newNumber((-547.34168));
      node0.getDirectives();
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164604692674942));
      Node node1 = new Node(2, node0, node0, node0, node0, 32, 56);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isEquivalentToTyped(node0);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(15);
      Node node3 = Node.newString("");
      node1.addChildBefore(node3, node0);
      Node.newString(1349, ".~^qu");
      node0.isInstanceOf();
      Node node4 = new Node(47);
      Node node5 = Node.newString(16, "oUkQmqkxndHuED+8aW");
      node4.siblings();
      node5.isNE();
      node5.setQuotedString();
      node1.isWhile();
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node node0 = Node.newString("input_id");
      try { 
        node0.setDouble((-8.032021787327118));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING input_id is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 4095, 17);
      node0.getQualifiedName();
      Node node1 = Node.newNumber(1284.0753, 53, (-380));
      node1.addChildToFront(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(57);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(4);
      node_SideEffectFlags1.clearAllFlags();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      try { 
        node0.setString("<CO7&s[~]\b:%Ps");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 17.0 4095 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = Node.newString(47, "DEFAULT_CASE", 126, 52);
      Node node2 = new Node((-2729), node0, node0, node0, node1, 50, 42);
      Node node3 = node2.copyInformationFrom(node1);
      node1.isEquivalentToTyped(node2);
      node0.setSourceEncodedPositionForTree(40);
      node3.setType(115);
      Node node4 = Node.newString(3211, "Should not happen\n");
      node4.isInstanceOf();
      node0.copyInformationFromForTree(node1);
      Node.newString(1, "ASSIGN_ADD");
      Node.newString("F~F3Sl[gp%%");
      node3.isOnlyModifiesArgumentsCall();
      node2.isGetProp();
      node3.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isAnd();
      Node node1 = Node.newString("|^DQ9MT>~/tXCbukz", 4095, 4095);
      node1.isIf();
      node1.isSetterDef();
      node1.isAnd();
      node1.isBlock();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("|oi8=fDes");
      node0.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-380), (-750), (-2702));
      Node node1 = new Node(29, node0, node0, node0, node0);
      node0.addChildToFront(node1);
      node1.isLocalResultCall();
      node0.isDec();
      node1.isSetterDef();
      node0.isFor();
      node1.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = Node.newString(0, "");
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(2143);
      node0.isLocalResultCall();
      node0.isGetElem();
      Node node1 = Node.newNumber((double) 32, 54, 42);
      node1.toStringTree();
      node1.setCharno(53);
      node0.isFromExterns();
      node1.getSourceOffset();
      node0.isAnd();
      Node node2 = Node.newString("", 4011, 52);
      node1.isIf();
      node0.isSetterDef();
      node0.isAnd();
      node2.isBlock();
      node2.getJsDocBuilderForNode();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("NUMBER 32.0 54\n");
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Node node0 = Node.newString(1002, "");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(101);
      node0.isGetterDef();
      node0.isGetElem();
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1002
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(1240);
      node0.isFromExterns();
      int int0 = Node.OPT_ARG_NAME;
      node0.isOnlyModifiesThisCall();
      node0.getBooleanProp(1240);
      node0.isNull();
      node0.isNull();
      node0.isCase();
      Node node1 = Node.newString(12, "STRING com.google.javascript.rhino.jstype.EnumType 0\n");
      Node node2 = Node.newString("STRING com.google.javascript.rhino.jstype.EnumType 0\n");
      node2.isOptionalArg();
      int int1 = Node.QUOTED_PROP;
      node1.toString(false, true, false);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.isLocalResultCall();
      Node node1 = new Node(16);
      Node node2 = new Node(38, 2, 16);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      Node node4 = new Node(15, node2, node0, node1, node3);
      // Undeclared exception!
      try { 
        node4.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getSourceOffset();
      node0.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.getBooleanProp(937);
      node1.isOptionalArg();
      node1.isTypeOf();
      Node node2 = null;
      // Undeclared exception!
      try { 
        node1.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCXuzkz");
      Node node1 = Node.newNumber((double) 43, 53, 53);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      Node node3 = new Node((-800), node2, node1, 4095, 49);
      Node node4 = node1.useSourceInfoFromForTree(node0);
      node3.isOnlyModifiesArgumentsCall();
      Node node5 = Node.newNumber(Double.POSITIVE_INFINITY);
      node0.isAssign();
      node3.isLabelName();
      node1.setSourceFileForTesting("|^DQ9MT>~/tXCXuzkz");
      Node.newString("|^DQ9MT>~/tXCXuzkz");
      InputId inputId0 = new InputId("|^DQ9MT>~/tXCXuzkz");
      node4.setInputId(inputId0);
      node5.isIn();
      node3.getDirectives();
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      String string0 = "|^DQ9MT>~/tXCbukz";
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1, true, false, false);
      node0.isOnlyModifiesThisCall();
      node1.isIf();
      node1.setString("");
      Node node2 = null;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node3 = Node.newString(2235, "Object#Key", 54, 1);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<TemplateType> immutableList0 = ImmutableList.copyOf((Iterator<? extends TemplateType>) iterator0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createConstructorType("", node3, node3, (JSType) null, immutableList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newString("|^DQ9MT>~/tXCbukz");
      node1.setSourceEncodedPositionForTree(126);
      node0.isLocalResultCall();
      node1.isGetElem();
      node0.toStringTree();
      node1.setCharno(2751);
      node0.isFromExterns();
      Node node2 = new Node(51, 3576, 30);
      node2.getSourceOffset();
      node2.isAnd();
      Node.newString("SCRIPT |^DQ9MT>~/tXCbukz 0\n", 3796, 359);
      node1.putIntProp(4095, (-541));
      node0.isStringKey();
      Node node3 = node2.cloneTree();
      node3.isCall();
      node0.getString();
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags1.setReturnsTainted();
      Node.mergeLineCharNo(57, (-2725));
      Node node1 = Node.newNumber((double) 2);
      node0.checkTreeEquals(node1);
      node0.isAssignAdd();
      node1.isTypeOf();
      node0.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.isOptionalArg();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(962, nodeArray0, 47, (-4642));
      node0.removeChildren();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isQuotedString();
      node0.mayMutateArguments();
      Node node1 = Node.newNumber((double) 1, 114, 226);
      node0.addChildToFront(node1);
      node0.isGetProp();
      node0.type = 114;
      node0.isEmpty();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = new Node(1240);
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.isGetElem();
      node0.setSourceEncodedPosition(29);
      Node node1 = Node.newString("q\"z@15z");
      node1.isQualifiedName();
      int int0 = Node.OPT_ARG_NAME;
      Node node2 = new Node(55, 1518, 46);
      node2.addSuppression("q\"z@15z");
      node2.isExprResult();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node1.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.PrototypeObjectType");
      node0.setSourceFileForTesting("com.google.javascript.rhino.jstype.PrototypeObjectType");
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.getSideEffectFlags();
      node0.isCall();
      Node node1 = new Node(42);
      node1.getDirectives();
      node1.addChildToBack(node0);
      node0.hasChild((Node) null);
      node0.wasEmptyNode();
      node1.isReturn();
      node0.isWhile();
      Node.newNumber(3222.5658568);
      node1.getQualifiedName();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node node0 = Node.newNumber((-894.1113492030587));
      Node node1 = new Node(1060, node0);
      node1.isQuotedString();
      node1.mayMutateArguments();
      Node node2 = Node.newNumber((double) 42, 8, (-2847));
      node1.addChildToFront(node2);
      node2.isGetProp();
      node1.isArrayLit();
      node2.isBreak();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isEquivalentToTyped(node1);
      Node node3 = Node.newString("ifPT|o@cNN1a.F8]", 4095, 985);
      Node node4 = node1.removeFirstChild();
      node2.getInputId();
      node1.detachChildren();
      node0.isQuotedString();
      Node.AncestorIterable node_AncestorIterable0 = node4.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.isNumber();
      node1.setLength(3);
      node2.isAnd();
      node3.isCall();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno((-1168));
      node0.isFromExterns();
      node0.getSourceOffset();
      Node node1 = new Node(98, node0, node0, node0, node0, (-5443), 0);
      node1.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.mergeLineCharNo(1157, 1);
      Node node2 = Node.newNumber((double) 0);
      node1.checkTreeEquals(node2);
      node1.isAssignAdd();
      node0.isTypeOf();
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node0.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = new Node(2170, 2170, (-1407));
      Node node1 = new Node(105, node0, node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(120, node1, node1, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.setSourceEncodedPosition(46);
      Node node1 = new Node(98);
      node0.getDirectives();
      node0.addChildToBack(node1);
      node1.setIsSyntheticBlock(false);
      Node node2 = Node.newString("com.google.javascript.rhino.jstype.EnumType", 1468, 53);
      node2.isSwitch();
      node0.wasEmptyNode();
      node0.isWith();
      node1.isWhile();
      node1.getJsDocBuilderForNode();
      node0.getQualifiedName();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING com.google.javascript.rhino.jstype.EnumType 0 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1814));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = new Node(46);
      int int0 = Node.JSDOC_INFO_PROP;
      node0.setLineno(130);
      node0.setCharno(112);
      node0.getJsDocBuilderForNode();
      node0.isComma();
      node0.getType();
      node0.isQualifiedName();
      node0.isThrow();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isAnd();
      Node node1 = Node.newString("|^DQ9MT>~/tXCbukz", 4095, 30);
      node1.putIntProp(39, 30);
      node0.isStringKey();
      Node node2 = node1.cloneTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.addChildToFront(node3);
      node1.isCall();
      node1.getString();
      node0.isQuotedString();
      node0.isParamList();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = new Node(57, 57, 57);
      node0.getJsDocBuilderForNode();
      node0.getSideEffectFlags();
      node0.isCall();
      Node node1 = new Node(309);
      node1.getDirectives();
      node0.addChildToBack(node1);
      node0.getChildBefore(node1);
      node1.hasChild((Node) null);
      node1.wasEmptyNode();
      node0.isReturn();
      node1.isWhile();
      Node.newNumber(1.0);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(758);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 758
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node node0 = new Node(2176, 2176, (-1407));
      Node node1 = new Node(42, node0, node0, 39, 2);
      node0.checkTreeEqualsImpl(node1);
      node0.getJsDocBuilderForNode();
      node0.type = 133;
      node0.isScript();
      node0.isDec();
      node0.getChildCount();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      node0.isTrue();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags4.clearAllFlags();
      Node node1 = new Node(16, node0, node0, node0, node0);
      node1.getChildBefore(node0);
      Node node2 = Node.newString(0, "SCRIPT C^DQ9MTr~/JXCbukz 0 [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000002]\n");
      node1.isOptionalArg();
      node2.getLength();
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isQuotedString();
      node0.mayMutateArguments();
      Node node1 = Node.newNumber((double) 1, 114, 226);
      node0.addChildToFront(node1);
      node0.isGetProp();
      node1.getDouble();
      node0.type = 114;
      node0.isEmpty();
      node0.copyInformationFrom(node1);
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      Node node0 = Node.newNumber((-0.43533126089253726));
      Node node1 = new Node((-934), node0, node0);
      Node node2 = node0.srcref(node1);
      node2.isEquivalentToTyped(node1);
      Node node3 = Node.newString("Df9g<;JBR],", 29, 5478);
      node3.getString();
      node1.isQuotedString();
      Node node4 = Node.newString(36, "Df9g<;JBR],");
      node0.addChildToBack(node3);
      node4.isIf();
      node2.isVoid();
      node1.srcrefTree(node0);
      node3.getSourceFileName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node3.isOptionalArg();
      int int0 = Node.QUOTED_PROP;
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"k(J@");
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.isSetterDef();
      node0.getBooleanProp(12);
      node0.isNull();
      Node node1 = Node.newString(16, "Object#Key", 51, 4119);
      node1.isNull();
      node0.isCase();
      Node.newString(36, "");
      Node node2 = Node.newString("9LFa\"tQeR");
      node2.isOptionalArg();
      int int0 = Node.QUOTED_PROP;
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node1 = Node.newString("SCRIPT |^DQ9MT>~/tXCbukz 0 [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000002]\n", 50, 3176);
      node1.isIf();
      node1.isSetterDef();
      node0.isAnd();
      node0.isBlock();
      Node node2 = new Node(8, node1, 46, 2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("SCRIPT |^DQ9MT>~/tXCbukz 0 [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000002]\n");
      node2.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newNumber((double) 29, 93, 51);
      node0.addChildToFront(node1);
      node1.isGetProp();
      node0.isArrayLit();
      node1.isBreak();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node node0 = Node.newString((-895), "second new child has existing sibling", (-895), 9);
      Node node1 = Node.newString("");
      node1.putBooleanProp(0, false);
      node0.getSideEffectFlags();
      node1.isCall();
      node1.setSourceFileForTesting("");
      Node node2 = Node.newString("second new child has existing sibling");
      node1.isAssignAdd();
      Node.mergeLineCharNo(6, 8388608);
      Node node3 = new Node(4, 1, 2803);
      node1.addSuppression("");
      node2.isName();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node1.isHook();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      String string0 = "|^DQ9MT>~/tXCbukz";
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(false);
      node0.isOnlyModifiesArgumentsCall();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(962, nodeArray0, 47, (-4642));
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = Node.newString((-933), "second new child has existing sibling", 0, 9);
      Node node1 = Node.newString("");
      node1.putBooleanProp(0, true);
      node0.getSideEffectFlags();
      node1.isCall();
      node1.setSourceFileForTesting("");
      Node node2 = new Node(2041);
      node1.getDirectives();
      node2.addChildToBack(node1);
      node2.setIsSyntheticBlock(false);
      node2.isSwitch();
      node0.wasEmptyNode();
      node1.isWith();
      node2.isWhile();
      node0.getJsDocBuilderForNode();
      node2.getQualifiedName();
      node0.isGetProp();
      node0.isArrayLit();
      node2.isBreak();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      Node node1 = new Node(1, node0, node0, 38, 1632);
      node0.checkTreeEqualsImpl(node1);
      node1.getJsDocBuilderForNode();
      node0.isScript();
      Node node2 = null;
      try {
        node2 = new Node(3761, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newString("_");
      node0.setSourceEncodedPositionForTree(132);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      node0.isFromExterns();
      Node node1 = Node.newNumber((double) 2, 112, 57);
      node0.addChildToFront(node1);
      node1.isGetProp();
      node1.isEmpty();
      node0.copyInformationFrom(node1);
      Node node2 = Node.newString(57, "STRING _ 0\n", 1, 43);
      node2.isThis();
      // Undeclared exception!
      try { 
        node1.getAncestor((-1168));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = Node.newString((-933), "second new child has existing sibling", (-19), 9);
      node0.getIntProp(26);
      node0.isVarArgs();
      node0.getQualifiedName();
      Node node1 = new Node(42, node0, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = node0.cloneTree();
      node2.getSourceFileName();
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      // Undeclared exception!
      try { 
        node3.addChildrenAfter(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 4095, 17);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("BO");
      Node node1 = new Node(117);
      node0.getDirectives();
      node0.addChildToBack(node1);
      node1.isSwitch();
      node0.wasEmptyNode();
      node1.isReturn();
      node1.isWhile();
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      Node.newString(931, "Node has existing properties.");
      InputId inputId0 = new InputId((String) null);
      node0.setInputId(inputId0);
      node0.setDirectives((Set<String>) null);
      node0.isBlock();
      node1.isIn();
      node0.isGetterDef();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = new Node(57, 57, 57);
      node0.getJsDocBuilderForNode();
      node0.getSideEffectFlags();
      node0.isCall();
      Node node1 = new Node(309);
      node1.getDirectives();
      node0.addChildToBack(node1);
      node0.getChildBefore(node1);
      Node node2 = null;
      node1.isCatch();
      Node node3 = new Node(32);
      // Undeclared exception!
      try { 
        node3.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isFor();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.removeFirstChild();
      node0.isDelProp();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = new Node(50, node0, node0, 40, 48);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newNumber((double) 57);
      node3.isAssign();
      node3.isVar();
      node0.isNoSideEffectsCall();
      node0.isLabelName();
      node1.setSourceFileForTesting("");
      Node node4 = Node.newString("ReferenceError");
      node3.getProp(54);
      InputId inputId0 = new InputId("o");
      inputId0.toString();
      node3.setInputId(inputId0);
      node4.isBlock();
      node2.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isLabelName();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.addChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      node0.getSourceOffset();
      Node node1 = Node.newNumber((double) 48, 47, 31);
      node0.addChildToFront(node1);
      node0.isGetProp();
      node1.isEmpty();
      node0.isQualifiedName();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      node0.isThrow();
      node0.isFalse();
      node0.isDo();
      node0.isLabelName();
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node.extractCharno(3436);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node0 = null;
      String string0 = null;
      JSType[] jSTypeArray0 = new JSType[6];
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createInterfaceType((String) null, (Node) null, (ImmutableList<TemplateType>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(false);
      node0.isOnlyModifiesArgumentsCall();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(56, nodeArray0, 43, 1);
      node1.putProp(927, "|^DQ9MT>~/tXCbukz");
      Node node2 = null;
      try {
        node2 = new Node(30, node0, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = new Node(57, 57, 57);
      node0.getJsDocBuilderForNode();
      node0.getSideEffectFlags();
      node0.isCall();
      Node node1 = new Node(309);
      node1.getJSDocInfo();
      node1.getDirectives();
      node0.isCall();
      Node node2 = new Node(170);
      Node.newString("NNxgD\"m?qg6(");
      node0.isDec();
      node2.isDo();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable((Node) null);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1814));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.clearSideEffectFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = new Node(46);
      int int0 = Node.JSDOC_INFO_PROP;
      node0.setLineno(130);
      node0.setCharno(112);
      node0.getJsDocBuilderForNode();
      node0.isComma();
      int int1 = Node.NO_SIDE_EFFECTS;
      node0.isQualifiedName();
      node0.isThrow();
      node0.isOr();
      node0.isDo();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = new Node(4115);
      node0.getJsDocBuilderForNode();
      Node node1 = Node.newString(294, "6!%S*C*pQs7$1Pw%");
      node0.isNoSideEffectsCall();
      node0.checkTreeEqualsImpl(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      InputId inputId0 = new InputId("-u3dFZn'");
      Node node2 = Node.newString("|irN8k lXJ_,/:Zp");
      Node node3 = Node.newString("!lW#BM{Mv+S`^zv", 47, 8202);
      node0.setType(8);
      node1.getSideEffectFlags();
      node1.isName();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6!%S*C*pQs7$1Pw%");
      node3.isRegExp();
      node2.getProp(32);
      node1.getNext();
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164604692674942));
      Node node1 = new Node(2, node0, node0, node0, node0, 32, 56);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(16, nodeArray0, (-129), 4);
      node2.removeChildren();
      Node node3 = null;
      try {
        node3 = new Node(0, node2, (Node) null, (-1464), 4095);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node node0 = new Node(4115);
      Node node1 = Node.newString("New Collection violated the Collection spec");
      node1.setSourceEncodedPositionForTree(47);
      Node node2 = new Node(1240, node0, node1, node0, 15, 16);
      node2.isIf();
      node2.isGetElem();
      node1.toStringTree();
      node0.setCharno(3174);
      node2.isFromExterns();
      int int0 = Node.OPT_ARG_NAME;
      node2.isTry();
      node1.getBooleanProp(47);
      node0.isNull();
      node0.isNull();
      node2.isCase();
      node1.addSuppression("New Collection violated the Collection spec");
      node0.isName();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.setJSDocInfo(jSDocInfo0);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString("");
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.mayMutateArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      node0.addChildToFront(node0);
      node0.isEmpty();
      Node node1 = Node.newString("C^DQ9MTr~/JXCbukz", (-2859), 4);
      node1.isTypeOf();
      node1.srcref(node0);
      Node.newString(57, "", 1, 36);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      int int0 = 132;
      Node node0 = Node.newNumber((-3139.73093));
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node node0 = Node.newString(132, "", 132, 132);
      node0.getSourceOffset();
      Node node1 = new Node(36, node0, node0, 1, 3135);
      node1.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.setSourceEncodedPosition(38);
      Node node2 = Node.newString("");
      Node.mergeLineCharNo(56, (-672));
      node0.isGetElem();
      node2.isFunction();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = new Node(4115);
      node0.getJsDocBuilderForNode();
      Node node1 = Node.newString(294, "6!%S*C*pQs7$1Pw%");
      node0.isNoSideEffectsCall();
      node0.checkTreeEqualsImpl(node1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      InputId inputId0 = new InputId("-u3dFZn'");
      Node node2 = new Node(1, node1, node1, node1, node1);
      Node node3 = Node.newString("!lW#BM{Mv+S`^zv", 47, 8202);
      node0.setType(8);
      node1.getSideEffectFlags();
      node2.isSyntheticBlock();
      node1.isName();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6!%S*C*pQs7$1Pw%");
      node3.hasChildren();
      node2.getProp(32);
      node1.getNext();
      node0.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno((-1168));
      node0.isFromExterns();
      node0.getSourceOffset();
      Node node1 = new Node(98, node0, node0, node0, node0, (-5443), 0);
      node1.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.mergeLineCharNo(1157, 1);
      Node node2 = Node.newNumber((double) 0);
      node1.checkTreeEquals(node2);
      node1.isAssignAdd();
      node1.isThis();
      Node node3 = Node.newNumber((-3139.73093));
      node3.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.wasEmptyNode();
      Node node1 = new Node(1978, node0, 15, 15);
      node1.setLength((-272));
      node1.isWhile();
      Node node2 = node1.getLastSibling();
      node2.getBooleanProp(37);
      node1.isNew();
      node1.isWith();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ");ZC;\"0pt");
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isOptionalArg();
      Node node1 = new Node(15, node0, node0, 2, 30);
      node0.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      node0.setSourceEncodedPosition(87855567);
      Node.mergeLineCharNo(83, 39);
      node1.isGetElem();
      node0.isFunction();
      node1.isContinue();
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = Node.newString(100, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(false);
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(591);
      Node node1 = new Node(4095, node0);
      node0.checkTreeEqualsImpl(node1);
      node1.getJsDocBuilderForNode();
      node1.isScript();
      Node node2 = Node.newString("r7\"|", 1, 111);
      node2.isDec();
      node0.getChildCount();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-287), 47, (-789));
      Node node2 = node1.copyInformationFrom(node0);
      node1.isThrow();
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(39);
      node0.getCharno();
      Node node3 = Node.newString(1349, ".~^qu");
      node3.isEquivalentTo(node1);
      Node node4 = node0.copyInformationFromForTree(node3);
      node3.setQuotedString();
      node4.getChildAtIndex(0);
      Node node5 = Node.newString(12, ".~^qu");
      node4.isQuotedString();
      node1.isCase();
      // Undeclared exception!
      try { 
        node5.getExistingIntProp(51);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 51
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MMTJTXb-kz");
      node0.setOptionalArg(true);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setSourceEncodedPositionForTree((-893));
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno((-893));
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isTry();
      Node node1 = Node.newString("", (-3491), 52);
      node0.putIntProp(1486, 8);
      node1.isQualifiedName();
      node1.wasEmptyNode();
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      InputId inputId0 = new InputId("com.google.common.base.Predicates$ObjectPredicate");
      Node node0 = Node.newString("|irN8k lXJ_,/:Zp");
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isThrow();
      node0.getAncestors();
      node0.isFalse();
      node0.isDo();
      node0.putIntProp(154, (-439));
      node0.isLabelName();
      node0.isUnscopedQualifiedName();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = Node.newString(13, "");
      Node node1 = new Node(13, node0, node0, node0, (-1847748528), 51);
      node1.children();
      node1.isNot();
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MMTJTXb-kz");
      node0.setOptionalArg(true);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(39);
      node0.isFromExterns();
      node0.getSourceOffset();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2656);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.putIntProp(92, 0);
      node0.isLabelName();
      node0.isUnscopedQualifiedName();
      node0.getParent();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      node0.isEquivalentTo(node0, false, true, true);
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      node0.removeProp(31);
      Node node1 = null;
      try {
        node1 = new Node(39, nodeArray0, 12, (-3804));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node node0 = Node.newNumber(0.7);
      Node node1 = Node.newNumber((double) 2);
      node0.srcref(node1);
      node0.isEquivalentToTyped(node1);
      Node.newString("Df9g<;JBR],", (-441), 4096);
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 2.0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = Node.newString("", (-952), 253);
      Node node1 = new Node((-952), node0, node0);
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = Node.newString(47, "DEFAULT_CASE", 126, 52);
      Node node2 = new Node((-2729), node0, node0, node0, node1, 50, 42);
      Node node3 = node2.copyInformationFrom(node1);
      node1.isEquivalentToTyped(node2);
      node0.setSourceEncodedPositionForTree(40);
      node3.setType(115);
      Node node4 = Node.newString(3211, "Should not happen\n");
      node4.isInstanceOf();
      Node node5 = node0.copyInformationFromForTree(node1);
      Node.newString(1, "ASSIGN_ADD");
      Node node6 = Node.newString("F~F3Sl[gp%%");
      node6.toString(false, false, false);
      node3.isOnlyModifiesArgumentsCall();
      node2.isGetProp();
      node3.isArrayLit();
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeEqualsImpl(node0);
      node_NodeMismatch0.equals(node5);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      node0.isFromExterns();
      node0.isFromExterns();
      node0.getSourceOffset();
      Node node1 = Node.newNumber((-136.76));
      node1.isTry();
      Node node2 = Node.newString("STRING com.google.javascript.rhino.jstype.EnumType 0\n", 211, (-1));
      node2.putIntProp(1501, 285);
      node0.isQualifiedName();
      node1.wasEmptyNode();
      node1.isContinue();
      node2.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(false);
      Node node1 = Node.newString(51, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$ObjectPropListItem");
      node0.setInputId(inputId0);
      node0.setWasEmptyNode(false);
      node0.isBlock();
      node1.isContinue();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SCRIPT |^DQ9MT>~/tXCbukz [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000004] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 4095, 17);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("BOTH");
      Node node1 = new Node(117);
      node0.getDirectives();
      node0.addChildToBack(node1);
      node1.isSwitch();
      node0.wasEmptyNode();
      node1.isReturn();
      node1.isWhile();
      node0.getQualifiedName();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      Node node2 = node0.removeChildren();
      node2.toStringTree();
      node1.isDebugger();
      node2.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Node node0 = new Node(48);
      Node node1 = new Node((-1039), node0, node0, node0);
      node1.isName();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " 88cDU\\`_s$U");
      node0.isRegExp();
      node1.getProp(46);
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      Node node1 = Node.newString(32, "com.google.javascript.rhino.jstype.EnumType");
      Node node2 = new Node(55, node0, node1, node0, 30, 0);
      node2.children();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-380), (-750), (-2702));
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.addChildToFront(node0);
      node0.isLocalResultCall();
      node0.isDec();
      node0.isSetterDef();
      node0.isFor();
      node0.getIndexOfChild(node0);
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = new Node(17);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("BOTH");
      Node node1 = new Node(47);
      node0.getDirectives();
      Node node2 = Node.newString(117, "\n\nTree2:\n");
      node2.addChildToBack(node0);
      node0.isSwitch();
      node2.wasEmptyNode();
      node0.isReturn();
      node1.isWhile();
      node2.getQualifiedName();
      Node node3 = node2.removeChildren();
      node1.toStringTree();
      node1.isDebugger();
      node3.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = Node.newNumber((-894.1113492030587));
      Node node1 = new Node(1060, node0);
      node1.isQuotedString();
      node1.mayMutateArguments();
      int int0 = (-2847);
      // Undeclared exception!
      try { 
        node1.toString(true, false, true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1060
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newString(100, "|^DQ9MT>~/tXCbukz");
      node0.getAncestors();
      node0.setOptionalArg(true);
      node0.setLength(132);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isNumber();
      node0.setSourceFileForTesting("");
      node0.setLength(100);
      node0.isAnd();
      node0.isCall();
      node0.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isFor();
      node0.isGetElem();
      node0.setChangeTime(132);
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isDelProp();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-744), (-744), (-2702));
      Node node1 = new Node(29, node0, node0, node0, node0);
      node0.addChildToFront(node1);
      node0.isEquivalentToShallow(node1);
      node1.detachFromParent();
      node1.isLocalResultCall();
      node0.isDec();
      node1.siblings();
      node1.isSetterDef();
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.setVarArgs(true);
      Node node1 = Node.newNumber((double) 30, 57, 56);
      Node node2 = Node.newString(54, "");
      node2.isNoSideEffectsCall();
      node2.isEquivalentTo(node1, true, false, true);
      node1.checkTreeEqualsImpl(node2);
      node0.useSourceInfoFromForTree(node2);
      InputId inputId0 = new InputId("|irN8k lXJ_,/:Zp");
      Node.newString("|irN8k lXJ_,/:Zp");
      Node node3 = Node.newString("!lW#BM{Mv+S`^zv", 4095, 99);
      node3.setType(54);
      Node node4 = Node.newString("NNxgD\"m?qg6(");
      node4.isDec();
      node4.isDo();
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.mayMutateArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.addChildToFront(node0);
      node1.isLocalResultCall();
      node1.isDec();
      node0.isSetterDef();
      node0.isFor();
      node0.getIndexOfChild(node1);
      node1.isInc();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      InputId inputId0 = new InputId("com.google.common.base.Predicates$ObjectPredicate");
      Node node0 = Node.newString("");
      node0.isString();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newNumber((-3139.73093), 46, 31);
      node1.addChildToFront(node0);
      node0.isGetProp();
      node1.getDouble();
      node0.isEmpty();
      node0.copyInformationFrom(node1);
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.mayMutateArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-4096));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setReturnsTainted();
      node0.putIntProp(31, 4);
      node0.isQualifiedName();
      node1.wasEmptyNode();
      Node node2 = Node.newNumber((double) 36, 39, 16);
      node2.isContinue();
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno((-1168));
      node0.isFromExterns();
      node0.getSourceOffset();
      Node node1 = new Node(98, node0, node0, node0, node0, (-5443), 0);
      node1.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.siblings();
      node1.isSetterDef();
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 4095, 17);
      node0.getQualifiedName();
      Node node1 = Node.newString("p?PtPh]6_4e<JT", 0, 43);
      node1.getString();
      node0.isQuotedString();
      Node.newString(35, "Ay|=2");
      node1.addChildToBack(node0);
      node1.isTrue();
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(48);
      Node node1 = new Node((-1039), node0, node0, node0);
      node1.isName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags3.setMutatesGlobalState();
      node1.isGetProp();
      node1.isArrayLit();
      node1.isBreak();
      node1.isVar();
      node_SideEffectFlags0.valueOf();
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = Node.newNumber((double) 30, 57, 56);
      Node node2 = Node.newString(54, "");
      node2.isNoSideEffectsCall();
      node1.checkTreeEqualsImpl(node2);
      InputId inputId0 = new InputId("|irN8k lXJ_,/:Zp");
      Node.newString("|irN8k lXJ_,/:Zp");
      Node node3 = Node.newString("!lW#BM{Mv+S`^zv", 4095, 99);
      node3.setType(54);
      node1.getSideEffectFlags();
      node1.isName();
      Node node4 = Node.newString("");
      node4.isThrow();
      // Undeclared exception!
      try { 
        node4.addChildBefore(node1, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      InputId inputId0 = new InputId("V`K");
      Node node0 = Node.newString("V`K");
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.setCharno(39);
      node0.isFromExterns();
      node0.isDelProp();
      Node node1 = new Node(114, node0, node0, node0, (-194), 1);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = new Node(50, node0, node0, 40, 48);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newNumber((double) 57);
      node3.isAssign();
      node3.isVar();
      node0.isNoSideEffectsCall();
      node0.isLabelName();
      node1.setSourceFileForTesting("ReferenceError");
      Node.newString("ReferenceError");
      node3.getProp(54);
      node2.removeChildren();
      node3.isDebugger();
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isGetterDef();
      node0.isGetElem();
      Node node1 = Node.newString((-1683), "C^DQ9MTr~/JXCbukz");
      node1.isInstanceOf();
      Node node2 = new Node((-4236), node0, 39, (-4236));
      Node node3 = node2.copyInformationFromForTree(node1);
      Node node4 = Node.newString(54, "");
      Node node5 = Node.newString("hx'm(q47]");
      node5.isOnlyModifiesArgumentsCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      node4.isGetProp();
      node0.isArrayLit();
      node0.addSuppression("");
      node3.hasChildren();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      Node node0 = Node.newString(100, "|^DQ9MT>~/tXCbukz");
      Node node1 = Node.newNumber((-1.0), 4, 4095);
      Node node2 = new Node(4, node1, node1, 29, 33);
      Node node3 = node2.useSourceInfoFromForTree(node0);
      node0.isOnlyModifiesArgumentsCall();
      Node node4 = new Node(16, 49, (-34));
      node0.isAssign();
      node4.isLabelName();
      // Undeclared exception!
      try { 
        node3.addChildAfter(node4, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = new Node(1240);
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetElem();
      node0.setSourceEncodedPosition(42);
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isAssignAdd();
      node0.setIsSyntheticBlock(false);
      node1.isSwitch();
      node0.wasEmptyNode();
      node1.isWith();
      node1.isWhile();
      node1.getJsDocBuilderForNode();
      node1.getQualifiedName();
      node0.isFunction();
      Node node2 = new Node(31);
      node1.addSuppression("57");
      node2.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      jSType0.isObject();
      Node node0 = Node.newNumber((double) 0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("originalname", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      ObjectType objectType0 = enumType1.getImplicitPrototype();
      jSType0.resolve(simpleErrorReporter0, objectType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      node1.appendStringTree(stringWriter0);
      node1.getProp(38);
      node1.isSetterDef();
      Node.extractLineno(1);
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 4095, 17);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("BOTH");
      Node node1 = new Node(117);
      node0.getDirectives();
      node0.addChildToBack(node1);
      node0.getSourceOffset();
      node0.setOptionalArg(false);
      node1.getIntProp(153);
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-40);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte) (-100);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(1481, 1481, 48);
      Node node1 = new Node(34, node0, node0);
      node1.isInc();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-997));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags5.areAllFlagsSet();
      Node.newNumber((-4323.793), (-315), 148);
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.isOnlyModifiesArgumentsCall();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.setSourceEncodedPositionForTree(132);
      node0.isFor();
      node0.isGetElem();
      node0.setChangeTime(132);
      node0.toStringTree();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.iterator();
      Node.AncestorIterable node_AncestorIterable1 = node0.getAncestors();
      node_AncestorIterable1.iterator();
      node0.isRegExp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = new Node(1240);
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetElem();
      node0.setSourceEncodedPosition(46);
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.isAssignAdd();
      Node node2 = node0.cloneTree();
      node1.isCall();
      node1.getString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node3 = new Node(57, node0);
      node2.useSourceInfoFrom(node3);
      node3.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = new Node(4555);
      Node node1 = new Node(55, node0);
      Node node2 = node0.cloneTree();
      node1.putIntProp(15, 46);
      node0.isStringKey();
      Node node3 = node2.cloneTree();
      node3.isCall();
      // Undeclared exception!
      try { 
        node3.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4555
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 4095, 17);
      node0.getBooleanProp((-315));
      node0.getQualifiedName();
      node0.setSourceFileForTesting("BOTH");
      Node node1 = new Node(117);
      node0.getDirectives();
      node0.addChildToBack(node1);
      node1.isQuotedString();
      node0.isCase();
      node1.isOptionalArg();
      node1.setCharno(0);
      node0.getLength();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = Node.newString(117, "|^DQ9MT>~/tXCbukz");
      Node node1 = Node.newString(50, " : ");
      node1.setSourceEncodedPositionForTree(1627);
      Node node2 = new Node(8, node0);
      node2.isLocalResultCall();
      Node node3 = new Node(32);
      node2.addChildrenToFront(node1);
      Node node4 = Node.newNumber((double) 1);
      node4.isGetElem();
      node4.toStringTree();
      node3.checkTreeEqualsImpl(node0);
      node0.getJsDocBuilderForNode();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node4;
      nodeArray0[1] = node3;
      nodeArray0[2] = node2;
      nodeArray0[3] = node0;
      nodeArray0[4] = node4;
      nodeArray0[5] = node2;
      Node node5 = null;
      try {
        node5 = new Node(50, nodeArray0, 15, 38);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 4095, 17);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("BOTH");
      node0.setCharno((-3513));
      node0.isFromExterns();
      node0.getSourceOffset();
      Node node1 = null;
      try {
        node1 = new Node(57, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      Node node0 = Node.newString(1, "MugZAvH?");
      node0.isReturn();
      Node node1 = new Node(111);
      node0.isInstanceOf();
      node0.isCatch();
      node1.isCase();
      node1.isDebugger();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isAnd();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isLabelName();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node.newString(656, "Tdf9zYDt,!vI[P0$kvM");
      node0.isGetProp();
      node0.isSetterDef();
      Node.extractLineno((-304));
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = new Node(17);
      node0.getQualifiedName();
      Node node1 = Node.newString("p?PtPh]6_4e<JT", 0, 43);
      node1.getString();
      node0.isQuotedString();
      node1.children();
      Node node2 = Node.newString(35, "Ay|=2");
      node1.addChildToBack(node0);
      node1.isTrue();
      node2.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.isGetProp();
      node2.isArrayLit();
      node0.isBreak();
      node1.isVar();
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = Node.newNumber(1.2, (-1358), (-1));
      Node node1 = new Node((-2218), node0);
      Node node2 = node1.cloneTree();
      node2.putIntProp(996, 93);
      node1.isStringKey();
      node1.cloneTree();
      node0.isCall();
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2218
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = new Node((-703));
      Node node1 = new Node(50, node0, node0, 57, 48);
      node1.useSourceInfoFromForTree(node0);
      node0.isOnlyModifiesArgumentsCall();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSDocInfo jSDocInfo1 = new JSDocInfo(true);
      Node node2 = node0.setJSDocInfo(jSDocInfo1);
      // Undeclared exception!
      try { 
        node1.addChildToFront(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.mayMutateArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.setSourceEncodedPositionForTree(30);
      node0.setCharno(94);
      node1.isFromExterns();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>(4);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node2.getSourceOffset();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isLabelName();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.clearAllFlags();
      Node node3 = Node.newString(1541, " ~}G");
      node3.isGetProp();
      node0.isReturn();
      node3.isCast();
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-40);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte) (-40);
      byteArray0[5] = (byte) (-100);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(1481, 1481, 48);
      Node node1 = new Node(34, node0, node0);
      node1.isInc();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-997));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags4.areAllFlagsSet();
      Node.newNumber((-4323.793), (-315), 148);
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newString(100, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(false);
      node0.setLength(132);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isNumber();
      node0.setSourceFileForTesting("");
      node0.setLength(100);
      node0.toStringTree();
      node0.isDebugger();
      node0.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 70, 70);
      node0.isOptionalArg();
      Node node1 = new Node(0, node0, node0, node0, 30, 1);
      node1.getIntProp(1);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.mayMutateArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node node2 = new Node(50, node1);
      node1.checkTreeEqualsImpl(node2);
      node0.getJsDocBuilderForNode();
      node0.isScript();
      Node node3 = Node.newString("SHNE", 1487, 56);
      node0.isDec();
      node3.getChildCount();
      node0.isOnlyModifiesThisCall();
      node0.isOr();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(445);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 445
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      Node node0 = Node.newString(100, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(591);
      Node node1 = new Node(4095, node0);
      node0.checkTreeEqualsImpl(node1);
      node1.getJsDocBuilderForNode();
      node1.isScript();
      node1.isDec();
      node1.isSetterDef();
      node1.isFor();
      node1.getIndexOfChild(node0);
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node node0 = Node.newString(113, "", (-1719), 155);
      Node node1 = new Node(113, node0);
      node1.isExprResult();
      Node node2 = Node.newString("");
      Node[] nodeArray0 = new Node[2];
      Node node3 = Node.newString("u2z8?Q`FwZ6D US.VN3", 1047, (-3733));
      nodeArray0[0] = node3;
      nodeArray0[1] = node1;
      Node node4 = new Node(3065, nodeArray0, 1, 55);
      node1.copyInformationFromForTree(node4);
      node2.isEquivalentTo(node1);
      // Undeclared exception!
      try { 
        node2.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node node0 = new Node(57, 57, 57);
      node0.getJsDocBuilderForNode();
      node0.getSideEffectFlags();
      node0.isCall();
      Node node1 = new Node(309);
      node1.getJSDocInfo();
      node1.getDirectives();
      node0.isCall();
      node1.removeChildren();
      Node node2 = new Node(170);
      node2.isIf();
      Node node3 = Node.newNumber((double) 57);
      node3.isVoid();
      node1.srcrefTree(node2);
      node3.getSourceFileName();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(112);
      node2.isWhile();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(false);
      Node node1 = Node.newString(51, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      Node node2 = Node.newString("|^DQ9MT>~/tXCbukz");
      node1.getProp(2);
      InputId inputId0 = new InputId(" is not a string node");
      node0.setInputId(inputId0);
      node2.isBlock();
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      Node node1 = new Node(37);
      node0.hasMoreThanOneChild();
      node0.putProp(56, "com.google.javascript.rhino.jstype.EnumType");
      node0.checkTreeEqualsImpl(node1);
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      node0.isNull();
      node1.isQuotedString();
      node1.setSideEffectFlags(29);
      node1.isCase();
      node1.isOptionalArg();
      node1.getLength();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newNumber((double) 29, 93, 51);
      node0.isNoSideEffectsCall();
      node0.addChildToFront(node1);
      node1.isGetProp();
      node0.isCase();
      node0.isOptionalArg();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Iterator<JSType> iterator0 = (Iterator<JSType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node2.getLength();
      node2.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node node0 = Node.newString("66-_Sg]Z&4rFs+5=");
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isThrow();
      node0.getAncestors();
      node0.isFalse();
      node0.isDo();
      node0.putIntProp(154, 50);
      node0.getQualifiedName();
      Node node1 = new Node(0, node0);
      node0.isString();
      node1.hasOneChild();
      node1.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 70, 70);
      node0.toStringTree();
      node0.isFromExterns();
      Node node1 = Node.newNumber(0.0, 30, (-1038));
      Node node2 = new Node(40, node0, 8, 37);
      node2.addChildToFront(node1);
      node1.isGetProp();
      node0.isEmpty();
      node2.copyInformationFrom(node0);
      node2.isThis();
      node1.getAncestor(1164);
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newString(132, "", 132, 132);
      node0.getSourceOffset();
      Node node1 = new Node(36, node0, node0, 1, 39);
      node1.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.getChangeTime();
      node1.isAnd();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isLocalResultCall();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(132);
      node0.isFromExterns();
      node0.getSourceOffset();
      node0.isAnd();
      Node node1 = new Node(46, node0, node0, node0, 0, 30);
      node1.putIntProp(39, 30);
      node0.isStringKey();
      node1.useSourceInfoFromForTree(node0);
      node1.cloneTree();
      try { 
        node1.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SHNE 0 [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000004] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isOptionalArg();
      Node node1 = new Node(15, node0, node0, 2, 30);
      node0.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      node1.srcrefTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1965));
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-40);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte) (-40);
      byteArray0[5] = (byte) (-100);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(1481, 1481, 48);
      Node node1 = new Node(34, node0, node0);
      node1.isInc();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node2 = node1.removeChildren();
      node2.isDebugger();
      node1.isVoid();
      node1.isNot();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      InputId inputId0 = new InputId("V`K");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Iterator<EnumType> iterator0 = (Iterator<EnumType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      ImmutableList<JSType> immutableList1 = immutableList0.asList();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList1);
      node0.mayMutateArguments();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.addChildToFront(node1);
      ImmutableList.of(inputId0);
      node0.isLocalResultCall();
      node0.isDec();
      node1.isSetterDef();
      node0.isFor();
      node1.getIndexOfChild(node0);
      node0.isInc();
      node1.isCase();
      Node node2 = node1.cloneNode();
      node2.toString(false, false, false);
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = Node.newString(100, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(false);
      node0.setLength(132);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isNumber();
      Node node1 = Node.newString("|^DQ9MT>~/tXCbukz", 16, 43);
      node1.putIntProp(57, 8);
      node0.isStringKey();
      node0.cloneTree();
      node0.isCall();
      node1.getString();
      node1.isObjectLit();
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING |^DQ9MT>~/tXCbukz 16 [reflected_object: com.google.javascript.rhino.Node$IntPropListItem@0000000006] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      node0.setVarArgs(true);
      Node node1 = Node.newNumber((double) 30, 57, 56);
      Node node2 = Node.newString(54, "");
      node2.isNoSideEffectsCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node3 = new Node(3654);
      int int0 = Node.JSDOC_INFO_PROP;
      node2.setLineno(50);
      Node node4 = Node.newNumber(1.2, 120, 43);
      node4.setCharno(4095);
      node0.getJsDocBuilderForNode();
      Node node5 = Node.newString(42, "");
      node5.isComma();
      node0.getType();
      node1.isQualifiedName();
      node5.isThrow();
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = Node.newString("66-_Sg]Z&4rFs+5=");
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node1 = Node.newString("66-_Sg]Z&4rFs+5=");
      node1.setSourceFileForTesting("incrdecr");
      Node node2 = new Node(39);
      node1.getDirectives();
      node1.isSwitch();
      node1.isDefaultCase();
      node1.isWhile();
      node1.getQualifiedName();
      node1.getString();
      Node node3 = new Node((-4096), node1);
      Node node4 = node2.useSourceInfoFrom(node1);
      node4.srcref(node3);
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(115, (Node) null, (-3193), (-3193));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = Node.newString("66-_Sg]Z&4rFs+5=");
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isThrow();
      node0.getAncestors();
      node0.isFalse();
      node0.isDo();
      node0.putIntProp(154, 50);
      node0.isQualifiedName();
      node0.setSourceEncodedPosition(154);
      node0.wasEmptyNode();
      node0.isContinue();
      node0.isObjectLit();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(55);
      // Undeclared exception!
      try { 
        node0.appendStringTree(charArrayWriter0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 154
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isDo();
      node0.mayMutateArguments();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno(809);
      node0.isFromExterns();
      int int0 = Node.SLASH_V;
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(39, node0, node0, node0);
      node1.getProp(57);
      Node node2 = Node.newNumber((-319.8851946));
      node0.isEquivalentToTyped(node2);
      node1.isCatch();
      // Undeclared exception!
      try { 
        node1.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = Node.newString("|^DQ9MT>~/tXCbukz");
      Node node1 = Node.newNumber((-1.0), 4, 4095);
      Node node2 = new Node(56, node0, node1);
      node2.useSourceInfoFromForTree(node0);
      node0.isOnlyModifiesArgumentsCall();
      node0.isAssign();
      node0.isLabelName();
      node2.setSourceFileForTesting("incrdecr");
      node1.children();
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node node0 = Node.newString("Tjwp`*!\"", 1588, (-1847748528));
      node0.setSourceFileForTesting("");
      node0.isNot();
      Node node1 = new Node(30, node0, 2583, 2);
      // Undeclared exception!
      try { 
        node0.clonePropsFrom(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = new Node(132);
      node0.getSourceOffset();
      node0.isAnd();
      Node node1 = new Node(125, node0, node0, node0, 39, 1);
      node1.putIntProp(39, 29);
      node0.isStringKey();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.cloneTree();
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SCRIPT 39 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-40);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-65);
      byteArray0[4] = (byte) (-40);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(1481, 1481, (byte) (-40));
      Node node1 = new Node(34, node0, node0);
      node1.isInc();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node2 = node1.removeChildren();
      node2.isDebugger();
      node1.isVoid();
      node1.isNot();
      node0.isContinue();
      node0.getSourceOffset();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = Node.newString(16, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(132);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      Node node1 = new Node(0);
      node1.getDirectives();
      node0.addChildToBack(node1);
      node1.clonePropsFrom(node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node1.getSourceOffset();
      node1.mayMutateGlobalStateOrThrow();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-744), (-744), (-2702));
      Node node1 = new Node(29, node0, node0, node0, node0);
      node0.addChildToFront(node1);
      node0.isOptionalArg();
      Node node2 = node1.detachFromParent();
      node2.isLocalResultCall();
      node0.isQualifiedName();
      node2.isAssignAdd();
      node2.isSetterDef();
      node0.isFor();
      node0.getIndexOfChild(node1);
      node2.isInc();
      node1.isNull();
      Node node3 = new Node(1, 52, 40);
      node1.srcref(node3);
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(50);
      node0.isNoSideEffectsCall();
      node0.addChildToFront(node1);
      node1.isGetProp();
      node0.isHook();
      node1.isBreak();
      node1.isAssign();
      node0.setSourceFileForTesting((String) null);
      node0.getJSDocInfo();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node0 = Node.newString(100, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(false);
      node0.setLength(132);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node0.isCase();
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Iterator<TemplateType> iterator0 = (Iterator<TemplateType>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.getLength();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 70, 70);
      node0.toStringTree();
      node0.isFromExterns();
      Node node1 = Node.newNumber(0.0, 30, (-1038));
      Node node2 = new Node(40, node0, 8, 37);
      node2.addChildToFront(node1);
      node1.isGetProp();
      node0.isEmpty();
      Node node3 = node2.copyInformationFrom(node0);
      node2.isThis();
      // Undeclared exception!
      try { 
        node3.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      String string0 = "((tGnfA&OaPL<";
      Node node0 = Node.newString("((tGnfA&OaPL<", 39, 32);
      Node node1 = new Node(39, node0, 52, 12);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.isOnlyModifiesArgumentsCall();
      node0.isAssign();
      node0.isLabelName();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node1;
      nodeArray0[1] = node2;
      nodeArray0[2] = node2;
      Node node3 = null;
      try {
        node3 = new Node(2, nodeArray0, 32, 438);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node node0 = Node.newString(0, "", 0, 0);
      node0.getSourceOffset();
      node0.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.getBooleanProp(933);
      node1.isOptionalArg();
      node0.isIf();
      node0.isSetterDef();
      node0.isAnd();
      node1.isBlock();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.getJsDocBuilderForNode();
      node_FileLevelJsDocBuilder0.append("");
      node_FileLevelJsDocBuilder0.append("");
      node0.isDebugger();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-287), 47, 53);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte) (-89);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = node1.copyInformationFrom(node0);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(39);
      node0.getCharno();
      Node node3 = Node.newString(1349, ".~^qu");
      node0.copyInformationFromForTree(node3);
      node3.isGetProp();
      Node.newString(16, "", 63, 39);
      node0.isThis();
      node2.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Node node0 = new Node(1317);
      Node node1 = new Node((-1039), node0, node0, node0);
      node1.isNE();
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1039
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = new Node(17);
      Node node1 = Node.newString("p?PtPh]6_4e<JT", 0, 43);
      node1.getString();
      node0.isQuotedString();
      Node.newString(35, "A$)=m");
      node0.getQualifiedName();
      Node node2 = Node.newString((-900), "no next sibling.");
      Node node3 = new Node(54, node2, node0, 39, 16);
      node3.isString();
      node3.hasOneChild();
      node2.getSideEffectFlags();
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = Node.newString(132, "", 132, 132);
      node0.getSourceOffset();
      Node node1 = new Node(36, node0, node0, 1, 39);
      node1.isQualifiedName();
      node0.getInputId();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.putIntProp(8, 4095);
      node1.getQualifiedName();
      Node node2 = new Node(37, node1);
      node2.isString();
      node0.hasOneChild();
      node1.getSideEffectFlags();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@.3Ki|svL0");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString((-1827), "");
      node0.getDirectives();
      node0.isLocalResultCall();
      Node node1 = new Node((-1847748528), node0, node0);
      node1.setSourceFileForTesting("");
      node1.isSyntheticBlock();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isDec();
      node0.getDirectives();
      node0.getLineno();
      node0.isFor();
      Node node3 = node1.cloneNode();
      node3.getAncestor(31);
      Node node4 = node2.removeChildren();
      node3.isAdd();
      node4.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 70, 70);
      node0.toStringTree();
      node0.isFromExterns();
      Node node1 = Node.newNumber(0.0, 30, (-1038));
      Node node2 = new Node(40, node0, 8, 37);
      node2.addChildToFront(node1);
      node1.isGetProp();
      node0.isEmpty();
      Node node3 = node2.copyInformationFrom(node0);
      node3.srcref(node0);
      node2.isThis();
      // Undeclared exception!
      try { 
        node3.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = new Node(57, 57, 57);
      node0.getJsDocBuilderForNode();
      node0.getSideEffectFlags();
      node0.isCall();
      Node node1 = new Node(309);
      node1.getJSDocInfo();
      node1.getDirectives();
      Node node2 = new Node(8, (-1500), 42);
      node1.getChangeTime();
      Node node3 = new Node(32, node0, node0, node2, (-1218), 2833);
      node2.useSourceInfoIfMissingFrom(node1);
      node2.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newString(152, "com.google.javascript.rhino.SourcePosition");
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(152);
      node0.isFor();
      node0.isGetElem();
      node0.setChangeTime(229);
      node0.toStringTree();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node1 = new Node((-5097), node0, node0, node0, 40, 125);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-40);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-65);
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte) (-40);
      byteArray0[5] = (byte) (-100);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(1481, 1481, 48);
      Node node1 = new Node(34, node0, node0);
      node0.isEquivalentToTyped(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node2 = node1.removeChildren();
      node1.addChildToBack(node2);
      node2.isDebugger();
      node1.isVoid();
      node1.isNot();
      node0.isContinue();
      // Undeclared exception!
      try { 
        node0.addChildToFront(node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node node0 = new Node(16, 1663, 1663);
      Node node1 = Node.newNumber((double) 39, 31, 56);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-102);
      byteArray0[1] = (byte)97;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isSyntheticBlock();
      Node node3 = node2.copyInformationFrom(node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      PriorityQueue<EnumType> priorityQueue0 = new PriorityQueue<EnumType>(57, comparator0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) priorityQueue0);
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.isEquivalentTo(node4, false, false, false);
      node3.addChildrenToFront(node1);
      node1.mayMutateArguments();
      try { 
        node2.setDouble(51);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // GT 31 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = node0.copyInformationFrom(node0);
      node1.setSourceEncodedPositionForTree(0);
      node0.setType(39);
      node0.getCharno();
      Node node2 = Node.newString(43, ".~^qu");
      Node node3 = node0.copyInformationFromForTree(node2);
      node2.setQuotedString();
      node3.getChildAtIndex(0);
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FALSE .~^qu [quoted: com.google.javascript.rhino.Node$IntPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      Node node1 = new Node(4, node0, node0, node0, node0);
      node0.hasMoreThanOneChild();
      node0.checkTreeEqualsImpl(node1);
      node0.isOnlyModifiesArgumentsCall();
      node0.toStringTree();
      node0.isNull();
      node1.getQualifiedName();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-65);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(1481, 1481, (byte)0);
      Node node1 = new Node(34, node0, node0);
      node1.isInc();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node2 = node1.removeChildren();
      node2.isDebugger();
      node1.isVoid();
      node1.isNot();
      node0.getSourceOffset();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = new Node((-2553));
      Node node1 = new Node(1, node0, node0, node0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8#!7|}1MlzCSRrHm3!");
      node0.isRegExp();
      node0.addChildrenAfter(node1, (Node) null);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 4095, 17);
      node0.getQualifiedName();
      node0.setSourceFileForTesting("OTuH");
      Node node1 = new Node(17, node0, node0, 1, 38);
      HashSet<String> hashSet0 = new HashSet<String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = new Node(1213, 32, (-187));
      int int0 = 36;
      int int1 = 17;
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = Node.newNumber((double) 30, 57, 56);
      Node node2 = Node.newString(54, "");
      node2.isNoSideEffectsCall();
      node1.isQuotedString();
      node1.isVoid();
      node0.srcrefTree(node2);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(1402);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 1402
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = Node.newString("((tGnfA&OaPL<", 39, 32);
      Node node1 = new Node(39, node0, 52, 12);
      node1.getChildBefore(node0);
      node1.checkTreeEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = Node.newNumber(1995.0825414959);
      Node node1 = new Node(43, node0, node0, node0);
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.iterator();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isFor();
      Node node2 = Node.newString("cogoogle.comon.collec.Iterators$7");
      node0.isTypeOf();
      node2.hasMoreThanOneChild();
      node1.useSourceInfoFrom(node0);
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isDo();
      node0.mayMutateArguments();
      Node node1 = new Node(31, node0, node0, node0, node0, 57, 57);
      Node node2 = node1.copyInformationFrom(node0);
      node2.setSourceEncodedPositionForTree(31);
      node1.clonePropsFrom(node2);
      Node.newString(47, "mxn AEAPm7n|fK", (-162), 54);
      node2.setType(4096);
      Node.newString("");
      // Undeclared exception!
      try { 
        node2.addChildBefore(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      int int0 = 1678;
      Node node0 = new Node(1678, 1678, 99);
      int int1 = 613;
      Node.newNumber((-6.090107134778591));
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newNumber((-3139.73093), 46, 31);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.addChildToFront(node0);
      node0.isGetProp();
      node1.getDouble();
      node0.isEmpty();
      node0.copyInformationFrom(node1);
      node1.isTypeOf();
      node1.setDouble(31);
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(52);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesArguments();
      node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node1 = new Node(0);
      int int0 = Node.JSDOC_INFO_PROP;
      node0.setLineno((-3706));
      node0.setCharno(5605);
      node1.getJsDocBuilderForNode();
      Node node2 = new Node(111, node1);
      node2.setSourceFileForTesting("|^DQ9MT>~/tXCbukz");
      node2.isComma();
      node2.getType();
      node0.isQualifiedName();
      node1.isThrow();
      node1.getJsDocBuilderForNode();
      node1.isComma();
      node1.isName();
      node1.getParent();
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      jSType0.isObject();
      Node node0 = Node.newNumber((double) 0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("originalname", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      ObjectType objectType0 = enumType1.getImplicitPrototype();
      jSType0.resolve(simpleErrorReporter0, objectType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      node1.appendStringTree(stringWriter0);
      node0.isNot();
      node0.getSourceOffset();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node node0 = new Node(100, 100, 100);
      node0.setOptionalArg(false);
      node0.setLength(153);
      node0.isNumber();
      Node node1 = Node.newString("|^DQ9MT>~/tXCbukz", 16, 43);
      node1.putIntProp(57, 8);
      node0.isStringKey();
      node0.cloneTree();
      node0.isCall();
      node1.isDebugger();
      node1.isSyntheticBlock();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node node0 = Node.newString(5566, "|^DQ9MT>~/tXCbukz");
      Node node1 = Node.newNumber((-1.0), 37, 0);
      Node node2 = new Node(57, node1, node1, 11, 4095);
      node1.setIsSyntheticBlock(false);
      node2.useSourceInfoFromForTree(node1);
      node2.isOnlyModifiesArgumentsCall();
      node0.isAssign();
      node2.isLabelName();
      node2.setSourceFileForTesting("'3S8p'.o:l;ITAy1");
      node0.children();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(130);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 130
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = new Node(132, 132, 132);
      Node.newString(51, "setIsNoSideEffectsCall only supports-CALL and NEW nodes, gotc");
      Node node1 = new Node(126, node0, node0, 1, 1);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node2 = Node.newString(36, "|^DQ9MT>~/tXCbukz", 12, 40);
      Node node3 = node1.useSourceInfoFromForTree(node2);
      node2.isOnlyModifiesArgumentsCall();
      node0.isAssign();
      node3.isLabelName();
      node3.setSourceFileForTesting("incrdecr");
      Iterable<Node> iterable0 = new PriorityQueue<Node>();
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = Node.newString(132, "B|<b!dfi]a4qAf");
      node0.isOnlyModifiesArgumentsCall();
      node0.setSourceEncodedPositionForTree(16);
      node0.isFor();
      node0.isGetElem();
      node0.setChangeTime(132);
      node0.toStringTree();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node1 = new Node(47, node0, node0, node0, 48, 57);
      node1.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = Node.newNumber(1315.717397517951);
      node0.isAdd();
      node0.getJSType();
      node0.getQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(30);
      node0.isDebugger();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.isOnlyModifiesArgumentsCall();
      node2.isBreak();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType((String) null, node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = Node.newString(100, "|^DQ9MT>~/tXCbukz");
      Node node1 = Node.newNumber((-1.0), 4, 4095);
      node0.isParamList();
      Node node2 = new Node(117, node0, node1, 0, 52);
      node0.mayMutateArguments();
      node2.copyInformationFrom(node1);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-65);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(1481, 1481, (byte)0);
      Node node1 = new Node(34, node0, node0);
      node1.isInc();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      node_SideEffectFlags0.setMutatesThis();
      node1.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isName();
      Node node2 = Node.newString("");
      node1.isArrayLit();
      node2.isCast();
      node2.isNull();
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newString("ASSIGN_BITXOR", 115, 115);
      node0.getAncestors();
      node0.setLineno(115);
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      jSType0.isObject();
      Node node0 = Node.newNumber((double) 0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("originalname", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      ObjectType objectType0 = enumType1.getImplicitPrototype();
      jSType0.resolve(simpleErrorReporter0, objectType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      StringWriter stringWriter0 = new StringWriter();
      JSType.toMaybeTemplatizedType((JSType) enumType1);
      JSType[] jSTypeArray0 = new JSType[7];
      jSTypeArray0[0] = (JSType) enumType1;
      jSTypeArray0[1] = (JSType) enumType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = (JSType) objectType0;
      jSTypeArray0[4] = (JSType) null;
      jSTypeArray0[5] = jSType0;
      jSTypeArray0[6] = jSType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, false, jSTypeArray0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, (ObjectType) null);
      // Undeclared exception!
      try { 
        modificationVisitor0.caseFunctionType(functionType1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.ModificationVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = Node.newNumber((double) 132, (-690), 103);
      node0.toStringTree();
      Node node1 = Node.newNumber((double) 51, 4, (-3141));
      Node node2 = new Node(39, node1, 51, 52);
      node1.addChildToFront(node0);
      node1.isGetProp();
      node0.isEmpty();
      node2.copyInformationFrom(node0);
      node2.isThis();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      ArrayList<JSType> arrayList1 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList1);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList1);
      node0.useSourceInfoFrom(node1);
      node0.isGetterDef();
      int int0 = Node.SYNTHETIC_BLOCK_PROP;
      node0.isTry();
      node0.isWhile();
      Node.newNumber((double) 49);
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = Node.newNumber((double) 17, 17, 17);
      node0.setSourceFileForTesting("BOTH");
      Node node1 = Node.newNumber(1.2, 48, 15);
      node1.isParamList();
      Node node2 = new Node(116, node0, node0, 77, 28);
      node2.useSourceInfoFrom(node1);
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.wasEmptyNode();
      node0.isDebugger();
      node0.getProp(49);
      node0.getSideEffectFlags();
      node0.isNoSideEffectsCall();
      Node node1 = Node.newNumber((double) 16);
      node0.isOnlyModifiesThisCall();
      node0.getDirectives();
      node0.getDirectives();
      node0.isInstanceOf();
      node0.isFunction();
      node1.removeFirstChild();
      node0.getSourcePosition();
      Node node2 = Node.newString("tqvj3:m[", 97, (-1343));
      node0.useSourceInfoIfMissingFromForTree(node1);
      // Undeclared exception!
      try { 
        node2.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = new Node(132, 132, 132);
      node0.toStringTree();
      node0.setCharno(132);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isNot();
      node0.getSourceOffset();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node node0 = Node.newString(100, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(false);
      node0.setLength(153);
      node0.isNumber();
      Node node1 = Node.newString("|^DQ9MT>~/tXCbukz");
      node1.getDirectives();
      Node node2 = Node.newString("", 64, 3187);
      node1.setType(38);
      node2.getBooleanProp(2);
      node2.getSideEffectFlags();
      node1.isName();
      node2.isCall();
      node2.getString();
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseEnumElementType((EnumElementType) null);
      JSType[] jSTypeArray0 = new JSType[8];
      jSTypeArray0[0] = (JSType) null;
      jSTypeArray0[1] = (JSType) null;
      jSTypeArray0[2] = null;
      jSTypeArray0[3] = (JSType) null;
      jSTypeArray0[4] = (JSType) null;
      jSTypeArray0[5] = null;
      jSTypeArray0[6] = null;
      jSTypeArray0[7] = null;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.isEquivalentTo(node1, false, false, true);
      node0.isOnlyModifiesThisCall();
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node2.isIf();
      try { 
        node1.setString("Named type with empty name component");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000347] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isDo();
      node0.mayMutateArguments();
      InputId inputId0 = new InputId("missing prop: ");
      node0.setInputId(inputId0);
      node0.isUnscopedQualifiedName();
      node0.wasEmptyNode();
      Node node1 = Node.newNumber((double) 1, 114, 226);
      node1.getSourceFileName();
      node0.addChildToFront(node1);
      node0.isGetProp();
      node1.putBooleanProp(30, false);
      node0.type = 114;
      node0.isArrayLit();
      node0.isBreak();
      node1.checkTreeEqualsImpl(node1);
      node0.isInc();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node node0 = Node.newString(132, "", 132, 132);
      node0.getSourceOffset();
      Node node1 = new Node(36, node0, node0, 1, 39);
      node1.isQualifiedName();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node1.getChangeTime();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.setSourceEncodedPosition(38);
      Node.newString("");
      node0.addSuppression("");
      node0.isInstanceOf();
      Node node2 = Node.newNumber((double) 32);
      node2.isLabelName();
      node2.isUnscopedQualifiedName();
      Node node3 = node0.getParent();
      node3.isLabel();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node node0 = Node.newString(130, "C^DQ9MTr~/JXCbukz");
      Node node1 = Node.newNumber((double) 29, 93, 51);
      node0.isNumber();
      Node node2 = Node.newString("first new child has existing sibling", 15, (-3652));
      node2.putIntProp(4095, 1);
      node2.isStringKey();
      Node node3 = node0.cloneTree();
      node1.isCall();
      Node node4 = new Node(57, node2, node3, node3);
      node4.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 70, 70);
      node0.isOptionalArg();
      InputId inputId0 = new InputId("com.google.common.collect.Iterators$1");
      node0.getInputId();
      node0.setInputId((InputId) null);
      node0.isBlock();
      node0.isContinue();
      node0.getDouble();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1240);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno((-1168));
      node0.isGetElem();
      node0.getSourceOffset();
      Node node1 = new Node(98, node0, node0, node0, node0);
      node1.isAnd();
      node1.copyInformationFromForTree(node0);
      node0.setQuotedString();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(44);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(48);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      Node node0 = new Node(116);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ImmutableList.of();
      node0.setLineno(16);
      node0.setCharno(9);
      node0.getJsDocBuilderForNode();
      node0.isFunction();
      Node node1 = new Node((-1286));
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      Node node1 = Node.newString(51, "setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      InputId inputId0 = new InputId("com.google.javascript.rhino.Node$ObjectPropListItem");
      node0.setInputId(inputId0);
      node0.setWasEmptyNode(true);
      node0.isBlock();
      node1.isContinue();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SCRIPT |^DQ9MT>~/tXCbukz [opt_arg: com.google.javascript.rhino.Node$IntPropListItem@0000000002] [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000006] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000005] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = new Node(48);
      Node node1 = new Node((-1039), node0, node0, node0);
      node0.isDo();
      node1.putIntProp(15, 31);
      node1.isEquivalentToTyped(node1);
      node0.isInstanceOf();
      Node node2 = Node.newNumber((-2424.815929), 57, 57);
      node2.isOptionalArg();
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = new Node(132);
      node0.getSourceOffset();
      node0.isAnd();
      Node node1 = new Node(125, node0, node0, node0, 39, 1);
      node1.putIntProp(39, 29);
      node0.isStringKey();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node node3 = node1.copyInformationFrom(node0);
      node2.isThis();
      node3.isDebugger();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = new Node(48);
      node0.useSourceInfoFromForTree(node0);
      Node node1 = new Node(111, node0, node0, 48, 4);
      node1.cloneNode();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node node0 = Node.newNumber(1129.90810117052, (-569), (-1280));
      node0.isGetProp();
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newString(32, "C^DQ9MTr~/JXCbukz");
      node1.isGetProp();
      node1.isTypeOf();
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-380), (-750), (-750));
      Node node1 = new Node(39, node0, node0, node0);
      node0.addChildToFront(node1);
      node1.isLocalResultCall();
      node0.isDec();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = node0.cloneTree();
      node2.isCall();
      node0.getString();
      node2.isDec();
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 70, 70);
      node0.toStringTree();
      Node node1 = Node.newNumber(0.0, 30, (-1038));
      Node node2 = new Node(40, node0, 8, 37);
      node2.addChildToFront(node1);
      node1.isGetProp();
      node0.isEmpty();
      Node node3 = node2.copyInformationFrom(node0);
      node3.removeFirstChild();
      node2.isThis();
      node0.isDebugger();
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      InputId inputId0 = new InputId("");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Node node0 = Node.newString("", (-1789), (-1789));
      Node node1 = new Node((-1789), node0, node0, node0, 1976, 21);
      node1.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(32);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 32
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164604692674942));
      Node node1 = Node.newNumber((-1.0), 39, 148);
      Node node2 = new Node((-160), node0, node0, node1);
      node0.addChildToFront(node2);
      node0.isLocalResultCall();
      node1.isDec();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isFor();
      node0.getIndexOfChild(node1);
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isReturn();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isFor();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.detachChildren();
      node1.isEquivalentTo(node0, false, false, false);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isOnlyModifiesThisCall();
      Node node2 = Node.newString("SmCNNf4g.I`3pem", (-4300), 948);
      node0.isName();
      node2.isNull();
      node0.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.setCharno(132);
      node0.isFromExterns();
      int int0 = Node.SLASH_V;
      Node node1 = new Node(30, node0, node0, node0, 4, 74);
      node0.children();
      Node node2 = new Node(4095);
      node1.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node2 = new Node(47, node0, node0, node1, (-756), 788);
      node0.srcref(node2);
      Node node3 = null;
      try {
        node3 = new Node(1893, node0, node0, node0, (-1205), (-861));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = new Node(141);
      node0.setOptionalArg(true);
      Node node1 = new Node(51, node0, node0, node0, node0, 1, 1);
      node1.getChildCount();
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node.extractLineno(1610612736);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
      node0.isInc();
      Node.extractCharno((-200));
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = new Node(132);
      node0.getSourceOffset();
      node0.isAnd();
      node0.putIntProp(39, 29);
      node0.isStringKey();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      Node node2 = node0.copyInformationFrom(node0);
      node1.isThis();
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isDo();
      node0.isEmpty();
      node0.wasEmptyNode();
      node0.getSourceFileName();
      node0.addChildToFront(node0);
      node0.setLength(838);
      node0.isGetProp();
      node0.putBooleanProp(30, false);
      node0.type = 114;
      node0.isDo();
      node0.isBlock();
      node0.isInstanceOf();
      Node node1 = null;
      try {
        node1 = new Node((-921), node0, node0, 56, 32);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164604692675));
      node0.setOptionalArg(true);
      Node node1 = new Node(51);
      node0.isObjectLit();
      node1.addChildToFront(node0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node0.isAssign();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(37);
      Node node1 = new Node(47, node0, node0);
      node0.isInc();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node node2 = node1.removeChildren();
      node2.isDebugger();
      node1.isAnd();
      node0.isNot();
      int int0 = Node.ORIGINALNAME_PROP;
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = Node.newString(39, "|^DQ9MT>~/tXCbukz");
      Node.newNumber(1720.637820466705, 29, 56);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(57, nodeArray0, (-1039), 124);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      Node node3 = new Node((-838), node1, node2, (-231), 49);
      Node node4 = node3.useSourceInfoFromForTree(node2);
      node4.isAssign();
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = Node.newString("S17", 115, 32);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node2 = new Node(42, node1, 39, 56);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node2);
      Node.NodeMismatch node_NodeMismatch1 = node0.checkTreeEqualsImpl(node2);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      // Undeclared exception!
      try { 
        node3.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node0 = new Node(48, (-1997), (-1997));
      Node node1 = new Node(48, node0, 30, 57);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(132);
      node2.addChildToFront(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags5.setThrows();
      node2.putIntProp((-1385), 1);
      node1.isLabelName();
      node1.hasChildren();
      node1.getParent();
      node2.isLabel();
      node2.getNext();
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node node0 = Node.newString(100, "|^DQ9MT>~/tXCbukz");
      node0.setSourceFileForTesting("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = Node.newString(57, "QeD2]3aSoqz_L]");
      node0.addChildToBack(node1);
      node0.getChildBefore((Node) null);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node1;
      nodeArray0[1] = null;
      nodeArray0[2] = null;
      nodeArray0[3] = null;
      nodeArray0[4] = node1;
      nodeArray0[5] = node1;
      nodeArray0[6] = null;
      nodeArray0[7] = node1;
      Node node2 = null;
      try {
        node2 = new Node(48, nodeArray0, 50, 48);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = new Node(113);
      node0.getSourceOffset();
      node0.isString();
      node0.isStringKey();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.isNoSideEffectsCall();
      node1.isCase();
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164604692674942));
      Node node1 = new Node(2, node0, node0, node0, node0, 32, 56);
      Node node2 = node0.copyInformationFrom(node1);
      node2.setSourceEncodedPositionForTree(0);
      Node.newString(40, "Znd/;A\u0003GC``D<~#1");
      node1.copyInformationFromForTree(node0);
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("hu!*yEP8,I%@+ h[", 1073741823, 1073741823);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      nodeArray0[0] = node0;
      Node node1 = new Node(108, nodeArray0);
      node1.isCatch();
      Node node2 = node0.getParent();
      node2.isFunction();
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = Node.newNumber((-11.234047316834474));
      Node node1 = new Node(30, node0, 38, 50);
      Node node2 = node0.copyInformationFrom(node1);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(21);
      node2.setChangeTime(1396);
      node2.toStringTree();
      node1.isCatch();
      Node node3 = node2.getParent();
      node3.setLineno(53);
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(124, 124, 147);
      Node node1 = new Node((-174), node0, node0);
      node1.isInc();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(8287);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node2 = node1.removeChildren();
      node2.isDebugger();
      node0.isAnd();
      node1.isNot();
      int int0 = Node.ORIGINALNAME_PROP;
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = new Node(100, 100, 100);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isSwitch();
      node0.isDefaultCase();
      node0.isContinue();
      node0.getSourceOffset();
      node0.getLastSibling();
      node0.removeChildren();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = node0.copyInformationFrom(node0);
      node1.setSourceEncodedPositionForTree(37);
      node0.setType(39);
      node0.getCharno();
      Node node2 = Node.newString(43, ".~^qu");
      Node node3 = node0.copyInformationFromForTree(node2);
      node2.setQuotedString();
      node3.getChildAtIndex(0);
      node0.hasMoreThanOneChild();
      // Undeclared exception!
      try { 
        node2.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1245, 3934, (-20));
      node0.isGetProp();
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = Node.newString(33, "&SX.ayDvmPG");
      node1.isGetProp();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164604692675));
      node0.setOptionalArg(true);
      Node node1 = new Node(114);
      node0.isObjectLit();
      node1.addChildToFront(node0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = Node.newNumber(1.0);
      node2.setChangeTime(48);
      node0.isAssignAdd();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`[B|f8kb}xh");
      node1.isThis();
      node1.cloneTree();
      node2.getIntProp(15);
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.isDo();
      Node node1 = new Node(42);
      Node node2 = new Node(67, node0, node1, node0, node0, 2, (-710));
      node1.cloneNode();
      Node node3 = Node.newString(15, "", 147, (-437));
      node3.setSourceEncodedPosition(105);
      node0.isDebugger();
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = new Node((-1590));
      int int0 = 44;
      node0.setVarArgs(true);
      Node node1 = new Node(44, node0, node0, node0, node0, 56, 797);
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(0, node0, node0, 50, 4095);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte) (-89);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = node1.copyInformationFrom(node0);
      node2.setSourceEncodedPositionForTree(0);
      node0.setType(39);
      node0.getCharno();
      Node node3 = Node.newString(1349, ".~^qu");
      Node node4 = node0.copyInformationFromForTree(node3);
      node4.removeChildren();
      node3.isGetProp();
      Node.newString(16, "", 63, 39);
      node0.isThis();
      node2.getAncestor(0);
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = new Node(141);
      Node node1 = new Node(51, node0, node0, node0, node0, 52, 1);
      node1.setSourceEncodedPosition(3504);
      node0.isDebugger();
      node1.srcrefTree(node0);
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 141
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = new Node(42);
      node0.getSourceOffset();
      node0.isString();
      node0.isStringKey();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(39, nodeArray0);
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node2.isInc();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isReturn();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isFor();
      node0.isGetElem();
      node0.setChangeTime(113);
      Node node1 = Node.newString(1459, "com.google.javascript.rhino.Node$AncestorIterable$1");
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newString(0, "");
      node0.siblings();
      node3.isNE();
      node2.isDefaultCase();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      ArrayList<JSType> arrayList1 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList1);
      int int0 = Node.SYNTHETIC_BLOCK_PROP;
      node0.isTry();
      node0.isWhile();
      node0.getInputId();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = new Node(132);
      node0.isReturn();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isFor();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      jSDocInfo0.setModifies((Set<String>) null);
      Node node2 = new Node(53, node1);
      node1.isEquivalentTo(node2, true, false, false);
      node0.checkTreeEqualsImpl(node2);
      node2.isOnlyModifiesThisCall();
      jSDocInfo0.getSourceName();
      node0.isName();
      node1.getAncestors();
      node2.isNull();
      node0.getJsDocBuilderForNode();
      node2.isTry();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = Node.newString(12, "com.google.javascript.rhino.Node$IntPropListItem");
      node0.isAdd();
      node0.getCharno();
      Node node1 = Node.newString(1, ".~^qu");
      Node node2 = node0.copyInformationFromForTree(node1);
      node0.setQuotedString();
      node2.getChildAtIndex((-519));
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      Node node0 = Node.newString("S17", 115, 32);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node2 = new Node(42, node1, 39, 56);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node2);
      Node.NodeMismatch node_NodeMismatch1 = node0.checkTreeEqualsImpl(node2);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      node0.isAssign();
      node0.isRegExp();
      node1.isDefaultCase();
      node2.getLineno();
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = Node.newString((-452), "");
      Node node1 = Node.newString("bind", (-56), 42);
      Node node2 = new Node(52, node1, node1, node0, node1, 49, 1);
      node2.useSourceInfoIfMissingFromForTree(node1);
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node node0 = Node.newNumber((-609.886));
      node0.toString(true, true, true);
      byte[] byteArray0 = new byte[6];
      node0.getStaticSourceFile();
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte)73;
      byteArray0[2] = (byte)33;
      byteArray0[3] = (byte) (-49);
      Node node1 = new Node(125);
      node0.addChildToBack(node1);
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = node0.getFirstChild();
      node2.isLocalResultCall();
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = Node.newNumber((double) 12, 12, 29);
      node0.isWhile();
      node0.setSourceEncodedPositionForTree((-1794));
      node0.setType(116);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = Node.newString((-2391), "com.google.javascript.rhino.Node$IntPropListItem");
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newString(54, "");
      node3.getStaticSourceFile();
      node0.setIsSyntheticBlock(true);
      node3.siblings();
      node0.isNE();
      node2.isDefaultCase();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = new Node(117);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isSwitch();
      node0.isTry();
      node0.isContinue();
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = new Node(57, 57, 57);
      node0.getJsDocBuilderForNode();
      node0.getSideEffectFlags();
      node0.isCall();
      Node node1 = new Node(49, node0, node0, 47, 39);
      node1.useSourceInfoIfMissingFrom(node0);
      node1.getJSDocInfo();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.getDirectives();
      node0.getSideEffectFlags();
      node0.isName();
      Node.newString("I");
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1779, 1779, 4555);
      Node node1 = new Node(13, node0);
      node1.cloneTree();
      Node node2 = null;
      try {
        node2 = new Node(1779, node1, node0, node1, node1, 48, 51);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      jSType0.isObject();
      Node node0 = Node.newString(1, "Unknown class name", 1, 0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Not declared as a constructor", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      ObjectType objectType0 = enumType1.getImplicitPrototype();
      jSType0.resolve(simpleErrorReporter0, objectType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      StringWriter stringWriter0 = new StringWriter(12);
      node1.appendStringTree(stringWriter0);
      node0.isNot();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node node2 = node1.getLastSibling();
      node2.isComma();
      node1.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = Node.newString(114, "com.google.javascript.rhino.SourcePosition");
      node0.isSwitch();
      node0.setSourceEncodedPositionForTree(114);
      Node node1 = new Node(49, node0, node0, node0);
      node1.hasMoreThanOneChild();
      node1.isTry();
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = new Node(57, 57, 57);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(3237, 3237, 1);
      Node node2 = new Node(50, node1, node0);
      node2.isInc();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(16);
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node node3 = node2.removeChildren();
      node2.isDebugger();
      node2.isAnd();
      node2.isNot();
      int int0 = Node.ORIGINALNAME_PROP;
      Node node4 = node3.getLastSibling();
      node0.isParamList();
      node4.isCast();
      node2.isLabelName();
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = new Node(114, 114, 114);
      node0.toString();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)116;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)69;
      byteArray0[4] = (byte)87;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.setVarArgs(false);
      Node node1 = new Node(30, node0, 155, 1);
      Node node2 = node1.cloneNode();
      // Undeclared exception!
      try { 
        node2.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = new Node(105);
      node0.getSourceOffset();
      node0.isThis();
      node0.isStringKey();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node0.isNoSideEffectsCall();
      node1.isCase();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = new Node(132, 132, 132);
      node0.toStringTree();
      Node node1 = new Node(486, node0);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = Node.newString(46, "`bgAg1q;7?e<-");
      node3.siblings();
      node1.isNE();
      node2.isDefaultCase();
      node2.getLength();
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-744), (-744), (-744));
      Node node1 = new Node(29, node0, node0, node0, node0);
      node0.addChildToFront(node1);
      node0.mayMutateArguments();
      Node node2 = node1.detachFromParent();
      node2.addChildToFront(node1);
      node1.isGetProp();
      node2.isArrayLit();
      node0.isBreak();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node2, node1);
      Node node3 = node1.getAncestor(43);
      node3.getLength();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-744), (-744), (-744));
      Node node1 = new Node(39, node0, node0, 48, 49);
      node0.addChildToFront(node1);
      Node node2 = node1.detachFromParent();
      node0.isQualifiedName();
      node2.isAssignAdd();
      node0.isFor();
      int int0 = Node.LENGTH;
      node2.isCase();
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1245);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      Locale locale0 = Locale.CHINA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      node0.setDirectives(set0);
      node0.setCharno((-1168));
      node0.hasChildren();
      node0.getSourceOffset();
      node0.isNew();
      int int0 = Node.FLAG_NO_THROWS;
      node0.isVar();
      node0.isCall();
      node0.toString();
      node0.removeProp(48);
      node0.getQualifiedName();
      node0.isQualifiedName();
      node0.getNext();
      node0.isArrayLit();
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1245);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno((-1168));
      node0.hasChildren();
      node0.getSourceOffset();
      int int0 = 98;
      int int1 = (-5443);
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        node0.appendStringTree(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = Node.newString(118, "$RZjr;JyHj_q7");
      Node node1 = Node.newString(30, "");
      node0.isDo();
      node1.putIntProp(0, 46);
      node0.setSourceEncodedPositionForTree(8);
      node0.isVar();
      node1.isCall();
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164604692674942));
      Node node1 = new Node(30, node0, 38, 50);
      node1.useSourceInfoFrom(node0);
      Node node2 = node0.copyInformationFrom(node1);
      node2.setSourceEncodedPositionForTree(0);
      Node node3 = Node.newString("");
      node1.addChildBefore(node3, node0);
      node3.hasMoreThanOneChild();
      node3.isVoid();
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newString(150, "D");
      Node.newString((-2089), "D");
      Node node1 = Node.newString(38, "", 54, 30);
      Node node2 = new Node(8, node0, 15, 46);
      node0.isDebugger();
      node0.isSetterDef();
      node1.isBlock();
      node0.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-3154));
      node_SideEffectFlags0.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isReturn();
      node0.getSideEffectFlags();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.getQualifiedName();
      node0.isFor();
      node0.isGetElem();
      Node node1 = new Node(38, node0, node0, node0, node0);
      node0.clonePropsFrom(node1);
      node0.isReturn();
      Node node2 = null;
      try {
        node2 = new Node(2, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-744), (-744), (-744));
      Node node1 = new Node(29, node0, node0, node0, node0);
      node0.addChildToFront(node1);
      Node node2 = node1.detachFromParent();
      node0.isQualifiedName();
      node2.isAssignAdd();
      node0.isFor();
      node0.getIndexOfChild(node1);
      node2.isCase();
      node0.isBreak();
      node1.replaceChild(node0, node2);
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.setSourceEncodedPositionForTree(1245);
      node0.isGetterDef();
      node0.isGetElem();
      node0.toStringTree();
      node0.setCharno((-1168));
      node0.hasChildren();
      node0.getSourceOffset();
      Node node1 = new Node(98, node0, node0, node0, node0, (-5443), 0);
      node1.isAnd();
      Node.mergeLineCharNo(46, 1);
      Node.newNumber((double) 0);
      node1.setChangeTime(49);
      node1.isAssignAdd();
      node1.isThis();
      Node node2 = node0.cloneTree();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "com.google.javascript.rhino.jstype.EnumType");
      // Undeclared exception!
      try { 
        node2.appendStringTree(charBuffer0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = Node.newString("66-_Sg]Z&4rFs+5=");
      node0.isFalse();
      Node node1 = new Node(4, node0, node0, node0);
      node1.hasMoreThanOneChild();
      node1.srcref(node0);
      node0.isTry();
      node1.getIntProp(31);
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-90);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node((byte) (-90), (byte) (-90), (byte) (-90));
      Node node1 = new Node(38, node0, node0, 54, (-2542));
      // Undeclared exception!
      try { 
        node1.setString("NUMBER_TYPE");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      Node node0 = Node.newNumber((double) 12, 12, 29);
      node0.isWhile();
      node0.setSourceEncodedPositionForTree((-1794));
      Node node1 = Node.newString("first new child has existing parent", 1959, 37);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[3];
      Node node2 = new Node(15);
      nodeArray0[0] = node2;
      nodeArray0[1] = node1;
      nodeArray0[2] = node0;
      Node node3 = new Node(101, nodeArray0);
      node1.isCatch();
      node1.getParent();
      node1.isFunction();
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      jSType0.isObject();
      Node node0 = Node.newString(1, "Unknown class name", 1, 0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Not declared as a constructor", node0, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      ObjectType objectType0 = enumType1.getImplicitPrototype();
      jSType0.resolve(simpleErrorReporter0, objectType0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      StringWriter stringWriter0 = new StringWriter(12);
      node0.isNot();
      int int0 = Node.NO_SIDE_EFFECTS;
      Node node2 = new Node(1, node1, node1, node1, node0, 4, 43);
      node1.isComma();
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node node0 = new Node(48);
      Node node1 = new Node(53);
      node0.isDo();
      Node node2 = new Node(4);
      node2.isCast();
      node2.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = new Node((-9), (-9), (-9));
      node0.setSourceFileForTesting("BOTH");
      node0.isAssignAdd();
      node0.getSourceOffset();
      node0.setSourceFileForTesting("BOTH");
      Node.extractCharno(1);
      node0.getSourceFileName();
      node0.isDefaultCase();
      node0.getLength();
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      Node node0 = Node.newString("z1sG?ZQEZn", 32, (-2576));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node2 = new Node(50, node1, 41, 4463);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node1);
      Node.NodeMismatch node_NodeMismatch1 = node0.checkTreeEqualsImpl(node2);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      Node node3 = Node.newNumber((double) 57);
      node3.isAssign();
      node0.isRegExp();
      node0.isComma();
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-90);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node((byte) (-90), (byte) (-90), (byte) (-90));
      Node node1 = new Node(38, node0, node0, 54, (-2542));
      node1.isCall();
      node0.isSyntheticBlock();
      node0.setType(39);
      // Undeclared exception!
      try { 
        node1.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node node0 = Node.newString(130, "$RZjr;JyHj_q7");
      node0.isTry();
      Node node1 = Node.newNumber((-1573.278619467653));
      node0.isExprResult();
      node1.isSetterDef();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newString(103, "");
      node0.isDec();
      Node node1 = Node.newString("", 51, (-54));
      node0.isStringKey();
      node0.isCall();
      node1.getString();
      node0.isDec();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = Node.newString(150, "");
      Node node1 = new Node(31, node0, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
      try { 
        node2.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = new Node((-1374));
      node0.isStringKey();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "";
      Node node1 = Node.newString("", 117, (-1512));
      Node node2 = node0.useSourceInfoFrom(node1);
      node1.isLocalResultCall();
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = new Node(2813);
      node0.setSourceFileForTesting("BOTH");
      node0.isFromExterns();
      node0.getSourceOffset();
      Node node1 = Node.newString(51, "BOTH", 2813, 4095);
      node0.setSourceFileForTesting("BOTH");
      node0.isDefaultCase();
      node1.getLength();
      node0.isSetterDef();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164604692674942));
      Node node1 = new Node(30, node0, 38, 50);
      Node node2 = node0.copyInformationFrom(node1);
      node1.setIsSyntheticBlock(false);
      node2.setSourceEncodedPositionForTree(0);
      Node node3 = Node.newString("");
      node1.addChildBefore(node3, node0);
      node2.isHook();
      node2.getLineno();
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = Node.newNumber((double) 100, 100, 100);
      node0.toStringTree();
      Node node1 = new Node(85, node0, node0, 42, 29);
      Node node2 = Node.newString(56, "qp#oA'");
      Node node3 = node1.useSourceInfoFromForTree(node0);
      node1.isEquivalentToTyped(node3);
      node1.isOnlyModifiesArgumentsCall();
      node1.isRegExp();
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node3, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      Node node0 = new Node(118, 118, 118);
      node0.isReturn();
      node0.isStringKey();
      Node node1 = Node.newNumber((double) 30, 32, 15);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.checkTreeEqualsImpl(node0);
      Node node3 = new Node(36, 2, 48);
      node3.checkTreeEqualsImpl(node2);
      node0.isInc();
      node2.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = Node.newString(100, "|^DQ9MT>~/tXF8Cbukz");
      node0.setSourceFileForTesting("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.getChangeTime();
      node0.getString();
      node0.isDec();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = Node.newString(12, "com.google.javascript.rhino.Node$IntPropListItem");
      node0.isAdd();
      node0.isNull();
      Node node1 = new Node((-834), node0, node0, node0);
      node1.removeChild(node0);
      node0.isEquivalentTo(node1);
      node0.isCatch();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString("Object#Key", (-1302), (-1602));
      node0.isName();
      Node node1 = new Node(103, 4204, 826);
      node1.checkTreeEquals(node0);
      node1.clonePropsFrom(node0);
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = Node.newNumber((double) 1779, 1779, 4555);
      Node node1 = new Node(13, node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(3364, nodeArray0);
      node1.isCatch();
      node0.getParent();
      node2.isFunction();
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isReturn();
      node0.wasEmptyNode();
      Node node1 = Node.newNumber((double) 12, 4, 29);
      Node node2 = new Node((-1517), node1, node1, node1, node0, 123, 52);
      node1.addChildToFront(node2);
      node0.isGetProp();
      node0.isArrayLit();
      node0.isBreak();
      Node.NodeMismatch node_NodeMismatch0 = new Node.NodeMismatch(node1, node0);
      int int0 = 2617;
      node1.getAncestor(int0);
      node1.getDouble();
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      Node node0 = Node.newNumber(0.5, (-1602), (-1602));
      node0.getSourceOffset();
      Node node1 = new Node(85, node0, node0, node0, node0, 1304, 4);
      node1.isAnd();
      Node.mergeLineCharNo(53, 15);
      Node.newNumber((-6.164604692674942));
      node0.setChangeTime(848);
      node0.isAssignAdd();
      node0.isThis();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node node0 = new Node(33);
      node0.isGetElem();
      Node node1 = new Node(29, node0, node0, 29, (-1202));
      // Undeclared exception!
      try { 
        node0.isQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = Node.newNumber((double) 0, 141, 141);
      node0.toStringTree();
      Node node1 = new Node(102, node0, node0, 1, (-1283));
      Node node2 = node0.useSourceInfoFromForTree(node0);
      node2.addSuppression("[ukgBxd8wcnDgVHl}");
      node1.isEquivalentToTyped(node2);
      node2.isOnlyModifiesArgumentsCall();
      node1.addChildrenAfter(node1, node2);
      node1.getJSType();
      node2.copyInformationFromForTree(node0);
      node2.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = new Node((-9));
      Node node1 = Node.newNumber(0.7, (-9), 375);
      Node node2 = new Node(32, node0);
      node2.cloneTree();
      Node node3 = null;
      try {
        node3 = new Node((-3416), node2, node0, node2, node1, 2, 36);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isGetProp();
      node0.isContinue();
      node0.isVoid();
      node0.cloneTree();
      Node node1 = new Node(53);
      node1.getProp(2);
      Node node2 = node0.cloneTree();
      node2.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = new Node(4555, 68, 1811);
      Node node1 = new Node(40, node0, node0, node0, 49, 57);
      node1.cloneTree();
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = null;
      try {
        node2 = new Node(1811, node1, node0, node1, node1, 48, 51);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = new Node(132);
      node0.getSourceOffset();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = Node.newString("rJ%\n", 2736, 49);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.addChildToBack(node0);
      node0.isIf();
      node1.toStringTree();
      node0.isWith();
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = Node.newString(114, "The new child node already has a parent.");
      node0.isSwitch();
      node0.setSourceEncodedPositionForTree(114);
      Node node1 = new Node(49, node0, node0, node0);
      node1.hasMoreThanOneChild();
      node1.isCatch();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = Node.newString(148, "");
      node0.isSetterDef();
      node0.isFor();
      node0.isReturn();
      node0.isCast();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      Node node0 = Node.newNumber((double) 1073741823, 2699, 120);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = new Node(49, node1, node0, node0, 120, 53);
      node0.addChildToFront(node2);
      node0.isQualifiedName();
      node0.isAssignAdd();
      node1.isFor();
      node1.getIndexOfChild(node0);
      node2.isBreak();
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = Node.newString(83, "");
      node0.isParamList();
      Node node1 = Node.newString((-3946), "");
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = Node.newString("S17", 115, 32);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node2 = new Node(42, node1, 39, 56);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeEqualsImpl(node2);
      Node.NodeMismatch node_NodeMismatch1 = node0.checkTreeEqualsImpl(node2);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      node1.isSetterDef();
      node1.isBlock();
      node2.isThis();
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = Node.newNumber(2.3851091255905867);
      Node node1 = node0.copyInformationFrom(node0);
      node1.setSourceEncodedPositionForTree(51);
      node0.setType(2);
      node0.isCatch();
      node1.getDouble();
      node1.isEmpty();
      node1.isFalse();
      node1.isBlock();
      node1.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      int int0 = 481;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(481, "?", 481, 32);
      node0.isQualifiedName();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.replaceChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = new Node(57, 57, 57);
      node0.getJsDocBuilderForNode();
      Node node1 = new Node(49, node0, node0, 47, 39);
      node1.getJSDocInfo();
      node0.isObjectLit();
      node0.isReturn();
      node1.isCast();
      node0.isCast();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isGetProp();
      node0.hasMoreThanOneChild();
      node0.isVoid();
      Node node1 = node0.cloneTree();
      Node node2 = node1.cloneNode();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("lXLWP|)tt5}+96Zv", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.isEquivalentTo(node1, false, false, true);
      node2.isNE();
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = Node.newString(98, "|^DQ9MT>~/tXCbukz");
      Node node1 = Node.newString("|^DQ9MT>~/tXCbukz", 1, 12);
      node1.useSourceInfoIfMissingFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("q^[b(rzS");
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) templateType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, false, jSTypeArray0);
      jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, templateType0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      modificationVisitor0.caseFunctionType(functionType0);
      Node node2 = new Node(46, 4, 57);
      node2.isThis();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node node0 = Node.newString(150, "");
      node0.isSetterDef();
      node0.isFor();
      node0.isFor();
      Node node1 = new Node(83, node0, node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.useSourceInfoIfMissingFrom(node0);
      node0.getIndexOfChild(node1);
      node0.isBreak();
      Node node3 = Node.newString("unexpected prop id ");
      // Undeclared exception!
      try { 
        node1.replaceChild(node3, node3);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = new Node(117, 117, 117);
      node0.isEmpty();
      node0.cloneNode();
      node0.isOptionalArg();
      node0.isBreak();
      node0.getAncestor(52);
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = new Node(105);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isFor();
      node0.isGetElem();
      node0.setChangeTime(113);
      node0.toStringTree();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      Node node0 = Node.newString(100, "|^DQ9MT>~/tXF8Cbukz");
      Node node1 = new Node(242);
      MockPrintStream mockPrintStream0 = new MockPrintStream("|^DQ9MT>~/tXF8Cbukz");
      node0.appendStringTree(mockPrintStream0);
      Node node2 = new Node(83, node0, 26, 3598);
      node2.copyInformationFromForTree(node1);
      node2.isGetProp();
      node0.isHook();
      node2.isAssign();
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      String string0 = "`w8#1@FvvGPOQ4?YXc";
      Node node0 = Node.newString(108, "`w8#1@FvvGPOQ4?YXc");
      Node node1 = new Node(26, node0, node0, node0, node0, (-5159), 8);
      Node node2 = new Node(155, node1);
      node2.cloneTree();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((OutputStream) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = Node.newString(150, "Q2");
      Node node1 = new Node(31, node0, node0, node0);
      Node node2 = new Node(48, node1, 46, 47);
      node1.isAdd();
      node1.isUnscopedQualifiedName();
      node1.hasMoreThanOneChild();
      node0.getParent();
      node2.isTrue();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-2545), nodeArray0);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      Node.newNumber(1.0, 1665, 36);
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = new Node((-1590));
      Node node1 = new Node(1, node0, node0, node0, node0);
      node0.addChildToFront(node1);
      Node node2 = node0.detachFromParent();
      node0.isQualifiedName();
      node0.isAssignAdd();
      node1.isFor();
      node0.getIndexOfChild(node1);
      node2.isBreak();
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = new Node(114);
      node0.setChangeTime(50);
      node0.isGetProp();
      node0.hasMoreThanOneChild();
      node0.isVoid();
      node0.isNE();
      Node node1 = new Node(6, node0, node0, node0, node0, 29, 2);
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = Node.newString("|^DQ9MT>~/tXCbukz");
      Node node1 = Node.newString("|^DQ9MT>~/tXCbukz", 1, 12);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("q^[b(rzS");
      JSType[] jSTypeArray0 = new JSType[3];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) templateType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, false, jSTypeArray0);
      jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, templateType0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      modificationVisitor0.caseFunctionType(functionType0);
      Node node3 = new Node(46, 4, 57);
      Node node4 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node5 = new Node((-4314), node0, node4, node1, node0);
      node4.clonePropsFrom(node5);
      node4.isDec();
      node2.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = Node.newString("z1sG?ZQEZn", 32, (-2566));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node2 = new Node(50, node1, 41, 4463);
      Node.NodeMismatch node_NodeMismatch0 = node2.checkTreeTypeAwareEqualsImpl(node1);
      Node.NodeMismatch node_NodeMismatch1 = node0.checkTreeEqualsImpl(node2);
      node_NodeMismatch1.equals(node_NodeMismatch0);
      Node node3 = Node.newNumber((double) 57);
      node3.isAssign();
      node0.isRegExp();
      node0.isComma();
      node2.isExprResult();
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = new Node(100, 100, 100);
      Node node1 = new Node((-1061), node0, node0, node0, 55, 54);
      node0.copyInformationFrom(node1);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = new Node(114);
      node0.setChangeTime(50);
      node0.isGetProp();
      node0.hasMoreThanOneChild();
      node0.isVoid();
      Node node1 = node0.cloneTree();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.addChildrenToBack(node0);
      node1.isWhile();
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      Node node0 = Node.newString(155, "}y:");
      node0.removeProp(118);
      node0.isSetterDef();
      node0.isFor();
      node0.isReturn();
      node0.isWith();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString(2189, "");
      node0.isAdd();
      node0.isGetProp();
      Node node1 = new Node((-3055), node0, node0, node0);
      Node node2 = new Node((-978), node1, (-5079), 29);
      // Undeclared exception!
      try { 
        node2.removeChild(node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.isNE();
      node0.isDefaultCase();
      node0.getLength();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      Node node0 = Node.newString(114, "DX#9#q?HyxW|\u0003e)~ ");
      Node node1 = new Node(51, node0, 39, 55);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.wasEmptyNode();
      Node node3 = new Node(1870, node2);
      node3.isFalse();
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString(21, "");
      Node node1 = new Node(47, node0);
      node1.cloneTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[4];
      JSType jSType0 = null;
      JSType.toMaybeTemplatizedType((JSType) null);
      JSType.toMaybeTemplateType((JSType) null);
      // Undeclared exception!
      try { 
        ImmutableList.of((TemplateType) null, (TemplateType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // at index 0
         //
         verifyException("com.google.common.collect.ObjectArrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      Node node0 = new Node(35);
      node0.isReturn();
      node0.getStaticSourceFile();
      node0.getQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.checkTreeTypeAwareEqualsImpl(node3);
      node3.addChildToBack(node0);
      node3.isExprResult();
      node2.isSetterDef();
      node2.isAssign();
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node node0 = new Node(114);
      node0.setChangeTime(39);
      node0.isGetProp();
      node0.isEquivalentToTyped(node0);
      node0.isVoid();
      Node node1 = node0.cloneTree();
      node1.checkTreeEquals(node0);
      node1.srcrefTree(node0);
      node0.isDefaultCase();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = new Node(132, 132, 132);
      node0.getSourceOffset();
      node0.isFromExterns();
      node0.isStringKey();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node1.checkTreeEqualsImpl(node0);
      node1.checkTreeEqualsImpl(node0);
      node1.isInc();
      node1.isThrow();
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString(114, "The new child node already has a parent.");
      node0.isSwitch();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.setSourceEncodedPositionForTree(114);
      Node node1 = new Node(49, node0, node0, node0);
      node1.hasMoreThanOneChild();
      Node node2 = node0.getParent();
      node1.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node node0 = new Node(30);
      node0.setChangeTime(36);
      node0.isGetProp();
      node0.hasMoreThanOneChild();
      node0.isVoid();
      node0.cloneTree();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = new Node(105);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.isFor();
      node0.isGetElem();
      node0.setChangeTime(113);
      node0.toStringTree();
      node0.isVoid();
      node0.isFunction();
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = new Node(60);
      Node node1 = new Node(49, node0, node0, 47, 39);
      node0.isObjectLit();
      node0.isAssign();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      Node node0 = Node.newString(132, "|^DQ9MT>~/tXCbukz");
      node0.setOptionalArg(true);
      Node node1 = new Node((-894), node0, node0, 0, 4);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      Node node3 = null;
      try {
        node3 = new Node(53, node2, node0, node0, node2, 50, 48);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = Node.newString(46, "=");
      Node node1 = new Node(21, node0, (-6770), 309);
      node1.useSourceInfoIfMissingFromForTree(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, true);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("NULL_TYPE");
      JSType[] jSTypeArray0 = new JSType[5];
      jSTypeArray0[0] = (JSType) templateType0;
      jSTypeArray0[1] = (JSType) templateType0;
      jSTypeArray0[2] = (JSType) templateType0;
      jSTypeArray0[3] = (JSType) templateType0;
      jSTypeArray0[4] = (JSType) templateType0;
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, true, jSTypeArray0);
      FunctionType functionType1 = jSTypeRegistry0.createFunctionTypeWithNewThisType(functionType0, functionType0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry((ErrorReporter) null);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry2);
      modificationVisitor0.caseFunctionType(functionType1);
      Node node2 = new Node((-1061), 98, 1);
      Node node3 = jSTypeRegistry2.createParametersWithVarArgs(jSTypeArray0);
      node1.isEquivalentTo(node3);
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isReturn();
      node0.isVoid();
      Node node1 = new Node((-2558), node0, node0, node0, 43, (-892));
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.getQualifiedName();
      node0.isGetterDef();
      node0.isWith();
      node0.getQualifiedName();
      node0.children();
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = Node.newNumber((-2182.0), 52, 51);
      Node node2 = node0.copyInformationFrom(node1);
      node2.isTrue();
      node1.isString();
      node1.isCatch();
      node0.srcrefTree(node2);
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = new Node(105);
      node0.isFor();
      Node node1 = new Node(1, node0, node0, 31, 30);
      node1.isNew();
      node0.isDelProp();
      node0.getSideEffectFlags();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node node0 = Node.newString(150, "B*1;a'8fDiTLs");
      Node node1 = Node.newString(42, "rz|fw[]:2^4b2");
      node0.isSwitch();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node(37, node1, node0, node0);
      node1.hasMoreThanOneChild();
      node1.getParent();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 150
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      int int0 = 33;
      Node node0 = new Node(33, 33, 33);
      node0.setSourceEncodedPositionForTree(33);
      node0.getJSDocInfo();
      node0.isGetterDef();
      // Undeclared exception!
      try { 
        node0.getQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = new Node(105);
      node0.isNE();
      node0.isContinue();
      node0.isVoid();
      node0.cloneTree();
      Node node1 = new Node(53);
      node1.getProp(2);
      Node node2 = node0.cloneTree();
      node2.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      Node node0 = Node.newString(100, "_6Mq,biBc");
      node0.isWith();
      Node node1 = Node.newString(115, "_6Mq,biBc");
      node1.isSwitch();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = new Node(47, node0, node1, node1);
      node0.hasMoreThanOneChild();
      node0.getParent();
      node0.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = new Node(114);
      node0.setChangeTime(50);
      Node node1 = new Node(39, node0, 458, 44);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isIf();
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = new Node(57, 57, 57);
      node0.getJsDocBuilderForNode();
      node0.getSideEffectFlags();
      node0.isCall();
      node0.isWith();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(27591, nodeArray0);
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = new Node(37, (-2802), 144);
      Node node1 = new Node(37, node0, node0);
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      node0.setSourceEncodedPositionForTree(33);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(115);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags4.setMutatesGlobalState();
      node_SideEffectFlags6.setThrows();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags5.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setMutatesGlobalState();
      node_SideEffectFlags8.setThrows();
      node0.putIntProp(43, 55);
      node1.hasChildren();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      Node node2 = null;
      try {
        node2 = new Node(47, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = new Node(31, node0, 115, 49);
      Node node2 = new Node(114, 40, (-519));
      Node node3 = node2.copyInformationFrom(node0);
      node3.addSuppression("INC");
      node3.setSourceEncodedPositionForTree(37);
      Node node4 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      node4.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
      try { 
        node3.addChildBefore(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = Node.newString(150, "Q2");
      Node node1 = new Node(31, node0, node0, node0);
      node1.isVoid();
      node1.cloneTree();
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString(108, "");
      Node node1 = new Node(1, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isIf();
      node2.isFalse();
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = new Node(117);
      Node node1 = Node.newString(8, "");
      Node node2 = new Node(57, node1);
      Node node3 = node0.cloneTree();
      // Undeclared exception!
      try { 
        node3.replaceChild(node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = new Node(114);
      node0.setLineno(1);
      Node[] nodeArray0 = new Node[1];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      nodeArray0[0] = node0;
      node0.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = new Node(114);
      node0.setChangeTime(50);
      node0.isOr();
      node0.hasMoreThanOneChild();
      node0.isVoid();
      Node node1 = node0.cloneTree();
      node1.isWhile();
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isOr();
      node0.hasMoreThanOneChild();
      node0.isVoid();
      node0.cloneTree();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164604692674942));
      Node node1 = new Node(30, node0, 38, 50);
      Node node2 = node1.copyInformationFrom(node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      node2.setSourceEncodedPositionForTree(15);
      String string0 = "com.google.javascript.rhino.JSDocInfo$Marker";
      Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      Node node3 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      // Undeclared exception!
      try { 
        node3.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164604692674942));
      Node node1 = Node.newNumber((double) 50);
      Node node2 = new Node(4, node1, node0, node1);
      node2.setSourceEncodedPositionForTree(49);
      Node node3 = Node.newString("com.google.javascript.rhino.JSDocInfo$Marker");
      // Undeclared exception!
      try { 
        node2.addChildBefore(node3, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isReturn();
      node0.getBooleanProp(2);
      node0.removeFirstChild();
      node0.getQualifiedName();
      node0.getChangeTime();
      Node node1 = new Node((-2705));
      node1.getJSDocInfo();
      Node node2 = new Node(105, node1, node1, 30, 155);
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> 30 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = Node.newString(130, "$RZjr;JyHj_q7");
      node0.putIntProp(2, 31);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString(850, "$RZjr;JyHj_q7");
      node1.putIntProp(15, 39);
      int int0 = Node.SYNTHETIC_BLOCK_PROP;
      Node node2 = Node.newString("$RZjr;JyHj_q7", (-777), 928);
      Node node3 = new Node(31, node2, node2, node2, node0);
      node3.addChildAfter(node1, node0);
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = new Node(148, 148, 148);
      node0.setSourceEncodedPositionForTree(148);
      node0.getJSDocInfo();
      node0.isGetProp();
      node0.isDo();
      node0.isVoid();
      Node node1 = node0.cloneTree();
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = new Node(125);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(102, node0, node0);
      node1.srcrefTree(node0);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node node0 = new Node(114);
      node0.isGetProp();
      node0.mayMutateGlobalStateOrThrow();
      node0.isUnscopedQualifiedName();
      node0.isCatch();
      node0.toStringTree();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      Node node0 = new Node(114);
      node0.setChangeTime(51);
      node0.getBooleanProp((-937));
      node0.getQualifiedName();
      node0.getChangeTime();
      node0.isCatch();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte)125;
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte)125;
      byteArray0[5] = (byte) (-100);
      byteArray0[6] = (byte)125;
      byteArray0[7] = (byte)125;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node((byte)125, (byte)125, 883);
      Node node1 = new Node(155, node0, node0, node0, node0, 46, 57);
      node0.hasMoreThanOneChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((byte)125);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      node1.removeChildren();
      node1.isDebugger();
      node1.isVoid();
      node1.isNot();
      node0.isContinue();
      node1.getSourceOffset();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = Node.newString(15, "}y:");
      node0.hasChild(node0);
      Node[] nodeArray0 = new Node[2];
      Node node1 = new Node(39);
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      Node node2 = new Node(29, nodeArray0);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node0);
      node0.checkTreeTypeAwareEqualsImpl(node0);
      // Undeclared exception!
      try { 
        node3.addChildToFront(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.isGetterDef();
      node0.isGetElem();
      node0.setCharno(40);
      node0.setType(120);
      node0.isCatch();
      Node node1 = new Node(51);
      Node node2 = Node.newString((-1478), "");
      node2.isNE();
      node0.isComma();
      node0.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = new Node(98);
      node0.setChangeTime(123);
      node0.isDo();
      node0.isIf();
      node0.cloneTree();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node node0 = new Node(125);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(43, node0, node0, node0);
      node0.hasMoreThanOneChild();
      Node node2 = node0.getParent();
      node1.checkTreeEquals(node2);
      node1.setLineno(54);
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node node0 = Node.newString(41, "}y:");
      node0.isAdd();
      node0.isGetProp();
      node0.hasMoreThanOneChild();
      node0.isNull();
      node0.getAncestor(132);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NULL
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = new Node(132);
      node0.getSourceOffset();
      node0.isFromExterns();
      node0.isStringKey();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node1.isWith();
      Node node2 = node1.cloneNode();
      node2.siblings();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = new Node(100, 100, 7);
      Node node1 = new Node(154);
      node0.isArrayLit();
      Node node2 = Node.newNumber((double) 154, 47, 4);
      node1.cloneTree();
      node2.isWhile();
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = Node.newString((-1475), "", (-1475), 44);
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isReturn();
      node0.getBooleanProp(2);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte) (-119);
      byteArray0[3] = (byte)119;
      byteArray0[4] = (byte)120;
      byteArray0[5] = (byte)114;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = new Node(18, 2, (byte)119);
      Node node2 = new Node(30, node1, node0, node0, node0, 32, 12);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.setMutatesArguments();
      Node node3 = node2.removeChildren();
      node2.isEmpty();
      node0.isVoid();
      node0.isNot();
      node0.isContinue();
      node1.getSourceOffset();
      Node node4 = null;
      try {
        node4 = new Node(29, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing sibling
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = Node.newString((-3301), "^-_tofyFPZo0qa*", (-3301), (-2996));
      Node node1 = new Node((-3301), node0, node0, node0);
      node0.hasMoreThanOneChild();
      node0.getParent();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -3301
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = new Node(0, 4, (-1570));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      Node node2 = new Node((-1570), node0, node1, node1, 0, 4574);
      node2.copyInformationFromForTree(node1);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
      try { 
        charArrayWriter0.append((CharSequence) "Object#Element", 4095, 4574);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = Node.newString("Z}l@r9[U-");
      node0.getAncestors();
      Node node1 = new Node(31, node0, node0, node0, node0, 49, 16);
      Node node2 = node1.copyInformationFromForTree(node0);
      Node node3 = Node.newString((-2041), "BUOfUr!U7'zz}ECnu");
      node3.setQuotedString();
      node2.getJSDocInfo();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING Z}l@r9[U- is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node0 = new Node(0, 1, 0);
      StringWriter stringWriter0 = new StringWriter(12);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry1);
      jSTypeRegistry1.createEnumType("Object#Element", node0, jSType0);
      FunctionType functionType0 = jSTypeRegistry1.createFunctionTypeWithVarArgs(jSType0, (List<JSType>) immutableList0);
      modificationVisitor1.caseFunctionType(functionType0);
      node0.getSourceOffset();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int0 = Node.IS_NAMESPACE;
      Node node0 = Node.newString("^ZjryH_q", 766, 13);
      Node node1 = new Node(43, node0, node0, node0);
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = Node.newString(130, "^ZjryH_q");
      node0.putIntProp(2, 31);
      int int0 = Node.IS_NAMESPACE;
      Node node1 = new Node(8, node0, node0, node0, node0);
      node1.addChildAfter(node1, node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Class<JSType> class0 = JSType.class;
      ServiceLoader<JSType> serviceLoader0 = ServiceLoader.loadInstalled(class0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) serviceLoader0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.replaceChildAfter(node0, node2);
      node0.isGetElem();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node node0 = new Node((-9));
      Node.newNumber((double) 0);
      node0.setSourceFileForTesting("BOTH");
      node0.setType((-9));
      Node node1 = new Node(51);
      Node node2 = node1.copyInformationFromForTree(node0);
      // Undeclared exception!
      try { 
        node2.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)119;
      byteArray0[2] = (byte) (-65);
      byteArray0[4] = (byte)92;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node((byte)119);
      Node node1 = new Node(31, node0, node0, node0, node0, 1, (byte) (-100));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4);
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      Node node2 = node1.removeChildren();
      node2.isDebugger();
      node1.isVoid();
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = new Node(43, 43, 43);
      Node node1 = new Node(49, node0, node0, 47, 39);
      node0.isObjectLit();
      node0.isEquivalentTo(node0, false, false, false);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.cloneTree();
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = new Node(150, 150, 150);
      node0.getSideEffectFlags();
      Node node1 = new Node(37, node0);
      node1.isCall();
      node1.isArrayLit();
      node1.isGetElem();
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = new Node(100, 100, 7);
      Node node1 = new Node(114, node0, node0, node0);
      node0.hasMoreThanOneChild();
      Node node2 = node0.getParent();
      node1.checkTreeEquals(node2);
      Node node3 = null;
      try {
        node3 = new Node(98, node0, node2, 1170, 43);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164605));
      Node node1 = Node.newNumber((double) 50);
      Node node2 = new Node(4, node1, node0, node1);
      node2.setSourceEncodedPositionForTree(49);
      node2.removeChildAfter(node0);
      Node node3 = Node.newNumber((double) 2, 38, 8);
      // Undeclared exception!
      try { 
        node2.addChildBefore(node3, node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.getSourceOffset();
      Node node1 = new Node(110);
      node0.toStringTree();
      node1.useSourceInfoFrom(node0);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node((-1586));
      nodeArray0[0] = node0;
      Node node1 = new Node(52);
      nodeArray0[1] = node1;
      Node node2 = Node.newNumber(0.0, 1481, 228);
      Node node3 = new Node(42, node1, node2, node0, node1, 51, 31);
      // Undeclared exception!
      try { 
        node3.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = new Node(132);
      node0.getSourceOffset();
      node0.isFromExterns();
      node0.isStringKey();
      Node node1 = node0.useSourceInfoFromForTree(node0);
      node1.getSourceOffset();
      node1.isWith();
      node1.srcref(node0);
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      boolean boolean0 = true;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[3];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      // Undeclared exception!
      try { 
        node0.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString(1, "Object#Element", 187, 1);
      Node node1 = new Node(187, node0, node0, node0);
      nodeArray0[0] = node1;
      Node node2 = new Node(1, nodeArray0, 54, 54);
      node2.isEquivalentTo(node0, true, true, true);
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 187
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = new Node(100, 100, 100);
      node0.isStringKey();
      Node node1 = new Node(57, node0, 57, (-2266));
      node0.useSourceInfoFromForTree(node1);
      node1.isWith();
      node1.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node node0 = Node.newString(114, "The new child node already has a parent.");
      node0.putIntProp(114, 114);
      node0.isWith();
      // Undeclared exception!
      try { 
        node0.getProp(114);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(127);
      node0.clonePropsFrom(node1);
      node0.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node0.getQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = Node.newString("n");
      node0.isObjectLit();
      Node node1 = new Node(40);
      node0.cloneNode();
      node0.isEquivalentTo(node1, false, false, false);
      node0.toStringTree();
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      node0.addSuppression("xwLE|XJT");
      node0.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isQualifiedName();
      node0.getQualifiedName();
      node0.isWith();
      node0.getProp(29);
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = Node.newString(26, "|0/=U");
      node0.isAdd();
      node0.isGetProp();
      node0.hasMoreThanOneChild();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      Node node1 = new Node(51, node0, node0, node0);
      node1.hasChildren();
      node1.getParent();
      node0.isLabel();
      node0.addChildToFront(node1);
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        node1.appendStringTree(pipedWriter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node node0 = new Node(132, (-2775), 35);
      Node node1 = new Node((-241), node0, node0, 126, (-1));
      node0.isNew();
      node1.isWhile();
      Node node2 = node1.removeChildren();
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SCRIPT is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node node0 = new Node(43);
      Node node1 = new Node(49, node0, node0, 47, 39);
      node0.getSourceOffset();
      double double0 = (-1.0);
      Node node2 = new Node((-460), 30, 48);
      Node node3 = new Node(2, node2);
      node0.detachFromParent();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      Node node0 = new Node(125);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(43, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node1.isDebugger();
      node0.isVoid();
      node1.isNot();
      node0.isContinue();
      node1.getSourceOffset();
      node1.getLastSibling();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BLOCK is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = new Node(102);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNoObjectType();
      node2.setJSType(jSType0);
      node2.useSourceInfoFromForTree(node0);
      node0.isOnlyModifiesThisCall();
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = new Node(100, 100, 100);
      node0.isNew();
      node0.isArrayLit();
      Node node1 = new Node((-345), node0, node0);
      node0.copyInformationFromForTree(node1);
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(32, node0, 122, 39);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(85, nodeArray0);
      node1.copyInformationFromForTree(node2);
      node1.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = new Node(148, 148, 148);
      node0.isGetterDef();
      node0.isWith();
      Node node1 = Node.newNumber((double) 46, 52, 167);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = new Node(130, 130, 130);
      node0.isEmpty();
      node0.isTry();
      Node node1 = Node.newString(" ~]U5,IO");
      node1.toString();
      node1.getSourceFileName();
      node0.copyInformationFrom(node1);
      node1.siblings();
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = new Node(43);
      Node node1 = new Node(49, node0, node0, 47, 39);
      node0.setType(40);
      node1.useSourceInfoFrom(node0);
      node1.isWith();
      node0.isEquivalentTo(node0, false, false, false);
      node1.isTry();
      node0.getSideEffectFlags();
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = new Node(64, 64, 64);
      node0.getInputId();
      node0.isObjectLit();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node[] nodeArray0 = new Node[7];
      Node node0 = new Node((-1586));
      nodeArray0[0] = node0;
      Node node1 = new Node(52);
      nodeArray0[1] = node1;
      Node.newString("com.google.common.collect.EmptyImmutableSet", 1206, (-1250));
      node1.isInstanceOf();
      Node.newString(1970, "com.google.common.collect.EmptyImmutableSet");
      node0.isTrue();
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node.newString(130, "^ZjryH_q");
      int int0 = Node.IS_NAMESPACE;
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(30, 33, 46);
      Node node1 = new Node(0, node0, (-1325), 0);
      node0.setSideEffectFlags(node_SideEffectFlags0);
      node1.mayMutateGlobalStateOrThrow();
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = Node.newString(26, "|0/=U");
      node0.isAdd();
      node0.isGetterDef();
      node0.isWith();
      node0.isNot();
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = Node.newNumber((double) 0);
      node0.clonePropsFrom(node1);
      node0.setChangeTime(142);
      node0.isDebugger();
      node0.hasMoreThanOneChild();
      node0.setWasEmptyNode(true);
      Node node2 = Node.newString(83, "/&b");
      node2.setIsSyntheticBlock(false);
      node2.isTrue();
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node node0 = Node.newString(38, "");
      node0.getQualifiedName();
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      jSTypeRegistry0.resetForTypeCheck();
      node0.getQualifiedName();
      Node node1 = Node.newString("/", 31, 252);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.setNoSideEffects(false);
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.addSuppression("\"NqehgXd9;");
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = Node.newString("");
      Node node1 = new Node(32, node0, node0, 4352, 53);
      node0.addChildToFront(node1);
      node0.isQuotedString();
      node0.getDirectives();
      node0.isBreak();
      node1.isVoid();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      node1.getJsDocBuilderForNode();
      Node node2 = node1.clonePropsFrom(node0);
      node2.isAssign();
      try { 
        node2.setString("2GrQttX4=H:h@\"Y9");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TYPEOF 4352 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[3];
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.isEquivalentTo(node0, true, true, true);
      Node node1 = new Node(130, node0, node0, node0, node0, 15, 31);
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Node node0 = new Node(3381);
      Node node1 = Node.newNumber((-609.886));
      Node node2 = new Node(3381, node0, node1);
      node2.checkTreeTypeAwareEqualsImpl(node1);
      node1.setLineno(57);
      node2.isVoid();
      node2.checkTreeEqualsImpl(node0);
      Node node3 = node0.srcref(node1);
      node3.isLabelName();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 3381
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      Node node0 = new Node(110, 110, 110);
      node0.toStringTree();
      node0.setCharno(110);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isNot();
      node0.getSourceOffset();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      Node node0 = new Node(118, 118, 118);
      node0.cloneNode();
      node0.isVoid();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node node0 = new Node(100, 100, 100);
      node0.isAnd();
      node0.isInc();
      node0.isAssign();
      node0.getSourcePosition();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node node0 = new Node(35);
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = Node.newString(130, "^ZjryH_q");
      int int0 = Node.IS_NAMESPACE;
      Node node1 = new Node(8, node0, node0, node0, node0);
      Node.newString("^ZjryH_q", 48, 52);
      node0.getInputId();
      node1.addChildAfter(node1, node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Class<JSType> class0 = JSType.class;
      ServiceLoader<JSType> serviceLoader0 = ServiceLoader.loadInstalled(class0);
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterable<? extends JSType>) serviceLoader0);
      jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node1.removeChild(node0);
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node node0 = new Node(100);
      node0.isHook();
      node0.isDefaultCase();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
      node0.getInputId();
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node node0 = new Node(125);
      node0.setLineno(125);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = new Node(43, node0, node0, node0);
      node0.isNumber();
      Node node2 = node0.getParent();
      node1.checkTreeEquals(node2);
      node0.isEmpty();
      node1.useSourceInfoFromForTree(node2);
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node node0 = Node.newNumber((double) 132);
      node0.getInputId();
      node0.isOnlyModifiesArgumentsCall();
      node0.getQualifiedName();
      Node node1 = new Node(32, node0, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = Node.newString("", 150, 150);
      node0.hasOneChild();
      Node node1 = Node.newString("h)", 150, 40);
      node0.isEquivalentTo(node1, false, false, true);
      node1.isGetterDef();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      modificationVisitor0.caseEnumElementType((EnumElementType) null);
      JSType[] jSTypeArray0 = new JSType[8];
      jSTypeArray0[0] = (JSType) null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jSTypeArray0[1] = (JSType) null;
      jSTypeArray0[2] = null;
      jSTypeArray0[3] = (JSType) null;
      jSTypeArray0[4] = (JSType) null;
      jSTypeArray0[5] = null;
      jSTypeArray0[6] = null;
      jSTypeArray0[7] = null;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      boolean boolean0 = false;
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      boolean boolean1 = false;
      boolean boolean2 = true;
      // Undeclared exception!
      try { 
        node1.getChildBefore(node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      int int0 = (-1431);
      Node node0 = new Node((-1431), (-1431), 4150);
      // Undeclared exception!
      try { 
        node0.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      Node node0 = new Node(113);
      node0.getSideEffectFlags();
      node0.detachChildren();
      node0.addSuppression("%0th>\"e09 2Sa");
      Node node1 = node0.cloneNode();
      node0.isOnlyModifiesThisCall();
      node1.getJSType();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.isStringKey();
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.setLineno(125);
      Node node1 = new Node(43, node0, node0, node0);
      node0.isNumber();
      Node node2 = Node.newNumber((-25.461), 12, 35);
      node0.addChildToFront(node1);
      node0.isArrayLit();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.getAncestor(40);
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = new Node(132, (-3058), 13);
      node0.setLineno(2384);
      Node node1 = new Node(40, node0, node0, node0);
      node0.isNumber();
      Node node2 = node0.getParent();
      node2.checkTreeEquals(node0);
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = new Node(26, 26, 31);
      node0.isVoid();
      node0.isBlock();
      node0.toStringTree();
      Node node1 = Node.newNumber(1172.7577724);
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = new Node(100, 100, 100);
      node0.isAnd();
      node0.isInc();
      node0.isAssign();
      Node node1 = new Node(49, node0, 118, 2227);
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node node0 = Node.newString(132, "C^DQ9MTr~/JXCbukz");
      node0.setOptionalArg(true);
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(50);
      node0.isNoSideEffectsCall();
      node1.addSuppression("C^DQ9MTr~/JXCbukz");
      node0.addChildToFront(node1);
      node1.isGetProp();
      node0.isHook();
      node1.addChildrenToBack(node0);
      node1.isBreak();
      node1.isAssign();
      node0.setSourceFileForTesting((String) null);
      node0.getJSDocInfo();
      node0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      node0.getSideEffectFlags();
      Node node1 = new Node(117, node0, node0, node0, node0, 9, 15);
      node0.isQualifiedName();
      node1.isCall();
      node1.isArrayLit();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      Node node0 = new Node(118, 118, 118);
      node0.isGetProp();
      node0.mayMutateGlobalStateOrThrow();
      node0.isUnscopedQualifiedName();
      node0.isCatch();
      node0.toStringTree();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      Node node0 = Node.newString(38, "");
      node0.isUnscopedQualifiedName();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp(38);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 38
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      node0.cloneNode();
      node0.isInc();
      node0.isAssign();
      Node.extractLineno((-2919));
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = new Node(114);
      node0.getInputId();
      Node node1 = new Node(52, node0, node0, (-1388), 36);
      node1.useSourceInfoFrom(node0);
      node1.isOnlyModifiesArgumentsCall();
      Node node2 = Node.newString(4, "g@a56%v", 56, 1);
      node2.getQualifiedName();
      Node node3 = new Node(43, node2, node1);
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags((-5501));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got RETURN
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = new Node(62, 57, 62);
      node0.getSideEffectFlags();
      node0.isCall();
      Node node1 = new Node(108, 53, 4);
      node1.copyInformationFrom(node0);
      // Undeclared exception!
      try { 
        node1.removeChild(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node node0 = new Node(118);
      node0.getBooleanProp(2);
      Node node1 = new Node(105, node0, node0, 30, 155);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FUNCTION <invalid> 30 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      Node node0 = Node.newString(38, "com.google.common.collect.Iterators$2");
      node0.isUnscopedQualifiedName();
      int int0 = Node.OPT_ARG_NAME;
      node0.children();
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      Node node1 = node0.cloneNode();
      node0.isInc();
      node0.isOnlyModifiesThisCall();
      node0.isAssign();
      node0.srcrefTree(node1);
      node0.isQuotedString();
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node node0 = new Node(0, 0, 0);
      Node node1 = new Node((-934), node0, node0);
      Node node2 = new Node(43);
      node2.isEquivalentToTyped(node1);
      Node node3 = Node.newString("ifPT|o@cNN1a.F8]", 4095, 985);
      Node node4 = node1.removeFirstChild();
      node1.detachChildren();
      node4.isIn();
      Node node5 = Node.newString(2, "", 69, 69);
      node0.addChildToBack(node5);
      node3.isIf();
      node3.isEquivalentTo(node0, false, false, false);
      Node node6 = Node.newString("ifPT|o@cNN1a.F8]");
      node3.isVoid();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      node6.srcrefTree(node3);
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node node0 = Node.newString(33, "2BKWHLq~sSHp6");
      // Undeclared exception!
      try { 
        node0.isUnscopedQualifiedName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      Node node0 = Node.newString(37, "C");
      node0.hasOneChild();
      Node node1 = new Node(2, node0, node0, 57, 57);
      node0.isEquivalentTo(node0, false, false, true);
      node1.getStaticSourceFile();
      node1.isTrue();
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = Node.newString(132, "}]|5<=9?'$");
      Node node1 = new Node(113, node0, node0, 31, 4);
      node0.useSourceInfoFromForTree(node1);
      int int0 = Node.NO_SIDE_EFFECTS;
      node1.checkTreeEqualsImpl(node1);
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node node0 = Node.newString(100, "_6Mq,biBc");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(1, node0, node0, 47, 0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isNoSideEffectsCall();
      node1.cloneNode();
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      int int0 = Node.SIDE_EFFECTS_FLAGS_MASK;
      Node node0 = new Node(125, 35, 125);
      node0.isVoid();
      node0.isBlock();
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      Node node0 = new Node(37);
      node0.setSourceFileForTesting("com.google.javascript.rhino.Node");
      node0.getSourceOffset();
      node0.toStringTree();
      Node node1 = Node.newString((-1), "CALL [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]\n", 57, 36);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = Node.newNumber((-2779.015971628951));
      Node node1 = new Node(113);
      node0.isStringKey();
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.getJSDocInfo();
      node2.isSwitch();
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.setLineno(125);
      Node node1 = new Node(43, node0, node0, node0);
      node1.srcref(node0);
      node0.toStringTree();
      node1.checkTreeEquals(node0);
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      JSType jSType1 = modificationVisitor0.caseNoType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType1);
      Node node0 = new Node(33, 93, 0);
      StringWriter stringWriter0 = new StringWriter();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter1);
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry1);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("rx}N2JTin", node0, jSType1);
      JSTypeRegistry jSTypeRegistry2 = new JSTypeRegistry(simpleErrorReporter0, false);
      FunctionType functionType0 = jSTypeRegistry2.createFunctionTypeWithVarArgs((JSType) enumType0, (List<JSType>) immutableList0);
      jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) functionType0, (List<JSType>) immutableList0);
      modificationVisitor0.caseFunctionType(functionType0);
      node0.isEmpty();
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) immutableList0);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      Node node0 = new Node(148, 148, 148);
      Node node1 = node0.cloneNode();
      node1.isInc();
      node1.isAssign();
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = new Node(132, 132, (-1222));
      Node node1 = Node.newString("h%jPT.+", 39, 503931);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isGetterDef();
      node1.getIndexOfChild(node0);
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node(100, 100, 100);
      Node node1 = Node.newNumber((-8.032021787327118), 100, 47);
      node0.srcref(node1);
      node0.isAnd();
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = new Node(154);
      node0.isAnd();
      node0.isLabelName();
      Node node1 = new Node(32, node0, node0, node0, node0, 26, 49);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node node0 = new Node(102, 18, 18);
      node0.isInc();
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'.E35D=>hO");
      Node node0 = Node.newString(130, "^ZjryH_q");
      int int0 = Node.IS_NAMESPACE;
      Node node1 = new Node(8, node0, node0, node0, node0);
      node0.getInputId();
      node1.addChildAfter(node1, node0);
      Node node2 = new Node((-2399));
      Node node3 = node1.useSourceInfoFrom(node2);
      node3.setWasEmptyNode(false);
      node2.getJSDocInfo();
      node3.isSwitch();
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      Node node1 = node0.cloneNode();
      node1.isAnd();
      // Undeclared exception!
      try { 
        node1.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      Node node0 = new Node(154);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      Node node0 = new Node(30);
      node0.setChangeTime(36);
      node0.isGetProp();
      node0.hasMoreThanOneChild();
      node0.getSourceFileName();
      node0.isVoid();
      node0.setLength(36);
      Node node1 = node0.cloneTree();
      node1.copyInformationFromForTree(node0);
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Cd0{b[K[)+wFD~t`9_w");
      Node node0 = new Node(124, 124, 987);
      Node node1 = new Node(3919, node0, 55, (-1395));
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      Node node0 = Node.newString(38, "com.google.common.collect.Iterators$2");
      node0.getQualifiedName();
      node0.isDelProp();
      Node node1 = Node.newString("%s (%s) must not be negative", 2274, 2);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING %s (%s) must not be negative 2274 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.EnumType");
      node0.isGetterDef();
      node0.isGetElem();
      Node node1 = new Node(39, node0, node0, node0, node0, 46, 0);
      Node node2 = Node.newNumber((double) 0);
      node1.setChangeTime(49);
      node1.isAssignAdd();
      node1.replaceChild(node0, node2);
      node1.srcrefTree(node2);
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.setLineno(125);
      Node node1 = new Node(43, node0, node0, node0);
      node0.isNumber();
      Node node2 = Node.newNumber((-25.461), 12, 35);
      node0.addChildToFront(node1);
      node0.isArrayLit();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node1.getAncestor(55);
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(16, node0, node0);
      node0.useSourceInfoFrom(node1);
      node0.isLabel();
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      Node node1 = new Node(15, node0, node0, node0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isAnd();
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164605));
      Node node1 = new Node(49);
      Node node2 = new Node(0, node1, node0);
      node2.useSourceInfoFrom(node0);
      node1.getJSDocInfo();
      node2.isSwitch();
      node0.isFor();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = Node.newString(47, "!2}[$4EX^rIYkw3o2i3");
      Node node2 = new Node(3204, node1, node1, 565, (-770));
      node0.useSourceInfoIfMissingFromForTree(node1);
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node2;
      nodeArray0[1] = node0;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      Node node3 = null;
      try {
        node3 = new Node(21, nodeArray0, 57, 16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.setLineno(125);
      Node node1 = new Node(43, node0, node0, node0);
      node1.checkTreeEquals(node0);
      node0.isEmpty();
      node1.isLocalResultCall();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      Node node0 = new Node(18, 18, 18);
      Node node1 = new Node(29, node0, node0, 29, 18);
      node1.removeFirstChild();
      node1.isNew();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(4095);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NEG
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node node0 = new Node(31, 1874, 31);
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      node0.setLineno(125);
      node0.isUnscopedQualifiedName();
      node0.isQualifiedName();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      Node node0 = Node.newString(38, "mom.google.common.collect.Iterators$2");
      node0.setSourceEncodedPosition(38);
      node0.setSourceFileForTesting("mom.google.common.collect.Iterators$2");
      node0.isNoSideEffectsCall();
      // Undeclared exception!
      try { 
        node0.getSourceOffset();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should not call getLineOffset with line number 0
         //
         verifyException("com.google.javascript.rhino.jstype.SimpleSourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test659()  throws Throwable  {
      Node node0 = new Node(118);
      node0.getBooleanProp(2);
      Node node1 = new Node(36, node0, node0, node0);
      node0.isEquivalentTo(node1, false, false, false);
      node0.isCall();
      node0.isBlock();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test660()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      Node node1 = Node.newString("xf'W5yE$gC8O", 37, 52);
      node1.isEquivalentTo(node0, false, true, false);
      Node node2 = new Node(30, node0, 2, 42);
      node2.toStringTree();
      node2.getJSDocInfo();
      node0.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test661()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = new Node(112, node0, node0, 51, 4095);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isNoSideEffectsCall();
      node0.checkTreeEqualsImpl(node1);
      node1.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test662()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0, jSType0);
      Node node0 = Node.newString("Object#Element");
      StringWriter stringWriter0 = new StringWriter();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor1 = new ModificationVisitor(jSTypeRegistry1);
      jSTypeRegistry1.createEnumType("Object#Element", node0, jSType0);
      FunctionType functionType0 = jSTypeRegistry1.createFunctionTypeWithVarArgs(jSType0, (List<JSType>) immutableList0);
      modificationVisitor1.caseFunctionType(functionType0);
      Node node1 = new Node(52, node0, node0, node0);
      node0.isEquivalentTo(node1, true, false, true);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test663()  throws Throwable  {
      Node node0 = new Node(51);
      Node node1 = new Node(158, node0, node0, node0, node0, 103, 673);
      node1.removeChildren();
      node1.getBooleanProp(51);
  }

  @Test(timeout = 4000)
  public void test664()  throws Throwable  {
      Node node0 = new Node(43);
      Node node1 = new Node(33);
      node1.useSourceInfoFrom(node0);
      node0.getJSDocInfo();
      node0.isSwitch();
      // Undeclared exception!
      try { 
        node0.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test665()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g@a56%v");
      Node node0 = Node.newString(38, "mom.google.common.collect.Iterators$2");
      node0.setSourceFileForTesting("mom.google.common.collect.Iterators$2");
      node0.isQualifiedName();
      node0.isQualifiedName();
  }

  @Test(timeout = 4000)
  public void test666()  throws Throwable  {
      Node node0 = new Node(30);
      Node node1 = new Node(15, node0, node0, (-1097), 56);
      node1.isArrayLit();
      node0.setSideEffectFlags(3831);
      node0.getDirectives();
  }

  @Test(timeout = 4000)
  public void test667()  throws Throwable  {
      Node node0 = Node.newNumber((-2779.015971628951));
      Node node1 = new Node(113);
      node1.isWhile();
      node1.isUnscopedQualifiedName();
      node0.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test668()  throws Throwable  {
      Node node0 = new Node(44, 44, 44);
      Node node1 = Node.newString("ikput_id", 52, 53);
      node1.isBreak();
      node0.isEmpty();
      Node node2 = node0.copyInformationFrom(node1);
      node2.toString(false, true, true);
  }

  @Test(timeout = 4000)
  public void test669()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-1539), (-1539));
      node0.setLength(2857);
      node0.isNE();
      node0.isNE();
      Node node1 = new Node(4095);
      node0.addChildrenToFront(node1);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.isVarArgs();
      node2.getQualifiedName();
      Node node3 = node0.getChildAtIndex((-1539));
      node3.isNew();
      node3.getBooleanProp(1);
      node0.isSwitch();
      node3.getJSDocInfo();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(1033);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test670()  throws Throwable  {
      Node node0 = new Node(154);
      node0.isStringKey();
      Node node1 = null;
      try {
        node1 = new Node(47, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test671()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(101, 3963, 3963);
      node0.getQualifiedName();
      node1.srcrefTree(node0);
  }

  @Test(timeout = 4000)
  public void test672()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      Node node0 = new Node(39);
      nodeArray0[0] = node0;
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test673()  throws Throwable  {
      Node node0 = new Node(119, 53, 119);
      Node node1 = new Node(48, 37, 53);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test674()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(37, node0, node0, node0, 40, 48);
      node0.useSourceInfoIfMissingFrom(node1);
      Node node2 = null;
      try {
        node2 = new Node(39, node0, node0, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test675()  throws Throwable  {
      Node node0 = Node.newNumber((-433.859), (-1099), (-1099));
      node0.getLength();
      node0.setIsSyntheticBlock(true);
      node0.isSyntheticBlock();
      int int0 = (-4848);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);
      char[] charArray0 = new char[2];
      charArray0[0] = 'u';
      charArray0[1] = 'u';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, (-1538), 29);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test676()  throws Throwable  {
      Node node0 = new Node(118, 1610612736, 118);
      Node node1 = new Node(47, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.isAssign();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test677()  throws Throwable  {
      Node node0 = new Node(38);
      node0.isNE();
      node0.isLabelName();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test678()  throws Throwable  {
      Node node0 = Node.newString(117, "^q");
      int int0 = Node.IS_NAMESPACE;
      Node node1 = new Node(21);
      Node node2 = Node.newNumber((double) 46, (-5461), 191);
      Node node3 = new Node(83, node0, node1, node2, node2);
      InputId inputId0 = new InputId((String) null);
      node0.removeProp(117);
      // Undeclared exception!
      try { 
        node2.addChildAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test679()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.checkTreeEquals(node0);
      Node node1 = new Node(65535, node0, node0);
      Node node2 = node0.clonePropsFrom(node1);
      node0.isEmpty();
      node0.isLabel();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node1;
      nodeArray0[4] = node2;
      nodeArray0[5] = node1;
      Node node3 = null;
      try {
        node3 = new Node(81, nodeArray0, 12, 52);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test680()  throws Throwable  {
      Node node0 = new Node(117);
      node0.isVar();
      node0.isBreak();
      node0.isHook();
      Node node1 = new Node(522, node0, node0, node0, node0);
      node0.clonePropsFrom(node1);
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test681()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      Node node1 = new Node(8);
      Node node2 = new Node(41, node0, node1, node0, node0);
      node2.srcrefTree(node1);
      Node node3 = null;
      try {
        node3 = new Node(40, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test682()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      Node node1 = new Node(15);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test683()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[1];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType((String) null);
      jSTypeArray0[0] = (JSType) templateType0;
      Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node1 = new Node(36, node0, node0);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test684()  throws Throwable  {
      Node node0 = new Node(85, 85, 85);
      Node node1 = new Node(29, node0, node0);
      InputId inputId0 = new InputId("C1Boc1jI5");
      node1.setInputId(inputId0);
      node0.clonePropsFrom(node1);
      node0.isAssign();
      node0.isAdd();
  }

  @Test(timeout = 4000)
  public void test685()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      Node node1 = new Node(57);
      node0.useSourceInfoFrom(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test686()  throws Throwable  {
      Node node0 = Node.newNumber((double) 18);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      jSTypeRegistry0.hasNamespace("Y5o;\"ms,)&_");
      TemplateTypeMapReplacer templateTypeMapReplacer0 = new TemplateTypeMapReplacer(jSTypeRegistry0, (TemplateTypeMap) null);
      node0.setSourceFileForTesting("Object#Element");
      node0.getSourceOffset();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test687()  throws Throwable  {
      Node node0 = Node.newNumber((-7.12222417882953));
      Node node1 = Node.newNumber((double) 50);
      Node node2 = new Node(4, node1, node0, node1);
      node2.useSourceInfoFrom(node1);
      node0.getJSDocInfo();
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test688()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]NxK$MV`");
      Node node0 = Node.newString(86, "a{Rxj[K");
      node0.isComma();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test689()  throws Throwable  {
      Node node0 = Node.newString("Ya~B&u$h", 20, 3805);
      Node node1 = new Node(64, node0, node0);
      Node node2 = node1.srcrefTree(node0);
      Node node3 = new Node(20, node2);
      // Undeclared exception!
      try { 
        node3.replaceChild(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test690()  throws Throwable  {
      Node node0 = new Node(130);
      int int0 = Node.IS_NAMESPACE;
      Node node1 = new Node(4, node0, node0, node0, node0, 32, 46);
      InputId inputId0 = new InputId("^ZjryH_q");
      node1.addChildAfter(node1, node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Class<JSType> class0 = JSType.class;
      ServiceLoader.loadInstalled(class0);
      node1.checkTreeEquals(node0);
      node1.isLabel();
  }

  @Test(timeout = 4000)
  public void test691()  throws Throwable  {
      Node node0 = new Node(123);
      Node node1 = new Node(44, node0, node0, (-1031), 2059);
      node1.getDirectives();
      node1.srcrefTree(node0);
      node0.isVarArgs();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      String string0 = null;
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 123
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test692()  throws Throwable  {
      Node node0 = Node.newNumber((-2779.015971628951));
      Node node1 = Node.newString(649, "TWI0");
      Node node2 = new Node(49, node0, node1, 153, 53);
      Node node3 = node2.useSourceInfoIfMissingFromForTree(node1);
      node3.isNoSideEffectsCall();
      node2.checkTreeEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test693()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newNumber((-366.028));
      nodeArray0[0] = node0;
      Node node1 = new Node(2985, nodeArray0);
      node0.getIntProp(4095);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test694()  throws Throwable  {
      Node node0 = new Node(105);
      Node node1 = new Node(130, (-2039), (-1377));
      Node node2 = new Node(39, node1, node1, node1);
      node2.removeChildren();
      Node node3 = Node.newNumber((-1746.5354169412587));
      node3.removeFirstChild();
      // Undeclared exception!
      try { 
        node3.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test695()  throws Throwable  {
      Node node0 = new Node(43);
      Node node1 = new Node((-1875));
      node0.clonePropsFrom(node1);
      node0.isBlock();
  }

  @Test(timeout = 4000)
  public void test696()  throws Throwable  {
      Node node0 = new Node(118);
      node0.isFor();
      node0.type = 118;
      Node node1 = Node.newNumber((double) 49, 4095, 15);
      Node node2 = new Node(112, node1, node0, node1, node0, 1, 16);
      node0.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test697()  throws Throwable  {
      Node node0 = new Node(18, 18, (-912));
      node0.isTry();
      Node node1 = Node.newNumber((-1177.32), 32, 30);
      Node node2 = new Node(56, node0, node1, 3465, 43);
      node1.addChildToFront(node2);
      node0.isAdd();
      node0.checkTreeEqualsImpl(node1);
      Node node3 = node1.getAncestor(57);
      node3.detachFromParent();
      node2.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test698()  throws Throwable  {
      Node node0 = new Node(33, 33, 33);
      node0.toStringTree();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(";`tJ.~ ,s7Jb~O{=I", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node1 = new Node(8, node0, (-1), 16);
      node0.addChildrenToBack(node1);
      node0.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test699()  throws Throwable  {
      Node node0 = new Node(38, 38, 38);
      node0.setSourceEncodedPositionForTree(38);
      node0.getStaticSourceFile();
      Node node1 = Node.newString("Jl8yHs.@:!,b", 1398, 320);
      node0.srcref(node1);
      try { 
        node0.setDouble(38);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 1398 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test700()  throws Throwable  {
      Node node0 = new Node(301, 301, 301);
      node0.setVarArgs(true);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(117, nodeArray0, 38, 49);
      node1.useSourceInfoFromForTree(node0);
      node0.srcref(node0);
  }

  @Test(timeout = 4000)
  public void test701()  throws Throwable  {
      Node node0 = Node.newString(91, "_6Mq,biBc");
      Node node1 = new Node(1, node0, node0, 47, 0);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node0.addChildToFront(node1);
      node1.isNoSideEffectsCall();
      node1.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test702()  throws Throwable  {
      Node node0 = new Node(38);
      node0.isVoid();
      // Undeclared exception!
      try { 
        node0.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test703()  throws Throwable  {
      Node node0 = new Node(38);
      Node node1 = new Node(4, node0, node0, node0, node0);
      node0.srcrefTree(node1);
      Node node2 = null;
      try {
        node2 = new Node(48, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test704()  throws Throwable  {
      Node node0 = Node.newString(43, "NOT");
      Node node1 = new Node(40);
      node1.clonePropsFrom(node0);
      node1.clonePropsFrom(node0);
      Node.extractLineno(15);
  }

  @Test(timeout = 4000)
  public void test705()  throws Throwable  {
      Node node0 = new Node(86);
      Node node1 = new Node(86, node0, node0, node0, node0);
      node0.srcrefTree(node1);
      Node node2 = null;
      try {
        node2 = new Node(8, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test706()  throws Throwable  {
      Node node0 = Node.newNumber((-2779.015971628951));
      Node node1 = new Node(113);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isNoSideEffectsCall();
      node0.checkTreeEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test707()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164605));
      Node node1 = Node.newNumber((double) 50);
      Node node2 = new Node(4, node1, node0, node1);
      node2.removeChildAfter(node0);
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test708()  throws Throwable  {
      Node node0 = new Node(752, 752, 1024);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(30, node0, 47, 300);
      node1.mayMutateArguments();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node2.replaceChild(node0, node1);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test709()  throws Throwable  {
      Node node0 = Node.newString(44, "a{Rxj[K");
      node0.setSourceFileForTesting("a{Rxj[K");
      node0.setQuotedString();
      node0.isComma();
      node0.toString();
      node0.isQuotedString();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test710()  throws Throwable  {
      Node node0 = new Node(100, 100, 100);
      Node node1 = new Node(0, node0, node0, node0, node0, 2, 38);
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isNoSideEffectsCall();
      node1.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test711()  throws Throwable  {
      Node node0 = new Node(100);
      Node node1 = new Node((-4393), node0, 287, 2);
      node0.srcrefTree(node1);
      node0.isAnd();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test712()  throws Throwable  {
      Node node0 = new Node(117);
      Node node1 = Node.newNumber((-28.910308526), 36, 105);
      node0.srcrefTree(node1);
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test713()  throws Throwable  {
      Node node0 = new Node(101);
      node0.isAnd();
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test714()  throws Throwable  {
      Node node0 = new Node(117);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ie\"L_%vV>");
      Node node1 = new Node(47);
      node1.setSourceEncodedPositionForTree(102);
      node1.cloneNode();
      node0.isSwitch();
  }

  @Test(timeout = 4000)
  public void test715()  throws Throwable  {
      Node node0 = new Node(4, 4, 4);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)103;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = new Node(33, node0, node0, (-320), 50);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isNoSideEffectsCall();
      node2.checkTreeEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test716()  throws Throwable  {
      Node node0 = new Node(130);
      Node node1 = new Node(47, node0, node0, node0, node0);
      node1.srcrefTree(node0);
      Node node2 = null;
      try {
        node2 = new Node(51, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test717()  throws Throwable  {
      Node node0 = new Node(130);
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test718()  throws Throwable  {
      Node node0 = new Node(86);
      Node node1 = new Node(21, node0, node0, node0, node0);
      node1.srcrefTree(node0);
      Node node2 = null;
      try {
        node2 = new Node((-1076), node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test719()  throws Throwable  {
      Node node0 = Node.newString(100, "_6Mq,biBc");
      Node node1 = new Node(1, node0, node0, 47, 0);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node1.isNoSideEffectsCall();
      node1.checkTreeEqualsImpl(node1);
      node1.siblings();
      node1.srcrefTree(node2);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(1153);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test720()  throws Throwable  {
      Node node0 = Node.newNumber((-6.164605));
      Node node1 = Node.newNumber((double) 50);
      node1.useSourceInfoFromForTree(node0);
      Node node2 = new Node(4, node1, node0, node1);
      node2.removeChild(node1);
      node2.removeChildAfter(node0);
  }

  @Test(timeout = 4000)
  public void test721()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(3219, node0);
      Node node2 = node0.srcrefTree(node1);
      Node node3 = null;
      try {
        node3 = new Node(1464, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test722()  throws Throwable  {
      Node node0 = Node.newNumber(0.5);
      Node node1 = new Node((-1306));
      node1.type = 47;
      Node node2 = node1.clonePropsFrom(node0);
      node2.getDirectives();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
