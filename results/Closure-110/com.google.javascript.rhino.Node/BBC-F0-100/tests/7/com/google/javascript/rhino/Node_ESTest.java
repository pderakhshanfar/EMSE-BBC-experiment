/*
 * This file was automatically generated by EvoSuite
 * Fri Aug 06 13:14:20 GMT 2021
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeNative;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TemplatizedType;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.PrintStream;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.ServiceLoader;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Node_ESTest extends Node_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(32, 32, 32);
      Node node1 = new Node(55);
      Node node2 = new Node(2706, node1, node0, node0, 749, 43);
      node2.setType(32);
      node1.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEquivalentTo(node1, false, true, false);
      node1.isScript();
      node2.getDirectives();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e3,|eS");
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(93, nodeArray0, (-1448), 15);
      Node node1 = new Node(93, node0);
      node1.clonePropsFrom(node0);
      node1.getParent();
      node1.isLabelName();
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = Node.newString(35, "=k ,Cm1zy+?D3iV");
      node0.getInputId();
      Node node1 = new Node(35, node0, node0, node0, 42, 15);
      node1.copyInformationFromForTree(node0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.isFromExterns();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got GETELEM
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = Node.newString("K?LI~(rUr61.");
      node0.getBooleanProp(40);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(148, node0, 2, 36);
      node1.isThrow();
      node1.toString();
      node0.isInstanceOf();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isName();
      node0.setLineno(818);
      Node node2 = new Node(761);
      node1.clonePropsFrom(node2);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = Node.newString((-1), "h q8bNn");
      node0.toString();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = Node.newNumber(0.5, 33, 30);
      Node node2 = node1.srcref(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("RE;#@MxnR$9", true);
      node0.setStaticSourceFile(simpleSourceFile0);
      Node node3 = new Node(101, node1, 47, 0);
      node3.getQualifiedName();
      node2.putIntProp(46, 50);
      node2.isVoid();
      node0.isNoSideEffectsCall();
      node1.toString();
      node1.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 117);
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(38, node0, 46, 38);
      node0.isOptionalArg();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isWith();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = new Node((-1645), (-1645), (-1645));
      node0.isGetProp();
      Node node1 = Node.newString("lx!mf");
      Node node2 = new Node((-168), node1, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1564));
      node2.removeChildAfter(node1);
      node2.isArrayLit();
      node1.toString(false, true, true);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = new Node(32, 32, 32);
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      node_AncestorIterable0.iterator();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = new Node(13, 13, 13);
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.setType(103);
      node0.isDec();
      node0.getBooleanProp(13);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = Node.newString(">YSQW`~MuhJ\"a*G");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node1 = new Node(43, node0, node0);
      node1.isLocalResultCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEquivalentTo(node0);
      node0.setQuotedString();
      Node node2 = node1.getAncestor(0);
      node0.toString();
      node1.isDec();
      node0.isName();
      node2.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.toString();
      Node node1 = node0.srcref(node0);
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("BLOCK 125", false);
      node1.setStaticSourceFile(simpleSourceFile0);
      node0.getQualifiedName();
      node1.putIntProp(37, 53);
      node0.isVoid();
      node0.isNoSideEffectsCall();
      node0.toString();
      node0.getSourceFileName();
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.incrementGeneration();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(4112, node0, node0, node0, node0, 29, (-3113));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Object#Key");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node1.isNE();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node node3 = Node.newString("Object#Key");
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node1.isEquivalentTo(node2, false, true, false);
      node3.isEmpty();
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(31, node0);
      node0.useSourceInfoFromForTree(node1);
      node0.isDebugger();
      node0.isWith();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = Node.newString("K?LI~(rUr61.");
      node0.getBooleanProp(40);
      Node node1 = new Node(148, node0, 2, 36);
      node0.isNew();
      node1.toString();
      node0.isInstanceOf();
      node0.isAssign();
      node0.isFromExterns();
      Node node2 = node1.getLastSibling();
      node0.isEquivalentTo(node2, false, false, false);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = Node.newString(",sJXIaWQbdj!");
      node0.setType(37);
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(4, node0, node0);
      node1.removeChild(node0);
      node1.srcrefTree(node0);
      node0.isTrue();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isVar();
      JSTypeNative jSTypeNative0 = JSTypeNative.GREATEST_FUNCTION_TYPE;
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node(215, nodeArray0);
      node1.getBooleanProp(48);
      Node node2 = node0.srcrefTree(node1);
      JSTypeNative jSTypeNative1 = JSTypeNative.ARRAY_FUNCTION_TYPE;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.putProp(57, jSTypeNative1);
      node2.toString();
      node0.isThrow();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = new Node(1843, 1843, 1843);
      node0.setType(112);
      node0.mayMutateGlobalStateOrThrow();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(48, node0, node0, node0, node0, 56, 57);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node1.wasEmptyNode();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags1.clearAllFlags();
      node1.isQualifiedName();
      node0.isLabelName();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.getStaticSourceFile();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node2.getFirstChild();
      node2.isHook();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newString("K?LI~(rUr61.");
      node0.getBooleanProp(40);
      Node node1 = new Node(148, node0, 2, 36);
      node0.isNew();
      node1.toString();
      node0.isInstanceOf();
      node0.isNE();
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.removeProp(3557);
      Node node3 = Node.newString(2580, "side_effect_flags", (-2768), 51);
      node0.isIf();
      Node node4 = Node.newString(806, "K?LI~(rUr61.");
      node2.isAdd();
      node4.getJSDocInfo();
      node3.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194298, 4194298, 4194298);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(31);
      node0.getQualifiedName();
      Node node2 = node0.getAncestor(0);
      node2.toString();
      node1.isDec();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = new Node((-1645), (-1645), (-1645));
      node0.isGetProp();
      Node node1 = Node.newString("lx!mf");
      Node node2 = new Node(272, 2, 54);
      Node node3 = new Node((-168), node1, node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1564));
      Node node4 = node3.removeChildAfter(node1);
      node4.isWith();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(0, node0, node0, node0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        node1.addChildrenAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = new Node(108, (-379), (-379));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.hasChildren();
      node0.isGetProp();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = new Node(119, 119, 119);
      node0.setType(130);
      node0.cloneTree();
      node0.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEquivalentTo(node0, false, false, false);
      node0.getSourceFileName();
      node0.isHook();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(51);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isFalse();
      node0.isQualifiedName();
      node0.isCall();
      Node node1 = node0.cloneNode();
      node1.addChildToBack(node0);
      node1.isContinue();
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.toString();
      node0.isDec();
      Node node1 = new Node(15, node0, node0, node0, 148, 88);
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isAdd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      node1.getProp(35);
      Node node2 = Node.newString(37, "}oIw)E(Nm");
      node2.isCall();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = new Node(100);
      node0.setType(4194278);
      node0.isSyntheticBlock();
      node0.getType();
      Node node1 = new Node(32, node0, node0, node0);
      node1.useSourceInfoFromForTree(node0);
      Node node2 = Node.newString(51, "free_call", 15, (-536870912));
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = Node.newString((-948), ":_6[ZhY");
      Node node1 = new Node(47, node0);
      node1.isEquivalentToTyped(node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isEquivalentToShallow(node1);
      try { 
        node1.setString((String) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // REGEXP is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = new Node(56, 56, 56);
      node0.setType(93);
      node0.isSyntheticBlock();
      node0.isAssignAdd();
      node0.isDec();
      node0.isWith();
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = new Node((-508), (-508), (-508));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(57, node0, node0, node0, node0, 2, 16);
      Node node2 = new Node(47);
      node1.replaceChild(node0, node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(300);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(57);
      node_SideEffectFlags1.setAllFlags();
      node2.setJSDocInfo(jSDocInfo0);
      node2.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(114);
      Node node1 = node0.cloneNode();
      node0.setType(4095);
      node0.getSideEffectFlags();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = Node.newString(",sJXIaWQbdj!");
      node0.isCase();
      node0.setType(37);
      node0.isEquivalentTo(node0);
      node0.isIf();
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = new Node(56);
      node0.setType(85);
      node0.isSyntheticBlock();
      node0.getType();
      Node node1 = new Node(56, node0, node0, node0);
      node1.getJsDocBuilderForNode();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node2.isDefaultCase();
      Node node3 = null;
      try {
        node3 = new Node(37, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = new Node(125, 125, 125);
      node0.toString();
      Node node1 = node0.srcref(node0);
      node0.getQualifiedName();
      node0.setJSDocInfo((JSDocInfo) null);
      node1.isEmpty();
      node0.hasMoreThanOneChild();
      node0.getQualifiedName();
      node1.removeProp(49);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = Node.newNumber((double) 154, (-596), 86);
      Node node1 = new Node(154, node0);
      node1.isOnlyModifiesThisCall();
      Node node2 = new Node((-596), node1, node1, 42, 57);
      Node node3 = node2.removeFirstChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.STRING_OBJECT_FUNCTION_TYPE;
      FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
      JSType.toMaybeTemplatizedType((JSType) functionType0);
      node3.setJSType((JSType) null);
      // Undeclared exception!
      try { 
        node2.getAncestor((-2876));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = new Node(154, 38, (-2985));
      node0.toString();
      Node node1 = new Node(38, node0, node0, node0, node0, 4095, 37);
      node0.srcref(node1);
      // Undeclared exception!
      try { 
        node1.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 4095 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = new Node(146, 146, 146);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-44);
      node0.isOnlyModifiesArgumentsCall();
      node0.children();
      Node node1 = new Node((byte) (-44), node0, 8, 8);
      node0.isAssign();
      node1.isAssign();
      node0.isEquivalentToShallow(node0);
      node1.addChildBefore(node1, node0);
      node0.detachFromParent();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = new Node(1843);
      node0.setType(0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(1843);
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node0.isNE();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = Node.newNumber((-1640.28));
      node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = new Node((-531), (-531), (-531));
      node0.getJSDocInfo();
      Node node1 = new Node((-531), node0, node0, node0, node0, 49, (-1013));
      node1.isTrue();
      node1.hasOneChild();
      Node node2 = new Node(47);
      node1.replaceChild(node0, node2);
      node2.isDelProp();
      Node node3 = node2.copyInformationFrom(node0);
      node3.copyInformationFromForTree(node1);
      node3.setChangeTime(38);
      node0.isString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1435));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node2.isThrow();
      node1.getBooleanProp(39);
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(57);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got REGEXP
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = new Node(1843);
      node0.setType(0);
      Node node1 = new Node(45, node0, node0, node0);
      node0.getLastSibling();
      Node node2 = Node.newString(31, "$[0-9]+", 3607, 1);
      node2.setCharno(1736);
      node0.isEquivalentTo(node2, false, false, true);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Node node0 = new Node(102, 102, 102);
      node0.setType(130);
      node0.isNumber();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.isGetProp();
      node0.isVar();
      Node node1 = new Node((-356), 2, 52);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(33, node0);
      Node node2 = node1.srcref(node0);
      node2.getQualifiedName();
      node0.isEmpty();
      node0.hasMoreThanOneChild();
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = new Node(119, 119, 119);
      node0.setType(101);
      node0.isSyntheticBlock();
      node0.isOr();
      node0.isSwitch();
      node0.isGetProp();
      node0.isHook();
      Node node1 = Node.newString("(1lYU4jQu", 16, (-881));
      node0.useSourceInfoFrom(node1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = new Node(88);
      Node node1 = new Node(63, node0);
      node1.srcrefTree(node0);
      Node node2 = null;
      try {
        node2 = new Node((-3699), node1, node0, 46, 42);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node(56);
      node0.setVarArgs(false);
      node0.setType(47);
      node0.getDirectives();
      node0.isContinue();
      node0.isDo();
      Node node1 = Node.newString("", 37, 55);
      node0.clonePropsFrom(node1);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = new Node(6);
      Node node1 = new Node(4095, node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      Vector<JSType> vector0 = new Vector<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
      Node node3 = node2.srcrefTree(node0);
      node0.getQualifiedName();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = new Node(32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.getQualifiedName();
      node0.putIntProp(32, 132);
      node0.getBooleanProp((-2444));
      Node node1 = new Node(2529, node0, node0, node0);
      node0.srcrefTree(node1);
      JSTypeNative jSTypeNative0 = JSTypeNative.ARRAY_FUNCTION_TYPE;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      InputId inputId0 = new InputId((String) null);
      node0.putProp(16, inputId0);
      // Undeclared exception!
      try { 
        node1.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2529
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = new Node(38, 38, 1972);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "([.7wykF?/>");
      node0.getLength();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Node node1 = new Node(965, node0, node0, node0, 56, (-1910));
      Node node2 = new Node(515, node1);
      node2.getJsDocBuilderForNode();
      Node node3 = node0.useSourceInfoFromForTree(node2);
      node3.putIntProp(77, 56);
      node3.addSuppression("EAO");
      // Undeclared exception!
      try { 
        node0.setString("JA/Nq");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String node not created with Node.newString
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = new Node(64, nodeArray0, 4406, 64);
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.isOnlyModifiesThisCall();
      node0.isGetProp();
      node0.isFromExterns();
      Node node1 = node0.getLastSibling();
      node0.addChildToBack(node1);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = Node.newNumber(4789.399235191, 357, 108);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      int int0 = Node.FREE_CALL;
      Node node1 = new Node(64);
      Node node2 = new Node(47, node0, node0, 83, 2);
      node2.getQualifiedName();
      node2.isFalse();
      node1.getAncestor(49);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = new Node(56);
      node0.setType(95);
      node0.isSyntheticBlock();
      node0.getType();
      Node node1 = new Node(56, node0, node0, node0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      Node node3 = Node.newString(50, "free_call", 31, 4);
      node1.addChildrenAfter(node3, node2);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(52);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got ASSIGN_MUL
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(112);
      Node node1 = new Node(52, node0, node0, node0, 55, (-472));
      node1.getType();
      Node node2 = node0.useSourceInfoFromForTree(node1);
      // Undeclared exception!
      try { 
        node2.getExistingIntProp(153);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 153
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      node0.getBooleanProp(316);
      Node node1 = new Node(152, node0, 0, 36);
      node0.isEquivalentToTyped(node1);
      node1.isDebugger();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp((-2748));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -2748
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = new Node(32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isFalse();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node0.isOnlyModifiesThisCall();
      node0.isGetProp();
      node0.isFromExterns();
      Node node1 = node0.getLastSibling();
      node0.addChildToBack(node1);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = Node.newNumber(2847.378442);
      node0.getBooleanProp(117);
      Node node1 = Node.newNumber(2099.791944304197);
      Node node2 = node1.srcrefTree(node0);
      JSTypeNative jSTypeNative0 = JSTypeNative.ARRAY_FUNCTION_TYPE;
      node2.putProp(55, node0);
      node2.toString();
      Node node3 = Node.newString(4095, "NUMBER 2099.791944304197 [inferred: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]", 54, 2170);
      node3.hasOneChild();
      Node.newString((-2307), "@>H!Q", (-2307), 2251);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((-2876), nodeArray0);
      node0.isOptionalArg();
      Node node1 = new Node(38, node0, node0, node0);
      node1.isGetElem();
      node1.getLength();
      Node node2 = Node.newNumber(17.52519938, 1002, 8);
      node1.addChildrenToBack(node2);
      node2.isQualifiedName();
      // Undeclared exception!
      try { 
        node1.isUnscopedQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(119);
      node0.setType(101);
      node0.setIsSyntheticBlock(true);
      node0.isSyntheticBlock();
      node0.isOr();
      node0.isSwitch();
      node0.isTrue();
      node0.toString();
      node0.isHook();
      node0.isLocalResultCall();
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      node0.getBooleanProp(314);
      InputId inputId0 = new InputId("K?LI~rUr61.");
      node0.setInputId(inputId0);
      node0.getBooleanProp(633);
      Node node1 = Node.newNumber(1.2);
      Node node2 = node1.srcrefTree(node0);
      JSTypeNative jSTypeNative0 = JSTypeNative.ARRAY_FUNCTION_TYPE;
      node0.putProp(43, node2);
      node0.toString();
      node2.hasOneChild();
      Node.newString(412, "y Z@", 2, 112);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = Node.newNumber((double) 484, 484, 117);
      Node node1 = Node.newNumber((double) 1, 4, 4095);
      node1.type = (-621347865);
      node0.addChildrenToFront(node1);
      node0.setChangeTime(57);
      node0.isSetterDef();
      node0.setType(105);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.setDouble(484);
      node0.isIf();
      Node node2 = Node.newString(48, "com.google.common.collect.ImmutableMapValues");
      node1.isTrue();
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -621347865
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194298, 4194298, 4194298);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      int int0 = Node.FREE_CALL;
      Node node1 = new Node(31);
      node0.getQualifiedName();
      node0.isFalse();
      node0.getAncestor(0);
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node node0 = new Node(40);
      Node node1 = new Node(39, node0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-15);
      byteArray0[1] = (byte) (-24);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = node1.srcrefTree(node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.isDebugger();
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Stack<JSType> stack1 = new Stack<JSType>();
      Node node0 = new Node(15);
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        node0.appendStringTree(pipedWriter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(128, nodeArray0);
      node0.isOptionalArg();
      node0.setType(86);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isAssign();
      node0.isQualifiedName();
      node0.isDelProp();
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("QWeJvk'");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(39, node0, node0, node0, 39, 47);
      node0.isEquivalentTo(node1);
      node0.isTry();
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node1.getLastChild();
      Node.newString(2, "Object#Element", (-1), 116);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      Node node1 = new Node(48, node0, node0, node0, 159, 159);
      node0.getType();
      node1.useSourceInfoFromForTree(node0);
      Node node2 = null;
      try {
        node2 = new Node(484, node1, node0, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = new Node(111);
      Node node1 = new Node(111, node0, node0);
      node1.removeChild(node0);
      node0.isCast();
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node((-508), (-508), (-508));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(57, node0, node0, node0, node0, 2, 16);
      node1.isFor();
      Node node2 = new Node(47);
      Node node3 = Node.newNumber((double) 29);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node4 = new Node(20479, node3, node3);
      Node node5 = node2.srcref(node4);
      node5.detachChildren();
      node1.getQualifiedName();
      node4.isEmpty();
      node4.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = Node.newString("quoted");
      node0.copyInformationFromForTree(node1);
      node0.setType(95);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType((JSDocInfo) null);
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType(objectType0, (Map<TemplateType, JSType>) hashMap0);
      TemplatizedType templatizedType1 = templatizedType0.toMaybeTemplatizedType();
      node0.setJSType(templatizedType1);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags((-3791));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got ASSIGN_MUL
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(120, 120, 120);
      node0.isCatch();
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = new Node(119);
      node0.setType(101);
      node0.isSyntheticBlock();
      node0.isOr();
      node0.isSwitch();
      Node node1 = Node.newString("LC");
      node0.checkTreeEquals(node1);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = new Node(32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.getQualifiedName();
      node0.putIntProp(32, 132);
      node0.isEmpty();
      node0.isNoSideEffectsCall();
      Node node1 = new Node(4192);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4192
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = new Node(120);
      Node node1 = new Node(4, 426, (-1682));
      Node node2 = new Node((-912), node1, node0, node0, 148, 32);
      node1.getType();
      Node node3 = node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node3, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(0, node0, node0, node0);
      node0.setIsSyntheticBlock(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = node0.copyInformationFrom(node1);
      node1.copyInformationFrom(node0);
      node0.isEquivalentToShallow(node2);
      node0.setLineno(38);
      node2.isCall();
      node0.isDec();
      // Undeclared exception!
      try { 
        node1.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = new Node(119);
      node0.setType(101);
      node0.isSyntheticBlock();
      node0.isOr();
      node0.isSwitch();
      node0.isTrue();
      node0.toString();
      node0.isHook();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(33, node0);
      Node node2 = node0.srcrefTree(node1);
      node0.clonePropsFrom(node2);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node0.isDebugger();
      node2.isWith();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(85);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = new Node(13);
      Node node1 = new Node(38, node0, node0, node0);
      Node node2 = node1.srcrefTree(node0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node2.isDebugger();
      node1.isWith();
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = new Node(111);
      Node node1 = new Node(111, node0, node0);
      node1.removeChild(node0);
      node1.getType();
      node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(95);
      node0.isCast();
      node0.getAncestors();
      Node node1 = Node.newString("f,eM<=#8!*ylg", 152, 16);
      node0.addChildrenToBack(node1);
      node0.isFor();
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node node2 = Node.newString(51, "f,eM<=#8!*ylg", 15, 23);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[2];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseNullType();
      jSTypeArray0[0] = jSType0;
      JSType jSType1 = modificationVisitor0.caseNumberType();
      jSTypeArray0[1] = jSType1;
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.copyInformationFromForTree(node2);
      node2.addChildToBack(node0);
      // Undeclared exception!
      try { 
        node3.getChildBefore(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = new Node(111);
      Node node1 = new Node(111, node0, node0);
      node0.isFromExterns();
      node0.getLastSibling();
      node1.setCharno(12288);
      node1.isEquivalentTo(node0, true, false, false);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newNumber((double) 39, (-29), 39);
      Node node1 = new Node(39, node0, node0, node0);
      node1.srcref(node0);
      // Undeclared exception!
      try { 
        node1.appendStringTree((Appendable) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("QWeJvk'");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      Node node1 = new Node(39, node0, node0, node0, 39, 47);
      node0.isEquivalentTo(node1);
      node0.isTry();
      node1.useSourceInfoFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isAssignAdd();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(146, 146, 146);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-44);
      node0.children();
      Node node1 = new Node((byte) (-44), node0, 8, 8);
      node0.isAssign();
      node1.isAssign();
      node0.isEquivalentToShallow(node0);
      node1.isUnscopedQualifiedName();
      node1.addChildBefore(node1, node0);
      // Undeclared exception!
      try { 
        node1.cloneTree();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = new Node(119);
      node0.setType(101);
      node0.isSyntheticBlock();
      Node node1 = new Node(2);
      Node node2 = node0.srcrefTree(node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node2);
      node0.isDebugger();
      node2.isWith();
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = Node.newNumber(27.0, 38, (-1384));
      node0.addSuppression("no next siing.");
      Node node1 = new Node(98, node0, 4095, 38);
      node1.children();
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.isCast();
      node0.getAncestors();
      node1.addChildrenToBack(node2);
      node0.isFor();
      node0.setStaticSourceFile((StaticSourceFile) null);
      Node.newString(36, "StringNode: str is null", 794, 3095);
      Node node3 = node0.copyInformationFromForTree(node1);
      Node node4 = null;
      try {
        node4 = new Node(53, node0, node1, node3, node3, 52, 4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(33, node0);
      Node node2 = new Node(0);
      node1.getQualifiedName();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      node2.children();
      Node node3 = new Node(114, 122, 40);
      node3.isEquivalentToTyped(node0);
      node0.isObjectLit();
      node3.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = Node.newString(154, "p:j[mO,hW=4+gOI");
      Node node1 = Node.newNumber((-1.0), 247, (-4429));
      node0.checkTreeEqualsImpl(node0);
      node0.isCast();
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = new Node(1843, 1843, 1843);
      node0.setType(102);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(115, node0, node0, node0, 1044, 0);
      node1.getType();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      Node node3 = new Node(3, node2, node2, node2);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(13, 13, 13);
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      Node node1 = new Node(15, node0, node0, 31, 2298);
      node1.isNE();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newString("TH<~2OK+<&xxKz,");
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node2.isEquivalentTo(node3, true, true, true);
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = new Node(13);
      node0.cloneTree();
      node0.setType(95);
      node0.isAnd();
      Node node1 = Node.newNumber((-1.0), 16, 54);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.isCast();
      node1.isEquivalentTo(node0);
      Node node2 = new Node(120, node1, node0, node0, 36, 57);
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = new Node(117);
      node0.toString();
      Node node1 = new Node((-314), node0, node0, 46, 32);
      Node node2 = node0.srcref(node1);
      // Undeclared exception!
      try { 
        node1.replaceChild(node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(13);
      node0.isAnd();
      node0.isAssign();
      node0.isFromExterns();
      node0.siblings();
      Node node1 = node0.getLastSibling();
      node1.setCharno(50);
      node1.isEquivalentTo(node0, false, false, true);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = new Node(111);
      Node node1 = Node.newNumber(1007.53, (-755), 1);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = null;
      try {
        node3 = new Node(4095, (Node) null, node2, node0, node1, 51, (-2511));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = Node.newString("setIsNoSideEffectsCall only supports CALL and NEW nodes, got ");
      Node node1 = new Node(118, node0, 52, 2);
      node1.srcref(node0);
      node1.setLineno(120);
      Node node2 = node0.useSourceInfoFrom(node1);
      node2.setStaticSourceFile((StaticSourceFile) null);
      node2.setQuotedString();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "X}z$");
      // Undeclared exception!
      try { 
        node2.addChildAfter(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(0, node0, node0, node0);
      node0.setIsSyntheticBlock(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node2 = node0.copyInformationFrom(node1);
      node0.isEquivalentToShallow(node2);
      node0.setLineno(38);
      node2.isCall();
      node1.cloneNode();
      node0.isDec();
      // Undeclared exception!
      try { 
        node1.toString(true, true, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(119);
      node0.setType(130);
      node0.isCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEquivalentTo(node0, false, false, false);
      node0.isGetterDef();
      node0.isCast();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      node0.isDefaultCase();
      node0.isAdd();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<FunctionType> linkedList0 = new LinkedList<FunctionType>();
      JSType[] jSTypeArray0 = new JSType[2];
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("G!jaG/{k*Ay[dP]2><");
      TemplateType templateType1 = templateType0.toMaybeTemplateType();
      TemplateType templateType2 = JSType.toMaybeTemplateType((JSType) templateType1);
      jSTypeArray0[0] = (JSType) templateType2;
      HashMap<TemplateType, JSType> hashMap0 = new HashMap<TemplateType, JSType>();
      hashMap0.put(templateType2, templateType1);
      TemplatizedType templatizedType0 = jSTypeRegistry0.createTemplatizedType((ObjectType) templateType2, (Map<TemplateType, JSType>) hashMap0);
      jSTypeArray0[1] = (JSType) templatizedType0;
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Iterator<FunctionType> iterator0 = linkedList0.iterator();
      ImmutableList<FunctionType> immutableList1 = ImmutableList.copyOf((Iterator<? extends FunctionType>) iterator0);
      ImmutableList<JSType> immutableList2 = ImmutableList.copyOf((Collection<? extends JSType>) immutableList1);
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) immutableList2);
      node1.toString();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = new Node(119);
      Node node1 = node0.getAncestor(0);
      node0.addChildrenToBack(node1);
      node0.setType(101);
      node0.isSyntheticBlock();
      node0.isOr();
      node0.isSwitch();
      node0.isTrue();
      node0.toString();
      node0.isHook();
      node0.getJSType();
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Stack<JSType> stack0 = new Stack<JSType>();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node0 = new Node(4190208);
      Node node1 = new Node(46, (-3415), 647);
      node0.isEquivalentTo(node1, false, true, false);
      node0.hasMoreThanOneChild();
      Stack<JSType> stack1 = new Stack<JSType>();
      Node node2 = new Node(1, node0, 57, 47);
      node1.isObjectLit();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node3.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194298, 4194298, 4194298);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isQualifiedName();
      Node node1 = Node.newNumber((-1.0), 63, 12);
      Node node2 = node0.copyInformationFrom(node1);
      Node node3 = new Node(93);
      node3.isEquivalentToShallow(node2);
      node1.setLineno(30);
      node0.isCall();
      node1.isDec();
      node0.checkTreeEquals(node1);
      StringWriter stringWriter0 = new StringWriter(51);
      node1.appendStringTree(stringWriter0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(33, node0);
      node0.srcrefTree(node1);
      node1.getQualifiedName();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(111);
      Node node1 = new Node(111, node0, node0);
      node1.removeFirstChild();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node1.isUnscopedQualifiedName();
      node1.isQualifiedName();
      node1.isDelProp();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194298, 4194298, 4194298);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isQualifiedName();
      int int0 = Node.FREE_CALL;
      Node node1 = new Node(16, node0);
      Node node2 = new Node(31);
      node1.getQualifiedName();
      node0.isFalse();
      node1.getJSDocInfo();
      node2.clonePropsFrom(node1);
      Node node3 = node1.getAncestor(0);
      node3.checkTreeEquals(node2);
      node1.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(33, node0);
      node0.setType(51);
      node1.isNot();
      Node node2 = new Node((-1793));
      node2.isOnlyModifiesThisCall();
      node2.isGetProp();
      node1.isFromExterns();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = new Node((-531), (-531), (-531));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(57, node0, node0, node0, node0, 2, 16);
      node1.children();
      Node node2 = node0.copyInformationFromForTree(node1);
      Node node3 = new Node(5760);
      node3.isSetterDef();
      Node node4 = new Node(1498, 57, 47);
      node4.isCast();
      node1.getAncestors();
      node2.addChildrenToBack(node3);
      node1.isFor();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node3;
      nodeArray0[1] = node1;
      nodeArray0[2] = node4;
      nodeArray0[3] = node2;
      Node node5 = null;
      try {
        node5 = new Node(1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(126, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("vTFza=.4FS}9Q");
      treeSet0.add("vTFza=.4FS}9Q");
      treeSet0.add("SC6F?8*");
      node0.setVarArgs(true);
      node0.getQualifiedName();
      Node node1 = new Node(304, node0, node0, node0, node0, 0, 21);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(54);
      Node node2 = node1.removeChildren();
      node2.cloneNode();
      node_SideEffectFlags0.setAllFlags();
      node2.hasOneChild();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.incrementGeneration();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(4112, node0, node0, node0, node0, 29, (-3113));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Object#Key");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "EoXe*9uP>eBDRIh:b6F");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.putIntProp(43, 4);
      node_SideEffectFlags0.setMutatesThis();
      node1.wasEmptyNode();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node1.isQualifiedName();
      node1.isGetElem();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.getStaticSourceFile();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isEquivalentTo(node2, true, false, true);
      node0.getSourceOffset();
      node2.isSwitch();
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = Node.newString(1609, "nYRk-");
      Node node1 = new Node(116, node0, node0, node0, 40, 8202);
      Node node2 = new Node(1609, node1, 1364, 1364);
      node1.children();
      Node node3 = node2.copyInformationFromForTree(node1);
      node2.isSetterDef();
      node3.isCast();
      node1.getAncestors();
      node2.addChildrenToBack(node3);
      node3.isFor();
      node2.getStaticSourceFile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      Node node4 = Node.newString(4190208, "nYRk-", 110, 0);
      node0.copyInformationFromForTree(node4);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createEnumType("Object#Key", node2, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(33, node0);
      node0.srcrefTree(node1);
      node1.getQualifiedName();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node0.isDebugger();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = Node.newString("Qpb6KGy&r;&");
      node0.isAssignAdd();
      Node node1 = new Node(30, node0, node0, node0, 48, 119);
      node0.isEquivalentTo(node1);
      node1.isTry();
      node1.copyInformationFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = new Node(13, 13, 13);
      node0.setType(30);
      Node node1 = new Node(49, node0);
      node1.srcrefTree(node0);
      node0.getQualifiedName();
      node1.removeProp(47);
      node1.isVoid();
      node0.isIn();
      node0.mayMutateArguments();
      node1.isVoid();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(117);
      Node node1 = Node.newNumber((double) 1, 4, 4095);
      node0.addChildrenToFront(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      node1.isNE();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      Node node3 = Node.newString("6E2t;c%:'-");
      node3.getStaticSourceFile();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node1.isEquivalentTo(node2, false, false, true);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = new Node(119);
      node0.setType(130);
      node0.isCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEquivalentTo(node0, false, false, false);
      node0.hasMoreThanOneChild();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = new Node(36, node0, 4, 49);
      node1.isObjectLit();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-1046), (-1046), (-1046));
      Node node1 = new Node((-1046), node0, node0, node0, 8, 2);
      node1.getType();
      node1.useSourceInfoFromForTree(node0);
      Node node2 = node1.getLastChild();
      // Undeclared exception!
      try { 
        node2.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1046
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 117);
      node0.isUnscopedQualifiedName();
      Node node1 = new Node(38, node0, 46, 38);
      Node.newString(53, "new child has existing parent", 1125, 126);
      Node node2 = Node.newString("new child has existing parent");
      node2.isDefaultCase();
      node1.toString();
      node1.useSourceInfoFrom(node2);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|LCEUW*nh$%;RG07/");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(53, nodeArray0, (-1013), 848);
      Node node1 = new Node(39, node0, 53, 56);
      Node node2 = new Node((-1013), node1);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseUnknownType();
      EnumType enumType0 = jSTypeRegistry0.createEnumType("|LCEUW*nh$%;RG07/", node2, jSType0);
      EnumType enumType1 = enumType0.toMaybeEnumType();
      ObjectType objectType0 = enumType1.getImplicitPrototype();
      jSTypeArray0[0] = (JSType) objectType0;
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) enumType0, (List<JSType>) immutableList0);
      jSTypeArray0[1] = (JSType) functionType0;
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = new Node(13);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("v}r1F8S$9s7q");
      node0.setVarArgs(true);
      treeSet0.add("v}r1F8S$9s7q");
      treeSet0.add("(q4?G0g)T3|3gG$)cR");
      treeSet0.clear();
      node0.setDirectives(treeSet0);
      node0.isAssignAdd();
      node0.siblings();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.setChangeTime(13);
      node0.isSetterDef();
      node0.setType(13);
      node0.isReturn();
      node0.toString();
      Node node1 = Node.newNumber(308.71065149, 15, 40);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      node0.getBooleanProp(40);
      Node node1 = new Node(148, node0, 2, 36);
      node0.isNew();
      node1.isDebugger();
      node1.useSourceInfoFrom(node0);
      node1.toString();
      node0.isInstanceOf();
      node0.isBlock();
      node0.isNE();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = new Node(15, 0, (-67));
      node0.getBooleanProp(49);
      node2.isNot();
      node1.isGetterDef();
      node1.isDec();
      node0.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(118);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = Node.newString("Uo nxt siblin.", 17, 4190208);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte)42;
      node0.isScript();
      node0.isCast();
      Node node1 = new Node(118, node0, node0, node0);
      node1.isWith();
      node1.copyInformationFromForTree(node0);
      node0.getJsDocBuilderForNode();
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(119);
      node0.setType(102);
      node0.isCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isEquivalentTo(node0, false, false, false);
      node0.hasMoreThanOneChild();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = new Node(57, 29, 0);
      node1.isObjectLit();
      node0.copyInformationFrom(node1);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newString(1358, "o0U[P|zXm*]n>6f");
      Node node1 = new Node(1358, node0, node0, node0, node0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isOnlyModifiesThisCall();
      node1.getStaticSourceFile();
      Node node2 = node0.srcref(node1);
      Node node3 = new Node((-1), 53, 50);
      node0.isEquivalentToShallow(node3);
      node2.type = (-837);
      node1.setOptionalArg(true);
      node0.addChildrenToFront(node1);
      node1.detachFromParent();
      node0.getJSDocInfo();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node2, node3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = new Node(116);
      node0.mayMutateGlobalStateOrThrow();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Node node1 = new Node(1, 15, (-574));
      node0.children();
      Node node2 = new Node(116, node0, 46, (-2664));
      // Undeclared exception!
      try { 
        node2.removeChild(node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      jSTypeRegistry0.incrementGeneration();
      Node node0 = Node.newString("Object#Element");
      Node node1 = new Node(4112, node0, node0, node0, node0, 29, (-3113));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Object#Key");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setMutatesThis();
      node1.isNE();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isGetElem();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      Node.newString("Object#Key");
      node1.getStaticSourceFile();
      node2.checkTreeTypeAwareEqualsImpl(node0);
      node1.isEquivalentTo(node2, false, true, true);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = new Node(13, 13, 13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(38, node0, node0, node0, node0, 1, 31);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isAssign();
      Node node2 = node1.copyInformationFrom(node0);
      node2.removeFirstChild();
      node0.isSwitch();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = Node.newString("Gpn%GcX");
      Node node1 = new Node(125, node0);
      Node node2 = node1.srcrefTree(node0);
      node2.getQualifiedName();
      node2.isVoid();
      Node node3 = Node.newString("SUB");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ObjectType.cast((JSType) null);
      ObjectType objectType0 = jSTypeRegistry0.createObjectType("o|#&XQM0Qj./fk", node3, (ObjectType) null);
      JSType jSType0 = jSTypeRegistry0.createDefaultObjectUnion(objectType0);
      node3.setJSType(jSType0);
      node3.checkTreeEquals(node0);
      node1.clonePropsFrom(node3);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = Node.newString(">YSQW`~MuhJ\"a*G");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2930);
      node_SideEffectFlags0.setMutatesThis();
      Node node1 = new Node(43, node0, node0);
      node1.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString("Gpn-GcXC");
      node2.isEquivalentTo(node0);
      node0.setQuotedString();
      node2.setLineno(1251);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getBooleanProp((-2444));
      Node node3 = node0.srcrefTree(node1);
      JSTypeNative jSTypeNative0 = JSTypeNative.ARRAY_FUNCTION_TYPE;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node3.putProp(47, jSDocInfo0);
      node3.getLength();
      node3.toString();
      node1.isVar();
      node1.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("Z$c#69mAv64P]<(|Pr");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.setJSDocInfo(jSDocInfo0);
      Node node1 = new Node(102, node0, node0, node0);
      Node node2 = new Node(102, node1, 31, 1);
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("QWeJvk'");
      Node node0 = Node.newString(113, "QWeJvk'", 118, (-1707));
      node0.isIf();
      node0.isObjectLit();
      node0.isSwitch();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newString("Gpn%GcX");
      Node node1 = new Node(125, node0);
      Node node2 = node1.srcrefTree(node0);
      node2.getQualifiedName();
      node2.isVoid();
      node1.copyInformationFrom(node2);
      node0.isIn();
      node0.isTrue();
      node2.isDelProp();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(8);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 8
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node(32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.isLabelName();
      node0.isQualifiedName();
      Node node1 = new Node(4095, node0, node0, 55, 2);
      node0.getStaticSourceFile();
      node0.isWith();
      node1.getLastSibling();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node(6);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isNot();
      node0.getQualifiedName();
      node0.isOnlyModifiesThisCall();
      node0.isGetProp();
      node0.isFromExterns();
      Node node1 = node0.getLastSibling();
      node0.isOnlyModifiesThisCall();
      node0.isEquivalentTo(node1, false, true, false);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = new Node(1843, 1843, 1843);
      node0.setType(102);
      node0.isCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isBlock();
      node0.hasMoreThanOneChild();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = new Node(51, node0, node0, node0, node0);
      node1.isObjectLit();
      node0.checkTreeEquals(node1);
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      node0.isVar();
      Node node1 = new Node(38, node0);
      node1.isLabelName();
      node0.isName();
      node0.srcref(node1);
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2138, 2138, (-28));
      node0.addSuppression("no next sibling.");
      Node node1 = new Node(2138, node0, 4095, 1);
      node1.children();
      Node node2 = node1.copyInformationFromForTree(node0);
      node2.isEquivalentToTyped(node0);
      node0.isCast();
      node0.getAncestors();
      node0.addChildrenToBack(node2);
      node1.isOnlyModifiesArgumentsCall();
      Node node3 = Node.newString("no next sibling.");
      Node node4 = node3.copyInformationFromForTree(node0);
      node4.setWasEmptyNode(false);
      node0.addChildToBack(node3);
      node4.isSyntheticBlock();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isComma();
      node0.toString();
      node2.removeChildren();
      Node node5 = node0.getChildBefore(node3);
      node5.isOnlyModifiesThisCall();
      node3.toStringTree();
      node5.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newNumber((-967.6170355));
      Node node1 = new Node(42, node0, node0);
      node1.isGetElem();
      Node node2 = new Node(1375, node1);
      node1.hasOneChild();
      node0.hasOneChild();
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-37);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)102;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(128, nodeArray0);
      node0.isOnlyModifiesThisCall();
      node0.setType((-49));
      node0.wasEmptyNode();
      node0.getQualifiedName();
      node0.isOnlyModifiesThisCall();
      node0.isGetProp();
      node0.isFromExterns();
      node0.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = new Node(42);
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isTrue();
      node0.isVar();
      Node node1 = new Node(40, node0);
      node0.isStringKey();
      node1.isFromExterns();
      node0.useSourceInfoFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      node0.mayMutateGlobalStateOrThrow();
      Node node1 = new Node(116, node0, node0, node0, node0, 40, 4);
      node1.getAncestors();
      node1.getIntProp(50);
      node0.isCatch();
      node0.detachFromParent();
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      Node node1 = Node.newString(51, "Fb_[u.~CMGLp", 539, 822);
      node1.setIsSyntheticBlock(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.copyInformationFrom(node1);
      Node node2 = Node.newNumber(0.0, (-3000), 562);
      // Undeclared exception!
      try { 
        node2.isEquivalentToShallow((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Node node0 = new Node(4194283, 4194283, 4194283);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isCatch();
      node0.isUnscopedQualifiedName();
      node0.setType(103);
      node0.isBlock();
      node0.isSetterDef();
      node0.checkTreeEqualsImpl(node0);
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = Node.newNumber(1552.3514436033, 55, 49);
      node0.addChildrenToFront(node1);
      node0.toString(false, false, false);
      node0.setOptionalArg(true);
      node0.isOptionalArg();
      node0.getSideEffectFlags();
      node0.isName();
      node0.isQuotedString();
      node0.isDefaultCase();
      Node node2 = node1.useSourceInfoFrom(node0);
      node2.getStaticSourceFile();
      node1.isCall();
      node0.isGetElem();
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Node node0 = new Node(125);
      node0.toString();
      Node node1 = node0.srcref(node0);
      node0.getQualifiedName();
      node0.addChildrenToFront(node0);
      Node node2 = node1.removeChildren();
      node2.getAncestors();
      node1.putIntProp(37, 53);
      node1.isEmpty();
      node0.getSourceFileName();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(126, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("vTFza=.4FS}9Q");
      treeSet0.add("SC6F?8*");
      node0.setVarArgs(true);
      treeSet0.add("QWeJvk'");
      treeSet0.clear();
      node0.setDirectives(treeSet0);
      node0.isAssignAdd();
      node0.siblings();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.setChangeTime((-17));
      node0.isSetterDef();
      node0.setType(86);
      node0.getBooleanProp(86);
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node0.toString();
      Node node1 = new Node(39, node0, node0, node0, node0, 4, 1444);
      Node node2 = node0.srcref(node1);
      node1.getQualifiedName();
      node2.addChildrenToFront(node1);
      node1.putIntProp(41, 8);
      node1.isEmpty();
      node1.getBooleanProp(42);
      // Undeclared exception!
      try { 
        node1.setDouble(52);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Node node0 = new Node(125);
      Node node1 = new Node(2, 2883, 29);
      Node node2 = new Node(2337, node0, node0, node0, 31, 54);
      node0.getType();
      Node node3 = node0.useSourceInfoFromForTree(node1);
      // Undeclared exception!
      try { 
        node3.addChildrenAfter(node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(115, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isNoSideEffectsCall();
      node0.isGetElem();
      treeSet0.clear();
      node0.isAssign();
      node0.isInstanceOf();
      node0.isDec();
      node0.isDebugger();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Node node0 = new Node(1843);
      node0.setType(102);
      node0.isCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isBlock();
      node0.isDebugger();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node1 = new Node(57, 29, 371);
      node1.isObjectLit();
      Node node2 = node0.copyInformationFrom(node1);
      node0.srcref(node2);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Node node0 = new Node(26);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isSyntheticBlock();
      Node node1 = new Node(38, node0, node0, node0, node0, 1, 31);
      String string0 = "(1lYU4jQu";
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node1.wasEmptyNode();
      node1.srcref(node0);
      // Undeclared exception!
      try { 
        node1.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Node node0 = Node.newNumber((double) 93);
      jSDocInfo0.getModifies();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.setSourceFileForTesting("vO}8vb]!,HK`+2rb");
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      JSTypeNative jSTypeNative0 = JSTypeNative.ALL_TYPE;
      Node node0 = Node.newString(",sJXIaWQbdj!", (-809), (-809));
      node0.putProp(51, jSTypeNative0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t|~{fL\"(7[tAEIx");
      Node node1 = new Node((-535), nodeArray0);
      node0.isBreak();
      node1.addChildToBack(node0);
      node1.cloneNode();
      Node node2 = new Node((-195));
      // Undeclared exception!
      try { 
        node2.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -195
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Node node0 = new Node(116, 441, 116);
      node0.isOnlyModifiesThisCall();
      node0.setType(1199);
      Node node1 = Node.newString("");
      node0.isEquivalentTo(node1, false, true, false);
      Node node2 = Node.newString("", 48, 1980);
      Node node3 = new Node(57, node0, node1, node1, node2, 51, (-214));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isAssign();
      Node node4 = node3.copyInformationFrom(node2);
      node3.isSwitch();
      node1.isDec();
      // Undeclared exception!
      try { 
        node4.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 57
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(126, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("vTFza=.4FS}9Q");
      treeSet0.add("SC6F?8*");
      node0.setVarArgs(true);
      node0.getQualifiedName();
      Node node1 = new Node(304, node0, node0, node0, node0, 0, 21);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(37);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(54);
      Node node2 = node1.removeChildren();
      node_SideEffectFlags0.setAllFlags();
      node2.hasOneChild();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      node0.getBooleanProp(306);
      Node node1 = new Node(148, node0, 42, 36);
      node0.isNew();
      node0.isCall();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isBlock();
      node1.isDebugger();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node2 = new Node(16, 31, 93);
      node1.isObjectLit();
      node1.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Node node0 = new Node(32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = new Node(49);
      Node node2 = node0.srcref(node1);
      node2.getQualifiedName();
      node1.addChildrenToFront(node2);
      Node node3 = null;
      try {
        node3 = new Node(36, node2, node2, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Node node0 = Node.newNumber((-967.6170355));
      node0.isGetProp();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(42, node0, node0);
      node1.isNoSideEffectsCall();
      node1.cloneNode();
      node0.toString(true, true, true);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Node node0 = new Node(35, 35, 35);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(38, node0, node0, node0, node0, 1, 31);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isAssign();
      Node node2 = node1.copyInformationFrom(node0);
      node0.isSwitch();
      node2.cloneNode();
      node1.isDec();
      node2.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      node0.setDirectives(treeSet0);
      node0.hasChild(node0);
      node0.children();
      Node node1 = new Node(48, node0, 8, 8);
      Node node2 = new Node(12, 4095, 54);
      node2.getSideEffectFlags();
      node0.isVarArgs();
      node0.isBreak();
      Node.newNumber(2374.762);
      node1.removeChildren();
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(33, node0);
      Node node2 = node0.srcrefTree(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isBlock();
      node1.isDebugger();
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node3 = new Node(32, 40, (-2007));
      node3.isObjectLit();
      node1.copyInformationFrom(node2);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, 6, 6);
      node0.isNot();
      Node node1 = Node.newNumber((double) 4095, 43, 1);
      node0.isGetElem();
      node0.isEquivalentToShallow(node1);
      Node node2 = new Node(8, node1);
      node2.isLabel();
      node1.getDouble();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isLabelName();
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Node node0 = new Node(1843);
      node0.setType(31);
      node0.isSetterDef();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isBlock();
      node0.isDebugger();
      Stack<JSType> stack0 = new Stack<JSType>();
      node0.isObjectLit();
      node0.copyInformationFrom(node0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194298, 4194298, 4194298);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      int int0 = Node.IS_NAMESPACE;
      Node node1 = new Node(38, 39, 4194298);
      Node node2 = new Node(31);
      node1.hasMoreThanOneChild();
      // Undeclared exception!
      try { 
        node1.getQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 39 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      Node node0 = new Node(13, 13, 13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(38, node0, node0, node0, node0, 1, 31);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isAssign();
      Node node2 = node1.copyInformationFrom(node0);
      node0.isSwitch();
      node1.isDec();
      node2.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      Node node0 = Node.newNumber((double) 44, 44, 75);
      node0.siblings();
      node0.isCall();
      Node node1 = new Node(4, node0, 53, 57);
      node1.isLabelName();
      node0.isScript();
      node1.isCast();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("c.Q}NZ5:GO:O'+hz", false);
      node0.putProp(36, simpleSourceFile0);
      Node node2 = new Node(42, node1, node1, node1, 2177, 42);
      node2.useSourceInfoIfMissingFrom(node0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Node node0 = Node.newNumber((double) 27, 27, 27);
      node0.mayMutateGlobalStateOrThrow();
      node0.isNot();
      Node node1 = new Node(0, 39, (-506));
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node0.isEquivalentToShallow(node2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.U2U_CONSTRUCTOR_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      Node node3 = new Node(55);
      Node node4 = new Node(152, node3);
      node4.setJSType(jSType0);
      Node node5 = Node.newString("Named type with empty name component", 57, 48);
      Node node6 = new Node((-1177), node5, node5, (-2702), 162);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node6);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1177
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 117);
      Node node1 = Node.newString("&Q= h+=yJ5dlmu", 43, 47);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-62);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      node1.isEquivalentTo(node0, true, true, true);
      Node node2 = new Node(103, node1, node1, node0, node1, 30, 2);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node2.isAssign();
      Node node3 = node2.copyInformationFrom(node1);
      node2.isAssignAdd();
      node1.isDec();
      node0.isFor();
      node3.isSwitch();
      // Undeclared exception!
      try { 
        node2.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(549.8038930781669, 111, 2145);
      Node node1 = new Node(31, node0, node0, 16, 26);
      node0.addChildrenToFront(node1);
      node1.setChangeTime(57);
      // Undeclared exception!
      node0.toStringTree();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(118);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags1.areAllFlagsSet();
      Node node0 = Node.newString("no next sibling.", 17, 4190208);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte)42;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.isContinue();
      node0.isScript();
      node0.isAdd();
      Node node1 = new Node(118, node0, node0, node0);
      node1.isWith();
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      Node node0 = new Node(1843);
      node0.setType(102);
      Node node1 = new Node(45, node0, node0, node0);
      node1.isTrue();
      Node node2 = new Node(30);
      node2.useSourceInfoFrom(node1);
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isSyntheticBlock();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.isAnd();
      Node node1 = Node.newString("&", 53, 55);
      Node node2 = new Node(43, node1, node1, node1);
      node2.cloneNode();
      Node node3 = new Node(2, node2, node2, node2);
      node0.isGetElem();
      node3.getBooleanProp(52);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Node node0 = new Node(13, 13, 13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(38, node0, node0, node0, node0, 1, 31);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isAssign();
      Node node2 = node1.copyInformationFrom(node0);
      node0.isAssignAdd();
      node1.isDec();
      node1.addChildToBack(node2);
      node1.isCast();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194283, 4194283, 4194283);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.wasEmptyNode();
      node0.isUnscopedQualifiedName();
      node0.setType(105);
      node0.setDouble(42);
      node0.setLineno(1048576);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.isNoSideEffectsCall();
      treeSet0.add("QWeJvk'");
      Node node1 = new Node(43, node0, node0, (-3584), 0);
      Node node2 = node0.useSourceInfoFromForTree(node1);
      node0.siblings();
      node2.isSyntheticBlock();
      node0.checkTreeEqualsImpl(node2);
      node0.isWhile();
      Node node3 = new Node(3005);
      node1.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Node node0 = Node.newNumber(0.7, 1182, 86);
      Node node1 = new Node(31);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C6MKxb$XAJ*xJJ! J");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node2 = new Node(48, node0, node1, node1, 11, 56);
      // Undeclared exception!
      try { 
        node2.addChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Node node0 = new Node(4194304, 4194304, 4194304);
      Node node1 = new Node(1137, node0, 51, 30);
      node1.isUnscopedQualifiedName();
      Node node2 = node1.removeFirstChild();
      Node node3 = new Node(36, node2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node3);
      // Undeclared exception!
      try { 
        node3.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Node node0 = Node.newString(":_6[ZhY", 83, 63);
      Node node1 = new Node((-948), node0, node0);
      node1.isLocalResultCall();
      node1.isOnlyModifiesArgumentsCall();
      node1.isNoSideEffectsCall();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("9uy]c7A@o:0j");
      treeSet0.clear();
      node1.setDirectives(treeSet0);
      node1.siblings();
      node1.isDo();
      node0.isAdd();
      Node node2 = Node.newString(43, ":_6[ZhY", 745, 55);
      node2.isFalse();
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      Node node0 = Node.newString(">YSQW`~MuhJ\"a*G");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2930);
      node_SideEffectFlags0.clearAllFlags();
      Node node1 = new Node(43, node0, node0);
      node1.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString("Gpn-GcXC");
      node2.isEquivalentTo(node0);
      node0.setQuotedString();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getBooleanProp((-2444));
      Node node3 = node0.srcrefTree(node1);
      JSTypeNative jSTypeNative0 = JSTypeNative.ARRAY_FUNCTION_TYPE;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node3.putProp(47, jSDocInfo0);
      node3.getLength();
      node3.toString();
      Node.newString(31, "h[*.4aP3XZx");
      int int0 = Node.IS_DISPATCHER;
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((double) 38);
      Node node1 = new Node(38, node0, node0, node0, 8, 2);
      int int0 = Node.NO_SIDE_EFFECTS;
      node0.isGetElem();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Node node0 = Node.newString(1469, "p:O[mO,hW54z+gOI", (-3000), 75);
      Node node1 = new Node(35, node0, node0, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node_NodeMismatch0.equals("p:O[mO,hW54z+gOI");
      Node node2 = Node.newString("p:O[mO,hW54z+gOI", 43, 4095);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node2.isWhile();
      node1.cloneNode();
      Node.newString("-rt).", 55, 119);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      Node node1 = new Node(108, node0, (-3652), (-2792));
      Node node2 = node1.useSourceInfoFromForTree(node0);
      node1.setSourceFileForTesting((String) null);
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node1.srcrefTree(node2);
      Node node3 = Node.newString("com.google.common.base.Predicates$CompositionPredicate");
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isQualifiedName();
      node1.isStringKey();
      node0.isOptionalArg();
      node1.children();
      Node node4 = node0.useSourceInfoIfMissingFrom(node3);
      node4.toString();
      node4.getQualifiedName();
      // Undeclared exception!
      try { 
        Node.newString(1, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 117);
      Node node1 = Node.newString("&Q= h+=yJ5dlmu", 43, 47);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("43Puv(;.`4,>(");
      node0.setStaticSourceFile((StaticSourceFile) null);
      node1.putProp(12, templateType0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "bUd{==` K-cr|[");
      ImmutableList.of((JSType) templateType0);
      node1.isBreak();
      node0.addChildToBack(node0);
      node0.checkTreeEquals(node0);
      String string0 = "r>I";
      int int0 = (-4320);
      int int1 = 33;
      Node node2 = Node.newString(node1.SIDE_EFFECTS_FLAGS_MASK, string0, int0, int1);
      Node node3 = node2.copyInformationFrom(node0);
      Node node4 = new Node(node1.MAX_COLUMN_NUMBER, node1);
      node3.srcrefTree(node4);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Node node0 = Node.newString("Gpn%GcX");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = new Node(125, node0);
      node1.isComma();
      Node node2 = node1.srcrefTree(node0);
      node1.useSourceInfoIfMissingFrom(node2);
      node2.getQualifiedName();
      node2.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isVar();
      node0.isTrue();
      node2.isDelProp();
      node2.isDebugger();
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 117);
      node0.isUnscopedQualifiedName();
      Node node1 = Node.newNumber((double) 1, 2145, 4095);
      node0.addChildrenToFront(node1);
      node0.setChangeTime((-3014));
      node0.toStringTree();
      node0.isSetterDef();
      node0.setType(105);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.setDouble(4194304);
      node0.isIf();
      Node node2 = Node.newString(48, "com.google.common.collect.ImmutableMapValues");
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 48
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((double) (-1046));
      Node node1 = new Node((-1046), node0, node0, node0, 8, 2);
      node1.getType();
      node0.isGetElem();
      Node node2 = node1.useSourceInfoFromForTree(node0);
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = Node.newString(46, "N+|Vts.NO\"~<zOL}", 50, 37);
      Node node2 = new Node(32);
      Node node3 = node0.srcrefTree(node2);
      node2.getBooleanProp(38);
      node2.isEquivalentTo(node0);
      node2.getJsDocBuilderForNode();
      Node node4 = new Node(53, node2, node1, node3, node0, 8, 0);
      Node node5 = node0.useSourceInfoFromForTree(node1);
      node1.siblings();
      node5.isSyntheticBlock();
      node0.checkTreeEqualsImpl(node4);
      node4.getLastSibling();
      node3.setSourceFileForTesting("LCG6!=KULln");
      node2.isDebugger();
      node2.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Node node0 = new Node(0);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(438, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      node0.getAncestors();
      Node node1 = new Node(33, node0, node0);
      node0.isEquivalentTo(node1);
      node0.hasMoreThanOneChild();
      node1.isOnlyModifiesArgumentsCall();
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(126, nodeArray0);
      Node node1 = Node.newString(47, "q6vmh&LtwIZoh(V9-g", 118, 43);
      Node node2 = Node.newString("quoted", (-1795), (-2379));
      Node node3 = node1.useSourceInfoFrom(node0);
      Node node4 = new Node(38, node1, node0, node2, (-877), 130);
      node2.srcrefTree(node0);
      Node node5 = node0.copyInformationFrom(node3);
      Node.newString(50, "");
      node1.setCharno(2);
      node5.isTrue();
      node2.isFalse();
      node5.getStaticSourceFile();
      Node node6 = Node.newString("n1", 47, 8);
      node6.cloneTree();
      node3.isRegExp();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Node node0 = new Node(13, 13, 13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(38, node0, node0, node0, node0, 1, 31);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isAssign();
      Node node2 = new Node((-1542));
      node0.addChildrenToFront(node2);
      Node node3 = node1.copyInformationFrom(node0);
      node3.useSourceInfoIfMissingFrom(node0);
      node0.isAssignAdd();
      node1.isDec();
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-17));
      node0.isGetterDef();
      node0.isNot();
      node0.getInputId();
      node0.setInputId((InputId) null);
      Node node1 = new Node(30, node0, node0, node0);
      node1.getSourceOffset();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.siblings();
      node1.isSyntheticBlock();
      node0.checkTreeEqualsImpl(node0);
      Node node2 = node1.getLastSibling();
      node1.setSourceFileForTesting((String) null);
      node2.getBooleanProp(4095);
      node0.toString();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      node_SideEffectFlags0.setReturnsTainted();
      Node node1 = new Node(2, node0, node0, node0);
      node0.isOnlyModifiesArgumentsCall();
      Node node2 = node0.srcrefTree(node1);
      node1.addSuppression("zsPlNQ_/V[\";$/NK");
      node2.getQualifiedName();
      node0.isVoid();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node2.isAssignAdd();
      node2.isDelProp();
      node1.isDebugger();
      // Undeclared exception!
      try { 
        node2.getChildAtIndex(48);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Node node0 = new Node(13, 13, 13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(38, node0, node0, node0, node0, 1, 31);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node1.isAssign();
      node1.copyInformationFrom(node0);
      node0.isAssignAdd();
      node1.isDec();
      node1.isFor();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      Node node1 = new Node(4, 25, 119);
      node0.mayMutateGlobalStateOrThrow();
      node1.isNot();
      Node node2 = new Node((-3337), 2, 6);
      Node node3 = node1.useSourceInfoIfMissingFromForTree(node2);
      node1.isNE();
      Node node4 = Node.newString(4095, "com.google.javascript.rhino.Node$NumberNode", 2774, 39);
      node4.setString("com.google.javascript.rhino.Node$NumberNode");
      node3.isGetElem();
      node0.isDefaultCase();
      node4.isWhile();
      node3.getQualifiedName();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Node node0 = new Node(125);
      node0.toString();
      node0.isAdd();
      Node node1 = node0.srcref(node0);
      node0.getQualifiedName();
      node0.addChildrenToFront(node0);
      node0.isAnd();
      node1.putIntProp(37, (-1012));
      Node node2 = Node.newString("BLOCK", (-286), 33);
      node0.isTry();
      node1.isAssignAdd();
      node0.getChangeTime();
      node1.getJSDocInfo();
      node1.isFalse();
      Node node3 = node1.getAncestor(39);
      node2.clonePropsFrom(node1);
      node0.isInc();
      node3.isIf();
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(126, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("vTFza=.4FS}9Q");
      Node node1 = new Node(42, 36, 40);
      Node node2 = node0.srcref(node1);
      node1.getQualifiedName();
      node0.addChildrenToFront(node1);
      node0.putIntProp(38, 55);
      node2.isEmpty();
      node1.getBooleanProp(48);
      try { 
        node1.setDouble(52);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // THIS 36 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node0 = new Node(134, 102, 97);
      node0.isUnscopedQualifiedName();
      int int0 = Node.IS_NAMESPACE;
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.clear();
      Node node1 = new Node(51, node0);
      Node node2 = new Node(53);
      node2.hasMoreThanOneChild();
      node0.isEmpty();
      node2.getQualifiedName();
      node2.isFalse();
      node0.getAncestor(38);
      Node node3 = node1.clonePropsFrom(node0);
      node3.isInc();
      node1.isStringKey();
      node2.isTry();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Node node0 = new Node(125);
      node0.toString();
      node0.isAdd();
      Node node1 = node0.srcref(node0);
      node0.getQualifiedName();
      node0.addChildrenToFront(node0);
      node0.isAnd();
      node1.putIntProp(37, (-1012));
      node1.getSourceOffset();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.DATE_TYPE;
      JSType jSType0 = jSTypeRegistry1.getNativeType(jSTypeNative0);
      node0.setJSType(jSType0);
      Node node2 = Node.newString("NUMBER_TYPE", 110, 4095);
      // Undeclared exception!
      node2.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(45, nodeArray0, 45, 45);
      Node node1 = node0.getLastSibling();
      node0.setOptionalArg(false);
      node1.isOptionalArg();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node0.setJSDocInfo(jSDocInfo0);
      node2.addSuppression("RV8");
      Node.newNumber((double) 31, 51, 57);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("QWeJvk'");
      Node node0 = Node.newString("QWeJvk'");
      Node node1 = new Node(118, node0, 1549, 2167);
      node1.toString();
      node1.isCast();
      node1.toString();
      node0.isFor();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Node node0 = Node.newString(1469, "p:O[mO,hW54z+gOI", 1469, 1469);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N+|Vts.NO\"~<zOL}");
      Node node1 = new Node(113);
      node1.getJsDocBuilderForNode();
      Node node2 = node0.srcrefTree(node1);
      node0.getBooleanProp(37);
      node0.isEquivalentTo(node2);
      node0.getJsDocBuilderForNode();
      Node node3 = new Node(113, node1, node0, node1, node0, 1, 51);
      Node.newString("p:O[mO,hW54z+gOI", 50, 102);
      node1.siblings();
      node3.isSyntheticBlock();
      node1.checkTreeEqualsImpl(node1);
      Node node4 = node0.getLastSibling();
      node4.setSourceFileForTesting("Number node not created with Node.newNumber");
      node0.getBooleanProp(102);
      // Undeclared exception!
      try { 
        node4.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1469
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isSyntheticBlock();
      Node node1 = new Node(38, node0, node0, node0, node0, 1, 31);
      node0.isNot();
      node1.toString();
      node0.isNew();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      Node node0 = Node.newNumber(49.3326641, 34, (-1873));
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      int int0 = Node.IS_NAMESPACE;
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.clear();
      Node node1 = new Node((-1873), node0, node0, node0);
      Node node2 = new Node(54);
      node2.hasMoreThanOneChild();
      node2.isEmpty();
      node0.getQualifiedName();
      node1.isFalse();
      Node node3 = node0.getAncestor(1);
      Node node4 = node2.clonePropsFrom(node0);
      node3.isInc();
      node4.isStringKey();
      node4.isTry();
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Node node0 = Node.newString("Vq5BhL3;>{SSp4F*", 79, 47);
      Node node1 = new Node(47, node0, 57, 70);
      node1.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Node node0 = new Node(13);
      node0.children();
      Node node1 = new Node(12, node0, 51, 42);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node1.addChildrenToBack((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      Node node0 = Node.newString(125, "Gpn-GcXC");
      node0.addChildToFront(node0);
      node0.isUnscopedQualifiedName();
      node0.isIf();
      node0.isBlock();
      node0.toString();
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      node0.getBooleanProp(306);
      Node node1 = new Node(148, node0, 42, 36);
      node0.isNew();
      node1.isDebugger();
      node1.toString();
      node0.isInstanceOf();
      Node node2 = Node.newString("K?LI~rUr61.", 51, 103);
      node0.isTry();
      node2.isAssignAdd();
      node0.getChangeTime();
      node0.getJSDocInfo();
      node1.mayMutateArguments();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.checkTreeEqualsImpl(node0);
      node1.srcref(node0);
      Node node3 = null;
      try {
        node3 = new Node(102, (Node[]) null, 55, 57);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-29);
      byteArray0[1] = (byte) (-29);
      byteArray0[2] = (byte)111;
      byteArray0[3] = (byte) (-77);
      byteArray0[4] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(35);
      node0.isQuotedString();
      node0.isCall();
      Node node1 = node0.srcref(node0);
      node1.setJSDocInfo((JSDocInfo) null);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.mayMutateGlobalStateOrThrow();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(116, node0, node0, node0, node0, 40, 4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node1.getIntProp(50);
      node0.siblings();
      node1.isSyntheticBlock();
      node1.checkTreeEqualsImpl(node0);
      Node node2 = node1.getLastSibling();
      node2.setSourceFileForTesting("~<S7GL'x");
      node1.getBooleanProp(122);
      Node node3 = null;
      try {
        node3 = new Node(1146, node0, node1, 1851, 48);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Node node0 = new Node(125);
      node0.toString();
      node0.isAdd();
      Node node1 = node0.srcref(node0);
      node0.getQualifiedName();
      node0.addChildrenToFront(node0);
      node0.isAnd();
      node1.putIntProp(37, (-1012));
      Node.newString("R%'4\"vL}6>#8l!NT", (-286), 33);
      node0.isTry();
      node1.isAssignAdd();
      node0.getChangeTime();
      node1.getJSDocInfo();
      node0.mayMutateArguments();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        nodeArray0[0].checkTreeEqualsImpl(node1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      JSTypeNative jSTypeNative0 = JSTypeNative.ALL_TYPE;
      Node node0 = Node.newString(",sJXIaWQbdj!", 116, (-977));
      node0.putProp(51, ",sJXIaWQbdj!");
      node0.getSourcePosition();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v}r1F8S$9s7q");
      Node node1 = Node.newString(56, ",sJXIaWQbdj!", (-977), (-3018));
      node0.copyInformationFrom(node1);
      Node.newString(30, ",sJXIaWQbdj!");
      node1.setCharno(57);
      node0.isTrue();
      node0.isFalse();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      Node node0 = Node.newString("u");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      node_SideEffectFlags0.setMutatesArguments();
      Node node1 = Node.newNumber((double) 38, 42, 4193);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isUnscopedQualifiedName();
      node1.setChangeTime(103);
      node1.isCast();
      node1.setType(15);
      node1.setDouble(0.5);
      int int0 = Node.IS_DISPATCHER;
      node1.toString();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags((-41));
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node0.toString();
      Node node2 = new Node(52, node0, node1, node0, node1);
      node2.removeFirstChild();
      node2.isStringKey();
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      JSTypeNative jSTypeNative0 = JSTypeNative.ALL_TYPE;
      Node node0 = Node.newString(",sJXIaWQbdj!", 116, (-977));
      node0.putProp(51, ",sJXIaWQbdj!");
      node0.getSourcePosition();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v}r1F8S$9s7q");
      node0.isFor();
      node0.isArrayLit();
      node0.getQualifiedName();
      node0.getProp(51);
      node0.addSuppression("m8LLx]");
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Node node0 = Node.newString(">YSQW`~MuhJ\"a*G");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(50);
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags();
      node_SideEffectFlags3.areAllFlagsSet();
      Node node1 = Node.newString(">tV[=7[?7T`2<cq=cs", 42, 51);
      node0.getSourceOffset();
      node1.getStaticSourceFile();
      Node node2 = new Node(36, node0, node1, node1, node1);
      Node node3 = node2.cloneTree();
      Node node4 = node0.cloneTree();
      node3.srcref(node4);
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.getBooleanProp((-80));
      node0.isCall();
      Node node1 = new Node(31, node0, 13, 1);
      node0.isLabelName();
      node0.isCast();
      node0.setJSDocInfo(jSDocInfo0);
      node0.getSourceOffset();
      node0.getJSDocInfo();
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      node0.setType(102);
      node0.mayMutateGlobalStateOrThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(46, node0, node0, node0, node0, 51, 2);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:j[mO,hW=4A+gOI");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-868));
      node_SideEffectFlags0.clearSideEffectFlags();
      node0.setIsSyntheticBlock(true);
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.isThrow();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node.newNumber(1.0);
      Node.newString(48, "K?LI~rUr61.");
      Node node2 = new Node(29, 12, 43);
      node0.isCast();
      node0.toString();
      node2.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194298, 4194298, 4194298);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      int int0 = Node.IS_NAMESPACE;
      Node node1 = new Node(37, node0, node0, node0, node0, 31, (-131));
      Node node2 = Node.newString((-67), "undefined", 64, 8);
      node2.isRegExp();
      Node node3 = new Node(30, node2);
      node3.hasChild(node1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newNumber(4194304.0);
      Node node4 = Node.newString(56, ".");
      Node node5 = new Node((-2053), node4, 112, 43);
      node5.isUnscopedQualifiedName();
      node2.isCast();
      // Undeclared exception!
      try { 
        node5.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -2053
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      simpleErrorReporter0.warning("Object#Element", "pEhopIGcz<", (-3092), 48);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
      node0.getStaticSourceFile();
      node0.isQualifiedName();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.isFor();
      node2.clonePropsFrom(node1);
      try { 
        node2.setDouble(0.5);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Node node0 = new Node(13);
      // Undeclared exception!
      try { 
        node0.addChildrenToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      node0.getBooleanProp(306);
      Node node1 = new Node(148, node0, 42, 36);
      node0.isEquivalentToTyped(node1);
      node1.isDebugger();
      node0.isSyntheticBlock();
      Node.newString(39, "directives");
      node1.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isAssign();
      node0.isAssignAdd();
      node0.isDec();
      node1.toString();
      node0.toString();
      node1.cloneNode();
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      Node node0 = new Node(32);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString(4095, "node is not a child", 39, 498);
      node1.setOptionalArg(true);
      Node node2 = node0.useSourceInfoFrom(node1);
      node0.getQualifiedName();
      node1.getStaticSourceFile();
      node1.setCharno(2974);
      node1.getInputId();
      node2.getBooleanProp(54);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.cloneTree();
      node2.addSuppression("Unknown class name");
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(28);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got TYPEOF
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      Node node0 = Node.newNumber((double) 47, 47, 47);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.putProp((-471), jSDocInfo0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node.extractLineno((-1));
      node0.isThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getQualifiedName();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      // Undeclared exception!
      try { 
        node0.getIntProp((-471));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Node node0 = new Node(118);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(33, node0);
      node1.isDebugger();
      node0.srcrefTree(node1);
      node1.getQualifiedName();
      node0.isVoid();
      node1.getAncestor(46);
      // Undeclared exception!
      try { 
        Node.newString((String) null, 57, 32);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)105;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-17);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(1501.0);
      node0.isAdd();
      node0.hasOneChild();
      node0.getChildAtIndex((byte)0);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Node node0 = new Node(13);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node1 = Node.newString(1, "N+|Vts.NO\"~<zOL}", 4095, 51);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o/.$k.^Qyd^-~:;Q(");
      Node node2 = new Node(37);
      node0.getJsDocBuilderForNode();
      Node node3 = node0.srcrefTree(node1);
      node2.getBooleanProp(4095);
      node2.isEquivalentTo(node3);
      Node node4 = Node.newString(38, "o/.$k.^Qyd^-~:;Q(");
      node1.getJsDocBuilderForNode();
      Node node5 = Node.newNumber((double) 56, 115, 267);
      Node node6 = new Node(47, node3, node2, node5, node5, 21, 50);
      Node node7 = node0.useSourceInfoFromForTree(node2);
      node5.siblings();
      node3.isSyntheticBlock();
      node4.checkTreeEqualsImpl(node1);
      Node node8 = node7.getLastSibling();
      node0.isBlock();
      node5.setSourceFileForTesting((String) null);
      node8.getBooleanProp(48);
      node3.isTry();
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(128, nodeArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-44);
      Locale locale0 = Locale.PRC;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.setDirectives(set0);
      node0.isContinue();
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      node1.setLineno(301);
      Node node2 = new Node(53, node0, 38, 89);
      node1.isCase();
      node0.getLastSibling();
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      Node node0 = new Node(1843, 1843, 1843);
      node0.setType(102);
      node0.mayMutateGlobalStateOrThrow();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(48, node0, node0, node0, node0, 56, 57);
      node1.isAssign();
      node1.isAssignAdd();
      node0.isDec();
      Node.extractLineno(52);
      node0.isThrow();
      node1.getBooleanProp(3340);
      node0.getParent();
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(126, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      String string0 = "vTFza=.4FS}9Q";
      treeSet0.add("vTFza=.4FS}9Q");
      Locale locale0 = Locale.PRC;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node1.setDirectives(set0);
      node1.isExprResult();
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      node1.setLineno(57);
      Node node2 = new Node((-764), node1, (-105), 8);
      node1.getBooleanProp(1);
      node2.getBooleanProp(15);
      Node node3 = null;
      try {
        node3 = new Node((-3683), node1, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Node node0 = new Node(118, 118, 118);
      Node node1 = new Node(118, node0, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isSwitch();
      Node node2 = Node.newString(",Gu)");
      Node node3 = node0.copyInformationFrom(node2);
      node0.isSyntheticBlock();
      node0.checkTreeEqualsImpl(node1);
      Node node4 = node3.getLastSibling();
      node4.isBlock();
      node0.setSourceFileForTesting("\u0000\u05BE\u05D0\u05F3\u0600\u0750\u0E00\u1E00\u2100\uFB50\uFE70\uFF61");
      node0.getBooleanProp(154);
      node1.isTry();
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("QWeJvk'");
      node0.setDirectives(treeSet0);
      node0.hasChild(node0);
      node0.children();
      Node node1 = new Node(39, node0, node0, node0);
      node0.isFor();
      node1.copyInformationFrom(node0);
      node1.wasEmptyNode();
      node1.hasChild(node0);
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(30);
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("'dUdJ7hz", "'dUdJ7hz", 37, 102);
      node0.isOnlyModifiesArgumentsCall();
      node0.wasEmptyNode();
      node0.getAncestors();
      Node node1 = new Node(1, node0, node0);
      node0.copyInformationFrom(node1);
      Node node2 = Node.newString(64, "'dUdJ7hz");
      node2.setCharno(48);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[2];
      JSTypeNative jSTypeNative0 = JSTypeNative.VOID_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      jSTypeArray0[0] = jSType0;
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFunctionTypeWithNewThisType((FunctionType) null, (ObjectType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.putIntProp(102, 102);
      node0.isAssign();
      node0.isAssignAdd();
      Node.newNumber((double) 36, 39, 39);
      node0.isDec();
      Node.extractLineno(43);
      node0.isThrow();
      node0.getBooleanProp(102);
      node0.isTry();
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(126, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("vTFza=.4FS}9Q");
      treeSet0.add("SC6F?8*");
      treeSet0.clear();
      node0.setDirectives(treeSet0);
      node0.isGetElem();
      Node node1 = new Node(29, node0);
      node0.isLabel();
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // LABEL 0 [directives: com.google.javascript.rhino.Node$ObjectPropListItem@0000000002] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node0.mayMutateGlobalStateOrThrow();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(116, node0, node0, node0, node0, 40, 4);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node2 = node0.srcrefTree(node1);
      Node node3 = node2.copyInformationFrom(node0);
      Node.newString(38, "");
      node3.setCharno(35);
      node1.isTrue();
      Node node4 = new Node(40, node1, 16, 31);
      node4.isFalse();
      node3.getStaticSourceFile();
      node4.cloneTree();
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      Node node0 = Node.newNumber((-3067.640899297918), 4194304, 4194304);
      node0.isGetterDef();
      node0.isNot();
      Node node1 = new Node(2761, 46, 118);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.isEquivalentToShallow(node2);
      Node[] nodeArray0 = new Node[0];
      Node node3 = new Node(1, nodeArray0, 33, 33);
      // Undeclared exception!
      try { 
        node3.setString("gK)");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString(1, "KN]K]DgQ>VXb:wR", 154, 1);
      Node node1 = Node.newString("KN]K]DgQ>VXb:wR", (-105), 16);
      node0.useSourceInfoFrom(node1);
      Node node2 = new Node(1, node0, node0, node0, 2720, (-105));
      Node node3 = node2.srcrefTree(node0);
      node0.copyInformationFrom(node3);
      Node node4 = Node.newString(0, "");
      node3.setCharno(1732);
      node2.type = 42;
      node3.isTrue();
      node3.isFalse();
      node0.getStaticSourceFile();
      node4.cloneTree();
      node3.putIntProp(51, 0);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      String string0 = ": ";
      Node node0 = Node.newString(44, ": ", 75, 88);
      node0.getQualifiedName();
      node0.setCharno(75);
      node0.getInputId();
      node0.setWasEmptyNode(true);
      Node node1 = new Node(51, node0, node0);
      node1.isIf();
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      Node node0 = Node.newString(">YSQW`~MuhJ\"a*G");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2919);
      node_SideEffectFlags0.clearAllFlags();
      Node node1 = new Node(43, node0, node0);
      node1.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString("Gpn-GcXC");
      node2.isEquivalentTo(node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getBooleanProp((-2444));
      Node node3 = node0.srcrefTree(node1);
      JSTypeNative jSTypeNative0 = JSTypeNative.ARRAY_FUNCTION_TYPE;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Iterator<String> iterator0 = linkedList0.descendingIterator();
      ImmutableList<String> immutableList0 = ImmutableList.copyOf((Iterator<? extends String>) iterator0);
      jSDocInfo0.declareTemplateTypeNames(immutableList0);
      node3.putProp(47, jSDocInfo0);
      ImmutableList.of();
      node1.useSourceInfoIfMissingFromForTree(node2);
      node3.mayMutateArguments();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node3.isLabel();
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("QWeJvk'");
      Node node0 = Node.newString(113, "QWeJvk'", 118, (-1707));
      node0.isDefaultCase();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      Node node0 = Node.newString("");
      JSTypeNative jSTypeNative0 = JSTypeNative.ALL_TYPE;
      node0.putProp(51, jSTypeNative0);
      node0.getSourcePosition();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v}r1F8S$9s7q");
      // Undeclared exception!
      try { 
        node0.getSourceOffset();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.jstype.JSTypeNative cannot be cast to com.google.javascript.rhino.jstype.StaticSourceFile
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      Node node0 = new Node(88, 88, 88);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newString(56, "QWeJvk'", 130, 154);
      Node.newString("QWeJvk'", 53, 12);
      Node node2 = node1.useSourceInfoFrom(node0);
      Node node3 = new Node(52, node2, node1, node2, 2256, (-3608));
      Node node4 = node3.srcrefTree(node0);
      Node node5 = node1.copyInformationFrom(node2);
      Node node6 = Node.newString(4095, "Should not happen\n");
      node5.setCharno(0);
      node2.isTrue();
      node6.isFalse();
      node2.getStaticSourceFile();
      node4.cloneTree();
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isHook();
      Node node1 = new Node(36, node0, node0);
      node0.isEquivalentToTyped(node1);
      node0.isDebugger();
      Node node2 = Node.newString(40, "m^K", 792, 2);
      node0.toString();
      node2.isInstanceOf();
      Node node3 = Node.newString(29, "(1lYU4jQu");
      node3.setCharno((-5251));
      node0.isLabelName();
      node0.isFalse();
      node1.isNE();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node4 = new Node(4, 1073, (-671));
      node2.isUnscopedQualifiedName();
      node0.isGetterDef();
      node0.isCast();
      node0.siblings();
      node2.isDefaultCase();
      node3.isRegExp();
      node3.hasOneChild();
      node4.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(134, nodeArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-44);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.children();
      Node node1 = new Node(119, node0, 8, 8);
      node1.getBooleanProp(26);
      node0.isContinue();
      node0.isScript();
      node0.isAdd();
      node1.addChildBefore(node1, node0);
      node0.isWith();
      node1.getChildBefore(node0);
      node1.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      node0.getBooleanProp(314);
      Node node1 = new Node(148, node0, 54, 36);
      node0.setChangeTime(130);
      node1.isSetterDef();
      node1.setType(36);
      HashSet<String> hashSet0 = new HashSet<String>();
      node0.isSyntheticBlock();
      // Undeclared exception!
      try { 
        node1.setDouble(1501.0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 36
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      Node node0 = new Node(9);
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(37, node0);
      node0.addChildAfter(node1, (Node) null);
      node0.isCast();
      node0.toString();
      node0.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(128, nodeArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-44);
      Locale locale0 = Locale.PRC;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      Node node1 = node0.setJSDocInfo(jSDocInfo0);
      node0.setDirectives(set0);
      node0.isExprResult();
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      node1.setLineno(301);
      Node node2 = new Node(53, node0, 38, 89);
      // Undeclared exception!
      try { 
        node0.getBooleanProp(48);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194298, 4194298, 4194298);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      int int0 = Node.IS_NAMESPACE;
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.clear();
      Node node1 = new Node(100, node0);
      Node node2 = new Node(31);
      node0.isEquivalentToTyped(node2);
      node2.isEmpty();
      node1.getQualifiedName();
      node0.isFalse();
      node1.getAncestor(0);
      Node node3 = null;
      try {
        node3 = new Node(55, node0, node1, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      Node node0 = new Node(13, 13, 13);
      node0.isSyntheticBlock();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.NumberType");
      node0.isEquivalentTo(node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[5];
      jSTypeNativeArray0[1] = jSTypeNativeArray0[0];
      node1.isFalse();
      Node node2 = new Node(36, node1, node0, (-413), 40);
      node2.getAncestor(4);
      Node node3 = node0.clonePropsFrom(node1);
      node1.isInc();
      node3.isCast();
      node3.getAncestors();
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194298, 4194298, 4194298);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      int int0 = Node.IS_NAMESPACE;
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.clear();
      Node node1 = new Node(304, node0);
      Node node2 = new Node(31);
      node0.isEquivalentToTyped(node2);
      node2.isEmpty();
      node1.getQualifiedName();
      node2.getBooleanProp(1444);
      Node node3 = node2.srcrefTree(node0);
      JSTypeNative jSTypeNative0 = JSTypeNative.ARRAY_FUNCTION_TYPE;
      JSDocInfo jSDocInfo1 = new JSDocInfo();
      node3.putProp(1, jSDocInfo1);
      Node node4 = null;
      try {
        node4 = new Node(118, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isSyntheticBlock();
      node0.isBreak();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.NumberType");
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("IN");
      node0.isAssignAdd();
      node0.cloneNode();
      node0.setChangeTime((-5404));
      node0.isSetterDef();
      node1.setType(57);
      // Undeclared exception!
      try { 
        node1.setDouble(30);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 57
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      node0.hasChild(node0);
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.clear();
      Node node1 = new Node(31, 2665, 29);
      Node node2 = new Node(1, node1);
      node0.isEquivalentToTyped(node1);
      node1.isEmpty();
      node0.getQualifiedName();
      node0.getAncestor(4095);
      Node node3 = node0.clonePropsFrom(node0);
      node3.isInc();
      Node node4 = Node.newString("%<V$+Jlh");
      node4.isCast();
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      Node node0 = new Node(32);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isSwitch();
      Node node1 = Node.newString(",Gu)");
      node0.copyInformationFrom(node1);
      node0.removeProp(56);
      node1.isGetterDef();
      node1.getJSDocInfo();
      try { 
        node1.setDouble(30);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING ,Gu) is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(126, nodeArray0);
      Node node1 = new Node(80, nodeArray0);
      node0.isEmpty();
      node0.getBooleanProp(621);
      node0.isNew();
      Node node2 = new Node(2491, node1, node0, node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2538));
      node0.useSourceInfoIfMissingFrom(node2);
      node1.cloneTree();
      node1.addSuppression(",G? H1");
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node.mergeLineCharNo(8199, 8199);
      Node node0 = Node.newString(33587199, "missing prop: ");
      Node node1 = node0.getLastSibling();
      node1.getSourceOffset();
      node0.getNext();
      node0.isDec();
      node1.getStaticSourceFile();
      node1.isStringKey();
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      Node node0 = new Node(9);
      node0.isOnlyModifiesThisCall();
      Node node1 = new Node(37, node0);
      node0.addChildAfter(node1, (Node) null);
      node0.setType(102);
      node0.isSyntheticBlock();
      node1.isAnd();
      node0.isIf();
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Node node0 = new Node(118, 118, 118);
      node0.setType(111);
      node0.isSyntheticBlock();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      node0.getBooleanProp(314);
      Node node1 = new Node(148, node0, 54, 36);
      node1.isEquivalentToTyped(node1);
      node0.isOnlyModifiesArgumentsCall();
      node0.isAnd();
      node1.isEquivalentToTyped(node0);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.isEquivalentToShallow(node2);
      node0.addChildrenToFront(node1);
      node0.setString(".#d=;S8|T");
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      node3.getStaticSourceFile();
      Node node4 = Node.newString("H_7Vi9Ue");
      node4.cloneTree();
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isBlock();
      node0.isDebugger();
      node0.isLabel();
      Node node1 = node0.cloneTree();
      node1.isDefaultCase();
      node0.isName();
      node0.isNew();
      node0.getType();
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      Node node0 = new Node(52, 52, 47);
      node0.getJSDocInfo();
      Node node1 = new Node(15, node0, node0, node0, node0, 148, 125);
      Node node2 = Node.newString((-1), "com.google.common.base.Joiner$MapJoiner", 43, 512);
      node2.toString();
      node0.isInstanceOf();
      Node.newString(4096, "*##4GV.> <<z>5 ");
      node1.setCharno(52);
      node1.isLabelName();
      node2.isFalse();
      node0.isNE();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node3 = new Node(32, 38, 53);
      node2.isUnscopedQualifiedName();
      node3.isGetterDef();
      node2.isCast();
      node3.siblings();
      node3.getQualifiedName();
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      node0.setDirectives(treeSet0);
      node0.hasChild(node0);
      node0.children();
      Node node1 = new Node(48, node0, 8, 8);
      Node node2 = new Node(12, 4095, 54);
      node2.getSideEffectFlags();
      node2.toStringTree();
      node2.isAdd();
      node1.hasOneChild();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(134, nodeArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-44);
      Locale locale0 = Locale.PRC;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      node0.setDirectives(set0);
      node0.isExprResult();
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node1 = new Node(53, node0, 38, 89);
      // Undeclared exception!
      try { 
        node0.getBooleanProp(48);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$ObjectPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Node node0 = new Node(141, 141, 141);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("SC6F?8*");
      String string0 = "J-C_E(h|v>}Kkuc";
      treeSet0.add("J-C_E(h|v>}Kkuc");
      node0.isUnscopedQualifiedName();
      treeSet0.clear();
      node0.setDirectives(treeSet0);
      node0.isExprResult();
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node1 = new Node(47, node0, (-40), 55);
      node1.getBooleanProp(42);
      Node node2 = null;
      try {
        node2 = new Node(4, node1, node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Node node0 = new Node(1843, 1843, 1843);
      node0.setType(102);
      node0.mayMutateGlobalStateOrThrow();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(48, node0, node0, node0, node0, 56, 57);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:j[mO,hW=4A+gOI");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      node0.wasEmptyNode();
      node1.isQualifiedName();
      node0.isLabelName();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node0.getStaticSourceFile();
      node1.checkTreeTypeAwareEqualsImpl(node2);
      node2.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.setChangeTime((-3014));
      node0.isSetterDef();
      node0.setType(105);
      node0.setDouble(4194304);
      node0.getLength();
      node0.toString();
      node0.setSourceEncodedPositionForTree(1747);
      node0.isName();
      Node node1 = new Node(102, node0, 38, 2373);
      node1.detachChildren();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      // Undeclared exception!
      try { 
        node0.getExistingIntProp((-531));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -531
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      node0.setDirectives(treeSet0);
      node0.hasChild(node0);
      node0.children();
      Node node1 = new Node(119, node0, 8, 8);
      node1.getBooleanProp(26);
      Node node2 = new Node(12, 4095, 54);
      node2.getSideEffectFlags();
      node2.toStringTree();
      node2.isAdd();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      Node node0 = new Node(27);
      node0.isOnlyModifiesThisCall();
      int int0 = 102;
      Node node1 = new Node(37, node0);
      node1.setSideEffectFlags(50);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      Node node0 = new Node(118, 118, 118);
      Node node1 = new Node(118, node0, node0, node0);
      node0.setType(105);
      node1.isSyntheticBlock();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesThis();
      node0.wasEmptyNode();
      node0.isQualifiedName();
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      try { 
        node2.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // VAR 118 is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      Node node0 = Node.newString(">YSQW`~MuhJ\"a*G");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2919);
      node_SideEffectFlags0.clearAllFlags();
      Node node1 = new Node(43, node0, node0);
      node1.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node2 = Node.newString("Should not happen\n");
      Node node3 = Node.newString("Gpn-GcXC");
      node3.isEquivalentTo(node2);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getBooleanProp((-2444));
      Node node4 = node2.srcrefTree(node1);
      JSTypeNative jSTypeNative0 = JSTypeNative.ARRAY_FUNCTION_TYPE;
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node4.putProp(47, jSDocInfo0);
      node4.getLength();
      node4.toString();
      Node node5 = Node.newString(301, "h[*.4aP3XZx");
      node5.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isSyntheticBlock();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isSwitch();
      Node node1 = node0.copyInformationFrom(node0);
      node1.isLocalResultCall();
      node0.wasEmptyNode();
      node1.setJSDocInfo(jSDocInfo0);
      node1.isAnd();
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.Predicates$CompositionPredicate");
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = new Node(39, node0, 47, 4095);
      node0.getBooleanProp(947);
      ImmutableList.of();
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.mayMutateArguments();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      Node node3 = Node.newString(50, "com.google.common.base.Predicates$CompositionPredicate", 12, 2241);
      node3.isLabel();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(1237);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got NUMBER
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node0.toString();
      Node node1 = new Node(100, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      Node node2 = Node.newNumber((double) 53, 148, (-168));
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Node node0 = new Node(54, 13, 54);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      node0.setSourceFileForTesting("TfKnzy$");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      ObjectType.cast(jSType0);
      EnumType enumType0 = jSTypeRegistry0.createEnumType("Object#Key", node0, jSType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getJSDocInfo();
      jSTypeRegistry0.createAnonymousObjectType((JSDocInfo) null);
      FunctionType.getTopDefiningInterface(enumElementType0, "Unknown class name");
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = new Node((-2278), node0, node0, node0, node0, 112, 16);
      node0.useSourceInfoIfMissingFrom(node1);
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.wasEmptyNode();
      node0.isQualifiedName();
      Node node1 = new Node(12, node0, node0, 32, 4095);
      node1.getStaticSourceFile();
      node1.getLastChild();
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Node node0 = new Node(32);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString(4095, "{,@4~N' 58", 39, 498);
      node0.useSourceInfoFrom(node1);
      node0.getQualifiedName();
      node1.setCharno(2974);
      node1.getInputId();
      Node node2 = Node.newString("{,@4~N' 58", 8, 40);
      node2.setWasEmptyNode(true);
      Node node3 = new Node(40, node0, node2);
      Node node4 = new Node(47, node3, 13, 12);
      node4.isIf();
      node4.isCast();
      // Undeclared exception!
      try { 
        node1.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4095
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Node node0 = new Node(32);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("SC6F?8*");
      String string0 = "com.google.javascript.rhino.JSTypeExpression";
      treeSet0.add("com.google.javascript.rhino.JSTypeExpression");
      treeSet0.clear();
      node0.setDirectives(treeSet0);
      node0.isExprResult();
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node1 = new Node(4, node0, 50, 4095);
      node1.getBooleanProp(15);
      Node node2 = new Node((-402), node1, node1, node1);
      Node node3 = node0.useSourceInfoIfMissingFrom(node2);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      nodeArray0[1] = node3;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node1;
      nodeArray0[5] = node2;
      Node node4 = null;
      try {
        node4 = new Node(57, nodeArray0, 49, (-536870912));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isEquivalentTo(node0, false, false, false);
      Node node1 = new Node(38, node0, node0, node0, node0, 1, 31);
      node0.isNot();
      Node node2 = null;
      try {
        node2 = new Node(56, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(126, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      Node node1 = new Node(46, node0);
      Node node2 = new Node(47, 57, 1);
      node2.isDebugger();
      node2.detachChildren();
      Node node3 = node0.srcrefTree(node2);
      node2.getQualifiedName();
      Node node4 = null;
      try {
        node4 = new Node(2, node0, node1, node3, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isUnscopedQualifiedName();
      int int0 = Node.IS_NAMESPACE;
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.clear();
      Node node1 = new Node((-2449), node0);
      Node node2 = new Node(1);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.isEquivalentToTyped(node3);
      node1.isEmpty();
      node3.getQualifiedName();
      node0.isFalse();
      node1.getAncestor(54);
      node2.clonePropsFrom(node1);
      node3.isInc();
      node0.isCast();
      node1.getAncestors();
      node0.isNoSideEffectsCall();
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      Node node0 = new Node((-531), (-531), (-531));
      node0.getJSDocInfo();
      Node node1 = new Node((-531), node0, node0, node0, node0, 49, (-1013));
      node1.isTrue();
      Node node2 = new Node(47);
      node1.replaceChild(node0, node2);
      node0.isString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1435));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node0.isEquivalentTo(node1, false, false, true);
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -531
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      node0.getBooleanProp(306);
      Node node1 = new Node(148, node0, 54, 36);
      node1.isEquivalentToTyped(node0);
      node1.isNew();
      Node node2 = new Node(57, node1);
      node2.isScript();
      node1.isWhile();
      Node.extractLineno(57);
      Node.newNumber((double) 4, 37, 51);
      node2.getChildCount();
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isQuotedString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("'dUdJ7hz", "'dUdJ7hz", 37, 102);
      node0.isOnlyModifiesArgumentsCall();
      node0.wasEmptyNode();
      node0.getAncestors();
      node0.cloneTree();
      node0.isDefaultCase();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      InputId inputId0 = new InputId("b- +2#7!/6NpUu");
      node0.setInputId(inputId0);
      node0.isNew();
      Node node1 = new Node(6, node0);
      node0.isLabel();
      node1.isScript();
      InputId inputId1 = node0.getInputId();
      ImmutableList<InputId> immutableList0 = ImmutableList.of(inputId0, inputId1, inputId0, inputId0, inputId0, inputId1, inputId1, inputId0, inputId0, inputId0, inputId1);
      stack0.retainAll(immutableList0);
      node0.removeFirstChild();
      node1.isOptionalArg();
      int int0 = Node.INCRDECR_PROP;
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      node0.getBooleanProp(77);
      Node node1 = Node.newNumber((double) 2);
      node1.wasEmptyNode();
      node0.getDirectives();
      node1.isAssign();
      node1.isDo();
      Node node2 = new Node(49, node1, node1, node0, node1);
      node2.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      Node node0 = Node.newNumber(1407.657339, 1323, 1323);
      node0.getCharno();
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 4194304);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setChangeTime(133);
      Node node1 = new Node(42, node0, 10, 51);
      node1.getQualifiedName();
      node0.setCharno(37);
      node0.getDirectives();
      Node node2 = Node.newString(15, "] Rj;qV#x5m");
      node2.isSyntheticBlock();
      node2.getInputId();
      node1.getAncestors();
      node2.isObjectLit();
      node2.isOptionalArg();
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isSyntheticBlock();
      Node node1 = new Node(38, node0, node0, node0, node0, 1, 31);
      node0.isNot();
      Node node2 = node1.clonePropsFrom(node0);
      try { 
        node2.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 1 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Node node0 = Node.newString(16, "KN]K]DgQ>VXb:wR", 154, 16);
      Node node1 = Node.newString("KN]K]DgQ>VXb:wR", (-105), 16);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = new Node(0, node2, node1);
      node3.srcrefTree(node0);
      int int0 = 1732;
      String string0 = "";
      Node node4 = null;
      try {
        node4 = new Node(0, node3, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node1 = Node.newString(2150, "N+|Vts.NO\"~<zOL}", 50, 37);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Node node2 = new Node(32);
      node0.getJsDocBuilderForNode();
      Node node3 = node0.srcrefTree(node2);
      node2.getBooleanProp(38);
      node2.isEquivalentTo(node0);
      Node node4 = Node.newString(117, "N+|Vts.NO\"~<zOL}");
      node2.getJsDocBuilderForNode();
      Node node5 = new Node(2150, node2, node1, node3, node0, 8, 0);
      node0.useSourceInfoFromForTree(node1);
      node2.siblings();
      node0.isSyntheticBlock();
      node0.checkTreeEqualsImpl(node3);
      node1.getLastSibling();
      node2.isBlock();
      node4.setSourceFileForTesting((String) null);
      node0.isTypeOf();
      node4.isDefaultCase();
      node4.getAncestors();
      node0.isLabelName();
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      Node node0 = Node.newString("}");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setThrows();
      JSTypeNative jSTypeNative0 = JSTypeNative.ALL_TYPE;
      node0.putProp(51, jSTypeNative0);
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node0.getSourcePosition();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      Node node1 = new Node(89, nodeArray0);
      node0.isBreak();
      node0.isOr();
      node1.checkTreeEquals(node0);
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isSyntheticBlock();
      Node node1 = new Node(38, node0, node0, node0, node0, 1, 31);
      node1.isEquivalentTo(node0);
      Node node2 = Node.newString((-1357), "c+'b'y");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<FunctionType> linkedList0 = new LinkedList<FunctionType>();
      Iterator<FunctionType> iterator0 = linkedList0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node3 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      node3.getJsDocBuilderForNode();
      Node node4 = node3.useSourceInfoFromForTree(node0);
      Node node5 = new Node(55, node2, node4, (-1231), 252);
      node5.useSourceInfoFromForTree(node0);
      node2.siblings();
      node1.isSyntheticBlock();
      node5.checkTreeEqualsImpl(node4);
      node1.getLastSibling();
      node5.isBlock();
      node0.setSourceFileForTesting("Object#Key");
      node5.isTypeOf();
      node4.isDefaultCase();
      node4.getAncestors();
      node3.isLabelName();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194298, 4194298, 4194298);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      int int0 = Node.IS_NAMESPACE;
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.clear();
      Node node1 = new Node(304, node0);
      Node node2 = new Node(31);
      node2.isDelProp();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node0.removeChildren();
      node_SideEffectFlags1.setAllFlags();
      // Undeclared exception!
      try { 
        node2.replaceChild((Node) null, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194298, 4194298, 4194298);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("SC6F?8*");
      treeSet0.add("VK6oPn%}~?.pypLN23");
      TreeSet<String> treeSet1 = new TreeSet<String>();
      treeSet1.clear();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-44);
      byteArray0[1] = (byte) (-44);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.setDirectives(treeSet1);
      node0.isExprResult();
      node0.children();
      Node node1 = new Node(116, node0, 1325, 100);
      node0.getBooleanProp(50);
      int int0 = Node.DIRECT_EVAL;
      node1.hasChild(node0);
      node1.getAncestors();
      node0.isVarArgs();
      node1.isWhile();
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      Node node0 = new Node(118, 118, 118);
      Node node1 = new Node(118, node0, node0, node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isSwitch();
      Node node2 = Node.newString(",Gu)");
      Node node3 = node0.copyInformationFrom(node2);
      node3.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isAnd();
      node0.addSuppression(">)RO>=Ser&uG@fu");
      node0.getDirectives();
      node0.toStringTree();
      node0.isFor();
      node0.isName();
      node0.isCase();
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(126, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.clear();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-44);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.setDirectives(treeSet0);
      node0.children();
      Node node1 = new Node(119, node0, 8, 8);
      node1.getQualifiedName();
      node0.getAncestor(37);
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Node has existing properties.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      Node node0 = Node.newString(44, ": ", 75, 88);
      node0.getQualifiedName();
      node0.setCharno(75);
      int int0 = 16;
      // Undeclared exception!
      try { 
        node0.srcref((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isSwitch();
      Node node1 = Node.newString(",Gu)");
      node0.copyInformationFrom(node1);
      node1.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      Node node0 = new Node(1843);
      node0.setType(102);
      node0.mayMutateGlobalStateOrThrow();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(48, node0, node0, node0, node0, 56, 57);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:O[mO,hW54A+gOI");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isEmpty();
      node0.getQualifiedName();
      Node node2 = new Node(33, node1, node1);
      node2.isFalse();
      node0.getAncestor(1);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[2];
      JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_PROTOTYPE;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.jstype.PrototypeObjectType cannot be cast to com.google.javascript.rhino.jstype.FunctionType
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194298, 4194298, 4194298);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      int int0 = Node.IS_NAMESPACE;
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.clear();
      Node node1 = new Node(304, node0);
      Node node2 = new Node(31);
      node0.isEquivalentToTyped(node2);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags3.setMutatesThis();
      node2.wasEmptyNode();
      node0.isQualifiedName();
      node2.isGetElem();
      node2.useSourceInfoIfMissingFrom(node1);
      node0.getStaticSourceFile();
      Node node3 = new Node(40, node2, node2);
      node0.checkTreeTypeAwareEqualsImpl(node3);
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newString("rY3xyv?4TVYh?l;", 1326, 1326);
      Node node1 = new Node(12, (-569), 1015);
      Node node2 = Node.newString((-326), "rY3xyv?4TVYh?l;", 2097152, 118);
      node2.isQualifiedName();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.InstanceObjectType");
      node1.wasEmptyNode();
      node0.checkTreeEqualsImpl(node1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node1.isTry();
      node0.isFor();
      node0.setVarArgs(false);
      node1.srcref(node0);
      node0.toString(false, false, false);
      node1.isBlock();
      node0.isSwitch();
      node0.hasOneChild();
      node1.addChildrenToFront(node2);
      node2.isOnlyModifiesArgumentsCall();
      node2.getLineno();
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = new Node(51, node0, node0, node0, node0, 40, 548);
      node0.useSourceInfoFrom(node1);
      node0.getDirectives();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        node0.setDouble(0.5);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // PARAM_LIST 40 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194298, 4194298, 4194298);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      int int0 = Node.IS_NAMESPACE;
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.clear();
      Node node1 = new Node(304, node0);
      Node node2 = new Node(31);
      node0.isEquivalentToTyped(node2);
      node2.isEmpty();
      node1.getQualifiedName();
      node0.isFalse();
      Node node3 = node1.getAncestor(0);
      Node node4 = node1.clonePropsFrom(node3);
      node1.isInc();
      node4.isCast();
      node2.getAncestors();
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-767.778967176));
      int int0 = Node.SIDE_EFFECTS_ALL;
      Stack<JSType> stack0 = new Stack<JSType>();
      stack0.clear();
      Node node1 = new Node(37, node0);
      Node node2 = new Node(4);
      node0.isEquivalentToTyped(node1);
      node1.isEmpty();
      node1.getQualifiedName();
      node1.isFalse();
      node0.getAncestor(57);
      Node node3 = node1.clonePropsFrom(node0);
      node1.isInc();
      node2.isCast();
      node3.getAncestors();
      node1.getSourceOffset();
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, (-17), (-17));
      node0.isThis();
      node0.isNot();
      Node node1 = new Node(1002, node0, node0, node0, node0, 15, 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:O[mO,hW54A+gOI");
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("p:O[mO,hW54z+gOI", true);
      node0.putProp(53, simpleSourceFile0);
      node0.getLength();
      Node node2 = node1.setJSDocInfo((JSDocInfo) null);
      node1.setLength(37);
      node0.toString();
      node0.setSourceEncodedPositionForTree(8);
      node0.isName();
      // Undeclared exception!
      try { 
        node2.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.isSetterDef();
      node0.isThrow();
      node0.isWith();
      node0.children();
      int int0 = Node.IS_NAMESPACE;
      node0.getChildCount();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      node0.isCase();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isQualifiedName();
      node0.isGetElem();
      Node node1 = new Node((-2928));
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      node0.getBooleanProp(314);
      Node node1 = new Node(148, node0, 54, 36);
      node0.isEquivalentToTyped(node1);
      node1.isDebugger();
      Node node2 = Node.newNumber((double) 42, 4095, (-4506));
      node2.toString();
      node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isDefaultCase();
      node0.isRegExp();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = new Node(55);
      node0.siblings();
      Node node1 = new Node(711, node0, node0);
      node0.isCall();
      node1.isLabelName();
      node0.isCast();
      node1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      treeSet0.clear();
      node0.setDirectives(treeSet0);
      node0.isExprResult();
      node0.children();
      Node node1 = new Node(40, node0, 8, 8);
      node1.getBooleanProp(26);
      node1.isDefaultCase();
      Node node2 = Node.newNumber((double) 57, 98, 2);
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags((Node.SideEffectFlags) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, (-17), (-17));
      node0.isThis();
      node0.isNot();
      Node node1 = new Node(1002, node0, node0, node0, node0, 15, 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:O[mO,hW54A+gOI");
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("p:O[mO,hW54z+gOI", true);
      node0.putProp(53, simpleSourceFile0);
      node0.getLength();
      node1.setLength(37);
      node0.toString();
      node0.setSourceEncodedPositionForTree(8);
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      Node node0 = Node.newString(1843, "opt_arg");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node1 = new Node(3617, 2, 42);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "h!/QP\"+KM\"k^/Qy");
      node1.getChangeTime();
      node0.addChildToBack(node1);
      node1.isQuotedString();
      node1.putProp(40, node2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = node0.cloneTree();
      node1.getIntProp(36);
      Node node4 = node3.copyInformationFrom(node0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NAME");
      Node node5 = node3.copyInformationFrom(node2);
      Node node6 = Node.newString((-2047), "reflected_object");
      node5.setCharno(15);
      node6.isTrue();
      node2.isFalse();
      node4.isNE();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      node2.isUnscopedQualifiedName();
      node2.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      Node node0 = new Node(254);
      String string0 = "Xy<";
      Node node1 = Node.newString("K?LI~rUr61.", 2, 43);
      Node node2 = new Node(42);
      Node node3 = new Node(42);
      Node node4 = new Node(0, node1);
      Node.newNumber((-640.3), 54, 4095);
      Node node5 = new Node(38, node4, 4, 15);
      Node node6 = new Node(147, node0, node5, node5, 39, 48);
      // Undeclared exception!
      try { 
        node6.replaceChild(node2, node2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.putProp(37, "Yq(fMXkcut5w1Fb6N");
      node0.getLength();
      node0.isGetElem();
      Node node1 = new Node(1, node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Class<JSType> class0 = JSType.class;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ServiceLoader<JSType> serviceLoader0 = ServiceLoader.load(class0, classLoader0);
      Iterator<JSType> iterator0 = serviceLoader0.iterator();
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf((Iterator<? extends JSType>) iterator0);
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node2.getStaticSourceFile();
      node1.checkTreeTypeAwareEqualsImpl(node0);
      node0.wasEmptyNode();
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      node0.setDirectives(treeSet0);
      node0.isAssignAdd();
      node0.siblings();
      node0.children();
      Node node1 = new Node(119, node0, 8, 8);
      node1.getBooleanProp(26);
      Node node2 = new Node(12, 4095, 54);
      node2.getSideEffectFlags();
      Node node3 = new Node(54, node1, 411, 8);
      Node node4 = node1.useSourceInfoIfMissingFrom(node0);
      node1.getStaticSourceFile();
      node4.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node node0 = Node.newString(44, "+HWXm55utaO", 75, 88);
      node0.getQualifiedName();
      node0.setCharno(75);
      node0.getInputId();
      Node node1 = new Node(42, node0, 54, 52);
      node1.srcrefTree(node0);
      node1.isIf();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      Node node0 = Node.newString(39, "com.google.common.collect.Lists$TransformingSequentialList");
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      int int0 = 108;
      node_FileLevelJsDocBuilder0.append("com.google.common.collect.Lists$TransformingSequentialList");
      node0.setLineno(108);
      Node node1 = new Node(86, node0, 57, 588);
      Node node2 = node0.copyInformationFrom(node1);
      node0.removeProp(108);
      node0.isEquivalentToTyped(node2);
      node_FileLevelJsDocBuilder0.append("8!qEJ c,I4Jpt+/n");
      Node node3 = null;
      try {
        node3 = new Node(12, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, (-17), (-17));
      node0.isNot();
      Node node1 = new Node(49, 3350, (-1558));
      node1.isEquivalentToShallow(node0);
      node0.toString(false, false, false);
      node0.getDouble();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isSwitch();
      // Undeclared exception!
      try { 
        node1.checkTreeEquals((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.putProp(37, "Yq(fMXkcut5w1Fb6N");
      node0.getLength();
      node0.setLength(102);
      node0.toString();
      node0.setSourceEncodedPositionForTree((-1170));
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      node0.getBooleanProp(306);
      Node node1 = new Node(148, node0, 54, 36);
      node0.setSourceEncodedPosition((-2020));
      node0.getChangeTime();
      Node.newString(53, "tD\"V,dub`d0Vl", 119, 1409);
      node1.useSourceInfoFromForTree(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node2 = Node.newString(56, "K?LI~rUr61.", 306, 152);
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 56
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Node.newString("h48:97~<+C6W(]2,mvw");
      node0.isAssignAdd();
      Node node1 = new Node(51);
      node0.isEquivalentTo(node1, true, false, false);
      Node node2 = node1.copyInformationFromForTree(node0);
      node1.getBooleanProp(16);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node2);
      node_NodeMismatch0.equals(node2);
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      Node node0 = Node.newString("Gpn-GcXC");
      node0.isStringKey();
      node0.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      Node node0 = Node.newString(126, "Gpn-GcXC");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.isUnscopedQualifiedName();
      node0.isSetterDef();
      node0.isTypeOf();
      node0.children();
      node0.isSetterDef();
      node0.toString(false, true, false);
      Node node1 = Node.newString("/=Iz5>Z'");
      Node node2 = Node.newNumber(0.0);
      node0.getInputId();
      node2.setInputId((InputId) null);
      node1.getString();
      node1.getChildAtIndex((-355));
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isSyntheticBlock();
      Node node1 = new Node(38, node0, node0, node0, node0, 1, 31);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(1lYU4jQu");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node1.wasEmptyNode();
      node0.useSourceInfoFromForTree(node1);
      // Undeclared exception!
      try { 
        node1.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 1 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      Node node0 = Node.newString("Tl*cV{Q^ImQX[");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(118, node0, node0, node0, 2682, 16);
      node0.cloneNode();
      node1.getLength();
      node1.isQuotedString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-442));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags3.areAllFlagsSet();
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-29);
      byteArray0[1] = (byte) (-29);
      byteArray0[2] = (byte)111;
      byteArray0[3] = (byte) (-77);
      byteArray0[4] = (byte)40;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node(35);
      node0.isQuotedString();
      node0.isWhile();
      node0.isCall();
      Node node1 = new Node(52, node0, 39, 10);
      node0.srcref(node1);
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      node0.setDirectives(treeSet0);
      node0.isAssignAdd();
      node0.siblings();
      node0.children();
      Node node1 = new Node(119, node0, 8, 8);
      node1.getBooleanProp(26);
      Node node2 = new Node(12, 4095, 54);
      node2.toStringTree();
      node2.isSwitch();
      Node node3 = Node.newString(428, "EQ 4095\n");
      node0.copyInformationFrom(node3);
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      treeSet0.clear();
      node0.setDirectives(treeSet0);
      node0.isExprResult();
      node0.children();
      node0.isAssign();
      node0.isGetElem();
      node0.setWasEmptyNode(true);
      Node node1 = new Node(303, node0, node0);
      node0.srcrefTree(node1);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(1, node0, node0);
      Node node2 = Node.newString(112, "p:O[mO,hW54z+gOI", 49, 36);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.getAncestors();
      node1.isVarArgs();
      node2.isCall();
      node0.isSyntheticBlock();
      Node node3 = Node.newString("4D");
      node1.isOnlyModifiesThisCall();
      // Undeclared exception!
      try { 
        node3.addChildToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.checkTreeEqualsImpl(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.setChangeTime((-3014));
      node0.isSetterDef();
      node0.setType(105);
      node0.isAssign();
      node0.isGetElem();
      node0.setWasEmptyNode(true);
      Node node2 = new Node((-1127), node0, node0);
      node0.isVarArgs();
      node0.isLabelName();
      node0.isCast();
      Node node3 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);
      node2.useSourceInfoFromForTree(node3);
      node2.isVoid();
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      Node node0 = new Node((-531), (-531), (-531));
      node0.getJSDocInfo();
      Node node1 = new Node((-531), node0, node0, node0, node0, 49, (-1013));
      node1.isTrue();
      Node node2 = new Node(47);
      node1.replaceChild(node0, node2);
      node2.isDelProp();
      node0.isString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1435));
      node0.isQualifiedName();
      node1.isGetElem();
      Node node3 = new Node(49, node0, node0);
      node3.useSourceInfoIfMissingFrom(node0);
      node3.getStaticSourceFile();
      node3.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(126, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      treeSet0.clear();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-44);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.setDirectives(treeSet0);
      node0.isExprResult();
      node0.children();
      Node node1 = new Node(119, node0, 8, 8);
      node1.cloneTree();
      node1.getBooleanProp(26);
      node0.isContinue();
      // Undeclared exception!
      try { 
        node1.addChildToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isAnd();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("Yq(fMXkcut5w1Fb6N", "Yq(fMXkcut5w1Fb6N", 37, 102);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = new Node(0, node0, node0, node0);
      Node node2 = new Node(54, node1);
      // Undeclared exception!
      try { 
        node2.getString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 54
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      Node node0 = Node.newString(4190208, "QWeJvk'");
      node0.setSourceEncodedPositionForTree(4190208);
      Node node1 = new Node((-14), node0, 2010, 30);
      node1.useSourceInfoIfMissingFrom(node0);
      // Undeclared exception!
      try { 
        node1.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -14
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "gg7tp6Y18]\"z!{DZ");
      Node node0 = new Node(32);
      node0.getDirectives();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.getBooleanProp(32);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.toStringTree();
      node0.isDelProp();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(54);
      Node node1 = Node.newNumber((double) 29, 13, 51);
      node0.siblings();
      Node node2 = new Node(32, node0, node0);
      Node node3 = new Node(40);
      node3.isVarArgs();
      node1.isLabelName();
      node1.isCast();
      Node node4 = Node.newString(1375, "TYPEOF\n");
      node4.getFirstChild();
      node0.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      Node node0 = Node.newString("}");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = new Node(125, node0);
      node1.isDebugger();
      Node node2 = node1.srcrefTree(node0);
      node2.getQualifiedName();
      node2.isVoid();
      node2.getAncestor(57);
      String string0 = null;
      Node node3 = null;
      Node node4 = Node.newString("}", 45, (-5618));
      // Undeclared exception!
      try { 
        node4.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      Node node0 = Node.newString(388, "VJPe670");
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.copyInformationFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 4194304);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.setChangeTime(55);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("EF\"uu9#+A_@3^&8S\"g", "EF\"uu9#+A_@3^&8S\"g", 31, 2941);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.wasEmptyNode();
      node0.isQualifiedName();
      node0.isGetElem();
      Node node1 = new Node(108, node0, node0);
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node2.getChangeTime();
      node1.getStaticSourceFile();
      node2.checkTreeTypeAwareEqualsImpl(node1);
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      Node node0 = new Node(4);
      node0.isWith();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(62, node0, node0);
      node0.isReturn();
      node1.isNot();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      node1.mayMutateArguments();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      node1.getJSDocInfo();
      Node node2 = Node.newString(1, "2%qAWWo");
      node0.isHook();
      node2.isWhile();
      node1.isFromExterns();
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      Node node0 = new Node((-531), (-531), (-531));
      node0.getJSDocInfo();
      Node node1 = new Node((-531), node0, node0, node0, node0, 49, (-1013));
      node1.isTrue();
      node1.hasOneChild();
      Node node2 = new Node(47);
      node1.replaceChild(node0, node2);
      node2.isDelProp();
      Node node3 = node2.copyInformationFrom(node0);
      node3.setChangeTime(38);
      node0.isString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1435));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node2.isThrow();
      node1.getBooleanProp(39);
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isSyntheticBlock();
      Node node1 = new Node(38, node0, node0, node0, node0, 1, 31);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(1lYU4jQu");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node1.wasEmptyNode();
      // Undeclared exception!
      try { 
        node1.isQualifiedName();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NAME 1 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("'dUdJ7hz", "'dUdJ7hz", 37, 102);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node0.wasEmptyNode();
      node0.isQualifiedName();
      node0.isGetElem();
      Node node1 = new Node(57, node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      node1.getStaticSourceFile();
      node1.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      Node node0 = new Node(4194304, 4194304, 4194304);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.setChangeTime((-3014));
      Node node1 = new Node(39, node0, (-2539), 4095);
      node1.getQualifiedName();
      node0.setCharno((-2527));
      node1.getDirectives();
      node1.useSourceInfoIfMissingFrom(node0);
      node1.isSyntheticBlock();
      node0.getInputId();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node1.getAncestors();
      node0.isCast();
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      Node node0 = new Node(4194304, 4194304, 4194304);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.setChangeTime((-3014));
      Node node1 = new Node(39, node0, (-2539), 4095);
      node1.getQualifiedName();
      node0.setCharno((-2527));
      node1.getDirectives();
      node1.isSyntheticBlock();
      node0.getInputId();
      node1.getAncestors();
      node1.isObjectLit();
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      Node node0 = new Node(4);
      node0.setType(102);
      node0.isWith();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.isSetterDef();
      Node node1 = Node.newString(124, "L|%''$+");
      node1.setType(53);
      node1.isAssign();
      node1.isGetElem();
      node0.setWasEmptyNode(false);
      Node node2 = new Node(124, node0, node0);
      node2.srcrefTree(node0);
      node1.isVarArgs();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node2.isAssign();
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      treeSet0.clear();
      node0.setDirectives(treeSet0);
      node0.isExprResult();
      node0.children();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "QWeJvk'");
      Node node1 = Node.newString(30, "QWeJvk'", 4, 40);
      Node node2 = Node.newString(77, "SC6F?8*", 48, 55);
      node2.setString("QWeJvk'");
      node0.useSourceInfoIfMissingFromForTree(node1);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      node0.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      Node node0 = Node.newNumber((-967.6170355));
      node0.getDirectives();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = Node.newString("com.google.common.base.Joiner$1", 38, 8);
      node1.isThis();
      node0.getDouble();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, (-17), (-17));
      node0.isNot();
      Node node1 = new Node(49, 3350, (-1558));
      Node node2 = Node.newString(126, "<{>?^Xg_lN*%MCKW", 148, (-1671));
      node1.toString();
      node2.isInstanceOf();
      Node node3 = Node.newNumber((double) 57);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node3);
      node3.isDefaultCase();
      node2.getIndexOfChild(node4);
      Node node5 = Node.newString(21, "TypeError", 40, 119);
      node5.hasChild(node3);
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      Node node0 = new Node(4);
      node0.setType(102);
      node0.isWith();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(62, node0, node0);
      node0.isReturn();
      node1.isNot();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setAllFlags();
      node0.isContinue();
      node1.removeFirstChild();
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isWith();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(62, node0, node0);
      Node node2 = Node.newString(112, "com.google.javascript.rhino.jstype.NumberType", 49, 36);
      node2.isOnlyModifiesArgumentsCall();
      node0.isReturn();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node3 = Node.newNumber((double) 30);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node1);
      Node node5 = Node.newNumber(1.2, 40, 39);
      node5.isDefaultCase();
      node4.isDo();
      node1.getIndexOfChild(node5);
      node1.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      treeSet0.clear();
      node0.setDirectives(treeSet0);
      node0.isExprResult();
      node0.children();
      Node node1 = new Node((-3595), node0, node0, node0, 31, 52);
      Node node2 = node1.srcrefTree(node0);
      node2.copyInformationFrom(node1);
      Node node3 = Node.newString((-1424), "SC6F?8*");
      node2.setCharno(125);
      Node node4 = Node.newNumber((double) 4, (-2684), (-176));
      node4.isTrue();
      node1.isFalse();
      Node node5 = Node.newString("SC6F?8*");
      Node.newNumber((double) 32, (-1944), 2);
      node5.isNE();
      node4.setWasEmptyNode(false);
      node3.getAncestors();
      node3.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      Node node0 = Node.newString("}");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      node_SideEffectFlags0.setMutatesArguments();
      node0.getBooleanProp(1578);
      Node node1 = new Node(1641, node0, 40, (-2287));
      node1.isEquivalentToTyped(node0);
      node1.isDebugger();
      Node node2 = Node.newString((-3277), "no next sibling.", (-2684), 41);
      Node node3 = Node.newNumber(0.7, (-1), 23);
      node0.toString();
      node2.useSourceInfoIfMissingFromForTree(node0);
      node3.isDefaultCase();
      node1.isRegExp();
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = new Node(105, node0);
      node1.isEquivalentToTyped(node0);
      node0.isDebugger();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = Node.newString(4095, "K?LI~rUr61.");
      node3.setCharno(310);
      node1.isTrue();
      node0.isFalse();
      node0.getProp(40);
      node1.isNE();
      Node node4 = new Node(55, node2, node1, node3);
      node4.isGetElem();
      node4.setWasEmptyNode(true);
      node3.getAncestors();
      node0.isVarArgs();
      node1.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      Node node0 = new Node((-531), (-531), (-531));
      int int0 = (-1013);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo0);
      node0.getJSDocInfo();
      Node node1 = new Node((-531), node0, node0, node0, node0, 49, (-1013));
      node1.isTrue();
      node1.hasOneChild();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("no next sibling.", " is not a string node", 52, 8192);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node1.isOnlyModifiesArgumentsCall();
      node0.addChildToBack(node1);
      // Undeclared exception!
      try { 
        node1.setDouble(49);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -531
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      node0.setDirectives(treeSet0);
      node0.isAssignAdd();
      node0.siblings();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node1 = new Node(119, node0, 8, 8);
      node0.isOnlyModifiesArgumentsCall();
      Node node2 = Node.newString("SC6F?8*", (-4109), 46);
      node2.isScript();
      node1.removeFirstChild();
      node2.isOptionalArg();
      Node.extractLineno((-1594));
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(609);
      node0.isWith();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(62, node0, node0);
      Node node2 = Node.newString(112, "com.google.javascript.rhino.jstype.NumberType", 49, 36);
      node2.isOnlyModifiesArgumentsCall();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.javascript.rhino.jstype.NumberType");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node node3 = Node.newNumber(558.0445537);
      Node node4 = node3.copyInformationFrom(node2);
      Node.newString((-408), "]]");
      node4.setCharno(124);
      node0.isTrue();
      node2.isFalse();
      node4.isNE();
      Node node5 = Node.newString(4093, "com.google.javascript.rhino.jstype.NumberType", 122, (-3318));
      node5.setWasEmptyNode(true);
      node4.getAncestors();
      node3.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Cycle detected in inheritance chain of type ");
      Node node0 = Node.newString((-1735), "A}73_&", (-1620), 262144);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.children();
      Node node1 = node0.cloneNode();
      node0.getAncestor(46);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("p:O[mO,hW54A+gOI");
      node0.isComma();
      // Undeclared exception!
      try { 
        node0.addChildAfter((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isSyntheticBlock();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.removeProp(13);
      simpleErrorReporter0.warning("'dUdJ7hz", "'dUdJ7hz", 37, 102);
      node0.isOnlyModifiesArgumentsCall();
      node0.wasEmptyNode();
      Node node1 = new Node(102);
      node1.isSyntheticBlock();
      Node node2 = new Node(43);
      node2.getInputId();
      node1.getAncestors();
      node0.isIf();
      node2.isCast();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      Node node0 = new Node(13);
      node0.hasMoreThanOneChild();
      node0.setType(102);
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newString(56, "i]<rn3u7Mj$iki{^$ul", 49, (-3690));
      int int0 = Node.EMPTY_BLOCK;
      node0.getAncestors();
      node0.isOnlyModifiesArgumentsCall();
      node1.getJsDocBuilderForNode();
      node1.isBlock();
      Node node2 = new Node(2, 1, 40);
      Node node3 = new Node(52);
      Node node4 = new Node(0, node3, node3, node2, node2, 1, 0);
      Node node5 = node4.getLastChild();
      node5.children();
      node1.isBreak();
      node3.isLabel();
      node2.isOnlyModifiesArgumentsCall();
      node1.setString("i]<rn3u7Mj$iki{^$ul");
      node2.isDefaultCase();
      node1.isUnscopedQualifiedName();
      node2.isGetProp();
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.setChangeTime((-3014));
      node0.isSetterDef();
      node0.setType(125);
      Node node1 = new Node(51);
      node1.getInputId();
      node1.type = 31;
      Node node2 = new Node(40, node1, node1);
      Node node3 = new Node((-2245), node0);
      node1.isIf();
      Node node4 = new Node(1, 1, 1891);
      node2.copyInformationFromForTree(node0);
      node3.isNew();
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = new Node(154, 1, 1);
      Node node1 = Node.newString("KN]K]DgQ>VXb:iR", (-105), 16);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = new Node(1, node0, node0, node0, 2720, (-105));
      Node node4 = node3.srcrefTree(node0);
      node0.copyInformationFrom(node4);
      Node.newString(0, "");
      node4.setCharno(1732);
      node3.type = 42;
      node4.isTrue();
      node4.isFalse();
      node3.getProp(3794);
      node1.isNE();
      node0.setWasEmptyNode(false);
      node2.getAncestors();
      node4.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(30);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("'dUdJ7hz", "'dUdJ7hz", 37, 102);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      node0.getBooleanProp(26);
      ImmutableList.of();
      Node node1 = Node.newString("N<4&e/6;w:");
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.mayMutateArguments();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node2.new FileLevelJsDocBuilder();
      node2.isLabel();
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      Node node0 = Node.newNumber((-967.6170355));
      node0.getDirectives();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = Node.newString("com.google.common.base.Joiner$1", (-528), 538);
      Node node2 = Node.newNumber((double) 57, 154, 57);
      Node node3 = Node.newString(1, "'", 39, 172083);
      Node node4 = new Node(57, node2, node3);
      node4.useSourceInfoIfMissingFromForTree(node0);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      Node node5 = new Node(4, node4, node1);
      node5.mayMutateArguments();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Node node0 = Node.newNumber((-967.6170355));
      node0.isGetProp();
      node0.setVarArgs(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType objectType0 = jSTypeRegistry0.createObjectType((ObjectType) null);
      JSType[] jSTypeArray0 = new JSType[5];
      jSTypeArray0[1] = (JSType) objectType0;
      objectType0.testForEquality(jSTypeArray0[1]);
      jSTypeArray0[2] = (JSType) objectType0;
      jSTypeRegistry0.createParameters(jSTypeArray0);
      node0.isVarArgs();
      node0.isNull();
      node0.siblings();
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      node0.setDirectives(treeSet0);
      node0.isTrue();
      Node node1 = node0.cloneTree();
      node0.putIntProp(50, 47);
      // Undeclared exception!
      try { 
        node1.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      Node node0 = Node.newString("K?LI~rUr61.");
      node0.getBooleanProp(306);
      Node node1 = new Node(148, node0, 54, 36);
      node0.isEquivalentToTyped(node1);
      node1.isDebugger();
      Node node2 = Node.newString(41, "K?LI~rUr61.", 172083, 54);
      Node node3 = Node.newNumber((double) 42, 4095, (-4506));
      node3.toString();
      node2.isInstanceOf();
      Node node4 = Node.newNumber((double) 48);
      Node node5 = node2.useSourceInfoIfMissingFromForTree(node4);
      node3.isDefaultCase();
      node5.isDo();
      node1.getIndexOfChild(node2);
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      Node node0 = new Node(125);
      node0.toString();
      node0.isAdd();
      Node node1 = new Node((-3435), 30, 30);
      Node node2 = node0.srcref(node1);
      node1.getQualifiedName();
      node1.addChildrenToFront(node0);
      node1.isAnd();
      node0.isTry();
      node2.isAssignAdd();
      node1.getChangeTime();
      node2.getJSDocInfo();
      node1.mayMutateArguments();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node3 = null;
      try {
        node3 = new Node(16, nodeArray0, 4095, 47);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "direct_eval");
      Node node1 = new Node(147, 3350, 1);
      node0.isEquivalentTo(node1, false, false, false);
      node0.getDouble();
      node1.getParent();
      node0.toStringTree();
      node1.getSourceOffset();
      // Undeclared exception!
      try { 
        node1.getExistingIntProp(105);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: 105
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      Node node0 = Node.newString("}");
      node0.getBooleanProp(901);
      node0.putBooleanProp(3458, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newString("}", 48, 29);
      int int0 = Node.IS_DISPATCHER;
      node0.wasEmptyNode();
      node1.getAncestors();
      Node node2 = new Node(119, node1, node0);
      node1.isEquivalentTo(node0);
      node2.hasMoreThanOneChild();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(505);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      Node node0 = new Node(13);
      Node node1 = Node.newNumber(1501.0, 39, 56);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      node1.isThis();
      node1.isNot();
      Node node2 = new Node(46, node1, node1, node0, node0, (-66), 11);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.getSourcePosition();
      node1.wasEmptyNode();
      Node node3 = Node.newString(41, "}^;r}g-,b", 4194304, 48);
      node3.getAncestors();
      node0.isComma();
      node1.isFunction();
      node3.isNull();
      try { 
        node0.setString("}^;r}g-,b");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NE is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      Node node0 = Node.newString(":_[ZhY=", 83, 63);
      Node node1 = new Node((-948), node0, node0);
      node1.isLocalResultCall();
      node1.isOnlyModifiesArgumentsCall();
      node0.isDec();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = null;
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isEquivalentToShallow(node1);
      node1.getLastSibling();
      // Undeclared exception!
      try { 
        node2.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString("com.google.javascript.rhino.jstype.NumberType");
      node0.isEquivalentTo(node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[5];
      jSTypeNativeArray0[1] = jSTypeNativeArray0[0];
      Node node2 = new Node(2, node0, 29, 53);
      node1.getBooleanProp(30);
      node0.srcrefTree(node1);
      JSTypeNative jSTypeNative0 = JSTypeNative.ARRAY_FUNCTION_TYPE;
      node0.putProp(31, jSTypeNative0);
      node0.getLength();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 31
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      Node node0 = new Node(32);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
      node0.getJsDocBuilderForNode();
      node0.isRegExp();
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      Node node0 = Node.newString(1469, "p:O[mO,hW54z+gOI", (-3000), 64);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(35, node0, node0, node0, node0);
      Node.NodeMismatch node_NodeMismatch0 = node0.checkTreeTypeAwareEqualsImpl(node1);
      node_NodeMismatch0.equals("p:O[mO,hW54z+gOI");
      Node node2 = Node.newString("p:O[mO,hW54z+gOI", 43, 4095);
      node2.wasEmptyNode();
      node0.getAncestors();
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(1, node0, node0);
      Node node2 = Node.newString(112, "com.google.javascript.rhino.jstype.NumberType", 49, 36);
      node2.isOnlyModifiesArgumentsCall();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      node0.getAncestors();
      node1.isVarArgs();
      node2.isCall();
      Node node3 = Node.newString("4D");
      node3.isBreak();
      node2.isOr();
      node3.isAssignAdd();
      node2.siblings();
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      Node node0 = new Node(32);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.getBooleanProp(32);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.toStringTree();
      node0.isDelProp();
      node0.isString();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[0];
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      node0.isBlock();
      node0.isDefaultCase();
      Node node1 = node0.cloneNode();
      JSType[] jSTypeArray0 = new JSType[8];
      jSTypeArray0[0] = jSType0;
      jSTypeArray0[1] = jSType0;
      jSTypeArray0[2] = jSType0;
      jSTypeArray0[3] = jSType0;
      jSTypeArray0[4] = jSType0;
      jSTypeArray0[5] = jSType0;
      jSTypeArray0[6] = jSType0;
      jSTypeArray0[7] = jSType0;
      Node node2 = jSTypeRegistry0.createParameters(jSTypeArray0);
      Node node3 = new Node(29, node1, node2, node1, (-554), 31);
      node0.isEmpty();
      node2.isAnd();
      node2.isFor();
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      Node node0 = Node.newString(":_[ZhY=", 83, 63);
      Node node1 = new Node((-948), node0, node0);
      node1.isLocalResultCall();
      node1.isOnlyModifiesArgumentsCall();
      node0.isDec();
      String string0 = null;
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      node2.isEquivalentToShallow(node1);
      // Undeclared exception!
      try { 
        node2.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch");
      node0.isTrue();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)61;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = new Node(102, node1, 119, 1002);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      node2.useSourceInfoIfMissingFromForTree(node0);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("4Q&]x2x?):eV)OHU", "4Q&]x2x?):eV)OHU");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 4Q&]x2x?):eV)OHU
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      Node.newNumber((double) 4194304, 4194304, 116);
      Node node0 = Node.newString(126, "Gpn-GcXC");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.isUnscopedQualifiedName();
      node0.isSetterDef();
      node0.setType(105);
      Node node1 = Node.newNumber((-1.0), 29, 49);
      Node node2 = new Node(16, (-5368), 31);
      node2.getJSDocInfo();
      Node node3 = Node.newString(1935, "): ");
      node0.isHook();
      node1.toStringTree();
      node0.isWhile();
      node0.toString();
      node1.isIn();
      node3.getLastSibling();
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      Node.newNumber((double) 4194304, 4194304, 116);
      Node node0 = Node.newString(126, "Gpn-GcXC");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.isSetterDef();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.common.base.CharMatcher$RangesMatcher");
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      Node node1 = null;
      try {
        node1 = new Node(1657, (Node) null, node0, 32, 4194304);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, (-17), (-17));
      node0.isNot();
      Node node1 = new Node(49, 3350, (-1558));
      node1.isEquivalentToShallow(node0);
      node0.getDouble();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isSwitch();
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      Node node0 = new Node(13);
      node0.hasMoreThanOneChild();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newString(56, "i]<rn3u7Mj$iki{^$ul", 49, (-3690));
      int int0 = Node.EMPTY_BLOCK;
      node0.getAncestors();
      node0.isOnlyModifiesArgumentsCall();
      node1.getJsDocBuilderForNode();
      node1.isBlock();
      Node node2 = new Node(2, 1, 40);
      Node node3 = new Node(52);
      Node node4 = new Node(0, node3, node3, node2, node2, 1, 0);
      Node node5 = node4.getLastChild();
      node5.children();
      node1.isBreak();
      node3.isLabel();
      node2.isOnlyModifiesArgumentsCall();
      node1.setString("i]<rn3u7Mj$iki{^$ul");
      node2.isDefaultCase();
      node1.isUnscopedQualifiedName();
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch");
      node0.isTrue();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte)61;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node2 = new Node(102, node1, 119, 1002);
      node0.checkTreeTypeAwareEqualsImpl(node2);
      MockPrintStream mockPrintStream0 = new MockPrintStream("4Q&]N42x?):e#V)OHU");
      node0.appendStringTree(mockPrintStream0);
      node2.isThis();
      node2.getAncestor(32);
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      Node node0 = Node.newString("}");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1944);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node node1 = Node.newString(29, "}", 51, 53);
      Node node2 = Node.newString("g", 49, 57);
      Node node3 = node1.useSourceInfoFrom(node0);
      Node node4 = new Node((-913), node2, node0, node1, 0, 12);
      Node node5 = node4.srcrefTree(node0);
      Node node6 = Node.newString(38, "g");
      node0.setCharno(51);
      node0.isTrue();
      node6.isFalse();
      node0.getProp(57);
      node3.isNE();
      node4.isGetElem();
      node5.setWasEmptyNode(false);
      node3.getAncestors();
      node5.isVarArgs();
      Node node7 = Node.newNumber((double) 1);
      node3.checkTreeTypeAwareEqualsImpl(node7);
  }

  @Test(timeout = 4000)
  public void test378()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.isSetterDef();
      node0.isThrow();
      node0.isWith();
      node0.children();
      node0.siblings();
      int int0 = Node.IS_NAMESPACE;
      node0.getChildCount();
      stack0.clear();
      node0.isBlock();
      node0.isDebugger();
      jSTypeRegistry0.incrementGeneration();
      Node node1 = Node.newString("com.google.javascript.rhino.Node$NodeMismatch");
      node0.isUnscopedQualifiedName();
      node0.checkTreeEqualsImpl(node1);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node1);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node2.isComma();
      node0.isObjectLit();
      // Undeclared exception!
      try { 
        node0.replaceChild(node1, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test379()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, (-17), (-17));
      node0.isThis();
      node0.isNot();
      Node node1 = new Node(1002, node0, node0, node0, node0, 111, 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:O[mO,hW54A+gOI");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      node1.wasEmptyNode();
      node1.isQualifiedName();
      node0.isGetElem();
      Node node2 = node0.useSourceInfoIfMissingFrom(node1);
      node1.getStaticSourceFile();
      node0.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test380()  throws Throwable  {
      Node node0 = Node.newString("QWeJvk'");
      node0.children();
      node0.isContinue();
      node0.isFor();
      node0.toStringTree();
      node0.isDelProp();
      node0.isExprResult();
      node0.isTrue();
      node0.isFalse();
      node0.getProp(3794);
      node0.isAssign();
      node0.isNE();
      node0.isGetElem();
      node0.setWasEmptyNode(false);
      node0.setLineno((-4002));
      node0.getAncestors();
      node0.isBreak();
      node0.isLabel();
      // Undeclared exception!
      try { 
        node0.setString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test381()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.setChangeTime(783);
      node0.isSetterDef();
      node0.setType(102);
      node0.getDirectives();
      node0.isSyntheticBlock();
      node0.setCharno(783);
      node0.getInputId();
      Node[] nodeArray0 = new Node[1];
      Node node1 = Node.newNumber((-3357.7413404708823));
      nodeArray0[0] = node1;
      Node node2 = new Node(125, nodeArray0);
      node2.getAncestors();
      node2.useSourceInfoFrom(node0);
      Node node3 = null;
      try {
        node3 = new Node(43, node2, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test382()  throws Throwable  {
      Node node0 = Node.newNumber((-967.6170355));
      node0.getDirectives();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "com.google.common.base.Joiner$1";
      Node node1 = Node.newString("com.google.common.base.Joiner$1", (-528), 538);
      Node node2 = Node.newNumber((double) 57, 154, 57);
      Node node3 = new Node(51, 36, 103);
      node2.putIntProp(64, 338);
      node0.getAncestors();
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node3.isIn();
      // Undeclared exception!
      try { 
        node2.addChildBefore(node0, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test383()  throws Throwable  {
      Node node0 = new Node(125);
      node0.toString();
      node0.isAdd();
      Node node1 = node0.srcref(node0);
      node0.getQualifiedName();
      node0.addChildrenToFront(node0);
      node0.isAnd();
      node1.putIntProp(37, (-1012));
      Node.newString("R%'4\"vL}6>#8l!NT", (-286), 33);
      node0.isTry();
      node1.isAssignAdd();
      node0.getChangeTime();
      node1.getJSDocInfo();
      node0.mayMutateArguments();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node2 = null;
      try {
        node2 = new Node(16, nodeArray0, 4095, 47);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test384()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, (-17), (-17));
      node0.isGetterDef();
      node0.isNot();
      Node node1 = new Node(49, 3350, (-1558));
      node0.isEquivalentTo(node1, false, false, false);
      Node node2 = new Node((-4084), node1, node1);
      // Undeclared exception!
      try { 
        node2.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -4084
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test385()  throws Throwable  {
      Node node0 = Node.newString("}");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(56);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      Node node1 = new Node(125, node0);
      node0.isEquivalentToTyped(node1);
      node1.isDebugger();
      Node node2 = node1.srcrefTree(node0);
      Node node3 = Node.newString(48, "");
      node1.setCharno(8);
      node2.isTrue();
      node3.isFalse();
      node3.getProp(124);
      node1.isNE();
      node3.isGetElem();
      node2.setWasEmptyNode(false);
      node1.getAncestors();
      node0.isVarArgs();
      node1.checkTreeTypeAwareEqualsImpl(node2);
  }

  @Test(timeout = 4000)
  public void test386()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      node0.setDirectives(treeSet0);
      node0.isAssignAdd();
      node0.siblings();
      node0.children();
      JSTypeNative jSTypeNative0 = JSTypeNative.ALL_TYPE;
      JSTypeNative jSTypeNative1 = JSTypeNative.NULL_TYPE;
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[7];
      jSTypeNativeArray0[0] = jSTypeNative1;
      jSTypeNativeArray0[1] = jSTypeNative0;
      jSTypeNativeArray0[2] = jSTypeNative0;
      jSTypeNativeArray0[3] = jSTypeNative0;
      jSTypeNativeArray0[4] = jSTypeNative1;
      jSTypeNativeArray0[5] = jSTypeNative0;
      jSTypeNativeArray0[6] = jSTypeNative0;
      jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      node0.setSourceEncodedPositionForTree(0);
      node0.isBlock();
      node0.isDefaultCase();
      Node node1 = node0.cloneNode();
      Node node2 = new Node(1258, node1, node0, node0, (-6), 0);
      node2.isEmpty();
      node2.isAnd();
      node2.isFor();
      node2.getType();
      node1.useSourceInfoIfMissingFrom(node2);
  }

  @Test(timeout = 4000)
  public void test387()  throws Throwable  {
      Node.newNumber((double) 4194304, 4194304, 116);
      Node node0 = Node.newString(126, "Gpn-GcXC");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4k6Yt0QWmS.<T,$*7");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.isUnscopedQualifiedName();
      node0.isSetterDef();
      node0.setType(105);
      Node node1 = Node.newNumber((-1.0), 29, 49);
      Node node2 = new Node(16, (-5368), 31);
      node2.getJSDocInfo();
      Node node3 = Node.newString(1935, "): ");
      node0.isHook();
      node1.toStringTree();
      node2.isWhile();
      node3.isCase();
  }

  @Test(timeout = 4000)
  public void test388()  throws Throwable  {
      Node node0 = Node.newString(">YSQW`~MuhJ\"a*G");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2919);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.areAllFlagsSet();
      Node node1 = Node.newString("no next sibling.", 42, 51);
      node0.getSourceOffset();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative jSTypeNative0 = JSTypeNative.CHECKED_UNKNOWN_TYPE;
      JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
      node1.setJSType(jSType0);
      Node node2 = Node.newString("mp*X-3.,<99&pUa$", 1073741823, (-3302));
      node1.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test389()  throws Throwable  {
      Node.newNumber((double) 4194304, 4194304, 116);
      Node node0 = Node.newString(126, "Gpn-GcXC");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      node0.isUnscopedQualifiedName();
      node0.isSetterDef();
      node0.setType(105);
      Node node1 = Node.newNumber((-1.0), 29, 49);
      Node node2 = new Node(16, (-5368), 31);
      node2.addSuppression("d:kK*Aav$,:Q;`>xs2!");
      node2.getJSDocInfo();
      Node.newString(1935, "): ");
      node0.isHook();
      node1.toStringTree();
      node0.isWhile();
      node0.toString();
      node1.isIn();
  }

  @Test(timeout = 4000)
  public void test390()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString(1, "KN]K]DgQ>VXb:iR", 154, 1);
      Node node1 = Node.newNumber((-16.791919641270688), (-484), (-3014));
      Node node2 = new Node(30, 147, 57);
      node2.putIntProp(130, 4900);
      node2.setSideEffectFlags(102);
      node1.getSourceOffset();
      Node.newString("end-line: ", 38, 132);
      // Undeclared exception!
      try { 
        node0.checkTreeEquals(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test391()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, (-17), (-17));
      node0.isGetterDef();
      node0.isNot();
      Node node1 = new Node(49, 3350, (-1558));
      node1.isEquivalentTo(node0, false, true, false);
      node0.getDouble();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
  }

  @Test(timeout = 4000)
  public void test392()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(118, node0, node0, node0);
      node1.isDefaultCase();
      Node node2 = new Node((-3423), node1, node1, node1, 4095, (-3301));
      node1.isFunction();
      node1.isNull();
      node1.isScript();
      node1.useSourceInfoIfMissingFromForTree(node0);
  }

  @Test(timeout = 4000)
  public void test393()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(118, node0, node0, node0);
      node1.removeChildren();
      node1.addSuppression("S");
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test394()  throws Throwable  {
      Node node0 = Node.newString("com.google.common.base.CharMatcher$NegatedFastMatcher");
      node0.isSyntheticBlock();
      Node node1 = new Node(55, node0, node0, node0, node0, (-25), 30);
      Node node2 = node1.srcref(node0);
      node1.getQualifiedName();
      node1.addChildrenToFront(node2);
      node0.isAnd();
      Node node3 = Node.newNumber((-562.4809716899854));
      node3.isTry();
      node1.isAssignAdd();
      node3.getChangeTime();
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      node3.mayMutateArguments();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node4 = null;
      try {
        node4 = new Node(3853, (Node[]) null, 42, 54);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test395()  throws Throwable  {
      Node node0 = new Node(125);
      node0.toString();
      Node node1 = new Node(30);
      Node node2 = new Node(43, node1, node1, node0);
      node2.useSourceInfoIfMissingFrom(node0);
      node1.isThis();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node3.isNot();
      Node node4 = null;
      try {
        node4 = new Node(2, node0, node0, node1, node1, 48, 39);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test396()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      Node node1 = Node.newString(126, "Gpn-GcXC");
      node1.isUnscopedQualifiedName();
      node1.isSetterDef();
      node1.setType(105);
      Node node2 = Node.newNumber((-1.0), 29, 49);
      Node node3 = new Node(16, (-5368), 31);
      node1.getInputId();
      node3.setInputId((InputId) null);
      node3.getJSDocInfo();
      Node node4 = Node.newString(1935, "): ");
      node1.isHook();
      node2.toStringTree();
      node2.isDo();
      node1.toString();
      node2.isThrow();
      node0.isNull();
      node1.isExprResult();
      Node.extractCharno(12);
      node4.isBlock();
  }

  @Test(timeout = 4000)
  public void test397()  throws Throwable  {
      Node node0 = Node.newNumber((-967.6170355));
      node0.isGetProp();
      node0.setVarArgs(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.toStringTree();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ObjectType objectType0 = jSTypeRegistry0.createObjectType((ObjectType) null);
      JSType[] jSTypeArray0 = new JSType[5];
      jSTypeArray0[1] = (JSType) objectType0;
      objectType0.testForEquality(jSTypeArray0[1]);
      jSTypeArray0[2] = (JSType) objectType0;
      Node node1 = jSTypeRegistry0.createParameters(jSTypeArray0);
      node1.isIn();
      node1.isParamList();
  }

  @Test(timeout = 4000)
  public void test398()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setThrows();
      Node node0 = Node.newString(1, "KN]K]DgQ>VXb:iR", 154, 1);
      Node node1 = Node.newString("KN]K]DgQ>VXb:iR", (-105), 16);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = new Node(1, node0, node0, node0, 2720, (-105));
      Node node4 = node3.srcrefTree(node0);
      node4.isEquivalentTo(node2);
      Node node5 = Node.newString(0, "");
      node4.setCharno(1732);
      node3.getJSDocInfo();
      Node node6 = Node.newString(1795, "F{");
      node5.isHook();
      node1.toStringTree();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      node6.isDo();
      // Undeclared exception!
      try { 
        node2.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test399()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, (-17), (-17));
      node0.isThis();
      node0.isNot();
      Node node1 = new Node(1002, node0, node0, node0, node0, 111, 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:O[mO,hW54A+gOI");
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node1.getSourcePosition();
      node1.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
      node0.isIn();
      node1.isLabelName();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test400()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.setChangeTime((-3014));
      Node node1 = Node.newString("Q1)1xQYzF}sWg", 93, 1);
      node0.addChildrenToBack(node1);
      node1.setWasEmptyNode(true);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING Q1)1xQYzF}sWg 93 [empty_block: com.google.javascript.rhino.Node$IntPropListItem@0000000005] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test401()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)126;
      byteArray0[3] = (byte)126;
      byteArray0[1] = (byte) (-24);
      Node node0 = Node.newString((int) (byte) (-24), "mp*X-3.,<99&pUa$", 3764, 2);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
      node1.isEquivalentTo(node0);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeNative jSTypeNative0 = JSTypeNative.ALL_TYPE;
      JSTypeNative jSTypeNative1 = JSTypeNative.NULL_TYPE;
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[4];
      jSTypeNativeArray0[0] = jSTypeNative0;
      jSTypeNativeArray0[1] = jSTypeNative0;
      JSTypeNative jSTypeNative2 = JSTypeNative.GLOBAL_THIS;
      jSTypeNativeArray0[2] = jSTypeNative2;
      jSTypeNativeArray0[3] = jSTypeNative1;
      node0.getJSType();
      node1.setSourceEncodedPositionForTree(102);
      node1.isBlock();
      node1.isDefaultCase();
      node1.cloneNode();
      Node node2 = new Node(51, node1, node0, node0, 43, 52);
      node1.isEmpty();
      node0.isAnd();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test402()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.isGetterDef();
  }

  @Test(timeout = 4000)
  public void test403()  throws Throwable  {
      Node node0 = new Node(43);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node0.getBooleanProp(43);
      node0.isContinue();
      node0.isFor();
      node0.toStringTree();
      node0.isOptionalArg();
      node0.isVarArgs();
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.setMutatesThis();
      int int0 = Node.SLASH_V;
      node0.wasEmptyNode();
      node0.isQualifiedName();
      node0.isGetElem();
      Node node1 = new Node(43, node0, node0, node0);
      node0.useSourceInfoIfMissingFrom(node1);
      node0.getStaticSourceFile();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test404()  throws Throwable  {
      Node node0 = Node.newString(">YSQW`~MuhJ\"a*G");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(2919);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.clearAllFlags();
      node_SideEffectFlags5.areAllFlagsSet();
      Node node1 = Node.newString("no next sibling.", 42, 122);
      node0.getInputId();
      node1.setInputId((InputId) null);
      node0.isNew();
      Node node2 = new Node(1894, node0);
      node2.isLabel();
      node2.isScript();
      node0.removeFirstChild();
      node0.isOptionalArg();
      Node.extractLineno(31);
  }

  @Test(timeout = 4000)
  public void test405()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      Node node1 = new Node(147, 3350, 1);
      node0.isEquivalentTo(node1, false, false, false);
      node0.getDouble();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
  }

  @Test(timeout = 4000)
  public void test406()  throws Throwable  {
      Node node0 = Node.newString(901, "}", 901, 901);
      node0.getJsDocBuilderForNode();
      node0.getBooleanProp(901);
      Node node1 = new Node(901, 43, 54);
      node1.isEquivalentToTyped(node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(12, nodeArray0);
      node0.isDebugger();
      Node node3 = new Node((-2970), node2, node1, node1, 42, 0);
      node0.isFunction();
      node3.isNull();
      node2.isScript();
      node0.isVar();
  }

  @Test(timeout = 4000)
  public void test407()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(1865, nodeArray0, 1865, (-2224));
      // Undeclared exception!
      try { 
        node0.removeChildAfter((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test408()  throws Throwable  {
      Node node0 = Node.newString("QWeJvk'");
      node0.children();
      node0.isContinue();
      node0.isFor();
      node0.toStringTree();
      node0.isDelProp();
      node0.isExprResult();
      node0.isTrue();
      node0.isFalse();
      node0.getProp(3794);
      // Undeclared exception!
      try { 
        node0.checkTreeTypeAwareEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test409()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, (-17), (-17));
      node0.isThis();
      node0.isNot();
      Node node1 = new Node(1002, node0, node0, node0, node0, 111, 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:O[mO,hW54A+gOI");
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "8O]5SawUdgJeIqomYQX");
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      int int0 = Node.SLASH_V;
      node0.setCharno(31);
      node1.getInputId();
      node0.getAncestors();
      node1.isIf();
      Node node2 = null;
      try {
        node2 = new Node(42, node0, node0, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test410()  throws Throwable  {
      Node node0 = new Node(54, 43, 54);
      node0.setSourceFileForTesting("TfKnzy$");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSType[] jSTypeArray0 = new JSType[4];
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      ObjectType.cast(jSType0);
      jSTypeArray0[0] = (JSType) null;
      EnumType enumType0 = jSTypeRegistry0.createEnumType((String) null, node0, jSType0);
      EnumElementType enumElementType0 = enumType0.getElementsType();
      enumElementType0.getJSDocInfo();
      ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType((JSDocInfo) null);
      jSTypeArray0[1] = (JSType) objectType0;
      FunctionType.getTopDefiningInterface(enumElementType0, "Unknown class name");
      jSTypeArray0[2] = (JSType) null;
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createFunctionType((JSType) null, true, jSTypeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionParamBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test411()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 2134, (-2256));
      Node node1 = Node.newString("[Xi", 40, (-97));
      node1.addChildrenToBack(node0);
      node1.setWasEmptyNode(false);
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // STRING [Xi is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test412()  throws Throwable  {
      Node node0 = new Node(43);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node0.getBooleanProp(43);
      node0.isContinue();
      node0.isFor();
      node0.toStringTree();
      node0.isOptionalArg();
      node0.isVarArgs();
      node0.toString(false, true, false);
      node0.isVoid();
      node0.isFunction();
      node0.isNull();
      node0.isEquivalentToTyped(node0);
      node0.isAssign();
      Node.extractLineno(31);
      Node node1 = Node.newNumber((double) 52, 36, 51);
      node0.getIndexOfChild(node1);
  }

  @Test(timeout = 4000)
  public void test413()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.mayMutateGlobalStateOrThrow();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getBooleanProp(62);
      Node node1 = new Node(7, node0);
      node0.isEquivalentToTyped(node1);
      Node.newString(102, "limit is negative", 39, 2);
      node0.isVoid();
      node0.getAncestor(39);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.getStaticSourceFile();
      Node node3 = node2.cloneTree();
      node0.removeChildren();
      node3.isHook();
  }

  @Test(timeout = 4000)
  public void test414()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isBlock();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(62, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node1.isContinue();
      int int0 = Node.DIRECT_EVAL;
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags3.setMutatesGlobalState();
      node_SideEffectFlags4.areAllFlagsSet();
      node_SideEffectFlags4.areAllFlagsSet();
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // INC is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test415()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      node0.setDirectives(treeSet0);
      node0.isAssignAdd();
      node0.siblings();
      node0.children();
      Node node1 = new Node(119, node0, 8, 8);
      node1.getBooleanProp(26);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node3 = new Node(4, node1, node2, node2);
      Node node4 = node1.useSourceInfoIfMissingFromForTree(node0);
      node1.mayMutateArguments();
      node3.copyInformationFromForTree(node2);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node4.new FileLevelJsDocBuilder();
      Node.newNumber((double) 12, (-2110), 47);
      node4.isAssignAdd();
  }

  @Test(timeout = 4000)
  public void test416()  throws Throwable  {
      Node node0 = new Node(144, 144, 144);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(12);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(12);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags5.setAllFlags();
      node0.isContinue();
      int int0 = Node.DIRECT_EVAL;
      node_SideEffectFlags4.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags7 = new Node.SideEffectFlags(40);
      node_SideEffectFlags7.setReturnsTainted();
      node_SideEffectFlags7.setReturnsTainted();
      node_SideEffectFlags6.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags7.setAllFlags();
      node_SideEffectFlags8.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags9 = new Node.SideEffectFlags(49);
      node_SideEffectFlags9.areAllFlagsSet();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test417()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, 20, 20);
      Node node1 = Node.newString((-5060), ">Z{Wc\"qP]b/63aw|?Y ");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.isSetterDef();
      node0.setType((-1606));
      node0.setDouble(52);
      Node node2 = Node.newString(42, "^O<Kl6]0d6d3;<]*", 8192, 31);
      node1.isSyntheticBlock();
      node1.isThis();
      node0.isArrayLit();
      Node node3 = new Node(102, node0, node2);
      node3.srcrefTree(node1);
      Object object0 = new Object();
      node1.putProp(1367, object0);
      node2.getLength();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1606
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test418()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      Node node1 = Node.newString(126, "Gpn-GcXC");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isUnscopedQualifiedName();
      node1.isSetterDef();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.google.common.base.CharMatcher$RangesMatcher");
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setThrows();
      node1.getSourcePosition();
      node1.isCatch();
      node1.isIn();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test419()  throws Throwable  {
      Node node0 = new Node((-531), (-531), (-531));
      node0.getJSDocInfo();
      Node node1 = new Node((-531), node0, node0, node0, node0, 49, (-1013));
      node1.isTrue();
      node1.hasOneChild();
      Node node2 = new Node(47);
      node1.replaceChild(node0, node2);
      node2.isDelProp();
      node0.isString();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1435));
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.newNumber(727.3152989233);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node2.isThrow();
      node1.getBooleanProp(39);
      Node.mergeLineCharNo((-80), 29);
  }

  @Test(timeout = 4000)
  public void test420()  throws Throwable  {
      Node node0 = new Node(43);
      node0.getDirectives();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node.newString("SHEQ", 4, 47);
      Node.newNumber((double) 8, 1, 38);
      Node node1 = new Node(49, 122, 8221);
      node0.putIntProp(2097152, 46);
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(31);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got THROW
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test421()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, 0, 0);
      node0.isThis();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags1.setReturnsTainted();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte)47;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node1 = Node.newString("Gpn-GcXC");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      ImmutableList.of();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType[] jSTypeArray0 = new JSType[0];
      ImmutableList<JSType> immutableList0 = ImmutableList.copyOf(jSTypeArray0);
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node3 = new Node(1132, node0, node0, node0);
      Node node4 = node2.useSourceInfoIfMissingFromForTree(node1);
      node4.mayMutateArguments();
      node4.copyInformationFromForTree(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder1 = node2.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder1.append("1G5");
      node2.getLastChild();
  }

  @Test(timeout = 4000)
  public void test422()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.setChangeTime((-3014));
      node0.isSetterDef();
      node0.setType(105);
      Node node1 = Node.newNumber((-1.0), 8, 49);
      Node node2 = new Node(16, (-5368), 31);
      node2.getSideEffectFlags();
      node0.toStringTree();
      node0.isDefaultCase();
      node1.getLineno();
  }

  @Test(timeout = 4000)
  public void test423()  throws Throwable  {
      Node node0 = new Node(98);
      // Undeclared exception!
      try { 
        node0.appendStringTree((Appendable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test424()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.setChangeTime((-3014));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(30);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setThrows();
      node0.putProp((-3014), node_SideEffectFlags0);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.hasChild(node0);
      node0.getAncestors();
      node0.isVarArgs();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test425()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-17));
      node0.isNot();
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString(49, "p:O[mO,hW54A+gOI");
      node1.setCharno(12);
      node1.isTrue();
      node0.isFalse();
      node0.getProp(49);
      node1.isNE();
      node1.isGetElem();
      node1.setWasEmptyNode(false);
      node1.getAncestors();
      node0.isVarArgs();
      node1.checkTreeTypeAwareEqualsImpl(node0);
  }

  @Test(timeout = 4000)
  public void test426()  throws Throwable  {
      Node node0 = Node.newString(44, "f", 71, 88);
      node0.isOnlyModifiesThisCall();
      node0.getQualifiedName();
      node0.setCharno(71);
      node0.getInputId();
      Node node1 = new Node(51, node0, node0);
      node1.isIf();
      node1.isCast();
  }

  @Test(timeout = 4000)
  public void test427()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(32);
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node0.putProp(63, node_SideEffectFlags1);
      node_SideEffectFlags5.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      node0.getAncestors();
      node0.isVarArgs();
      node0.isCall();
      node0.isBreak();
      node0.isOr();
  }

  @Test(timeout = 4000)
  public void test428()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      Node node1 = Node.newString(126, "Gpn-GcXC");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isUnscopedQualifiedName();
      node1.isSetterDef();
      node1.setType(105);
      node0.setDouble(42);
      Node node2 = Node.newString(53, "Gpn-GcXC", 4095, (-3783));
      node2.isSyntheticBlock();
      node2.isThis();
      node2.isArrayLit();
      Node node3 = node2.srcrefTree(node0);
      node3.putProp(535, node2);
      node1.getLength();
      // Undeclared exception!
      try { 
        node3.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test429()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.isUnscopedQualifiedName();
      node0.setChangeTime((-3014));
      node0.isSetterDef();
      node0.setType(105);
      Node.newNumber((-1.0), 8, 49);
      Node node1 = new Node(16, (-5368), 31);
      node1.getSideEffectFlags();
      node0.toStringTree();
      node0.isDefaultCase();
      node1.isName();
  }

  @Test(timeout = 4000)
  public void test430()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Node node0 = Node.newNumber((-2205.529590911));
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(55);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)43;
      node_SideEffectFlags1.setAllFlags();
      byteArray0[1] = (byte) (-113);
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n~n41I&T8[]MH+,o,9");
      byteArray0[4] = (byte)113;
      byteArray0[5] = (byte)112;
      byteArray0[6] = (byte)118;
      Node node1 = Node.newString(" (");
      node1.wasEmptyNode();
      node0.getAncestors();
      node0.isVarArgs();
      node1.isCall();
      node1.getCharno();
  }

  @Test(timeout = 4000)
  public void test431()  throws Throwable  {
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      Node node0 = new Node(300);
      node0.getStaticSourceFile();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      Node node2 = node1.cloneTree();
      node0.isAssign();
      node2.getBooleanProp(42);
  }

  @Test(timeout = 4000)
  public void test432()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isBlock();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(62, node0, node0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      treeSet0.add("qO");
      node0.setDirectives(treeSet0);
      node0.isAssignAdd();
      node1.siblings();
      node1.children();
      Node node2 = null;
      try {
        node2 = new Node(57, node0, 48, 53);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test433()  throws Throwable  {
      Node node0 = new Node(13);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      node0.getBooleanProp(48);
      node0.isContinue();
      node0.isFor();
      node0.toStringTree();
      node0.isDelProp();
      node0.isString();
      node0.toString(false, false, true);
      node0.isVoid();
      node0.isFunction();
      Node node1 = Node.newNumber((double) 13);
      node1.isNull();
      node1.isComma();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test434()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_'O/");
      Node node0 = Node.newString("CharMatcher.isNot('", (-1395), (-1395));
      node0.getString();
      node0.setLength((-1395));
      Node node1 = new Node(52, (-1349), (-467));
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      JSType.toMaybeTemplatizedType((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("CharMatcher.isNot('", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test435()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isIn();
      Node node1 = new Node(1792, node0, node0);
      node1.isParamList();
      // Undeclared exception!
      try { 
        node1.addChildBefore((Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test436()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      treeSet0.clear();
      node0.setDirectives(treeSet0);
      node0.isFromExterns();
      node0.getSourceFileName();
      Node node1 = new Node(55, node0, node0, node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(306654252);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setAllFlags();
      Node node2 = null;
      try {
        node2 = new Node(4362252, node1, node1, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test437()  throws Throwable  {
      Node node0 = new Node(43);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node1 = Node.newString("SHEQ", 4, 124);
      Node node2 = Node.newNumber((double) 8, 1, 38);
      Node node3 = new Node(42, 39, 113);
      node3.getSideEffectFlags();
      node2.toStringTree();
      node0.isAssignAdd();
      node2.isDec();
      Node.extractLineno((-343));
      // Undeclared exception!
      try { 
        node3.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test438()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isSyntheticBlock();
      Node node1 = Node.newString("lWTztb8", 13, 40);
      Node node2 = new Node(10);
      Node node3 = new Node((-1));
      Node node4 = Node.newNumber((-13.4095738306));
      Node node5 = new Node(43, node0, node1, node4, 3843, 114);
      Node node6 = new Node(4687, node5);
      // Undeclared exception!
      try { 
        node5.replaceChild(node3, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test439()  throws Throwable  {
      Node node0 = Node.newString("}");
      node0.getJsDocBuilderForNode();
      node0.getBooleanProp(901);
      Node node1 = new Node(901, node0);
      node1.isEquivalentToTyped(node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(12, nodeArray0);
      node0.isDebugger();
      Node node3 = Node.newString(46, "}", 33, 15);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node_AncestorIterable0.spliterator();
      node_AncestorIterable0.iterator();
      node0.toString();
      node3.isInstanceOf();
      node1.useSourceInfoIfMissingFromForTree(node3);
      node0.isDefaultCase();
      node1.isName();
      node3.isDo();
      node2.getCharno();
  }

  @Test(timeout = 4000)
  public void test440()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.isSetterDef();
      node0.isThrow();
      node0.isWith();
      node0.children();
      node0.siblings();
      int int0 = Node.IS_NAMESPACE;
      node0.getChildCount();
      stack0.clear();
      node0.isBlock();
      node0.isDebugger();
      node0.isCall();
      Node node1 = Node.newString("=]4^.Lq\"");
      node1.isUnscopedQualifiedName();
      node0.checkTreeEqualsImpl(node1);
      node0.isScript();
      // Undeclared exception!
      try { 
        node1.getAncestor((-2780));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test441()  throws Throwable  {
      Node node0 = Node.newNumber((double) (-17));
      node0.isNot();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:O[mO,hW54A+gOI");
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node0.getSourcePosition();
      node0.isCatch();
      node0.isIn();
      // Undeclared exception!
      try { 
        node0.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test442()  throws Throwable  {
      Node node0 = Node.newNumber((-974.8365080192959));
      node0.isGetProp();
      node0.setVarArgs(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node1 = new Node(42, node0, node0);
      node0.isFromExterns();
      node1.removeChild(node0);
      node0.isNumber();
      node0.getSourceFileName();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("K]l", ", ...");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // , ...
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test443()  throws Throwable  {
      Node node0 = new Node(13);
      node0.hasMoreThanOneChild();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newString(56, "i]<rn3u7Mj$iki{^$ul", 49, (-3690));
      node1.getSourcePosition();
      node0.getAncestors();
      node0.isOnlyModifiesArgumentsCall();
      node1.getJsDocBuilderForNode();
      node1.isBlock();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node3 = new Node(16, node2, node1, node0);
      node1.useSourceInfoIfMissingFromForTree(node2);
      node1.mayMutateArguments();
      node2.copyInformationFromForTree(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node3.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("i]<rn3u7Mj$iki{^$ul");
  }

  @Test(timeout = 4000)
  public void test444()  throws Throwable  {
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node(118, node0, node0, node0);
      node1.addSuppression("S");
      node1.useSourceInfoFrom(node0);
  }

  @Test(timeout = 4000)
  public void test445()  throws Throwable  {
      Node node0 = Node.newString(">YSQW`~MuhJ\"a*G");
      node0.setType((-3227));
      node0.isSyntheticBlock();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = Node.newString(1, "com.google.javascript.rhino.jstype.NumberType", 2, (-920));
      node0.isEquivalentTo(node1);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[0];
      JSType jSType0 = jSTypeRegistry1.createUnionType(jSTypeNativeArray0);
      TemplateType templateType0 = jSTypeRegistry0.createTemplateType("Object#Key");
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, (JSType) templateType0, jSType0);
      Node node2 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) immutableList0);
      node2.setSourceEncodedPositionForTree(44);
      node1.getJsDocBuilderForNode();
      node0.isBlock();
      Node node3 = new Node(36, node1, node2, node0, 50, 57);
      node3.isEmpty();
      node2.isAnd();
      node0.isFor();
  }

  @Test(timeout = 4000)
  public void test446()  throws Throwable  {
      Node node0 = Node.newString(195, "\n", 195, 2617);
      node0.getString();
      node0.isArrayLit();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test447()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber(212.1695429733);
      try { 
        node0.getString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // NUMBER 212.1695429733 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test448()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JSDocInfo jSDocInfo0 = new JSDocInfo(false);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      Node node1 = Node.newString("I%", 31, 37);
      node0.checkTreeEquals(node1);
      node0.isFalse();
  }

  @Test(timeout = 4000)
  public void test449()  throws Throwable  {
      Node node0 = Node.newNumber((double) 4194304, 4194304, 116);
      Node node1 = Node.newString(126, "Gpn-GcXC");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isUnscopedQualifiedName();
      node0.setChangeTime((-3014));
      node1.isSetterDef();
      node1.setType(105);
      Node.newNumber((-1.0), 8, 49);
      Node node2 = new Node(16, (-5368), 31);
      node2.getSideEffectFlags();
      node0.toStringTree();
      node1.isDefaultCase();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test450()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2092));
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags((-2092));
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(49, node0, node0, 127, (-1));
      node1.putIntProp(88, 55);
      Node node2 = node0.detachFromParent();
      node0.putBooleanProp(40, false);
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node1.isDefaultCase();
      node2.isName();
  }

  @Test(timeout = 4000)
  public void test451()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.newString(112, "com.google.javascript.rhino.jstype.NumberType", 49, 36);
      node0.isEquivalentTo(node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[5];
      jSTypeNativeArray0[1] = jSTypeNativeArray0[0];
      JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.ALL_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.NULL_TYPE;
      jSTypeNativeArray0[4] = jSTypeNative2;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test452()  throws Throwable  {
      Node node0 = new Node(43);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node0.getBooleanProp(43);
      node0.isContinue();
      node0.isFor();
      node0.toStringTree();
      node0.isDelProp();
      node0.isString();
      node0.toString(false, true, false);
      node0.isVoid();
      node0.isFunction();
      node0.isNull();
      node0.isComma();
      node0.isAssign();
  }

  @Test(timeout = 4000)
  public void test453()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 8232, 813);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node1 = new Node(589968, node0, node0, node0, 117, 32);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesGlobalState();
      // Undeclared exception!
      try { 
        node1.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 589968
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test454()  throws Throwable  {
      Node node0 = new Node(30);
      Set<String> set0 = new HashSet<String>();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node0.getBooleanProp(30);
      node0.isContinue();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.toStringTree();
      node0.setSideEffectFlags(node_SideEffectFlags0);
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(847);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test455()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ut~};\"I?.\"&nqS@Xyo");
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(39, nodeArray0, 39, 39);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node1 = Node.newString("T^|W/%");
      Node node2 = new Node(691, nodeArray0, 36, 39);
      node2.children();
      Node node3 = new Node(48);
      node1.getBooleanProp((-4412));
      node0.isContinue();
      node0.isAssignAdd();
      Node node4 = Node.newString(" : ", 1, 3234);
      node4.isDec();
      // Undeclared exception!
      try { 
        node4.checkTreeEquals(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Number node not created with Node.newNumber
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test456()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, 20, 20);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.isThis();
      node0.isNot();
      Node node1 = Node.newString(4, "    ", 0, 148);
      node0.isSyntheticBlock();
      node1.isOnlyModifiesThisCall();
      node0.getQualifiedName();
      node1.setCharno(42);
      node1.getInputId();
      Node node2 = Node.newString("K", 347, 38);
      node2.getSourceOffset();
      Node node3 = Node.newString("K", 49, (-2533));
      node3.checkTreeEquals(node2);
      node1.isFalse();
  }

  @Test(timeout = 4000)
  public void test457()  throws Throwable  {
      Node node0 = new Node(144, 144, 144);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(12);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags0.areAllFlagsSet();
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      Node node1 = null;
      try {
        node1 = new Node(1554, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test458()  throws Throwable  {
      Node node0 = new Node(144, 144, 144);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(12);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(12);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.setReturnsTainted();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node1 = Node.newString("Gpn-GcXC");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ImmutableList<JSType> immutableList0 = ImmutableList.of();
      Node node2 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
      Node node3 = new Node(65535, node0, node0, node2);
      node1.useSourceInfoIfMissingFromForTree(node3);
      node2.mayMutateArguments();
      node3.copyInformationFromForTree(node0);
      Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node1.new FileLevelJsDocBuilder();
      node_FileLevelJsDocBuilder0.append("Object#Element");
  }

  @Test(timeout = 4000)
  public void test459()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)126;
      byteArray0[1] = (byte) (-24);
      byteArray0[5] = (byte)1;
      Node node0 = new Node((byte)1, 62, 62);
      node0.putIntProp((byte)12, (byte)51);
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(62);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test460()  throws Throwable  {
      Node node0 = new Node(43);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags6.setReturnsTainted();
      node_SideEffectFlags7.areAllFlagsSet();
      Node node1 = Node.newString("I^3Y<p}dC\"uy$t", 52, 37);
      node1.getSourceOffset();
      Node node2 = Node.newString("ERROR_FUNCTION_TYPE", 621, 15);
      node0.checkTreeEquals(node1);
      node2.getNext();
  }

  @Test(timeout = 4000)
  public void test461()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      treeSet0.clear();
      node0.setDirectives(treeSet0);
      node0.isAssignAdd();
      node0.siblings();
      node0.children();
      Node node1 = new Node(119, node0, 8, 8);
      node1.getBooleanProp(26);
      node0.isContinue();
      node1.isAssignAdd();
      node0.isDec();
      Node.extractLineno(1);
      // Undeclared exception!
      try { 
        node1.removeChildAfter(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no next sibling.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test462()  throws Throwable  {
      Node node0 = new Node(144, 144, 144);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(12);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(12);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags4.setReturnsTainted();
      node_SideEffectFlags5.areAllFlagsSet();
      Node.newString("no next sibling.", 8388608, (-731));
      node0.getSourceOffset();
      Node node1 = Node.newString("p:O[mO,hW54z+gOI", 87, 32);
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test463()  throws Throwable  {
      int int0 = 463;
      Node node0 = Node.newNumber(0.0, 463, 463);
      Node node1 = new Node(463, node0, node0);
      node1.cloneNode();
      node1.isOptionalArg();
      Node node2 = null;
      try {
        node2 = new Node(463, node1, node0, node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test464()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 144, 144);
      Node node1 = Node.newString(105, "com.google.javascript.rhino.jstype.NumberType");
      node0.setVarArgs(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags0.setMutatesArguments();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags();
      node_SideEffectFlags4.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      Node node2 = Node.newString("?");
      node2.getAncestors();
      node2.isComma();
      node1.isFunction();
      node2.isNull();
  }

  @Test(timeout = 4000)
  public void test465()  throws Throwable  {
      Node node0 = new Node((-82));
      Node node1 = Node.newString("^UD", 114, 49);
      Node node2 = null;
      // Undeclared exception!
      try { 
        node1.useSourceInfoIfMissingFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test466()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 144, 144);
      Node node1 = Node.newString(105, "com.google.javascript.rhino.jstype.NumberType");
      node0.srcrefTree(node1);
      node0.setVarArgs(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node node2 = Node.newString("QWeJvk'");
      node2.children();
      Node node3 = new Node(49);
      node1.isDelProp();
      node0.isString();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(4095);
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSType.toMaybeTemplateType((JSType) null);
      ObjectType.cast((JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("com.google.javascript.rhino.jstype.NumberType", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test467()  throws Throwable  {
      Node node0 = new Node(43);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setThrows();
      node0.getBooleanProp(43);
      node0.isContinue();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.toStringTree();
      node0.isDec();
      node0.isContinue();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.setAllFlags();
      node0.isContinue();
      node0.getStaticSourceFile();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      JSDocInfo jSDocInfo1 = new JSDocInfo(false);
      node0.setJSDocInfo(jSDocInfo1);
  }

  @Test(timeout = 4000)
  public void test468()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      Node node1 = new Node(12);
      Node node2 = new Node(40, node1, node1, node0, node0, (-1788), 26);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:O[mO,hW54A+gOI");
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setThrows();
      node2.getSourcePosition();
      node1.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node1.isIn();
      // Undeclared exception!
      try { 
        node2.addChildBefore(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test469()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, (-17), (-17));
      node0.isThis();
      node0.putBooleanProp(51, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(528);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.newString(2601, "NEW", 4095, 16);
      Node node1 = new Node(Integer.MIN_VALUE, node0, 212, 144);
      // Undeclared exception!
      try { 
        node0.copyInformationFrom(node1);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node$IntPropListItem", e);
      }
  }

  @Test(timeout = 4000)
  public void test470()  throws Throwable  {
      Node node0 = new Node(144, 144, 144);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(12);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags(12);
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags2.setReturnsTainted();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node2 = new Node(51, node1, node1);
      node1.isFromExterns();
      // Undeclared exception!
      try { 
        node2.getChildBefore(node0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test471()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 144, 144);
      Node node1 = Node.newString(105, "com.google.javascript.rhino.jstype.NumberType");
      node0.setVarArgs(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node node2 = Node.newString("QWeJvk'");
      node2.children();
      Node node3 = new Node(49);
      node3.getBooleanProp((-95));
      node2.isContinue();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags(1709);
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags4.setAllFlags();
      node1.isContinue();
      node2.getStaticSourceFile();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.setJSDocInfo(jSDocInfo0);
      node3.cloneTree();
      node1.isReturn();
  }

  @Test(timeout = 4000)
  public void test472()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
      node0.isSetterDef();
      node0.isThrow();
      node0.isWith();
      node0.children();
      node0.siblings();
      // Undeclared exception!
      try { 
        node0.getExistingIntProp((-2612));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // missing prop: -2612
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test473()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(13, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(13);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newString(57, "NEW", 163886, (-2780));
      Node node2 = new Node(113, node0, 63, 163886);
      Node node3 = node0.copyInformationFrom(node1);
      node3.isName();
      node0.mayMutateGlobalStateOrThrow();
      node3.srcrefTree(node2);
      node1.setLineno(1654);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = node1;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node2;
      nodeArray0[4] = node0;
      Node node4 = null;
      try {
        node4 = new Node(190, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test474()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.mayMutateGlobalStateOrThrow();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.getBooleanProp(62);
      Node node1 = new Node(7, node0);
      node0.isEquivalentToTyped(node1);
      Node.newString(102, "limit is negative", 39, (-4096));
      node1.getBooleanProp(31);
      node0.getAncestor(39);
      Node node2 = node1.useSourceInfoIfMissingFrom(node0);
      node2.getStaticSourceFile();
      node2.cloneTree();
  }

  @Test(timeout = 4000)
  public void test475()  throws Throwable  {
      Node node0 = new Node(26);
      node0.isCase();
      node0.setType(102);
      node0.removeChildren();
      node0.isSyntheticBlock();
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node node1 = Node.newNumber(30.5059);
      node0.useSourceInfoFrom(node1);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isTypeOf();
      Node node2 = null;
      try {
        node2 = new Node(49, (Node) null, (Node) null, (Node) null, node0, 1, 53);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test476()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isBlock();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(62, node0, node0);
      Node node2 = Node.newString(112, "com.google.javascript.rhino.jstype.NumberType", 49, 36);
      node1.isEquivalentTo(node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[5];
      JSTypeNative jSTypeNative0 = JSTypeNative.DATE_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      node2.isDebugger();
      Node.newString(53, "1\"Bc", 4, 4194304);
      node1.getSourceOffset();
      Node node3 = Node.newString("`q\"]LS:`2{[(1j+<R", 1468, (-6));
      Node node4 = new Node((-4233), node2, node2);
      // Undeclared exception!
      try { 
        node3.checkTreeEquals(node4);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -4233
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test477()  throws Throwable  {
      int int0 = 32;
      Node node0 = new Node(32);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node0.getBooleanProp(32);
      node0.isContinue();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.toStringTree();
      // Undeclared exception!
      try { 
        node0.setSideEffectFlags(node_SideEffectFlags0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got TYPEOF
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test478()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Th");
      Node node0 = Node.newString("QWeJvk'", 7, 7);
      Node node1 = Node.newString(2166, "QWeJvk'", 32, (-600));
      Node node2 = new Node(48, node0, 37, 0);
      node2.copyInformationFrom(node0);
      node2.isName();
      node0.mayMutateGlobalStateOrThrow();
      node1.srcrefTree(node0);
      node2.setLineno(31);
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test479()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(116, nodeArray0);
      TreeSet<String> treeSet0 = new TreeSet<String>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      treeSet0.add("SC6F?8*");
      treeSet0.add("QWeJvk'");
      treeSet0.clear();
      node0.setDirectives(treeSet0);
      node0.isAssignAdd();
      node0.siblings();
      String string0 = "";
      try { 
        node0.setDouble(3182.0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // BREAK 0 [directives: com.google.javascript.rhino.Node$ObjectPropListItem@0000000002] is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test480()  throws Throwable  {
      Node node0 = new Node(125);
      node0.toString();
      node0.isAdd();
      Node node1 = new Node(36, node0, node0, node0, node0, (-3420), 43);
      node0.srcref(node1);
      node1.getQualifiedName();
      // Undeclared exception!
      try { 
        node1.addChildrenToFront(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test481()  throws Throwable  {
      Node node0 = Node.newString("}");
      node0.getJsDocBuilderForNode();
      node0.getBooleanProp(438);
      Node node1 = new Node(438, node0);
      node1.isEquivalentToTyped(node0);
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node(12, nodeArray0);
      node0.isDebugger();
      Node node3 = Node.newString(46, "}", 33, 15);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-1900));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      Node node4 = new Node(148, node3, node2, 46, 43);
      node4.isThrow();
      node3.getBooleanProp(4095);
  }

  @Test(timeout = 4000)
  public void test482()  throws Throwable  {
      Node node0 = new Node(26);
      node0.isCase();
      node0.setType(102);
      node0.removeChildren();
      node0.isSyntheticBlock();
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isTypeOf();
      Node node1 = Node.newString("6]", 43, 4362252);
      node1.getSourceOffset();
      Node node2 = Node.newString("jsdoc_info", 40, 46);
      node0.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test483()  throws Throwable  {
      Node node0 = Node.newString("QWeJvk'");
      node0.children();
      node0.isContinue();
      node0.isFor();
      node0.toStringTree();
      node0.isDelProp();
      node0.isOnlyModifiesArgumentsCall();
      node0.isTrue();
      node0.isFalse();
      node0.getProp(3794);
      node0.isAssign();
      node0.isNE();
      node0.isGetElem();
      node0.setWasEmptyNode(false);
      node0.getAncestors();
      Node node1 = new Node(53, node0, node0);
      node1.isVarArgs();
      node0.isLabelName();
      node1.hasOneChild();
  }

  @Test(timeout = 4000)
  public void test484()  throws Throwable  {
      Node node0 = new Node(13);
      Node node1 = Node.newString("p:O[mO,hW54A+gOI", (-1370), 57);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node2.getJSType();
      node0.isEquivalentTo(node2);
      Node node3 = node0.useSourceInfoFrom(node2);
      node2.putProp((-1277), "^UD");
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = node3;
      nodeArray0[1] = node3;
      nodeArray0[2] = node2;
      nodeArray0[3] = node1;
      nodeArray0[4] = node3;
      nodeArray0[5] = node3;
      nodeArray0[6] = node3;
      Node node4 = null;
      try {
        node4 = new Node(1, nodeArray0, 91, (-1781));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test485()  throws Throwable  {
      Node node0 = new Node(43);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = new Node.SideEffectFlags(2185);
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags2.setMutatesArguments();
      node_SideEffectFlags5.clearAllFlags();
      node0.hasMoreThanOneChild();
      node0.isArrayLit();
      Node node1 = Node.newNumber((double) 15);
      node0.srcrefTree(node1);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      String string0 = "-2~x_Y77?PjDS&>1W";
      JSTypeNative jSTypeNative0 = JSTypeNative.UNKNOWN_TYPE;
      // Undeclared exception!
      try { 
        jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.javascript.rhino.jstype.UnknownType cannot be cast to com.google.javascript.rhino.jstype.FunctionType
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test486()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = Node.newString(56, "i]<rn3u7Mj$iki{^$ul", 49, (-3690));
      node1.getSourcePosition();
      node1.getAncestors();
      node0.isOnlyModifiesArgumentsCall();
      node1.getJsDocBuilderForNode();
      node1.isBlock();
      Node node2 = Node.newNumber((double) 38, (-358), 47);
      Node node3 = new Node(52);
      Node node4 = new Node(0, node3, node3, node2, node2, 1, 0);
      node4.getLastChild();
      node1.isBreak();
      node3.isLabel();
      node1.setString("i]<rn3u7Mj$iki{^$ul");
  }

  @Test(timeout = 4000)
  public void test487()  throws Throwable  {
      Node node0 = Node.newNumber(2397.14304977274, 4194304, 116);
      Node node1 = Node.newString(126, "Gpn-GcXC");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node1.isUnscopedQualifiedName();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("Gpn-GcXC", "4<_}Ckm[jb3r", 370, 8);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setAllFlags();
      node0.toString();
      node1.isWhile();
      node0.isCase();
      node1.isInc();
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node1;
      Node node2 = new Node(38, nodeArray0, 9, 12288);
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test488()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(13, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      Node node1 = new Node(13, node0, node0);
      node0.isEquivalentTo(node1);
      node1.hasMoreThanOneChild();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = null;
      try {
        node2 = new Node(47, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test489()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 144, 144);
      Node node1 = Node.newString(105, "com.google.javascript.rhino.jstype.NumberType");
      node0.setVarArgs(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node[] nodeArray0 = new Node[0];
      Node node2 = new Node((-1025), nodeArray0, 4095, 3031);
      Node node3 = new Node(4, node2);
      node3.isEquivalentToTyped(node2);
      Node node4 = Node.newString(294, "M9S'&(|x^", 8, 86);
      node1.getBooleanProp(85);
      node3.getAncestor(5760);
      Node node5 = node2.useSourceInfoIfMissingFrom(node3);
      node4.getStaticSourceFile();
      node5.cloneTree();
  }

  @Test(timeout = 4000)
  public void test490()  throws Throwable  {
      Node node0 = Node.newString("Namespaces not supported yet (");
      node0.getJSDocInfo();
      Node node1 = new Node(1, node0, node0, node0, node0, (-1302), 115);
      node0.isTrue();
      node1.isDo();
      Node node2 = new Node(1);
      // Undeclared exception!
      try { 
        node1.replaceChild(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test491()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.StringType", 4194304, 1256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(56, 57, 1);
      node0.addChildToFront(node1);
      Node node2 = new Node(42, node0, node0);
      node0.isEquivalentToTyped(node0);
      node1.setSourceEncodedPosition(40);
      Node.newString(29, "com.google.javascript.rhino.jstype.StringType", 2544, 53);
      node2.useSourceInfoFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setThrows();
      Node node3 = Node.newString(53, "&7ld=", 155, 48);
      // Undeclared exception!
      try { 
        node0.addChildAfter(node2, node3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test492()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 144, 144);
      Node node1 = Node.newString(105, "com.google.javascript.rhino.jstype.NumberType");
      node0.setVarArgs(true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node2 = Node.newString("QWeJvk'");
      node2.children();
      Node node3 = new Node(49);
      node3.getBooleanProp(2);
      node2.isContinue();
      node1.isAssignAdd();
      node2.isDec();
      node0.checkTreeEquals(node1);
      Node.extractLineno(305);
      node0.isCast();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.isBlock();
      node3.getLastChild();
      int int0 = Node.LAST_PROP;
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test493()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, (-17), (-17));
      node0.isThis();
      node0.isNot();
      Node node1 = new Node(1002, node0, node0, node0, node0, 111, 1);
      Node node2 = new Node(86, node1, 1002, 3039);
      node2.getBooleanProp(0);
      node2.isContinue();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        node2.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1002
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test494()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(62, node0, node0);
      Node.newString(112, "com.google.javascript.rhino.jstype.NumberType", 49, 36);
      node1.isEquivalentTo(node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[5];
      JSTypeNative jSTypeNative0 = JSTypeNative.DATE_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      jSTypeNativeArray0[1] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.BOOLEAN_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.ALL_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative2;
      node0.isContinue();
      node1.getStaticSourceFile();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node2 = node1.setJSDocInfo(jSDocInfo0);
      node2.children();
  }

  @Test(timeout = 4000)
  public void test495()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesThis();
      String string0 = "AK;r.z0K^OD<}";
      Node node0 = Node.newString("AK;r.z0K^OD<}", 1, 4744);
      Node node1 = new Node(124, node0, node0, node0, node0);
      Node node2 = null;
      try {
        node2 = new Node(1, node1, node1, node1, node0, 698, 2067);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test496()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, (-17), (-17));
      node0.isThis();
      node0.isNot();
      Node node1 = new Node(1002, node0, node0, node0, node0, 111, 1);
      node0.toString(false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:O[mO,hW54A+gOI");
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node node2 = Node.newString(898, "*tFnLm\"SjRpeP-h");
      node1.addChildToFront(node2);
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node1.getSourcePosition();
      node1.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isIn();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test497()  throws Throwable  {
      Node node0 = new Node(13);
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isVar();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(62, node0, node0);
      Node node2 = Node.newString(112, "com.google.javascript.rhino.jstype.NumberType", 49, 36);
      node1.isEquivalentTo(node0);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[5];
      JSTypeNative jSTypeNative0 = JSTypeNative.DATE_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      jSTypeNativeArray0[1] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.BOOLEAN_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.ALL_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.NULL_TYPE;
      jSTypeNativeArray0[4] = jSTypeNative3;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.getJsDocBuilderForNode();
      node1.isBlock();
      node0.getLastChild();
      node2.isEmpty();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test498()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node((-1861), 32768, 32768);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "originalname";
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setThrows();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isIn();
      int int0 = 12;
      Node node1 = new Node(48, node0, node0, node0, node0, 51, 779);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test499()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("originalname", 1065, 12);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("Gpn-GcXC", "synthetic", 26, 32);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node.SideEffectFlags node_SideEffectFlags1 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setThrows();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags3.setAllFlags();
      node0.toString();
      node0.isWhile();
      node0.isCase();
      node0.isInc();
      Node node1 = null;
      try {
        node1 = new Node(1065, nodeArray0, 31, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test500()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      String string0 = "com.google.common.collect.Lists$Partition";
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) simpleErrorReporter0;
      objectArray0[1] = (Object) node0;
      objectArray0[2] = (Object) node0;
      objectArray0[3] = (Object) node0;
      Node node1 = Node.newString(48, "|jFc$p", 48, 43);
      Node node2 = node0.copyInformationFromForTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(39);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setMutatesThis();
      // Undeclared exception!
      try { 
        node2.setSideEffectFlags(node_SideEffectFlags4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // setIsNoSideEffectsCall only supports CALL and NEW nodes, got INC
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test501()  throws Throwable  {
      Node node0 = Node.newString("}");
      node0.getJsDocBuilderForNode();
      node0.getSourceOffset();
      node0.isEmpty();
      node0.isEquivalentToTyped(node0);
  }

  @Test(timeout = 4000)
  public void test502()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("Yq(fMXkcut5w1Fb6N", "Yq(fMXkcut5w1Fb6N", 52, 102);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.getProp(52);
      node0.isAssign();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isIn();
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("jrqw{[ts", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test503()  throws Throwable  {
      Node node0 = new Node((-531), (-531), (-531));
      node0.getJSDocInfo();
      Node node1 = new Node((-531), node0, node0, node0, node0, 49, (-1013));
      node1.isTrue();
      node1.hasOneChild();
      Node node2 = new Node(47);
      node1.replaceChild(node0, node2);
      Node node3 = null;
      try {
        node3 = new Node(47, node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test504()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, (-17), (-17));
      node0.isThis();
      node0.isNot();
      Node node1 = new Node(1002, node0, node0, node0, node0, 111, 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:O[mO,hW54A+gOI");
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setThrows();
      node1.getSourcePosition();
      node1.wasEmptyNode();
      node1.getAncestors();
      node1.isEquivalentToTyped(node0);
      node1.isSetterDef();
      node1.isScript();
  }

  @Test(timeout = 4000)
  public void test505()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("Yq(fMXkcut5w1Fb6N", "Yq(fMXkcut5w1Fb6N", 37, 102);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setAllFlags();
      node0.toString();
      node0.isWhile();
      node0.isCase();
      node0.isInc();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      Node node1 = null;
      try {
        node1 = new Node(32, nodeArray0, 43, 152);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test506()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isNE();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("Yq(fMXkcut5w1Fb6N", "Yq(fMXkcut5w1Fb6N", 52, 102);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.getProp(52);
      node0.isAssign();
      node0.isQualifiedName();
      node0.isGetElem();
      node0.setWasEmptyNode(false);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.isComma();
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test507()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("Yq(fMXkcut5w1Fb6N", "Yq(fMXkcut5w1Fb6N", 52, 102);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setAllFlags();
      node0.isContinue();
      node0.getStaticSourceFile();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.setJSDocInfo(jSDocInfo0);
  }

  @Test(timeout = 4000)
  public void test508()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)126;
      byteArray0[1] = (byte) (-24);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)1;
      int int0 = Node.LAST_PROP;
      Node node0 = Node.newString(8202, "no next sibling.");
      // Undeclared exception!
      try { 
        node0.setDouble(1.2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 8202
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test509()  throws Throwable  {
      Node node0 = Node.newString("6)~C;MQau");
      Node node1 = new Node(2720, node0, node0, node0);
      node1.mayMutateArguments();
  }

  @Test(timeout = 4000)
  public void test510()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString(1, "KN]K]DgQ>VXb:iR", 154, 1);
      Node node1 = Node.newString("", (-105), 16);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = new Node(1, node0, node0, node0, 2720, (-105));
      Node node4 = node3.srcrefTree(node0);
      Node.newString(0, "");
      node4.setCharno(1732);
      node3.type = 42;
      node4.isTrue();
      node4.isFalse();
      node3.getProp(3794);
      node3.isAssign();
      node1.isNE();
      node3.isGetElem();
      node0.setWasEmptyNode(false);
      node2.getAncestors();
      node4.isVarArgs();
  }

  @Test(timeout = 4000)
  public void test511()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "synthetic");
      Node node0 = Node.newNumber(1501.0, 0, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.isThis();
      node0.isNot();
      Node node1 = new Node(1002, node0, node0, node0, node0, 110, 1);
      node1.getDirectives();
      Node node2 = node1.srcrefTree(node0);
      node2.getSideEffectFlags();
      Node node3 = Node.newString(8, "=W5d< fR!hDpt4$");
      node3.setCharno(26);
      node3.isTrue();
      node0.isFalse();
      node0.getProp(0);
      node3.isAssign();
      node3.isQualifiedName();
      node0.isGetElem();
      node2.setWasEmptyNode(false);
      node3.getAncestors();
      node2.isVarArgs();
      node0.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test512()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("+{s#", "Yq(fMXkcut5w1Fb6N", 37, (-1792));
      simpleErrorReporter0.warning("Yq(fMXkcut5w1Fb6N", "Yq(fMXkcut5w1Fb6N", 37, 102);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setAllFlags();
      node0.toString();
      node0.isWhile();
      node0.isSetterDef();
      node0.cloneNode();
  }

  @Test(timeout = 4000)
  public void test513()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)126;
      byteArray0[1] = (byte) (-24);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte) (-54);
      int int0 = Node.LAST_PROP;
      Node node0 = Node.newString(8202, "no next sibling.");
      node0.isHook();
      // Undeclared exception!
      try { 
        node0.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 8202
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test514()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(65520, nodeArray0, 79, 1065);
      Node node1 = Node.newNumber((-136.05288858333478), 32, 49);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      node1.getSourceOffset();
      ObjectType.cast((JSType) null);
      node1.putBooleanProp((-3724), false);
      node0.isDefaultCase();
      node0.setSourceEncodedPositionForTree((-1516));
      node0.isEquivalentToTyped(node1);
      node0.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test515()  throws Throwable  {
      Node node0 = new Node(43);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node0.getBooleanProp(43);
      node0.isContinue();
      node0.isFor();
      node0.toStringTree();
      node0.isDelProp();
      node0.isString();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(43);
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test516()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String string0 = "ut~};\"I?.\"&nqS@Xy\\o";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ut~};\"I?.\"&nqS@Xyo");
      Node[] nodeArray0 = new Node[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(39, nodeArray0, 39, 39);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Node node1 = new Node(4095, 12, (-1778));
      Node node2 = new Node(2, 30, 49);
      node1.removeProp(31);
      int int0 = 4;
      int int1 = (-1802);
      // Undeclared exception!
      try { 
        node2.setDouble(49);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test517()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags4.setMutatesArguments();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString(1, "KN]K]DgQ>VXb:iR", 154, 1);
      Node node1 = Node.newString("", (-105), 16);
      node0.useSourceInfoFrom(node1);
      Node node2 = new Node(1, node0, node0, node0, 2720, (-105));
      node2.removeFirstChild();
      node1.setQuotedString();
      // Undeclared exception!
      try { 
        node2.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test518()  throws Throwable  {
      Node node0 = new Node(43);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.getAncestors();
      node0.isOnlyModifiesArgumentsCall();
      node0.getJsDocBuilderForNode();
      node0.isBlock();
      Node node1 = Node.newNumber((double) 43, 1, 24);
      Node node2 = new Node(51);
      Node node3 = new Node(2308, node1, node2, node0, node0, 8, 1);
      node3.getLastChild();
      node3.isBreak();
      node3.isLabel();
      // Undeclared exception!
      try { 
        node3.setString("J+gN!0K)s");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 2308
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test519()  throws Throwable  {
      Node node0 = new Node((-2648), (-2648), (-2648));
      node0.getBooleanProp(1219);
      node0.isQualifiedName();
      node0.isOnlyModifiesArgumentsCall();
      Node node1 = Node.newString(")lILQ3]**N,5q5", 46, 0);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node2 = new Node((-1399), node1, node1, node0, node1, 51, 4194304);
      node0.useSourceInfoIfMissingFrom(node2);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node has siblings.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test520()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte)51;
      byteArray0[4] = (byte) (-24);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte) (-54);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((byte) (-128), nodeArray0);
      node0.isDebugger();
      Node node1 = Node.newString(1, "CharMatcher.ASCII", 48, 48);
      node1.isOnlyModifiesArgumentsCall();
      node0.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node0.removeChildAfter(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test521()  throws Throwable  {
      Node node0 = new Node(43);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      node0.getBooleanProp(43);
      node0.isContinue();
      String string0 = "Gpn-GcXC";
      Node node1 = Node.newString("Gpn-GcXC", 6, 116);
      node0.isDec();
      Node.extractLineno(53);
      node1.isCast();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node node2 = new Node(42, node1, 12, 1466);
      node1.addChildrenToBack(node2);
      Node node3 = null;
      try {
        node3 = new Node(12, node1, node0, 37, 1953);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test522()  throws Throwable  {
      Node node0 = new Node((-537));
      Node node1 = new Node(2, node0, node0, node0);
      node1.isTrue();
      node0.isEquivalentToShallow(node1);
      node1.setLineno(3416);
      node1.isDo();
      node0.isParamList();
      Node node2 = Node.newString(38, "2(N.i8t3kW:nZ}9Nsd", 50, 1);
      Node node3 = node1.srcrefTree(node2);
      Node node4 = Node.newString(601, "");
      node2.setCharno(1065);
      node2.isTrue();
      node3.isFalse();
      node4.getProp(3794);
      node0.isAssign();
      node1.isQualifiedName();
      node0.isGetElem();
      node3.setWasEmptyNode(true);
      node4.getAncestors();
      node2.isVarArgs();
      node4.isGetElem();
  }

  @Test(timeout = 4000)
  public void test523()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString(1, "KN]K]DgQ>VXb:iR", 154, 1);
      Node node1 = Node.newString("", (-105), 16);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = new Node(1, node0, node0, node0, 2720, (-105));
      node3.removeFirstChild();
      node0.checkTreeEqualsImpl(node2);
      // Undeclared exception!
      try { 
        node3.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test524()  throws Throwable  {
      Node node0 = Node.newString(105, "com.google.javascript.rhino.jstype.NumberType");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isOnlyModifiesThisCall();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node1 = Node.newString("", 1651, 50);
      Node node2 = new Node(77, node0, node0, node1, node1);
      node2.toString(false, false, true);
      node0.checkTreeEquals(node2);
      node0.isDefaultCase();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test525()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString(1, "KN]K]DgQ>VXb:iR", 154, 1);
      Node node1 = Node.newString("", (-105), 16);
      node0.useSourceInfoFrom(node1);
      Node node2 = new Node(1, node0, node0, node0, 2720, (-105));
      Node node3 = node2.srcrefTree(node0);
      Node node4 = Node.newString(0, "");
      node3.setCharno(1732);
      Node node5 = node1.srcrefTree(node3);
      node0.isEquivalentToTyped(node1);
      node4.useSourceInfoFrom(node5);
      Node.SideEffectFlags node_SideEffectFlags5 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = new Node.SideEffectFlags((-1));
      node_SideEffectFlags6.setMutatesGlobalState();
      node_SideEffectFlags6.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.isDefaultCase();
      node3.isName();
  }

  @Test(timeout = 4000)
  public void test526()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ut~};\"I?.\"&nqS@Xyo");
      Node[] nodeArray0 = new Node[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node(39, nodeArray0, 39, 39);
      Node node1 = new Node(56, node0, node0, node0, node0, 40, (-1333));
      node0.isQualifiedName();
      node0.addChildrenToFront(node1);
      node0.isExprResult();
      node0.isNoSideEffectsCall();
      // Undeclared exception!
      try { 
        node1.getChildAtIndex(42);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test527()  throws Throwable  {
      Node node0 = Node.newString("}");
      node0.getJsDocBuilderForNode();
      node0.getBooleanProp(438);
      Node node1 = new Node(438, node0);
      node0.getSourceOffset();
      ObjectType.cast((JSType) null);
      node1.putBooleanProp((-1), false);
      node0.isDefaultCase();
      node0.setSourceEncodedPositionForTree(2);
      node0.isEmpty();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test528()  throws Throwable  {
      String string0 = "D{fe4\\>k1ne: ,qvs";
      int int0 = 1452;
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(1452, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test529()  throws Throwable  {
      Node node0 = new Node((-531), (-531), (-531));
      node0.getJSDocInfo();
      Node node1 = Node.newString("H*Kbb.ytjjteh68zG\"", 15, 601);
      int int0 = 5760;
      Node node2 = new Node(8, node0, 54, 5760);
      String string0 = "/b";
      node2.getStaticSourceFile();
      node2.setStaticSourceFile((StaticSourceFile) null);
      // Undeclared exception!
      try { 
        node2.replaceChildAfter(node0, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test530()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(32);
      node0.isSyntheticBlock();
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node0.putProp(63, node_SideEffectFlags1);
      node_SideEffectFlags5.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      node0.getAncestors();
      node0.isComma();
      node0.isFunction();
      node0.isNull();
      node0.isScript();
  }

  @Test(timeout = 4000)
  public void test531()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.detachChildren();
      node0.isOnlyModifiesThisCall();
      Node.newString("", 8, 38);
      node0.isLocalResultCall();
      node0.isAssignAdd();
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null, false, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test532()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("Yq(fMXkcut5w1Fb6N", "Yq(fMXkcut5w1Fb6N", 52, 102);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      node_SideEffectFlags0.setMutatesGlobalState();
      node0.getProp(52);
      node0.isAssign();
      node0.isQualifiedName();
      node0.isGetElem();
      node0.setWasEmptyNode(false);
      node0.getAncestors();
      node0.isVarArgs();
      node0.isCall();
  }

  @Test(timeout = 4000)
  public void test533()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(65520, nodeArray0, 79, 1065);
      Node node1 = Node.newNumber((-136.05288858333478), 32, 49);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      node1.getSourceOffset();
      ObjectType.cast((JSType) null);
      node1.putBooleanProp((-3724), false);
      node0.isDefaultCase();
      node0.setSourceEncodedPositionForTree((-1516));
      node0.isEmpty();
      node0.isAnd();
      node1.addSuppression("StringNode: str is null");
  }

  @Test(timeout = 4000)
  public void test534()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(13, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      Node node1 = new Node(1065, node0, node0);
      node0.isEquivalentTo(node1);
      node1.hasMoreThanOneChild();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      node1.mayMutateGlobalStateOrThrow();
      Node node2 = null;
      try {
        node2 = new Node(47, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test535()  throws Throwable  {
      Node.mergeLineCharNo(310, 1446);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);
      JSType[] jSTypeArray0 = new JSType[9];
      TemplateType templateType0 = jSTypeRegistry0.getObjectIndexKey();
      jSTypeArray0[0] = (JSType) templateType0;
      int int0 = 42;
      Node node0 = null;
      try {
        node0 = new Node(310, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test536()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(62, node0, node0);
      Node node2 = Node.newString(112, "com.google.javascript.rhino.jstype.NumberType", 49, 36);
      node2.isOnlyModifiesArgumentsCall();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[5];
      JSTypeNative jSTypeNative0 = JSTypeNative.DATE_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.NUMBER_STRING;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.BOOLEAN_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.ALL_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSTypeNative jSTypeNative4 = JSTypeNative.NULL_TYPE;
      jSTypeNativeArray0[4] = jSTypeNative4;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      HashSet<String> hashSet0 = new HashSet<String>();
      node3.setDirectives(hashSet0);
      node3.getJsDocBuilderForNode();
      node1.isBlock();
      node0.getLastChild();
      int int0 = Node.LAST_PROP;
      node3.isBreak();
      Node node4 = Node.newNumber((double) 54);
      node4.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test537()  throws Throwable  {
      Node node0 = Node.newString(105, "com.google.javascript.rhino.jstype.NumberType");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.isDefaultCase();
      node0.isName();
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.useSourceInfoFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test538()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte) (-24);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte) (-54);
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node((byte) (-128), nodeArray0);
      node0.isDebugger();
      Node node1 = Node.newString(1, "CharMatcher.ASCII", 48, 48);
      node1.isOnlyModifiesArgumentsCall();
      node0.getJsDocBuilderForNode();
      node0.isBlock();
      node0.getLastChild();
      int int0 = Node.LAST_PROP;
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test539()  throws Throwable  {
      Node node0 = new Node((-537), (-537), (-537));
      node0.getJSDocInfo();
      Node node1 = new Node((-537), node0, node0, node0, node0, 1610612736, (-1013));
      node1.isTrue();
      node1.isEquivalentToShallow(node0);
      node1.isDo();
      node1.isParamList();
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      node1.setLineno(36);
      Node[] nodeArray0 = new Node[5];
      Node node3 = Node.newNumber((double) 36, 4411, (-2930));
      nodeArray0[0] = node3;
      nodeArray0[1] = node2;
      nodeArray0[2] = node0;
      nodeArray0[3] = node2;
      nodeArray0[4] = node1;
      Node node4 = null;
      try {
        node4 = new Node(38, nodeArray0, 1610612736, (-3203));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test540()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.jstype.StringType";
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.StringType", 4194304, 1256);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = new Node(56, 57, 1);
      node0.addChildToFront(node1);
      Node node2 = new Node(42, node0, node0);
      Node node3 = null;
      Node node4 = null;
      try {
        node4 = new Node(8, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test541()  throws Throwable  {
      Node node0 = new Node((-537), (-537), (-537));
      node0.getJSDocInfo();
      Node node1 = new Node((-537), node0, node0, node0, node0, 1610612736, (-1013));
      node1.isTrue();
      node1.isEquivalentToShallow(node0);
      node1.isDo();
      node1.isParamList();
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      node1.setLineno(36);
      node0.addChildrenToFront(node2);
      node0.isNE();
  }

  @Test(timeout = 4000)
  public void test542()  throws Throwable  {
      String string0 = "com.google.javascript.rhino.jstype.StringType";
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.StringType", 4194304, 1287);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      node0.getInputId();
      node0.setInputId((InputId) null);
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test543()  throws Throwable  {
      Node node0 = new Node(43);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(43, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags0.setAllFlags();
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.isEquivalentTo((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test544()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, 0, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.isThis();
      node0.setVarArgs(false);
      Node node1 = new Node(36, node0, node0);
      node0.isFromExterns();
      node1.getSourceFileName();
      Node node2 = null;
      try {
        node2 = new Node(15, node1, node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test545()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 144, 144);
      node0.putIntProp(144, 29);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1929);
      node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.setAllFlags();
      node0.isContinue();
      Node node1 = Node.newString(4930, "I<+@}>z\"Kh+E^Z");
      node1.getLineno();
      // Undeclared exception!
      try { 
        node1.toString(true, false, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 4930
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test546()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      node0.getAncestors();
      node0.isComma();
      node0.isFunction();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test547()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      int int0 = 60;
      Node node0 = new Node(12, (-527), 60);
      node0.setType(112);
      node0.isNumber();
      // Undeclared exception!
      try { 
        node0.getAncestor((-400));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test548()  throws Throwable  {
      double double0 = 1501.0;
      int int0 = 0;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte) (-24);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte) (-54);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = new Node((byte)126, (byte) (-24), (byte)1);
      node0.isThis();
      Node node1 = new Node((-537));
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test549()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(62, node0, node0);
      node1.setType(197);
      node1.getChildBefore(node0);
      SimpleErrorReporter simpleErrorReporter1 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter1, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((JSType[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test550()  throws Throwable  {
      Node node0 = new Node(13, 13, 13);
      Node node1 = Node.newNumber((double) 30, 46, 2852);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      node1.isThis();
      node0.isNot();
      Node node2 = new Node(16, node0, node1, node1, node1, (-677), (-1693));
      node2.getDirectives();
      node0.getChangeTime();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node2.getSourcePosition();
      node0.wasEmptyNode();
      node0.getAncestors();
      node2.isComma();
      node2.isFunction();
      node0.getIntProp(48);
  }

  @Test(timeout = 4000)
  public void test551()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(65535, nodeArray0, 79, 1065);
      Node node1 = Node.newNumber((-136.05288858333478), 32, 49);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      node1.getSourceOffset();
      ObjectType.cast((JSType) null);
      node1.putBooleanProp((-3724), false);
      node0.isDefaultCase();
      node0.setSourceEncodedPositionForTree((-1516));
      node0.isEmpty();
      node0.isAnd();
  }

  @Test(timeout = 4000)
  public void test552()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(13, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      node0.getAncestors();
      Node node1 = new Node(1065, node0, node0);
      node1.getLastChild();
      int int0 = Node.LAST_PROP;
      node0.isBreak();
  }

  @Test(timeout = 4000)
  public void test553()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("originalname", 1065, 12);
      nodeArray0[0] = node0;
      Node node1 = new Node(12, nodeArray0, 2200, 38);
      Node node2 = Node.newNumber(0.0, 29, 461845907);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, false);
      Node node3 = new Node(86, 55, (-1));
      node1.getSideEffectFlags();
      node0.toStringTree();
      node1.getSourceFileName();
      node2.isEquivalentToTyped(node0);
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test554()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2092));
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newString("QWeJvk'");
      node0.children();
      node0.getBooleanProp((-2092));
      node0.isContinue();
      node0.isFor();
      node0.isDec();
      node0.toStringTree();
      node0.isDelProp();
      node0.isString();
      Node.SideEffectFlags node_SideEffectFlags3 = new Node.SideEffectFlags((-10));
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags1.clearAllFlags();
      node_SideEffectFlags4.setThrows();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags3.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags6.setAllFlags();
  }

  @Test(timeout = 4000)
  public void test555()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, 0, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.isThis();
      node0.isNot();
      Node node1 = new Node(1002, node0, node0, node0, node0, 111, 1);
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.getSourcePosition();
      node1.wasEmptyNode();
      node1.getAncestors();
      node0.isComma();
      node1.isFunction();
      node0.isNull();
  }

  @Test(timeout = 4000)
  public void test556()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(13, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(13);
      node_SideEffectFlags0.setAllFlags();
      node0.isContinue();
      node0.getLineno();
      node0.toString(false, false, false);
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test557()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(301, (Node) null, 301, 557);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test558()  throws Throwable  {
      Node node0 = Node.newString(105, "com.google.javascript.rhino.jstype.NumberType");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      node1.isOnlyModifiesThisCall();
      node0.isFromExterns();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node1.isDefaultCase();
      node0.isName();
  }

  @Test(timeout = 4000)
  public void test559()  throws Throwable  {
      Node node0 = Node.newString(44, "f", 42, 108);
      node0.isSyntheticBlock();
      Node node1 = new Node(56, 8, 51);
      node0.getSideEffectFlags();
      // Undeclared exception!
      try { 
        node1.toStringTree();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 56
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test560()  throws Throwable  {
      Node node0 = Node.newString(">YSQW`~MuhJ\"a*G");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1507);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.setAllFlags();
      node0.isContinue();
      node0.getLineno();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isIn();
      Node node1 = new Node(38, node0, node0, node0, node0, 64, 40);
      Node node2 = Node.newNumber((double) 30);
      // Undeclared exception!
      try { 
        node0.addChildBefore(node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The existing child node of the parent should not be null.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test561()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.areAllFlagsSet();
      Node node1 = Node.newString("no next sibling.", 51, 30);
      node0.getSourceOffset();
      Node node2 = Node.newString("]P4;F1", (-3093), 4095);
      Node[] nodeArray0 = new Node[7];
      Node node3 = new Node(57, node1, 8, 793);
      nodeArray0[0] = node3;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node1;
      nodeArray0[4] = node2;
      nodeArray0[5] = node1;
      Node node4 = Node.newString("Yq(fMXkcut5w1Fb6N");
      nodeArray0[6] = node4;
      Node node5 = null;
      try {
        node5 = new Node((-712), nodeArray0, 44, 39);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test562()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(13, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(13);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node1 = new Node(1, node0, node0, node0, node0, 16, 31);
      node0.checkTreeTypeAwareEqualsImpl(node1);
      node0.getSourcePosition();
      node0.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test563()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(13, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      node0.getAncestors();
      Node node1 = new Node(1065, node0, node0);
      node0.isEquivalentTo(node1);
      node1.hasMoreThanOneChild();
      // Undeclared exception!
      try { 
        node0.getChildAtIndex(12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test564()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      Node node1 = new Node(62, node0, node0);
      Node node2 = Node.newString(112, "com.google.javascript.rhino.jstype.NumberType", 49, 36);
      node2.isOnlyModifiesArgumentsCall();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      JSTypeNative[] jSTypeNativeArray0 = new JSTypeNative[5];
      JSTypeNative jSTypeNative0 = JSTypeNative.DATE_FUNCTION_TYPE;
      jSTypeNativeArray0[0] = jSTypeNative0;
      JSTypeNative jSTypeNative1 = JSTypeNative.NUMBER_STRING;
      jSTypeNativeArray0[1] = jSTypeNative1;
      JSTypeNative jSTypeNative2 = JSTypeNative.BOOLEAN_TYPE;
      jSTypeNativeArray0[2] = jSTypeNative2;
      JSTypeNative jSTypeNative3 = JSTypeNative.ALL_TYPE;
      jSTypeNativeArray0[3] = jSTypeNative3;
      JSTypeNative jSTypeNative4 = JSTypeNative.NULL_TYPE;
      jSTypeNativeArray0[4] = jSTypeNative4;
      JSType jSType0 = jSTypeRegistry0.createUnionType(jSTypeNativeArray0);
      ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0, jSType0, jSType0);
      Node node3 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);
      node3.getJsDocBuilderForNode();
      node1.isBlock();
      node0.getLastChild();
      int int0 = Node.LAST_PROP;
      node3.isBreak();
      Node.newNumber((double) 54);
  }

  @Test(timeout = 4000)
  public void test565()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2092));
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newString("QWeJvk'");
      node0.children();
      node0.getBooleanProp((-2092));
      node0.isContinue();
      node0.isFor();
      node0.isDec();
      Node.extractLineno(0);
      node0.isCast();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node1 = new Node(0, node0, 2, 32);
      node0.addChildrenToBack(node1);
      node0.hasChildren();
      Node node2 = new Node(49, 2, 29);
      node2.isQuotedString();
      node0.isEquivalentTo(node2);
      node2.hasMoreThanOneChild();
      Node node3 = new Node(42, 38, 29);
  }

  @Test(timeout = 4000)
  public void test566()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("Yq(fMXkcut5w1Fb6N", "Yq(fMXkcut5w1Fb6N", 52, 102);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      Node[] nodeArray0 = new Node[0];
      Node node1 = new Node((-289), nodeArray0);
      node0.isSyntheticBlock();
      node0.getLength();
  }

  @Test(timeout = 4000)
  public void test567()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, 0, 0);
      node0.isThis();
      node0.setType(0);
      node0.isSyntheticBlock();
      node0.getAncestor(43);
      node0.isNot();
      node0.setType(46);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      try { 
        node0.setString("Object#Element");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // SHNE 0 is not a string node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test568()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, 0, 0);
      node0.isThis();
      node0.isNot();
      Node node1 = new Node(1002, node0, node0, node0, node0, 111, 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:O[mO,hW54A+gOI");
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      // Undeclared exception!
      try { 
        node1.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1002
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test569()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(13, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      Node node1 = null;
      try {
        node1 = new Node(0, node0, node0, (Node) null, (Node) null, 8, 55);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test570()  throws Throwable  {
      Node node0 = Node.newString(">YSQW`~MuhJ\"a*G");
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1507);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags2.setAllFlags();
      node0.isContinue();
      node0.getLineno();
      node0.toString(false, true, false);
      node0.isComma();
  }

  @Test(timeout = 4000)
  public void test571()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node node0 = Node.newString((-895), "@<l-(T`%}", 620, (-1516));
      node0.isSyntheticBlock();
      node0.isOnlyModifiesThisCall();
      node0.getQualifiedName();
      node0.setCharno((-3098));
      node0.getInputId();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setString("=Bt:ZPjiO5gQ;rV]");
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage0("duplicate child");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property duplicate child
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test572()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, 0, 0);
      node0.isThis();
      node0.setType(0);
      node0.isNumber();
      node0.getAncestor(43);
      node0.isReturn();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node node1 = new Node(37, 37, 40);
      node0.getSideEffectFlags();
      node1.toStringTree();
      node1.getSourceFileName();
      // Undeclared exception!
      try { 
        node1.isEquivalentToTyped((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test573()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, 0, 0);
      node0.isThis();
      node0.isNot();
      Node node1 = new Node(1002, node0, node0, node0, node0, 111, 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:O[mO,hW54A+gOI");
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.getSourcePosition();
      node1.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.iterator();
      node0.isIn();
      // Undeclared exception!
      try { 
        node1.addChildBefore(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test574()  throws Throwable  {
      Node node0 = new Node((-1768), (-537), (-537));
      node0.getJSDocInfo();
      Node node1 = new Node((-537), node0, node0, node0, node0, 1610612736, (-1013));
      node1.isTrue();
      node0.isArrayLit();
      node1.isDo();
      node1.isParamList();
      node0.useSourceInfoIfMissingFromForTree(node1);
      node1.removeFirstChild();
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test575()  throws Throwable  {
      Node node0 = new Node(13);
      Node node1 = Node.newString("Xy<", 38, 3832);
      Node node2 = new Node(54);
      node2.setIsSyntheticBlock(true);
      Node node3 = new Node(48);
      Node node4 = new Node(16, node0);
      // Undeclared exception!
      try { 
        node4.replaceChild(node3, node1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // node is not a child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test576()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(13, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      node0.getAncestors();
      Node node1 = new Node(1065, node0, node0);
      node0.isEquivalentTo(node1);
      node1.hasMoreThanOneChild();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      nodeArray0[2] = node1;
      nodeArray0[3] = node0;
      Node node2 = null;
      try {
        node2 = new Node(47, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // duplicate child
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test577()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2770));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.setMutatesGlobalState();
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(0, (Node) null, (Node) null, (Node) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test578()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2092));
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newString("QWeJvk'");
      node0.children();
      node0.getBooleanProp((-2092));
      node0.isContinue();
      node0.isAssignAdd();
      node0.isQuotedString();
      Node.extractLineno(0);
      Node node1 = Node.newString(55, "QWeJvk'", (-194), 2617);
      node1.isOnlyModifiesArgumentsCall();
      node0.getJsDocBuilderForNode();
      node1.isBlock();
      node0.getLastChild();
      int int0 = Node.LAST_PROP;
      node1.isBreak();
  }

  @Test(timeout = 4000)
  public void test579()  throws Throwable  {
      Node node0 = new Node(972);
      Node node1 = Node.newString("MHDS(4}WjAek>an>|", 0, 50);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(407);
      Node node3 = new Node(148, 39, 32);
      Node node4 = new Node(16, node0, node0, node3, 53, 3);
      Node node5 = new Node(31, 1541, 57);
      node1.getSideEffectFlags();
      node5.toStringTree();
      node4.getSourceFileName();
      Node node6 = new Node(2539535, node2, node1, (-1137), 3);
      node6.isEquivalentToTyped(node0);
      node1.isSetterDef();
  }

  @Test(timeout = 4000)
  public void test580()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags2.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setThrows();
      node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newString("QWeJvk'");
      node0.hasChildren();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test581()  throws Throwable  {
      Node node0 = new Node((-537), (-537), (-537));
      node0.getJSDocInfo();
      Node node1 = new Node((-537), node0, node0, node0, node0, 1610612736, (-1013));
      node1.isTrue();
      node1.isEquivalentToShallow(node0);
      node1.isDo();
      node1.isParamList();
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      node1.setLineno(36);
      node0.addChildrenToFront(node2);
  }

  @Test(timeout = 4000)
  public void test582()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2770));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags6 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags3.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags7 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags8 = node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      node_SideEffectFlags8.setThrows();
      Node.SideEffectFlags node_SideEffectFlags9 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags7.setMutatesArguments();
      node_SideEffectFlags6.setMutatesThis();
      node_SideEffectFlags9.setReturnsTainted();
      Node node0 = new Node(1317, 38, 38);
      node0.setLineno((-2770));
      Node node1 = Node.newString(48, "peH]gY24!rz]R-\"", 195, 105);
      node0.addChildrenToFront(node1);
      node1.siblings();
  }

  @Test(timeout = 4000)
  public void test583()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(13, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.isDefaultCase();
  }

  @Test(timeout = 4000)
  public void test584()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = new Node((-480));
      node0.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        node0.getAncestor((-480));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test585()  throws Throwable  {
      Node node0 = Node.newString(195, "\n", 195, 2617);
      node0.getString();
      node0.isArrayLit();
      // Undeclared exception!
      try { 
        node0.srcrefTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test586()  throws Throwable  {
      Node node0 = new Node((-537));
      node0.getJSDocInfo();
      Node node1 = new Node((-537), node0, node0, node0, node0, 49, (-1013));
      node1.isTrue();
      node1.isDo();
      Node node2 = new Node(47);
      node1.replaceChild(node0, node2);
      Node node3 = null;
      try {
        node3 = new Node(47, node2, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // first new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test587()  throws Throwable  {
      Node node0 = new Node(972);
      Node node1 = Node.newString("MHDS(4}WjAek>an>|", 0, 50);
      node1.setIsSyntheticBlock(false);
      node0.isParamList();
      node0.removeFirstChild();
      // Undeclared exception!
      try { 
        node1.checkTreeEqualsImpl((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test588()  throws Throwable  {
      Node node0 = Node.newNumber(487.34407911);
      node0.setLineno(0);
      CharBuffer charBuffer0 = CharBuffer.allocate(51);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      // Undeclared exception!
      try { 
        node0.appendStringTree(charBuffer1);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test589()  throws Throwable  {
      Node node0 = Node.newString(5760, "@<l-(T`%}", 620, 15);
      node0.isSyntheticBlock();
      node0.isOnlyModifiesThisCall();
      node0.getQualifiedName();
      node0.setCharno((-618));
      node0.getInputId();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      node0.setString("duplicate child");
      // Undeclared exception!
      try { 
        SimpleErrorReporter.getMessage0("@<l-(T`%}");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property @<l-(T`%}
         //
         verifyException("com.google.javascript.rhino.SimpleErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test590()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, 0, 0);
      node0.isThis();
      node0.isNot();
      Node node1 = new Node(1002, node0, node0, node0, node0, 111, 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p:O[mO,hW54A+gOI");
      node1.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      node1.getSourcePosition();
      node1.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = node1.getAncestors();
      node_AncestorIterable0.iterator();
      node0.toString();
      node0.isWhile();
  }

  @Test(timeout = 4000)
  public void test591()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      simpleErrorReporter0.warning("Yq(fMXkcut5w1Fb6N", "Yq(fMXkcut5w1Fb6N", 52, 102);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(53);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags0.setAllFlags();
      node0.isContinue();
      node0.getStaticSourceFile();
  }

  @Test(timeout = 4000)
  public void test592()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setAllFlags();
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("originalname", 1065, 12);
      nodeArray0[0] = node0;
      Node node1 = new Node(12, nodeArray0, 2200, 38);
      Node node2 = Node.newNumber(0.0, 29, 461845907);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ObjectType.cast((JSType) null);
      JSType.toMaybeFunctionType((JSType) null);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("Unknown class name", node2, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test593()  throws Throwable  {
      Node node0 = new Node((-1768), (-537), (-537));
      node0.getJSDocInfo();
      Node node1 = new Node((-537), node0, node0, node0, node0, 1610612736, (-1013));
      node1.isTrue();
      node1.isNumber();
      node1.isDo();
      node1.isParamList();
      int int0 = 0;
      node1.removeFirstChild();
      // Undeclared exception!
      try { 
        node0.removeChild(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test594()  throws Throwable  {
      Node node0 = new Node((-1768), (-537), (-537));
      node0.getJSDocInfo();
      Node node1 = new Node((-537), node0, node0, node0, node0, 1610612736, (-1013));
      node1.isTrue();
      node1.isEquivalentToShallow(node0);
      node1.isDo();
      node1.isParamList();
      Node node2 = node1.useSourceInfoFrom(node0);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesArguments();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      node1.setLineno(36);
      node0.addChildrenToFront(node2);
      node1.siblings();
  }

  @Test(timeout = 4000)
  public void test595()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2092));
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newString("QWeJvk'");
      node0.children();
      node0.getBooleanProp((-2092));
      node0.isContinue();
      node0.isAssignAdd();
      node0.isQuotedString();
      Node.extractLineno(0);
      node0.isCast();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node1 = new Node(0, node0, 2, 32);
      node0.addChildrenToBack(node1);
      node0.hasChildren();
      Node node2 = new Node(49, 2, 29);
      Node.AncestorIterable node_AncestorIterable0 = node2.getAncestors();
      node_AncestorIterable0.iterator();
      node2.toString();
  }

  @Test(timeout = 4000)
  public void test596()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(13, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      node0.getAncestors();
      Node node1 = new Node(1065, node0, node0);
      node0.isEquivalentTo(node1);
      node1.hasMoreThanOneChild();
      node1.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test597()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2092));
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newString("QWeJvk'");
      node0.children();
      node0.getBooleanProp((-2092));
      node0.isContinue();
      node0.isAssignAdd();
      node0.isDec();
      Node.extractLineno(0);
      node0.isCast();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node1 = new Node(0, node0, 2, 32);
      node0.addChildrenToBack(node1);
      node0.hasChildren();
      Node node2 = new Node(49, 2, 29);
      node0.isEquivalentTo(node2);
      node2.hasMoreThanOneChild();
      node2.isOnlyModifiesArgumentsCall();
  }

  @Test(timeout = 4000)
  public void test598()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 144, 144);
      Node node1 = Node.newString(105, "com.google.javascript.rhino.jstype.NumberType");
      node0.setVarArgs(true);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node2 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);
      Node node3 = new Node(8, node0, node2);
      node1.isFromExterns();
      Node node4 = node3.getChildBefore(node2);
      Node node5 = null;
      try {
        node5 = new Node(120, node3, node2, node4, 31, 120);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test599()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      Node node0 = Node.newString(44, "f", 42, 108);
      node0.isSyntheticBlock();
      node0.isOnlyModifiesThisCall();
      node0.getQualifiedName();
      node0.setCharno(71);
      node0.getInputId();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      Node node1 = null;
      try {
        node1 = new Node(48, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test600()  throws Throwable  {
      Node node0 = new Node(13);
      Node node1 = Node.newString("1v<.V~");
      node1.getJsDocBuilderForNode();
      node1.getBooleanProp(10);
      node1.isQuotedString();
      int int0 = 87;
      Node node2 = new Node(87, node0);
      node0.isEquivalentToTyped(node1);
      // Undeclared exception!
      try { 
        Node.newString(38, (String) null, 51, 148);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test601()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "no next sibling.");
      Node node0 = Node.newNumber(0.0, 30, 30);
      node0.getStaticSourceFile();
      node0.setStaticSourceFile((StaticSourceFile) null);
      node0.setSourceEncodedPosition((-565));
  }

  @Test(timeout = 4000)
  public void test602()  throws Throwable  {
      String string0 = null;
      int int0 = 605;
      // Undeclared exception!
      try { 
        Node.newString((String) null, 605, 605);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test603()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesThis();
      node_SideEffectFlags3.setMutatesThis();
      node_SideEffectFlags2.clearAllFlags();
      node_SideEffectFlags0.clearAllFlags();
      node_SideEffectFlags2.setMutatesArguments();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.setThrows();
      node_SideEffectFlags4.setThrows();
      node_SideEffectFlags4.clearSideEffectFlags();
      Node node0 = Node.newString(1, "KN]K]DgQ>VXb:iR", 154, 1);
      Node node1 = Node.newString("", (-105), 16);
      Node node2 = node0.useSourceInfoFrom(node1);
      Node node3 = new Node(1, node0, node0, node0, 2720, (-105));
      Node node4 = node3.srcrefTree(node0);
      Node.newString(0, "");
      node4.setCharno(1732);
      node3.type = 42;
      node4.isTrue();
      node4.isFalse();
      node3.getProp(3794);
      node3.isAssign();
      node4.isQualifiedName();
      node3.isGetElem();
      node0.setWasEmptyNode(false);
      node2.getAncestors();
      node4.isVarArgs();
      assertEquals((-1), node0.getSourcePosition());
      assertEquals((-1), node0.getCharno());
      
      node3.isInstanceOf();
  }

  @Test(timeout = 4000)
  public void test604()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2092));
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newString("QWeJvk'");
      node0.children();
      node0.getBooleanProp((-2092));
      node0.isContinue();
      node0.isAssignAdd();
      node0.isQuotedString();
      Node.extractLineno(0);
      node0.isCast();
      node_SideEffectFlags0.setMutatesGlobalState();
      Node node1 = new Node(0, node0, 2, 32);
      node0.addChildrenToBack(node1);
      node0.hasChildren();
      Node node2 = new Node(49, 2, 29);
      node0.isEquivalentTo(node2);
      node2.hasMoreThanOneChild();
      node2.isOnlyModifiesArgumentsCall();
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test605()  throws Throwable  {
      Node node0 = Node.newString(">YSQW`~MuhJ\"a*G");
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      node_AncestorIterable0.forEach(consumer0);
      node_AncestorIterable0.iterator();
      node_AncestorIterable0.iterator();
  }

  @Test(timeout = 4000)
  public void test606()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(65535, nodeArray0, 79, 1065);
      Node node1 = Node.newNumber((-137.43368710072102), 32, 49);
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      ObjectType.cast((JSType) null);
      JSType.toMaybeFunctionType((JSType) null);
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry1.createEnumType("SiAS+zvi+", node1, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test607()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags1.setThrows();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.areAllFlagsSet();
      Node node0 = Node.newString("no next sibling.", 0, 0);
      node0.getSourceOffset();
      Node node1 = Node.newString("p:O[mO,hW54A+gOI", (-1570), 0);
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test608()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 144, 144);
      node0.putBooleanProp(144, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      node_SideEffectFlags3.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 144
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test609()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putIntProp(102, (-437));
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test610()  throws Throwable  {
      String string0 = "D{fe4\\>k1ne: ,qvs";
      Node node0 = Node.newString("D{fe4>k1ne: ,qvs", 623, 623);
      Node node1 = Node.newString(55, "D{fe4>k1ne: ,qvs");
      String string1 = "/b";
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test611()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2092));
      node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags0.setMutatesThis();
      node_SideEffectFlags1.clearSideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setAllFlags();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node0 = Node.newString("QWeJvk'");
      node0.children();
      Node node1 = new Node(40);
      node0.isEquivalentToTyped(node1);
      Node node2 = Node.newString(1131, "5m)b!DhVu:7}W-KGBK", 36, 4095);
      node2.getBooleanProp(1);
      node1.getAncestor(49);
      node2.useSourceInfoIfMissingFrom(node0);
      node1.getStaticSourceFile();
      node0.cloneTree();
  }

  @Test(timeout = 4000)
  public void test612()  throws Throwable  {
      int int0 = (-2377);
      Node node0 = Node.newNumber((double) (-2377), (-2377), 129);
      node0.isNoSideEffectsCall();
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test613()  throws Throwable  {
      Node node0 = Node.newString(">YSQW`~MuhJ\"a*G");
      node0.isIn();
  }

  @Test(timeout = 4000)
  public void test614()  throws Throwable  {
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node(0, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test615()  throws Throwable  {
      Node node0 = new Node((-169));
      node0.isOnlyModifiesThisCall();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      node_SideEffectFlags1.valueOf();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "";
      // Undeclared exception!
      try { 
        FunctionType.getTopDefiningInterface((ObjectType) null, "com.google.common.collect.ImmutableList");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.FunctionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test616()  throws Throwable  {
      Node node0 = new Node(972);
      Node node1 = Node.newString("MHDS(4}WjAek>an>|", 0, 50);
      node1.setIsSyntheticBlock(false);
      Node node2 = new Node(407);
      // Undeclared exception!
      try { 
        node0.replaceChild(node2, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test617()  throws Throwable  {
      Node node0 = Node.newNumber((double) 2363, 2363, 2363);
      Node node1 = new Node(57, node0, node0, node0);
      node0.setChangeTime(32);
      Node node2 = null;
      try {
        node2 = new Node(2363, node0, node0, node1, node1, 108, 50);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test618()  throws Throwable  {
      int int0 = 306;
      int int1 = 0;
      // Undeclared exception!
      try { 
        Node.newString(0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test619()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      String string0 = "com.google.javascript.rhino.Node$SiblingNodeIterable";
      JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);
      JSType jSType0 = modificationVisitor0.caseAllType();
      JSType jSType1 = jSType0.collapseUnion();
      jSType0.matchesNumberContext();
      jSType0.getDisplayName();
      Node[] nodeArray0 = new Node[7];
      Node node0 = Node.newString(21, "<Any Type>", 21, 0);
      nodeArray0[0] = node0;
      JSType[] jSTypeArray0 = new JSType[0];
      Node node1 = jSTypeRegistry1.createParametersWithVarArgs(jSTypeArray0);
      nodeArray0[1] = node1;
      Node node2 = new Node(2446, node0, node0, node0);
      nodeArray0[2] = node2;
      JSType[] jSTypeArray1 = new JSType[3];
      jSTypeArray1[0] = jSType0;
      jSTypeArray1[1] = jSType1;
      jSTypeArray1[2] = jSType0;
      Node node3 = jSTypeRegistry0.createParameters(jSTypeArray1);
      nodeArray0[3] = node3;
      Node node4 = null;
      try {
        node4 = new Node(57, node3, node0, node1, 1448, (-2104));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test620()  throws Throwable  {
      int int0 = (-213);
      int int1 = (-2332);
      Node node0 = Node.newNumber(0.0);
      Node node1 = new Node((-919), node0, node0, 24, (-2144));
      node1.getBooleanProp(31);
      Node node2 = null;
      try {
        node2 = new Node((-1565), node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test621()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      Node node1 = null;
      // Undeclared exception!
      try { 
        node0.useSourceInfoFromForTree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test622()  throws Throwable  {
      Node node0 = new Node(308, (-1472), 308);
      Node node1 = new Node((-1472), node0, node0, node0, node0);
      boolean boolean0 = false;
      node1.setIsSyntheticBlock(false);
      Node node2 = node1.clonePropsFrom(node0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("n>NWFy:?HC");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) node2;
      objectArray0[1] = (Object) node1;
      objectArray0[2] = (Object) "n>NWFy:?HC";
      objectArray0[3] = (Object) node0;
      node0.getProp(Integer.MIN_VALUE);
      objectArray0[4] = null;
      objectArray0[5] = (Object) node1;
      objectArray0[6] = (Object) mockPrintStream0;
      PrintStream printStream0 = mockPrintStream0.format("n>NWFy:?HC", objectArray0);
      // Undeclared exception!
      try { 
        node2.appendStringTree(printStream0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1472
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test623()  throws Throwable  {
      Node node0 = Node.newNumber((-967.6170355));
      node0.isGetProp();
      node0.setVarArgs(true);
      Node node1 = new Node(86, node0, node0);
      node0.isFromExterns();
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test624()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node_SideEffectFlags1.clearSideEffectFlags();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags3.setReturnsTainted();
      node_SideEffectFlags3.areAllFlagsSet();
      Node node0 = Node.newString("no next sibling.", 0, 0);
      node0.getSourceOffset();
      Node node1 = Node.newString("p:O[mO,hW54A+gOI", (-1570), 0);
      node0.checkTreeEquals(node1);
  }

  @Test(timeout = 4000)
  public void test625()  throws Throwable  {
      int int0 = (-3034);
      JSDocInfo jSDocInfo0 = new JSDocInfo(true);
      jSDocInfo0.setInterface(false);
      jSDocInfo0.getAssociatedNode();
      Node node0 = null;
      try {
        node0 = new Node((-3034), (Node) null, (Node) null, (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test626()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 144, 144);
      node0.putIntProp(144, 29);
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test627()  throws Throwable  {
      Node.mergeLineCharNo(0, 0);
      Node node0 = Node.newString("rf)4-\"", 0, (-503));
      node0.isLocalResultCall();
      node0.isVarArgs();
      Node.newString("rf)4-\"");
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createParameters((List<JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test628()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags((-2770));
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setThrows();
      node_SideEffectFlags1.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags4 = node_SideEffectFlags3.clearAllFlags();
      node_SideEffectFlags4.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags5 = node_SideEffectFlags4.setAllFlags();
      node_SideEffectFlags2.setMutatesGlobalState();
      node_SideEffectFlags5.clearSideEffectFlags();
      node_SideEffectFlags5.setMutatesGlobalState();
      node_SideEffectFlags3.clearSideEffectFlags();
      node_SideEffectFlags2.setReturnsTainted();
      node_SideEffectFlags5.setMutatesThis();
      node_SideEffectFlags5.setReturnsTainted();
      Node node0 = Node.newNumber((double) (-2770), (-2930), 0);
      Node.AncestorIterable node_AncestorIterable0 = new Node.AncestorIterable(node0);
      node0.wasEmptyNode();
      node0.isSyntheticBlock();
      node0.removeProp(130);
      node0.setWasEmptyNode(false);
      node0.hasOneChild();
      // Undeclared exception!
      try { 
        node0.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test629()  throws Throwable  {
      // Undeclared exception!
      try { 
        Node.newString((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test630()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.rhino.jstype.StringType", 4194304, 1287);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.getAssociatedNode();
      // Undeclared exception!
      try { 
        node0.addChildToFront((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test631()  throws Throwable  {
      Node node0 = Node.newString("}");
      node0.getJsDocBuilderForNode();
      node0.getBooleanProp(438);
      node0.isQuotedString();
      Node node1 = new Node(438, node0);
      node0.getBooleanProp((-420));
      node1.isContinue();
      node1.isAssignAdd();
      node1.isQuotedString();
      Node.extractLineno(8);
      node1.isCast();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesGlobalState();
      Node node2 = Node.newNumber((-588.32423482));
      Node node3 = new Node(56, node2, (-1306797569), 730);
      // Undeclared exception!
      try { 
        node1.addChildrenToBack(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test632()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      Node node1 = new Node(122, 49, 54);
      node1.setType(49);
      node0.mayMutateGlobalStateOrThrow();
      Node node2 = new Node(48, node0, node1, node1, node1, 36, 52);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(15);
      node_SideEffectFlags0.setReturnsTainted();
      node0.isEquivalentTo(node1);
      node1.isThrow();
  }

  @Test(timeout = 4000)
  public void test633()  throws Throwable  {
      Node node0 = new Node(32);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node0.getBooleanProp(32);
      node0.isHook();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)50;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      node0.setDirectives((Set<String>) null);
      node0.children();
      Node node1 = new Node(631, node0, 47, 1);
      node0.getBooleanProp(124);
      node1.isContinue();
      node1.isScript();
      node0.isTypeOf();
      node1.isAdd();
      Node node2 = null;
      try {
        node2 = new Node(4, node1, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test634()  throws Throwable  {
      Node node0 = Node.newString(1843, "opt_arg");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Node node1 = new Node(3617, 2, 42);
      Node node2 = node1.useSourceInfoIfMissingFromForTree(node0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "opt_arg");
      node1.getChangeTime();
      node0.addChildToBack(node1);
      node1.putProp(40, node2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node3 = node0.cloneTree();
      node1.getIntProp(36);
      node3.copyInformationFrom(node0);
      node3.copyInformationFrom(node2);
      Node.newNumber(1501.0);
      Node node4 = node3.useSourceInfoIfMissingFromForTree(node0);
      node2.isDo();
      node4.getIndexOfChild(node0);
      node0.addSuppression("");
      node1.isInstanceOf();
      node0.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test635()  throws Throwable  {
      Node node0 = Node.newNumber(4093.4450284002);
      node0.toStringTree();
      node0.setOptionalArg(false);
      String string0 = ">";
      node0.putProp(309, ">");
      node0.setLineno(309);
      Node node1 = Node.newString(">");
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test636()  throws Throwable  {
      Node node0 = new Node((-1792));
      Node node1 = Node.newString("^UD", 8, 57);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.getJSType();
      node0.isEquivalentTo(node1);
      Node node3 = node2.useSourceInfoFrom(node0);
      node3.putProp((-1132), (Object) null);
      node2.addChildrenToBack(node0);
      Node node4 = Node.newNumber((double) 4095);
      node3.getChangeTime();
      node4.getIntProp(48);
      Node node5 = null;
      try {
        node5 = new Node(39, node2, node1, node2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test637()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Node node0 = Node.newString(115, "RangeError", 132, 132);
      Node node1 = Node.newNumber((double) 51);
      node1.srcref(node0);
      Node node2 = Node.newNumber((double) 29, 39, 1);
      node0.children();
      node2.isNoSideEffectsCall();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m5S");
      Node.newNumber((double) 50, 884, (-826));
      Node.newString(43, "com.google.common.base.Joiner$MapJoiner");
      node0.isEquivalentTo(node2);
      // Undeclared exception!
      try { 
        node0.detachFromParent();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test638()  throws Throwable  {
      Node node0 = new Node(43);
      node0.getDirectives();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      node_SideEffectFlags0.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      node0.getBooleanProp(43);
      node0.isContinue();
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.toStringTree();
      node0.isDelProp();
      node0.isString();
      Node.SideEffectFlags node_SideEffectFlags2 = new Node.SideEffectFlags(43);
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setMutatesThis();
      node_SideEffectFlags2.setAllFlags();
      node0.isThrow();
      node0.getBooleanProp(114);
  }

  @Test(timeout = 4000)
  public void test639()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isCase();
      node0.setType(102);
      node0.isSyntheticBlock();
      node0.isNot();
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags(1);
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setReturnsTainted();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setMutatesGlobalState();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setThrows();
      node_SideEffectFlags0.setReturnsTainted();
      node0.isTypeOf();
      Node node1 = Node.newString("6]", 43, 4362252);
      node1.getSourceOffset();
      Node node2 = Node.newString("jsdoc_info", 40, 46);
      node0.checkTreeEquals(node2);
  }

  @Test(timeout = 4000)
  public void test640()  throws Throwable  {
      Node node0 = Node.newString(323, "OJ3Ct\"Z#om");
      // Undeclared exception!
      try { 
        node0.useSourceInfoIfMissingFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test641()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0), 144, 144);
      Node node1 = Node.newString(105, "com.google.javascript.rhino.jstype.NumberType");
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      jSDocInfo0.setAssociatedNode(node1);
      node1.isUnscopedQualifiedName();
      node0.setChangeTime(43);
      node1.isSetterDef();
      node1.setType(118);
      // Undeclared exception!
      try { 
        node0.getChildBefore(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test642()  throws Throwable  {
      Node node0 = Node.newString("}");
      node0.getJsDocBuilderForNode();
      node0.getBooleanProp(438);
      node0.isQuotedString();
      Node node1 = new Node(438, node0);
      node1.isEquivalentToTyped(node0);
      Node node2 = Node.newString(438, "}", 2, 0);
      node2.getBooleanProp(0);
      node2.getAncestor(53);
      Node node3 = node2.useSourceInfoIfMissingFrom(node0);
      node3.getStaticSourceFile();
      node1.cloneTree();
  }

  @Test(timeout = 4000)
  public void test643()  throws Throwable  {
      Node node0 = new Node(118);
      Node node1 = new Node(33, node0);
      Node node2 = node0.srcrefTree(node1);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setMutatesGlobalState();
      node0.putIntProp(19, (-863));
      node_SideEffectFlags1.setReturnsTainted();
      node1.isUnscopedQualifiedName();
      node0.isQualifiedName();
      node2.isDelProp();
  }

  @Test(timeout = 4000)
  public void test644()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-108);
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte) (-94);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node node0 = Node.newString("6)~C;MQau");
      Node node1 = new Node(2720, node0, node0, node0);
      node1.useSourceInfoIfMissingFromForTree(node0);
      node1.mayMutateArguments();
      node0.copyInformationFromForTree(node1);
  }

  @Test(timeout = 4000)
  public void test645()  throws Throwable  {
      Node node0 = new Node((-1792));
      Node node1 = Node.newString("^5UD", 8, 57);
      Node node2 = node0.useSourceInfoIfMissingFromForTree(node1);
      node0.getJSType();
      node0.isEquivalentTo(node1);
      Node node3 = node2.useSourceInfoFrom(node0);
      node3.putProp((-1132), (Object) null);
      node2.addChildrenToBack(node0);
      Node node4 = Node.newNumber((double) 4095);
      node0.getChangeTime();
      node4.getIntProp(48);
      Node node5 = node0.useSourceInfoFrom(node2);
      node5.getSideEffectFlags();
      Node node6 = node2.srcref(node4);
      node0.isTypeOf();
      node5.isUnscopedQualifiedName();
      node4.isThrow();
      Node.AncestorIterable node_AncestorIterable0 = node6.getAncestors();
      Consumer<Node> consumer0 = (Consumer<Node>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      node_AncestorIterable0.forEach(consumer0);
  }

  @Test(timeout = 4000)
  public void test646()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      JSType[] jSTypeArray0 = new JSType[8];
      jSTypeRegistry0.getType("f]`y");
      JSType.toMaybeTemplatizedType((JSType) null);
      jSTypeArray0[0] = (JSType) null;
      Node node0 = Node.newNumber((double) 0);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createFromTypeNodes(node0, "Not declared as a constructor", (StaticScope<JSType>) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected node in type expression: NUMBER 0.0
         //
         verifyException("com.google.javascript.rhino.jstype.JSTypeRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test647()  throws Throwable  {
      int int0 = (-1291);
      Node node0 = null;
      Node node1 = null;
      try {
        node1 = new Node((-1291), (Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test648()  throws Throwable  {
      Node node0 = Node.newString(208, "com.google.javascript.rhino.jstype.BooleanLiteralSet", 208, 124);
      node0.isSyntheticBlock();
      node0.isOnlyModifiesThisCall();
      node0.getQualifiedName();
      node0.setCharno(124);
      node0.getInputId();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      String string0 = "z<iFwZJ -4[-~BiX";
      // Undeclared exception!
      try { 
        node0.copyInformationFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test649()  throws Throwable  {
      int int0 = 463;
      Node node0 = Node.newNumber(0.0, 463, 463);
      Node node1 = new Node(463, node0, node0);
      node0.cloneNode();
      node1.isOptionalArg();
      Node node2 = null;
      try {
        node2 = new Node(463, node1, node0, node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test650()  throws Throwable  {
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.clearAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setReturnsTainted();
      node_SideEffectFlags2.setMutatesThis();
      Node.SideEffectFlags node_SideEffectFlags3 = node_SideEffectFlags2.setThrows();
      assertFalse(node_SideEffectFlags3.areAllFlagsSet());
      
      node_SideEffectFlags3.setAllFlags();
      Node node0 = Node.newString((-3338), "Node tree inequality:\nTree1:\n", (-3338), 0);
      boolean boolean0 = node0.isQuotedString();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test651()  throws Throwable  {
      Node node0 = Node.newString("");
      node0.detachChildren();
      node0.isOnlyModifiesThisCall();
      // Undeclared exception!
      try { 
        node0.clonePropsFrom((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test652()  throws Throwable  {
      Node node0 = new Node(13);
      node0.isOnlyModifiesThisCall();
      node0.isNot();
      node0.getDirectives();
      node0.putBooleanProp(13, true);
      Node.SideEffectFlags node_SideEffectFlags0 = new Node.SideEffectFlags();
      Node.SideEffectFlags node_SideEffectFlags1 = node_SideEffectFlags0.setAllFlags();
      Node.SideEffectFlags node_SideEffectFlags2 = node_SideEffectFlags1.setThrows();
      node_SideEffectFlags2.setMutatesGlobalState();
      node0.getSourcePosition();
      node0.wasEmptyNode();
      Node.AncestorIterable node_AncestorIterable0 = node0.getAncestors();
      node_AncestorIterable0.iterator();
      // Undeclared exception!
      try { 
        node0.toString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // unexpected prop id 13
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test653()  throws Throwable  {
      Node node0 = Node.newNumber(1501.0, 0, 0);
      node0.isThis();
      node0.setType(0);
      node0.isSyntheticBlock();
      node0.getAncestor(43);
      node0.isReturn();
      node0.isNot();
      int int0 = 0;
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("com.google.common.base.SmallCharMatcher", (Node) null, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test654()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      // Undeclared exception!
      try { 
        ImmutableList.copyOf((Iterable<? extends JSType>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test655()  throws Throwable  {
      Node node0 = Node.newNumber(1.0);
      assertEquals((-1), node0.getLineno());
      
      node0.setLineno(1048576);
      assertEquals(0, node0.getLineno());
  }

  @Test(timeout = 4000)
  public void test656()  throws Throwable  {
      Node node0 = Node.newString("D{fe4>k1ne: ,qvs", 623, 41);
      Node node1 = new Node(623, node0, (-2052), 12);
      String string0 = "/b";
      // Undeclared exception!
      try { 
        node1.replaceChildAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The new child node already has a parent.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test657()  throws Throwable  {
      Node node0 = new Node((-1768), (-537), (-537));
      node0.getJSDocInfo();
      Node node1 = new Node((-537), node0, node0, node0, node0, 1610612736, (-1013));
      node1.isTrue();
      node1.isEquivalentToShallow(node0);
      node1.isDo();
      node1.isParamList();
      int int0 = 0;
      Node node2 = node1.removeFirstChild();
      node2.checkTreeEqualsImpl(node1);
      // Undeclared exception!
      try { 
        node0.setString("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1768
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test658()  throws Throwable  {
      int int0 = 0;
      Node[] nodeArray0 = new Node[3];
      Node node0 = null;
      try {
        node0 = new Node(126, nodeArray0, 65535, 126);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }
}
